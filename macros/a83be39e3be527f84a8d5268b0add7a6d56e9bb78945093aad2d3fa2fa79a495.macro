Attribute VB_Name = "A1_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Public Function NoData(ByVal X As Variant) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd|.|fffd|. |fffd||fffd| Null |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If IsNull(X) Then
        NoData = True
      ElseIf X = "" Then
        NoData = True
      Else
        NoData = False
      End If
End Function


Attribute VB_Name = "API_Comm"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Comm.
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: DCB, COMMTIMEOUTS |fffd| OVERLAPPED
'
Private InPolling As Boolean

Private Const InpQueSize = 512  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Const OutQueSize = 128  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Const InpBufSize = 512  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Private Const OutBufSize = 128  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

Private Const EventMask = &H1FF ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Private nPort As Long           ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Private hPort As Long           ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

Private PortDCB As DCB          ' DCB |fffd||fffd||fffd||fffd||fffd|
Private PortTOs As COMMTIMEOUTS ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|

Private OverTr As OVERLAPPED, InWaitTr As Boolean
Private OverRs As OVERLAPPED, InWaitRs As Boolean
Private OverEv As OVERLAPPED, InWaitEv As Boolean

Private InpBuffer(0 To InpBufSize - 1) As Byte
Private OutBuffer(0 To OutBufSize - 1) As Byte
Private DataToWrite As Long
Private DataWritten As Long
Private DataRead As Long
Private EventResults As Long


' ******************************
' * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
' ******************************
Private Sub Class_Initialize()
Dim i As Integer
    PortDCB.DCBlength = Len(PortDCB)
        OverTr.hEvent = CreateEvent(0, True, False, vbNullString)
        OverRs.hEvent = CreateEvent(0, True, False, vbNullString)
        OverEv.hEvent = CreateEvent(0, True, False, vbNullString)
End Sub

Private Sub Class_Terminate()
Dim i As Integer
    Call CloseComm
    CloseHandle (OverTr.hEvent)
    CloseHandle (OverRs.hEvent)
    CloseHandle (OverEv.hEvent)
End Sub

' ************
' * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
' ************
Public Sub GetTimeouts()
        If hPort = 0 Then Exit Sub
    Call GetCommTimeouts(hPort, PortTOs)
End Sub

Public Function SetTimeouts() As Long
        If hPort = 0 Then Exit Function
    SetTimeouts = SetCommTimeouts(hPort, PortTOs) <> 0
End Function


' ***********************
' * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
' ***********************
Public Function OpenComm(CommName As String) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If hPort <> 0 Then CloseComm
    hPort = CreateFile(CommName, GENERIC_READ Or GENERIC_WRITE, 0, 0, OPEN_EXISTING, FILE_FLAG_OVERLAPPED, 0)
    If hPort = INVALID_HANDLE_VALUE Then
        OpenComm = 1
        Exit Function
      End If
      
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call SetupComm(hPort, 2048, 256)
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|
    GetTimeouts
        PortTOs.ReadIntervalTimeout = 1
        PortTOs.ReadTotalTimeoutMultiplier = 0
        PortTOs.ReadTotalTimeoutConstant = 10
        PortTOs.WriteTotalTimeoutMultiplier = 2
        PortTOs.WriteTotalTimeoutConstant = 10
    SetTimeouts
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| DCB
    GetState
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    SetCommMask hPort, EventMask
'    StartInput
End Function

' Close the comm port
Public Function CloseComm() As Long
    ' Already closed, just exit
        If hPort = 0 Then Exit Function
    CloseHandle hPort
    hPort = 0
End Function


' ****************
' * |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| DCB *
' ****************
Public Function BuildDCB(Mode As String) As Long
    BuildDCB = BuildCommDCB(Mode, PortDCB)
End Function

Public Function GetState() As Long
        If hPort = 0 Then Exit Function
    GetState = GetCommState(hPort, PortDCB)
End Function

Public Function SetState() As Long
        If hPort = 0 Then Exit Function
    SetState = SetCommState(hPort, PortDCB)
End Function

Public Function GetFlags() As Long
    GetFlags = PortDCB.Flags
End Function


' ************
' * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
' ************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Public Function Output(Q As Variant) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Long, k As Long
    Output = 1
        If hPort = 0 Then Exit Function ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Output = 2
        If InWaitTr Then Exit Function  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Output = 3
        If IsNull(Q) Then Exit Function ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    k = LenB(Q)
        If k = 0 Then Exit Function     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Output = 4
        If k > OutBufSize Then Exit Function    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

    DataToWrite = k
    For i = 0 To k - 1
        OutBuffer(i) = Q(i)
      Next i
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Output = 0
    i = WriteFile(hPort, OutBuffer(0), DataToWrite, DataWritten, OverTr)
    If i <> 0 Then
        TrDone                      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      ElseIf GetLastError() = ERROR_IO_PENDING Then
        InWaitTr = True             ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
      Else
        Output = 5                  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| WriteFile
      End If
End Function

Private Sub TrWait()
Dim i As Long
        If Not InWaitTr Then Exit Sub
    i = WaitForSingleObject(OverTr.hEvent, 0)
    If i = 0 Then
        TrDone
      ElseIf i <> WAIT_TIMEOUT Then
        ' |fffd||fffd||fffd||fffd||fffd||fffd| WaitForSingleObject
      End If
End Sub

Private Sub TrDone()
    InWaitTr = False
    GetOverlappedResult hPort, OverTr, DataWritten, 0
    If DataWritten = DataToWrite Then
        ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Else
        ' |fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      End If
End Sub


' *********
' * |fffd||fffd||228||fffd| *
' *********
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| Client.CommInput
Private Sub StartInput()
Dim i As Long
        If InWaitRs Then Exit Sub
        If hPort = 0 Then Exit Sub
    i = ReadFile(hPort, InpBuffer(0), InpBufSize, DataRead, OverRs)
    If i <> 0 Then
        RsDone
      ElseIf GetLastError() = ERROR_IO_PENDING Then
        InWaitRs = True
      Else
            ' |fffd||fffd||fffd||fffd||fffd||fffd| ReadFile
      End If
End Sub

Public Sub RsWait()
Dim i As Long
    If Not InWaitRs Then
        StartInput
        Exit Sub
    End If
        
    i = WaitForSingleObject(OverRs.hEvent, 0)
    If i = 0 Then
        RsDone
      ElseIf i <> WAIT_TIMEOUT Then
        ' |fffd||fffd||fffd||fffd||fffd||fffd| WaitForSingleObject
      End If
End Sub

Public Sub RsDone()
Dim b() As Byte
Dim Q As Variant
Dim i As Long, k As Long
    If InWaitRs Then
        DataRead = OverRs.InternalHigh
        InWaitRs = False
    End If
    If DataRead <> 0 Then
        ReDim b(0 To 127)
        For i = 0 To DataRead - 1
            b(i) = InpBuffer(i)
          Next i
        ReDim Preserve b(0 To DataRead - 1)
        Q = b
        TakePortData b
      End If
End Sub


' *************************
' * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
' *************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
Private Sub StartWatch()
Dim i As Long
        If InWaitEv Then Exit Sub
        If hPort = 0 Then Exit Sub
    EventResults = 0
    i = WaitCommEvent(hPort, EventResults, OverEv)
    If i <> 0 Then
        EvDone
      ElseIf GetLastError() = ERROR_IO_PENDING Then
        InWaitEv = True
      Else
        ' |fffd||fffd||fffd||fffd||fffd||fffd| WaitCommEvent
      End If
End Sub

Private Sub EvWait()
Dim i As Long
    If Not InWaitEv Then
        StartWatch
        Exit Sub
    End If
        
    i = WaitForSingleObject(OverEv.hEvent, 0)
    If i = 0 Then
        EvDone
      ElseIf i <> WAIT_TIMEOUT Then
        ' |fffd||fffd||fffd||fffd||fffd||fffd| WaitForSingleObject
      End If
End Sub

Private Sub EvDone()
Dim Errors As Long
    InWaitEv = False
        If EventResults = 0 Then Exit Sub
    ClearCommError hPort, Errors, 0
        If Errors = 0 Then Exit Sub
    TakePortEvent Errors
End Sub

Public Sub Poll()
    If hPort = 0 Then Exit Sub
    EvWait
    TrWait
    RsWait
End Sub


Attribute VB_Name = "API_Defs"
Option Explicit

' *** |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Declare Function GetLastError Lib "kernel32" () As Long
Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| DCB ***
Type DCB
    DCBlength As Long       ' |fffd||fffd||fffd||fffd||fffd||fffd| DCB
    BaudRate As Long        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: 110, 300, 600, 1200, 2400 |fffd| |fffd|.|fffd|.
    Flags As Long           ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    wReserved As Integer
    XonLim As Integer       ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Xon (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    XoffLim As Integer      ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Xoff (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    ByteSize As Byte        ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|: 5,6,7,8
    Parity As Byte          ' |5f8||fffd||fffd||fffd||fffd||fffd||fffd|: 0,1,2,3,4 -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| N,O,E,M,S
    StopBits As Byte        ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|: 0,1,2 -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1, 1.5 |fffd||fffd||fffd| 2
    XonChar As Byte         ' |fffd||fffd||fffd||fffd||fffd||fffd| Xon
    XoffChar As Byte        ' |fffd||fffd||fffd||fffd||fffd||fffd| Xoff
    ErrorChar As Byte       ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    EofChar As Byte         ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| EOF
    EvtChar As Byte         ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 13 -- CR)
    wReserved2 As Integer
  End Type

Public Const FLAG_fBinary = &H1             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fParity = &H2             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fOutxCtsFlow = &H4        ' |fffd||fffd||fffd||fffd||fffd| CTS |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fOutxDsrFlow = &H8        ' |fffd||fffd||fffd||fffd||fffd| DSR |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fDtrControl = &H30        ' 2 |fffd||fffd||fffd||fffd|: 3 |fffd||fffd||fffd||fffd||fffd||fffd| DTR
Public Const FLAG_fDsrSensitivity = &H40    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| DSR
Public Const FLAG_fTXContinueOnXoff = &H80
Public Const FLAG_fOutX = &H100             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Xon/Xoff |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fInX = &H200              ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Xon/Xoff |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fErrorChar = &H400        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ErrorChar
Public Const FLAG_fNull = &H800             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0-|fffd||fffd||fffd||fffd||fffd|
Public Const FLAG_fRtsControl = &H3000      ' 2 |fffd||fffd||fffd||fffd|: 4 |fffd||fffd||fffd||fffd||fffd||fffd| RTS
Public Const FLAG_fAbortOnError = &H4000    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

Declare Function BuildCommDCB Lib "kernel32" Alias "BuildCommDCBA" (ByVal Mode As String, lpDCB As DCB) As Long
Declare Function SetCommState Lib "kernel32" (ByVal hDev As Long, lpDCB As DCB) As Long
Declare Function GetCommState Lib "kernel32" (ByVal hDev As Long, lpDCB As DCB) As Long

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Declare Function CreateFile Lib "kernel32" Alias "CreateFileA" (ByVal FileName As String, ByVal DesiredAccess As Long, ByVal ShareMode As Long, ByVal SecurityAttributes As Long, ByVal CreationDisposition As Long, ByVal FlagsAndAttributes As Long, ByVal TemplateFile As Long) As Long

    Public Const GENERIC_READ = &H80000000
    Public Const GENERIC_WRITE = &H40000000
    Public Const OPEN_EXISTING = 3
    Public Const FILE_FLAG_OVERLAPPED = &H40000000
    Public Const INVALID_HANDLE_VALUE = -1

Declare Function SetupComm Lib "kernel32" (ByVal hFile As Long, ByVal dwInQueue As Long, ByVal dwOutQueue As Long) As Long

' *** |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd| ***
Type COMMTIMEOUTS
    ReadIntervalTimeout As Long
    ReadTotalTimeoutMultiplier As Long
    ReadTotalTimeoutConstant As Long
    WriteTotalTimeoutMultiplier As Long
    WriteTotalTimeoutConstant As Long
  End Type

Declare Function SetCommTimeouts Lib "kernel32" (ByVal hDev As Long, lpTO As COMMTIMEOUTS) As Long
Declare Function GetCommTimeouts Lib "kernel32" (ByVal hDev As Long, lpTO As COMMTIMEOUTS) As Long

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ***
Type OVERLAPPED
    Internal As Long
    InternalHigh As Long
    offset As Long
    OffsetHigh As Long
    hEvent As Long
  End Type

Declare Function CreateEvent Lib "kernel32" Alias "CreateEventA" (ByVal EventAttributes As Long, ByVal ManualReset As Long, ByVal InitialState As Long, ByVal Name As String) As Long
Declare Function SetCommMask Lib "kernel32" (ByVal hDev As Long, ByVal Mask As Long) As Long
Declare Function GetCommMask Lib "kernel32" (ByVal hDev As Long, Mask As Long) As Long

Public Const EV_RXCHAR = &H1           ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Const EV_RXFLAG = &H2           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| EvtChar DCB)
Public Const EV_TXEMPTY = &H4          ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Public Const EV_CTS = &H8              ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| CTS
Public Const EV_DSR = &H10             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| DSR
Public Const EV_RLSD = &H20            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| RLSD
Public Const EV_BREAK = &H40           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| BREAK
Public Const EV_ERR = &H80             ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd|.|fffd|.)
Public Const EV_RING = &H100           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Ring

Public Const EV_PERR = &H200           ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const EV_RX80FULL = &H400       ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 80%
Public Const EV_EVENT1 = &H800         ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1
Public Const EV_EVENT2 = &H1000        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2

' *** |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Declare Function WaitCommEvent Lib "kernel32" (ByVal hDev As Long, Mask As Long, lpOverlapped As OVERLAPPED) As Long
Declare Function WriteFile Lib "kernel32" (ByVal hDev As Long, ByRef Buffer As Byte, ByVal BytesToWrite As Long, BytesWritten As Long, lpOverlapped As OVERLAPPED) As Long
Declare Function ReadFile Lib "kernel32" (ByVal hDev As Long, ByRef Buffer As Byte, ByVal BytesToRead As Long, BytesRead As Long, lpOverlapped As OVERLAPPED) As Long

Declare Function WaitForSingleObject Lib "kernel32" (ByVal hDev As Long, ByVal dwMilliseconds As Long) As Long
Declare Function GetOverlappedResult Lib "kernel32" (ByVal hDev As Long, lpOverlapped As OVERLAPPED, lpBytesTransferred As Long, ByVal bWait As Long) As Long

Public Const ERROR_IO_PENDING = 997    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const WAIT_TIMEOUT = &H102      ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Declare Function PurgeComm Lib "kernel32" (ByVal hFile As Long, _
        ByVal dwFlags As Long) As Long
    Public Const PURGE_TXABORT = &H1     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Public Const PURGE_RXABORT = &H2     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Public Const PURGE_TXCLEAR = &H4     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Public Const PURGE_RXCLEAR = &H8     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Declare Function EscapeCommFunction Lib "kernel32" (ByVal hFile As Long, ByVal nFunc As Long) As Long
    Public Const SETXOFF = 1    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| XOFF
    Public Const SETXON = 2     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| XON
    Public Const SETRTS = 3     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| RTS
    Public Const CLRRTS = 4     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| RTS
    Public Const SETDTR = 5     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| DTR
    Public Const CLRDTR = 6     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| DTR
    Public Const RESETDEV = 7   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Public Const SETBREAK = 8   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| break
    Public Const CLRBREAK = 9   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| break |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Declare Function ClearCommError Lib "kernel32" (ByVal hDev As Long, Errors As Long, ByVal l As Long) As Long
    Public Const CE_RXOVER = &H1           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| EOF
    Public Const CE_OVERRUN = &H2          ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Public Const CE_RXPARITY = &H4         ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Public Const CE_FRAME = &H8            ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|)
    Public Const CE_BREAK = &H10           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Break

Declare Function GetCommModemStatus Lib "kernel32" (ByVal hDev As Long, ModemStat As Long) As Long
    Public Const MS_CTS_ON = &H10&
    Public Const MS_DSR_ON = &H20&
    Public Const MS_RING_ON = &H40&
    Public Const MS_RLSD_ON = &H80&

Attribute VB_Name = "C1_Port"
Option Explicit
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd|"
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'
Dim MyPort As Object            ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| MSComm32
Global MasterLoaded As Boolean  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Global WrkPortNumber As Integer ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Global OnPort As Boolean        ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Global OnLine As Boolean        ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Global ChannalMode As Integer   ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Global Const CM_Null = 0
    Global Const CM_Modem = 1   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const CM_Cable = 2   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const CM_Line = 3    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (2 + 1)

' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
Global ChannalErr As Integer    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
    Global Const CE_OK = 0
    Global Const CE_Com = 1     ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Comm32
    Global Const CE_CPr = 2     ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const CE_Opn = 3     ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    Global Const CE_Cal = 4     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const CE_NoC = 5     ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const CE_Mdm = 6     ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const CE_NoM = 7     ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const CE_MPr = 8     ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const CE_Con = 9     ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Global ReceiverState As Integer ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const RS_OK = 0      ' |fffd||fffd| |fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Global Const RS_TimeOut = 1 ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Global Const RS_LostCon = 2 ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const RS_LineErr = 3 ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const RS_BadData = 4 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const RS_UserEsc = 5 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|-|fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Global PortErr As Integer       ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const PE_None = 0    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    Global Const PE_Frame = 1   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const PE_Parit = 2   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const PE_Break = 3   ' |fffd||fffd||fffd||fffd||fffd||fffd| "Break". |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const PE_LostD = 4   ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const PE_OverI = 5   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const PE_OverO = 6   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const PE_Port = 7    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const PE_DCB = 8     ' |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const PE_Line = 10   ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

' Global InWait As Boolean        ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|


Global Rqs() As Byte        ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Global nRqs As Integer      ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Dim InPolling As Boolean
' *** |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Public Sub StartPoll()
    InPolling = True
    Do While InPolling
        DoEvents
        DoPoll
        Sleep 20
'        If Not (MyPort Is Nothing) Then MyPort.Poll
      Loop
End Sub

Public Sub DoPoll()
    If Not (MyPort Is Nothing) Then MyPort.Poll
End Sub

Public Sub StopPoll()
    InPolling = False
End Sub


Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ReceiverState
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal ErrNum As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd|
    Select Case ErrNum
'      Case CE_OK
'        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
      Case CE_Com
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Comm32"
      Case CE_CPr
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case CE_Opn
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
      Case CE_Cal
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Case CE_NoC
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Case CE_Mdm
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Case CE_NoM
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case CE_MPr
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case CE_Con
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      End Select
End Function

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
End Sub

'   **************************************
'   ***** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| *****
'   **************************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Public Function StartPortMaster() As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    MasterLoaded = True
    StartPortMaster = True
End Function

Public Sub StopPortMaster()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    MasterLoaded = False
End Sub

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ***
Public Function OpenPort(ByVal Number As Integer, ByVal Params As String) As Integer
Dim iRes As Long
    OpenPort = 0
        If Not MasterLoaded Then Exit Function
    Set MyPort = New API_Comm
    iRes = MyPort.OpenComm("COM" & CStr(Number))
    If iRes <> 0 Then
        OpenPort = iRes
        Exit Function
      End If
    If MyPort.BuildDCB(Params) = 0 Then
        OpenPort = CE_CPr
        MyPort.CloseComm
        Exit Function
      End If
    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    MyPort.SetState
End Function

Public Sub ClosePort()
        If Not MasterLoaded Then Exit Sub
    MyPort.CloseComm
    Set MyPort = Nothing
'    MasterLoaded = False
End Sub

'   ***************************
'   ***** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| *****
'   ***************************

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Sub SendDataToPort(Q As Variant)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|
        If Not MasterLoaded Then Exit Sub
    ReceiverState = 0
    PortErr = 0
    MyPort.Output Q
End Sub

Public Sub TakePortData(Q As Variant)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Select Case ChannalMode
      Case CM_Null
'        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case CM_Modem
        Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Q
      Case CM_Cable, CM_Line
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Q
      End Select
End Sub

Public Sub TakePortEvent(ByVal i As Long)
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
    If i <> 0 Then PortErr = PE_Line
    If PortErr <> PE_None Then
        ReceiverState = RS_LineErr
      End If
End Sub
Attribute VB_Name = "C1_TimeOut"
Option Explicit

'   *************************************
'   *  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  |fffd|  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'   *************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|.
' |fffd| Excel'|fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 1 |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!

Dim TOLong As Integer       ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|
Dim TOTime As Date          ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|
Dim TOWait As Boolean       ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal Sec As Integer)
    TOLong = Sec
End Sub


Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
    TOTime = Now() + TimeSerial(0, 0, TOLong)
    TOWait = True
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    TOWait = False
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If TOWait Then
        If Now() > TOTime Then
            ReceiverState = RS_TimeOut
          End If
      End If
End Sub

'Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Sec As Integer)
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Sec
'End Sub

Attribute VB_Name = "C2_Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Const InitPar = "1200,N,8,1"    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

' ************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' ************************
Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
    ChannalMode = CM_Modem
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = OpenPort(|fffd||fffd||fffd||fffd||fffd|, InitPar)
End Function

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "AT"
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = (MdmKWord = AC_OK)
End Function

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 0 -- |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer, k As Integer
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd||fffd| <> 0 Then
        i = |fffd||fffd||fffd||fffd||fffd|
        If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(i) = 0 Then
            If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
                Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = i
                Exit Function
              End If
            ClosePort
          End If
      End If
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 8
    If i <> |fffd||fffd||fffd||fffd||fffd| Then
        If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(i) = 0 Then
            If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
                Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = i
                Exit Function
              End If
            ClosePort
          End If
      End If
      Next i
End Function

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As Integer
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function

Public Sub Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
    ClosePort
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| WrkPortNumber
End Sub


Attribute VB_Name = "C2_Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Global Mdm_TimeOut As Integer        ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Public Sub Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Cmd As String)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!!!
    ReDim Rqs(0 To 127)             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    nRqs = Mdm_Cmd2Rqs(Cmd, Rqs)    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim Preserve Rqs(0 To nRqs - 1) ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|                 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    SendDataToPort Rqs              ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal Delay As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Delay
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Do  ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        DoEvents
        DoPoll
        If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() Then Exit Do
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Do
        Sleep 20
      Loop
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
    If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() <> 0 Then
        ReceiverState = RS_BadData
      End If
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ReceiverState
End Function

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Cmd As String) As Integer
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Cmd
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(3)
End Function

Public Sub Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Q As Variant)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
    For i = 0 To LenB(Q) - 1
        Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Q(i)
      Next i
End Sub

Attribute VB_Name = "C2_Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit


Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean

Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As Boolean
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.Show
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Do                      ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        DoEvents
        DoPoll
        Sleep 50
      Loop Until |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
    Unload |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = (MdmKWord = AC_CT)
End Function

Attribute VB_Name = "C2_Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
'               **********************
'               *  |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|  *
'               **********************
'
'
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Global MdmKWord As Integer    ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const AC_None = -1       ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const AC_OK = 0          ' OK
    Global Const AC_CT = 1          ' CONNECT
    Global Const AC_RI = 2          ' RING
    Global Const AC_NC = 3          ' NO CARRIER
    Global Const AC_ER = 4          ' ERROR
    Global Const AC_ND = 6          ' NO DIALTONE
    Global Const AC_BS = 7          ' BUSY
    Global Const AC_NA = 8          ' NO ANSWER
    
Dim MdmError As Integer  ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    Global Const EP_None = 0    ' |fffd||fffd| |fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|)
'    Global Const EP_TooMany = 1 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'    Global Const EP_Raving = 2  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd|)
    
Dim MdmState As Integer      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
     Const IP_Off = 0               ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     Const IP_On = 1                ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Const mWrd = 16
Dim KeyWrd(0 To mWrd - 1) As Byte   ' |fffd||fffd||fffd||fffd||fffd|
Dim nWrd As Integer                 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Const mAns = 1024
Global MdmAns(0 To mAns - 1) As Byte   ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Global nAns As Integer                 ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

Const InitPar = "1200,N,8,1"    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Public Function Mdm_Cmd2Rqs(Cmd As String, Rqs() As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Rqs) |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' Cmd -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' Rqs -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ASCII |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CR |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| +++)
Dim i As Integer
    i = Str2ASCII(Cmd, Rqs)
    If Cmd <> "+++" Then
        Rqs(i) = &HD
        i = i + 1
      End If
    Mdm_Cmd2Rqs = i
End Function

'  ****************************************
'  *  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'  ****************************************
Public Sub Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd|.
    nAns = 0
    nWrd = 0
    MdmKWord = AC_None
    MdmError = AC_OK
    MdmState = IP_On
End Sub

Public Sub Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|.
    MdmState = IP_Off
End Sub

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|.
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = (MdmState = IP_Off)
End Function

Public Function Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MdmError
End Function

'   *********************************
'   *   |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'   *********************************
Public Sub Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal b As Byte)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Select Case MdmState
      Case IP_Off   ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd|
        If MdmError <> 0 Then MdmError = EP_Raving
      Case IP_On    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If nAns >= mAns Then        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            MdmState = IP_Off
            MdmError = EP_TooMany
          Else
            MdmAns(nAns) = b
            nAns = nAns + 1
          End If
        MdmKWord = IsWord2(b)       ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        If MdmKWord <> AC_None Then
            MdmState = IP_Off
          End If
    End Select
End Sub


Function IsCRLF(ByVal b As Byte) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CRLF
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
Static HaveCR As Integer    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    IsCRLF = False
    If b = &HD Then
        HaveCR = 1          ' |fffd||fffd||fffd||fffd| CR; |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| LF
        Exit Function
      End If
    If (b = &HA) And (HaveCR = 1) Then
        IsCRLF = True       ' |fffd||fffd||fffd||fffd||fffd| LF |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'        AttCRLF = 0
'        Exit Function
      End If
    HaveCR = 0              ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
End Function

Function IsWord1(ByVal b As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| OK |fffd||fffd||fffd| ERROR.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim s As String
    IsWord1 = AC_None
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If nWrd < mWrd Then
        KeyWrd(nWrd) = b
        nWrd = nWrd + 1
      End If
' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If Not IsCRLF(b) Then Exit Function
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If nWrd > 2 Then    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?
        s = ASCII2Str(KeyWrd, nWrd - 2)
        If s = "OK" Then
            IsWord1 = AC_OK
          ElseIf s = "ERROR" Then
            IsWord1 = AC_ER
          End If
      End If
    nWrd = 0            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
End Function

Function IsWord2(ByVal b As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| OK |fffd||fffd||fffd| ERROR.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim s As String
    IsWord2 = AC_None
    If nWrd < mWrd Then
        KeyWrd(nWrd) = b
        nWrd = nWrd + 1
      End If
' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If Not IsCRLF(b) Then Exit Function
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If nWrd > 2 Then    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?
        s = ASCII2Str(KeyWrd, nWrd - 2)
        Select Case s
          Case "OK"
            IsWord2 = AC_OK
          Case "ERROR"
            IsWord2 = AC_ER
          Case "NO DIALTONE"
            IsWord2 = AC_ND
          Case "BUSY"
            IsWord2 = AC_BS
          Case "NO ANSWER"
            IsWord2 = AC_NA
          Case "NO CARRIER"
            IsWord2 = AC_NC
          Case Else
            If Left(s, 7) = "CONNECT" Then
                IsWord2 = AC_CT
              End If
          End Select
      End If
    nWrd = 0            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
End Function

Function IsNoCarrier(ByVal b As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| NO CARRIER
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim s As String
    IsNoCarrier = AC_None
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If nWrd < mWrd Then
        KeyWrd(nWrd) = b
        nWrd = nWrd + 1
      End If
' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If Not IsCRLF(b) Then Exit Function
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If nWrd = 12 Then   ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?
        If ASCII2Str(KeyWrd, 10) = "NO CARRIER" Then
            IsNoCarrier = AC_NC
          End If
      End If
    nWrd = 0            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
End Function

Function IsKeyWord(ByVal b As Byte, ByRef iState As Integer, Sampler() As Byte, ByVal n As Integer) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
' (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Sampler, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 0, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| n).
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| b), |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| i-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| iState). |fffd||fffd||fffd||fffd||fffd||fffd||fffd| iState -- "|fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0 -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, >0 -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
    IsKeyWord = False
    If b = Sampler(iState) Then
        iState = iState + 1
        If iState = n Then
            iState = 0
            IsKeyWord = True
          End If
      Else
        iState = 0
      End If
End Function

Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal i As Integer) As String
    Select Case i
      Case AC_OK
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Case AC_CT
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Case CE_CPr
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case AC_RI
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd|!"
      Case AC_NC
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Case AC_ER
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case AC_ND
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case AC_BS
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
      Case AC_NA
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
      End Select
End Function
Attribute VB_Name = "C_MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Const InitPar = "1200,N,8,1"    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

Global Const MC601_AdrMain = &H3F       ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Global Const MC601_AdrHour = &H7F       ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Global Const MC602_AdrHour = &H3F       ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| KM602

Global HourModule As Integer            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (0 -- |fffd||fffd||fffd|, 1 -- |fffd||fffd| 7F, 2 -- |fffd||fffd| 3F)

Global MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0 To 15) As Byte    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Global Const MaxRsp = 1023
Global MC601|fffd||fffd||fffd||fffd||fffd|(0 To MaxRsp) As Byte  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Global MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer          ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|



' ************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' ************************
Public Function MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
    ChannalMode = CM_Cable
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = OpenPort(|fffd||fffd||fffd||fffd||fffd|, InitPar)
End Function

Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 0 -- |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer, k As Integer
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd||fffd| <> 0 Then
        i = |fffd||fffd||fffd||fffd||fffd|
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(i) = 0 Then
            If MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> 0 Then
                MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = i
                Exit Function
              End If
            ClosePort
          End If
      End If
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 8
    If i <> |fffd||fffd||fffd||fffd||fffd| Then
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(i) = 0 Then
            If MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> 0 Then
                MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = i
                Exit Function
              End If
            ClosePort
          End If
      End If
      Next i
End Function


' ************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' ************************
Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Null
    If Not MasterLoaded Then
        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd|"
        Exit Function
      End If
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H1
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 2) <> 0 Then Exit Function
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Bytes2I(MC601|fffd||fffd||fffd||fffd||fffd|, 2, 2)
End Function

Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Variant
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0. |fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    If Not MasterLoaded Then Exit Function
'    If Not MasterLoaded Then
'        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd|"
'        Exit Function
'      End If
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H2
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 2) <> 0 Then Exit Function
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Bytes2L(MC601|fffd||fffd||fffd||fffd||fffd|, 4, 2)
End Function

Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer)
    If Not MasterLoaded Then
        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
        Exit Function
      End If
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H10
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(2) = &H1
    I2Bytes |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 3
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 5) <> 0 Then Exit Function  ' |fffd||fffd||fffd||fffd||fffd||fffd|
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| <= 7 Then Exit Function                     ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    '   MC601|fffd||fffd||fffd||fffd||fffd|(4)                           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Byte2Mantiss(MC601|fffd||fffd||fffd||fffd||fffd|, MC601|fffd||fffd||fffd||fffd||fffd|(5), 7) _
                        * Byte2Factor(MC601|fffd||fffd||fffd||fffd||fffd|(6))
End Function


Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Integer
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    HourModule = 1
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1
        If Not MasterLoaded Then Exit Function
        
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(157) ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    
    HourModule = 0
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H63
    I2Bytes 186, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 2
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(4) = &HFF
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(5) = &HFF
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(6) = &HFF
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(7) = &HFF
    
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> 0 Then        ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H7F
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 8) = 0 Then
            HourModule = 1
            Exit Function
          End If
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 8) = 0 Then
            HourModule = 2
          End If
      Else                       ' |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 8) = 0 Then
            HourModule = 2
            Exit Function
          End If
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H7F
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 8) = 0 Then
            HourModule = 1
          End If
      End If
End Function

' *********************
' *** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ***
' *********************

Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, _
                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByRef |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Variant
Dim a(1 To 64) As Double
Dim f As Double, b As Double
Dim i As Integer, j As Integer
Dim k As Integer, l As Integer
Dim iPos As Integer, iErr As Integer
    For i = 1 To |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        a(i) = 0
      Next i
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = a
End Function

Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd| As Date) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 24 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Dim a(1 To 24)
Dim f As Double, b As Double
Dim i As Integer, j As Integer
Dim k As Integer, l As Integer
Dim iPos As Integer, iErr As Integer
    For i = 1 To 24
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1003 Then
            a(i) = |fffd||fffd||fffd||fffd|
          ElseIf |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1002 Then
            a(i) = 25 - i
          Else
            a(i) = 0
          End If
      Next i
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = a
End Function


Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd| As Date) As Variant
Dim a(1 To 24) As Double
Dim i As Integer, j As Integer, k As Integer
Dim l As Integer, m As Integer, n As Integer
Dim iErr As Integer, iPos As Integer
Dim f As Double, b As Double
Dim DateMark As Date
Dim iHrs As Integer

    If Not MasterLoaded Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1003) Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1002) Then
        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|)
        Exit Function
      End If
     
    For j = 1 To 24
        a(j) = 0
      Next j
     
    |fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd| + 1
    If HourModule = 1 Then
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H7F      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (KM601)
      ElseIf HourModule = 2 Then
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (KM602)
      Else
        Exit Function
      End If
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H63
    I2Bytes |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 2
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(4) = Year(|fffd||fffd||fffd||fffd|) - 2000
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(5) = Month(|fffd||fffd||fffd||fffd|)
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(6) = Day(|fffd||fffd||fffd||fffd|)
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(7) = 0
    iErr = MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 8)
        If iErr <> 0 Then Exit Function
    '   MC601|fffd||fffd||fffd||fffd||fffd|(4)               ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    l = MC601|fffd||fffd||fffd||fffd||fffd|(5)               ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    f = Byte2Factor(MC601|fffd||fffd||fffd||fffd||fffd|(6))  ' |fffd||fffd||fffd||fffd||fffd||fffd|
    k = (MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| - 8) \ l      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (24)
    If k = 0 Then
        iErr = 99
        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = a
        Exit Function
      End If
    iPos = 8
    If k > 24 Then k = 24
    For j = 1 To k
        a(j) = Byte2Mantiss(MC601|fffd||fffd||fffd||fffd||fffd|, l, iPos) * f
        iPos = iPos + l
      Next j
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = a
End Function


Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, _
                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByRef n As Integer) As Variant
Dim a(1 To 64) As Double
Dim f As Double, b As Double
Dim i As Integer, j As Integer
Dim k As Integer, l As Integer
Dim iPos As Integer, iErr As Integer
    If Not MasterLoaded Then
        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, n)
        Exit Function
      End If
      
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H66
    I2Bytes |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 2
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(6) = &H10
    i = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|                      ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    n = 0
    Do While n < |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        I2Bytes i, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 4
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        iErr = MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 7)
        If iErr <> 0 Then GoTo 1
        '   |fffd||fffd||fffd||fffd||fffd|(4)                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        l = MC601|fffd||fffd||fffd||fffd||fffd|(5)               ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        f = Byte2Factor(MC601|fffd||fffd||fffd||fffd||fffd|(6))  ' |fffd||fffd||fffd||fffd||fffd||fffd|
        k = (MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| - 7) \ l      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If k = 0 Then GoTo 1
        iPos = 7
        For j = 1 To k
            n = n + 1
            a(n) = Byte2Mantiss(MC601|fffd||fffd||fffd||fffd||fffd|, l, iPos) * f
            iPos = iPos + l
          Next j
        i = i + k
      Loop
1:
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = a
End Function

Public Function MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, _
                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByRef n As Integer) As Variant
Dim a(1 To 64) As Double
Dim f As Double, b As Double
Dim i As Integer, j As Integer
Dim k As Integer, l As Integer
Dim iPos As Integer, iErr As Integer

    If Not MasterLoaded Then
        MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, n)
        Exit Function
      End If
      
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0) = &H3F
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1) = &H65
    I2Bytes |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 2
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(6) = &H10
    i = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|                      ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    n = 0
    Do While n < |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        I2Bytes i, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 4
        
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        iErr = MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 7)
        If iErr <> 0 Then GoTo 1
        '   |fffd||fffd||fffd||fffd||fffd|(4)                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        l = MC601|fffd||fffd||fffd||fffd||fffd|(5)               ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        f = Byte2Factor(MC601|fffd||fffd||fffd||fffd||fffd|(6))  ' |fffd||fffd||fffd||fffd||fffd||fffd|
        k = (MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| - 7) \ l      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If k = 0 Then GoTo 1
        iPos = 7
        For j = 1 To k
            n = n + 1
            a(n) = Byte2Mantiss(MC601|fffd||fffd||fffd||fffd||fffd|, l, iPos) * f
            iPos = iPos + l
          Next j
        i = i + k
      Loop
1:
    MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = a
End Function


Attribute VB_Name = "C_MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
'               ****************************
'               *  M U L T I C A L  6 0 1  *
'               ****************************
' |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'Dim MC601_TimeOut As Integer        ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| API

Public Function MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Cmd() As Byte, ByVal n As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim Rqs(0 To 127)                 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    nRqs = MC601Cmd2Rqs(Cmd, n, Rqs)    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim Preserve Rqs(0 To nRqs - 1)   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    SendDataToPort Rqs      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|         ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|
    Do                      ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        DoEvents
        DoPoll
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() Then Exit Do
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Do
        Sleep 20
      Loop
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
    If ReceiverState = 0 Then
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|CRC       ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| CRC
        If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() <> 0 Then
            ReceiverState = RS_BadData
          End If
      End If
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ReceiverState
End Function

Public Sub MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Q As Variant)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
    For i = 0 To LenB(Q) - 1
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Q(i)
      Next i
End Sub

Attribute VB_Name = "C_MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
'               ****************************
'               *  M U L T I C A L  6 0 1  *
'               ****************************
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| KUMSTRUP MULTICAL 601
' |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!
'
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const EP_None = 0    ' |fffd||fffd| |fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|)
    Global Const EP_TooMany = 1 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const EP_Raving = 2  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd|)
    Global Const EP_Head = 3    ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Global Const EP_Body = 4    ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    Global Const EP_Stuff = 5   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Global Const EP_CRC = 6     ' |fffd||fffd||fffd||fffd||fffd||fffd| CRC

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
     Const IW_Off = 0               ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     Const IW_Wait = 1              ' |fffd||fffd||fffd| |fffd||fffd||fffd|
     Const IW_Echo = 2              ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
     Const IW_Paus = 3              ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
     Const IW_Resp = 4              ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
     Const IW_Stuf = 5              ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd|)
Const SB_HdQ = &H80, St_HdQ = &H7F  ' |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Const SB_HdR = &H40, St_HdR = &HBF  ' |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Const SB_End = &HD, St_End = &HF2   ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd|
Const SB_Stf = &H1B, St_Stf = &HE4  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Const SB_Ack = &H6, St_Ack = &HF9   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|


'  ********************************************
'  *  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'  ********************************************
Public Function MC601Cmd2Rqs(Cmd() As Byte, ByVal n As Integer, Rqs() As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Rqs) |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' Cmd -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'       |fffd||fffd||fffd||fffd| 0  -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       |fffd||fffd||fffd||fffd| 1  -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       |fffd||fffd||fffd||fffd| 2 |fffd|  |fffd|.|fffd|. -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||fffd||fffd| n |fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Cmd |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd| Cmd |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2 |fffd||fffd||fffd||fffd||fffd||fffd| CRC.
Dim b As Byte
Dim i As Integer, j As Integer
        If n <= 0 Then Exit Function
  ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CRC
    i = CRC_CCITT16(Cmd, n, 0)
    Cmd(n + 0) = I2B_Hi(i)
    Cmd(n + 1) = I2B_Lo(i)
  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Rqs(0) = SB_HdQ         ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    j = 1
    For i = 0 To n + 1
        b = Cmd(i)          ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,
        If EnStuff(b) Then ' |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            Rqs(j) = SB_Stf
            j = j + 1
          End If
        Rqs(j) = b
        j = j + 1
      Next i
    Rqs(j) = SB_End         ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    j = j + 1
    MC601Cmd2Rqs = j
End Function


'  ****************************************
'  *  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'  ****************************************
Public Sub MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd|.
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_None
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Wait
End Sub

Public Sub MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
End Sub

Public Function MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|.
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off)
End Function

Public Sub MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|CRC()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CRC
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|!!!
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_None Then
    If CRC_CCITT16(MC601|fffd||fffd||fffd||fffd||fffd|, MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 0) = 0 Then
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| - 2
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_CRC
      End If
  End If
End Sub

Public Function MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Function


'   *********************************
'   *   |fffd| |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'   *********************************
Public Sub MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal b As Byte)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd|.|fffd|.
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case IW_Off   ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd|
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> 0 Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_Raving
      Case IW_Wait  ' |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
        If b = SB_HdQ Then              ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Echo
        ElseIf b = SB_HdR Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Resp   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_Head   ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
          End If
      Case IW_Echo  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If b = SB_End Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Paus   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
          Else
            ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
          End If
      Case IW_Paus  ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        If b = SB_HdR Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Resp
          ElseIf b = SB_Ack Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| b
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_Body   ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| b
          End If
      Case IW_Resp  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        If b = SB_End Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
          ElseIf b = SB_Stf Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Stuf
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| b
          End If
      Case IW_Stuf  ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If DeStuff(b) Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Resp
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_Stuff  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
          End If
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| b
      End Select
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal b As Byte)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| >= MaxRsp Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = IW_Off
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = EP_TooMany
      Else
        MC601|fffd||fffd||fffd||fffd||fffd|(MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) = b
        MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd| + 1
      End If
End Sub


'  ************************************
'  *  S T U F F I N G -- |fffd| |fffd| |fffd| |fffd| |fffd| |fffd|  *
'  ************************************
Private Function EnStuff(ByRef b As Byte) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
    EnStuff = True
    Select Case b
      Case SB_HdQ
        b = St_HdQ
      Case SB_HdR
        b = St_HdR
      Case SB_End
        b = St_End
      Case SB_Stf
        b = St_Stf
      Case SB_Ack
        b = St_Ack
      Case Else
        EnStuff = False
      End Select
End Function

Private Function DeStuff(ByRef b As Byte) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| Stuffing.
    DeStuff = True
    Select Case b
      Case St_HdQ
        b = SB_HdQ
      Case St_HdR
        b = SB_HdR
      Case St_End
        b = SB_End
      Case St_Stf
        b = SB_Stf
      Case St_Ack
        b = SB_Ack
      Case Else
        DeStuff = False
      End Select
End Function

Attribute VB_Name = "D1_1__|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|,
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd|.|fffd|.
'                                                                       07.12.07
'   1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| Byte, Integer |fffd| Long
'   2. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| Integer
'   3. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| Integer
'
' ************************
' ***** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| *****
' ************************
Function ShLByte(ByRef b As Byte) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ShLByte = (b And &H80) <> 0
    b = b And &H7F
    b = b * 2
End Function

Function ShRByte(ByRef b As Byte) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ShRByte = (b And 1) <> 0
    b = b \ 2
End Function

Function ShLInt(ByRef i As Integer) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim k As Integer
    ShLInt = (i And &H8000) <> 0
    k = i And &H4000        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14-|fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| k
    i = i And &H3FFF        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 14 |fffd| 15
    i = i * 2               ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If k <> 0 Then i = i Or &H8000  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 14-|fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| 15-|fffd||fffd|
End Function

Function ShRInt(ByRef i As Integer) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ShRInt = (i And 1) <> 0
    i = i And &HFFFE        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0-|fffd| |fffd||fffd||fffd|
    i = i \ 2               ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    i = i And &H7FFF        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 15-|fffd| |fffd||fffd||fffd|
End Function

Function ShLLong(ByRef l As Long) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim k As Long
    ShLLong = (l And &H80000000) <> 0
    k = l And &H40000000    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 30-|fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| k
    l = l And &H3FFF0000    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 14 |fffd| 15
    l = l * 2               ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If k <> 0 Then l = l Or &H80000000  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 30-|fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| 31-|fffd||fffd|
End Function

Function ShRLong(ByRef l As Long) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ShRLong = (l And 1) <> 0
    l = l And &HFFFFFFFE    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0-|fffd| |fffd||fffd||fffd|
    l = l \ 2               ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    l = l And &H7FFFFFFF    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 15-|fffd| |fffd||fffd||fffd|
End Function


' ********************************
' ***** |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| *****
' ********************************
Function I2B_Lo(ByVal i As Integer) As Byte
' XXYY -> YY. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    I2B_Lo = i And &HFF
End Function

Function I2B_Hi(ByVal i As Integer) As Byte
' XXYY -> XX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    i = i And &HFF00
    i = i \ 256
    I2B_Hi = i And &HFF
End Function

Function B2I_Lo(ByVal b As Byte) As Integer
' XX -> 00XX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    B2I_Lo = b
End Function

Function B2I_Hi(ByVal b As Byte) As Integer
' XX -> XX00. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
    i = b And &H7F
    i = i * 256
    If (b And &H80) <> 0 Then i = i Or &H8000
    B2I_Hi = i
End Function

' ***** |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| *****
Function L2I_Lo(ByVal l As Long) As Integer
' XXXXYYYY -> YYYY. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
    i = l And (Not &HFFFF8000)      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd| 31-|fffd||fffd| |fffd||fffd||fffd||fffd|
    If (l And (Not &HFFFF7FFF)) <> 0 Then i = i Or &H8000
    L2I_Lo = i
End Function

Function L2I_Hi(ByVal l As Long) As Integer
' XXXXYYYY -> XXXX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    l = l And &HFFFF0000
    l = l \ &H10000
    L2I_Hi = L2I_Lo(l)
End Function

Function I2L_Lo(ByVal i As Integer) As Long
' XXXX -> 0000XXXX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    I2L_Lo = (i And &HFFFF) And (Not &HFFFF0000)
End Function

Function I2L_Hi(ByVal i As Integer) As Long
' XXXX -> XXXX0000. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim l As Long
    l = i And &H7FFF
    l = i And &H7FFF
    l = l * &H10000
    If (i And &H8000) <> 0 Then l = l Or &H80000000
    I2L_Hi = l
End Function


' ***************************
' ***** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| *****
' ***************************
Function ChLInt(ByRef i As Integer) As Byte
' XXYY -> YY00. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
' XX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
Dim j As Integer
    ChLInt = I2B_Hi(i)
    j = (i And &H80) <> 0
    i = i And &H7F
    i = i * 256
    If j Then i = i Or &H8000
End Function

Function ChRInt(ByRef i As Integer) As Byte
' XXYY -> 00XX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' YY. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
    ChRInt = I2B_Lo(i)
    i = i And &HFF00
    i = i \ 256
    i = i And &HFF
End Function

Function ChLLng(ByRef l As Long) As Byte
' XXYYYYYY -> YYYYYY00. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
' XX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
Dim i As Integer
    ChLLng = I2B_Hi(L2I_Hi(l))
    i = (l And &H800000) <> 0
    l = l And &H7FFFFF
    l = l * 256
    If i Then l = l Or &H80000000
End Function

Function ChRLng(ByRef l As Long) As Byte
' XXXXXXYY -> 00XXXXXX. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' YY. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
Dim b As Byte
    ChRLng = l And &HFF
    l = l And &HFFFFFF00
    l = l \ 256
    l = l And &HFFFFFF
End Function
Attribute VB_Name = "D1_2__|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 16-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| 3F,06,78,A4,F6) |fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
'   |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'
' ***********************************
' **** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ****
' ***********************************
Function Bytes2I(b() As Byte, ByVal n As Integer, ByVal iPos As Integer) As Integer
' XX, YY -> XXYY
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|! |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2 |fffd||fffd||fffd||fffd||fffd|!
Dim k As Integer
Dim i As Integer
    k = 0
    i = 0
    Do While i < n
        ChLInt k
        k = k Or b(i + iPos)
        i = i + 1
      Loop
    Bytes2I = k
End Function

Sub I2Bytes(ByVal k As Integer, b() As Byte, ByVal iPos As Integer)
' XXYY -> XX, YY
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 2 |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Dim i As Integer
    For i = 0 To 1
        b(i + iPos) = ChLInt(k)
      Next i
End Sub

Function Bytes2L(b() As Byte, ByVal n As Integer, ByVal iPos As Integer) As Long
' XX, YY, ZZ, UU -> XXYYZZUU
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|! |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4 |fffd||fffd||fffd||fffd||fffd|!
Dim l As Long
Dim i As Integer
    l = 0
    i = 0
    Do While i < n
        ChLLng l
        l = l Or b(i + iPos)
        i = i + 1
      Loop
    Bytes2L = l
End Function

Sub L2Bytes(ByVal l As Long, b() As Byte, ByVal iPos As Integer)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 4 |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Dim i As Integer
    For i = 0 To 3
        b(i + iPos) = ChLLng(l)
      Next i
End Sub


' *********************************
' **** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ****
' *********************************
Function Bytes2Float(b() As Byte, ByVal iPos As Integer) As Double
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Kamstrup.
'
Dim i As Integer, n As Integer
Dim a As Double, d As Double
    a = 0
    i = 0
    n = b(iPos)     ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Do While i < n
        a = a * 256
        i = i + 1
        a = a + b(iPos + 1 + i)
      Loop
    d = 1
    n = b(iPos + 1)
    i = n And &H3F
    Do While i > 0
        d = d * 10
        i = i - 1
      Loop
    If (n And &H40) <> 0 Then d = 1 / d
    a = a * d
    If (n And &H80) <> 0 Then a = -a
    Bytes2Float = a
End Function

Function Byte2Factor(ByVal b As Byte) As Double
Dim d As Double
Dim i As Integer
    d = 1
    i = b And &H3F
    Do While i > 0
        d = d * 10
        i = i - 1
      Loop
    If (b And &H40) <> 0 Then d = 1 / d
    If (b And &H80) <> 0 Then d = -d
    Byte2Factor = d
End Function

Function Byte2Mantiss(b() As Byte, ByVal n As Integer, ByVal iPos As Integer) As Double
Dim a As Double
Dim i As Integer
    a = 0
    i = 0
    Do While i < n
        a = a * 256
        a = a + b(iPos + i)
        i = i + 1
      Loop
    Byte2Mantiss = a
End Function
Attribute VB_Name = "D1_3__CRC"
Option Explicit
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CCITT CRC-16

Function ShortResidue(ByVal P As Byte, ByVal Z As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| p00 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 1zz.
' P -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Z -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (2 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|).
Dim i As Integer
Dim r As Integer       ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    r = 0
    For i = 1 To 8
        If ShLInt(r) <> ShLByte(P) Then r = r Xor Z
      Next i
    ShortResidue = r
End Function

Function CRC_CCITT16(a() As Byte, n As Integer, iPos As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CCITT CRC-16 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| A().
' iPos -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| CRC (2 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|).
Const InitR = 0         ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Const MaskZ = &H1021    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Dim i As Integer
Dim P As Byte           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Dim r As Integer        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    r = InitR
    If n > 0 Then
        For i = 0 To n - 1
            P = ChLInt(r) Xor a(iPos + i)
            r = r Xor ShortResidue(P, MaskZ)
          Next i
      End If
    CRC_CCITT16 = r
End Function

Attribute VB_Name = "D1_3__|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 16-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| 3F,06,78,A4,F6) |fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
'   |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'

' *** Hex-|fffd||fffd||fffd||fffd||fffd||fffd| ***
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| Hex-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Function GetNextPart(ByRef s As String, d As String) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Q).
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| S |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Long
    s = LTrim(s)
    i = 1
    Do While i <= Len(s)
        If InStr(1, d, Mid(s, i, 1)) <> 0 Then Exit Do
        i = i + 1
      Loop
    GetNextPart = Mid(s, 1, i - 1)
    s = Mid(s, i + 1)
End Function

Function HexString2Bytes(ByRef s As String, b() As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 16-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
Dim i As Integer
    i = 0
    On Error Resume Next
    Do Until Len(s) = 0
        b(i) = CByte("&h" & GetNextPart(s, " ,;"))
        i = i + 1
        If Err() <> 0 Then
            MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " & CStr(i), vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
            HexString2Bytes = True
            i = -i
            Exit Do
          End If
      Loop
    HexString2Bytes = i
End Function

Function Bytes2HexString(b() As Byte, ByVal n As Integer) As String
Dim s As String
Dim i As Integer
    s = ""
    For i = 0 To n - 1
        If s <> "" Then s = s & ", "
        s = s & Hex(b(i))
      Next i
    Bytes2HexString = s
End Function

' *** ASCII-|fffd||fffd||fffd||fffd||fffd||fffd| ***
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| ANSI-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|,
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ASCII-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function Str2ASCII(ByRef s As String, b() As Byte) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ASCII-|fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Dim i As Integer, k As Long, n As Integer, a As String
    n = Len(s)
    Str2ASCII = n
        If n = 0 Then Exit Function
    For i = 0 To n - 1
        a = Mid(s, i + 1, 1)
        k = Asc(a)
        If (k < 0) Or (k > 255) Then k = 0
        b(i) = k
      Next i
End Function

Function ASCII2Str(b() As Byte, ByRef n As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer, s As String
        If n = 0 Then Exit Function
    s = ""
    For i = 0 To n - 1
        s = s & Chr(b(i))
      Next i
    ASCII2Str = s
End Function


Attribute VB_Name = "D2_1__|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit


    Const |fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|"
    Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd|  |fffd||fffd| |fffd||fffd||fffd|    "
    Const |fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   "
'                  "1234567890123456789012345678901234567890"

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant) As Variant
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
      Case 2
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd| |fffd||fffd||fffd|"
      Case Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
      End Select
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant) As Variant
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Function
    If IsNumeric(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
        If (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| > 4) And (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <= 0) Then Exit Function
      End If
     |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Mid(|fffd||fffd||fffd||fffd||fffd||fffd|, (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - 1) * 10 + 1, 10)
End Function


'   ***************************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
'   ***************************
Public Function BadDate(ByVal X) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    BadDate = False
    If IsNull(X) Then Exit Function
    If IsNumeric(X) Then
        If (X > 0) And (X < 31) Then Exit Function
      End If
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd| 31", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
    BadDate = True
End Function

Public Function BadMonth(ByVal X) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    BadMonth = False
    If IsNull(X) Then Exit Function
    If IsNumeric(X) Then
        If (X > 0) And (X <= 12) Then Exit Function
      End If
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd| 12", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
    BadMonth = True
End Function

Public Function BadYear(ByVal X) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    BadYear = False
    If IsNull(X) Then Exit Function
    If IsNumeric(X) Then
    If (X > 0) And (X <= 2320) Then
        If (X Mod 1000) <= 320 Then Exit Function
      End If
      End If
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
    BadYear = True
End Function

'   *****************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd| MM ***
'   *****************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Public Function MM2Str(ByVal MM As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: "|fffd||fffd||fffd|", "|fffd||fffd||fffd|", ...
    MM2Str = ""
        If MM <= 0 Then Exit Function
        If MM > 12 Then Exit Function
    MM2Str = Mid(|fffd||fffd||fffd||fffd||fffd||fffd|, (MM - 1) * 4 + 1, 3)
End Function

Public Function Str2MM(s As String) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.
Dim i As Integer
    i = InStr(1, |fffd||fffd||fffd||fffd||fffd||fffd|, Mid(s, 1, 3))
    If i <> 0 Then
        i = i \ 4 + 1
      Else
        i = 0
        On Error Resume Next
        i = CInt(s)
        If (i <= 0) Or (i > 12) Then i = 0
        If CStr(i) <> s Then i = 0      ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        If Err() <> 0 Then i = 0
      End If
    Str2MM = i
End Function


'   *******************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd| YYMM ***
'   *******************
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd| |fffd|/|fffd||fffd||fffd| |fffd||fffd||fffd|),
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: "|fffd||fffd||fffd|-09", "|fffd||fffd||fffd|-08"
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 2001, 2002 |fffd| |fffd|.|fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'   YY -- |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| 2000, MM -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||fffd| YY00 -- |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| 00MM -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|)
    If Not IsNull(|fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = YYMM2Str(|fffd||fffd||fffd|)
End Function
    
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If Not IsNull(|fffd||fffd||fffd|) And Not IsNull(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Str2YYMM(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
    
Public Function YYMM2Str(ByVal YYMM As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    YYMM2Str = ""
        If YYMM <= 0 Then Exit Function
    If YYMM Mod 100 = 0 Then
        YYMM2Str = CStr(2000 + (YYMM \ 100))
      Else
        If YYMM \ 100 = 0 Then
            YYMM2Str = MM2Str(YYMM Mod 100) ' |fffd||fffd||fffd||fffd| YY = 0, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
          Else
            YYMM2Str = MM2Str(YYMM Mod 100) & "-" & Format$(YYMM \ 100, "00")
'            YYMM2Str = Format$(YYMM Mod 100, "00") & "." & CStr(2000 + YYMM \ 100)
          End If
      End If
End Function

Public Function Str2YYMM(ByVal s As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' "|fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "|fffd||fffd||fffd|-08", "|fffd||fffd||fffd| 08", "|fffd||fffd||fffd|08", "|fffd||fffd||fffd| 2008" |fffd| |fffd||fffd||fffd||fffd| "01.08"
' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.
Dim MM As Long, YY As Long
Dim i As Integer
    On Error Resume Next
    MM = 0
    YY = 0
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd||fffd|
        s = Trim(s)
        MM = Str2MM(s)  '
        If MM <> 0 Then
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
            If InStr(1, s, "-") = 0 Then
                s = Trim(Mid(s, 4))
              Else
                s = Trim(Mid(s, 5))
              End If
          Else
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| MM.YY
            i = InStr(1, s, ".")
            If i <> 0 Then
                MM = Str2MM(Mid(s, 1, i - 1))
                s = Mid(s, i + 1)
              End If
          End If
        If MM = 0 Then Exit Function
        If Len(s) <> 0 Then YY = CInt(s)
        If YY = 0 Then YY = Year(Date) - 2000
      Case 2    ' |fffd||fffd||fffd||fffd|
        i = InStr(1, s, ".")
        If i <> 0 Then
            MM = Str2MM(Mid(s, 1, i - 1))
            If MM <> 0 Then YY = CInt(Mid(s, i + 1))
          Else
            YY = CInt(s)
            If YY <> s Then YY = 0
          End If
        MM = 0
      End Select
      
    If Err() <> 0 Then Exit Function
    If YY < 0 Then Exit Function
    YY = YY Mod 1000
    If YY > 320 Then Exit Function
    Str2YYMM = 100 * YY + MM
End Function


'   ******************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd| MDD ***
'   ******************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: DD -- |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (1..28)
'             M -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       "28"        -- 28-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (M = 1)
'       "05 |fffd|.|fffd|."   -- 5-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (M = 2)
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       "15.12"     -- 15 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|      (M = 1..12)
'       "15.01 |fffd|.|fffd|."-- 15 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|    (M = 13..24)
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If Not NoData(|fffd||fffd||fffd|) And Not NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MDD2Str(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
    
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If Not NoData(|fffd||fffd||fffd|) And Not NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Str2MDD(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
    
Public Function MDD2Str(ByVal MDD As Integer, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| MDD |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim DD As Integer
Dim s As String
    s = Format$(MDD Mod 100, "00")
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If (MDD \ 100) = 1 Then
            MDD2Str = s
          ElseIf (MDD \ 100) = 2 Then
            MDD2Str = s & " |fffd|.|fffd|."
          Else
            MDD2Str = "|fffd||fffd||fffd||fffd||fffd||fffd|"
          End If
      Case 2    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If (MDD \ 100) < 13 Then
            MDD2Str = s & "." & Format$((MDD \ 100), "00")
          ElseIf (MDD \ 100) <= 24 Then
            MDD2Str = s & "." & Format$((MDD \ 100) - 12, "00") & " |fffd|.|fffd|."
          Else
            MDD2Str = "|fffd||fffd||fffd||fffd||fffd||fffd|"
          End If
      End Select
End Function

Public Function Str2MDD(ByVal s As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| MDD.
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.
Dim i As Integer, d As Integer, m As Integer
Dim Q As String
    Str2MDD = 0
    Q = Trim(s)
    m = 0
    On Error Resume Next
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        ' |fffd||fffd||fffd||fffd| "|fffd|.|fffd|."
        i = InStr(1, Q, "|fffd|.|fffd|.")
        If i = 0 Then i = InStr(1, Q, "|fffd||fffd|")
        If i <> 0 Then
            Q = Trim(Mid(Q, 1, i - 1))
            m = 1
          End If
        If Not IsNumeric(Q) Then Exit Function
        d = CInt(Q)
        m = m + 1
      Case 2    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        ' |fffd||fffd||fffd||fffd| "|fffd|.|fffd|."
        i = InStr(1, Q, "|fffd|.|fffd|.")
        If i = 0 Then i = InStr(1, Q, "|fffd||fffd|")
        If i <> 0 Then
            Q = Trim(Mid(Q, 1, i - 1))
            m = 12
          End If
        i = InStr(1, Q, ".")
            If i = 0 Then Exit Function
        If Not IsNumeric(Trim(Mid(Q, 1, i - 1))) Then Exit Function
        If Not IsNumeric(Trim(Mid(Q, i + 1))) Then Exit Function
        d = CInt(Trim(Mid(Q, 1, i - 1)))
        m = m + CInt(Trim(Mid(Q, i + 1)))
      End Select
      
    If Err() <> 0 Then Exit Function
    If d > 31 Then Exit Function
    If m > 24 Then Exit Function
    Str2MDD = m * 100 + d
End Function

'   *********************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd| YYMMDD ***
'   *********************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'   |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:   YYMMDD
'   |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|:  YYMM00
'   |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:     YY0000
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|)
    If Not IsNull(|fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = YYMMDD2Str(|fffd||fffd||fffd|)
End Function
    
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If Not IsNull(|fffd||fffd||fffd|) And Not IsNull(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Str2YYMMDD(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
    
Public Function YYMMDD2Str(ByVal YYMMDD As Long) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| YYMMDD |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim DD As Long, YM As Long

    YM = YYMMDD \ 100
    DD = YYMMDD Mod 100
    If DD <> 0 Then
    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        YYMMDD2Str = Format$(DateSerial(2000 + YM \ 100, YM Mod 100, DD), "dd\.mm\.yyyy")
      ElseIf (YM Mod 100) <> 0 Then
    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
        YYMMDD2Str = YYMM2Str(YM)
'        YYMMDD2Str = Mid(Format$(DateSerial(YM \ 100, YM Mod 100, 1), "dd\.mm\.yy"), 4)
      Else
        YYMMDD2Str = CStr(2000 + (YM \ 100))
      End If
End Function

Public Function Str2YYMMDD(ByVal s As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim l As Long
Dim d As Date
    On Error Resume Next
    Str2YYMMDD = 0
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1, 2    ' |fffd||fffd||fffd|
        d = CDate(s)
        If (Year(d) < 2000) Then Exit Function
        Str2YYMMDD = ((Year(d) - 2000) * 100 + Month(d)) * 100 + Day(d)
      Case 3    ' |fffd||fffd||fffd||fffd||fffd||fffd|
        l = Str2YYMM(s, 1)
        If l <> 0 Then Str2YYMMDD = 100 * l
      Case 4    ' |fffd||fffd||fffd||fffd|
        l = Str2YYMM(s, 2)
        If l <> 0 Then Str2YYMMDD = 100 * l
      End Select
    If Err() <> 0 Then Str2YYMMDD = 0
End Function

Public Function Date2YYMMDD(ByVal d As Variant, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant) As Variant
' |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Date2YYMMDD = Null
    If NoData(d) Then Exit Function
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1, 2 ' |fffd||fffd||fffd|
        Date2YYMMDD = ((Year(d) - 2000) * 100 + Month(d)) * 100 + Day(d)
      Case 3    ' |fffd||fffd||fffd||fffd||fffd||fffd|
        Date2YYMMDD = ((Year(d) - 2000) * 100 + Month(d)) * 100
      Case 4    ' |fffd||fffd||fffd||fffd|
        Date2YYMMDD = (Year(d) - 2000) * 100 * 100
      End Select
End Function

Public Function YYMMDD2Date(ByVal YYMMDD As Variant) As Variant
' |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim DD As Long, YM As Long
    YYMMDD2Date = Null
        If NoData(YYMMDD) Then Exit Function
    YM = YYMMDD \ 100
    DD = YYMMDD Mod 100
    If DD <> 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        YYMMDD2Date = DateSerial(2000 + YM \ 100, YM Mod 100, DD)
      ElseIf (YM Mod 100) <> 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
        YYMMDD2Date = DateSerial(2000 + YM \ 100, YM Mod 100, 1)
      Else ' |fffd||fffd||fffd||fffd|
        YYMMDD2Date = DateSerial(2000 + YM \ 100, 1, 1)
      End If
End Function

'   *****************************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd| HHMM |fffd| HHMMSS ***
'   *****************************
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Public Function HHMM2Time(ByVal HHMM As Variant) As Variant
    HHMM2Time = Null
        If NoData(HHMM) Then Exit Function
    HHMM2Time = TimeSerial(HHMM \ 100, HHMM Mod 100, 0)
End Function

Public Function Time2HHMM(ByVal T As Variant) As Variant
    Time2HHMM = Null
        If NoData(T) Then Exit Function
    Time2HHMM = Hour(T) * 100 + Minute(T)
End Function

Public Function HHMMSS2Time(ByVal HHMMSS As Variant) As Variant
Dim HHMM As Long
    HHMMSS2Time = Null
        If NoData(HHMMSS) Then Exit Function
    HHMM = HHMMSS \ 100
    HHMMSS2Time = TimeSerial(HHMM \ 100, HHMM Mod 100, HHMMSS Mod 100)
End Function

Public Function Time2HHMMSS(ByVal T As Variant) As Variant
    Time2HHMMSS = Null
        If NoData(T) Then Exit Function
    Time2HHMMSS = (Hour(T) * 100 + Minute(T)) * 100 + Second(T)
End Function


Attribute VB_Name = "D2_2__|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'   *****************
'   ***   |fffd| |fffd| |fffd|   ***
'   *****************
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd|" |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd|".
Dim m As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then |fffd||fffd||fffd||fffd||fffd| = 101
    m = 0   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd|
        If |fffd||fffd||fffd||fffd||fffd| Mod 100 < 20 Then m = 100    ' |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
      Case 2    ' |fffd||fffd||fffd|
        If |fffd||fffd||fffd||fffd||fffd| \ 100 < 8 Then m = 1200      ' |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
      Case Else
        Exit Function
      End Select
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd| + m
End Function

'Public Function |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "|fffd|" (|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|)
'    If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then
'        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'      Else
'        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|
'      End If
'End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. "|fffd||fffd||fffd||fffd|" -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Or NoData(|fffd||fffd||fffd||fffd||fffd|) Then Exit Function
    If |fffd||fffd||fffd||fffd||fffd||fffd| = 0 Or |fffd||fffd||fffd||fffd||fffd| = 0 Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DateSerial(100 * (Year(Date) \ 100) + (|fffd||fffd||fffd||fffd||fffd||fffd| \ 100), _
                        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|) + (|fffd||fffd||fffd||fffd||fffd| \ 100), (|fffd||fffd||fffd||fffd||fffd| Mod 100))
End Function
    
'Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
'    If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|)
'End Function


'   *****************
'   ***  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|  ***
'   *****************
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Variant) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim m As Integer, Y As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Function
    m = |fffd||fffd||fffd||fffd||fffd||fffd| Mod 100
    Y = |fffd||fffd||fffd||fffd||fffd||fffd| \ 100
    If m = 0 Then   ' |fffd||fffd||fffd|
        If Y < 320 Then Y = Y + 1
      Else          ' |fffd||fffd||fffd||fffd||fffd|
        If m < 12 Then
            m = m + 1
          Else
            m = 1
            If Y < 320 Then Y = Y + 1
          End If
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 100 * Y + m
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Variant) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim m As Integer, Y As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Function
    m = |fffd||fffd||fffd||fffd||fffd||fffd| Mod 100
    Y = |fffd||fffd||fffd||fffd||fffd||fffd| \ 100
    If m = 0 Then   ' |fffd||fffd||fffd|
        If Y > 0 Then Y = Y - 1
      Else          ' |fffd||fffd||fffd||fffd||fffd|
        If m > 1 Then
            m = m - 1
          Else
            If Y > 0 Then
                Y = Y - 1
                m = 12
              End If
          End If
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 100 * Y + m
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| 1.
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd| 0,1,2 |fffd| |fffd|.|fffd|.,
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd| 0.
Dim i As Integer
    i = |fffd||fffd||fffd||fffd||fffd||fffd| Mod 100
    If i <> 0 Then i = i - 1
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = i
End Function

Public Function |fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd| As Date, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd| = Null
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd| = Month(|fffd||fffd||fffd||fffd|) + 100 * (Year(|fffd||fffd||fffd||fffd|) - 2000)
      Case 2    ' |fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd| = 100 * (Year(|fffd||fffd||fffd||fffd|) - 2000)
      End Select
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd| As Variant, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, ByVal |fffd||fffd||fffd||fffd||fffd| As Variant)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd|" -- |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Dim i As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    If NoData(|fffd||fffd||fffd||fffd|) Then Exit Function
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or NoData(|fffd||fffd||fffd||fffd||fffd|) Then Exit Function
    i = |fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(i, |fffd||fffd||fffd||fffd||fffd|) < |fffd||fffd||fffd||fffd| Then
        i = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(i)
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = i
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
Dim Y As Integer, m As Integer
    m = |fffd||fffd||fffd||fffd||fffd||fffd| Mod 100
    Y = |fffd||fffd||fffd||fffd||fffd||fffd| \ 100
    Select Case |fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)
        Exit Function
      Case 2    ' |fffd||fffd||fffd|
        Y = Y - 1
      Case 3    ' 12 |fffd||fffd||fffd|
        Y = Y - 12
      End Select
    If Y < 0 Then Y = 0
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Y * 100 + m
End Function


'   *****************
'   ***  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|  ***
'   *****************
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
' 0 -- |fffd||fffd||fffd||fffd||fffd|., 1 -- |fffd||fffd||fffd||fffd||fffd|, 2 -- |fffd||fffd||fffd|, 3 -- 12 |fffd||fffd||fffd|
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> 0 Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Exit Function
      End If
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1, 2
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1
      Case 3
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 2
      Case 4
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 3
      Case Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
      End Select
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd| As Date, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
Dim d As Date
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1, 2 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -1)
        d = |fffd||fffd||fffd||fffd|
      Case 3    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        d = DateSerial(Year(|fffd||fffd||fffd||fffd|), Month(|fffd||fffd||fffd||fffd|), |fffd||fffd||fffd||fffd||fffd| Mod 100)
        If |fffd||fffd||fffd||fffd| < d Then
            d = DateSerial(Year(|fffd||fffd||fffd||fffd|), Month(|fffd||fffd||fffd||fffd|) - 1, |fffd||fffd||fffd||fffd||fffd| Mod 100)
          End If
      Case 4    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        d = DateSerial(Year(|fffd||fffd||fffd||fffd|), |fffd||fffd||fffd||fffd||fffd| \ 100, |fffd||fffd||fffd||fffd||fffd| Mod 100)
        If |fffd||fffd||fffd||fffd| < d Then
            d = DateSerial(Year(|fffd||fffd||fffd||fffd|) - 1, |fffd||fffd||fffd||fffd||fffd| \ 100, |fffd||fffd||fffd||fffd||fffd| Mod 100)
          End If
      Case Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
        Exit Function
      End Select
    d = d - 1
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = D
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date2YYMMDD(d, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd| As Long, ByVal DayX As Integer) As Date
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim DD As Integer, YM As Integer
    YM = |fffd||fffd||fffd||fffd||fffd| \ 100
    DD = |fffd||fffd||fffd||fffd||fffd| Mod 100
    If DD = 0 Then
    ' |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|. |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If (YM Mod 100) = 0 Then YM = YM + (DayX \ 100) ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        DD = (DayX Mod 100) - 1
        If DD = 0 Then YM = YM + 1
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DateSerial(2000 + (YM \ 100), YM Mod 100, DD)
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd| As Long, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1, 2
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date2YYMMDD(YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd|) + 1, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      Case 3, 4
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CLng(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| \ 100)) * 100
      End Select
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd| As Long, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 1, 2
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date2YYMMDD(YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd|) - 1, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      Case 3, 4
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CLng(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| \ 100)) * 100
      End Select
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd| As Long, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
Dim V As Long, d As Integer, m As Integer, Q As Date
    d = |fffd||fffd||fffd||fffd||fffd| Mod 100
    V = CLng(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| \ 100, |fffd||fffd||fffd||fffd||fffd|)) * 100
    If d = 0 Then       ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| -- |fffd||fffd| |fffd||fffd| |fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = V
        Exit Function
      End If
    ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- 31-|fffd| |fffd||fffd||fffd||fffd||fffd|,
    ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd| 1-|fffd| |fffd||fffd||fffd||fffd| |fffd||fffd|.
    m = (|fffd||fffd||fffd||fffd||fffd| \ 100) Mod 100
    Q = YYMMDD2Date(V + d)
'    If Month(Q) <> M Then Q = DateSerial(Year(Q), Month(Q) + 1, 0)
'    If Month(Q) <> M Then Q = DateSerial(Year(Q), Month(Q) + 1, 1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date2YYMMDD(Q, 1)
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1
Dim i As Integer
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Or NoData(|fffd||fffd||fffd||fffd||fffd|) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        Exit Function
      End If
    If |fffd||fffd||fffd||fffd||fffd||fffd| Mod 10000 = 0 Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DateDiff("yyyy", YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd||fffd|), YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd|))
      ElseIf |fffd||fffd||fffd||fffd||fffd||fffd| Mod 100 = 0 Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DateDiff("m", YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd||fffd|), YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd|))
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DateDiff("d", YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd||fffd|), YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd|))
      End If
End Function


Attribute VB_Name = "F_|fffd||fffd||fffd||fffd|"
Option Explicit

    Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd|"
    Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Global Const |fffd||fffd||fffd||fffd|_IE = "C:\Program Files\Internet Explorer\IEXPLORE.EXE"

'   *****************
'   ***  |fffd| |fffd| |fffd| |fffd|  ***
'   *****************
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd| As String) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|).
Dim |fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd| As String
    |fffd||fffd||fffd||fffd| = Application.ActiveWorkbook.Path
    Select Case |fffd||fffd||fffd||fffd|
      Case |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|
        Exit Function
      Case |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|
      Case |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case Else
        |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|
      End Select
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|)
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd| As String, ByVal |fffd||fffd||fffd||fffd| As String) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd| = "" Then Exit Function
    If (InStr(1, |fffd||fffd||fffd||fffd|, ":") = 0) And (InStr(1, |fffd||fffd||fffd||fffd|, "\\") = 0) Then
        If |fffd||fffd||fffd||fffd| <> "" Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd| & "\" & |fffd||fffd||fffd||fffd|
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|
          End If
      End If
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd| As String, ByVal |fffd||fffd||fffd||fffd| As String) As String
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd| <> "" Then
        If (Left(|fffd||fffd||fffd||fffd|, Len(|fffd||fffd||fffd||fffd|)) = |fffd||fffd||fffd||fffd|) Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Mid(|fffd||fffd||fffd||fffd|, Len(|fffd||fffd||fffd||fffd| & "\") + 1)
          End If
      End If
End Function


'   *******************
'   ***  |fffd| |fffd| |fffd| |fffd| |fffd|  ***
'   *******************
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As String
' |fffd||fffd||fffd||fffd||fffd| xls-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim s As String
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  With Application.FileDialog(msoFileDialogFilePicker)
    .Title = "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "*.*"
    .Filters.Add "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "*.xls"
    .FilterIndex = 2
    .InitialFileName = s
        If (.Show = 0) Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(.SelectedItems.Item(1), s)
  End With
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As String
' |fffd||fffd||fffd||fffd||fffd| xls-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim s As String
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  With Application.FileDialog(msoFileDialogFilePicker)
    .Title = "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "*.*"
    .Filters.Add "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "*.xls"
    .FilterIndex = 2
    .InitialFileName = s
        If (.Show = 0) Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(.SelectedItems.Item(1), s)
  End With
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As String
' |fffd||fffd||fffd||fffd||fffd| xls-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim s As String
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  With Application.FileDialog(msoFileDialogFilePicker)
    .Title = "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|"
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "*.*"
    .Filters.Add "|fffd||fffd||fffd||fffd||fffd| Excel", "*.xls"
    .FilterIndex = 2
    .InitialFileName = s
        If (.Show = 0) Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(.SelectedItems.Item(1), s)
  End With
End Function


Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
Dim s As String
    If |fffd||fffd||fffd||fffd| = "" Then
          MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          Exit Function
        End If
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|))
    If Dir(s) = "" Then
        MsgBox "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|! |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
        vbCrLf & "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", _
        vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Function
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = s
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Boolean) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim MyExl As Excel.Application
Dim MyWbk As Excel.Workbook
Dim s As String
    
    If |fffd||fffd||fffd||fffd| = "" Then
          MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          Exit Function
        End If
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|))
    If Dir(s) = "" Then
        MsgBox "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|! |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|" & vbCrLf & _
        vbCrLf & "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", _
        vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          Exit Function
        End If
        
    On Error Resume Next
    Set MyExl = New Excel.Application
    If Err <> 0 Then
          MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Microsoft Excel!" & vbCrLf & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Excel |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|." & vbCrLf & _
            "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", _
            vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          Exit Function
        End If
    Set MyWbk = MyExl.Workbooks.Open(s, , Not |fffd||fffd||fffd||fffd||fffd||fffd|)
    If Err <> 0 Then
          MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|." & vbCrLf & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|" & vbCrLf & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.", _
            vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          MyExl.Quit
          Exit Function
        End If
    MyExl.Visible = True
End Function

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Boolean)
' |fffd||fffd||fffd||fffd||fffd| xls-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim MyExl As Excel.Application
Dim MyWbk As Excel.Workbook
Dim s As String
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  With Application.FileDialog(msoFileDialogFilePicker)
    .Title = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "*.*"
    .Filters.Add "|fffd||fffd||fffd||fffd||fffd| Excel", "*.xls"
    .FilterIndex = 2
    .InitialFileName = s
        If (.Show = 0) Then Exit Sub
    s = .SelectedItems.Item(1)
  End With
  
    On Error Resume Next
    Set MyExl = New Excel.Application
    Set MyWbk = MyExl.Workbooks.Open(s, , Not |fffd||fffd||fffd||fffd||fffd||fffd|)
    If Err <> 0 Then
          MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          MyExl.Quit
          Exit Sub
        End If
    MyExl.Visible = True
End Sub


Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| As String)
Dim s As String
    If |fffd||fffd||fffd||fffd||fffd| = "" Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Sub
      End If
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|)
    If s = "" Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Chr(10) _
        & "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd||fffd||fffd||fffd|""", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Sub
      End If
    On Error Resume Next
    Shell |fffd||fffd||fffd||fffd|_IE & " " & s
'    Shell |fffd||fffd||fffd||fffd|_IE & " " & s, vbNormalFocus
    If Err() <> 0 Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|!" & Chr(10) _
        & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| Internet Explorer'|fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
      End If
End Sub

Attribute VB_Name = "P_1__|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
'
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| Q-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant

Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
Global |fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
' Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant

Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean
Global |fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant
Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant, Datime As Variant

Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean


'   *************************
'   *** |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
'   *************************
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_I()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    |fffd||fffd||fffd||fffd||fffd| = Null
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_R()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
    |fffd||fffd||fffd||fffd||fffd| = Null
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Time()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_I
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_R
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_I(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Variant)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_I
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd| I-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|), |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|)
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Variant)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd| P-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub


'   *********************************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
'   *********************************
' |fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then |fffd||fffd||fffd||fffd||fffd| = 101
    If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then
        |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      End If
End Sub

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0 Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|))
      End If
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Variant)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim d As Variant, Q As Variant
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0) Then Exit Function
    d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Date, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If Not NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then
        Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|)
        Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Q, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        If Q < d Then d = Q
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = d
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Variant)
Dim d As Variant, X As Integer, P As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0) Then Exit Function
    ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then
        d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Date, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(d, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|))
      Else
        d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)
        d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(d, |fffd||fffd||fffd||fffd||fffd|)
        d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(d, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(d, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
End Function


Attribute VB_Name = "P_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_I"
Option Explicit


Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd| = 1
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 2
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 3
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 4
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = 11
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = 12
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 13
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = 14
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = 15
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = 16

Global Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 20
Global |fffd||fffd||fffd||fffd|(1 To |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) As String
Const nMax = 256

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal i As Integer)
    If (i <= 0) Or (i > |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|(i)
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Variant) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0 |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
'
Dim Exl As Excel.Application   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim Wbk As Excel.Workbook
Dim i As Integer, j As Integer
Dim iErr As Integer, s As String

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd|(i) = ""
      Next i
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    iErr = 1
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then
'        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        GoTo 101
      End If
      
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    iErr = 2
    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|))
    On Error Resume Next
    Set Exl = New Excel.Application
    Set Wbk = Exl.Workbooks.Open(s)
    If Err <> 0 Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & Chr(10) _
        & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        GoTo 100
      End If
      
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    On Error GoTo 0
    iErr = 3
    With Exl.Worksheets(1)
        If .Cells(1, 1) <> "|fffd||fffd||fffd||fffd|" Then
        MsgBox "|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| --" & Chr(10) _
        & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd||fffd|""!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        GoTo 100
      End If
      
    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    iErr = 0
    i = 1
    Do While i < nMax
        i = i + 1
            If .Cells(i, 1) = "|fffd||fffd||fffd||fffd||fffd|" Then Exit Do
        s = .Cells(i, 1)
        If IsNumeric(s) Then
            j = CInt(s)
            If (j > 0) And (j <= |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
                |fffd||fffd||fffd||fffd|(j) = .Cells(i, 3)
              End If
          End If
      Loop
    End With
    
100:
    Wbk.Close
    Exl.Quit
101:
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = iErr
End Function



Attribute VB_Name = "P_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P"
Option Explicit
'
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = 219
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = 221
Global Const |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = 222


Global |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean
Private Exl As Excel.Application
Private Wbk As Excel.Workbook

Const iMax = 256

'   ******************************************
'   * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
'   ******************************************
''
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    On Error Resume Next
    Set Exl = New Excel.Application
    Set Wbk = Exl.Workbooks.Open(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)))
    If Err <> 0 Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        Wbk.Close
        Exl.Quit
        Exit Function
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
End Function

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    On Error Resume Next
    Wbk.Close
    Exl.Quit
    Set Exl = Nothing
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
End Sub

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
    On Error Resume Next
    Wbk.Save
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = (Err <> 0)
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(ByVal |fffd||fffd||fffd||fffd||fffd| As Long) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
Dim Q
        If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Function
    With Wbk.Worksheets(1)
    i = 0
    Do
        i = i + 1
        Q = .Cells(i, 1)
        If (Q = |fffd||fffd||fffd||fffd||fffd|) Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P = .Cells(i, 4)
            Exit Do
          End If
      Loop While i <= iMax
  End With
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(ByVal |fffd||fffd||fffd||fffd||fffd| As Long, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
Dim i As Integer
Dim Q
        If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Function
    With Wbk.Worksheets(1)
    i = 0
    Do
        i = i + 1
        Q = .Cells(i, 1)
        If (Q = |fffd||fffd||fffd||fffd||fffd|) Then
            .Cells(i, 4) = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P = True
            Exit Do
          End If
      Loop While i <= iMax
  End With
End Function


Attribute VB_Name = "P_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q"
Option Explicit

Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd|      |fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd|       |fffd||fffd||fffd||fffd|      |fffd||fffd||fffd||fffd|      |fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd|     |fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd|       |fffd||fffd||fffd||fffd|      |fffd||fffd||fffd||fffd|      |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd||fffd|    |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'                 12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
'   *******************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Q ***
'   *******************
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q(ByVal |fffd||fffd||fffd||fffd||fffd| As Long) As Variant
Dim Code As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = ""
' |fffd||fffd| 1 |fffd||fffd| 19
    If |fffd||fffd||fffd||fffd||fffd| < 20 Then
    Select Case |fffd||fffd||fffd||fffd||fffd|
      Case 1   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 2   ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 3    ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 4   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 5   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, YYMM
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 6   ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, YYMMDD
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 7   ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, HHMMSS
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 8   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, YYMMDD
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 9   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, , YYMMDD
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            
      Case 10   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 11   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 12   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 16   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) + HHMMSS2Time(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      End Select
    Exit Function
    End If
      
    If |fffd||fffd||fffd||fffd||fffd| < 100 Then
    Code = |fffd||fffd||fffd||fffd||fffd| Mod 10
    |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd| \ 10
    Select Case |fffd||fffd||fffd||fffd||fffd|
      Case 5   ' |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|-YY)
        If Code = 0 Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| * 100, Code)
          End If
      Case 6  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| Date)
        If Code = 0 Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = YYMMDD2Date(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Code)
          End If
      Case 7   ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| Date)
        If Code = 0 Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = HHMMSS2Time(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
          End If
      Case 8   ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If Code = 0 Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Code)
          End If
      Case 9   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If Code = 0 Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
          Else
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Code)
          End If
      End Select
    End If
End Function

Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal YYMMDD As Variant, Code As Integer)
Dim YY As Integer, MM As Integer, DD As Integer
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
        If NoData(YYMMDD) Then Exit Function
        If Not IsNumeric(YYMMDD) Then Exit Function
    DD = YYMMDD Mod 100
    YY = YYMMDD \ 100
    MM = YY Mod 100
    YY = YY \ 100
    Select Case Code
      Case 1    ' |fffd||fffd||fffd||fffd| "DD"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(DD)
      Case 4    ' |fffd||fffd||fffd||fffd||fffd| "MM"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MM)
      Case 5    ' |fffd||fffd||fffd||fffd||fffd| "MMM"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MM)
      Case 6    ' |fffd||fffd||fffd||fffd||fffd| "MMMM", |fffd||fffd|. |fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd|(MM)
      Case 7    ' |fffd||fffd||fffd||fffd||fffd| "MMMM", |fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd|(MM)
      Case 8    ' |fffd||fffd||fffd| "|fffd||fffd|"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(YY)
      Case 9    ' |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd|"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(YY)
      End Select
End Function

' ***** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| *****
Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal n As Integer) As String
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| "07"
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Format$(n \ 100, "00")
End Function

Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal n As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: "|fffd||fffd||fffd|", "|fffd||fffd||fffd|", ....
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MM2Str(n)
End Function

Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd|(ByVal n As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd| = ""
        If n <= 0 Then Exit Function
        If n > 12 Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd| = Trim(Mid(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, (n - 1) * 10 + 1, 10))
End Function

Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd|(ByVal n As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd| = ""
        If n <= 0 Then Exit Function
        If n > 12 Then Exit Function
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd| = Trim(Mid(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, (n - 1) * 10 + 1, 10))
End Function

Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal YY As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CStr((Year(Date) \ 100) * 100 + (YY Mod 100))
End Function


Attribute VB_Name = "R2_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
Dim Exl As Excel.Application
Dim Wbk As Excel.Workbook
Dim Wrs As Excel.Worksheet

'   *************************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ***
'   *************************
'
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1003)
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date2YYMMDD(Date, 1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(1002)
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Time2HHMMSS(Time())
End Sub


Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
Dim s As String
'    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "" Then
'          MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
'          Exit Function
'        End If
'    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & ".xls", |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|))
'    If Dir(s) <> "" Then
'        MsgBox "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!" & vbCrLf & _
'            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
'            "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", _
'            vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
'        Exit Function
'      End If

    s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        If s = "" Then Exit Function
    On Error Resume Next
    Set Exl = New Excel.Application
    If Err <> 0 Then
          MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Microsoft Excel!" & vbCrLf & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Excel |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|." & vbCrLf & _
            "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", _
            vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
          Exit Function
        End If
        Set Wbk = Exl.Workbooks.Add(s)
    If Err <> 0 Then
          MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|!" & vbCrLf & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
            "|fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", _
            vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        Wbk.Close
        Exl.Quit
        Exit Function
      End If
    Wbk.SaveAs FileName:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|))
'    Exl.Visible = True
End Function

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    Exl.Visible = True
    On Error Resume Next
    Set Wrs = Nothing
    Set Exl = Nothing
    Set Wbk = Nothing
End Sub


'   *************************
'   *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||5e8||fffd||fffd| ***
'   *************************
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_All, Subs_All
1:  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|101(|fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|)
' *** |fffd||fffd||fffd| 101 *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. 3-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
Dim i As Integer
        If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then Exit Sub
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
  
  If MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
    End If
    
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.03
    Set Wrs = Wbk.Worksheets(3)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.04
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd|
    
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| kTab * |fffd||fffd||fffd||fffd||fffd|, 0.05, 0.95
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    '   *****************************************
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs, Date - |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|) <> 0 Then GoTo 1
    '   *****************************************
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.95
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Inf, Subs_All
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Cur, Subs_All
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Hdr, Subs_All
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Sum, Subs_All

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs

  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd|)
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.97
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_End
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Mem
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Sum
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Tbl
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Hdr
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Inf
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs

1:
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub
'

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|201(|fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|)
' *** |fffd||fffd||fffd| 201 *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. 2-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
        If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then Exit Sub
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd|
    
    Set Wrs = Wbk.Worksheets(1)
     |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.05
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd|

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| kTab * |fffd||fffd||fffd||fffd||fffd|, 0.1, 0.9
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    '   *****************************************
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|) <> 0 Then GoTo 1
    '   *****************************************
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Inf, Subs_All
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Cur, Subs_All
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.95
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Hdr, Subs_All
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Sum, Subs_All

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd|)
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_End
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Mem
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Sum
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Tbl
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Hdr
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Inf
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    
1:  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|301(|fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, ByVal |fffd||fffd||fffd||fffd||fffd||fffd|, ByVal |fffd||fffd||fffd||fffd||fffd|)
' *** |fffd||fffd||fffd| 301 *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|. 2-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd|.|fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
        If NoData(|fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd| = 0) Then Exit Sub
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd| + 1
    
    Set Wrs = Wbk.Worksheets(1)
     |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.05
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, |fffd||fffd||fffd||fffd||fffd| + 1

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| kTab * (|fffd||fffd||fffd||fffd||fffd| + 1), 0.1, 0.9
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    '   *****************************************
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| + 1) <> 0 Then GoTo 1
    '   *****************************************
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Inf, Subs_All
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Cur, Subs_All
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0.95
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Hdr, Subs_All
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Sum, Subs_All

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Wrs = Wbk.Worksheets(2)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd|)
    Set Wrs = Wbk.Worksheets(1)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_End
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Mem
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Sum
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, 1, Sect_Tbl
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Tbl
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Hdr
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs, Sect_Inf
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
    
1:  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_S(|fffd||fffd||fffd||fffd||fffd| As Integer)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_S = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|)
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_S = "SSSSS"
End Function

'Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q(|fffd||fffd||fffd||fffd||fffd| As Integer)
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q = "QQQQQ"
'End Function

'Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(|fffd||fffd||fffd||fffd||fffd| As Integer)
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P = "PPPPP"
'End Function


Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, _
                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByRef |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
Dim a(1 To 64) As Double
Dim f As Double, b As Double
Dim i As Integer, j As Integer
Dim k As Integer, l As Integer
Dim iPos As Integer, iErr As Integer
    For i = 1 To |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        a(i) = 0
      Next i
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1 = a
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1(|fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd| As Date) As Variant
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 24 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Dim a(1 To 24)
Dim f As Double, b As Double
Dim i As Integer, j As Integer
Dim k As Integer, l As Integer
Dim iPos As Integer, iErr As Integer
    For i = 1 To 24
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1003 Then
            a(i) = |fffd||fffd||fffd||fffd|
          ElseIf |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1002 Then
            a(i) = i
          Else
            a(i) = 0
          End If
      Next i
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1 = a
End Function


Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Global Const Subs_P = 1
Global Const Subs_Q = 2
Global Const Subs_S = 4
Global Const Subs_All = 255
Global Const Subs_PQ = 3

'   ***************
'   * |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| *
'   ***************
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(s As String, |fffd||fffd||fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd||fffd| As Long) As String
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| {%Annn_XXXXX} |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "{", |fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "}".
' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| Annn
Dim i As Long
Dim r As String
    |fffd||fffd||fffd||fffd||fffd| = Len(s) + 1
    |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|
    i = InStr(|fffd||fffd||fffd||fffd||fffd|, s, "{%")
        If i = 0 Then Exit Function     ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd| = i
    i = InStr(i + 2, s, "}")
        If i = 0 Then Exit Function     ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd| = i + 1
    r = Mid(s, |fffd||fffd||fffd||fffd||fffd||fffd| + 2, |fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd| - 3)
    i = InStr(1, r, "_")
    If i <> 0 Then                      ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        r = Left(r, i - 1)
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = r
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByRef s As String, ByVal |fffd||fffd||fffd| As Integer) As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd| -- |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd||fffd| As Long
Dim i As Long, j As Long, k As Long
Dim iMacro As Long, pMacro As String
Dim Q As String, r As String
    |fffd||fffd||fffd||fffd||fffd| = Len(s)
    |fffd||fffd||fffd||fffd||fffd| = 1
    Q = ""
  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Do
        r = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(s, |fffd||fffd||fffd||fffd||fffd|, i, j)
        If i = j Then
            Q = Q & Mid(s, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd| + 1)
            Exit Do
          End If
        Q = Q & Mid(s, |fffd||fffd||fffd||fffd||fffd|, i - |fffd||fffd||fffd||fffd||fffd|)
        k = InStr("PQ S", Mid(r, 1, 1))
        k = k And |fffd||fffd||fffd|               ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If k <> 0 Then
          ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            r = Mid(r, 2)
            If IsNumeric(r) Then    '
              ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                ' ****************
                Select Case k
                  Case Subs_P    ' P
                    Q = Q & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P(CLng(r))
                  Case Subs_Q    ' Q
                    Q = Q & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Q(CLng(r))
                  Case Subs_S    ' S
                    Q = Q & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_S(CLng(r))
                  End Select
                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
                ' ****************
              Else
              ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                Q = Q & Mid(s, i, j - i)
              End If
          Else
          ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            Q = Q & Mid(s, i, j - i)
          End If
        |fffd||fffd||fffd||fffd||fffd| = j
      Loop
    s = Q
End Function
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit
'  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd| As Date, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
Dim i As Integer, j As Integer, k As Integer
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, iDay As Integer
Dim iStr As Integer, iPos As Integer
Dim |fffd||fffd||fffd||fffd| As Date
Dim a
  With Wrs
        If kTab = 0 Then Exit Function
    |fffd||fffd||fffd||fffd| = |fffd||fffd| - |fffd||fffd||fffd||fffd||fffd| + 1
    iDay = Sect(Sect_Tbl, 1) + TblBeg
    For k = 1 To |fffd||fffd||fffd||fffd||fffd|
        For i = 1 To kTab               ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
         If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1
            Exit Function
          End If
           |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = sTab(2, i)
            iPos = sTab(1, i)
            iStr = iDay
            ' *************************************
            a = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|)
            ' *************************************
 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (1)
            For j = 24 To 1 Step -1             ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
                .Cells(iStr, iPos) = a(j)
                iStr = iStr + 1
              Next j
          Next i
        iDay = iDay + TblLen
        |fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd| + 1
      Next k
  End With
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. 0 -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer, j As Integer
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer
Dim iStr As Integer, iPos As Integer
Dim a
  With Wrs
        If kTab = 0 Then Exit Function
    For i = 1 To kTab
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1
            Exit Function
          End If
        iPos = sTab(1, i)
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = sTab(2, i)
        ' *************************************
        a = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        ' *************************************
'            If n = 0 Then Exit Sub
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| > |fffd||fffd||fffd||fffd||fffd| Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|
 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        iStr = Sect(Sect_Tbl, 1) + |fffd||fffd||fffd||fffd||fffd|
        For j = 1 To |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1003 Then
                If a(j) = 0 Then
                    .Cells(iStr, iPos) = Null
                  Else
                    .Cells(iStr, iPos) = YYMMDD2Date(a(j))
                  End If
              Else
                .Cells(iStr, iPos) = a(j)
              End If
            iStr = iStr - 1
          Next j
      Next i
  End With
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer) As Integer
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. 0 -- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer, j As Integer
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer
Dim iStr As Integer, iPos As Integer
Dim a
  With Wrs
        If kTab = 0 Then Exit Function
    For i = 1 To kTab
         If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1
            Exit Function
          End If
        iPos = sTab(1, i)
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = sTab(2, i)
        ' *************************************
        a = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        ' *************************************
'            If n = 0 Then Exit Sub
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| > |fffd||fffd||fffd||fffd||fffd| Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|
 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        iStr = Sect(Sect_Tbl, 1) + |fffd||fffd||fffd||fffd||fffd|
        For j = 1 To |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 1003 Then
                If a(j) = 0 Then
                    .Cells(iStr, iPos) = Null
                  Else
                    .Cells(iStr, iPos) = YYMMDD2Date(a(j))
                  End If
              Else
                .Cells(iStr, iPos) = a(j)
              End If
            iStr = iStr - 1
          Next j
      Next i
  End With
End Function

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Private |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Object
Private |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean
Private Xmin As Single, Xmax As Single
Private |fffd||fffd||fffd||fffd||fffd| As Long, |fffd||fffd||fffd| As Long

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
    On Error Resume Next
    Set |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.Show
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = (Err = 0)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.Repaint
End Function

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal Q As Single)
    If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd| Q
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.Repaint
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.Repaint
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    On Error Resume Next
    Unload |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd| As Long, Zmin As Single, Zmax As Single)
    If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Sub
    Xmin = Zmin
    Xmax = Zmax
    |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd| = 0
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Xmin
End Sub

 Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal k As Long)
 Dim Q As Single
     If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Sub
    |fffd||fffd||fffd| = |fffd||fffd||fffd| + k
    Q = Xmin + (Xmax - Xmin) * |fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd|
     |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Q
End Sub


Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{2662E4A2-FB3E-49BB-903F-CA8BE7E201A3}{31C4FC64-F0A4-4657-99A4-29BC5FBDDD1C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Const cBase = &HFFC0C0
Const cFore = &HFFFF80
Dim |fffd||fffd||fffd| As Boolean
Dim |fffd||fffd||fffd||fffd||fffd| As String

Private Sub UserForm_Terminate()
    |fffd||fffd||fffd| = False                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    DoEvents
End Sub


' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
Dim i As Integer
    For i = 0 To 7
        Me("L" & CInt(i)).BackColor = cBase
      Next i
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal i As Integer)
Static m As Integer
    Me("L" & CInt(m)).BackColor = cBase
    m = i Mod 8
    Me("L" & CInt(m)).BackColor = cFore
End Sub

Public Sub |fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String)
    |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = True
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].SetFocus
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = False
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      End If
        
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  
  On Error Resume Next
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = True
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].SetFocus
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = False
End Sub


Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
Static T As Double
Dim i As Long

    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
    T = Now()
    i = 0
    |fffd||fffd||fffd| = True
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "ATD" & |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 60
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    Do                      ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        DoEvents
        DoPoll
        If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() Then Exit Do
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'        If |fffd||fffd||fffd| = False Then
'            ReceiverState = RS_UserEsc
'          End If
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Do
        If T <> Now() Then
            T = Now()
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| i
            i = i + 1
          End If
        Sleep 20
     Loop
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
    
  On Error Resume Next      ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() <> 0 Then
        ReceiverState = RS_BadData
      End If
      
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ReceiverState = 0 Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MdmKWord)
        If MdmKWord = AC_CT Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!
          End If
        Exit Function
      End If
          
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ReceiverState = RS_UserEsc Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
      ElseIf ReceiverState = RS_TimeOut Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|"
      Else
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
       End If
  On Error GoTo 0
End Function

Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|() As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd|

    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True          ' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| OK
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Do                      ' |fffd||fffd||fffd|
        DoEvents
        DoPoll
'        If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|() Then Exit Do
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then Exit Do
        Sleep 20
     Loop
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
    
  On Error Resume Next      ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|?
'    If ReceiverState = 0 Then
'        If MdmKWord = AC_NC Then
'            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MdmKWord)
'            |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False     ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "NO CARRIER"
'          Else
'            MdmKWord = AC_CT
'            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
'          End If
'        On Error GoTo 0
'        Exit Function
'      End If
          
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ReceiverState = RS_UserEsc Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
        On Error GoTo 0
        Exit Function
      End If
      
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "NO CARRIER"
    If ReceiverState = RS_TimeOut Then
        If MdmKWord = AC_NC Then
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(MdmKWord)
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False     ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "NO CARRIER"
            On Error GoTo 0
            Exit Function
          End If
      End If
    '
    MdmKWord = AC_CT
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
End Function


' *** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    ReceiverState = RS_UserEsc
'    |fffd||fffd||fffd| = False
    ClosePort
    Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| WrkPortNumber
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{CC9EF8DF-3FD0-465C-835F-621FC180F6B0}{23A60C3F-62D4-4AC9-BAE8-92C0B236C587}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim |fffd||fffd||fffd||fffd||fffd||fffd| As Long  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd|()
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0
    |fffd||fffd||fffd||fffd| 0
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = False
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = True
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = True
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd|()
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1
    |fffd||fffd||fffd||fffd| 1
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = False
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = True
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = False
End Sub

Public Sub |fffd||fffd||fffd||fffd|(ByVal Q As Single)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. Q -- |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If Q < 0# Then Q = 0#
    If Q > 1# Then Q = 1#
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Width = Me![|fffd||fffd||fffd||fffd|].Width * Q
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True
End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{CAE8A865-76DC-4425-8838-8F5FBBD2CB5E}{0A648A99-0964-4314-A6DC-692142E07AB9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Dim |fffd||fffd||fffd||fffd||fffd| As Integer        ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)


' *****************************
' **** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ****
' *****************************
Private Sub UserForm_Initialize()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "MC601/602"
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub UserForm_Terminate()
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If OnLine Then
        Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      End If
    StopPortMaster
    StopPoll
End Sub

' **********************
' **** |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ****
' **********************
Private Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
    If Me![|fffd||fffd||fffd||fffd||fffd||fffd|] Then
        i = 1
      ElseIf Me![|fffd||fffd||fffd||fffd||fffd|] Then
        i = 2
      ElseIf Me![|fffd||fffd||fffd||fffd|] Then
        i = 3
      ElseIf Me![|fffd||fffd||fffd||fffd|] Then
        i = 4
      Else
        i = 0
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| i
End Function

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd|_Change()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|_Change()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd|_Change()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd|_Change()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal i As Integer)
        If |fffd||fffd||fffd||fffd||fffd| = i Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd| = i
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = Null
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = Null
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = Null
    
    Select Case |fffd||fffd||fffd||fffd||fffd|
      Case 1        ' |fffd||fffd||fffd||fffd||fffd||fffd|
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H80000016
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = False
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H8000000F
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
      Case 2        ' |fffd||fffd||fffd||fffd||fffd|
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H80000016
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = False
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H80000016
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = False
      Case 4        ' |fffd||fffd||fffd||fffd|
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H8000000F
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H8000000F
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
      Case Else        ' |fffd||fffd||fffd||fffd|
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H8000000F
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H8000000F
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
      End Select
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean)
'
    OnPort = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If OnPort = True Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &HC0FFC0
        Me![|fffd||fffd||fffd||fffd||fffd|].Enabled = False
      Else
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = False
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = False
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H80000016
        Me![|fffd||fffd||fffd||fffd||fffd|].Enabled = True
      End If
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean)
    '
    OnLine = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If OnLine = True Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = True
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &HC0FFC0
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      Else
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Locked = False
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|].BackColor = &H80000016
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
      End If
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean)
'
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = True Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = True
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (3)
      Else
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = False
      End If
End Sub



' *************************
' **** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ****
' *************************
Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
Dim i As Integer
  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If OnPort Then
      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If OnLine Then
            Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
          End If
      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        StopPortMaster
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
        Me![|fffd||fffd||fffd||fffd||fffd|].Enabled = True
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = Null
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = Null
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = False
        Exit Sub
      End If
      
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    Select Case |fffd||fffd||fffd||fffd||fffd|
      Case 1    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        StartPortMaster
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (2)
      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Or (Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = 0) Then
            ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
            i = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0)
            If i = 0 Then
                Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_NoC)
                StopPortMaster
                Exit Sub
              End If
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = i
          Else
            ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
            i = MC601|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|])
            If i <> 0 Then
                Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_Opn)
                StopPortMaster
                Exit Sub
              End If
          End If
      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
        If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_Cal)
            Exit Sub
          End If
        |fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(98)
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
        Exit Sub
        
      Case 2    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        StartPortMaster
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (2)
      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Or (Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = 0) Then
          ' |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
            i = Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(0)
            If i = 0 Then
                Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_NoM)
                StopPortMaster
                Exit Sub
              End If
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = i
          Else
          ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
            i = Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|])
            If i <> 0 Then
                Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_Opn)
                StopPortMaster
                Exit Sub
              End If
          End If
      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        i = Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
        If i = 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_Mdm)
          Else
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = True
          End If
        Exit Sub
        
      Case 4    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = " |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)"
        |fffd||fffd||fffd||fffd||fffd| = 101
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
        Exit Sub
        
      Case Else
        Exit Sub
      End Select
      
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    If OnLine Then
        Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
        Exit Sub
      End If
      
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd|?", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
         Exit Sub
      End If
    If Mdm_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) = False Then
        Exit Sub
      End If
  '
    ChannalMode = CM_Line
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = Null
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (3)
    
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(CE_Cal)
        Exit Sub
      End If
    |fffd||fffd||fffd||fffd||fffd| = MC601_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(98)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
End Sub


' **************************
' **** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||5e8||fffd||fffd||fffd| ****
' **************************

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean)
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Me![|fffd||fffd||fffd||fffd|1].Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Me![|fffd||fffd||fffd||fffd||fffd|1].Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Boolean)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer
    Me![|fffd||fffd||fffd||fffd||fffd|].Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Me![|fffd||fffd||fffd||fffd||fffd|].Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 2 To 3
'        Me("|fffd||fffd||fffd||fffd||fffd||fffd|" & CStr(i)).Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Me("|fffd||fffd||fffd||fffd|" & CStr(i)).Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Me("|fffd||fffd||fffd||fffd||fffd|" & CStr(i)).Enabled = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Next i
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
      End If
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False
        Me![|fffd||fffd||fffd||fffd||fffd|].Visible = False
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = False
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True
        Me![|fffd||fffd||fffd||fffd||fffd|].Visible = True
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|].Visible = True
      End If
End Sub

' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
Dim s As String
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
        s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| s, Subs_Q
        Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = s
      End If
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
'    Me![|fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'    Me![|fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Me![|fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    Me![|fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    Me![|fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|) + 1
End Sub


' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ***
Private Sub |fffd||fffd||fffd||fffd||fffd||fffd|1_Click()
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|]
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then Exit Sub
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    If CStr(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) = CStr(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then Exit Sub
    MsgBox "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|," & _
        vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd|2_Click()
    Me![|fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_I Me![|fffd||fffd||fffd||fffd||fffd||fffd|]
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub


' *** |fffd||fffd||fffd||fffd| "|fffd|" ***
Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then Exit Sub
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) = 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        Cancel = True
      End If
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_AfterUpdate()
    |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub


' *** |fffd||fffd||fffd||fffd||fffd||fffd| ***
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then Exit Sub
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) = 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        Cancel = True
      End If
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_AfterUpdate()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|1_Click()
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd|1_Click()
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| > |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub


' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    Me.|fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|) > Date Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Date, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
        If NoData(Me.|fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
        If Str2YYMMDD(Me.|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) <> 0 Then Exit Sub
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
    Cancel = True
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|_AfterUpdate()
    If NoData(Me.|fffd||fffd||fffd||fffd||fffd|) Or NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me.|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd|3_Click()
Dim d As Date, l As Long
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    l = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    d = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(l, |fffd||fffd||fffd||fffd||fffd|)
    If d < Date Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = l
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|3_Click()
Dim d As Integer, m As Integer, Y As Integer
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub


' *** |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
'    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
    If Not (NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)) Then
        If (|fffd||fffd||fffd||fffd||fffd||fffd||fffd| > |fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      End If
    Me![|fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
        If NoData(Me![|fffd||fffd||fffd||fffd||fffd|]) Then Exit Sub
        If Str2YYMMDD(Me![|fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) <> 0 Then Exit Sub
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
    Cancel = 1
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|_AfterUpdate()
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd|]) Or NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Null
      Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    End If
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd|2_Click()
Dim d As Date, l As Long
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd|2_Click()
Dim d As Integer, m As Integer, Y As Integer
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then Exit Sub
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

' ***********************
' ****   |fffd| |fffd| |fffd| |fffd| |fffd|   ****
' ***********************
Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, True
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Me![|fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, True
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
'    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|, True
End Sub



' *************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||5e8||fffd||fffd| ***
' *************************
Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
Dim |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|
' Dim |fffd||fffd||fffd||fffd| As Object

    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Sub
      End If
    If NoData(Me![|fffd||fffd||fffd||fffd||fffd||fffd|]) Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Sub
      End If
    If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0) Then
      Else
        If NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Or NoData(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then
            MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
            Exit Sub
          End If
      End If
    
    If Not |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd|]) Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Sub
      End If
    
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Date
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Time()
    |fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|) + 1
    If |fffd||fffd||fffd||fffd||fffd| <= 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        Exit Sub
      End If
    |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Date2YYMMDD(Date, 2))
    
  ' ***********************
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = False
    Select Case |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Case 101
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|101 Me![|fffd||fffd||fffd||fffd||fffd||fffd|], Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|
      Case 201
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|201 Me![|fffd||fffd||fffd||fffd||fffd||fffd|], Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|
      Case 301
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|301 Me![|fffd||fffd||fffd||fffd||fffd||fffd|], Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|
      Case Else
        |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Me![|fffd||fffd||fffd||fffd||fffd||fffd|], Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|
      End Select
  ' ***********************
  
    Me![|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = False
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = ""
End Sub


Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{3ADE8CEA-0C9B-4541-8D01-FA021C8C5D1B}{18E0C5F1-E798-436A-BBFC-E83C0EEAF3E5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| API

Dim |fffd||fffd||fffd| As Boolean

Private Sub UserForm_Terminate()
    |fffd||fffd||fffd| = False                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
End Sub



Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    |fffd||fffd||fffd| = True
    Do                      ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        DoEvents
        Sleep 20
        Me![|fffd||fffd||fffd||fffd||fffd|] = Time()
      Loop Until |fffd||fffd||fffd| = False
End Sub


Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    |fffd||fffd||fffd| = False
    
End Sub

Private Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_Click()
    Me![|fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd||fffd| !!!"
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ("P412-55-45")
    Me![|fffd||fffd||fffd||fffd||fffd||fffd|] = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| !!!"
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd|"
Option Explicit

Dim mStr As Long, mPos As Long          ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Global Const Sect_All = 0
Global Const Sect_Inf = 1
Global Const Sect_Hdr = 2
Global Const Sect_Tbl = 3
Global Const Sect_Sum = 4
Global Const Sect_Cur = 5
Global Const Sect_Mem = 6
Global Const Sect_End = 7

Global Const mSect = 7                  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Global Sect(1 To mSect, 1 To 2) As Long    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd|      |fffd||fffd||fffd||fffd||fffd|     |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd|     |fffd||fffd||fffd||fffd||fffd||fffd||fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|     "
'                 "1234567890123456789012345678901234567890123456789012345678901234567890"

' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|)
Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd|"
Const |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd|"
Global TblNum As Long      ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd|)
Global TblBeg As Long      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Global TblDat As Long      ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Global TblLen As Long      ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|)
Global Const mTab = 32
Global kTab As Long                        ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Global sTab(1 To 2, 1 To mTab) As Long     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' *****************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' *****************
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Dim i As Long, k As Long
Dim r As Excel.Range, Q As Excel.Range
Dim s As String
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To mSect
        Sect(i, 1) = 0
        Sect(i, 2) = 0
      Next i
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    mStr = Wrs.UsedRange.Row + Wrs.UsedRange.Rows.Count - 1
    mPos = Wrs.UsedRange.Column + Wrs.UsedRange.Columns.Count - 1
  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  With Wrs
    ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd|"
    If .Cells(1, 1) <> Trim(Mid(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 1, 10)) Then Exit Sub  ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!
    Sect(Sect_Inf, 1) = 1
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set r = .Range(.Cells(Sect_Inf, 1), .Cells(mStr, 1))
    For i = 2 To mSect
        s = Trim(Mid(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 10 * (i - 1) + 1, 10))
        Set Q = r.Find(s, LookAt:=xlWhole)
        If Not (Q Is Nothing) Then
            Sect(i, 1) = Q.Row
            Set r = .Range(Q, .Cells(mStr, 1))
          End If
      Next i
    End With
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    k = mStr + 1
    For i = mSect To 1 Step -1
        If Sect(i, 1) <> 0 Then
            Sect(i, 2) = k - Sect(i, 1) - 1
            k = Sect(i, 1)
          End If
      Next i
End Sub

' ****************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' ****************
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Long, k As Long
  With Wrs
    i = Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 1)
        If i = 0 Then Exit Sub
    k = Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 2)
    .Range(.Cells(i, 1), .Cells(i + k, 1)).EntireRow.Delete
    End With
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| 0)
Dim i As Long
  With Wrs
    i = Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 1)
        If i = 0 Then Exit Sub
    .Cells(i + |fffd||fffd||fffd||fffd||fffd|, 1).EntireRow.Delete
    Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 2) = Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 2) - 1
    End With
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Long
  With Wrs
    i = Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 1)
        If i = 0 Then Exit Sub
    .Cells(i, 1).EntireRow.Delete
    End With
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet)
  With Wrs
    .Cells(1, 1).EntireColumn.Delete
    End With
End Sub

' ******************
' *** |fffd||fffd||fffd||fffd||fffd||fffd| ***
' ******************
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd||fffd| As Integer, ByVal |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Dim i As Integer, j As Integer
Dim s As String
    With Wrs
    If |fffd||fffd||fffd||fffd||fffd||fffd| = Sect_All Then
        For i = 1 To mStr
        For j = 1 To mPos
            If Not IsError(.Cells(i, j)) Then
                s = .Cells(i, j)
                If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(s, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then .Cells(i, j) = s
              End If
          Next j
          Next i
      Else
        If Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 1) = 0 Then Exit Sub
        If Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 2) = 0 Then Exit Sub
        For i = Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 1) + 1 To Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 1) + Sect(|fffd||fffd||fffd||fffd||fffd||fffd|, 2)
        For j = 2 To mPos
            If Not IsError(.Cells(i, j)) Then
                s = .Cells(i, j)
                If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(s, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) Then .Cells(i, j) = s
              End If
          Next j
          Next i
      End If
  End With
End Sub

' *************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' *************************
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim ii As Long, jj As Long
Dim i As Long, k As Long
Dim s As String
  With Wrs
    kTab = 0
    k = Sect(Sect_Tbl, 1)
        If k = 0 Then Exit Sub
    i = 2
    Do While i <= mPos
        s = .Cells(k, i)
            If s = "" Then GoTo 1
        s = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(s, 1, ii, jj)
            If s = "" Then GoTo 1
            If Mid(s, 1, 1) <> "S" Then GoTo 1
        s = Mid(s, 2)
            If Not IsNumeric(s) Then GoTo 1
        kTab = kTab + 1
        sTab(1, kTab) = i
        sTab(2, kTab) = CLng(s)
1:      i = i + 1
      Loop
    End With
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd|) |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd|)
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim r As Excel.Range, Q As Excel.Range
Dim i As Long, k As Long
    TblBeg = 0
    TblDat = 0
    TblLen = 0
    i = Sect(Sect_Tbl, 1)
        If i = 0 Then Exit Sub
    TblLen = Sect(Sect_Tbl, 2)
  With Wrs
    Set r = .Range(.Cells(i + 1, 1), .Cells(i + TblLen, 1))
    Set Q = r.Find(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, LookAt:=xlWhole)
        If Q Is Nothing Then Exit Sub
    TblBeg = Q.Row - i
    Set r = .Range(Q, .Cells(i + TblLen, 1))
    Set Q = r.Find(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, LookAt:=xlWhole)
        If Q Is Nothing Then Exit Sub
    TblDat = Q.Row - i - TblBeg
  End With
End Sub


' ************************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ***
' ************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
'
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd| As Long)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Dim i As Long, k As Long
        If |fffd||fffd||fffd||fffd||fffd| <= 0 Then Exit Sub
    i = Sect(Sect_Tbl, 1)
        If i = 0 Then Exit Sub
    i = i + 1
  With Wrs
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    k = Sect(Sect_Tbl, 2) - 1
    If k > 0 Then
        .Range(.Cells(i + 1, 1), .Cells(i + k, 1)).EntireRow.Delete
      End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If kTab <> 0 Then
        For k = 1 To kTab
            .Cells(i, sTab(1, k)) = Null
          Next k
      End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-1 |fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd||fffd| > 1 Then
        For k = 1 To |fffd||fffd||fffd||fffd||fffd| - 1
            .Cells(i, 1).EntireRow.Copy
            i = i + 1
            .Cells(i, 1).EntireRow.Insert
          Next k
      End If
    End With
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd| As Long)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Dim i As Long, k As Long
        If |fffd||fffd||fffd||fffd||fffd| <= 0 Then Exit Sub
    i = Sect(Sect_Tbl, 1)
        If i = 0 Then Exit Sub
    i = i + TblBeg
  With Wrs
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If kTab <> 0 Then
        For k = 1 To kTab
        .Range(.Cells(i, sTab(1, k)), .Cells(i + TblDat, sTab(1, k))) = Null
'            .Cells(i, sTab(1, k)) = Null
          Next k
      End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-1 |fffd||fffd||fffd|
    i = Sect(Sect_Tbl, 1) + 1
    If |fffd||fffd||fffd||fffd||fffd| > 1 Then
        For k = 1 To |fffd||fffd||fffd||fffd||fffd| - 1
            .Range(.Cells(i, 1), .Cells(i + TblLen - 1, 1)).EntireRow.Copy
            i = i + TblLen
            .Cells(i, 1).EntireRow.Insert
          Next k
      End If
    End With
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
End Sub

' ********************************
' *** |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ***
' ********************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|)
'
Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd| As Long)
Dim i As Long, k As Long
        If |fffd||fffd||fffd||fffd||fffd| <= 0 Then Exit Sub
    i = Sect(Sect_Tbl, 1)
        If i = 0 Then Exit Sub
    i = i + 1
  With Wrs
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    k = Sect(Sect_Tbl, 2) - 1
    If k > 0 Then
        .Range(.Cells(i + 1, 1), .Cells(i + k, 1)).EntireRow.Delete
      End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-1 |fffd||fffd||fffd|
    If |fffd||fffd||fffd||fffd||fffd| > 1 Then
        For k = 1 To |fffd||fffd||fffd||fffd||fffd| - 1
            .Cells(i, 1).EntireRow.Copy
            i = i + 1
            .Cells(i, 1).EntireRow.Insert
          Next k
      End If
    End With
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet, ByVal |fffd||fffd||fffd||fffd||fffd| As Long)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Dim r As Excel.Range
Dim i As Long, k As Long
        If |fffd||fffd||fffd||fffd||fffd| <= 0 Then Exit Sub
    i = Sect(Sect_Tbl, 1)
        If i = 0 Then Exit Sub
    i = i + 1
  With Wrs
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    k = Sect(Sect_Tbl, 2) - 1
    If k > 0 Then
        .Range(.Cells(i + 1, 1), .Cells(i + k, 1)).EntireRow.Delete
      End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1-|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
    If TblLen > 1 Then
        .Cells(i, 1).EntireRow.Copy
        i = i + 1
        .Cells(i, 1).EntireRow.Insert
        .Range(.Cells(i, 2), .Cells(i, mPos)) = Null
       End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| TblLen-2 |fffd||fffd||fffd||fffd||fffd|
    If TblLen > 2 Then
        For k = 1 To TblLen - 2
            .Cells(i, 1).EntireRow.Copy
            i = i + 1
            .Cells(i, 1).EntireRow.Insert
          Next k
      End If
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-1 |fffd||fffd||fffd|
    i = Sect(Sect_Tbl, 1) + 1
    If |fffd||fffd||fffd||fffd||fffd| > 1 Then
        For k = 1 To |fffd||fffd||fffd||fffd||fffd| - 1
            .Range(.Cells(i, 1), .Cells(i + TblLen - 1, 1)).EntireRow.Copy
            i = i + TblLen
            .Cells(i, 1).EntireRow.Insert
          Next k
      End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If TblLen > 1 Then
        For k = 1 To |fffd||fffd||fffd||fffd||fffd|
            .Range(.Cells(i + 1, 1), .Cells(i + TblLen - 1, 1)).EntireRow.Delete
            i = i - TblLen
          Next k
      End If
    End With
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Wrs
End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wrs As Excel.Worksheet)
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (Sect_Mem)
Dim i As Integer, j As Integer
Dim s As String
        If Sect(Sect_Mem, 1) = 0 Then Exit Sub
        If Sect(Sect_Mem, 2) = 0 Then Exit Sub
  With Wrs
    For i = Sect(Sect_Mem, 1) + 1 To Sect(Sect_Mem, 1) + Sect(Sect_Mem, 2)
        s = .Cells(i, 1)
        If IsNumeric(s) Then
            |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_P CInt(s), .Cells(i, 3)
          End If
      Next i
    End With
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_Open()
'    StartPoll
End Sub

'Private Sub Workbook_Close()
'    StopPoll
'End Sub

Public Sub |fffd||fffd||fffd||fffd||fffd|()
'    |fffd||fffd||fffd||fffd|1.Show
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.Show
    StartPoll
End Sub

Public Sub StartTest()
'    F_Setup.Show
End Sub



' InQuest injected base64 decoded content
' y:-jT

INQUEST-PP=macro
