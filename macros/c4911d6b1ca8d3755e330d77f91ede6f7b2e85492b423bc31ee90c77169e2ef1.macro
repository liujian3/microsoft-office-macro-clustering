Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "SP_Level, 45, 0, MSForms, SpinButton"

Option Explicit

Private Sub SP_Level_GotFocus()
On Error Resume Next
    With Sheets("Mytetris")
        Level = SP_Level.Value
        .Range("U14") = .Range("Level") * 10   ''''NOTNECESARY
        .Range("D24").Select
    End With
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Select Case Target.Address
        Case "$D$23":   Move_Up
        Case "$C$24":   Move_Left
        Case "$E$24":   Move_Right
        Case "$D$25":   Move_Down
    End Select
        Range("D24").Select
End Sub



Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Module_Blocks"

Option Explicit
Option Private Module

Sub Block_Outside()
Dim X As Byte
Rotation = 1: Rota = 0
    With Sheets("MyTetris")
        If .Range("W14") = "X" Then Exit Sub
        .Buttons("Timing").Visible = False
        .Shapes("SB_Screen").Visible = False
    End With
    Randomize:  Block_Out = Int((7 * Rnd) + 1)   'XXXXCHECK OK
        For X = 1 To 7
            Sheets("MyTetris").Shapes("Block_" & X).Visible = False
        Next X
            Sheets("MyTetris").Shapes("Block_" & Block_Out).Visible = True
End Sub
        
Sub Block_Inside()
Dim X As Byte
Dim Rng As Range
Dim Rg As Range
Dim Non()
    If Sheets("MyTetris").Range("W14") = "X" Then Exit Sub
        Set Rng = Range("L3:O4")
            Block_In = Block_Out
        Select Case Block_In
            Case 1: Non = Array(5, 6, 7, 8)
            Case 2: Non = Array(2, 3, 6, 7)
            Case 3: Non = Array(1, 2, 3, 6)
            Case 4: Non = Array(1, 2, 3, 5)
            Case 5: Non = Array(2, 3, 4, 8)
            Case 6: Non = Array(1, 2, 6, 7)
            Case 7: Non = Array(3, 4, 6, 7)
        End Select
            ReDim Preserve Non(0 To 3)
        With Rng
            Set Rg = Union(.Cells(Non(0)), .Cells(Non(1)), .Cells(Non(2)), .Cells(Non(3)))
        End With
            For X = 0 To 3
                Set MyBlock(X) = Rng.Cells(Non(X))
                With MyBlock(X)
                    .BorderAround ColorIndex:=xlAutomatic, Weight:=xlThin
                End With
            Next X
                Set Block_X = Union(MyBlock(0), MyBlock(1), MyBlock(2), MyBlock(3))
                Block_X.Interior.ColorIndex = BlockColor(Block_In - 1)
                Call Block_Outside
End Sub

Sub Move_Left()
Dim X As Variant
    With Sheets("MyTetris")
        If .Range("V14") = "" Or _
           .Buttons("Timing").Visible = True Or _
           .Buttons("Boton_Play").Caption = "CONTINUE" Then
                Exit Sub
        End If
    End With
    For X = 0 To 3
        If Intersect(MyBlock(X).Offset(0, -1), Rg_to_Play) Is Nothing Then Exit Sub
        If Intersect(MyBlock(X).Offset(0, -1), Block_X) Is Nothing Then
            If MyBlock(X).Offset(0, -1).Interior.ColorIndex <> xlNone Then Exit Sub
        End If
    Next X
        Block_X.Clear
        For X = 3 To 0 Step -1
            Set MyBlock(X) = MyBlock(X).Offset(0, -1)
            MyBlock(X).BorderAround ColorIndex:=xlAutomatic, Weight:=xlThin
        Next X
            Set Block_X = Union(MyBlock(0), MyBlock(1), MyBlock(2), MyBlock(3))
            Block_X.Interior.ColorIndex = BlockColor(Block_In - 1)
End Sub

Sub Move_Right()
Dim X  As Variant
    With Sheets("MyTetris")
        If .Range("V14") = "" Or _
           .Buttons("Timing").Visible = True Or _
           .Buttons("Boton_Play").Caption = "CONTINUE" Then
                Exit Sub
        End If
    End With
    For X = 0 To 3
        If Intersect(MyBlock(X).Offset(0, 1), Rg_to_Play) Is Nothing Then Exit Sub
        If Intersect(MyBlock(X).Offset(0, 1), Block_X) Is Nothing Then
            If MyBlock(X).Offset(0, 1).Interior.ColorIndex <> xlNone Then Exit Sub
        End If
    Next X
        Block_X.Clear
        For X = 3 To 0 Step -1
            Set MyBlock(X) = MyBlock(X).Offset(0, 1)
            MyBlock(X).BorderAround ColorIndex:=xlAutomatic, Weight:=xlThin
        Next X
            Set Block_X = Union(MyBlock(0), MyBlock(1), MyBlock(2), MyBlock(3))
            Block_X.Interior.ColorIndex = BlockColor(Block_In - 1)
End Sub

Sub Move_Down() ''''''''''''ANDONI
Dim X As Variant
Dim Y As Variant
Dim Cell As Range
On Error Resume Next
    With Sheets("MyTetris")
        If .Range("V14") = "" Or _
           .Buttons("Timing").Visible = True Or _
           .Buttons("Boton_Play").Caption = "CONTINUE" Then
                Exit Sub
        End If
    End With
    For X = 3 To 0 Step -1
        If Sheets("MyTetris").Range("X14").Value = "X" Then Exit Sub
        If Application.WorksheetFunction.CountA(Rg_to_Play) <> 1 Then
            If Range("Screen") <> 23 Then Exit Sub
        End If
        If Range("U15") <> "" Then
            Range("U15,V15,W15") = ""
            For Each Cell In Block_X
                Set MyBlock(Y) = Cell
                Y = Y + 1
            Next Cell
            For Y = 3 To 0 Step -1
                If Intersect(MyBlock(Y).Offset(1, 0), Block_X) Is Nothing Then
                    If MyBlock(X).Offset(1, 0).Interior.ColorIndex <> xlNone Or _
                        Intersect(MyBlock(Y).Offset(1, 0), Rg_to_Play) Is Nothing Then
                        Block_X.Font.Bold = True
                        Call Blocks_Checking
                    End If
                End If
            Next Y
            GoTo GoNext
        End If
        If Intersect(MyBlock(X).Offset(1, 0), Block_X) Is Nothing Then
            If MyBlock(X).Offset(1, 0).Interior.ColorIndex <> xlNone Or _
                Intersect(MyBlock(X).Offset(1, 0), Rg_to_Play) Is Nothing Then
                Block_X.Font.Bold = True
                Call Blocks_Checking
                If Block_In = 0 Then Exit Sub
                'XXXXCHECK Is it Necesary?
                'Avoids problems when Playing with Block_In = 1
                'If MyBlock(3).Offset(1, 0).Interior.ColorIndex <> xlNone Then
                 '   Call Blocks_Checking
                'End If
                'Anyway...
                If Sheets("MyTetris").Shapes("GOver").Visible = True Then Exit Sub
                If Sheets("MyTetris").Range("X14").Value = "X" Then Exit Sub
            End If
        End If
    Next X
GoNext:
        Block_X.Clear
        For X = 3 To 0 Step -1
            Set MyBlock(X) = MyBlock(X).Offset(1, 0)
            MyBlock(X).BorderAround ColorIndex:=xlAutomatic, Weight:=xlThin
        Next X
            Set Block_X = Union(MyBlock(0), MyBlock(1), MyBlock(2), MyBlock(3))
            Block_X.Interior.ColorIndex = BlockColor(Block_In - 1)
            If Range("Screen") = 23 Then Call Block_Random
End Sub

Sub Move_Up()
Dim X As Variant
Dim Cell As Range, Rg As Range
Dim MyArray()
Dim Rg_Rotation()
    With Sheets("MyTetris")
        If .Range("V14") = "" Or _
           .Buttons("Timing").Visible = True Or _
           .Buttons("Boton_Play").Caption = "CONTINUE" Then
                Exit Sub
        End If
    End With
        Rg_Rotation = Array(, , , , , , 2, 1 _
            , _
            , , , , , , , , 2, 3, 4, 1 _
            , , 2, 3, 4, 1 _
            , , 2, 3, 4, 1 _
            , , 2, 1 _
            , , , , 2, 1)
    Select Case ((Block_In * 5) + Rotation)                             'XXXXCHECK
        Case 6:     MyArray = Array(-2, -1, 0, 1, 1, 0, -1, -2)         '''''Roja
        Case 7:     MyArray = Array(2, 1, 0, -1, -1, 0, 1, 2)           '''''Roja
        Case 16:    MyArray = Array(-1, 0, 0, 0, 1, 0, 0, 0)            ''''Gris
        Case 17:    MyArray = Array(1, 1, 1, 0, 0, -1, -1, 1)           ''''Gris
        Case 18:    MyArray = Array(-1, -1, -1, 0, 0, 0, 0, -1)         ''''Gris
        Case 19:    MyArray = Array(1, 0, 0, 0, -1, 1, 1, 0)            ''''Gris
        Case 21:    MyArray = Array(-1, 0, 1, 0, 0, -1, -2, 1)          '''''AzulOscuro
        Case 22:    MyArray = Array(1, 1, 0, 0, 2, 0, 1, 1)             '''''AzulOscuro
        Case 23:    MyArray = Array(-1, -2, -1, 0, -1, 2, 1, 0)         '''''AzulOscuro
        Case 24:    MyArray = Array(1, 1, 0, 0, -1, -1, 0, -2)          '''''AzulOscuro
        Case 26:    MyArray = Array(-1, -1, 0, 0, 0, 0, -2, -2)         ''''VerdeClaro
        Case 27:    MyArray = Array(1, 2, 1, 0, 0, -1, 1, 2)            ''''VerdeClaro
        Case 28:    MyArray = Array(-1, -1, 0, 0, 2, 2, 0, 0)           ''''VerdeClaro
        Case 29:    MyArray = Array(1, 0, -1, 0, -2, -1, 1, 0)          ''''VerdeClaro
        Case 31:    MyArray = Array(-1, 0, -1, 0, 2, 0, 1, -1)          '''''AzulClaro
        Case 32:    MyArray = Array(1, 0, 1, 0, -2, 0, -1, 1)           '''''AzulClaro
        Case 36:    MyArray = Array(-1, 0, -1, 0, -1, -2, 1, 0)         '''''Rosa
        Case 37:    MyArray = Array(1, 0, 1, 0, 1, 2, -1, 0)            '''''Rosa
        Case Else:  Exit Sub
    End Select
     For X = 3 To 0 Step -1     ''''OJEAR
        If Intersect(MyBlock(X).Offset(MyArray(X), MyArray(X + 4)), Rg_to_Play) Is Nothing Then Exit Sub
        If Intersect(MyBlock(X).Offset(MyArray(X), MyArray(X + 4)), Block_X) Is Nothing Then
            If MyBlock(X).Offset(MyArray(X), MyArray(X + 4)).Interior.ColorIndex <> xlNone Then Exit Sub
        End If
     Next X
        Block_X.Clear
        For X = 3 To 0 Step -1
            Set MyBlock(X) = MyBlock(X).Offset(MyArray(X), MyArray(X + 4))
            MyBlock(X).BorderAround ColorIndex:=xlAutomatic, Weight:=xlThin
        Next X
            Set Block_X = Union(MyBlock(0), MyBlock(1), MyBlock(2), MyBlock(3))
            Block_X.Interior.ColorIndex = BlockColor(Block_In - 1)
            Rotation = Rg_Rotation(((Block_In * 5) + Rotation))
            Rota = Rota + 1
End Sub

Sub Blocks_OnPlay()
Static LastTime As Single
    Do: With Sheets("MyTetris")
            If .Range("W14") = "X" Then Exit Do
            If .Buttons("Boton_PLAY").Caption <> "CONTINUE" Then    '0.06 = Original
                If Timer >= (LastTime + (12 - Range("Level")) * 0.06) Or Timer < LastTime Then
                    Call Move_Down
                    If .Range("X14").Value = "X" Then Exit Sub
                        If .Shapes("GOver").Visible = True Then
                            Call GameOver:  Exit Sub
                        End If
                    LastTime = Timer
                End If
            Else
                Exit Sub
            End If
        End With:   DoEvents
    Loop While Sheets("MyTetris").Shapes("GOver").Visible = False
End Sub

Sub Blocks_Checking()
Dim Rg As Range
Dim X As Variant
Dim NoDupes As New Collection
    On Error Resume Next
    For X = 0 To 3
         NoDupes.Add MyBlock(X).Row, CStr(MyBlock(X).Row)
         If Intersect(MyBlock(X), Rg_to_Play.Rows(4)) Is Nothing = False Then
            Sheets("MyTetris").Shapes("GOver").Visible = True
            Call Blocks_Blacking:   Exit Sub
        End If
    Next X
        For X = NoDupes.Count To 1 Step -1
            Set Rg = Rg_to_Play.Rows(NoDupes(X))
            With Rg
                If .Font.Bold = True Then
                    If Range("Screen") <> 23 Then
                         If Application.WorksheetFunction.CountA(Rg) = 1 Then
                             Application.Wait Now + TimeValue("00:00:01")
                             Sheets("MyTetris").Range("X14").Value = "X"
                             Range("Lines") = Range("Lines") + 1
                             Call Blocks_Blacking
                             Exit Sub
                         End If
                    End If
                        With Sheets("MyTetris") 'XXXXCHECK  Range("Level") = OK
                            .Range("Lines") = .Range("Lines") + 1
                            .Range("U14") = Int(Level + (Range("lines") / 10)) * 10
                            .Range("Level") = Application.WorksheetFunction.Min(11, .Range("U14") / 10)
                            .Range("Score") = Range("Score") + Rg.Row * 5
                        End With
                .Clear
                .Cut
                    Rg_to_Play.Rows(4).Insert Shift:=xlDown
                    X = X + 1
                    If Range("Screen") <> 23 Then
                        If Application.WorksheetFunction.CountA(Rg_to_Play) = 0 Then
                           Range("X14").Value = "X"
                            Exit Sub
                        End If
                    End If
                End If
            End With
        Next X
        ''''CHALLENGE!!!!
        ''''Find a GOOD Algoritm when updating the Score
        ''''ALGORITMO ON bat bilatu beharko nuke!!!!
        ''''ALGORITMO ON bat bilatu beharko nuke!!!!
        ''''Based on:
            ''''Level, Score, Rotaciones, Figura, Lines, Blocks...
            Range("Score") = Range("Score") + _
                Application.WorksheetFunction.Max(0, 50 - (5 * Rota)) + _
                Sheets("MyTetris").Range("Level") * 5 + _
                Range("Screen") * 2 + _
                Application.WorksheetFunction.Max( _
                    MyBlock(0).Row, _
                    MyBlock(1).Row, _
                    MyBlock(2).Row, _
                    MyBlock(3).Row) * 2 + _
                    24 - Rg_to_Play.SpecialCells(xlCellTypeConstants).Row
Call Block_Inside
End Sub

Sub Blocks_Blacking()
Dim X As Single
    With Rg_to_Play
        Do While .Cells(X + 11).Interior.ColorIndex = xlNone
            Range("Score") = Range("Score") + (Rg_to_Play.Cells(X + 11).Row)
            .Cells(X + 11).Interior.ColorIndex = 1
            X = X + 1
        Loop
    End With
        Block_Out = 0:  Block_In = 0
        Application.Wait Now + TimeValue("00:00:01")    'Edo eta...
        ''''Application.Wait Now + TimeSerial(0, 0, 1)
End Sub

Sub Block_Random()
Dim X As Byte
Static O|fffd| As Byte
    O|fffd| = O|fffd| + 1
    Randomize:  X = Int((140 * Rnd) + 1) ''''Too Many Bricks?
    If (O|fffd| * Int((4 * Rnd) + 1)) < 100 Then
        Exit Sub
    End If
    With Rg_to_Play
        With .Cells(70 + X)
            .Font.Bold = True
            If IsNull(Rg_to_Play.Rows(.Row).Font.Bold) Then
                 .Interior.ColorIndex = 1
            Else
                .Font.Bold = False
            End If
        End With
    End With:   O|fffd| = 0
End Sub











Attribute VB_Name = "Module_Buttons"

Option Explicit
Option Private Module

Sub GameNothing()
    Range("D24").Select
End Sub

Sub GameOver()
If ActiveSheet.Name <> "MyTetris" Then Exit Sub
With Application
    .ScreenUpdating = False:    .EnableEvents = False
End With
    With Sheets("MyTetris")
        .Buttons("Timing").Visible = False
        .Buttons("Boton_Play").Caption = "PLAY"
        .Buttons("Boton_Instructions").Visible = True
        .Shapes("GOver").Visible = True
            With .Shapes("SB_Screen")
                .Visible = True:    .Select
                With Selection
                    .Visible = True:    .Min = 1:   .Max = 23
                End With
            End With
            .Range("U14") = .Range("Level") * 10     'XXXXCHECK  Range("Level")
            .Range("D24").Select
    End With
        Block_In = 0:   Block_Out = 0
        Application.EnableEvents = True
End Sub

Sub GameQuit()
With Application
    .ScreenUpdating = False:    .EnableEvents = False
End With
    With Sheets("MyTetris")
        If .Shapes("GOver").Visible = True Or _
            .Range("W14") = "X" Or _
            .Shapes("Boton_Score").Visible = True Then
            Application.DisplayAlerts = False
            Application.EnableEvents = True
            ActiveWorkbook.Close
        End If
        .Range("W14") = "X"
        .Buttons("Boton_Play").Caption = "PLAY"
        .Buttons("Boton_Instructions").Visible = True
        .Shapes("Boton_Score").Visible = True
        .Range("U15:W15") = ""
            With .Shapes("SB_Screen")
                .Visible = True:    .Select
                With Selection
                    .Visible = True:    .Max = 23:  .Min = 1
                End With
            End With
        .Range("D24").Select:   .Range("V14") = ""
    End With
        Application.EnableEvents = True
        Call GameSetup: End
End Sub

Sub GamePACO()
    With Sheets("MyTetris")
        With .Buttons("Boton_PLAY")
            Select Case .Caption
                Case "PLAY":        .Caption = "PAUSE":     Call GamePlay
                Case "PAUSE":       .Caption = "CONTINUE"
                Case "CONTINUE"
                    'XXXXCHECK si al final GameCheck
                    Set Block_X = Range(Range("U15").Value)
                    Block_Out = Range("V15")
                    Block_In = Range("W15")
                    Rotation = Range("Y15")
                    .Caption = "PAUSE":     Call GamePlay
            End Select
        End With
        If .Buttons("Boton_PLAY").Caption = "CONTINUE" Then
            'Why I come here two times?
            .Range("U15") = MyBlock(0).Address & "," & MyBlock(1).Address & "," & MyBlock(2).Address & "," & MyBlock(3).Address
            .Range("V15") = Block_Out
            .Range("W15") = Block_In
            .Range("Y15") = Rotation
        End If
        If .Shapes("GOver").Visible = True Then Call GameOver
    End With ':    Rota = 1, anyway doesn't affect too much
End Sub

Sub GameBestScores()
    With Sheets("MyTetris")
        .Shapes("Boton_Score").Visible = True
    End With
Dim Value20 As Long
    Dim Player_Name As Variant
Dim Msg As String
Dim Title As String
    Dim X As Variant
Dim Rg As Range
    Set Rg = Sheets("Score").Range("B5").CurrentRegion
Dim Mynames()
    Mynames = Array("Score", "Lines", "Screen", "Level")
Application.ScreenUpdating = False
    Title = "From Andoni, with love:     "
    Msg = Chr(10) & Chr(10) & "Enter your Name:"
    Msg = Msg & Chr(10) & Chr(10) & "With less than 20 Caracters, Please!"
        If IsEmpty(Rg.Cells(Rg.Rows.Count, 3)) Then
            Value20 = 0
        Else
            Value20 = Rg.Cells(Rg.Rows.Count, 3).Value
        End If
        If Range("Score").Value >= Value20 Then
            Player_Name = Application.InputBox(Msg, Title, "Welcome to the Wonderful Excel Planet!")
            If Player_Name = False Or Len(Player_Name) = 0 Then
            Else
                With Rg
                    For X = LBound(Mynames) To UBound(Mynames)
                        .Cells(Rg.Rows.Count, X + 3).Value = Range(Mynames(X)).Value
                    Next X
                    .Cells(Rg.Rows.Count, X + 3).Value = Now
                    .Cells(Rg.Rows.Count, 2).Value = Application.WorksheetFunction.Proper(Left(Player_Name, 38))
                        For X = 7 To 3 Step -1
                            .Sort Key1:=.Cells(X), Order1:=xlDescending, Header:=xlGuess
                        Next X
                        For X = 0 To 25
                            .Columns(1).Cells(X + 1) = X
                        Next X
                     With Sheets("Score")
                        .Visible = True: .Activate
                     End With
                End With
            End If
        End If
        Application.ScreenUpdating = False
        Sheets("MyTetris").Range("V14") = ""
End Sub

Sub GameSetup()
Dim X As Byte
    For X = LBound(MyBlock) To UBound(MyBlock)
        Set MyBlock(X) = Nothing
    Next X
        Set Block_X = Nothing
        Block_Out = 0:  Block_In = 0
End Sub

Sub SheetScore()
    With Sheets("Score")
        .Visible = True:    .Activate
    End With
End Sub

Sub SheetMyTetris()
    With Sheets("MyTetris")
        .Visible = True:    .Activate
    End With
End Sub

Sub SheetVBA()
    Application.Goto Reference:="Instructions_MySelf"
    Call Instructions_MySelf
End Sub



Attribute VB_Name = "Module_Game"
'Application.EnableEvents = False
'Application.EnableEvents = True

Option Explicit
Option Private Module

Public Block_In As Byte
Public Block_Out As Byte
Public Level As Byte
Public Rotation As Byte
Public Rota As Variant
    Public Block_X As Range
    Public Rg_to_Play As Range
    Public MyBlock(3) As Range
Public BlockColor()
        Dim Noiz As Date
        
Dim Secs As Variant

Sub GamePlay()
    With Sheets("MyTetris")
        If .Shapes("GOver").Visible = True Or _
            .Range("W14") = "X" Then
            .Range("H25:S27").Interior.ColorIndex = 3
            .Range("Lines") = ""
            .Buttons("Boton_PLAY").Caption = "PLAY"
            MsgBox Chr(10) & "To PLAY, Chose one other Screen." & _
                    Chr(10) & Chr(10) & "See the RED SQUARE." & _
                    Chr(10) & "             at the boton of the Screen!" & _
                    Chr(10) & Chr(10) & "Otherwise Press QUIT!", _
                    vbInformation + vbOKOnly, "From Andoni with Love:"
            Exit Sub
        End If
        .Range("H25:S27").Interior.ColorIndex = xlNone
        .Buttons("Boton_Instructions").Visible = False
        .Buttons("Timing").Visible = False
        .Buttons("Boton_Score").Visible = False
        .Buttons("Boton_Play").Caption = "PAUSE"
        .Shapes("SB_Screen").Visible = False
            .Range("V14") = "X"
    End With
    Call Step_0
        With Sheets("MyTetris")
            If .Shapes("GOver").Visible = True Then
                Call GameBestScores
            End If
        End With
End Sub
        
Sub Step_0()
BlockColor = Array(3, 6, 15, 55, 43, 33, 7)
ReDim Preserve BlockColor(0 To 6)
    Level = Range("Level").Value
    Set Rg_to_Play = Range("I1:R24")
    If Range("U15") = "" Then Range("Score") = ""
        Call Step_1
            With Sheets("MyTetris")
                If .Shapes("GOver").Visible = True Then
                    .Buttons("Boton_Score").Visible = True
                End If
            End With
End Sub

Sub Step_1()
    With Sheets("MyTetris")
        If .Shapes("GOver").Visible = True Then
            .Buttons("Boton_Score").Visible = True:     Exit Sub
        End If
            If Block_Out = 0 Then   'XXXXCHECK
                Call Block_Outside
                Call Block_Inside
            End If
        .Range("D25").Select
        Call Blocks_OnPlay
        If .Range("X14").Value = "X" Then
            .Range("Screen") = Application.WorksheetFunction.Min(Range("Screen") + 1, 23)
            Call Game_Screen
            Call Step_2
        End If
    End With
End Sub

Sub Step_2()
Secs = 5
    With Sheets("MyTetris")
        .Range("X14").Value = ""
        .Buttons("Boton_Play").Visible = False
        With .Buttons("Timing")
           .Caption = Secs & " Sec.":  .Visible = True
        End With
        With .Shapes("SB_Screen")
            .Visible = True:    .Select
            With Selection
                .Min = Range("Screen").Value
                .Max = Application.WorksheetFunction.Min(Range("Screen") + 3, 23)
            End With
        End With
        .Range("D24").Select
            Call Timing_Down
    End With
End Sub

Sub Timing_Down()
Secs = Secs - 1
    With Sheets("MyTetris")
        If Secs < 1 Then .Buttons("Timing").Visible = False 'XXXXCHECK
        .Buttons("Timing").Caption = Secs & " Sec."
        Noiz = Now + TimeSerial(0, 0, 1)
                    Application.OnTime Noiz, "Timing_Down"
            If Secs < 1 Then
                .Buttons("Timing").Caption = Secs & " Sec."
                    Application.Wait Now + TimeSerial(0, 0, 1)
                .Buttons("Timing").Visible = False
                .Buttons("Boton_Play").Visible = True
                .Shapes("SB_Screen").Visible = False
                    Application.OnTime Noiz, "Timing_Down", , False
                Call Step_1
            End If
        If .Shapes("GOver").Visible = True Then Call GameBestScores
            'XXXXCHECK
        If .Buttons("Boton_Play").Caption <> "CONTINUE" Then .Shapes("SB_Screen").Visible = True          'XXXXCHECK
    End With
End Sub


Attribute VB_Name = "Module_Screens"

Option Explicit
Option Private Module

Sub Game_Screen()
Dim MyArray()
Dim Y As Single
Application.ScreenUpdating = False
    With Sheets("MyTetris")
        If .Shapes("GOver").Visible = True Or _
            .Range("W14") = "X" Then
            .Range("Lines") = "":   .Range("Score") = ""
            .Range("Level") = 0:    .Range("U14") = 0: .Range("W14") = ""
            .Shapes("GOver").Visible = False
        End If
        .Range("W14") = ""
    End With
    Set Rg_to_Play = Sheets("MyTetris").Range("I1:R24")
        With Rg_to_Play
            .Clear
            .VerticalAlignment = xlCenter:  .HorizontalAlignment = xlCenter
                With .Font
                    .Bold = False:  .Size = 15
                End With
        End With
    Select Case Range("Screen").Value
        Case 1:     MyArray = Array(125, 126, 135, 136, 144, 145, 146, 147, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 126)
        Case 2:     MyArray = Array(144, 145, 146, 147, 154, 155, 156, 157, 164, 165, 166, 167, 174, 175, 176, 177, 184, 185, 186, 187, 144)
        Case 3:     MyArray = Array(133, 134, 135, 136, 137, 138, 143, 148, 153, 158, 163, 168, 173, 178, 183, 184, 185, 186, 187, 188, 163)
        Case 4:     MyArray = Array(41, 51, 61, 71, 81, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 111, 117, 121, 127, 131, 133, 137, 141, 144, 147, 151, 155, 157, 161, 167, 171, 177, 181, 187, 191, 197, 133)
        Case 5:     MyArray = Array(101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 124, 125, 126, 127, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 171)
        Case 6:     MyArray = Array(46, 47, 48, 49, 50, 56, 66, 76, 86, 96, 106, 113, 114, 115, 116, 138, 138)
        Case 7:     MyArray = Array(81, 91, 93, 101, 103, 105, 111, 113, 115, 117, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 123)
        Case 8:     MyArray = Array(101, 112, 123, 134, 145, 156, 167, 178, 189, 200, 167)
        Case 9:     MyArray = Array(137, 138, 139, 141, 147, 149, 150, 152, 157, 159, 160, 163, 167, 169, 170, 174, 177, 179, 180, 185, 187, 189, 190, 196, 198, 199, 200, 198)
        Case 10:    MyArray = Array(41, 51, 61, 71, 72, 81, 83, 91, 94, 99, 101, 105, 109, 111, 114, 119, 121, 123, 129, 131, 132, 139, 141, 143, 149, 151, 154, 159, 161, 165, 169, 171, 176, 179, 181, 187, 189, 191, 198, 199, 105)
        Case 11:    MyArray = Array(93, 94, 95, 106, 112, 113, 114, 117, 124, 128, 134, 139, 144, 150, 154, 155, 156, 157, 158, 159, 169, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 169)
        Case 12:    MyArray = Array(75, 76, 84, 85, 86, 87, 93, 94, 97, 98, 102, 103, 108, 109, 113, 114, 117, 118, 124, 125, 126, 127, 135, 136, 144, 145, 146, 147, 153, 154, 157, 158, 162, 163, 168, 169, 173, 174, 177, 178, 184, 185, 186, 187, 195, 196, 168)
        Case 13:    MyArray = Array(91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 161)
        Case 14:    MyArray = Array(41, 52, 63, 74, 85, 101, 102, 103, 108, 109, 110, 112, 113, 114, 118, 119, 141, 142, 143, 144, 148, 149, 150, 112)
        Case 15:    MyArray = Array(113, 114, 115, 116, 117, 118, 123, 133, 143, 153, 154, 155, 156, 157, 158, 163, 168, 174, 175, 178, 188, 193, 194, 195, 196, 197, 198, 175)
        Case 16:    MyArray = Array(63, 64, 65, 66, 67, 68, 73, 78, 83, 88, 93, 98, 103, 108, 113, 114, 115, 116, 117, 118, 133, 134, 135, 136, 137, 138, 143, 144, 148, 153, 155, 158, 163, 166, 168, 173, 177, 178, 183, 184, 185, 186, 187, 188, 177)
        Case 17:    MyArray = Array(71, 82, 93, 104, 115, 120, 126, 129, 137, 138, 147, 147, 156, 147)
        Case 18:    MyArray = Array(75, 76, 84, 87, 93, 98, 102, 109, 111, 120, 122, 129, 133, 138, 144, 147, 155, 156, 138)
        Case 19:    MyArray = Array(111, 120, 122, 129, 133, 138, 141, 144, 147, 152, 155, 156, 160, 163, 169, 174, 178, 185, 187, 196, 196)
        Case 20:    MyArray = Array(41, 50, 52, 59, 63, 68, 74, 77, 85, 86, 116)
        Case 21:    MyArray = Array(51, 59, 62, 68, 73, 77, 81, 84, 86, 89, 92, 95, 98, 103, 107, 111, 114, 116, 119, 122, 125, 128, 133, 137, 144, 146, 155, 76)
        Case 22:    MyArray = Array(40, 41, 49, 52, 58, 63, 67, 74, 76, 81, 85, 92, 94, 103, 114, 125, 130, 136, 139, 148, 157, 139)
        Case Else:  Exit Sub
    End Select
        On Error Resume Next
        ReDim Preserve MyArray(UBound(MyArray)) 'XXXXCHECK
            For Y = 0 To UBound(MyArray)
                With Rg_to_Play.Cells(MyArray(Y) + 40)
                    .Interior.ColorIndex = 22:  .Font.Bold = True   ''''3
                    .BorderAround ColorIndex:=xlAutomatic, Weight:=xlThin
                End With
            Next Y
                With Rg_to_Play
                    With .Cells(MyArray(Y - 1) + 40)    ''''4
                        .Interior.ColorIndex = 44:  .Value = "X"
                    End With
                End With
        Application.EnableEvents = False
            With Sheets("MyTetris")
                .Range("A1:Z28").Select
            ActiveWindow.Zoom = True
                .Activate:  .Range("D24").Select
            End With
        Application.EnableEvents = True
End Sub

Attribute VB_Name = "Myself"

Sub Instructions_MySelf():  Application.SendKeys ("^r"): End Sub


'********************************************************************
'*************************** INSTRUCTIONS ***************************
'********************************************************************
'********************************************************************
'
'This is just a different version of the popular Excel Game.
'The Difference comes because you have 23 different Screen to chose from.
'You can change the Level while playing, I mean you can SpeedUp and/or SlowDown.
'
'On the first 22 your purpose is to get rid of the row with the "X" on it
'The last Screen is the normal Tetris game, "Everybody is aware of"
'
'If you need anything else, Fill free to:
'
'                       elcano@gmail.com

'
'
'
'Si esto puede ser realizado con Excel...
'Imaginen Ustedes lo que podemos llegar a conseguir
'si aplicamos Excel a la gesti|fffd|n Econ|fffd|mico Financiera de nuestra empresa!!
'
'
'
'
Attribute VB_Name = "M|fffd|dulo_Text"
'AA3 =  U14 LEVEL
'AA4 =  V14 Playing
'AA2 =  W14 Quit
'AA1 =  X14 newScreen
'AA7 =  U15 Block_X
'AA8 =  V15  Block_Out
'AA9 =  W15  Block_In
'AA10 = Y15 Rotation
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Option Explicit

Private Sub Workbook_Open()
    With Application
        .ScreenUpdating = False
        ''''.StatusBar = "              WELCOME to the WONDERFUL EXCEL PLANET!!"
        .EnableEvents = False
    End With
        With Sheets("MyTetris")
            .Visible = True
            .Activate
            .Range("A1:Z28").Select
                With ActiveWindow
                    .LargeScroll Down:=0, Up:=100, ToRight:=0, ToLeft:=100
                    .Zoom = True
                End With
            .Activate:  .Range("D24").Select
        End With
        
        Application.EnableEvents = True
            Call Game_Screen
End Sub

Private Sub Workbook_SheetDeactivate(ByVal Sh As Object)
    With Application
        ''''.EnableEvents = False
        .ScreenUpdating = False
    Sh.Visible = False: Sh.Visible = xlSheetVeryHidden
        ''''.EnableEvents = True
    End With
End Sub

Private Sub Workbook_SheetActivate(ByVal Sh As Object)
Dim Rng As Range
    Select Case Sh.Name
        Case "Score":           Set Rng = Sh.Range("A1:I30")
        Case "MyTetris":        Set Rng = Sh.Range("A1:Z27")
        Case Else:              Exit Sub
    End Select
        With Application
            .ScreenUpdating = False
            .EnableEvents = False
                Rng.Select
                ActiveWindow.Zoom = True
            .Goto Reference:=Sh.Range("A1"), Scroll:=True
        ActiveWindow.LargeScroll Down:=0, Up:=100, ToRight:=0, ToLeft:=100
             If Sh.Name = "MyTetris" Then Sh.Range("D24").Select
            .EnableEvents = True
        End With
End Sub





INQUEST-PP=macro
