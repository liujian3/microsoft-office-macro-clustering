Attribute VB_Name = "FIASForm"
Attribute VB_Base = "0{30B8B5FF-10CE-4CFA-95CC-C98AF024E15C}{0F1A7CD5-4E29-41D7-B4D1-B63FA454E980}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Addr As Variant

Private regions As Variant
Private aos As Variant
Private areas As Variant
Private settls As Variant
Private cities As Variant
Private terrs As Variant
Private towns As Variant
Private planstrs As Variant
Private streets As Variant
Private buildings As Variant
Private Row As Integer
Private Col As Integer
Public Sub SelectFIASCode(r As Integer, c As Integer)
  Row = r
  Col = c
  Show
End Sub
Private Sub AOComboBox_Change()
    areas = Empty
    AreaComboBox.Clear
    settls = Empty
    SettlComboBox.Clear
    cities = Empty
    CityComboBox.Clear
    terrs = Empty
    TerrComboBox.Clear
    towns = Empty
    TownComboBox.Clear
    planstrs = Empty
    PlanStrComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub AOComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If AOComboBox.ListIndex > -1 Then
    AOComboBox_Change
    Dim ao As FIAS_Address
    Set ao = aos(AOComboBox.ListIndex)
    areas = FIASModule.getFiasDict(ao.NextDict)
    If IsArray(areas) Then
     For Each Addr In areas
      AreaComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub
Private Sub AOComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub AreaComboBox_Change()
    settls = Empty
    SettlComboBox.Clear
    cities = Empty
    CityComboBox.Clear
    terrs = Empty
    TerrComboBox.Clear
    towns = Empty
    TownComboBox.Clear
    planstrs = Empty
    PlanStrComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub AreaComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If AreaComboBox.ListIndex > -1 Then
    AreaComboBox_Change
    Dim area As FIAS_Address
    Set area = areas(AreaComboBox.ListIndex)
    settls = FIASModule.getFiasDict(area.NextDict)
    If IsArray(settls) Then
     For Each Addr In settls
      SettlComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub
Private Sub AreaComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub BuildingComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub CancelCommandButton_Click()
  Hide
End Sub
Private Sub CityComboBox_Change()
    terrs = Empty
    TerrComboBox.Clear
    towns = Empty
    TownComboBox.Clear
    planstrs = Empty
    PlanStrComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub CityComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
 If CityComboBox.ListIndex > -1 Then
    CityComboBox_Change
    Dim city As FIAS_Address
    Set city = cities(CityComboBox.ListIndex)
    terrs = FIASModule.getFiasDict(city.NextDict)
    If IsArray(terrs) Then
     For Each Addr In terrs
      TerrComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub
Private Sub OKCommandButton_Click()
 If BuildingComboBox.ListIndex < 0 Then
   MsgBox ("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!")
 Else
   Hide
   Dim building As FIAS_Address
   Set building = buildings(BuildingComboBox.ListIndex)
   ActiveSheet.Cells(Row, Col) = building.Code
   ActiveSheet.Cells(Row, Col - 2) = "|fffd||fffd|"
 End If
End Sub
Private Sub PlanStrComboBox_Change()
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub

Private Sub PlanStrComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
 If PlanStrComboBox.ListIndex > -1 Then
    PlanStrComboBox_Change
    Dim planstr As FIAS_Address
    Set planstr = planstrs(PlanStrComboBox.ListIndex)
    streets = FIASModule.getFiasDict(planstr.NextDict)
    
    If IsArray(streets) Then
     Dim n_streets() As FIAS_Address
     ReDim n_streets(0 To UBound(streets, 1) + 1)
    
     Set n_streets(0) = New FIAS_Address
     With n_streets(0)
       Dim city As FIAS_Address
       Set city = cities(CityComboBox.ListIndex)
       .Code = city.Code
       .Addr = "---"
       .NextDict = 0
     End With
    
     Dim i As Integer
     i = 1
     For Each Addr In streets
       Set n_streets(i) = streets(i - 1)
       i = i + 1
     Next Addr
     
     streets = n_streets
    
     For Each Addr In n_streets
      StreetComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub

Private Sub PlanStrComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub

Private Sub RegionsComboBox_Change()
    aos = Empty
    AOComboBox.Clear
    areas = Empty
    AreaComboBox.Clear
    settls = Empty
    SettlComboBox.Clear
    cities = Empty
    CityComboBox.Clear
    terrs = Empty
    TerrComboBox.Clear
    towns = Empty
    TownComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub RegionsComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If RegionsComboBox.ListIndex > -1 Then
    RegionsComboBox_Change
    Dim region As FIAS_Address
    Set region = regions(RegionsComboBox.ListIndex)
    aos = FIASModule.getFiasDict(region.NextDict)
    If IsArray(aos) Then
     For Each Addr In aos
      AOComboBox.AddItem (Addr.Addr)
     Next Addr
     If AOComboBox.ListCount = 1 Then
       AOComboBox.ListIndex = 0
       AOComboBox_Exit Cancel
       If AreaComboBox.ListCount > 1 Then
        AreaComboBox.SetFocus
       Else
        AreaComboBox.ListIndex = 0
        SettlComboBox.SetFocus
       End If
     End If
    End If
  End If
End Sub
Private Sub RegionsComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub SettlComboBox_Change()
    cities = Empty
    CityComboBox.Clear
    terrs = Empty
    TerrComboBox.Clear
    towns = Empty
    TownComboBox.Clear
    planstrs = Empty
    PlanStrComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub SettlComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If SettlComboBox.ListIndex > -1 Then
    SettlComboBox_Change
    Dim settl As FIAS_Address
    Set settl = settls(SettlComboBox.ListIndex)
    cities = FIASModule.getFiasDict(settl.NextDict)
    If IsArray(cities) Then
     For Each Addr In cities
      CityComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub

Private Sub SettlComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub StreetComboBox_Change()
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub StreetComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If StreetComboBox.ListIndex > -1 Then
    StreetComboBox_Change
    Dim street As FIAS_Address
    Set street = streets(StreetComboBox.ListIndex)
    buildings = FIASModule.getBuildings(street.Code)
    If IsArray(buildings) Then
     For Each Addr In buildings
      BuildingComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub
Private Sub StreetComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub TerrComboBox_Change()
    towns = Empty
    TownComboBox.Clear
    planstrs = Empty
    PlanStrComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub TerrComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If TerrComboBox.ListIndex > -1 Then
    TerrComboBox_Change
    Dim terr As FIAS_Address
    Set terr = terrs(TerrComboBox.ListIndex)
    towns = FIASModule.getFiasDict(terr.NextDict)
    If IsArray(towns) Then
     For Each Addr In towns
      TownComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub
Private Sub TerrComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub TownComboBox_Change()
    planstrs = Empty
    PlanStrComboBox.Clear
    streets = Empty
    StreetComboBox.Clear
    buildings = Empty
    BuildingComboBox.Clear
End Sub
Private Sub TownComboBox_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  If TownComboBox.ListIndex > -1 Then
    TownComboBox_Change
    Dim town As FIAS_Address
    Set town = towns(TownComboBox.ListIndex)
    planstrs = FIASModule.getFiasDict(town.NextDict)
    If IsArray(planstrs) Then
     For Each Addr In planstrs
      PlanStrComboBox.AddItem (Addr.Addr)
     Next Addr
    End If
  End If
End Sub
Private Sub TownComboBox_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii = 27 Then
   Hide
 End If
End Sub
Private Sub UserForm_Activate()
  aos = Empty
  AOComboBox_Change
  RegionsComboBox.Clear
  regions = FIASModule.getRegions
  If IsArray(regions) Then
    For Each Addr In regions
     RegionsComboBox.AddItem (Addr.Addr)
    Next Addr
  End If
  RegionsComboBox.SetFocus
End Sub
Attribute VB_Name = "FIASModule"
Option Explicit

Public Const FIAS_URL = "http://gs46.gs1ru.org/FIAS/FIAS"

Function getAddressByFIASCode(fc As String) As String
  Dim req As String
  req = "<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:urn='urn:org.gs46.fias'>" & _
  "<soapenv:Header/><soapenv:Body>" & _
      "<urn:getAddressByFIASCode>" & _
         "<fc>" & LCase(fc) & "</fc>" & _
      "</urn:getAddressByFIASCode>" & _
   "</soapenv:Body>" & _
"</soapenv:Envelope>"
  
  On Error GoTo ErrHandler
  Dim xmlhttp As MSXML2.XMLHTTP30
  Set xmlhttp = New MSXML2.XMLHTTP30
  xmlhttp.Open "POST", FIAS_URL, False
  xmlhttp.send req
  On Error Resume Next
  
  If xmlhttp.Status = 200 Then
    Dim oXmlReturn As MSXML2.DOMDocument30
    Dim Addr As String
    Dim addr_node_list As MSXML2.IXMLDOMNodeList
    Set oXmlReturn = New MSXML2.DOMDocument30
    oXmlReturn.LoadXML xmlhttp.responseText
    Set addr_node_list = oXmlReturn.getElementsByTagName("return")
    If addr_node_list.Length > 0 Then
     Addr = addr_node_list.Item(0).Text
     getAddressByFIASCode = Addr
    Else
     getAddressByFIASCode = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|! |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|?"
    End If
  Else
    getAddressByFIASCode = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & FIAS_URL & ": " & xmlhttp.Status & ", " & xmlhttp.statusText
  End If
ErrHandler:
  If xmlhttp.Status <> 200 Then
    getAddressByFIASCode = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & FIAS_URL & ": " & xmlhttp.Status & ", " & xmlhttp.statusText
  End If
  Resume Next
End Function
Private Function getAddrItems(req As String) As Variant
  On Error GoTo ErrHandler
  Dim xmlhttp As MSXML2.XMLHTTP30
  Set xmlhttp = New MSXML2.XMLHTTP30
  xmlhttp.Open "POST", FIAS_URL, False
  xmlhttp.send req
  On Error Resume Next
  
  If xmlhttp.Status = 200 Then
    Dim oXmlReturn As MSXML2.DOMDocument30
    Dim Addr As String
    Dim addr_node_list As MSXML2.IXMLDOMNodeList
    Set oXmlReturn = New MSXML2.DOMDocument30
    oXmlReturn.LoadXML xmlhttp.responseText
    Set addr_node_list = oXmlReturn.getElementsByTagName("return")
    Dim rslt() As FIAS_Address
    ReDim rslt(0 To addr_node_list.Length - 1)
    Dim i As Integer
    For i = 0 To addr_node_list.Length - 1
     Dim fias_addr As FIAS_Address
     Set fias_addr = New FIAS_Address
     With fias_addr
       .Code = addr_node_list.Item(i).Attributes.getNamedItem("code").Text
       .Addr = addr_node_list.Item(i).Attributes.getNamedItem("addr").Text
       .NextDict = addr_node_list.Item(i).Attributes.getNamedItem("next").Text
     End With
     Set rslt(i) = fias_addr
    Next i
    getAddrItems = rslt
  Else
    getAddrItems = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & FIAS_URL & ": " & xmlhttp.Status & ", " & xmlhttp.statusText
  End If
ErrHandler:
  If xmlhttp.Status <> 200 Then
    getAddrItems = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & FIAS_URL & ": " & xmlhttp.Status & ", " & xmlhttp.statusText
  End If
  Resume Next
End Function
Function getRegions() As Variant
  Dim req As String
  req = "<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:urn='urn:org.gs46.fias'>" & _
   "<soapenv:Header/><soapenv:Body><urn:getRegions/></soapenv:Body></soapenv:Envelope>"
  getRegions = getAddrItems(req)
End Function
Function getFiasDict(id As Long) As Variant
  Dim req As String
  req = "<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:urn='urn:org.gs46.fias'>" & _
   "<soapenv:Header/><soapenv:Body><urn:getFiasDict><id>" & id & "</id></urn:getFiasDict></soapenv:Body></soapenv:Envelope>"
  getFiasDict = getAddrItems(req)
End Function
Function getBuildings(guid As String) As Variant
  Dim req As String
  req = "<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:urn='urn:org.gs46.fias'>" & _
   "<soapenv:Header/><soapenv:Body><urn:getBuildings><guid>" & guid & "</guid></urn:getBuildings></soapenv:Body></soapenv:Envelope>"
  getBuildings = getAddrItems(req)
End Function

Attribute VB_Name = "FIAS_Address"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private pCode As String
Private pAddr As String
Private pNextDict As Long
Public Property Get Code() As String
    Code = pCode
End Property
Public Property Let Code(Value As String)
    pCode = Value
End Property
Public Property Get Addr() As String
    Addr = pAddr
End Property
Public Property Let Addr(Value As String)
    pAddr = Value
End Property
Public Property Get NextDict() As Long
    NextDict = pNextDict
End Property
Public Property Let NextDict(Value As Long)
    pNextDict = Value
End Property

Attribute VB_Name = "ProgressForm"
Attribute VB_Base = "0{8C3B0D86-1DD7-4C90-A041-4BF0309E1CAC}{8433C5F5-E297-4125-8804-8380758F5BF2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub ShowProgress(Text As String)
  ProgressForm.LabelProgress.Width = 0
  ProgressForm.LabelCaption.Caption = Text
  ProgressForm.Show (False)
End Sub
Sub UpdateProgress(Progress As Single)
  ProgressForm.LabelProgress.Width = (ProgressForm.FrameProgress.Width - 3) / 100 * Progress
  DoEvents
End Sub
Sub HideProgress()
  ProgressForm.Hide
End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
 Set AddrCells = Range("AC1:AC50000")
 If Not Application.Intersect(AddrCells, Range(Target.Address)) Is Nothing And Target.Row > 6 Then
  FIASForm.SelectFIASCode Target.Row, Target.Column - 1
  Cancel = True
 End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
   Set KeyCells = Range("AB1:AB50000")
   Set IsRusCells = Range("Z1:Z50000")
   If Not Application.Intersect(KeyCells, Range(Target.Address)) Is Nothing Or Not Application.Intersect(IsRusCells, Range(Target.Address)) Is Nothing Then
     Application.ScreenUpdating = False
     
     Dim nFirstRow As Integer
     nFirstRow = Target.Row
     Dim nLastRow As Integer
     nLastRow = Target.Rows.Count + Target.Row - 1
     
     Dim regEx As New RegExp

     With regEx
       .Global = True
       .IgnoreCase = False
       .Pattern = "\w{8}\-\w{4}\-\w{4}\-\w{4}\-\w{12}" '4705fd20-5727-43ef-a0f9-4112209252a2
     End With
     
     If nLastRow - nFirstRow > 2 Then
      ProgressForm.ShowProgress ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|...")
     End If
     
     For i = nFirstRow To nLastRow
       Dim is_rus As String
       is_rus = Application.ActiveSheet.Cells(i, 26)
       If is_rus = "|fffd||fffd|" Then
         Dim fias As String
         fias = Application.ActiveSheet.Cells(i, 28)
         If fias <> "" And regEx.Test(fias) Then
           Application.ActiveSheet.Cells(i, 29) = getAddressByFIASCode(fias)
          Else
           Application.ActiveSheet.Cells(i, 29) = ""
         End If
       Else
         Application.ActiveSheet.Cells(i, 29) = ""
       End If
       ProgressForm.UpdateProgress (i / nLastRow * 100)
     Next i
     ProgressForm.HideProgress
     Unload ProgressForm
   End If
End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
