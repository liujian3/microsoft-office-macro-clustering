Attribute VB_Name = "CapitaMacros"
Global g_ReciverHwnd As Long
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
Private Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (hpvDest As Any, hpvSource As Any, ByVal cbCopy As Long)
Public Declare Function EnumWindows Lib "user32" (ByVal lpEnumFunc As Long, ByVal lParam As Long) As Long
Public Declare Function GetWindowText Lib "user32" Alias "GetWindowTextA" (ByVal hwnd As Long, ByVal lpString As String, ByVal cch As Long) As Long
Public Declare Function GetClassName Lib "user32" Alias "GetClassNameA" (ByVal hwnd As Long, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long
Public Declare Function GetCurrentProcess Lib "kernel32" () As Long

Private Type copyDataStruct
    dwData As Long
    cbData As Long
    lpData As Long
End Type

Private Const WM_COPYDATA = &H4A
Global exlstring As Boolean
Global imgno As Integer
Dim TargetHwnd As Double
Dim spath As String
Dim sText As String
Sub MnuAbout()
    SendString "MnuAbout"
End Sub
Sub UPDMODULE()
    exlstring = True
    DoEvents
    SendString "[" + ActiveWorkbook.Name + "]" + ActiveSheet.Name + "?Module "
    
End Sub
Sub UPDSheet()
    exlstring = False
    DoEvents
    SendString "[" + ActiveWorkbook.Name + "]" + ActiveSheet.Name
End Sub
Sub UPDBook()
    exlstring = False
    DoEvents
    SendString "[" + ActiveWorkbook.Name + "]"
End Sub
Sub UPDAll()
    exlstring = False
    DoEvents
    SendString "ALL"
End Sub
Sub SendString(str As String)
Dim cDStruct As copyDataStruct
Dim x(1 To 255) As Byte
  cDStruct.dwData = 0
  cDStruct.cbData = Len(str) + 1
  str = Trim$(str)
  Call CopyMemory(x(1), ByVal str, Len(str))
  cDStruct.lpData = VarPtr(x(1))
  Call SendData(cDStruct)
End Sub
Sub SendData(CapitaStruct As copyDataStruct)
Dim res As Integer
Dim Handle As Long

 TargetHwnd = 0
 
 EnumWindows AddressOf WindowEnumerator, 0
'If receiverHandle <> g_ReciverHwnd Then
    'receiverHandle = g_ReciverHwnd
'End If
 If TargetHwnd = 0 Then
      MsgBox "CapitaLine Application NOT found!", vbInformation, "Capitaline"
   Exit Sub
 End If
 DoEvents
 DoEvents
 res = SendMessage(TargetHwnd, WM_COPYDATA, FindWindow("XLMAIN", Application.Caption), CapitaStruct)
End Sub
Sub GetReceiverHWND(hwnd As Long)
    g_ReciverHwnd = hwnd
End Sub
Sub AddMenu()
 Dim CMMenu As Menu, ctlCBarControl As CommandBarControl
    
    On Error Resume Next
    Set ctlCBarControl = CommandBars("Worksheet Menu Bar").Controls("Update")
    
    If Err <> 0 Then
        Set CMMenu = MenuBars(xlWorksheet).Menus.Add("Update", "&Window")
           CMMenu.MenuItems.Add "&Sheet", "UPDSheet"
           CMMenu.MenuItems.Add "&Workbook", "UPDBook"
           CMMenu.MenuItems.Add "-"
           CMMenu.MenuItems.Add "&All open files", "UPDAll"
           CMMenu.MenuItems.Add "-"
           CMMenu.MenuItems.Add "&Select Company", "UPDMODULE"
           CMMenu.MenuItems.Add "-"
           CMMenu.MenuItems.Add "A&bout Capitaline", "MnuAbout"
     End If
End Sub
Public Function WindowEnumerator(ByVal app_hwnd As Long, _
    ByVal lParam As Long) As Long
Dim buf As String * 256
Dim title As String
Dim ClassName As String
Dim length As Long
Dim sClassName As String * 100

    length = GetWindowText(app_hwnd, buf, Len(buf))
    title = left$(buf, length)
    length = GetClassName(app_hwnd, sClassName, 100)
    ClassName = left$(sClassName, length)
    
    If InStr(UCase(title), "CAPITALINE") = 1 And ClassName = "TMainForm" Then
        TargetHwnd = app_hwnd
        WindowEnumerator = False
    Else
        WindowEnumerator = True
    End If
End Function
Sub clearsheet()
   With Selection
       .MergeCells = False
       .ClearContents
   End With
   For Each Shapes In ActiveSheet.Shapes
     Shapes.Delete
   Next
 Range("A1:A1").Select
 End Sub
 
  
Sub merge()
   Selection.merge
  
End Sub
Sub insert()
 spath = ""
 Read_registry_Value
 Encrypt (sText)
 ActiveSheet.Pictures.insert(spath + "LineGraph" + CStr(imgno) + ".bmp").Select
 imgno = imgno + 1
 If imgno > 1 Then imgno = 0
 
 
End Sub

Sub Encrypt(sText As String)
Dim sResult, mChar As String
sLen = Len(sText)
For i = 1 To sLen
 mChar = Chr(Asc(Mid(sText, i, 1)) - sLen - i)
 spath = spath & mChar
Next i

End Sub
Sub Read_registry_Value()
    Dim Shell As Object
    Dim keyname As String
    Dim value As String
    Dim keyvalue As String
    keyname = "HKEY_LOCAL_MACHINE\SOFTWARE\CLENT\"
    value = "TempDir"
     Set Shell = CreateObject("wscript.shell")
    On Error Resume Next
    keyvalue = Shell.regread(keyname & value)
    On Error GoTo 0
    sText = keyvalue
End Sub

Sub bold()
 Selection.Font.bold = True
End Sub

Sub right()
 With Selection
  .HorizontalAlignment = xlRight
  .VerticalAlignment = xlBottom
 End With
End Sub
Sub left()
 With Selection
       .HorizontalAlignment = xlLeft
       .VerticalAlignment = xlBottom
     
 End With
End Sub
Sub centre()
 With Selection
       .HorizontalAlignment = xlHAlignCenter
       .VerticalAlignment = xlBottom
     
 End With
End Sub
Sub chart2()
   Selection.ShapeRange.ScaleHeight 1, 0, 0
   Selection.ShapeRange.ScaleWidth 1.5, 0, 0
End Sub
Sub chart1()
  Selection.ShapeRange.ScaleHeight 0.95, 0, 0
  Selection.ShapeRange.ScaleWidth 1.1, 0, 0
End Sub
Sub size()
  Selection.ColumnWidth = 10
End Sub
Sub white()
 Range("A2").Select
 Selection.Font.ColorIndex = 2
End Sub
Sub selectcell()
   Range("A1").Select
End Sub
Sub exltrue()
 exlstring = True
End Sub

Sub exlfalse()
 exlstring = False
End Sub






Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    
    AddMenu
    DoEvents
    DoEvents
    white
    'UPDBook
    
    
    
    
End Sub
Private Sub Workbook_SheetActivate(ByVal Sh As Object)
 If exlstring = True Then
   SendString "[" + ActiveWorkbook.Name + "]" + ActiveSheet.Name + "*Module "
 'Else
  ' SendString "[" + ActiveWorkbook.Name + "]" + ActiveSheet.Name + "*Module "
End If

 
End Sub


INQUEST-PP=macro
