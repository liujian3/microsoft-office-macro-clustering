Attribute VB_Name = "AssessUserForm"
Attribute VB_Base = "0{AF787ADD-D3BD-714D-9157-6B9641894C38}{521B3827-D14C-4D48-B089-23CC91103B5E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private sortedRows() As Integer 'Array mit relevanten KM-Zeilen, aufsteigend sortiert
Private nextButtonCollection As New Collection 'Buttons f|fffd|r die Anforderungen der Qualit|fffd|tsstufen (nur f|fffd|r als relevant gekennzeichnete Zeilen)
Private relevantCat As New Collection 'Nur die Kategorien in denen KM-Zeilen als relevant markiert sind

'Initialisierung der UserForm
Private Sub UserForm_Initialize()
    On Error GoTo AssessFormInitializeError
    Width = 800
    Height = 485
    AssessMultiPage.Width = 788
    AssessMultiPage.Height = 378
    AssessMultiPage.Left = 6
    AssessMultiPage.Top = 6
    AssessMultiPage.MultiRow = True
    
    If languageGUI = "de" Then
        Caption = "Produktbewertung"
        CancelButton.Caption = "Abbrechen"
        BackButton.Caption = "Zur|fffd|ck"
        SaveButton.Caption = "Speichern"
        ManufacturerLabel.Caption = "Hersteller"
        ManufacturerLabel.Font.Bold = True
        ProductLabel.Caption = "Produktname"
        ProductLabel.Font.Bold = True
        CreatorLabel.Caption = "Erstellt durch"
        CreatorLabel.Font.Bold = True
        CreationDateLabel.Caption = "Datum"
        CreationDateLabel.Font.Bold = True
        Call AssessFrame
    ElseIf languageGUI = "eng" Then
        Caption = "Product Assessment"
        CancelButton.Caption = "Cancel"
        BackButton.Caption = "Back"
        SaveButton.Caption = "Next"
        ManufacturerLabel.Caption = "Manufacturer"
        ProductLabel.Caption = "Product Name"
    End If
    
    Exit Sub
    
AssessFormInitializeError:
    MsgBox ("Es ist ein Fehler beim Initalisieren der Eingabemaske f|fffd|r die Produktbewertung aufgetreten!")
End Sub

'Deaktiviert das "X" rechts oben zum Schlie|fffd|en des Fensters
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    On Error GoTo DeactivateAssessXError
    If CloseMode = 0 Then
        Cancel = True
    End If
    
    Exit Sub
    
DeactivateAssessXError:
    MsgBox ("Es ist ein Fehler beim Deaktivieren des X-Buttons aufgetreten!")
End Sub

'Abbrechen-Button
Private Sub CancelButton_Click()
    On Error GoTo AssessCancelButtonError
    
    If loadedFile = False Then
        Unload AssessUserForm
        Unload KMRowUserForm
        Unload NPKMUserForm
        Unload UserUserForm
    Else
        Unload AssessUserForm
        Unload KMRowUserForm
    End If
    
    Exit Sub
    
AssessCancelButtonError:
    MsgBox ("Es ist ein Fehler beim Abbrechen der Aktion aufgetreten!")
End Sub

'Zur|fffd|ck-Button
Private Sub BackButton_Click()
    On Error GoTo AssessBackButtonError
    Dim i As Integer
    
    backAndSave = True
    
    'Leert ggf. zuvor gespeicherten Inhalt aus den Collections
    If explanationContent.Count > 0 Then
        Do While explanationContent.Count > 0
            explanationContent.Remove 1
        Loop
        manufacturerName = ""
        productName = ""
        creatorName = ""
        creationDate = ""
    End If
    
    'DEBUGGING------------------------
    'MsgBox ("Collection 1 leeren OK")
    'DEBUGGING------------------------
    
    'Leert ggf. zuvor gespeicherten Inhalt aus den Collections
    If qualityContent.Count > 0 Then
        Do While qualityContent.Count > 0
            qualityContent.Remove 1
        Loop
    End If
    
    'DEBUGGING------------------------
    'MsgBox ("Collection 2 leeren OK")
    'DEBUGGING------------------------
    
    'Speichert eingetragenen Inhalt beim Zur|fffd|ckgehen
    For i = 0 To UBound(sortedRows)
        'DEBUGGING------------------------
        'MsgBox (AssessUserForm.Controls("ExplanationTextBox" & CStr(sortedRows(i))).Value)
        'MsgBox (AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value)
        'MsgBox (sortedRows(i))
        'DEBUGGING------------------------
        explanationContent.Add AssessUserForm.Controls("ExplanationTextBox" & CStr(sortedRows(i))).Value, CStr(sortedRows(i))
        qualityContent.Add AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value, CStr(sortedRows(i))
        manufacturerName = CStr(ManufacturerTextBox.Value)
        productName = CStr(ProductTextBox.Value)
        creatorName = CStr(CreatorTextBox.Value)
        creationDate = CStr(CreationDateTextBox.Value)
    Next
    
    'DEBUGGING------------------------
    'MsgBox ("Daten speichern OK")
    'MsgBox (relevantRows.Count)
    'DEBUGGING------------------------
    
    Unload AssessUserForm
    KMRowUserForm.Show
    
    Exit Sub
    
AssessBackButtonError:
    MsgBox ("Es ist ein Fehler beim Wechsel auf die vorhergehende Eingabemaske aufgetreten!")
End Sub

'Speichern-Button
Private Sub SaveButton_Click()
    On Error GoTo AssessSaveButtonError
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    
    If CheckContent = False Then
        If languageGUI = "de" Then
            MsgBox ("Bitte f|fffd|llen Sie alle Textfelder und Drop-Down-Men|fffd|s aus!")
        Else
            MsgBox ("Please answer all text fields and drop-down menus!")
        End If
        Exit Sub
    End If
    
    Call WriteOutputFile

    If loadedFile = False Then
        Unload AssessUserForm
        Unload KMRowUserForm
        Unload NPKMUserForm
        Unload UserUserForm
    Else
        Unload AssessUserForm
        Unload KMRowUserForm
    End If
    
    Exit Sub
    
AssessSaveButtonError:
    MsgBox ("Es ist ein Fehler beim Speichern des bewerteten Produkts aufgetreten!")
End Sub

Private Sub AssessFrame()
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim topRange As Integer 'Pixel bis zur n|fffd|chsten Zeile
    Dim componentHeight As Integer
    Dim scopeHeight As Integer
    Dim compoundHeight As Integer
    Dim tempRange As Integer
    Dim firstRow As Boolean
    Dim inCategorie As Boolean
    
    Call SortRelevantRows
    Call RelevantCategories
    
    Dim nextButtonClass As DynamicButtons 'BUTTONS
    
    On Error GoTo AssessFrameError
    'Erzeugt die MultiPage mit den KM-Zeilen, die als relevant gekennzeichnet sind.
    'DEBUGGING----------------------------
'    MsgBox ("Debug relevantCat: " & relevantCat.Count)
'    MsgBox ("Debug relevantRows: " & relevantRows.Count)
'    MsgBox ("Debug sortedRows: " & UBound(sortedRows))
    'DEBUGGING----------------------------
    For i = 1 To relevantCat.Count
        topRange = 0
        firstRow = True
        AssessMultiPage.Pages.Add relevantCat(i), relevantCat(i), i - 1
        AssessMultiPage.Pages(i - 1).ScrollBars = fmScrollBarsVertical
        j = 3
        Do While IsEmpty(thisWorkbook.Sheets(kmSheet).Cells(j, 1)) = False
            If relevantCat(i) = thisWorkbook.Sheets(kmSheet).Cells(j, 3) Then
                For k = 0 To UBound(sortedRows)
                    If CInt(sortedRows(k)) = CInt(thisWorkbook.Sheets(kmSheet).Cells(j, 1)) Then
                        If firstRow = False Then
                            Set SeparateLineLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "SeparateLineLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With SeparateLineLabel
                                .Caption = "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = False
                                .Width = 750
                                .Height = 12
                                .Left = 6
                                .Top = 6 + topRange
                            End With
                        End If
                        
                        Set KMLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "KMLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With KMLabel
                            If languageGUI = "de" Then
                                .Caption = "KM-Zeile"
                            Else
                                .Caption = "CM-Row"
                            End If
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = True
                            .Width = 48
                            .Height = 12
                            .Left = 6
                            .Top = 24 + topRange
                        End With
                        
                        Set KMNoLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "KMNoLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With KMNoLabel
                            .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 2)
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = False
                            .Width = 48
                            .Height = 12
                            .Left = 6
                            .Top = 36 + topRange
                        End With
                        
                        Set ComponentLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ComponentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With ComponentLabel
                            If languageGUI = "de" Then
                                .Caption = "Relevante Bauteile / Baumaterialien / Fl|fffd|chen"
                            Else
                                .Caption = "Englischer Text"
                            End If
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = True
                            .Width = 222
                            .Height = 12
                            .Left = 72
                            .Top = 24 + topRange
                        End With
                        
                        Set ComponentContentLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ComponentContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With ComponentContentLabel
                            .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 4)
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = False
                            .Width = 222
                            .AutoSize = True
                            .Left = 72
                            .Top = 36 + topRange
                        End With
                        
                        Set ScopeLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1")
                        With ScopeLabel
                            .Name = "ScopeLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)
                            .Caption = "Bereich"
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = True
                            .Width = 222
                            .Height = 12
                            .Left = 306
                            .Top = 24 + topRange
                        End With
                        
                        Set ScopeContentLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ScopeContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With ScopeContentLabel
                            .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 5)
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = False
                            .Width = 222
                            .AutoSize = True
                            .Left = 306
                            .Top = 36 + topRange
                        End With
                        
                        Set CompoundLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "CompoundLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With CompoundLabel
                            If languageGUI = "de" Then
                                .Caption = "Betrachteter Stoff"
                            Else
                                .Caption = "Englischer Text"
                            End If
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = True
                            .Width = 126
                            .Height = 12
                            .Left = 540
                            .Top = 24 + topRange
                        End With
                        
                        Set CompoundContentLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "CompoundContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                        With CompoundContentLabel
                            .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 6)
                            .Font.Name = "Arial"
                            .Font.Size = 8
                            .Font.Bold = False
                            .Width = 126
                            .AutoSize = True
                            .Left = 540
                            .Top = 36 + topRange
                        End With
                        
                        Set nextButtonClass = New DynamicButtons
                        Set nextButtonClass.qsCmdButton = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.CommandButton.1", "QSButton" & thisWorkbook.Sheets(kmSheet).Cells(j, 1), True) 'BUTTONS
                        With nextButtonClass.qsCmdButton
                            If languageGUI = "de" Then
                                .Caption = "Qualit|fffd|tsstufen"
                            Else
                                .Caption = "Quality Levels"
                            End If
                            .Font.Name = Arial
                            .Font.Size = 8
                            .Font.Bold = True
                            .Width = 84
                            .Height = 24
                            .Left = 678
                            .Top = 24 + topRange
                        End With
                        nextButtonCollection.Add nextButtonClass
                        
                        If AssessMultiPage.Pages(i - 1).Controls("ComponentContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height <= 42 And AssessMultiPage.Pages(i - 1).Controls("ScopeContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height <= 42 And AssessMultiPage.Pages(i - 1).Controls("CompoundContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height <= 42 Then
                            Set ExplanationLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ExplanationLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With ExplanationLabel
                                If languageGUI = "de" Then
                                    .Caption = "Erl|fffd|uterung"
                                Else
                                    .Caption = "Explanation"
                                End If
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = True
                                .Width = 660 'mit Nachweistextbox eine Breite von 330
                                .Height = 12
                                .Left = 6
                                .Top = 78 + topRange
                            End With
                            
                            Set ExplanationTextBox = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.TextBox.1", "ExplanationTextBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With ExplanationTextBox
                                .WordWrap = True
                                .EnterKeyBehavior = True
                                .MultiLine = True
                                .ScrollBars = 2
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = False
                                .Width = 660 'mit Nachweistextbox eine Breite von 330
                                .Height = 56
                                .Left = 6
                                .Top = 90 + topRange
                            End With
                            
'                            --- NACHWEISTEXTBOX AUSKOMMENTIERT ---
'                            Set ProofLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ProofLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
'                            With ProofLabel
'                                If languageGUI = "de" Then
'                                    .Caption = "Nachweisdokumente"
'                                Else
'                                    .Caption = "Proof Of Documents"
'                                End If
'                                .Font.Name = "Arial"
'                                .Font.Size = 8
'                                .Font.Bold = True
'                                .Width = 330
'                                .Height = 12
'                                .Left = 348
'                                .Top = 78 + topRange
'                            End With
'
'                            Set ProofTextBox = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.TextBox.1", "ProofTextBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
'                            With ProofTextBox
'                                .WordWrap = True
'                                .EnterKeyBehavior = True
'                                .MultiLine = True
'                                .ScrollBars = 2
'                                .Font.Name = "Arial"
'                                .Font.Size = 8
'                                .Font.Bold = False
'                                .Width = 330
'                                .Height = 56
'                                .Left = 348
'                                .Top = 90 + topRange
'                            End With
                            
                            Set QualityLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "QualityLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With QualityLabel
                                If languageGUI = "de" Then
                                    .Caption = "Qualit|fffd|tsstufe"
                                Else
                                    .Caption = "Quality Levels"
                                End If
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = True
                                .Width = 72
                                .Height = 12
                                .Left = 690
                                .Top = 78 + topRange
                            End With
                            
                            Set QualityComboBox = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.ComboBox.1", "QualityComboBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With QualityComboBox
                                .AddItem "QS 1"
                                .AddItem "QS 2"
                                .AddItem "QS 3"
                                .AddItem "QS 4"
                                .AddItem "nicht erf|fffd|llt"
                                .Width = 72
                                .Height = 18
                                .Left = 690
                                .Top = 90 + topRange
                            End With
                                                                
                            l = l + 1
                            topRange = topRange + 158
                            firstRow = False
                        Else
                            'Berechnung der Abst|fffd|nde zwischen den dynamisch erzeugten Elementen
                            componentHeight = AssessMultiPage.Pages(i - 1).Controls("ComponentContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height
                            scopeHeight = AssessMultiPage.Pages(i - 1).Controls("ScopeContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height
                            compoundHeight = AssessMultiPage.Pages(i - 1).Controls("CompoundContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height
                            tempRange = componentHeight
                            If tempRange <= scopeHeight Then
                                tempRange = scopeHeight
                            End If
                            If tempRange <= compoundHeight Then
                                tempRange = compoundHeight
                            End If
                            
                            Set ExplanationLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ExplanationLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With ExplanationLabel
                                If languageGUI = "de" Then
                                    .Caption = "Erl|fffd|uterung"
                                Else
                                    .Caption = "Explanation"
                                End If
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = True
                                .Width = 660 'mit Nachweistextbox eine Breite von 330
                                .Height = 12
                                .Left = 6
                                .Top = 54 + tempRange + topRange
                            End With
                            
                            Set ExplanationTextBox = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.TextBox.1", "ExplanationTextBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With ExplanationTextBox
                                .WordWrap = True
                                .EnterKeyBehavior = True
                                .MultiLine = True
                                .ScrollBars = 2
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = False
                                .Width = 660 'mit Nachweistextbox eine Breite von 330
                                .Height = 56
                                .Left = 6
                                .Top = 66 + tempRange + topRange
                            End With
                            
'                            --- NACHWEISTEXTBOX AUSKOMMENTIERT ---
'                            Set ProofLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ProofLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
'                            With ProofLabel
'                                If languageGUI = "de" Then
'                                    .Caption = "Nachweisdokumente"
'                                Else
'                                    .Caption = "Proof Of Documents"
'                                End If
'                                .Font.Name = "Arial"
'                                .Font.Size = 8
'                                .Font.Bold = True
'                                .Width = 330
'                                .Height = 12
'                                .Left = 348
'                                .Top = 54 + tempRange + topRange
'                            End With
'
'                            Set ProofTextBox = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.TextBox.1", "ProofTextBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
'                            With ProofTextBox
'                                .WordWrap = True
'                                .EnterKeyBehavior = True
'                                .MultiLine = True
'                                .ScrollBars = 2
'                                .Font.Name = "Arial"
'                                .Font.Size = 8
'                                .Font.Bold = False
'                                .Width = 330
'                                .Height = 56
'                                .Left = 348
'                                .Top = 66 + tempRange + topRange
'                            End With
                            
                            Set QualityLabel = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "QualityLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With QualityLabel
                                If languageGUI = "de" Then
                                    .Caption = "Qualit|fffd|tsstufe"
                                Else
                                    .Caption = "Quality Levels"
                                End If
                                .Font.Name = "Arial"
                                .Font.Size = 8
                                .Font.Bold = True
                                .Width = 72
                                .Height = 12
                                .Left = 690
                                .Top = 54 + tempRange + topRange
                            End With
                            
                            Set QualityComboBox = AssessMultiPage.Pages(i - 1).Controls.Add("Forms.ComboBox.1", "QualityComboBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                            With QualityComboBox
                                .AddItem "QS 1"
                                .AddItem "QS 2"
                                .AddItem "QS 3"
                                .AddItem "QS 4"
                                .AddItem "nicht erf|fffd|llt"
                                .Width = 72
                                .Height = 18
                                .Left = 690
                                .Top = 66 + tempRange + topRange
                            End With
                            
                            l = l + 1
                            topRange = topRange + tempRange + 134
                            firstRow = False
                        End If
                    End If
                    'DEBUGGING-----------------------------
                    'MsgBox ("Innere Schleife - Runde " & k)
                    'DEBUGGING-----------------------------
                Next
            End If
            j = j + 1
            'DEBUGGING-----------------------------
            'MsgBox ("Mittlere Schleife - Runde " & j)
            'DEBUGGING-----------------------------
        Loop
        AssessMultiPage.Pages(i - 1).ScrollHeight = topRange + 6
        'DEBUGGING-----------------------------
        'MsgBox ("|fffd|u|fffd|ere Schleife - Runde " & i)
        'DEBUGGING-----------------------------
    Next
    
    Call RefillContent
    
    Exit Sub
    
AssessFrameError:
    MsgBox ("Es ist ein Fehler beim Erstellen der Anzeige der ausgew|fffd|hlten Zeilen aufgetreten!")
    On Error GoTo 0
End Sub

'F|fffd|llt bereits eingegebene Daten aus, wenn mit dem Zur|fffd|ck-Button die Ansicht gewechselt wurde
Private Sub RefillContent()
    On Error GoTo RefillContentError
    Dim i As Integer
    
    If backAndSave = True Then
        ManufacturerTextBox.Value = manufacturerName
        ProductTextBox.Value = productName
        CreatorTextBox.Value = creatorName
        CreationDateTextBox.Value = creationDate
        For i = 0 To UBound(sortedRows)
            On Error Resume Next
            AssessUserForm.Controls("ExplanationTextBox" & CStr(sortedRows(i))).Value = explanationContent.Item(CStr(sortedRows(i)))
            AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value = qualityContent.Item(CStr(sortedRows(i)))
        Next
    End If
    
    Exit Sub
    
RefillContentError:
    MsgBox ("Es ist ein Fehler beim wiederherstellen bereits eingegebener Daten aufgetrteten!")
End Sub

'Zum Aufrufen aus einem anderen Modul
Public Sub RefillLoadedContent()
    ManufacturerTextBox.Value = manufacturerName
    ProductTextBox.Value = productName
    CreatorTextBox.Value = creatorName
    CreationDateTextBox.Value = creationDate
    For i = 1 To explanationContent.Count
        AssessUserForm.Controls("ExplanationTextBox" & CStr(relevantRows(i))).Value = explanationContent(i)
        AssessUserForm.Controls("QualityComboBox" & CStr(relevantRows(i))).Value = qualityContent(i)
    Next
End Sub

'sortiert die ausgew|fffd|hlten Zeilen aufsteigend numerisch
Private Sub SortRelevantRows()
    On Error GoTo SortRelevantRowsError
    Dim i As Integer
    Dim a As Integer
    Dim b As Integer
    Dim temp As Integer
        
    ReDim sortedRows(relevantRows.Count - 1)
    
    For i = 1 To relevantRows.Count
        sortedRows(i - 1) = relevantRows(i)
    Next

    For a = UBound(sortedRows) To 0 Step -1
        For b = 0 To UBound(sortedRows) - 1
            If sortedRows(b) > sortedRows(b + 1) Then
                temp = sortedRows(b + 1)
                sortedRows(b + 1) = sortedRows(b)
                sortedRows(b) = temp
            End If
        Next
    Next
    
    Exit Sub
    
SortRelevantRowsError:
    MsgBox ("Es ist ein Fehler beim Sortieren der ausgew|fffd|hlten Zeilen aufgetreten!")
End Sub

'Filtert nur die Kategorien heraus bei denen eine Zeile als relevant markiert wurde
Private Sub RelevantCategories()
    On Error GoTo RelevantCategoriesError
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim catFound As Boolean
    
    catFound = False
    j = 3
    
    For i = 0 To UBound(sortedRows)
        j = 3
        Do While IsEmpty(thisWorkbook.Sheets(kmSheet).Cells(j, 1)) = False
            If CInt(sortedRows(i)) = CInt(thisWorkbook.Sheets(kmSheet).Cells(j, 1)) Then
                If relevantCat.Count = 0 Then
                    relevantCat.Add thisWorkbook.Sheets(kmSheet).Cells(j, 3), thisWorkbook.Sheets(kmSheet).Cells(j, 3)
                Else
                    For k = 1 To relevantCat.Count
                        If relevantCat(k) = thisWorkbook.Sheets(kmSheet).Cells(j, 3) Then
                            catFound = True
                        End If
                    Next
                    If catFound = False Then
                        relevantCat.Add thisWorkbook.Sheets(kmSheet).Cells(j, 3), thisWorkbook.Sheets(kmSheet).Cells(j, 3)
                    End If
                End If
            End If
        j = j + 1
        Loop
        catFound = False
    Next
    
    Exit Sub
    
RelevantCategoriesError:
    MsgBox ("Es ist ein Fehler bei der Zuordnung der Kategorien zu den als relevant markierten Zeilen aufgetreten!")
End Sub

Private Sub WriteOutputFile()
    On Error GoTo WriteOutputFileError
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim l As Integer
    Dim m As Integer
    Dim n As Integer
    Dim qualityLevelAll As String
    Dim outputWorkbook As Workbook
    
    Set outputWorkbook = Workbooks.Add
    
    k = 8
    
    'Spaltenbreite
    outputWorkbook.Sheets(1).Cells(1, 1).ColumnWidth = 1
    outputWorkbook.Sheets(1).Cells(1, 2).ColumnWidth = 10
    outputWorkbook.Sheets(1).Cells(1, 3).ColumnWidth = 10
    outputWorkbook.Sheets(1).Cells(1, 4).ColumnWidth = 20
    outputWorkbook.Sheets(1).Cells(1, 5).ColumnWidth = 35
'    outputWorkbook.Sheets(1).Cells(1, 6).ColumnWidth = 40 'Nachweistextbox auskommentiert
    outputWorkbook.Sheets(1).Cells(1, 6).ColumnWidth = 45
    outputWorkbook.Sheets(1).Cells(1, 7).ColumnWidth = 40
    outputWorkbook.Sheets(1).Cells(1, 8).ColumnWidth = 20
    outputWorkbook.Sheets(1).Cells(1, 9).ColumnWidth = 1
    
    'Zellenhintergrundfarbe & Zellen verbinden
    outputWorkbook.Sheets(1).Cells(2, 2).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(2, 2).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(2, 2).Font.Bold = True
    Range(outputWorkbook.Sheets(1).Cells(2, 2), outputWorkbook.Sheets(1).Cells(2, 3)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(2, 2), outputWorkbook.Sheets(1).Cells(2, 3)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(2, 4).Interior.Color = RGB(77, 170, 80)
    outputWorkbook.Sheets(1).Cells(2, 4).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(2, 4).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(2, 4).HorizontalAlignment = xlLeft
    Range(outputWorkbook.Sheets(1).Cells(2, 4), outputWorkbook.Sheets(1).Cells(2, 5)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(2, 4), outputWorkbook.Sheets(1).Cells(2, 5)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(3, 2).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(3, 2).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(3, 2).Font.Bold = True
    Range(outputWorkbook.Sheets(1).Cells(3, 2), outputWorkbook.Sheets(1).Cells(3, 3)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(3, 2), outputWorkbook.Sheets(1).Cells(3, 3)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(3, 4).Interior.Color = RGB(77, 170, 80)
    outputWorkbook.Sheets(1).Cells(3, 4).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(3, 4).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(3, 4).HorizontalAlignment = xlLeft
    Range(outputWorkbook.Sheets(1).Cells(3, 4), outputWorkbook.Sheets(1).Cells(3, 5)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(3, 4), outputWorkbook.Sheets(1).Cells(3, 5)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(4, 2).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(4, 2).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(4, 2).Font.Bold = True
    Range(outputWorkbook.Sheets(1).Cells(4, 2), outputWorkbook.Sheets(1).Cells(4, 3)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(4, 2), outputWorkbook.Sheets(1).Cells(4, 3)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(4, 4).Interior.Color = RGB(77, 170, 80)
    outputWorkbook.Sheets(1).Cells(4, 4).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(4, 4).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(4, 4).HorizontalAlignment = xlLeft
    Range(outputWorkbook.Sheets(1).Cells(4, 4), outputWorkbook.Sheets(1).Cells(4, 5)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(4, 4), outputWorkbook.Sheets(1).Cells(4, 5)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(5, 2).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(5, 2).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(5, 2).Font.Bold = True
    Range(outputWorkbook.Sheets(1).Cells(5, 2), outputWorkbook.Sheets(1).Cells(5, 3)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(5, 2), outputWorkbook.Sheets(1).Cells(5, 3)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(5, 4).Interior.Color = RGB(77, 170, 80)
    outputWorkbook.Sheets(1).Cells(5, 4).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(5, 4).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(5, 4).HorizontalAlignment = xlLeft
    Range(outputWorkbook.Sheets(1).Cells(5, 4), outputWorkbook.Sheets(1).Cells(5, 5)).MergeCells = True
    Range(outputWorkbook.Sheets(1).Cells(5, 4), outputWorkbook.Sheets(1).Cells(5, 5)).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(2, 7).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(2, 7).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(2, 7).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(2, 7).HorizontalAlignment = xlLeft
    outputWorkbook.Sheets(1).Cells(2, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(3, 7).Interior.Color = RGB(77, 170, 80)
    outputWorkbook.Sheets(1).Cells(3, 7).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(3, 7).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(3, 7).HorizontalAlignment = xlLeft
    outputWorkbook.Sheets(1).Cells(3, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(4, 7).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(4, 7).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(4, 7).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(4, 7).HorizontalAlignment = xlLeft
    outputWorkbook.Sheets(1).Cells(4, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(5, 7).Interior.Color = RGB(77, 170, 80)
    outputWorkbook.Sheets(1).Cells(5, 7).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(5, 7).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(5, 7).HorizontalAlignment = xlLeft
    outputWorkbook.Sheets(1).Cells(5, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    
    'Schriftfarben
    outputWorkbook.Sheets(1).Cells(7, 2).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 2).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 2).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(7, 3).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 3).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 3).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(7, 4).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 4).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 4).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(7, 5).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 5).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 5).Font.Bold = True
'    --- Nachweise auskommentiert ---
'    outputWorkbook.Sheets(1).Cells(7, 6).Interior.Color = RGB(60, 73, 129)
'    outputWorkbook.Sheets(1).Cells(7, 6).Font.Color = RGB(255, 255, 255)
'    outputWorkbook.Sheets(1).Cells(7, 6).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(7, 6).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 6).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 6).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(7, 7).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 7).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 7).Font.Bold = True
    outputWorkbook.Sheets(1).Cells(7, 8).Interior.Color = RGB(60, 73, 129)
    outputWorkbook.Sheets(1).Cells(7, 8).Font.Color = RGB(255, 255, 255)
    outputWorkbook.Sheets(1).Cells(7, 8).Font.Bold = True
    
    'Rahmenlinien
    outputWorkbook.Sheets(1).Cells(2, 2) = "Kriterienmatrix"
    outputWorkbook.Sheets(1).Cells(2, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(2, 4) = npkm
    outputWorkbook.Sheets(1).Cells(2, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(2, 7) = "Erstellt durch"
    outputWorkbook.Sheets(1).Cells(2, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(3, 2) = "Hersteller"
    outputWorkbook.Sheets(1).Cells(3, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(3, 4).NumberFormat = "@"
    outputWorkbook.Sheets(1).Cells(3, 4) = CStr(ManufacturerTextBox.Value)
    outputWorkbook.Sheets(1).Cells(3, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(3, 7) = CStr(CreatorTextBox.Value)
    outputWorkbook.Sheets(1).Cells(3, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(4, 2) = "Produktname"
    outputWorkbook.Sheets(1).Cells(4, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(4, 4).NumberFormat = "@"
    outputWorkbook.Sheets(1).Cells(4, 4) = CStr(ProductTextBox.Value)
    outputWorkbook.Sheets(1).Cells(4, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(4, 7) = "Datum"
    outputWorkbook.Sheets(1).Cells(4, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(5, 2) = "Qualit|fffd|tsstufe Produkt"
    outputWorkbook.Sheets(1).Cells(5, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(5, 7) = CStr(CreationDateTextBox.Value)
    outputWorkbook.Sheets(1).Cells(5, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 2) = "KM-Zeile"
    outputWorkbook.Sheets(1).Cells(7, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 3) = "QS"
    outputWorkbook.Sheets(1).Cells(7, 3).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 4) = "QS-Voraussetzung"
    outputWorkbook.Sheets(1).Cells(7, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 5) = "Erl|fffd|uterung"
    outputWorkbook.Sheets(1).Cells(7, 5).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
'    --- Nachweise auskommentiert ---
'    outputWorkbook.Sheets(1).Cells(7, 6) = "Nachweise"
'    outputWorkbook.Sheets(1).Cells(7, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 6) = "Relevante Bauteile / Baumaterialien / Fl|fffd|chen"
    outputWorkbook.Sheets(1).Cells(7, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 7) = "Bereich"
    outputWorkbook.Sheets(1).Cells(7, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    outputWorkbook.Sheets(1).Cells(7, 8) = "Betrachteter Stoff"
    outputWorkbook.Sheets(1).Cells(7, 8).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    
    'Schleife zum auff|fffd|llen der als relevant markierten Zeilen
    For i = 0 To UBound(sortedRows)
        If i Mod 2 = 1 Then
            outputWorkbook.Sheets(1).Cells(i + 8, 2).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 2).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 3).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 3).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 3).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 4).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 4).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 5).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 5).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 5).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
'            --- Nachweise auskommentiert ---
'            outputWorkbook.Sheets(1).Cells(i + 8, 6).Interior.Color = RGB(77, 170, 80)
'            outputWorkbook.Sheets(1).Cells(i + 8, 6).Font.Color = RGB(255, 255, 255)
'            outputWorkbook.Sheets(1).Cells(i + 8, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 6).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 6).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 7).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 7).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 8).Interior.Color = RGB(77, 170, 80)
            outputWorkbook.Sheets(1).Cells(i + 8, 8).Font.Color = RGB(255, 255, 255)
            outputWorkbook.Sheets(1).Cells(i + 8, 8).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        Else
            outputWorkbook.Sheets(1).Cells(i + 8, 2).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 2).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 3).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 3).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 3).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 4).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 4).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 5).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 5).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 5).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
'            --- Nachweise auskommentiert ---
'            outputWorkbook.Sheets(1).Cells(i + 8, 6).Interior.Color = RGB(165, 216, 103)
'            outputWorkbook.Sheets(1).Cells(i + 8, 6).Font.Color = RGB(60, 73, 129)
'            outputWorkbook.Sheets(1).Cells(i + 8, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 6).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 6).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 7).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 7).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
            outputWorkbook.Sheets(1).Cells(i + 8, 8).Interior.Color = RGB(165, 216, 103)
            outputWorkbook.Sheets(1).Cells(i + 8, 8).Font.Color = RGB(60, 73, 129)
            outputWorkbook.Sheets(1).Cells(i + 8, 8).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        End If
        
        ' Ordnet der Matrix-ID die richtige Matrix-Zeile zu
        If Mid(sortedRows(i), 1, 2) = 12 Then
            l = 3
            Do While IsEmpty(thisWorkbook.Sheets(2).Cells(l, 1)) = False
                If sortedRows(i) = thisWorkbook.Sheets(2).Cells(l, 1) Then
                    outputWorkbook.Sheets(1).Cells(i + 8, 2) = thisWorkbook.Sheets(2).Cells(l, 2)
                    outputWorkbook.Sheets(1).Cells(i + 8, 1).Font.Color = RGB(255, 255, 255)
                    outputWorkbook.Sheets(1).Cells(i + 8, 1) = thisWorkbook.Sheets(2).Cells(l, 1)
                End If
                l = l + 1
            Loop
        ElseIf Mid(sortedRows(i), 1, 2) = 15 Then
            l = 3
            Do While IsEmpty(thisWorkbook.Sheets(3).Cells(l, 1)) = False
                If sortedRows(i) = thisWorkbook.Sheets(3).Cells(l, 1) Then
                    outputWorkbook.Sheets(1).Cells(i + 8, 2) = thisWorkbook.Sheets(3).Cells(l, 2)
                    outputWorkbook.Sheets(1).Cells(i + 8, 1).Font.Color = RGB(255, 255, 255)
                    outputWorkbook.Sheets(1).Cells(i + 8, 1) = thisWorkbook.Sheets(3).Cells(l, 1)
                End If
                l = l + 1
            Loop
        ElseIf Mid(sortedRows(i), 1, 2) = 18 Then
            l = 3
            Do While IsEmpty(thisWorkbook.Sheets(4).Cells(l, 1)) = False
                If sortedRows(i) = thisWorkbook.Sheets(4).Cells(l, 1) Then
                    outputWorkbook.Sheets(1).Cells(i + 8, 2) = thisWorkbook.Sheets(4).Cells(l, 2)
                    outputWorkbook.Sheets(1).Cells(i + 8, 1).Font.Color = RGB(255, 255, 255)
                    outputWorkbook.Sheets(1).Cells(i + 8, 1) = thisWorkbook.Sheets(4).Cells(l, 1)
                End If
                l = l + 1
            Loop
        End If
        
        outputWorkbook.Sheets(1).Cells(i + 8, 3) = AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value
        
        'Zeilenumbr|fffd|che
        j = 3
        Do While IsEmpty(thisWorkbook.Sheets(kmSheet).Cells(j, 1)) = False
            If sortedRows(i) = thisWorkbook.Sheets(kmSheet).Cells(j, 1) And AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value = "QS 1" Then
                outputWorkbook.Sheets(1).Cells(i + 8, 4).WrapText = True
                outputWorkbook.Sheets(1).Cells(i + 8, 4) = thisWorkbook.Sheets(kmSheet).Cells(j, 8)
            ElseIf sortedRows(i) = thisWorkbook.Sheets(kmSheet).Cells(j, 1) And AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value = "QS 2" Then
                outputWorkbook.Sheets(1).Cells(i + 8, 4).WrapText = True
                outputWorkbook.Sheets(1).Cells(i + 8, 4) = thisWorkbook.Sheets(kmSheet).Cells(j, 9)
            ElseIf sortedRows(i) = thisWorkbook.Sheets(kmSheet).Cells(j, 1) And AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value = "QS 3" Then
                outputWorkbook.Sheets(1).Cells(i + 8, 4).WrapText = True
                outputWorkbook.Sheets(1).Cells(i + 8, 4) = thisWorkbook.Sheets(kmSheet).Cells(j, 10)
            ElseIf sortedRows(i) = thisWorkbook.Sheets(kmSheet).Cells(j, 1) And AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).Value = "QS 4" Then
                outputWorkbook.Sheets(1).Cells(i + 8, 4).WrapText = True
                outputWorkbook.Sheets(1).Cells(i + 8, 4) = thisWorkbook.Sheets(kmSheet).Cells(j, 11)
            End If
            j = j + 1
        Loop
        
        outputWorkbook.Sheets(1).Cells(i + 8, 5).WrapText = True
        outputWorkbook.Sheets(1).Cells(i + 8, 5) = AssessUserForm.Controls("ExplanationTextBox" & CStr(sortedRows(i))).Value
'        --- Nachweise auskommentiert ---
'        outputWorkbook.Sheets(1).Cells(i + 8, 6).WrapText = True
'        outputWorkbook.Sheets(1).Cells(i + 8, 6) = AssessUserForm.Controls("ProofTextBox" & CStr(sortedRows(i))).Value
        outputWorkbook.Sheets(1).Cells(i + 8, 6).WrapText = True
        outputWorkbook.Sheets(1).Cells(i + 8, 6) = AssessUserForm.Controls("ComponentContentLabel" & CStr(sortedRows(i))).Caption
        outputWorkbook.Sheets(1).Cells(i + 8, 7).WrapText = True
        outputWorkbook.Sheets(1).Cells(i + 8, 7) = AssessUserForm.Controls("ScopeContentLabel" & CStr(sortedRows(i))).Caption
        outputWorkbook.Sheets(1).Cells(i + 8, 8).WrapText = True
        outputWorkbook.Sheets(1).Cells(i + 8, 8) = AssessUserForm.Controls("CompoundContentLabel" & CStr(sortedRows(i))).Caption
    Next
    
    'Ermittlung der Qualit|fffd|tsstufe des gesamten Produkts
    qualityLevelAll = outputWorkbook.Sheets(1).Cells(8, 3)
    k = 9
    Do While IsEmpty(outputWorkbook.Sheets(1).Cells(k, 3)) = False
        If qualityLevelAll = "QS 4" And (outputWorkbook.Sheets(1).Cells(k, 3) = "QS 3" Or outputWorkbook.Sheets(1).Cells(k, 3) = "QS 2" Or outputWorkbook.Sheets(1).Cells(k, 3) = "QS 1" Or outputWorkbook.Sheets(1).Cells(k, 3) = "nicht erf|fffd|llt") Then
            qualityLevelAll = outputWorkbook.Sheets(1).Cells(k, 3)
        ElseIf qualityLevelAll = "QS 3" And (outputWorkbook.Sheets(1).Cells(k, 3) = "QS 2" Or outputWorkbook.Sheets(1).Cells(k, 3) = "QS 1" Or outputWorkbook.Sheets(1).Cells(k, 3) = "nicht erf|fffd|llt") Then
            qualityLevelAll = outputWorkbook.Sheets(1).Cells(k, 3)
        ElseIf qualityLevelAll = "QS 2" And (outputWorkbook.Sheets(1).Cells(k, 3) = "QS 1" Or outputWorkbook.Sheets(1).Cells(k, 3) = "nicht erf|fffd|llt") Then
            qualityLevelAll = outputWorkbook.Sheets(1).Cells(k, 3)
        ElseIf qualityLevelAll = "QS 1" And (outputWorkbook.Sheets(1).Cells(k, 3) = "nicht erf|fffd|llt") Then
            qualityLevelAll = outputWorkbook.Sheets(1).Cells(k, 3)
        End If
        k = k + 1
    Loop
    
    outputWorkbook.Sheets(1).Cells(5, 4) = qualityLevelAll
    outputWorkbook.Sheets(1).Cells(5, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    
    If languageGUI = "de" Then
        outputWorkbook.Sheets(1).Name = "Produkt"
    Else
        outputWorkbook.Sheets(1).Name = "Product"
    End If
    
    On Error GoTo SaveOutputFileError
    'Ausgabedatei sperren
    n = 8
    Do While IsEmpty(outputWorkbook.Sheets(1).Cells(n, 5)) = False
        outputWorkbook.Sheets(1).Cells(n, 5).locked = False
        n = n + 1
    Loop
    
    On Error GoTo Error01
    'outputWorkbook.Sheets(2).Delete
    'outputWorkbook.Sheets(3).Delete
    outputWorkbook.Sheets(1).Protect Password:="EiesSiJ2018!"
    
    Dim saveFilePath As Variant
    Dim suggestedFileName As Variant
        
        
    Application.DisplayAlerts = False
    On Error GoTo Error02
    suggestedFileName = CStr(ManufacturerTextBox.Value) & "_" & CStr(ProductTextBox.Value) '& ".xlsx"
    On Error GoTo Error03
    saveFilePath = outputWorkbook.Application.GetSaveAsFilename(suggestedFileName, "Excel-Dateien (*.xlsx), *.xlsx")
    On Error GoTo Error04
    If saveFilePath <> False Then
        outputWorkbook.SaveAs saveFilePath
    End If
    'outputWorkbook.Application.Dialogs(xlDialogSaveAs).Show (CStr(ManufacturerTextBox.Value) & "_" & CStr(ProductTextBox.Value)), FileFormat:=51
    Application.DisplayAlerts = True
    
    Exit Sub
    
WriteOutputFileError:
    MsgBox ("Es ist ein Fehler beim Schreiben der Ausgabedatei aufgetreten!")
    Exit Sub
    
SaveOutputFileError:
    MsgBox ("Es ist ein Fehler beim Speichern der Ausgabedatei aufgetreten!")
    Exit Sub
    
Error01:
    MsgBox ("Fehler beim L|fffd|schen von Arbeitsbl|fffd|ttern!")
    Exit Sub
    
Error02:
    MsgBox ("Fehler beim vorgeschlagenen Dateinamen!")
    Exit Sub
    
Error03:
    MsgBox ("Fehler beim Dateipfad!")
    Exit Sub
    
Error04:
    MsgBox ("Fehler bei SaveAs!")
    Exit Sub
End Sub

'Pr|fffd|ft, ob alle Textfelder ausgef|fffd|llt sind
Function CheckContent() As Boolean
    On Error GoTo CheckContentError
    Dim i As Integer
    Dim trueFalse As Boolean
    
    trueFalse = True
    
    For i = 0 To UBound(sortedRows)
        If AssessUserForm.Controls("QualityComboBox" & CStr(sortedRows(i))).ListIndex < 0 Then
            trueFalse = False
        ElseIf AssessUserForm.Controls("ExplanationTextBox" & CStr(sortedRows(i))).Value = "" Then
            trueFalse = False
'        --- Nachweise auskommentiert ---
'        ElseIf AssessUserForm.Controls("ProofTextBox" & CStr(sortedRows(i))).Value = "" Then
'            trueFalse = False
        ElseIf ManufacturerTextBox.Value = "" Then
            trueFalse = False
        ElseIf ProductTextBox.Value = "" Then
            trueFalse = False
        ElseIf CreatorTextBox.Value = "" Then
            trueFalse = False
        ElseIf CreationDateTextBox.Value = "" Then
            trueFalse = False
        End If
    Next
    
    CheckContent = trueFalse
    
    Exit Function
    
CheckContentError:
    MsgBox ("Es ist ein Fehler bei der Pr|fffd|fung auf leere Eingabefelder aufgetreten!")
End Function


















Attribute VB_Name = "AssessmentModul"
'Startet die Produktbewertung
Public Sub AssessProduct()
    'If loadedFile = False Then
        On Error Resume Next
        Call ResetData
    'End If

    On Error GoTo ShowUserFormError
    UserUserForm.Show
    
    Exit Sub
    
ShowUserFormError:
    MsgBox ("Es ist ein Fehler beim |fffd|ffnen der Benutzerauswahl aufgetreten!")
End Sub

'Setzt beim Starten alle Grunddaten zur|fffd|ck
Public Sub ResetData()
    On Error GoTo ResetDataError
    npkm = ""
    kmSheet = 0
    manufacturerName = ""
    productName = ""
    creatorName = ""
    creationDate = ""
    userType = ""
    qs1 = ""
    qs2 = ""
    qs3 = ""
    qs4 = ""
    
'    Do While categories.Count > 0
'        categories.Remove 1
'    Loop
'
'    Do While relevantRows.Count > 0
'        relevantRows.Remove 1
'    Loop
'
'    Do While explanationContent.Count > 0
'        explanationContent.Remove 1
'    Loop
'
'    Do While qualityContent.Count > 0
'        qualityContent.Remove 1
'    Loop
    
    Set categories = Nothing
    Set relevantRows = Nothing
    Set explanationContent = Nothing
    Set qualityContent = Nothing
    Set checkBoxCollection = Nothing
    
    Exit Sub
    
ResetDataError:
    MsgBox ("Es ist ein Fehler beim Zur|fffd|cksetzen der Eingaben aufgetreten!")
End Sub
Attribute VB_Name = "CheckChangeLogModul"
Option Explicit
Public changeLogOK As Boolean

Sub CheckChangeLog()
    changeLogOK = True
    
    Call CheckRowDuplicates
    Call CheckValidEntries
    Call CheckChangeLogAndKMs
    
    If changeLogOK = True Then
        MsgBox ("Keine ChangeLog Fehler gefunden!")
        thisWorkbook.Sheets("Debugging").Cells(16, 3) = "OK"
    End If
End Sub

'Pr|fffd|ft, ob die IDs und Zeilennummer in jeder Zeile 2012/2015 und 2015/2018 eindeutig sind
Private Sub CheckRowDuplicates()
    Dim i As Integer
    Dim j As Integer
    
    i = 2
    
    Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 2)) = False
        j = 2
        Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(j, 2)) = False
            If i <> j Then
                If thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 5) And _
                   thisWorkbook.Sheets("ChangeLog_de").Cells(i, 6) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 6) And _
                   thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 7) And _
                   thisWorkbook.Sheets("ChangeLog_de").Cells(i, 8) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 8) And _
                   (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 5) <> 0 Or _
                    thisWorkbook.Sheets("ChangeLog_de").Cells(i, 6) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 6) <> 0 Or _
                    thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 7) <> 0 Or _
                    thisWorkbook.Sheets("ChangeLog_de").Cells(i, 8) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 8) <> 0) Then
                    MsgBox ("Fehler in ChangeLog 2012 zu 2015: Zeile " & i & " und Zeile " & j & " sind identisch!")
                    changeLogOK = False
                    thisWorkbook.Sheets("Debugging").Cells(16, 3) = "FEHLER"
                End If
                If thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 11) And _
                   thisWorkbook.Sheets("ChangeLog_de").Cells(i, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 12) And _
                   thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 13) And _
                   thisWorkbook.Sheets("ChangeLog_de").Cells(i, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 14) And _
                   (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 11) <> 0 Or _
                    thisWorkbook.Sheets("ChangeLog_de").Cells(i, 12) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 12) <> 0 Or _
                    thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 13) <> 0 Or _
                    thisWorkbook.Sheets("ChangeLog_de").Cells(i, 14) <> 0 Or thisWorkbook.Sheets("ChangeLog_de").Cells(j, 14) <> 0) Then
                    MsgBox ("Fehler in ChangeLog 2015 zu 2018: Zeile " & i & " und Zeile " & j & " sind identisch!")
                    changeLogOK = False
                    thisWorkbook.Sheets("Debugging").Cells(16, 3) = "FEHLER"
                End If
            End If
            j = j + 1
        Loop
        i = i + 1
    Loop
End Sub

'Pr|fffd|ft, auf g|fffd|ltige Eintr|fffd|ge von ID und Zeilennummer
Private Sub CheckValidEntries()
    Dim i As Integer
    
    i = 2
    
    Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 2)) = False
        If (Len(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5)) <> 5 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5) <> 0) Or _
           IsNumeric(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5)) = False Then
            MsgBox ("ID 2012 in Zeile " & i & " hat nicht die erwartete L|fffd|nge oder ist keine Zahl!")
            changeLogOK = False
        End If
        If (Len(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7)) <> 5 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7) <> 0) Or _
           IsNumeric(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7)) = False Then
            MsgBox ("ID 2015 in Zeile " & i & " hat nicht die erwartete L|fffd|nge oder ist keine Zahl!")
            changeLogOK = False
        End If
        If (Len(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11)) <> 5 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11) <> 0) Or _
           IsNumeric(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11)) = False Then
            MsgBox ("ID 2015 in Zeile " & i & " hat nicht die erwartete L|fffd|nge oder ist keine Zahl!")
            changeLogOK = False
        End If
        If (Len(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13)) <> 5 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13) <> 0) Or _
           IsNumeric(thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13)) = False Then
            MsgBox ("ID 2018 in Zeile " & i & " hat nicht die erwartete L|fffd|nge oder ist keine Zahl!")
            changeLogOK = False
        End If
        
        If (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5) = 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 6) <> 0) Or _
           (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 5) <> 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 6) = 0) Then
            MsgBox ("Ung|fffd|ltige Eingabe ID + Zeile 2012 in Zeile " & i)
            changeLogOK = False
        End If
        If (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7) = 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 8) <> 0) Or _
           (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 7) <> 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 8) = 0) Then
            MsgBox ("Ung|fffd|ltige Eingabe ID + Zeile 2015 in Zeile " & i)
            changeLogOK = False
        End If
        If (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11) = 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 12) <> 0) Or _
           (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 11) <> 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 12) = 0) Then
            MsgBox ("Ung|fffd|ltige Eingabe ID + Zeile 2015 in Zeile " & i)
            changeLogOK = False
        End If
        If (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13) = 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 14) <> 0) Or _
           (thisWorkbook.Sheets("ChangeLog_de").Cells(i, 13) <> 0 And thisWorkbook.Sheets("ChangeLog_de").Cells(i, 14) = 0) Then
            MsgBox ("Ung|fffd|ltige Eingabe ID + Zeile 2018 in Zeile " & i)
            changeLogOK = False
        End If
        
        i = i + 1
    Loop
End Sub

'Pr|fffd|ft, ob jede KM-Zeile im ChangeLog zugeordnet ist
Private Sub CheckChangeLogAndKMs()
    Dim i As Integer
    Dim j As Integer
    Dim foundID As Boolean
    Dim checkCounter As Integer
    
    checkCounter = 0
    
    'Pr|fffd|fe KM2012_de
    i = 3
    foundID = False
    
    Do While IsEmpty(thisWorkbook.Sheets("KM2012_de").Cells(i, 1)) = False
        j = 2
        Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(j, 2)) = False
            If thisWorkbook.Sheets("KM2012_de").Cells(i, 1) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 5) Then
                foundID = True
            End If
            j = j + 1
        Loop
        i = i + 1
    Loop
    
    If foundID = False Then
        MsgBox ("Es sind nicht alle Zeilen IDs aus KM2012 im ChangeLog vorhanden!")
    Else
        checkCounter = checkCounter + 1
    End If
    
    'Pr|fffd|fe KM2015_de (zu 2012)
    i = 3
    foundID = False
    
    Do While IsEmpty(thisWorkbook.Sheets("KM2015_de").Cells(i, 1)) = False
        j = 2
        Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(j, 2)) = False
            If thisWorkbook.Sheets("KM2015_de").Cells(i, 1) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 7) Then
                foundID = True
            End If
            j = j + 1
        Loop
        i = i + 1
    Loop
    
    If foundID = False Then
        MsgBox ("Es sind nicht alle Zeilen IDs aus KM2015 im ChangeLog vorhanden!")
    Else
        checkCounter = checkCounter + 1
    End If
    
    'Pr|fffd|fe KM2015_de (zu 2018)
    i = 3
    foundID = False
    
    Do While IsEmpty(thisWorkbook.Sheets("KM2015_de").Cells(i, 1)) = False
        j = 2
        Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(j, 2)) = False
            If thisWorkbook.Sheets("KM2015_de").Cells(i, 1) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 11) Then
                foundID = True
            End If
            j = j + 1
        Loop
        i = i + 1
    Loop
    
    If foundID = False Then
        MsgBox ("Es sind nicht alle Zeilen IDs aus KM2015 im ChangeLog vorhanden!")
    Else
        checkCounter = checkCounter + 1
    End If
    
    'Pr|fffd|fe KM2018_de
    i = 3
    foundID = False
    
    Do While IsEmpty(thisWorkbook.Sheets("KM2018_de").Cells(i, 1)) = False
        j = 2
        Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(j, 2)) = False
            If thisWorkbook.Sheets("KM2018_de").Cells(i, 1) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, 13) Then
                foundID = True
            End If
            j = j + 1
        Loop
        i = i + 1
    Loop
    
    If foundID = False Then
        MsgBox ("Es sind nicht alle Zeilen IDs aus KM2015 im ChangeLog vorhanden!")
    Else
        checkCounter = checkCounter + 1
    End If
    
    If checkCounter = 4 Then
        thisWorkbook.Sheets("Debugging").Cells(16, 3) = "OK"
    Else
        thisWorkbook.Sheets("Debugging").Cells(16, 3) = "FEHLER"
    End If
End Sub














Attribute VB_Name = "CheckEmptyCellsModul"
'Pr|fffd|ft Kriterienmatrizen und ChangeLog auf leere Zellen
Sub CheckEmptyCells()
    On Error GoTo CheckEmptyCellsError
    Dim i As Integer
    Dim j As Integer
    Dim de2012 As Boolean
    Dim de2015 As Boolean
    Dim de2018 As Boolean
    Dim cl As Boolean
    
    de2012 = True
    de2015 = True
    de2018 = True
    cl = True
    
    'Pr|fffd|ft Kriterienmatrix 2012 (deutsch) auf leere Zellen
    For i = 3 To 34
        For j = 1 To 13
            If IsEmpty(thisWorkbook.Sheets("KM2012_de").Cells(i, j)) = True Then
                MsgBox ("KM2012_de: Die Zelle in Zeile " & i & " und Spalte " & j & " ist leer!")
                de2012 = False
            End If
        Next
    Next
    
    'Pr|fffd|ft Kriterienmatrix 2015 (deutsch) auf leere Zellen
    For i = 3 To 47
        For j = 1 To 14
            If IsEmpty(thisWorkbook.Sheets("KM2015_de").Cells(i, j)) = True Then
                MsgBox ("KM2015_de: Die Zelle in Zeile " & i & " und Spalte " & j & " ist leer!")
                de2015 = False
            End If
        Next
    Next
    
    'Pr|fffd|ft Kriterienmatrix 2018 (deutsch) auf leere Zellen
    For i = 3 To 50
        For j = 1 To 20
            If IsEmpty(thisWorkbook.Sheets("KM2018_de").Cells(i, j)) = True Then
                MsgBox ("KM2018_de: Die Zelle in Zeile " & i & " und Spalte " & j & " ist leer!")
                de2018 = False
            End If
        Next
    Next
    
    'Pr|fffd|ft ChangeLog (deutsch) auf leere Zellen
    For i = 2 To 51
        For j = 2 To 16
            If IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(i, j)) = True Then
                MsgBox ("ChangeLog_de: Die Zelle in Zeile " & i & " und Spalte " & j & " ist leer!")
                cl = False
            End If
        Next
    Next
    
    'Schreibt in "Debugging" ob leere Zellen Test positiv oder negativ
    If de2012 = True And de2015 = True And de2018 = True And cl = True Then
        thisWorkbook.Sheets("Debugging").Cells(12, 3) = "OK"
        MsgBox ("Keine leeren Zellen gefunden!")
    Else
        thisWorkbook.Sheets("Debugging").Cells(12, 3) = "FEHLER"
    End If
    
    Exit Sub
    
CheckEmptyCellsError:
    MsgBox ("Es ist ein Fehler bei der Pr|fffd|fung auf leere Zellen aufgetreten!")
End Sub
Attribute VB_Name = "CheckIDModul"
'Pr|fffd|ft, ob Kriterenmatrix-IDs die korrekte L|fffd|nge haben und |fffd|ber alle KM-Matrizen nur einmalig vergeben sind
Sub CheckKMRowID()
    On Error GoTo CheckKMRowIDError
    Dim i As Integer
    Dim j As Integer
    Dim idList As New Collection
    Dim idErrors As String
    
    For i = 2 To 4
        j = 3
        Do While IsEmpty(thisWorkbook.Sheets(i).Cells(j, 1)) = False
            idList.Add thisWorkbook.Sheets(i).Cells(j, 1)
            j = j + 1
        Loop
    Next
        
    For i = 1 To idList.Count
        If Len(idList(i)) > 5 Or Len(idList(i)) < 5 Then
            idErrors = idErrors + CStr(idList(i)) & " hat nicht die korrekte L|fffd|nge" & vbCrLf
        End If
        For j = 1 To idList.Count
            If i <> j Then
                If idList(i) = idList(j) Then
                    idErrors = idErrors + CStr(idList(i)) & " bereits vergeben!" & vbCrLf
                End If
            End If
        Next
    Next
    
    If Len(idErrors) > 0 Then
        MsgBox (idErrors)
        thisWorkbook.Sheets("Debugging").Cells(4, 3) = "FEHLER"
    Else
        MsgBox ("Keine ID-Fehler gefunden!")
        thisWorkbook.Sheets("Debugging").Cells(4, 3) = "OK"
    End If
    
    Exit Sub
    
CheckKMRowIDError:
    MsgBox ("Es ist ein Programmfehler beim Pr|fffd|fen der Matrizen-IDs aufgetreten!")
End Sub
Attribute VB_Name = "CheckRowModul"
'Pr|fffd|ft, ob innerhalb einer Kriterienmatrik jede Zeilennummer nur einmal vergeben ist
Sub CheckKMRow()
    Dim i As Integer
    
    For i = 2 To 4
        Call RowCheckProcess(i)
    Next
End Sub

Sub RowCheckProcess(a As Integer)
    On Error GoTo RowCheckProcessError
    Dim j As Integer
    Dim k As Integer
    Dim rowList As New Collection
    Dim rowError As String

    j = 3
    rowError = ""
    
    Do While IsEmpty(thisWorkbook.Sheets(a).Cells(j, 2)) = False
        rowList.Add thisWorkbook.Sheets(a).Cells(j, 2)
        j = j + 1
    Loop
    
    For j = 1 To rowList.Count
        For k = 1 To rowList.Count
            If j <> k Then
                If rowList(j) = rowList(k) Then
                    If a = 2 Then
                        rowError = rowError + CStr(rowList(j)) & " in KM2012 bereits vergeben" & vbCrLf
                    ElseIf a = 3 Then
                        rowError = rowError + CStr(rowList(j)) & " in KM2015 bereits vergeben" & vbCrLf
                    Else
                        rowError = rowError + CStr(rowList(j)) & " in KM2018 bereits vergeben" & vbCrLf
                    End If
                End If
            End If
        Next
    Next
    
    If Len(rowError) > 0 Then
        MsgBox (rowError)
        Do While rowList.Count > 0
            rowList.Remove (1)
        Loop
        thisWorkbook.Sheets("Debugging").Cells(8, 3) = "FEHLER"
    Else
        If a = 2 Then
            MsgBox ("Keine Zeilenfehler in KM2012 gefunden!")
        ElseIf a = 3 Then
            MsgBox ("Keine Zeilenfehler in KM2015 gefunden!")
        Else
            MsgBox ("Keine Zeilenfehler in KM2018 gefunden!")
        End If
        thisWorkbook.Sheets("Debugging").Cells(8, 3) = "OK"
    End If
    
    Exit Sub
    
RowCheckProcessError:
    MsgBox ("Es ist ein Fehler beim Pr|fffd|fen der Matrixzeilen aufgetreten!")
End Sub
Attribute VB_Name = "CompareModul"
Option Explicit
    Private productFile As Workbook
    Private productCompareFile As Workbook
    Private productFilePath As String
    Private rowCounter As Integer
    Private currentRow As Integer
    Private i As Integer
    Private j As Integer
    Private m As Integer
    Private n As Integer
    Private o As Integer
    Private kmColumn As Integer
    Private sheetCopy As Worksheet

Sub CompareProductKMVersion()
    On Error GoTo CompareProductKMError
    productFilePath = Application.GetOpenFilename("Microsoft Excel Dateien (*.xlsx), *.xlsx")
    If productFilePath = "Falsch" Or productFilePath = "False" Then
        GoTo NoFileError
    End If
    Set productFile = Workbooks.Open(productFilePath)
    productFile.Sheets(1).Unprotect Password:="EiesSiJ2018!"
    Set productCompareFile = Workbooks.Add
    Set sheetCopy = productFile.Sheets(1)
    sheetCopy.Copy productCompareFile.Sheets(1)
    
    If languageGUI = "de" Then
        Set sheetCopy = thisWorkbook.Sheets("KM2012_de")
        sheetCopy.Copy productCompareFile.Sheets(2)
        Set sheetCopy = thisWorkbook.Sheets("KM2015_de")
        sheetCopy.Copy productCompareFile.Sheets(3)
        Set sheetCopy = thisWorkbook.Sheets("KM2018_de")
        sheetCopy.Copy productCompareFile.Sheets(4)
        Application.DisplayAlerts = False
        productCompareFile.Sheets(5).Delete
        productCompareFile.Sheets(5).Delete
        productCompareFile.Sheets(5).Delete
        Application.DisplayAlerts = True
        productCompareFile.Worksheets(1).Activate
    Else
        ' Code f|fffd|r Englisch
    End If
    
    If productCompareFile.Sheets(1).Cells(2, 4) Like "*2012*" Then
        kmColumn = 5 'Produkt mit Version 2012
    ElseIf productCompareFile.Sheets(1).Cells(2, 4) Like "*2015*" Then
        kmColumn = 7 'Produkt mit Version 2015
    ElseIf productCompareFile.Sheets(1).Cells(2, 4) Like "*2018*" Then
        kmColumn = 13 'Produkt mit Version 2018
    End If
    
    ' Schleife um ge|fffd|nderte Zeilen hinzuzuf|fffd|gen
    i = 8
    rowCounter = 0
    Do While IsEmpty(productCompareFile.Sheets(1).Cells(i, 1)) = False
        j = 2
        rowCounter = rowCounter + 1
        Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(j, 5)) = False
            If productCompareFile.Sheets(1).Cells(i, 1) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn) Then
                If kmColumn = 5 And productCompareFile.Sheets(1).Cells(i, 9) = "" Then
                    productCompareFile.Sheets(1).Cells(i, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 3)
                    productCompareFile.Sheets(1).Cells(i, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 4)
                    productCompareFile.Sheets(1).Cells(i, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 5)
                    productCompareFile.Sheets(1).Cells(i, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 9)
                    productCompareFile.Sheets(1).Cells(i, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 10)
                    productCompareFile.Sheets(1).Cells(i, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 11)
                ElseIf kmColumn = 7 And productCompareFile.Sheets(1).Cells(i, 9) = "" Then
                    productCompareFile.Sheets(1).Cells(i, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn - 1)
                    productCompareFile.Sheets(1).Cells(i, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 2)
                    productCompareFile.Sheets(1).Cells(i, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 3)
                    productCompareFile.Sheets(1).Cells(i, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 7)
                    productCompareFile.Sheets(1).Cells(i, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 8)
                    productCompareFile.Sheets(1).Cells(i, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 9)
                ElseIf kmColumn = 13 And productCompareFile.Sheets(1).Cells(i, 9) = "" Then
                    productCompareFile.Sheets(1).Cells(i, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn - 7)
                    productCompareFile.Sheets(1).Cells(i, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn - 4)
                    productCompareFile.Sheets(1).Cells(i, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn - 3)
                    productCompareFile.Sheets(1).Cells(i, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 1)
                    productCompareFile.Sheets(1).Cells(i, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 2)
                    productCompareFile.Sheets(1).Cells(i, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(j, kmColumn + 3)
                End If
            End If
            j = j + 1
        Loop
        i = i + 1
    Loop
    
    currentRow = rowCounter
    'MsgBox (rowCounter) 'Ausgabe f|fffd|r Debugging
    
    'Schleife um gesplittete Zeilen hinzuzuf|fffd|gen
    m = 2
    Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn)) = False
        n = 8
        Do While IsEmpty(productCompareFile.Sheets(1).Cells(n, 1)) = False
            If kmColumn = 5 Then
                If productCompareFile.Sheets(1).Cells(n, 1) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn) And _
                (productCompareFile.Sheets(1).Cells(n, 10) <> thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 4) Or _
                productCompareFile.Sheets(1).Cells(n, 11) <> thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 5) Or _
                productCompareFile.Sheets(1).Cells(n, 13) <> thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 10) Or _
                productCompareFile.Sheets(1).Cells(n, 14) <> thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 11)) Then
                    productCompareFile.Sheets(1).Cells(currentRow + 8, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 3)
                    productCompareFile.Sheets(1).Cells(currentRow + 8, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 4)
                    productCompareFile.Sheets(1).Cells(currentRow + 8, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 5)
                    productCompareFile.Sheets(1).Cells(currentRow + 8, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 9)
                    productCompareFile.Sheets(1).Cells(currentRow + 8, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 10)
                    productCompareFile.Sheets(1).Cells(currentRow + 8, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 11)
                    currentRow = currentRow + 1
                End If
            ElseIf kmColumn = 7 Then
                'Code f|fffd|r V15
            ElseIf kmColumn = 13 Then
                'Code f|fffd|r V18
            End If
            n = n + 1
        Loop
        m = m + 1
    Loop
    
    'Schleife um neue/entfernte Zeilen hinzuzuf|fffd|gen
    m = 2
    Do While IsEmpty(thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn)) = False
        If kmColumn = 5 Then
            If thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn) = 0 Then
                productCompareFile.Sheets(1).Cells(currentRow + 8, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 3)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 4)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 5)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 9)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 10)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 11)
                currentRow = currentRow + 1
            End If
            m = m + 1
        ElseIf kmColumn = 7 Then
            If thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn) = 0 Then
                productCompareFile.Sheets(1).Cells(currentRow + 8, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn - 2)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 2)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 3)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 7)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 8)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 9)
                currentRow = currentRow + 1
            End If
            m = m + 1
        ElseIf kmColumn = 13 Then
            If thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn) = 0 Then
                productCompareFile.Sheets(1).Cells(currentRow + 8, 9) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn - 7)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 10) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn - 4)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 11) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn - 3)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 12) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn - 5)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 13) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 2)
                productCompareFile.Sheets(1).Cells(currentRow + 8, 14) = thisWorkbook.Sheets("ChangeLog_de").Cells(m, kmColumn + 3)
                currentRow = currentRow + 1
            End If
            m = m + 1
        End If
    Loop
    
    'Formatierung Start
    productCompareFile.Sheets(1).Cells(7, 9).ColumnWidth = 10
    productCompareFile.Sheets(1).Cells(7, 9).Interior.Color = RGB(117, 119, 192)
    productCompareFile.Sheets(1).Cells(7, 9).Font.Color = RGB(255, 255, 255)
    productCompareFile.Sheets(1).Cells(7, 9).Font.Bold = True
    productCompareFile.Sheets(1).Cells(7, 9).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    productCompareFile.Sheets(1).Cells(7, 10).ColumnWidth = 40
    productCompareFile.Sheets(1).Cells(7, 10).Interior.Color = RGB(117, 119, 192)
    productCompareFile.Sheets(1).Cells(7, 10).Font.Color = RGB(255, 255, 255)
    productCompareFile.Sheets(1).Cells(7, 10).Font.Bold = True
    productCompareFile.Sheets(1).Cells(7, 10).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    productCompareFile.Sheets(1).Cells(7, 11).ColumnWidth = 40
    productCompareFile.Sheets(1).Cells(7, 11).Interior.Color = RGB(117, 119, 192)
    productCompareFile.Sheets(1).Cells(7, 11).Font.Color = RGB(255, 255, 255)
    productCompareFile.Sheets(1).Cells(7, 11).Font.Bold = True
    productCompareFile.Sheets(1).Cells(7, 11).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    productCompareFile.Sheets(1).Cells(7, 12).ColumnWidth = 10
    productCompareFile.Sheets(1).Cells(7, 12).Interior.Color = RGB(0, 172, 233)
    productCompareFile.Sheets(1).Cells(7, 12).Font.Color = RGB(255, 255, 255)
    productCompareFile.Sheets(1).Cells(7, 12).Font.Bold = True
    productCompareFile.Sheets(1).Cells(7, 12).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    productCompareFile.Sheets(1).Cells(7, 13).ColumnWidth = 40
    productCompareFile.Sheets(1).Cells(7, 13).Interior.Color = RGB(0, 172, 233)
    productCompareFile.Sheets(1).Cells(7, 13).Font.Color = RGB(255, 255, 255)
    productCompareFile.Sheets(1).Cells(7, 13).Font.Bold = True
    productCompareFile.Sheets(1).Cells(7, 13).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    productCompareFile.Sheets(1).Cells(7, 14).ColumnWidth = 40
    productCompareFile.Sheets(1).Cells(7, 14).Interior.Color = RGB(0, 172, 233)
    productCompareFile.Sheets(1).Cells(7, 14).Font.Color = RGB(255, 255, 255)
    productCompareFile.Sheets(1).Cells(7, 14).Font.Bold = True
    productCompareFile.Sheets(1).Cells(7, 14).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
    
    If kmColumn = 5 Then
        productCompareFile.Sheets(1).Cells(7, 9) = "Zeile 2015"
        productCompareFile.Sheets(1).Cells(7, 10) = "|fffd|nderung 2012 zu 2015"
        productCompareFile.Sheets(1).Cells(7, 11) = "Anmerkung 2012 zu 2015"
        productCompareFile.Sheets(1).Cells(7, 12) = "Zeile 2018"
        productCompareFile.Sheets(1).Cells(7, 13) = "|fffd|nderung 2015 zu 2018"
        productCompareFile.Sheets(1).Cells(7, 14) = "Anmerkung 2015 zu 2018"
    ElseIf kmColumn = 7 Then
        productCompareFile.Sheets(1).Cells(7, 9) = "Zeile 2012"
        productCompareFile.Sheets(1).Cells(7, 10) = "|fffd|nderung 2012 zu 2015"
        productCompareFile.Sheets(1).Cells(7, 11) = "Anmerkung 2012 zu 2015"
        productCompareFile.Sheets(1).Cells(7, 12) = "Zeile 2018"
        productCompareFile.Sheets(1).Cells(7, 13) = "|fffd|nderung 2015 zu 2018"
        productCompareFile.Sheets(1).Cells(7, 14) = "Anmerkung 2015 zu 2018"
    ElseIf kmColumn = 13 Then
        productCompareFile.Sheets(1).Cells(7, 9) = "Zeile 2012"
        productCompareFile.Sheets(1).Cells(7, 10) = "|fffd|nderung 2012 zu 2015"
        productCompareFile.Sheets(1).Cells(7, 11) = "Anmerkung 2012 zu 2015"
        productCompareFile.Sheets(1).Cells(7, 12) = "Zeile 2015"
        productCompareFile.Sheets(1).Cells(7, 13) = "|fffd|nderung 2015 zu 2018"
        productCompareFile.Sheets(1).Cells(7, 14) = "Anmerkung 2015 zu 2018"
    End If
    
    n = 8
    Do While IsEmpty(productCompareFile.Sheets(1).Cells(n, 9)) = False
        'Rahmenlinien
        productCompareFile.Sheets(1).Cells(n, 2).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 3).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 4).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 5).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 6).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 7).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 8).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 9).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 10).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 11).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 12).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 13).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        productCompareFile.Sheets(1).Cells(n, 14).BorderAround Weight:=xlThin, LineStyle:=xlContinuous
        'Zeilenumbruch & Ausrichtung
        productCompareFile.Sheets(1).Cells(n, 2).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 3).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 4).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 5).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 6).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 7).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 8).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 9).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 9).HorizontalAlignment = xlRight
        productCompareFile.Sheets(1).Cells(n, 10).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 11).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 12).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 12).HorizontalAlignment = xlRight
        productCompareFile.Sheets(1).Cells(n, 13).WrapText = True
        productCompareFile.Sheets(1).Cells(n, 14).WrapText = True
        'Farben
        If n Mod 2 = 1 Then
            productCompareFile.Sheets(1).Cells(n, 2).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 2).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 3).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 3).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 4).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 4).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 5).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 5).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 6).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 6).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 7).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 7).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 8).Interior.Color = RGB(77, 170, 80)
            productCompareFile.Sheets(1).Cells(n, 8).Font.Color = RGB(255, 255, 255)
            productCompareFile.Sheets(1).Cells(n, 9).Interior.Color = RGB(186, 187, 223)
            productCompareFile.Sheets(1).Cells(n, 9).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 10).Interior.Color = RGB(186, 187, 223)
            productCompareFile.Sheets(1).Cells(n, 10).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 11).Interior.Color = RGB(186, 187, 223)
            productCompareFile.Sheets(1).Cells(n, 11).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 12).Interior.Color = RGB(128, 214, 244)
            productCompareFile.Sheets(1).Cells(n, 12).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 13).Interior.Color = RGB(128, 214, 244)
            productCompareFile.Sheets(1).Cells(n, 13).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 14).Interior.Color = RGB(128, 214, 244)
            productCompareFile.Sheets(1).Cells(n, 14).Font.Color = RGB(60, 73, 129)
        Else
            productCompareFile.Sheets(1).Cells(n, 2).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 2).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 3).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 3).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 4).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 4).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 5).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 5).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 6).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 6).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 7).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 7).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 8).Interior.Color = RGB(165, 216, 103)
            productCompareFile.Sheets(1).Cells(n, 8).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 9).Interior.Color = RGB(210, 210, 210)
            productCompareFile.Sheets(1).Cells(n, 9).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 10).Interior.Color = RGB(210, 210, 210)
            productCompareFile.Sheets(1).Cells(n, 10).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 11).Interior.Color = RGB(210, 210, 210)
            productCompareFile.Sheets(1).Cells(n, 11).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 12).Interior.Color = RGB(212, 225, 239)
            productCompareFile.Sheets(1).Cells(n, 12).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 13).Interior.Color = RGB(212, 225, 239)
            productCompareFile.Sheets(1).Cells(n, 13).Font.Color = RGB(60, 73, 129)
            productCompareFile.Sheets(1).Cells(n, 14).Interior.Color = RGB(212, 225, 239)
            productCompareFile.Sheets(1).Cells(n, 14).Font.Color = RGB(60, 73, 129)
        End If
        n = n + 1
    Loop
    'Formatierung Ende
    
    'Ausgabedatei sperren
    o = 8
    Do While IsEmpty(productCompareFile.Sheets(1).Cells(o, 9)) = False
        If IsEmpty(productCompareFile.Sheets(1).Cells(o, 9)) = False And IsEmpty(productCompareFile.Sheets(1).Cells(o, 2)) = False Then
            productCompareFile.Sheets(1).Cells(o, 5).locked = False
        ElseIf IsEmpty(productCompareFile.Sheets(1).Cells(o, 9)) = False And IsEmpty(productCompareFile.Sheets(1).Cells(o, 2)) = True Then
            productCompareFile.Sheets(1).Cells(o, 2).locked = False
            productCompareFile.Sheets(1).Cells(o, 3).locked = False
            productCompareFile.Sheets(1).Cells(o, 4).locked = False
            productCompareFile.Sheets(1).Cells(o, 5).locked = False
            productCompareFile.Sheets(1).Cells(o, 6).locked = False
            productCompareFile.Sheets(1).Cells(o, 7).locked = False
            productCompareFile.Sheets(1).Cells(o, 8).locked = False
        End If
        o = o + 1
    Loop
    productCompareFile.Sheets(1).Protect Password:="EiesSiJ2018!"
    'Ausgabedatei sperren ENDE
    
    'productFile.Close savechanges:=False
    
    Application.DisplayAlerts = False
    productCompareFile.Application.Dialogs(xlDialogSaveAs).Show (productCompareFile.Sheets(1).Cells(3, 4) & "_" & productCompareFile.Sheets(1).Cells(4, 4) & "_KMvgl"), 51
    'productCompareFile.Close
    Application.DisplayAlerts = True
    
    Exit Sub
    
CompareProductKMError:
    MsgBox ("Es ist ein Fehler beim Vergleich eines bewerteten Produkt mit anderen Kriterienmatrixversionen aufgetreten!")
    Exit Sub
    
NoFileError:
    MsgBox ("Es wurde keine Datei ausgew|fffd|hlt!")
End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public Sub Workbook_Open()
    On Error GoTo WorkbookOpenError
    Dim getDomain As String
    Dim i As Integer
    Dim userFound As Boolean
    
    Set thisWorkbook = ActiveWorkbook
    languageGUI = "de"
    Set relevantRows = New Collection
    
    loadedFile = False
    loadedFile2 = False
    
    getDomain = CStr(Environ("userdomain"))
    
    If getDomain Like "*DGNB*" Then
        MsgBox (getDomain & "-Dom|fffd|ne erkannt! Bearbeitung aktiviert!")
        lockedSheets = False
    Else
        'MsgBox ("Dateiinhalte zur Bearbeitung gesperrt!")
        lockedSheets = True
    End If
    
    If lockedSheets = False Then
        thisWorkbook.Sheets("Tool").Visible = True
        thisWorkbook.Sheets("KM2012_de").Visible = True
        thisWorkbook.Sheets("KM2015_de").Visible = True
        thisWorkbook.Sheets("KM2018_de").Visible = True
        thisWorkbook.Sheets("ChangeLog_de").Visible = True
        thisWorkbook.Sheets("Debugging").Visible = True
        thisWorkbook.Sheets("Tool").Unprotect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("KM2012_de").Unprotect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("KM2015_de").Unprotect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("KM2018_de").Unprotect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("ChangeLog_de").Unprotect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("Debugging").Unprotect Password:="EiesSiJ2018!"
    Else
        thisWorkbook.Sheets("Tool").Visible = True
        thisWorkbook.Sheets("KM2012_de").Visible = True
        thisWorkbook.Sheets("KM2015_de").Visible = True
        thisWorkbook.Sheets("KM2018_de").Visible = True
        thisWorkbook.Sheets("ChangeLog_de").Visible = xlVeryHidden
        thisWorkbook.Sheets("Debugging").Visible = xlVeryHidden
        thisWorkbook.Sheets("Tool").Protect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("KM2012_de").Protect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("KM2015_de").Protect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("KM2018_de").Protect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("ChangeLog_de").Protect Password:="EiesSiJ2018!"
        thisWorkbook.Sheets("Debugging").Protect Password:="EiesSiJ2018!"
    End If
    
    thisWorkbook.Sheets(1).Activate
    
    Exit Sub
    
WorkbookOpenError:
    MsgBox ("Es ist ein Fehler beim |fffd|ffnen der Datei aufgetreten!")
End Sub

Public Sub Workbook_BeforeClose(Cancel As Boolean)
    On Error GoTo WorkbookCloseError
    'MsgBox ("Die Excel-Datei wird geschlossen")

    Cancel = False
    
    Exit Sub
    
WorkbookCloseError:
    MsgBox ("Es ist ein Fehler beim Schlie|fffd|en der Datei aufgetreten!")
End Sub
Attribute VB_Name = "DynamicButtons"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Klasse zur autom. Erzeugung der QS-Buttons je KM-Zeile
Option Explicit
    Public WithEvents qsCmdButton As MSForms.CommandButton
Attribute qsCmdButton.VB_VarHelpID = -1
    
Private Sub qsCmdButton_Click()
    On Error GoTo DynamicButtonError
    Dim i As Integer
    
    i = 3
    
    Unload QSUserForm
    
    Do While IsEmpty(thisWorkbook.Sheets(kmSheet).Cells(i, 2)) = False
        If CInt(Mid(qsCmdButton.Name, 9, 5)) = CInt(thisWorkbook.Sheets(kmSheet).Cells(i, 1)) Then
            qs1 = thisWorkbook.Sheets(kmSheet).Cells(i, 8)
            qs2 = thisWorkbook.Sheets(kmSheet).Cells(i, 9)
            qs3 = thisWorkbook.Sheets(kmSheet).Cells(i, 10)
            qs4 = thisWorkbook.Sheets(kmSheet).Cells(i, 11)
            Load QSUserForm
            QSUserForm.Show (VBA.FormShowConstants.vbModeless)
        End If
        i = i + 1
    Loop
    
    Exit Sub
    
DynamicButtonError:
    MsgBox ("Es ist ein Fehler bei der Erzeugung der dynamischen Buttons aufgetreten!")
End Sub
Attribute VB_Name = "DynamicCheckBoxes"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Klasse zur autom. Erzeugung der Checkboxen pro KM-Zeile
Option Explicit
    Public WithEvents relCheckBox As MSForms.CheckBox
Attribute relCheckBox.VB_VarHelpID = -1

Private Sub relCheckBox_Click()
    'On Error GoTo DynamicCheckBoxError
    On Error Resume Next
    If relCheckBox.Value = True Then
        If loadedFile = False Then
        'If loadedFile = False And loadedFile2 = False Then
            relevantRows.Add Mid(relCheckBox.Name, 12, 5), CStr(relCheckBox.Name)
            'DEBUGGING-----------------
            'MsgBox (Mid(relCheckBox.Name, 12, 5) & " + " & relCheckBox.Name)
            'MsgBox (relevantRows.Item(relevantRows.Count))
            'DEBUGGING-----------------
        End If
        If loadedFile = True And loadedFile2 = True Then
            relevantRows.Add Mid(relCheckBox.Name, 12, 5), CStr(relCheckBox.Name)
        End If
    Else
        relevantRows.Remove CStr(relCheckBox.Name)
    End If
    
    Exit Sub
    
DynamicCheckBoxError:
    MsgBox ("Es ist ein Fehler bei der Erzeugung der dynamischen CheckBoxen aufgetreten!")
End Sub
Attribute VB_Name = "KMRowUserForm"
Attribute VB_Base = "0{5F8B8651-19C5-8346-B4DA-CD2D155C4827}{8E767D22-FB12-614B-9B95-DB3D9C3AC602}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private buttonCollection As New Collection 'Buttons f|fffd|r die Anforderungen der Qualit|fffd|tsstufen
'Public checkBoxCollection As New Collection 'CheckBoxen f|fffd|r relevante KM-Zeilen

'Initialisieren der UserForm
Private Sub UserForm_Initialize()
    Dim i As Integer

    On Error GoTo KMRowFormInitializeError
    Width = 800
    Height = 450
    KMRowMultiPage.Width = 788
    KMRowMultiPage.Height = 378
    KMRowMultiPage.Left = 6
    KMRowMultiPage.Top = 6
    KMRowMultiPage.MultiRow = True
    
    If languageGUI = "de" Then
        Caption = "Produktbewertung"
        CancelButton.Caption = "Abbrechen"
        BackButton.Caption = "Zur|fffd|ck"
        NextButton.Caption = "Weiter"
        Call ReadKM
        Call KMRowFrame
    ElseIf languageGUI = "eng" Then
        Caption = "Product Assessment"
        CancelButton.Caption = "Cancel"
        BackButton.Caption = "Back"
        NextButton.Caption = "Next"
    End If
    
    If loadedFile = True Then
        For i = 1 To relevantRows.Count
            KMRowUserForm.Controls("RowCheckBox" & relevantRows(i)).Value = True
        Next
    End If
    
    Exit Sub
    
KMRowFormInitializeError:
    MsgBox ("Es ist ein Fehler beim Initialisieren der Eingabemaske f|fffd|r die Auswahl der Zeilen einer Kriterienmatrix aufgetreten!")
End Sub

'Deaktiviert das "X" rechts oben zum Schlie|fffd|en des Fensters
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    On Error GoTo DeactivateKMRowXError
    If CloseMode = 0 Then
        Cancel = True
    End If
    
    Exit Sub
    
DeactivateKMRowXError:
    MsgBox ("Es ist ein Fehler beim Deaktivieren des X-Buttons aufgetreten!")
End Sub

'Abbrechen-Button
Private Sub CancelButton_Click()
    On Error GoTo KMRowCancelButtonError
    If loadedFile = False Then
        Unload KMRowUserForm
        Unload NPKMUserForm
        Unload UserUserForm
        If backAndSave = True Then
            Unload AssessUserForm
        End If
    Else
        Unload KMRowUserForm
        Unload AssessUserForm
    End If
    
    Exit Sub
    
KMRowCancelButtonError:
    MsgBox ("Es ist ein Fehler beim Abbrechen der Aktion aufgetreten!")
End Sub

'Weiter-Button
Private Sub NextButton_Click()
    On Error GoTo KMRowNextButtonError
    If relevantRows.Count = 0 Then
        If languageGUI = "de" Then
            MsgBox ("Bitte w|fffd|hlen Sie mindestens eine Zeile aus!")
        Else
            MsgBox ("Please select one row at least!")
        End If
        Exit Sub
    End If
    
    'DEBUGGING----------------------
    'MsgBox (relevantRows.Count)
    'DEBUGGING----------------------
    
    KMRowUserForm.Hide
    AssessUserForm.Show (VBA.FormShowConstants.vbModeless)
    
    Exit Sub
    
KMRowNextButtonError:
    MsgBox ("Es ist ein Fehler beim Wechsel auf die folgende Eingabemaske aufgetreten!")
End Sub

'Zur|fffd|ck-Button
Private Sub BackButton_Click()
    On Error GoTo KMRowBackButtonError
    If loadedFile = False Then
        Unload KMRowUserForm
        NPKMUserForm.Show
    Else
        Do While relevantRows.Count > 0
            relevantRows.Remove 1
        Loop
        Unload KMRowUserForm
        Unload AssessUserForm
    End If
    
    Exit Sub
    
KMRowBackButtonError:
    MsgBox ("Es ist ein Fehler beim Wechsel auf die vorhergehende Eingabemaske aufgetreten!")
End Sub

'Liest alle Kategorien einer KM aus und speichert sie in einem Array
Private Sub ReadKM()
    On Error GoTo ReadKMError
    Dim i As Integer
    Dim j As Integer
    Dim catFound As Boolean
    
    i = 3
    
    Set categories = New Collection 'Alle Kategorien einer Kriterienmatrix
    catFound = False
    
    Do While IsEmpty(thisWorkbook.Sheets(kmSheet).Cells(i, 3)) = False
        For j = 1 To categories.Count
            If categories(j) = thisWorkbook.Sheets(kmSheet).Cells(i, 3) Then
                catFound = True
            End If
        Next
        If catFound = False Then
            categories.Add thisWorkbook.Sheets(kmSheet).Cells(i, 3)
        End If
        catFound = False
        i = i + 1
    Loop
    
    Exit Sub
    
ReadKMError:
    MsgBox ("Es ist ein Fehler beim Auslesen der Kategorien in der Kriterienmatrix aufgetreten!")
End Sub

'F|fffd|gt eine Zeile aus der KM in die UserForm ein
Private Sub KMRowFrame()
    On Error GoTo KMRowFrameError
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim topRange As Integer 'Pixel bis zur n|fffd|chsten Zeile
    Dim componentHeight As Integer
    Dim scopeHeight As Integer
    Dim compoundHeight As Integer
    Dim tempRange As Integer
    Dim firstRow As Boolean

    Dim buttonClass As DynamicButtons 'BUTTONS
    Dim checkBoxClass As DynamicCheckBoxes 'CHECK-BOX

    j = 3

    'Erstellt die Tabs und den Inhalt auf einer MultiPage f|fffd|r alle KM-Zeilen
    For i = 1 To categories.Count
        topRange = 0
        firstRow = True
        KMRowMultiPage.Pages.Add categories(i), categories(i), i - 1
        KMRowMultiPage.Pages(i - 1).ScrollBars = fmScrollBarsVertical
        j = 3
        Do While IsEmpty(thisWorkbook.Sheets(kmSheet).Cells(j, 1)) = False
            If categories(i) = thisWorkbook.Sheets(kmSheet).Cells(j, 3) Then
                If firstRow = False Then
                    Set SeparateLineLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "SeparateLineLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                    With SeparateLineLabel
                        .Caption = "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                        .Font.Name = "Arial"
                        .Font.Size = 8
                        .Font.Bold = False
                        .Width = 750
                        .Height = 12
                        .Left = 6
                        .Top = 6 + topRange
                    End With
                End If

                Set KMLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "KMLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With KMLabel
                    If languageGUI = "de" Then
                        .Caption = "KM-Zeile"
                    Else
                        .Caption = "KM-Row"
                    End If
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = True
                    .Width = 48
                    .Height = 12
                    .Left = 6
                    .Top = 24 + topRange
                End With
                
                Set KMNoLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "KMNoLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With KMNoLabel
                    .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 2)
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = False
                    .Width = 48
                    .Height = 12
                    .Left = 6
                    .Top = 36 + topRange
                End With
                
                Set RelLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "RelevanceLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With RelLabel
                    .Caption = "Relevant?"
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = True
                    .Width = 48
                    .Height = 12
                    .Left = 6
                    .Top = 54 + topRange
                End With

                'CHECK-BOX
                Set checkBoxClass = New DynamicCheckBoxes
                Set checkBoxClass.relCheckBox = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.CheckBox.1", "RowCheckBox" & thisWorkbook.Sheets(kmSheet).Cells(j, 1), True) 'CHECK-BOX
                With checkBoxClass.relCheckBox
                    .Width = 48
                    .Height = 12
                    .Left = 6
                    .Top = 66 + topRange
                End With
                checkBoxCollection.Add checkBoxClass

                Set ComponentLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ComponentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With ComponentLabel
                    If languageGUI = "de" Then
                        .Caption = "Relevante Bauteile / Baumaterialien / Fl|fffd|chen"
                    Else
                        .Caption = "Relevant Component / Materials / Areas"
                    End If
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = True
                    .Width = 222
                    .Height = 12
                    .Left = 72
                    .Top = 24 + topRange
                End With
                
                Set ComponentContentLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ComponentContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With ComponentContentLabel
                    .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 4)
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = False
                    .Width = 222
                    .AutoSize = True
                    .Left = 72
                    .Top = 36 + topRange
                End With
                
                Set ScopeLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1")
                With ScopeLabel
                    .Name = "ScopeLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)
                    If languageGUI = "de" Then
                        .Caption = "Bereich"
                    Else
                        .Caption = "Scope"
                    End If
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = True
                    .Width = 222
                    .Height = 12
                    .Left = 306
                    .Top = 24 + topRange
                End With
                
                Set ScopeContentLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "ScopeContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With ScopeContentLabel
                    .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 5)
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = False
                    .Width = 222
                    .AutoSize = True
                    .Left = 306
                    .Top = 36 + topRange
                End With
                
                Set CompoundLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "CompoundLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With CompoundLabel
                    If languageGUI = "de" Then
                        .Caption = "Betrachteter Stoff"
                    Else
                        .Caption = "Substances"
                    End If
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = True
                    .Width = 126
                    .Height = 12
                    .Left = 540
                    .Top = 24 + topRange
                End With
                
                Set CompoundContentLabel = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.Label.1", "CompoundContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1))
                With CompoundContentLabel
                    .Caption = thisWorkbook.Sheets(kmSheet).Cells(j, 6)
                    .Font.Name = "Arial"
                    .Font.Size = 8
                    .Font.Bold = False
                    .Width = 126
                    .AutoSize = True
                    .Left = 540
                    .Top = 36 + topRange
                End With

                Set buttonClass = New DynamicButtons
                Set buttonClass.qsCmdButton = KMRowMultiPage.Pages(i - 1).Controls.Add("Forms.CommandButton.1", "QSButton" & thisWorkbook.Sheets(kmSheet).Cells(j, 1), True) 'BUTTONS
                With buttonClass.qsCmdButton
                    If languageGUI = "de" Then
                        .Caption = "Qualit|fffd|tsstufen"
                    Else
                        .Caption = "Quality Levels"
                    End If
                    .Font.Name = Arial
                    .Font.Size = 8
                    .Font.Bold = True
                    .Width = 84
                    .Height = 24
                    .Left = 678
                    .Top = 24 + topRange
                End With
                buttonCollection.Add buttonClass

                If KMRowMultiPage.Pages(i - 1).Controls("ComponentContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height <= 42 And KMRowMultiPage.Pages(i - 1).Controls("ScopeContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height <= 42 And KMRowMultiPage.Pages(i - 1).Controls("CompoundContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height <= 42 Then
                    topRange = topRange + 78
                Else
                    componentHeight = KMRowMultiPage.Pages(i - 1).Controls("ComponentContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height
                    scopeHeight = KMRowMultiPage.Pages(i - 1).Controls("ScopeContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height
                    compoundHeight = KMRowMultiPage.Pages(i - 1).Controls("CompoundContentLabel" & thisWorkbook.Sheets(kmSheet).Cells(j, 1)).Height
                    tempRange = componentHeight
                    If tempRange <= scopeHeight Then
                        tempRange = scopeHeight
                    End If
                    If tempRange <= compoundHeight Then
                        tempRange = compoundHeight
                    End If
                    topRange = topRange + tempRange + 36
                End If
                firstRow = False
            End If
            j = j + 1
        Loop
        KMRowMultiPage.Pages(i - 1).ScrollHeight = topRange + 6
    Next
    
    Exit Sub
    
KMRowFrameError:
    MsgBox ("Es ist ein Fehler beim Aufbau der Kriterienmatrix in der Eingabemaske aufgetreten!")
End Sub


Attribute VB_Name = "LanguageModul"
'Schaltet die Sprache
'Beinhaltet die Globalen Variablen
Global thisWorkbook As Workbook 'Diese Excel-Datei
Global editWorkbook As Workbook 'Eine bestehende Excel-Datei, zur Nachbearbeitung bereits bewerteter Produkte
Global languageGUI As String 'Sprache der Benutzeroberfl|fffd|che (de, eng)
Global userType As String 'Auditor oder Hersteller (a, h)
Global npkm As String 'Speichert den Namen der ausgew|fffd|hlten Kriterienmatrix bzw. das Nutzungsprofil
Global categories As New Collection 'Speichert alle Hauptkategorien einer Kriterienmatrix
Global qs1 As String 'Speichert den Text der Qualit|fffd|tsstufe 1
Global qs2 As String 'Speichert den Text der Qualit|fffd|tsstufe 2
Global qs3 As String 'Speichert den Text der Qualit|fffd|tsstufe 3
Global qs4 As String 'Speichert den Text der Qualit|fffd|tsstufe 4
Global relevantRows As New Collection 'Speichert die vom Auditor ausgew|fffd|hlten Zeilen
Global explanationContent As New Collection 'Speichert die im Erl|fffd|uterungstextfeld eigetragenen Inhalte, wenn der Zur|fffd|ck-Button gedr|fffd|ckt wird
Global qualityContent As New Collection 'Speichert die ausgew|fffd|hlte Qualit|fffd|tsstufe, wenn der Zur|fffd|ck-Button gedr|fffd|ckt wird
Global checkBoxCollection As New Collection 'CheckBoxen f|fffd|r relevante KM-Zeilen
Global manufacturerName As String
Global productName As String
Global creatorName As String
Global creationDate As String
Global kmSheet As String
Global user As String
Global lockedSheets As Boolean
Global backAndSave As Boolean
Global loadedFile As Boolean
Global loadedFile2 As Boolean

Sub language()
    On Error GoTo LanguageFormError
    LanguageUserForm.Show
    
    Exit Sub
    
LanguageFormError:
    MsgBox ("Es ist ein Fehler beim |fffd|ffnen der Sprachauswahl aufgetreten!")
End Sub


Attribute VB_Name = "LanguageUserForm"
Attribute VB_Base = "0{72210EA4-C7D5-B94F-A851-CFA5C9C9EE73}{4AD05A14-30F0-AE47-B104-712570F1F380}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Initialisierung der UserForm "Sprachwahl"
Private Sub UserForm_Initialize()
    On Error GoTo LanguageFormInitializeError
    Caption = "Sprache / Language"
    Width = 168
    Height = 185
    LanguageText.Caption = "Bitte w|fffd|hlen Sie die gew|fffd|nschte Sprache!" & vbCrLf & vbCrLf & "Please choose your preferred language!"
    LanguageText.Width = 150
    LanguageText.Height = 60
    LanguageText.Left = 6
    LanguageText.Top = 6
    LanguageText.Font.Name = "Arial"
    LanguageText.Font.Size = 8
    GermanButton.Caption = "Deutsch / German"
    GermanButton.Width = 126
    GermanButton.Height = 24
    GermanButton.Left = 18
    GermanButton.Top = 72
    GermanButton.Enabled = True
    GermanButton.Font.Name = "Arial"
    GermanButton.Font.Size = 8
    EnglishButton.Caption = "Englisch / English"
    EnglishButton.Width = 126
    EnglishButton.Height = 24
    EnglishButton.Left = 18
    EnglishButton.Top = 102
    EnglishButton.Enabled = False
    EnglishButton.Font.Name = "Arial"
    EnglishButton.Font.Size = 8
    CancelButton.Caption = "Abbrechen / Cancel"
    CancelButton.Width = 126
    CancelButton.Height = 24
    CancelButton.Left = 18
    CancelButton.Top = 132
    CancelButton.Enabled = True
    CancelButton.Font.Name = "Arial"
    CancelButton.Font.Size = 8
    
    Exit Sub
    
LanguageFormInitializeError:
    MsgBox ("Es ist ein Fehler beim Initialisieren des Sprachformulars aufgetreten!")
End Sub

'Button f|fffd|r deutsch
Private Sub GermanButton_Click()
    On Error GoTo GermanButtonError
    languageGUI = "de"
    thisWorkbook.Sheets("Tool").Cells(2, 3) = "ENV1.2" & vbCrLf & "Produktbewertungstool"
    thisWorkbook.Sheets("Tool").Shapes.Range(Array("Button 2")).Select
    Selection.Characters.Text = "Produkt bewerten"
    thisWorkbook.Sheets("Tool").Cells(5, 1).Select
    Unload Me
    
    Exit Sub
    
GermanButtonError:
    MsgBox ("Es ist ein Fehler mit dem Button f|fffd|r die deutsche Sprache aufgetreten!")
End Sub

'Button f|fffd|r englisch
Private Sub EnglishButton_Click()
    On Error GoTo EnglishButtonError
    languageGUI = "eng"
    thisWorkbook.Sheets("Tool").Cells(2, 3) = "ENV1.2" & vbCrLf & "Product Assessment Tool"
    thisWorkbook.Sheets("Tool").Shapes.Range(Array("Button 2")).Select
    Selection.Characters.Text = "Assess Product"
    thisWorkbook.Sheets("Tool").Cells(5, 1).Select
    Unload Me
    
    Exit Sub
    
EnglishButtonError:
    MsgBox ("Es ist ein Fehler mit dem Button f|fffd|r die englische Sprache aufgetreten!")
End Sub

'Abbrechen Button
Private Sub CancelButton_Click()
    On Error GoTo CancelButtonError
    Unload LanguageUserForm
    
    Exit Sub
    
CancelButtonError:
    MsgBox ("Es ist ein Fehler beim Abbrechen der Aktion aufgetreten!")
End Sub

'Deaktiviert das "X" rechts oben zum Schlie|fffd|en des Fensters
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    On Error GoTo DeactivateLanguageXError
    If CloseMode = 0 Then
        Cancel = True
    End If
    
    Exit Sub
    
DeactivateLanguageXError:
    MsgBox ("Es ist ein Fehler beim Deaktivieren des X-Buttons aufgetreten!")
End Sub
Attribute VB_Name = "LoadFileModul"
Sub LoadFile()
    Dim loadedFilePath As String
    Dim i As Integer
    
    Application.ScreenUpdating = False
    
    'DEBUGGING---------------------------------
'    MsgBox ("StartSub - explanationContent: " & explanationContent.Count & vbCrLf & _
'            "StartSub - qualityContent: " & qualityContent.Count & vbCrLf & _
'            "StartSub - relevantRows: " & relevantRows.Count & vbCrLf & _
'            "StartSub - checkBoxCollection: " & checkBoxCollection.Count)
    'DEBUGGING---------------------------------
    
    Call ResetData
    
    'DEBUGGING---------------------------------
'    MsgBox ("MidSub - explanationContent: " & explanationContent.Count & vbCrLf & _
'            "MidSub - qualityContent: " & qualityContent.Count & vbCrLf & _
'            "MidSub - relevantRows: " & relevantRows.Count & vbCrLf & _
'            "MidSub - checkBoxCollection: " & checkBoxCollection.Count)
    'DEBUGGING---------------------------------
    
    loadedFile = True
    
    loadedFilePath = Application.GetOpenFilename("Microsoft Excel Dateien (*.xlsx), *xlsx")
    If loadedFilePath = "Falsch" Or loadedFilePath = "False" Then
        GoTo NoFileError
    End If
    Set editWorkbook = Workbooks.Open(loadedFilePath)
    editWorkbook.Sheets(1).Unprotect Password:="EiesSiJ2018!"
    
    manufacturerName = CStr(editWorkbook.Sheets(1).Cells(3, 4))
    'DEBUGGING-------------------------------
    'MsgBox ("Hersteller: " & manufacturerName)
    'DEBUGGING-------------------------------
    productName = CStr(editWorkbook.Sheets(1).Cells(4, 4))
    'DEBUGGING-------------------------------
    'MsgBox ("Produkt: " & productName)
    'DEBUGGING-------------------------------
    npkm = CStr(editWorkbook.Sheets(1).Cells(2, 4))
    'DEBUGGING-------------------------------
    'MsgBox ("KM: " & npkm)
    'DEBUGGING-------------------------------
    userType = "auditor"
    'DEBUGGING-------------------------------
    'MsgBox ("User: " & userType)
    'DEBUGGING-------------------------------
    creatorName = CStr(editWorkbook.Sheets(1).Cells(3, 7))
    creationDate = CStr(editWorkbook.Sheets(1).Cells(5, 7))
    
    i = 8
    
    Do While IsEmpty(editWorkbook.Sheets(1).Cells(i, 1)) = False
        explanationContent.Add CStr(editWorkbook.Sheets(1).Cells(i, 5)), CStr(editWorkbook.Sheets(1).Cells(i, 1))
        qualityContent.Add CStr(editWorkbook.Sheets(1).Cells(i, 3)), CStr(editWorkbook.Sheets(1).Cells(i, 1))
        relevantRows.Add CInt(editWorkbook.Sheets(1).Cells(i, 1)), "RowCheckBox" & CStr(editWorkbook.Sheets(1).Cells(i, 1))
        'KMRowUserForm.Controls("RowCheckBox" & CStr(editWorkbook.Sheets(1).Cells(i, 1))).Value = True
        i = i + 1
    Loop
    
    editWorkbook.Close savechanges:=False
    
    'DEBUGGING-------------------------------
'    For i = 1 To explanationContent.Count
'        MsgBox (explanationContent(i) & vbCrLf & qualityContent(i) & vbCrLf & relevantRows(i))
'    Next
    'DEBUGGING-------------------------------
    
    Call NPKMUserForm.DefineKMSheet
    
    KMRowUserForm.Show (VBA.FormShowConstants.vbModeless)
    KMRowUserForm.Hide
    AssessUserForm.Show (VBA.FormShowConstants.vbModeless)
    loadedFile2 = True
    Call AssessUserForm.RefillLoadedContent
    
    'DEBUGGING---------------------------------
'    MsgBox ("EndSub - explanationContent: " & explanationContent.Count & vbCrLf & _
'            "EndSub - qualityContent: " & qualityContent.Count & vbCrLf & _
'            "EndSub - relevantRows: " & relevantRows.Count & vbCrLf & _
'            "EndSub - checkBoxCollection: " & checkBoxCollection.Count)
    'DEBUGGING---------------------------------
    
    'Call AssessUserForm.RunRefillContent
    
    'Call AssessProduct
    
    'Call UserUserForm.AuditorButton_Click
    'UserUserForm.AuditorButton = True
    
    Application.ScreenUpdating = True
    
    Exit Sub
    
NoFileError:
    MsgBox ("Es wurde keine Datei ausgew|fffd|hlt!")
End Sub
Attribute VB_Name = "LockingModul"
Sub Locking()
    On Error GoTo LockingError
    Dim pw As String
    
    If lockedSheets = True Then
        pw = InputBox("Bitte geben Sie das Passwort zum entsperren ein!")
        If pw = "EiesSiJ2018!" Then
            thisWorkbook.Sheets("Tool").Visible = True
            thisWorkbook.Sheets("KM2012_de").Visible = True
            thisWorkbook.Sheets("KM2015_de").Visible = True
            thisWorkbook.Sheets("KM2018_de").Visible = True
            thisWorkbook.Sheets("ChangeLog_de").Visible = True
            thisWorkbook.Sheets("Debugging").Visible = True
            thisWorkbook.Sheets("Tool").Unprotect Password:=pw
            thisWorkbook.Sheets("KM2012_de").Unprotect Password:=pw
            thisWorkbook.Sheets("KM2015_de").Unprotect Password:=pw
            thisWorkbook.Sheets("KM2018_de").Unprotect Password:=pw
            thisWorkbook.Sheets("ChangeLog_de").Unprotect Password:=pw
            thisWorkbook.Sheets("Debugging").Unprotect Password:=pw
            MsgBox ("Die Datei wurde entsperrt!")
        Else
            MsgBox ("Das eingegebene Passwort ist nicht korrekt!")
        End If
    Else
        MsgBox ("Die Datei ist bereits entsperrt")
    End If
    
    Exit Sub
    
LockingError:
    MsgBox ("Es ist ein Fehler beim Entsperren der Datei aufgetreten!")
End Sub
Attribute VB_Name = "NPKMUserForm"
Attribute VB_Base = "0{452D22AA-2AF2-A94B-B5E4-E19B4105C5B8}{8A5645EF-7E1E-8B48-8515-85FB22E54615}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Initialisieren der UserForm
Private Sub UserForm_Initialize()
    Dim i As Integer
    
    On Error GoTo KMFormError
    'Allgemeine Initialisierungen
    Width = 306
    Height = 113
    NPKMLabel.Width = 288
    NPKMLabel.Height = 18
    NPKMLabel.Left = 6
    NPKMLabel.Top = 6
    NPKMLabel.Font.Name = "Arial"
    NPKMLabel.Font.Size = 8
    NPKMDropDown.Width = 288
    NPKMDropDown.Height = 18
    NPKMDropDown.Left = 6
    NPKMDropDown.Top = 24
    NPKMDropDown.Font.Name = "Arial"
    NPKMDropDown.Font.Size = 8
    CancelButton.Width = 72
    CancelButton.Height = 24
    CancelButton.Left = 6
    CancelButton.Top = 60
    CancelButton.Font.Name = "Arial"
    CancelButton.Font.Size = 8
    BackButton.Width = 72
    BackButton.Height = 24
    BackButton.Left = 144
    BackButton.Top = 60
    BackButton.Font.Name = "Arial"
    BackButton.Font.Size = 8
    NextButton.Width = 72
    NextButton.Height = 24
    NextButton.Left = 222
    NextButton.Top = 60
    NextButton.Font.Name = "Arial"
    NextButton.Font.Size = 8
    
    'Nutzungsprofil Drop-Down-Liste deutsch/englisch f|fffd|r Auditor und Hersteller
    If languageGUI = "de" Then
        If userType = "auditor" Then
            Caption = "Auswahl Nutzungsprofil"
            NPKMLabel.Caption = "Bitte w|fffd|hlen Sie das Nutzungsprofil / die Kriterienmatrix-Version aus!"
            CancelButton.Caption = "Abbrechen"
            NextButton.Caption = "Weiter"
            BackButton.Caption = "Zur|fffd|ck"
            NPKMDropDown.AddItem "Kriterienmatrix-Version 2012, 2012(Upgrade), 2013"
            NPKMDropDown.AddItem "Kriterienmatrix-Version 2015"
            NPKMDropDown.AddItem "Kriterienmatrix-Version 2018"
            NPKMDropDown.AddItem "Neubau Bildungsbauten, 2012"
            NPKMDropDown.AddItem "Neubau Bildungsbauten, 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau Bildungsbauten, 2015"
            NPKMDropDown.AddItem "Neubau Bildungsbauten, 2018"
            NPKMDropDown.AddItem "Neubau B|fffd|ro-/Verwaltungsgeb|fffd|ude, 2012"
            NPKMDropDown.AddItem "Neubau B|fffd|ro-/Verwaltungsgeb|fffd|ude, 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau B|fffd|ro-/Verwaltungsgeb|fffd|ude, 2015"
            NPKMDropDown.AddItem "Neubau B|fffd|ro-/Verwaltungsgeb|fffd|ude, 2018"
            NPKMDropDown.AddItem "Neubau Gesch|fffd|ftsh|fffd|user, 2015"
            NPKMDropDown.AddItem "Neubau Gesch|fffd|ftsh|fffd|user, 2018"
            NPKMDropDown.AddItem "Neubau Handelsbauten (Typ 1 - Verbraucherm|fffd|rkte), 2012"
            NPKMDropDown.AddItem "Neubau Handelsbauten (Typ 1 - Verbraucherm|fffd|rkte), 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau Handelsbauten (Typ 2 - Shoppingcenter), 2012"
            NPKMDropDown.AddItem "Neubau Handelsbauten (Typ 2 - Shoppingcenter), 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau Handelsbauten (Typ 4 - Gesch|fffd|ftsh|fffd|user), 2013"
            NPKMDropDown.AddItem "Neubau Hotelgeb|fffd|ude, 2012"
            NPKMDropDown.AddItem "Neubau Hotelgeb|fffd|ude, 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau Hotelgeb|fffd|ude, 2015"
            NPKMDropDown.AddItem "Neubau Hotelgeb|fffd|ude, 2018"
            NPKMDropDown.AddItem "Neubau Industriebauten (Typ 1 - Logistikgeb|fffd|ude), 2012"
            NPKMDropDown.AddItem "Neubau Industriebauten (Typ 1 - Logistikgeb|fffd|ude), 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau Industriebauten (Typ 2 - Produktionsst|fffd|tten), 2012"
            NPKMDropDown.AddItem "Neubau Industriebauten (Typ 2 - Produktionsst|fffd|tten), 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau kleine Wohngeb|fffd|ude, 2013.2"
            NPKMDropDown.AddItem "Neubau Logistikgeb|fffd|ude, 2015"
            NPKMDropDown.AddItem "Neubau Logistikgeb|fffd|ude, 2018"
            NPKMDropDown.AddItem "Neubau Produktionsst|fffd|tten, 2015"
            NPKMDropDown.AddItem "Neubau Produktionsst|fffd|tten, 2018"
            NPKMDropDown.AddItem "Neubau Shoppingcenter, 2015"
            NPKMDropDown.AddItem "Neubau Shoppingcenter, 2018"
            NPKMDropDown.AddItem "Neubau Verbraucherm|fffd|rkte, 2015"
            NPKMDropDown.AddItem "Neubau Verbraucherm|fffd|rkte, 2018"
            NPKMDropDown.AddItem "Neubau Wohngeb|fffd|ude, 2012"
            NPKMDropDown.AddItem "Neubau Wohngeb|fffd|ude, 2012 (Upgrade)"
            NPKMDropDown.AddItem "Neubau Wohngeb|fffd|ude, 2015"
            NPKMDropDown.AddItem "Neubau Wohngeb|fffd|ude, 2018"
        ElseIf userType = "manufacturer" Then
            Caption = "Auswahl Kriterienmatrix"
            NPKMLabel.Caption = "Bitte w|fffd|hlen Sie die Kriterienmatrix-Version mit der das Produkt bewertet wird!"
            CancelButton.Caption = "Abbrechen"
            NextButton.Caption = "Weiter"
            BackButton.Caption = "Zur|fffd|ck"
            NPKMDropDown.AddItem "Kriterienmatrix-Version 2012, 2012(Upgrade), 2013"
            NPKMDropDown.AddItem "Kriterienmatrix-Version 2015"
            NPKMDropDown.AddItem "Kriterienmatrix-Version 2018"
            'NPKMDropDown.Text = NPKMDropDown.List(1)
        End If
    ElseIf languageGUI = "eng" Then
        If userType = "auditor" Then
            Caption = "Auswahl Kriterienmatrix"
            NPKMLabel.Caption = "Please select the utilization profile / the criteria matrix version"
            CancelButton.Caption = "Cancel"
            NextButton.Caption = "Next"
            BackButton.Caption = "Back"
            NPKMDropDown.AddItem "Criteria matrix version 2012, 2012(Upgrade), 2013"
            NPKMDropDown.AddItem "Criteria matrix version 2015"
            NPKMDropDown.AddItem "New Construction Appartment Buildings, 2012"
            NPKMDropDown.AddItem "New Construction Appartment Buildings, 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Appartment Buildings, 2015"
            NPKMDropDown.AddItem "New Construction Appartment Buildings, 2018"
            NPKMDropDown.AddItem "New Construction Business Premises, 2015"
            NPKMDropDown.AddItem "New Construction Business Premises, 2018"
            NPKMDropDown.AddItem "New Construction Consumer Markets, 2015"
            NPKMDropDown.AddItem "New Construction Consumer Markets, 2018"
            NPKMDropDown.AddItem "New Construction Educational Buildings, 2012"
            NPKMDropDown.AddItem "New Construction Educational Buildings, 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Educational Buildings, 2015"
            NPKMDropDown.AddItem "New Construction Educational Buildings, 2018"
            NPKMDropDown.AddItem "New Construction Hotels, 2012"
            NPKMDropDown.AddItem "New Construction Hotels, 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Hotels, 2015"
            NPKMDropDown.AddItem "New Construction Hotels, 2018"
            NPKMDropDown.AddItem "New Construction Industrial Buildings (Typ 1 - Logistics), 2012"
            NPKMDropDown.AddItem "New Construction Industrial Buildings (Typ 1 - Logistics), 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Industrial Buildings (Typ 2 - Production), 2012"
            NPKMDropDown.AddItem "New Construction Industrial Buildings (Typ 2 - Production), 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Logistics Buildings, 2015"
            NPKMDropDown.AddItem "New Construction Logistics Buildings, 2018"
            NPKMDropDown.AddItem "New Construction Offices, 2012"
            NPKMDropDown.AddItem "New Construction Offices, 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Offices, 2015"
            NPKMDropDown.AddItem "New Construction Offices, 2015"
            NPKMDropDown.AddItem "New Construction Production Buildings, 2015"
            NPKMDropDown.AddItem "New Construction Production Buildings, 2015"
            NPKMDropDown.AddItem "New Construction Retail Buildings (Type 1 - Consumer Market), 2012"
            NPKMDropDown.AddItem "New Construction Retail Buildings (Type 1 - Consumer Market), 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Retail Buildings (Type 2 - Shoppingcenter), 2012"
            NPKMDropDown.AddItem "New Construction Retail Buildings (Type 2 - Shoppingcenter), 2012 (Upgrade)"
            NPKMDropDown.AddItem "New Construction Retail Buildings (Type 4 - Business Premises), 2013"
            NPKMDropDown.AddItem "New Construction Shoppingcenter, 2015"
            NPKMDropDown.AddItem "New Construction Shoppingcenter, 2018"
            NPKMDropDown.AddItem "New Construction Small Appartment Buildings, 2013.2"
        ElseIf userType = "manufacturer" Then
            Caption = "Choose criteria matrix"
            NPKMLabel.Caption = "Please select the criteria matrix version which is used to assess the product!"
            CancelButton.Caption = "Cancel"
            NextButton.Caption = "Next"
            BackButton.Caption = "Back"
            NPKMDropDown.AddItem "Criteria matrix version 2012, 2012(Upgrade), 2013"
            NPKMDropDown.AddItem "Criteria matrix version 2015"
            NPKMDropDown.AddItem "Criteria matrix version 2018"
            'NPKMDropDown.Text = NPKMDropDown.List(1)
        End If
    End If
    
'    If loadedFile = True Then
'        If npkm Like "*2012*" Or npkm Like "*2013*" Then
'            i = 0
'        ElseIf npkm Like "*2015*" Then
'            i = 1
'        ElseIf npkm Like "*2018*" Then
'            i = 2
'        End If
'        NPKMUserForm.NPKMDropDown.ListIndex = i
'        NextButton_Click
'    End If
    
    Exit Sub
    
KMFormError:
    MsgBox ("Es ist ein Fehler beim Initalisieren der Kriterienmatrixauswahl aufgetreten!")
End Sub

'Abbrechen-Button
Private Sub CancelButton_Click()
    On Error GoTo KMCancelButtonError
    Unload UserUserForm
    Unload NPKMUserForm
    
    Exit Sub
    
KMCancelButtonError:
    MsgBox ("Es ist ein Fehler beim Abbrechen der Aktion aufgetreten!")
End Sub

'Zur|fffd|ck-Button
Private Sub BackButton_Click()
    On Error GoTo KMBackButtonError
    Unload NPKMUserForm
    UserUserForm.Show
    
    Exit Sub
    
KMBackButtonError:
    MsgBox ("Es ist ein Fehler beim Wechsel auf die vorhergehende Eingabemaske aufgetreten!")
End Sub

'Weiter-Button
Private Sub NextButton_Click()
    On Error GoTo KMNextButtonError
'    If loadedFile = False Then
        If NPKMDropDown.ListIndex < 0 Then
            If languageGUI = "de" Then
                MsgBox ("Bitte w|fffd|hlen Sie einen Eintrag aus der Liste!")
            ElseIf languageGUI = "eng" Then
                MsgBox ("Please select a item from the list!")
            End If
        Else
            Do While relevantRows.Count > 0
                relevantRows.Remove 1
            Loop
            npkm = NPKMDropDown.Value
            Call DefineKMSheet
            NPKMUserForm.Hide
            KMRowUserForm.Show (VBA.FormShowConstants.vbModeless)
        End If
'    Else
'        MsgBox (npkm)
'        Call DefineKMSheet
'        MsgBox (kmSheet)
'        NPKMUserForm.Hide
'        KMRowUserForm.Show (VBA.FormShowConstants.vbModeless)
'    End If
    
    Exit Sub
    
KMNextButtonError:
    MsgBox ("Es ist ein Fehler beim Wechsel auf die folgende Eingabemaske aufgetreten!")
End Sub

'Deaktiviert das "X" rechts oben zum Schlie|fffd|en des Fensters
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    On Error GoTo DeactivateKMXError
    If CloseMode = 0 Then
        Cancel = True
    End If
    
    Exit Sub
    
DeactivateKMXError:
    MsgBox ("Es ist ein Fehler beim Deaktivieren des X-Buttons aufgetreten!")
End Sub

Public Sub DefineKMSheet()
    On Error GoTo DefineKMSheetError
    If languageGUI = "de" And (npkm Like "*2012*" Or npkm Like "*2013*") Then
        kmSheet = "KM2012_de"
    ElseIf languageGUI = "de" And npkm Like "*2015*" Then
        kmSheet = "KM2015_de"
    ElseIf languageGUI = "de" And npkm Like "*2018*" Then
        kmSheet = "KM2018_de"
    ElseIf languageGUI = "eng" And (npkm Like "*2012*" Or npkm Like "*2013*") Then
        'Code f|fffd|r englisches GUI
    ElseIf languageGUI = "eng" And npkm Like "*2015*" Then
        'Code f|fffd|r englisches GUI
    End If
    
    Exit Sub
    
DefineKMSheetError:
    MsgBox ("Es ist ein Fehler bei der Speicherung der ausgew|fffd|hlten Kriterienmatrix aufgetreten!")
End Sub
Attribute VB_Name = "QSUserForm"
Attribute VB_Base = "0{91253D69-932D-2744-90B1-A11F4D7843DA}{1EA7AC13-16E2-1948-A5E9-FD12E0077B91}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Initialisierung der UserForm
Private Sub UserForm_Initialize()
    On Error GoTo QSFormError
    Width = 543
    Height = 200
    QS1Label.Font.Name = "Arial"
    QS1Label.Font.Size = 8
    QS1Label.Font.Bold = True
    QS1Label.Top = 6
    QS1Label.Left = 6
    QS1Label.Width = 114
    QS1Label.Height = 12
    QS2Label.Font.Name = "Arial"
    QS2Label.Font.Size = 8
    QS2Label.Font.Bold = True
    QS2Label.Top = 6
    QS2Label.Left = 144
    QS2Label.Width = 114
    QS2Label.Height = 12
    QS3Label.Font.Name = "Arial"
    QS3Label.Font.Size = 8
    QS3Label.Font.Bold = True
    QS3Label.Top = 6
    QS3Label.Left = 282
    QS3Label.Width = 114
    QS3Label.Height = 12
    QS4Label.Font.Name = "Arial"
    QS4Label.Font.Size = 8
    QS4Label.Font.Bold = True
    QS4Label.Top = 6
    QS4Label.Left = 420
    QS4Label.Width = 114
    QS4Label.Height = 12
    QS1ContentLabel.Caption = qs1
    QS1ContentLabel.Font.Name = "Arial"
    QS1ContentLabel.Font.Size = 8
    QS1ContentLabel.Font.Bold = False
    QS1ContentLabel.Top = 18
    QS1ContentLabel.Left = 6
    QS1ContentLabel.Width = 114
    QS1ContentLabel.AutoSize = True
    QS2ContentLabel.Caption = qs2
    QS2ContentLabel.Font.Name = "Arial"
    QS2ContentLabel.Font.Size = 8
    QS2ContentLabel.Font.Bold = False
    QS2ContentLabel.Top = 18
    QS2ContentLabel.Left = 144
    QS2ContentLabel.Width = 114
    QS2ContentLabel.AutoSize = True
    QS3ContentLabel.Caption = qs3
    QS3ContentLabel.Font.Name = "Arial"
    QS3ContentLabel.Font.Size = 8
    QS3ContentLabel.Font.Bold = False
    QS3ContentLabel.Top = 18
    QS3ContentLabel.Left = 282
    QS3ContentLabel.Width = 114
    QS3ContentLabel.AutoSize = True
    QS4ContentLabel.Caption = qs4
    QS4ContentLabel.Font.Name = "Arial"
    QS4ContentLabel.Font.Size = 8
    QS4ContentLabel.Font.Bold = False
    QS4ContentLabel.Top = 18
    QS4ContentLabel.Left = 420
    QS4ContentLabel.Width = 114
    QS4ContentLabel.AutoSize = True
    CloseButton.Font.Name = "Arial"
    CloseButton.Font.Size = 8
    CloseButton.Font.Bold = False
    CloseButton.Width = 72
    CloseButton.Height = 24
    CloseButton.Left = 234
    CloseButton.Top = 146
    
    If languageGUI = "de" Then
        Caption = "Qualit|fffd|tsstufen"
        QS1Label.Caption = "Qualit|fffd|tsstufe 1"
        QS2Label.Caption = "Qualit|fffd|tsstufe 2"
        QS3Label.Caption = "Qualit|fffd|tsstufe 3"
        QS4Label.Caption = "Qualit|fffd|tsstufe 4"
        CloseButton.Caption = "Schlie|fffd|en"
    ElseIf languageGUI = "eng" Then
        Caption = "Quality Levels"
        QS1Label.Caption = "Quality Level 1"
        QS2Label.Caption = "Quality Level 2"
        QS3Label.Caption = "Quality Level 3"
        QS4Label.Caption = "Quality Level 4"
        CloseButton.Caption = "Close"
    End If
    
    Exit Sub
    
QSFormError:
    MsgBox ("Es ist ein Fehler beim Initalisieren der Informationsmaske zu den Qualit|fffd|tsstufen aufgetreten!")
End Sub

'Schlie|fffd|en Button
Private Sub CloseButton_Click()
    On Error GoTo QSCloseButtonError
    Unload QSUserForm
    
    Exit Sub
    
QSCloseButtonError:
    MsgBox ("Es ist ein Fehler beim Schlie|fffd|en der Informationsmaske zu den Qualit|fffd|tsstufen aufgetreten!")
End Sub

'Deaktiviert das "X" rechts oben zum Schlie|fffd|en des Fensters
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    On Error GoTo DeactivateQSXError
    If CloseMode = 0 Then
        Cancel = True
    End If
    
    Exit Sub
    
DeactivateQSXError:
    MsgBox ("Es ist ein Fehler beim Deaktivieren des X-Buttons aufgetreten!")
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserUserForm"
Attribute VB_Base = "0{00759E0D-7CDA-E244-8122-1CD105D775BA}{26D67D9C-58C8-9E48-9DB0-A8E7606F5200}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Initialisierung der UserForm
Private Sub UserForm_Initialize()
    On Error GoTo UserFormInitializeError
    Width = 168
    Height = 155
    AuditorButton.Width = 126
    AuditorButton.Height = 24
    AuditorButton.Left = 18
    AuditorButton.Top = 42
    AuditorButton.Font.Name = "Arial"
    AuditorButton.Font.Size = 8
    ManufacturerButton.Width = 126
    ManufacturerButton.Height = 24
    ManufacturerButton.Left = 18
    ManufacturerButton.Top = 72
    ManufacturerButton.Font.Name = "Arial"
    ManufacturerButton.Font.Size = 8
    CancelButton.Width = 126
    CancelButton.Height = 24
    CancelButton.Left = 18
    CancelButton.Top = 102
    CancelButton.Font.Name = "Arial"
    CancelButton.Font.Size = 8
    UserLabel.Width = 150
    UserLabel.Height = 30
    UserLabel.Font.Name = "Arial"
    UserLabel.Font.Size = 8
    
    If languageGUI = "de" Then
        Caption = "Benutzer"
        AuditorButton.Caption = "Auditor"
        ManufacturerButton.Caption = "Hersteller"
        CancelButton.Caption = "Abbrechen"
        UserLabel.Caption = "Sind Sie ein Auditor oder ein Hersteller?"
    ElseIf languageGUI = "eng" Then
        Caption = "User"
        AuditorButton.Caption = "Auditor"
        ManufacturerButton.Caption = "Manufacturer"
        CancelButton.Caption = "Cancel"
        UserLabel.Caption = "Are you an auditor or a manufacturer?"
    End If
    
'    If loadedFile = True Then
'        AuditorButton_Click
'    End If
    
    Exit Sub
    
UserFormInitializeError:
    MsgBox ("Es ist ein Fehler beim Initialisieren der Benutzerauswahl aufgetreten!")
End Sub

'Abbrechen-Button
Private Sub CancelButton_Click()
    On Error GoTo UserCancelButtonError
    Unload UserUserForm
    
    Exit Sub
    
UserCancelButtonError:
    MsgBox ("Es ist ein Fehler beim Abbrechen der Aktion aufgetreten!")
End Sub

'Auditor-Button
Public Sub AuditorButton_Click()
    On Error GoTo AuditorButtonError
'    If loadedFile = False Then
        userType = "auditor"
'    End If
    UserUserForm.Hide
    NPKMUserForm.Show
    
    Exit Sub
    
AuditorButtonError:
    MsgBox ("Es ist ein Fehler bei der Benutzerauswahl <Auditor> aufgetreten!")
End Sub

'Hersteller-Button
Private Sub ManufacturerButton_Click()
    On Error GoTo ManufacturerButtonError
    userType = "manufacturer"
    UserUserForm.Hide
    NPKMUserForm.Show
    
    Exit Sub
    
ManufacturerButtonError:
    MsgBox ("Es ist ein Fehler bei der Benutzerauswahl <Hersteller> aufgetreten!")
End Sub

'Deaktiviert das "X" rechts oben zum Schlie|fffd|en des Fensters
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    On Error GoTo DeactivateUserXError
    If CloseMode = 0 Then
        Cancel = True
    End If
    
    Exit Sub
    
DeactivateUserXError:
    MsgBox ("Es ist ein Fehler beim Deaktivieren des X-Buttons aufgetreten!")
End Sub




' InQuest injected base64 decoded content
' ezxb

INQUEST-PP=macro
