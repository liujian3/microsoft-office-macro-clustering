Attribute VB_Name = "NewMacros"
Public mask_directory
Public working_storage_directory
Public documents_to_expand_directory
Public documents_for_UFM_directory
Public documents_to_send_directory
Public user_file_directory
Public value_files_directory
Public standard_letters_directory
Public log_files_directory
Public backup_directory
Public legal_directory
Public zetafax_directory
Public confirmation_forms_directory
Public e_mail_form_directory
Public send_details_directory
Public ltr_mask
Public fxr_mask
Public fmr_mask
Public emr_mask
Public call_key_auto_open
Public call_key_auto_close
Public context_is_set
Public root_directory
Public printer_for_R_documents
Public printer_for_A_documents
Public local_printer
Public originator_e_mail_address
Public DRIVEC
'* MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory
Public standard_attachements_directory
'* END MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory
Public ICS_password
Public user_file
Public user_path
Public search_string
Public file_to_generate
Public file_selected
Public return_key
Public Active_Printer
Public v_doc_type
Public v_doc_side
Public v_mask_type
Public v_mask_date
Public v_mask_extension
Public v_user_nr
Public v_annex_list
Public v_reset_address
Public v_cofunc
Public v_coname
Public v_cofaxn
Public v_adresse1
Public v_adresse2
Public v_adresse3
Public v_adresse4
Public v_adresse5
Public v_adresse6
Public v_adresse7
Public v_e_mail_perso
Public v_e_mail_generique
Public z_ltr_full_name
Public z_ltr_format
Public z_ltr_adrs
Public z_ltr_name
Public z_ltr_user_label
Public z_ltr_std
Public z_ltr_file
Public z_ltr_ext
Public z_ltr_reply
Public z_doc_name
Public n_items

Public strLogFil
Public strSendLogFil
Public strGenerateLogFil
Public strExpandLogFil

Sub AssignStandardAttachementsPath()
'* MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory
'
    Selection.EndKey Unit:=wdStory
    Selection.GoTo what:=wdGoToField, Which:=wdGoToPrevious, Count:=1, Name:= _
        "HYPERLINK"
    
    Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    If Selection.Fields.Count > 0 Then
        Selection.Font.Name = "Arial"
        Selection.Fields.ToggleShowCodes
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
            .Text = "standard_attachements"
            .Replacement.Text = standard_attachements_directory
            .Forward = True
            .Wrap = wdFindStop
            .Format = False
            .MatchCase = False
            .MatchWholeWord = False
            .MatchWildcards = False
            .MatchSoundsLike = False
            .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Selection.Fields.ToggleShowCodes
        Selection.Fields.Update
        Selection.Font.Name = "Wingdings"
    End If

'* END MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory

End Sub

Sub AutoExec()

 '* find root directory *
GoTo NoAutoExec


  find_root_directory
  
  On Error Resume Next

  If (root_directory <> "") Then
  
     '* check existence of auto macros in Normal.dot
   
      call_key_auto_open = "check"
      'Application.Run "Normal.NewMacros.AutoOpen"
      Application.Run "AutoOpen"
      call_key_auto_close = "check"
      'Application.Run "Normal.NewMacros.AutoClose"
      Application.Run "AutoClose"
     
      If (call_key_auto_open <> "OK") Or (call_key_auto_close <> "OK") Then

        '* auto_open and/or auto_close do not exist - request for install *

         ActiveDocument.Background.Fill.ForeColor.RGB = RGB(150, 150, 150)
         ActiveDocument.Background.Fill.Visible = msoTrue
         ActiveDocument.Background.Fill.Solid
         ActiveWindow.View.Type = wdWebView

         response = MsgBox(" " + Chr(13) + "The current configuration of Word doesn't allow " _
                                         + "the automatic formatting" _
                               + Chr(13) + "of documents generated by Host Applications. " _
                                         + "Your system must be upgraded." _
                               + Chr(13) + " " _
                               + Chr(13) + "                                    Do you " _
                                         + "want to do this now ?" _
                               + Chr(13) + " " _
                               + Chr(13) + "Caution : - This upgrade will reset all existing" _
                                         + " macros in the Normal template" _
                               + Chr(13) + "                - You will have to restart Word" _
                               + Chr(13) + " ", _
                                 vbYesNo, "ICS - Configuration Manager", "", 0)

         If (response = vbYes) Then
           
           '* delete macros in Normal.dot *
             
            file_name = root_directory + "\docgen_ref.dot"
              
            Application.OrganizerDelete Source:=NormalTemplate.FullName, _
                                        Name:="NewMacros", _
                                        Object:=wdOrganizerObjectProjectItems
            Err.Clear
              
           '* copy reference auto macros in Normal.dot *
             
            Application.OrganizerCopy Source:=file_name, _
                                      Destination:=NormalTemplate.FullName, _
                                      Name:="NewMacros", _
                                      Object:=wdOrganizerObjectProjectItems
            If (Err.Number = 0) Then
                response = MsgBox("Your system has been successfully upgraded  ", _
                                   vbYes, "ICS - Configuration Manager", "", 0)
            Else
                response = MsgBox("   The upgrade has failed    " + Chr(13) + Chr(13) _
                                + " Contact your administrator  " + Chr(13) + " ", _
                                  vbYes, "ICS - Configuration Manager", "", 0)
            End If
              
            NormalTemplate.Save
            end_of_program
            
         End If
         
         ActiveDocument.Background.Fill.ForeColor.RGB = RGB(255, 255, 255)
         ActiveDocument.Background.Fill.Visible = msoTrue
         ActiveDocument.Background.Fill.Solid
         ActiveWindow.View.Type = wdNormalView
         ActiveDocument.Saved = True
         
      End If
      
  Else
  
     '* bad command *
     
      ActiveDocument.Background.Fill.ForeColor.RGB = RGB(150, 150, 150)
      ActiveDocument.Background.Fill.Visible = msoTrue
      ActiveDocument.Background.Fill.Solid
      ActiveWindow.View.Type = wdWebView
      response = MsgBox("  Incorrect Root Path specified for docgen_lib    " _
                      + Chr(13) + Chr(13) _
                      + "            Contact your administrator" + Chr(13) + " ", _
                        vbYes, "ICS - Configuration Manager", "", 0)
      end_of_program
      
  End If
NoAutoExec:
End Sub
Sub startup_open()
    If call_key_auto_open = "check" Then
        call_key_auto_open = "OK"
    Else
        If ActiveWindow.Caption Like "????????20??????SR??????????????????.doc*" Or ActiveWindow.Caption Like "????????20??????SA??????????????????.doc*" Or ActiveWindow.Caption Like "????????20??????SST?????????????????.doc*" _
        Or ActiveWindow.Caption Like "?????20??????SR??????????????????.doc*" Or ActiveWindow.Caption Like "?????20??????SA??????????????????.doc*" Or ActiveWindow.Caption Like "?????20??????SST?????????????????.doc*" Then
           add_mask_for_ics_documents
        Else
            If ActiveWindow.Caption Like "docgen.doc*" Then
                display_main_dialog_box
            Else
                If ActiveWindow.Caption Like "expansion_srv.doc*" Then
                    expansion_service
                End If
            End If
        End If
    End If
End Sub
Sub startup_close()
  If call_key_auto_close = "check" Then
      call_key_auto_close = "OK"
  Else
      reset_configuration
  End If
End Sub
Sub find_root_directory()
    root_directory = ""
    For Each ad In AddIns
        If Left(ad.Name, 11) = "docgen_lib_" Then
            root_directory = Mid(ad.Name, 12)
            root_directory = Mid(root_directory, 1, InStr(ad.Name, ".dot") - 12)
            If Mid(root_directory, 2, 1) = "#" Then
'CPA : REPLACE FIND H: BY \\SCRDNT52\PROGRAMS
'                root_directory = Left(root_directory, 1) + ":\" + Mid(root_directory, 3)
                root_directory = "\\SCRDNT52\PROGRAMS\" + Mid(root_directory, 3)
                While InStr(root_directory, "#") > 0
                    i = InStr(root_directory, "#")
                    root_directory = Left(root_directory, i - 1) + "\" + Mid(root_directory, i + 1)
                Wend
            Else
                root_directory = ""
            End If
        End If
    Next ad

End Sub

Sub reset_configuration()
    Application.ScreenUpdating = True
    On Error Resume Next
    CommandBars("Standard").Enabled = True
    CommandBars("Standard").Visible = True
    CommandBars("Formatting").Enabled = True
    CommandBars("Formatting").Visible = True
    CommandBars("Tables And Borders").Enabled = True
    CommandBars("Tables And Borders").Visible = False
    CommandBars("Database").Enabled = True
    CommandBars("Database").Visible = False
    CommandBars("Drawing").Enabled = True
    CommandBars("Drawing").Visible = False
    CommandBars("Forms").Enabled = True
    CommandBars("Forms").Visible = False
    CommandBars("Visual Basic").Enabled = True
    CommandBars("Visual Basic").Visible = False
    CommandBars("Microsoft").Enabled = True
    CommandBars("Microsoft").Visible = False
    CommandBars("Extended Formatting").Enabled = True
    CommandBars("Extended Formatting").Visible = False
    CommandBars("AutoText").Enabled = True
    CommandBars("AutoText").Visible = False
    CommandBars("Web").Enabled = True
    CommandBars("Web").Visible = False
    CommandBars("WordArt").Enabled = True
    CommandBars("WordArt").Visible = False
    CommandBars("3-D Settings").Enabled = True
    CommandBars("3-D Settings").Visible = False
    CommandBars("Shadow Settings").Enabled = True
    CommandBars("Shadow Settings").Visible = False
    CommandBars("Picture").Enabled = True
    CommandBars("Picture").Visible = False
    CommandBars("Reviewing").Enabled = True
    CommandBars("Reviewing").Visible = False
    CommandBars("Control Toolbox").Enabled = True
    CommandBars("Control Toolbox").Visible = False
    CommandBars("Function Key Display").Enabled = True
    CommandBars("Function Key Display").Visible = False
    CommandBars("Web Tools").Enabled = True
    CommandBars("Web Tools").Visible = False
    CommandBars("Frames").Enabled = True
    CommandBars("Frames").Visible = False
    CommandBars("Drop Caps").Enabled = True
    CommandBars("Endnotes").Enabled = True
    CommandBars("Fields").Enabled = True
    CommandBars("Display Fields").Enabled = True
    CommandBars("Field Display List Numbers").Enabled = True
    CommandBars("Form Fields").Enabled = True
    CommandBars("Footnotes").Enabled = True
    CommandBars("Frames").Enabled = True
    CommandBars("Frames").Visible = False
    CommandBars("Headings").Enabled = True
    CommandBars("Linked Headings").Enabled = True
    CommandBars("Script Anchor Popup").Enabled = True
    CommandBars("Lists").Enabled = True
    CommandBars("Inline Picture").Enabled = True
    CommandBars("Horizontal Line Popup").Enabled = True
    CommandBars("Tables").Enabled = True
    CommandBars("Table Cells").Enabled = True
    CommandBars("Table Headings").Enabled = True
    CommandBars("Table Lists").Enabled = True
    CommandBars("Table Pictures").Enabled = True
    CommandBars("Table Text").Enabled = True
    CommandBars("Whole Table").Enabled = True
    CommandBars("Linked Table").Enabled = True
    CommandBars("Text").Enabled = True
    CommandBars("Linked Text").Enabled = True
    CommandBars("Font Popup").Enabled = True
    CommandBars("Font Paragraph").Enabled = True
    CommandBars("Spelling").Enabled = True
    CommandBars("Grammar").Enabled = True
    CommandBars("Grammar (2)").Enabled = True
    CommandBars("Background Proofing Status Bar").Enabled = True
    CommandBars("Track Changes").Enabled = True
    CommandBars("Frame Properties").Enabled = True
    CommandBars("Hyperlink Context Menu").Enabled = True
    CommandBars("Hyperlink Menu").Enabled = True
    CommandBars("AutoSignature Popup").Enabled = True
    CommandBars("Field AutoText").Enabled = True
    CommandBars("Document Map").Enabled = True
    CommandBars("Shapes").Enabled = True
    CommandBars("Curve").Enabled = True
    CommandBars("Curve Node").Enabled = True
    CommandBars("Curve Segment").Enabled = True
    CommandBars("Floating Picture").Enabled = True
    CommandBars("OLE Object").Enabled = True
    CommandBars("ActiveX Control").Enabled = True
    CommandBars("WordArt Context Menu").Enabled = True
    CommandBars("Rotate Mode").Enabled = True
    CommandBars("Comment").Enabled = True
    CommandBars("Track Changes Indicator").Enabled = True
    CommandBars("Chinese Translation").Enabled = True
    CommandBars("Inline ActiveX Control").Enabled = True
    CommandBars("AutoShapes").Enabled = True
    CommandBars("AutoShapes").Visible = False
    CommandBars("Callouts").Enabled = True
    CommandBars("Callouts").Visible = False
    CommandBars("Flowchart").Enabled = True
    CommandBars("Flowchart").Visible = False
    CommandBars("Block Arrows").Enabled = True
    CommandBars("Block Arrows").Visible = False
    CommandBars("Stars & Banners").Enabled = True
    CommandBars("Stars & Banners").Visible = False
    CommandBars("Lines").Enabled = True
    CommandBars("Lines").Visible = False
    CommandBars("Basic Shapes").Enabled = True
    CommandBars("Basic Shapes").Visible = False
    CommandBars("Fill Color").Enabled = True
    CommandBars("Fill Color").Visible = False
    CommandBars("Line Color").Enabled = True
    CommandBars("Line Color").Visible = False
    CommandBars("Align Or Distribute").Enabled = True
    CommandBars("Align Or Distribute").Visible = False
    CommandBars("Rotate Or Flip").Enabled = True
    CommandBars("Rotate Or Flip").Visible = False
    CommandBars("Order").Enabled = True
    CommandBars("Order").Visible = False
    CommandBars("Nudge").Enabled = True
    CommandBars("Nudge").Visible = False
    CommandBars("Borders").Enabled = True
    CommandBars("Borders").Visible = False
    CommandBars("Font Color").Enabled = True
    CommandBars("Font Color").Visible = False
    CommandBars("Shading Color").Enabled = True
    CommandBars("Shading Color").Visible = False
    CommandBars("Cell Alignment").Enabled = True
    CommandBars("Cell Alignment").Visible = False
    CommandBars("Text Wrapping").Enabled = True
    CommandBars("Text Wrapping").Visible = False
    CommandBars("Clipboard").Enabled = True
    CommandBars("Clipboard").Visible = False
    CommandBars("docgen").Enabled = False
    ActiveWindow.ActivePane.DisplayRulers = False
    ActiveWindow.ActivePane.View.ShowAll = False
    ActiveWindow.View.Type = wdNormalView
    ActivePrinter = local_printer
    On Error GoTo 0
End Sub
Sub add_mask_for_ics_documents()

  '* disable screen updating *
    
   Application.ScreenUpdating = True

  '* set context *
  
   set_application_context
 
  '* suppress remaining bookmarks *
  
   While ActiveDocument.Bookmarks.Count > 0
      bookmark_name = ActiveDocument.Bookmarks(1).Name
      ActiveDocument.Bookmarks(bookmark_name).Delete
   Wend
  
  '* select first line *
  
   Selection.HomeKey Unit:=wdStory
   Selection.MoveRight Unit:=wdCharacter, Count:=26, Extend:=wdExtend
  
   If Selection.Text = "[Type=anx;Side=recto;Mask=" Then
   
    '* document of type "annex" *
    
     ICS_attachement = True
     Selection.HomeKey Unit:=wdStory

    '* define ics-cmd style *
     
     define_ics_cmd_style
    
    '* set the entire document in courier new 10 *
    
     Selection.WholeStory
     Selection.Style = ActiveDocument.Styles("Normal")
     Selection.Font.Name = "Courier New"
     Selection.Font.Size = 10
    
    '* set each command line in ics-cmd style and insert section break *

     Selection.Find.ClearFormatting
     With Selection.Find
        .Text = "[Type=anx;Side="
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
     End With
     Selection.Find.Execute
     While Selection.Find.Found
        Selection.MoveRight Unit:=wdCharacter, Count:=1
        Selection.MoveRight Unit:=wdCharacter, Count:=5, Extend:=wdExtend
        Side = Selection.Text
        Selection.HomeKey Unit:=wdLine
 
        If Side = "recto" Then
           Selection.InsertBreak Type:=wdSectionBreakNextPage
        End If
        Selection.EndKey Unit:=wdLine, Extend:=wdExtend
        Selection.Style = ActiveDocument.Styles("ics-cmd")
        Selection.MoveRight Unit:=wdCharacter, Count:=1
        
       '* specific formatting for annexes *
          
        If (Side = "recto") Then
           Selection.TypeParagraph
           Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
           Selection.Font.Size = 3
           Selection.MoveDown Unit:=wdLine, Count:=1
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
        End If
        Selection.Find.Execute
     Wend
      
    '* delete first section break *
      
     Selection.HomeKey Unit:=wdStory
     Selection.EndKey Unit:=wdLine
     Selection.Delete Unit:=wdCharacter, Count:=1
     
   Else
     ICS_attachement = False
   End If
  
   Selection.HomeKey Unit:=wdStory

  '* set margins *
    
   set_page_set_up 0.75, 0.75, 0.95, 0.7
    
  '* load mask *
      
   v_side = "recto"
   v_reset_address = False
   load_masks_for_entire_document (v_side)
      
  '* configure display *
  
   configure_display

   If (ICS_attachement) Then
    
      '* protect document
      
       CommandBars("docgen").Enabled = False
       ActiveDocument.Protect Password:=ICS_password, NoReset:=False, _
                              Type:=wdAllowOnlyComments

   Else
   
      '* generated letter : allow modifications *
  
       CommandBars("docgen").Enabled = True
       CommandBars("docgen").Visible = True
       
      '* add a section break at the end to expand correctly *
      
       Selection.EndKey Unit:=wdStory
       Selection.TypeParagraph
       Selection.InsertBreak Type:=wdSectionBreakContinuous

   End If

   Selection.HomeKey Unit:=wdStory
   ActiveDocument.Saved = True

  '* delete working files *
  
   delete_file (working_storage_directory + "\*.*")

  '* force reset configuration *
     
   Documents.Add NewTemplate:=False, DocumentType:=0
   call_key_auto_close = "execute"
   ActiveWindow.Close

End Sub
Sub display_main_dialog_box()

'Load UserForm1
 
display_dialog:

 '* enable screen updating *
    
  Application.ScreenUpdating = True
   
 '* set context *
  
  set_application_context
 
 '* close all windows *
 
'  While Windows.Count > 0
'    call_key_auto_close = "check"
'    ActiveWindow.Close
'  Wend
  
 '* configure display *
 
  configure_display

 '* clear working storage directory *
  
  delete_file (working_storage_directory + "\*.*")
    
 '* delete value files generated since more than 7 days *
  
  file_name = "20??-??-??-????-??????XX??." + Application.UserInitials
  n = Len(file_name) + Len(value_files_directory) + 1
  
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    'oRegExp.Pattern = "20??-??-??-????-??????XX??." + Application.UserInitials
    oregexp.Pattern = "20..-..-..-....-......XX..\." + Application.UserInitials
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(value_files_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            file_date = Mid(ofillst, Len(value_files_directory) + 2, 4) + Mid(ofillst, Len(value_files_directory) + 7, 2) + Mid(ofillst, Len(value_files_directory) + 10, 2)
            deadline = Str(DateAdd("d", -7, Date))
            deadline = Mid(deadline, 7, 4) + Mid(deadline, 4, 2) + Mid(deadline, 1, 2)
            If (file_date < deadline) Then
               delete_file (ofillst)
            End If
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
   
  '* create flag file *
  
    Open "C:\Users\Public\irs\prod\~$docgen.tmp" For Output As #1


    Print #1, "This file exists as long as the document generator is running"
    Close #1
 
 '* load dialog box *
 
  Load UserForm2
  UserForm2.Show
  Unload UserForm2
  
  Select Case return_key
    Case "GENERATE"
        If (file_to_generate <> "") Then
           generate_document_requests
           End
        End If
    Case "SEND"
        send_documents
    Case "REFRESH"
    Case "CANCEL"
        end_of_program
    Case "REPORTS"
        store_fax_confirmation_reports
  End Select
  GoTo display_dialog
End Sub
Sub generate_document_requests()
   
    Application.ScreenUpdating = True
  
   '* to increase performances : copy masks locally *
 
    copy_file mask_directory + "\" + ltr_mask, working_storage_directory + "\" + ltr_mask
    copy_file mask_directory + "\" + fxr_mask, working_storage_directory + "\" + fxr_mask
    copy_file mask_directory + "\" + emr_mask, working_storage_directory + "\" + emr_mask
    
   '* rename selected file *
   
    original_file_name = value_files_directory + "\" + file_to_generate + "." + LCase(Application.UserInitials)
    file_name = value_files_directory + "\" + Right(Str(Date), 4) + "-" + Mid(Str(Date), 4, 2) + "-" + Mid(Str(Date), 1, 2) + "-" + Left(Time$, 2) + Mid(Time$, 4, 2) + "-" + file_to_generate + "." + LCase(Application.UserInitials)
    Name original_file_name As file_name
    
   '* copy "value file" renamed to working storage directory *
   
    copy_file file_name, working_storage_directory + "\standard.tmp"
    
   '* copy corresponding "standard letter" to working storage directory *
   
    file_name = standard_letters_directory + "\" + file_to_generate + ".doc"
    copy_file file_name, working_storage_directory + "\standard.doc"
    
   '* copy corresponding "var" file to working storage directory *
   
    file_name = standard_letters_directory + "\" + file_to_generate + ".var"
    copy_file file_name, working_storage_directory + "\standard.var"
    
   '* get the semi_colon_record of "var" file *
   
    file_name = working_storage_directory + "\standard.var"
    Open file_name For Input As #1
    Line Input #1, record
    Line Input #1, semi_column_record
    Close 1
    
   '* avoid prompt in mail-merge : add the semi_colon_record to "val" file *
    
    original_file_name = working_storage_directory + "\standard.tmp"
    file_name = working_storage_directory + "\standard.val"
    
    Open file_name For Output As #2
    Print #2, semi_column_record
    
    Open original_file_name For Input As #1
    While Not EOF(1)
      Line Input #1, line_input
      While Len(line_input) > 0
         i = InStr(1, line_input, Chr(10)) - 1
         If (i = -1) Then
             i = Len(line_input)
         End If
         record = Left(line_input, i)
         Print #2, record
         line_input = Mid(line_input, i + 2)
      Wend
    Wend
    Close #1
    
    Print #2, semi_column_record
    Close #2
    
   '* open standard letter *
   
    ChangeFileOpenDirectory working_storage_directory
    Documents.Open FileName:="standard.doc", _
                   ConfirmConversions:=False, _
                   ReadOnly:=False, _
                   AddToRecentFiles:=False, _
                   PasswordDocument:="", _
                   PasswordTemplate:="", _
                   Revert:=False, _
                   WritePasswordDocument:="", _
                   WritePasswordTemplate:="", _
                   Format:=wdOpenFormatAuto
        
   '* mail-merge *
    
    merge
    
   '* suppress unnecessary paragraphs *
    
    dummy
    
   '* load masks *
    
    v_side = "recto"
    v_reset_address = True
    load_masks_for_entire_document (v_side)
    
    Selection.HomeKey Unit:=wdStory
    Selection.Find.ClearFormatting
    
   '* configure display *
    
    configure_display

   '* allow modifications *
   
    On Error Resume Next
    CommandBars("docgen").Enabled = True
    CommandBars("docgen").Visible = True
    CommandBars("Formatting").Enabled = True
    CommandBars("Formatting").Visible = True
    On Error GoTo 0
   
   '* close standard letter window *
    
    Windows("standard.doc [Compatibility Mode]").Activate
    ActiveDocument.Saved = True
    call_key_auto_close = "execute"
    ActiveWindow.Close
      
   '* clear working storage directory *

      delete_file (working_storage_directory + "\*.*")

'* MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory
    If file_to_generate Like "AP03??????" Then
        AssignStandardAttachementsPath
    End If

'* END MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory
End Sub
Sub send_documents()
    Dim blnFIRST, blnRESULT As Boolean
    blnFIRST = True
    Application.ScreenUpdating = True
    set_application_context
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = Application.UserInitials + "#??#?????20??????S??????XX???????????#*.*"
    oregexp.Pattern = Application.UserInitials + "#..#.....20......S......XX...........#*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(documents_to_send_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
'CPA Write Send log BEG-------------------------------------------------------------------------------------------
            If blnFIRST = True Then
                On Error Resume Next
                Set oFilSys = CreateObject("Scripting.FileSystemObject")
                Set oLOG = oFilSys.OpenTextFile(strSendLogFil, 8, True)
                oLOG.writeLine (Strings.Format(Mid(Str(Date), 7, 4) & "-" + Mid(Str(Date), 4, 2) _
                            & "-" + Mid(Str(Date), 1, 2) & " " & Time$ & " Start of Send Process"))
                oLOG.Close
                Set oLOG = Nothing
                Set oFilSys = Nothing
                clean_up_log_file (strSendLogFil)
                On Error GoTo 0
                blnFIRST = False
            End If
'CPA Write Send log END-------------------------------------------------------------------------------------------
            
            z_ltr_full_name = ofillst
            z_ltr_name = Mid(z_ltr_full_name, Len(documents_to_send_directory) + 2)
            z_ltr_format = Mid(z_ltr_name, 5, 2)
            z_ltr_std = Mid(z_ltr_name, 22, 10)
            n = InStr(42, z_ltr_name, "#")
            z_ltr_user_label = Mid(z_ltr_name, 42, n - 42)
            i = InStr(n + 1, z_ltr_name, "#")
            z_ltr_adrs = Mid(z_ltr_name, n + 1, i - n - 1)
            z_ltr_adrs = Replace(z_ltr_adrs, "=", ".")
            z_ltr_reply = Mid(z_ltr_name, i + 1, InStr(i + 1, z_ltr_name, ".") - i - 1)
            z_ltr_reply = Replace(z_ltr_reply, "=", ".")
            z_ltr_ext = Right(z_ltr_name, 4)
            z_doc_name = Mid(z_ltr_name, 8, 33)
            '* copy letter to working storage directory *
            copy_file z_ltr_full_name, working_storage_directory + "\" + z_doc_name + "0" + z_ltr_ext
            '* send according to format *
            Select Case z_ltr_format
                Case "EM"
                    send_e_mail
                Case "FX"
'CPA - 20190312 - Replaced Zetax by Outlook fax
                    z_ltr_adrs = Replace(z_ltr_adrs, "00", "+", 1, 2) + "@fax.sky"
                    send_e_mail
                    'send_fax
                Case "LT", "FM", "NO"
                    send_letter
            End Select
            '* delete files sent *
            delete_file (z_ltr_full_name)
            delete_file (working_storage_directory + "\*.*")
        End If
        Set omatpat = Nothing
    Next
    If blnFIRST = False Then
'CPA Write Send log BEG-------------------------------------------------------------------------------------------
        On Error Resume Next
        Set oFilSys = CreateObject("Scripting.FileSystemObject")
        Set oLOG = oFilSys.OpenTextFile(strSendLogFil, 8, True)
        oLOG.writeLine (Strings.Format(Mid(Str(Date), 7, 4) & "-" + Mid(Str(Date), 4, 2) _
                    & "-" + Mid(Str(Date), 1, 2) & " " & Time$ & " End of Send Process"))
        oLOG.Close
        Set oLOG = Nothing
        Set oFilSys = Nothing
        blnFIRST = True
    End If
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
'CPA Write Send log END-------------------------------------------------------------------------------------------
End Sub
Sub set_application_context()
 
 If context_is_set <> 1 Then
 
    ICS_password = "pw"
    
    '* find root directory *
    
    find_root_directory
    
    '* read parameter file *
    
    prm_file = root_directory + "\docgen_prm_WINX.txt"
     
     
     Task = "open " + root_directory + "\docgen_prm_WINX.txt"
     'Task = "open " + root_directory + "\docgen_prm_zf11.txt"
     On Error GoTo send_msg
     Open prm_file For Input Access Read As 1
     On Error GoTo 0
     
    '* file location section *
     
     Task = "find [File_location] section in " + prm_file
     Line Input #1, record
     If record <> "[File_location]" Then
        GoTo send_msg
     End If
     Task = "find mask directory in " + prm_file
     Line Input #1, record
     If Left(record, 15) = "mask_directory=" Then
        mask_directory = Mid(record, 16)
     Else
        GoTo send_msg
     End If
     Task = "find documents to expand directory in " + prm_file
     Line Input #1, record
     If Left(record, 30) = "documents_to_expand_directory=" Then
        documents_to_expand_directory = Mid(record, 31)
     Else
        GoTo send_msg
     End If
     Task = "find user file directory in " + prm_file
     Line Input #1, record
     If Left(record, 20) = "user_file_directory=" Then
        user_file_directory = Mid(record, 21)
     Else
        GoTo send_msg
     End If
     Task = "find working storage directory in " + prm_file
     Line Input #1, record
     If Left(record, 26) = "working_storage_directory=" Then
        working_storage_directory = Mid(record, 27)
     Else
        GoTo send_msg
     End If
     Task = "find value files directory in " + prm_file
     Line Input #1, record
     If Left(record, 22) = "value_files_directory=" Then
        value_files_directory = Mid(record, 23)
     Else
        GoTo send_msg
     End If
     Task = "find standard letters directory in " + prm_file
     Line Input #1, record
     If Left(record, 27) = "standard_letters_directory=" Then
        standard_letters_directory = Mid(record, 28)
     Else
        GoTo send_msg
     End If
 
 '* MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory
     
     Task = "find standard attachements directory in " + prm_file
     Line Input #1, record
     If Left(record, 32) = "standard_attachements_directory=" Then
        standard_attachements_directory = Mid(record, 33)
     Else
        GoTo send_msg
     End If

'* END MODIFICATION FROM CPA ON 20100825 : AssignStandardAttachements Directory

Task = "find documents to send directory in " + prm_file
     Line Input #1, record
     If Left(record, 28) = "documents_to_send_directory=" Then
        documents_to_send_directory = Mid(record, 29)
     Else
        GoTo send_msg
     End If
     Task = "find log files directory in " + prm_file
     Line Input #1, record
     If Left(record, 20) = "log_files_directory=" Then
        log_files_directory = Mid(record, 21)
        strLogFil = log_files_directory & "\" & Strings.Format(Now, "yyyyMMddHHmmss") & "-" & "expansion_srv_log.txt" ' [PDE] 23-Avr-2010
        strSendLogFil = log_files_directory & "\" & Strings.Format(Now, "yyyyMMddHHmmss") & "-" & "sent_log.txt"
        strGenerateLogFil = log_files_directory & "\" & Strings.Format(Now, "yyyyMMddHHmmss") & "-" & "generate_log.txt"
        strExpandLogFil = log_files_directory & "\" & Strings.Format(Now, "yyyyMMddHHmmss") & "-" & "expand_log.txt"
     Else
        GoTo send_msg
     End If
     Task = "find backup directory in " + prm_file
     Line Input #1, record
     If Left(record, 17) = "backup_directory=" Then
        backup_directory = Mid(record, 18)
     Else
        GoTo send_msg
     End If
     Task = "find legal cases directory in " + prm_file
     Line Input #1, record
     If Left(record, 16) = "legal_directory=" Then
        legal_directory = Mid(record, 17)
     Else
        GoTo send_msg
     End If
     Task = "find zetafax home directory in " + prm_file
     Line Input #1, record
     If Left(record, 23) = "zetafax_home_directory=" Then
        zetafax_directory = Mid(record, 24)
     Else
        GoTo send_msg
     End If
     Task = "find confirmation forms directory in " + prm_file
     Line Input #1, record
     If Left(record, 29) = "confirmation_forms_directory=" Then
        confirmation_forms_directory = Mid(record, 30)
     Else
        GoTo send_msg
     End If
     Task = "find expansion details directory in " + prm_file
     Line Input #1, record
     If Left(record, 23) = "send_details_directory=" Then
        send_details_directory = Mid(record, 24)
     Else
        GoTo send_msg
     End If
     
    '* network printers section *
    
     Task = "find [Network_Printers] section in " + prm_file
     Line Input #1, record
     Line Input #1, record
     If record <> "[Network_Printers]" Then
        GoTo send_msg
     End If
     Task = "find Printer_for_R_Documents in " + prm_file
     Line Input #1, record
     If Left(record, 24) = "Printer_for_R_Documents=" Then
        printer_for_R_documents = Mid(record, 25)
     Else
        GoTo send_msg
     End If
     Task = "find Printer_for_A_Documents in " + prm_file
     Line Input #1, record
     If Left(record, 24) = "Printer_for_A_Documents=" Then
        printer_for_A_documents = Mid(record, 25)
     Else
        GoTo send_msg
     End If
     
    '* UFM directory *
    
     Task = "find [UFM] section in " + prm_file
     Line Input #1, record
     Line Input #1, record
     If record <> "[UFM]" Then
        GoTo send_msg
     End If
     Task = "find documents for UFM directory in " + prm_file
     Line Input #1, record
     If Left(record, 28) = "documents_for_UFM_directory=" Then
        documents_for_UFM_directory = Mid(record, 29)
     Else
        GoTo send_msg
     End If
    
    '* close file *
    
     Close 1
     
    ' PDE before [BEG] ----------------------------------------------------------------------------------------------------------------
    '* find local information *
    Task = "find local_printer and user's e_mail address in User Information"
    i = InStr(1, Application.UserAddress, Chr$(13))
    If (i = 0) Then
        GoTo send_msg
    End If
    '* find local printer address *
    Task = "find Local Printer address in User Information"
    local_printer = Left(Application.UserAddress, i - 1)
    If Left(local_printer, 14) = "local_printer=" Then
        local_printer = Mid(local_printer, 15)
    Else
        GoTo send_msg
    End If
    '* user"s e-mail address *
    Task = "find e-mail address in User Information"
    originator_e_mail_address = Mid(Application.UserAddress, i + 2)
    i = InStr(1, originator_e_mail_address, Chr$(13))
    If (i <> 0) Then
        originator_e_mail_address = Left(originator_e_mail_address, i - 1)
    End If
    If Left(originator_e_mail_address, 7) = "e_mail=" Then
        originator_e_mail_address = Mid(originator_e_mail_address, 8)
    Else
        GoTo send_msg
    End If
    'originator_e_mail_address = ""
    'If Application.Version = "12.0" Then
        local_printer = Application.ActivePrinter
    'End If
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    ltr_mask = ""
    Task = "find current 'ltr' mask reference in " + mask_directory
    oregexp.Pattern = "ltr-*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(mask_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            ltr_mask = ofillst.Name
            Exit For
        End If
        Set omatpat = Nothing
    Next
    fxr_mask = ""
    Task = "find current 'fxr' mask reference in " + mask_directory
    oregexp.Pattern = "fxr-*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(mask_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            fxr_mask = ofillst.Name
            Exit For
        End If
        Set omatpat = Nothing
    Next
    fmr_mask = ""
    Task = "find current 'fmr' mask reference in " + mask_directory
    oregexp.Pattern = "fmr-*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(mask_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            fmr_mask = ofillst.Name
            Exit For
        End If
        Set omatpat = Nothing
    Next
    emr_mask = ""
    Task = "find current 'emr' mask reference in " + mask_directory
    oregexp.Pattern = "emr-*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(mask_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            emr_mask = ofillst.Name
            Exit For
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    If ltr_mask = "" Or fxr_mask = "" Or fmr_mask = "" Or emr_mask = "" Then
        GoTo send_msg
    End If
    
     context_is_set = 1

 End If
 
 Exit Sub
   
send_msg: response = MsgBox("Can't " + Task _
                          + Chr(13) + Chr(13) _
                          + "Contact your administrator" + Chr(13) + " ", _
                            vbYes, "ICS - Configuration Manager", "", 0)
          
          end_of_program
          
End Sub
Sub configure_display()

   On Error Resume Next
   
  '* disable unnecessary commandbars *
  
    For Each cb In CommandBars
       If (cb.Enabled = True) And (cb.Name <> "Menu Bar") _
                              And (cb.Name <> "Clipboard") _
                              And (cb.Name <> "Text") _
                              And (cb.Name <> "Table Text") Then
          cb.Enabled = False
       End If
   Next cb

  '* suppress ruler and end of record *
  
   If Windows.Count > 0 Then
      ActiveWindow.ActivePane.DisplayRulers = False
      ActiveWindow.ActivePane.View.ShowAll = False
      ActiveWindow.View.Type = wdPrintView
   End If
   
  '* set options *
  
    Application.DisplayStatusBar = True
    With ActiveWindow
        .DisplayHorizontalScrollBar = True
        .DisplayVerticalScrollBar = True
        .DisplayLeftScrollBar = False
        .StyleAreaWidth = CentimetersToPoints(0)
        .DisplayRightRuler = False
        .DisplayScreenTips = True
        With .View
            .ShowAnimation = True
            .Draft = False
            .WrapToWindow = False
            .ShowPicturePlaceHolders = False
            .ShowFieldCodes = False
            .ShowBookmarks = False
            .FieldShading = wdFieldShadingWhenSelected
            .ShowTabs = False
            .ShowSpaces = False
            .ShowParagraphs = False
            .ShowHyphens = False
            .ShowHiddenText = False
            .ShowAll = False
            .ShowDrawings = True
            .ShowObjectAnchors = False
            .ShowTextBoundaries = False
            .ShowHighlight = True
        End With
    End With
    
    With Options
        .Pagination = True
        .WPHelp = False
        .WPDocNavKeys = False
        .ShortMenuNames = False
        .RTFInClipboard = True
        .BlueScreen = False
        .EnableSound = False
        .ConfirmConversions = False
        .UpdateLinksAtOpen = False
        .SendMailAttach = True
        .MeasurementUnit = wdCentimeters
        .AllowPixelUnits = False
        .AnimateScreenMovements = False
        .VirusProtection = False
        .ApplyFarEastFontsToAscii = False
        .InterpretHighAnsi = wdHighAnsiIsHighAnsi
    End With
    
    With Options
        .ReplaceSelection = True
        .AllowDragAndDrop = True
        .AutoWordSelection = False
        .INSKeyForPaste = False
        .SmartCutPaste = False
        .AllowAccentedUppercase = False
        .PictureEditor = "Microsoft Word"
        .TabIndentKey = False
        .Overtype = False
        .AllowClickAndTypeMouse = True
        .AutoKeyboardSwitching = False
    End With
    
    ActiveDocument.ClickAndTypeParagraphStyle = "Normal"
    
    With Options
        .UpdateFieldsAtPrint = False
        .UpdateLinksAtPrint = False
        .DefaultTray = "Use printer settings"
        .PrintBackground = False
        .PrintProperties = False
        .PrintFieldCodes = False
        .PrintComments = False
        .PrintHiddenText = False
        .PrintDrawingObjects = True
        .PrintDraft = False
        .PrintReverse = False
        .MapPaperSize = True
    End With
    With ActiveDocument
        .PrintPostScriptOverText = False
        .PrintFormsData = False
    End With
    
    With Options
        .AllowFastSave = False
        .BackgroundSave = True
        .CreateBackup = False
        .SavePropertiesPrompt = False
        .SaveNormalPrompt = False
        .OptimizeForWord97byDefault = False
    End With
    
    With ActiveDocument
        .ReadOnlyRecommended = False
        .EmbedTrueTypeFonts = False
        .SaveFormsData = False
        .SaveSubsetFonts = False
        .Password = ""
        .WritePassword = ""
        .OptimizeForWord97 = False
    End With
    
    Application.DefaultSaveFormat = ""
    
    With Options
        .CheckSpellingAsYouType = False
        .CheckGrammarAsYouType = False
        .SuggestSpellingCorrections = False
        .SuggestFromMainDictionaryOnly = False
        .CheckGrammarWithSpelling = False
        .ShowReadabilityStatistics = False
        .IgnoreUppercase = False
        .IgnoreMixedDigits = False
        .IgnoreInternetAndFileAddresses = False
        .AllowCombinedAuxiliaryForms = True
        .EnableMisusedWordsDictionary = False
        .AllowCompoundNounProcessing = True
        .UseGermanSpellingReform = True
    End With
    
    With AutoCorrect
        .CorrectInitialCaps = False
        .CorrectSentenceCaps = False
        .CorrectDays = False
        .CorrectCapsLock = False
        .ReplaceText = False
        .ReplaceTextFromSpellingChecker = False
        .CorrectKeyboardSetting = False
    End With
    
    With Options
        .AutoFormatAsYouTypeApplyHeadings = False
        .AutoFormatAsYouTypeApplyBorders = False
        .AutoFormatAsYouTypeApplyBulletedLists = False
        .AutoFormatAsYouTypeApplyNumberedLists = False
        .AutoFormatAsYouTypeApplyTables = False
        .AutoFormatAsYouTypeReplaceQuotes = False
        .AutoFormatAsYouTypeReplaceSymbols = False
        .AutoFormatAsYouTypeReplaceOrdinals = False
        .AutoFormatAsYouTypeReplaceFractions = False
        .AutoFormatAsYouTypeReplacePlainTextEmphasis = False
        .AutoFormatAsYouTypeReplaceHyperlinks = False
        .AutoFormatAsYouTypeFormatListItemBeginning = False
        .AutoFormatAsYouTypeDefineStyles = False
    End With
    
    Application.DisplayAutoCompleteTips = False
    
    With Options
        .AutoFormatApplyHeadings = False
        .AutoFormatApplyLists = False
        .AutoFormatApplyBulletedLists = False
        .AutoFormatApplyOtherParas = False
        .AutoFormatReplaceQuotes = False
        .AutoFormatReplaceSymbols = False
        .AutoFormatReplaceOrdinals = False
        .AutoFormatReplaceFractions = False
        .AutoFormatReplacePlainTextEmphasis = False
        .AutoFormatReplaceHyperlinks = False
        .AutoFormatPreserveStyles = False
        .AutoFormatPlainTextWordMail = False
    End With

    On Error GoTo 0
    
End Sub
Sub merge()

    ActiveDocument.MailMerge.MainDocumentType = wdFormLetters
   '* define variables file *

    file_name = working_storage_directory + "\standard.var"
    ActiveDocument.MailMerge.OpenHeaderSource Name:=file_name, _
                                              ConfirmConversions:=False, _
                                              ReadOnly:=False, _
                                              AddToRecentFiles:=False, _
                                              PasswordDocument:="", _
                                              PasswordTemplate:="", _
                                              Revert:=False, _
                                              WritePasswordDocument:="", _
                                              WritePasswordTemplate:="", _
                                              Format:=wdOpenFormatAuto
   '* define value file *
    
    file_name = working_storage_directory + "\standard.val"
    ActiveDocument.MailMerge.OpenDataSource Name:=file_name, _
                                            ConfirmConversions:=False, _
                                            ReadOnly:=False, _
                                            LinkToSource:=True, _
                                            AddToRecentFiles:=False, _
                                            PasswordDocument:="", _
                                            PasswordTemplate:="", _
                                            WritePasswordDocument:="", _
                                            WritePasswordTemplate:="", _
                                            Revert:=False, _
                                            Format:=wdOpenFormatAuto, _
                                            Connection:="", _
                                            SQLStatement:="", _
                                            SQLStatement1:=""
   '* exclude empty records *

    query_string = "SELECT * FROM " + working_storage_directory + "\standard.val " _
                   + "WHERE (ZZ_GUSNUM_R IS NOT NULL)"
    ActiveDocument.MailMerge.DataSource.QueryString = query_string

   '* launch mail-merge *
  
    With ActiveDocument.MailMerge
        .Destination = wdSendToNewDocument
        .MailAsAttachment = False
        .MailAddressFieldName = ""
        .MailSubject = ""
        .SuppressBlankLines = True
        With .DataSource
            .FirstRecord = wdDefaultFirstRecord
            .LastRecord = wdDefaultLastRecord
        End With
        .Execute pause:=True
    End With

End Sub
Sub dummy()

      Selection.HomeKey Unit:=wdStory
      Selection.Find.ClearFormatting
      With Selection.Find
             .Text = " ****** "
             .Replacement.Text = ""
             .Forward = True
             .Wrap = wdFindStop
             .Format = False
             .MatchCase = False
             .MatchWholeWord = False
             .MatchWildcards = False
             .MatchSoundsLike = False
             .MatchAllWordForms = False
      End With
      Selection.Find.Execute
      While Selection.Find.Found
              Selection.Extend
              Selection.Extend
              Selection.Delete Unit:=wdCharacter, Count:=1
              Selection.Find.Execute
      Wend

End Sub
Sub load_masks_for_entire_document(v_side)

              Selection.HomeKey Unit:=wdStory
resel:        Selection.Find.ClearFormatting

             '* for each command line *
             
              Selection.Find.Style = ActiveDocument.Styles("ics-cmd")
              With Selection.Find
                 .Text = ";Side=" + v_side
                 .Replacement.Text = ""
                 .Forward = True
                 .Wrap = wdFindStop
                 .Format = True
                 .MatchCase = False
                 .MatchWholeWord = False
                 .MatchWildcards = False
                 .MatchSoundsLike = False
                 .MatchAllWordForms = False
             End With
             Selection.Find.Execute
             If Selection.Find.Found Then
                 Selection.HomeKey Unit:=wdLine
             
                '* for performances reasons, set a bookmark before each command line *
                
                 'bookmark_name = "P" + Mid(str(1), 2)
                 bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
                 With ActiveDocument.Bookmarks
                  .Add Range:=Selection.Range, Name:=bookmark_name
                  .DefaultSorting = wdSortByName
                  .ShowHidden = True
                 End With
                 
                '* determine letter context *
                 
                 set_letter_context (bookmark_name)
                 
                '* load mask *
                 
                 load_mask_for_current_letter ("e-mail-generique")
                 
                '* add annexes *
                 
                 add_annexes_to_current_letter
                 
                 GoTo resel
                 
             End If
             
End Sub
Sub set_letter_context(bookmark_name)
  
  '* read command line *
  
  
   If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then
         Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name

         Selection.MoveRight Unit:=wdCharacter, Count:=6
         Selection.Extend (";")
         Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
         v_doc_type = Selection.Text
         
         Selection.MoveRight Unit:=wdCharacter, Count:=7
         Selection.Extend (";")
         Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
         v_doc_side = Selection.Text
         
         Selection.MoveRight Unit:=wdCharacter, Count:=7
         Selection.Extend (";")
         Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
         v_mask_type = LCase(Left(Selection.Text, 3))
         
         If v_mask_type = "non" Then
            v_mask_date = ""
            v_mask_extension = ""
         Else
            v_mask_date = Mid(Selection.Text, 5, 8)
            v_mask_extension = Right(Selection.Text, 4)
         End If
         
         If v_doc_type = "std" And v_doc_side = "recto" Then
             Selection.MoveRight Unit:=wdCharacter, Count:=10
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_user_nr = Selection.Text
             user_path = "\" + Mid(v_user_nr, 1, 1) + "\" + Mid(v_user_nr, 2, 1) _
                       + "\" + Mid(v_user_nr, 3, 1) + "\" + Mid(v_user_nr, 4, 1) _
                       + "\" + Mid(v_user_nr, 5, 1)

             Selection.MoveRight Unit:=wdCharacter, Count:=6
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_annex_list = Selection.Text
             Selection.Text = "******"

             Selection.MoveRight Unit:=wdCharacter, Count:=15
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_e_mail_perso = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=19
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_e_mail_generique = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse1 = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse2 = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse3 = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse4 = Selection.Text

 
             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse5 = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse6 = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=11
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_adresse7 = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=9
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_coname = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=9
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_cofunc = Selection.Text

             Selection.MoveRight Unit:=wdCharacter, Count:=9
             Selection.Extend (";")
             Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
             v_cofaxn = Selection.Text

         End If
         
         Selection.MoveRight Unit:=wdCharacter, Count:=1

   End If

End Sub

Sub load_mask_for_current_letter(e_mail_type)

    If (v_doc_type = "std") And (v_doc_side = "recto") Then
    
       '* update mask reference *
          
        If (v_mask_date = "99999999") Then
             Select Case v_mask_type
               Case "ltr"
                       mask_name = ltr_mask
               Case "fxr"
                       mask_name = fxr_mask
               Case "fmr"
                       mask_name = fmr_mask
               Case "emr"
                       mask_name = emr_mask
               Case Else
                      response = MsgBox("Invalid type of document : " + v_mask_type, _
                                 vbOKOnly, "ICS - Consistency Check", "", 0)
                      end_of_program
             End Select
             v_mask_date = Mid(mask_name, 5, 8)
             v_mask_extension = Right(mask_name, 4)
             update_mask_reference (mask_name)
        End If

       '* unlink date field *
       
        Selection.Tables(1).Cell(6, 2).Select
        
        On Error Resume Next
        Selection.Fields(1).Unlink
        On Error GoTo 0

        If (v_reset_address = True) Then

          '* update address *
          
           If (v_mask_type = "fxr") Or (v_mask_type = "fmr") Then
             display_fax_address
           End If
           If (v_mask_type = "ltr") Or (v_mask_type = "emr") Then
             display_mail_address
           End If

          '* update fax nr *
    
           display_fax_number
       
          '* update e-mail *
    
           display_e_mail (e_mail_type)
          
        End If
       
       '* update signature *
    
       If (v_mask_type = "fxr") Or (v_mask_type = "emr") Then
            make_signature_visible
       End If
       If (v_mask_type = "ltr") Or (v_mask_type = "fmr") Then
          make_signature_invisible
       End If
       Selection.MoveRight Unit:=wdCharacter, Count:=1

    End If
   
   '* configure and reset header and footer *

    With Selection.Sections(1)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = False
        .Headers(wdHeaderFooterPrimary).Range.Text = ""
        .Footers(wdHeaderFooterPrimary).Range.Text = ""
    End With
    
    If (v_mask_type <> "non") Then

       '* load new mask from working storage *
       
        full_mask_name = working_storage_directory + "\" + v_mask_type + "-" _
                         + v_mask_date + v_mask_extension
                         
        On Error Resume Next

        With Selection.Sections(1).Headers(wdHeaderFooterPrimary).Shapes
       
                
          .AddPicture FileName:=full_mask_name, _
                      LinkToFile:=False, _
                      SaveWithDocument:=True
             
         '* if not found, copy from mask directory *
        
          If (Err.Number <> 0) Then
        
             file_name = mask_directory + "\" + v_mask_type + "-" _
                              + v_mask_date + v_mask_extension
                         
             copy_file file_name, full_mask_name
             
             .AddPicture FileName:=full_mask_name, _
                         LinkToFile:=False, _
                         SaveWithDocument:=True
          End If
          
        End With
        
        On Error GoTo 0
    
       '* open header *
       
        If (ActiveWindow.View.SplitSpecial <> wdPaneNone) Then
           ActiveWindow.Panes(2).Close
        End If
        
        If (ActiveWindow.ActivePane.View.Type = wdNormalView) _
          Or (ActiveWindow.ActivePane.View.Type = wdOutlineView) Then
              ActiveWindow.ActivePane.View.Type = wdPrintView
        End If
        
        ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
       
       '* format mask *
       
        n = Selection.HeaderFooter.Shapes.Count
        Selection.HeaderFooter.Shapes(n).Select
        
        With Selection.ShapeRange
        
          .Fill.Visible = msoFalse
          .Fill.Transparency = 0#
          .Line.Weight = 0.75
          .Line.DashStyle = msoLineSolid
          .Line.Style = msoLineSingle
          .Line.Transparency = 0#
          .Line.Visible = msoFalse
          .LockAspectRatio = msoTrue
          .Height = 835.1
          .Width = 590.15
          .PictureFormat.Brightness = 0.5
          .PictureFormat.Contrast = 0.5
          .PictureFormat.ColorType = msoPictureAutomatic
          .PictureFormat.CropLeft = 0#
          .PictureFormat.CropRight = 0#
          .PictureFormat.CropTop = 0#
          .PictureFormat.CropBottom = 0#
          .RelativeHorizontalPosition = wdRelativeHorizontalPositionPage
          .RelativeVerticalPosition = wdRelativeVerticalPositionPage
          .LockAnchor = True
          .WrapFormat.AllowOverlap = True
          .WrapFormat.Side = wdWrapBoth
          .WrapFormat.DistanceTop = CentimetersToPoints(0)
          .WrapFormat.DistanceBottom = CentimetersToPoints(0)
          .WrapFormat.DistanceLeft = CentimetersToPoints(0.32)
          .WrapFormat.DistanceRight = CentimetersToPoints(0.32)
          .WrapFormat.Type = 3
          .ZOrder 4
          .Left = CentimetersToPoints(0)
          .Top = CentimetersToPoints(0)
        
        End With
        
       '* close header *
       
        ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument

    End If

End Sub
Sub add_annexes_to_current_letter()

  If (v_doc_type = "std") And (v_doc_side = "recto") And (v_annex_list <> "******") Then
  
    '* goto end of letter *
     
     Selection.GoTo what:=wdGoToHeading, Which:=wdGoToPrevious, Count:=1, Name:=""
     Selection.Find.ClearFormatting
     Selection.Find.Style = ActiveDocument.Styles("ics-cmd")
     With Selection.Find
        .Text = "[Type=std;Side=verso;Mask="
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = True
        .MatchCase = True
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
     End With
     Selection.Find.Execute
     If Selection.Find.Found Then
        Selection.Extend ("]")
        Selection.MoveRight Unit:=wdCharacter, Count:=2
        
       '* for each annex requested *
       
        For i = 1 To Len(v_annex_list) / 4
     
           annex_type = Mid(v_annex_list, (i * 4) - 3, 2)
           annex_sys = Mid(v_annex_list, (i * 4) - 1, 2)
            Dim blnFIRST As Boolean
            blnFIRST = True
            Set oFilSys = CreateObject("Scripting.FileSystemObject")
            Set oregexp = CreateObject("VBScript.RegExp")
            oregexp.Pattern = v_user_nr + "????????S" + annex_type + "??????" + annex_sys + "????????-.DOC"
            oregexp.Pattern = v_user_nr + "........S" + annex_type + "......" + annex_sys + "........-\.DOC"
            oregexp.IgnoreCase = True
            Set ofolder = oFilSys.GetFolder(user_file_directory + user_path)
            For Each ofillst In ofolder.Files
                Set omatpat = oregexp.Execute(ofillst.Name)
                If omatpat.Count > 0 Then
                    If blnFIRST = True Then
                        annex_date = Mid(Right(ofillst.Name, 37), 6, 8)
                        blnFIRST = False
                    End If
                    If Mid(Right(ofillst.Name, 37), 6, 8) = annex_date Then
                        'insert_file_as_annex ofillst.Name
                        insert_file_as_annex ofillst
                    End If
                End If
                Set omatpat = Nothing
            Next
            Set ofolder = Nothing
            Set oregexp = Nothing
            Set oFilSys = Nothing
        Next i
     End If
  End If

End Sub
Sub display_fax_number()

 Selection.Tables(1).Cell(7, 3).Select
  
  Selection.Find.ClearFormatting

'* MODIFICATION FROM CPA ON 20100209 : change of template "Fax.    :" by "Fax    :"
        '* first replace old layout by new
        '*  then replace new by "".
        '* this procedure is necessary because not all templates were changed at this time.
      
      With Selection.Find
        .Text = "Fax.    :"
        .Replacement.Text = "Fax    :"
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = True
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    Selection.Tables(1).Cell(7, 3).Select
    
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "Fax    :"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = True
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
  
'* END MODIFICATION FROM CPA ON 20100209 : change of template "Fax.    :" by "Fax    :"
  
  If (Selection.Find.Found) Then
     Selection.MoveRight Unit:=wdCharacter, Count:=1
     Selection.EndKey Unit:=wdLine, Extend:=wdExtend
     Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
     Selection.Font.Size = 11
     Selection.Font.Color = wdColorAutomatic
                 
     If (v_cofaxn <> "******") Then
       Selection.Text = "  " + v_cofaxn
     End If
                  
  End If
  
  Selection.MoveLeft Unit:=wdCharacter, Count:=1

End Sub
Sub display_e_mail(e_mail_type)

 Selection.Tables(1).Cell(7, 3).Select
  
  Selection.Find.ClearFormatting

'* MODIFICATION FROM CPA ON 20100209 : change of template "E-Mail :" by "Email :"
        '* first replace old layout by new
        '*  then replace new by "".
        '* this procedure is necessary because not all templates were changed at this time.
    
    With Selection.Find
        .Text = "E-Mail :"
        .Replacement.Text = "Email :"
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = True
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    
    Selection.Tables(1).Cell(7, 3).Select
    
    Selection.Find.ClearFormatting
    With Selection.Find
      .Text = "Email :"
      .Replacement.Text = ""
      .Forward = True
      .Wrap = wdFindStop
      .Format = False
      .MatchCase = True
      .MatchWholeWord = False
      .MatchWildcards = False
      .MatchSoundsLike = False
      .MatchAllWordForms = False
    End With
  Selection.Find.Execute

'* END MODIFICATION FROM CPA ON 20100209 : change of template "E-Mail :" by "Email :"
  
  If (Selection.Find.Found) Then
     Selection.MoveRight Unit:=wdCharacter, Count:=1
     Selection.EndKey Unit:=wdLine, Extend:=wdExtend
     Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
     Selection.Font.Size = 11
     Selection.Font.Color = wdColorAutomatic
                
     If (e_mail_type = "e-mail-perso") And (v_e_mail_perso <> "******") Then
        Selection.Text = "  " + v_e_mail_perso
     End If
                  
     If (e_mail_type = "e-mail-generique") And (v_e_mail_generique <> "******") Then
        Selection.Text = "  " + v_e_mail_generique
     End If
                  
  End If
  
  Selection.MoveLeft Unit:=wdCharacter, Count:=1

End Sub

Sub make_signature_visible()

    On Error Resume Next
    
    Selection.Sections(1).Range.InlineShapes(1).Select
    
    If (Err.Number = 0) Then
       On Error GoTo 0
       Selection.Fields.Update
       Selection.Fields.Update
       Selection.Fields.Unlink
       Selection.InlineShapes(1).ScaleHeight = 100
       Selection.InlineShapes(1).ScaleWidth = 100
       Selection.InlineShapes(1).PictureFormat.Brightness = 0.5
       Selection.InlineShapes(1).PictureFormat.Contrast = 0.5
    End If
    On Error GoTo 0
    Selection.MoveLeft Unit:=wdCharacter, Count:=1


    

End Sub
Sub make_signature_invisible()

    On Error Resume Next
    
    Selection.Sections(1).Range.InlineShapes(1).Select
    
    If (Err.Number = 0) Then
       On Error GoTo 0
       Selection.Fields.Update
       Selection.Fields.Update
       Selection.Fields.Unlink
       Selection.InlineShapes(1).ScaleHeight = 100
       Selection.InlineShapes(1).ScaleWidth = 100
       Selection.InlineShapes(1).PictureFormat.Brightness = 1
       Selection.InlineShapes(1).PictureFormat.Contrast = 1
    End If
    On Error GoTo 0
    Selection.MoveLeft Unit:=wdCharacter, Count:=1

End Sub
Sub update_mask_reference(m_name)

    bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
    
    If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then

        Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
        Selection.MoveRight Unit:=wdCharacter, Count:=26
        Selection.Extend (";")
        Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
        Selection.TypeText Text:=m_name
        Selection.MoveRight Unit:=wdCharacter, Count:=1
        
        v_mask_type = Left(m_name, 3)
        v_mask_date = Mid(m_name, 5, 8)
        v_mask_extension = Right(m_name, 4)
        
    End If
   
End Sub
Sub letter()

   '* disable screen updating *
    
    Application.ScreenUpdating = True
               
   '* set context *
     
    bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
    
    If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then

       set_application_context
       set_letter_context (bookmark_name)

      If v_mask_type <> "non" Then

        '* update mask reference *
                
         update_mask_reference (ltr_mask)
        
        '* load mask *

         v_reset_address = True
         load_mask_for_current_letter ("")
   
      End If
      
     '* reset cursor position
        
      Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
      
      Selection.Tables(1).Cell(9, 1).Select
      
      Selection.HomeKey Unit:=wdLine

    End If
   
End Sub
Sub fax()

  '* disable screen updating *
    
   Application.ScreenUpdating = True
            
  '* set context *
     
   bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
   
   If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then

      set_application_context
      set_letter_context (bookmark_name)

      If (v_mask_type <> "non") And (v_adresse1 <> "******") Then

        '* update mask reference *
      
         update_mask_reference (fxr_mask)
      
        '* load mask *
        
         v_reset_address = True
         load_mask_for_current_letter ("")
   
      End If
   
     '* reset cursor position
        
      Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
      
      
      Selection.Tables(1).Cell(9, 1).Select
      
      Selection.HomeKey Unit:=wdLine
   
   End If
         
End Sub
Sub e_mail()
    
  '* disable screen updating *
    
    Application.ScreenUpdating = True

   '* set context *
     
    bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
    
    If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then

      set_application_context
      set_letter_context (bookmark_name)

      If (v_mask_type <> "non") And (v_adresse1 <> "******") Then

        '* update mask reference *
                
          update_mask_reference (emr_mask)
                
        '* load mask *
                
         v_reset_address = True
         load_mask_for_current_letter ("e-mail-generique")
                        
      End If
         
     '* reset cursor position
        
      Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
      Selection.Tables(1).Cell(9, 1).Select
      
      Selection.HomeKey Unit:=wdLine

    End If

End Sub
Sub fax_manual()
    
  '* disable screen updating *
    
   Application.ScreenUpdating = True

  '* set context *
     
   bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
   
   If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then
        
      set_application_context
      set_letter_context (bookmark_name)

      If v_mask_type <> "non" Then

        '* update mask reference *
       
         update_mask_reference (fmr_mask)
       
        '* load mask *
        
         v_reset_address = True
         load_mask_for_current_letter ("")
      
      End If
      
     '* reset cursor position
        
      Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
      
      Selection.Tables(1).Cell(9, 1).Select
      
      
      Selection.HomeKey Unit:=wdLine
      
   End If

End Sub
Sub e_mail_perso()

  '* disable screen updating *
    
   Application.ScreenUpdating = True
      
  '* set context *
     
   bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
   
   If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then
         
      set_application_context
      set_letter_context (bookmark_name)
    
      If (v_mask_type <> "non") And (v_adresse1 <> "******") Then

        '* update mask reference *
                           
         update_mask_reference (emr_mask)
                      
        '* load mask *
        
         v_reset_address = True
         load_mask_for_current_letter ("e-mail-perso")

      End If
          
     '* reset cursor position
        
      Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
      Selection.Tables(1).Cell(9, 1).Select
      
      Selection.HomeKey Unit:=wdLine
         
   End If

End Sub
Sub display_mail_address()

   '* delete existing contact *
    Selection.Tables(1).Cell(2, 3).Select
    
    Selection.Delete

   '* delete existing address *
    Selection.Tables(1).Cell(3, 3).Select
    
    Selection.Delete
          
   '* restore full address *
         
    add_address_line (v_adresse1)
    add_address_line (v_adresse2)
    add_address_line (v_adresse3)
    add_address_line (v_adresse4)
    add_address_line (v_adresse5)
    add_address_line (v_adresse6)
    add_address_line (v_adresse7)

End Sub
Sub display_fax_address()

   '* delete existing contact *
    
    Selection.Tables(1).Cell(2, 3).Select
    Selection.Delete
    
   '* restore contact *
    
    add_contact_line (v_coname)
    add_contact_line (v_cofunc)
          

   '* delete existing address *
    
    Selection.Tables(1).Cell(3, 3).Select
    
    Selection.Delete
    
   '* restore reduced address *
   
    If (v_adresse1 = "******") Then
        add_address_line (v_adresse2)
    Else
        add_address_line (v_adresse1)
    End If
    
    add_address_line (v_adresse7)

End Sub
Sub add_address_line(adresse)
       
       If (adresse <> "******") Then
           Selection.Text = adresse + Chr(11)
           Selection.MoveRight Unit:=wdCharacter, Count:=1
       End If
End Sub
Sub add_contact_line(contact)
       
       If (contact <> "******") Then
           Selection.Text = contact + Chr(11)
           Selection.MoveRight Unit:=wdCharacter, Count:=1
       End If
End Sub
Sub insert_annex()
    
  '* disable screen updating *
    
    Application.ScreenUpdating = True

  '* set context *
     
    'bookmark_name = "P" + Mid(str(1), 2)
    bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
    
    If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then

       set_application_context
       set_letter_context (bookmark_name)
         
       If (v_doc_type = "std") Then
         
         '* display dialog box *
         
          search_string = "...........................-\...."
          
          
          Load UserForm1
          Application.ScreenUpdating = True

display_user_form:
         
          UserForm1.Show
         
         '* redisplay dialog box according to the search string *
        
          If return_key = "DISPLAY" Then
             UserForm1.UserForm_initialize
             GoTo display_user_form
          End If
         
         '* redisplay dialog box according to the original search string *
         
          If return_key = "RESET" Then
          search_string = "...........................-\...."
             UserForm1.UserForm_initialize
             GoTo display_user_form
          End If
         
          Unload UserForm1

         '* insert selected attachement *
        
          If file_selected <> "" Then
    
            '* goto end of letter *
            
             Application.ScreenUpdating = True
             Selection.GoTo what:=wdGoToHeading, Which:=wdGoToPrevious, Count:=1, Name:=""
             Selection.Find.ClearFormatting
             Selection.Find.Style = ActiveDocument.Styles("ics-cmd")
             With Selection.Find
                 .Text = "[Type=std;Side=verso;Mask="
                 .Replacement.Text = ""
                 .Forward = True
                 .Wrap = wdFindStop
                 .Format = True
                 .MatchCase = True
                 .MatchWholeWord = False
                 .MatchWildcards = False
                 .MatchSoundsLike = False
                 .MatchAllWordForms = False
             End With
             Selection.Find.Execute
             If Selection.Find.Found Then
                Selection.Extend ("]")
                Selection.MoveRight Unit:=wdCharacter, Count:=2
                
                insert_file_as_annex (user_file_directory + user_path + "\" + file_selected)
    
             End If
          End If
         
       End If

      '* reset cursor position
        
       Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
       
    Selection.Tables(1).Cell(9, 1).Select
       
       Selection.HomeKey Unit:=wdLine

    End If
    
End Sub
Sub insert_file_as_annex(annex_name)
      
    Selection.HomeKey Unit:=wdLine
    Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    
    If (Selection.Text = "|") Then
       Selection.Font.Name = "Arial"
       Selection.Font.Size = 11
       Selection.Font.Color = wdColorWhite
       Selection.MoveRight Unit:=wdCharacter, Count:=1
    Else
       Selection.MoveLeft Unit:=wdCharacter, Count:=1
       Selection.Font.Name = "Arial"
       Selection.Font.Size = 11
       Selection.Font.Color = wdColorWhite
       Selection.TypeText Text:="|"
    End If
    
    Selection.Font.Name = "Arial"
    Selection.Font.Size = 11
    Selection.Font.Color = wdColorAutomatic
    Selection.TypeText Text:="   "
    Selection.MoveLeft Unit:=wdCharacter, Count:=2
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
      
   '* add hyperlink *
      
    ActiveDocument.Hyperlinks.Add Anchor:=Selection.Range, _
                                  Address:=annex_name, _
                                  SubAddress:="", _
                                  TextToDisplay:="2"
                                     
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
       
    With Selection.Font
           .Name = "Wingdings"
           .Size = 28
           .Bold = False
           .Italic = False
           .Underline = wdUnderlineNone
           .UnderlineColor = wdColorAutomatic
           .StrikeThrough = False
           .DoubleStrikeThrough = False
           .Outline = False
           .Emboss = False
           .Shadow = False
           .Hidden = False
           .SmallCaps = False
           .AllCaps = False
           .Engrave = False
           .Superscript = False
           .Subscript = False
           .Spacing = 0
           .Scaling = 100
           .Position = 0
           .Kerning = 0
           .Animation = wdAnimationNone
           .Color = wdColorOrange
    End With
       
    Selection.HomeKey Unit:=wdLine

End Sub
Sub delete_letter()

    bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
    Selection.GoTo what:=wdGoToHeading, Which:=wdGoToPrevious, Count:=1, Name:=""
    Selection.EndOf Unit:=wdSection, Extend:=wdExtend

    response = MsgBox(" " + Chr(13) + "Are you sure you want to delete this letter ?" _
                          + Chr(13) + " ", vbYesNo, "ICS - Confirmation Request", "", 0)

    If response = vbYes Then
    
         Application.ScreenUpdating = True
         Selection.Delete Unit:=wdCharacter, Count:=1
         
        '* suppress all bookmarks *
         
         While ActiveDocument.Bookmarks.Count > 0
            bookmark_name = ActiveDocument.Bookmarks(1).Name
            ActiveDocument.Bookmarks(bookmark_name).Delete
         
         Wend
        
        '* insert new bookmarks *
         
         Selection.HomeKey Unit:=wdStory
resel:   Selection.Find.ClearFormatting

        '* for each command line *
             
         Selection.Find.Style = ActiveDocument.Styles("ics-cmd")
         With Selection.Find
                 .Text = ";Side=recto;Mask="
                 .Replacement.Text = ""
                 .Forward = True
                 .Wrap = wdFindStop
                 .Format = True
                 .MatchCase = False
                 .MatchWholeWord = False
                 .MatchWildcards = False
                 .MatchSoundsLike = False
                 .MatchAllWordForms = False
         End With
         Selection.Find.Execute
         If Selection.Find.Found Then
            Selection.HomeKey Unit:=wdLine
           
           '* set a bookmark before each command line *
                
            'bookmark_name = "P" + Mid(str(1), 2)
            bookmark_name = "P" + Mid(Str(Selection.Information(wdActiveEndSectionNumber)), 2)
            With ActiveDocument.Bookmarks
                  .Add Range:=Selection.Range, Name:=bookmark_name
                  .DefaultSorting = wdSortByName
                  .ShowHidden = True
            End With
            Selection.EndKey Unit:=wdLine
            GoTo resel
         End If
         Selection.HomeKey Unit:=wdStory
 
    Else
          
        '* reset cursor position
        
          If ActiveDocument.Bookmarks.Exists(bookmark_name) = True Then
        
             Selection.GoTo what:=wdGoToBookmark, Name:=bookmark_name
             
            Selection.Tables(1).Cell(9, 1).Select
             
             Selection.HomeKey Unit:=wdLine
             
          End If
          
    End If

End Sub
Sub dispatch()
  '* disable screen updating *
    
   Application.ScreenUpdating = True

   Selection.HomeKey Unit:=wdStory
   Selection.EndKey Unit:=wdLine, Extend:=wdExtend
   
   If Left(Selection.Text, 4) = "X" + LCase(Application.UserInitials) Then
      Selection.MoveRight Unit:=wdCharacter, Count:=1

     '* set context *
      set_application_context

     '* document is read only, copy it in working storage *
        If ActiveWindow.Caption Like "*Read-Only*" Then
            file_name = working_storage_directory + "\" + Mid(ActiveWindow.Caption, 1, InStr(ActiveWindow.Caption, ".") - 1) + ".doc"
            save_file (file_name)
            
        End If
      
     '* delete last section break *

      Selection.EndKey Unit:=wdStory
      Selection.MoveLeft Unit:=wdCharacter, Count:=2, Extend:=wdExtend
      Selection.Delete Unit:=wdCharacter, Count:=1

     '* select all the letters *

      Selection.WholeStory

     '* create subdocuments *

      ActiveDocument.Subdocuments.AddFromRange Range:=Selection.Range
    
     '* add section break at top and at bottom *

      Selection.HomeKey Unit:=wdStory
      Selection.InsertBreak Type:=wdSectionBreakContinuous
      Selection.EndKey Unit:=wdStory
      Selection.InsertBreak Type:=wdSectionBreakContinuous
      Selection.HomeKey Unit:=wdStory

     '* remove two consecutive section breaks *

      Selection.Find.ClearFormatting
      Selection.Find.Replacement.ClearFormatting
      With Selection.Find
          .Text = "^b^b"
          .Replacement.Text = ""
          .Forward = True
          .Wrap = wdFindStop
          .Format = False
          .MatchCase = False
          .MatchWholeWord = False
          .MatchWildcards = False
          .MatchSoundsLike = False
          .MatchAllWordForms = False
      End With
      Selection.Find.Execute Replace:=wdReplaceAll

     '* save subdocuments *
     '* format : "XmwaAIR FRANCE0022720040526SAP11ExxxML000000010.doc" *

      file_name = working_storage_directory + "\" + LCase(Application.UserInitials) + "-master.doc"
      save_file (file_name)
     
     '* close document *
      
      ActiveWindow.Close

     '* delete master file *
     
      delete_file (file_name)
      Err.Clear
      Set oFilSys = CreateObject("Scripting.FileSystemObject")
      Set oregexp = CreateObject("VBScript.RegExp")
      oregexp.Pattern = "x" + Application.UserInitials
      oregexp.IgnoreCase = True
      Set ofolder = oFilSys.GetFolder(NewMacros.working_storage_directory)
      For Each ofillst In ofolder.Files
          Set omatpat = oregexp.Execute(ofillst.Name)
          If omatpat.Count > 0 Then
              file_found = ofillst
              extens = Right(file_found, 4)
              If (extens = ".doc" And Err.Number = 0) Then
                    file_name = documents_to_expand_directory + Mid(ofillst, InStrRev(file_found, "\"))
                    copy_file file_found, file_name
                    delete_file (file_found)
              End If
              Err.Clear
          End If
          Set omatpat = Nothing
      Next
      Set ofolder = Nothing
      Set oregexp = Nothing
      Set oFilSys = Nothing
      
      
      
      display_main_dialog_box

   Else
      If (Left(Selection.Text, 1) = "X") Then
         isu = Mid(Selection.Text, 2, 3)
         Selection.HomeKey Unit:=wdStory
         response = MsgBox(" " + Chr(13) + "Can't expand a document that was created by antoher user (" _
                                         + isu + ")" _
                               + Chr(13) + " ", _
                                 vbOKOnly, "ICS - Consistency Check", "", 0)
      Else
         If (Selection.Text = Chr(13)) Then
             ActiveDocument.Saved = True
             display_main_dialog_box
         Else
            response = MsgBox("This is not a valid document to expand", _
                               vbOKOnly, "ICS - Consistency Check", "", 0)
         End If
      End If
   End If


End Sub
Sub end_of_program()
    
    '* disable screen updating *
    
     Application.ScreenUpdating = True
     
    '* clear flag file *
  
     delete_file ("C:\Users\Public\irs\prod\~$docgen*.tmp")
     
    '* close all windows *
     
     If Documents.Count > 0 Then
        ActiveDocument.Saved = True
        ActiveDocument.Close
     End If
    
    '* force reset configuration *
    
     Documents.Add NewTemplate:=False, DocumentType:=0
     call_key_auto_close = "execute"
     ActiveWindow.Close
     
    '* activate irs *
 
     If Tasks.Exists("Integrated Recovery System") = True Then
        Tasks("Integrated Recovery System").Activate
        Tasks("Integrated Recovery System").WindowState = wdWindowStateMaximize
     End If

     End

End Sub
Sub expansion_service()
    set_application_context

    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
    oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " Start of Process")
    oLOG.Close
    Set oLOG = Nothing
    Set oFilSys = Nothing

    On Error GoTo 0
    
    clean_up_log_file (strLogFil)
    
start:
    
    If (Strings.Format(Now, "HHmmss") > 180000) Then
        If (Application.UserName = "Document Server R4") Then
'           *****************************
' CPA 20140909 : Printout suppression requested by PDP
'           print_statements_of_account_for_legal_service
'           *****************************
'            Set oFilSys = CreateObject("Scripting.FileSystemObject")
'            Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
'            oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " Checking for Legal Prints : [" + str(n_items) + "] statements printed")
'            oLOG.Close
'            Set oLOG = Nothing
'            Set oFilSys = Nothing
'           *****************************
            clean_up_backup_directory
'           *****************************
            Set oFilSys = CreateObject("Scripting.FileSystemObject")
            Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
            oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " Cleaning Backup Directory : [" + Str(n_items) + "] files deleted")
            oLOG.Close
            Set oLOG = Nothing
            Set oFilSys = Nothing
        End If
        Set oFilSys = CreateObject("Scripting.FileSystemObject")
        Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
        oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " sleeping , have a good night ! ---------------------")
        oLOG.Close
        Set oLOG = Nothing
        Set oFilSys = Nothing
        Do While (Strings.Format(Now, "HHmmss") > 180000)
              DoEvents
        Loop
        Set oFilSys = CreateObject("Scripting.FileSystemObject")
        Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
        oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & "  waking up , goodmorning ! ---------------------")
        oLOG.Close
        Set oLOG = Nothing
        Set oFilSys = Nothing
    End If
    
    On Error Resume Next

    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = "X??????????????????????????????????????*.*"
    oregexp.Pattern = "X......................................*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(documents_to_expand_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            '* decode file name *
            On Error GoTo 0
            z_ltr_full_name = ofillst
            z_ltr_name = Mid(z_ltr_full_name, Len(documents_to_expand_directory) + 2)
            z_ltr_file = Left(Right(z_ltr_name, 37), 33)
            z_ltr_isu = Mid(z_ltr_name, 2, 3)
            z_ltr_user_label = Mid(z_ltr_name, 5, Len(z_ltr_name) - 41)
            z_ltr_user_nr = Left(Right(z_ltr_name, 37), 5)
            z_ltr_std = Left(Right(z_ltr_name, 23), 10)
            z_ltr_ext = Right(z_ltr_name, 4)
            '* lock file *
            file_name = ofillst
            z_ltr_full_name = documents_to_expand_directory + "\Y" + Mid(z_ltr_name, 2)
            On Error Resume Next
            Name file_name As z_ltr_full_name
            If (Err.Number <> 0) Then '* file has been locked by another expansion_srv instance *
'CPA replaced a message box needing an action, by a loop ---------------------------------------------------------------------------------------------------------------------
                'reponse = MsgBox("File [" & z_ltr_full_name & "] has been locked", vbInformation)
                On Error GoTo 0
                start = Timer
                Do While Timer < start + 10
                    DoEvents
                Loop
'CPA ------------------------------------------------------------------------------------------
                GoTo start
            End If
            On Error GoTo 0
            ' Update LogFile [BEG]
            Set oFilSys = CreateObject("Scripting.FileSystemObject")
            Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
            oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " Started " & z_ltr_isu & " " & z_ltr_std & " " & z_ltr_user_nr & " " + z_ltr_user_label)
            oLOG.Close
            Set oLOG = Nothing
            Set oFilSys = Nothing
            ' Update LogFile [END]
            user_file = user_file_directory + "\" + Mid(z_ltr_user_nr, 1, 1) + "\" + Mid(z_ltr_user_nr, 2, 1) + "\" + Mid(z_ltr_user_nr, 3, 1) + "\" + Mid(z_ltr_user_nr, 4, 1) + "\" + Mid(z_ltr_user_nr, 5, 1) + "\"
            
            Set oFilSys = CreateObject("Scripting.FileSystemObject")
            Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
            
            Select Case z_ltr_isu
                Case "###"
                    '* file to delete : copy document to backup directory *
                    file_name = "\X###-" + z_ltr_file + z_ltr_ext
                    copy_file z_ltr_full_name, backup_directory + file_name
                    '* delete related acknowledgments of receipt *
                    If (Mid(z_ltr_file, 14, 1) = "S") And (Mid(z_ltr_file, 33, 1) = "0" And z_ltr_ext = ".doc") Then
                        delete_existing_acknowledgments_of_receipt
                    End If
                    '* delete file in user's file *
                    delete_file (user_file + z_ltr_file + z_ltr_ext)
                Case "---"
                    '* file to restore : copy file to user's file *
                    file_name = user_file + z_ltr_file + z_ltr_ext
                    copy_file z_ltr_full_name, file_name
                    '* copy to backup directory *
                    file_name = backup_directory + "\X----" + z_ltr_file + z_ltr_ext
                    copy_file z_ltr_full_name, file_name
                Case Else
                    '* file to store *
                    last_caracter = Mid(z_ltr_file, 33, 1)
                    Select Case last_caracter
                        Case "-"  '* attachement'
                            attachement_type = Mid(z_ltr_file, 14, 1)
                            Select Case attachement_type
                                Case "Z" '* e_mail send confirmation to finalize *
                                    delete_existing_acknowledgments_of_receipt
                                    '* open document *
                                    copy_file z_ltr_full_name, working_storage_directory + "\Y" + Mid(z_ltr_name, 2)
                                    Documents.Open FileName:=working_storage_directory + "\Y" + Mid(z_ltr_name, 2)
                                    '* add thumbnail of first page *
 
'CPA added ISU name to file saved to SEND_DETAILS_DIRECTORY

'CPA TEMPORARY COMMENTED DURING MIX W2K & W7
'                                    thumbnail_file = z_ltr_isu + Mid(z_ltr_file, 1, 13) + "S" + Mid(z_ltr_file, 15, 18) + "0.doc"
                                    thumbnail_file = Mid(z_ltr_file, 1, 13) + "S" + Mid(z_ltr_file, 15, 18) + "0.doc"
'CPA END TEMPORARY COMMENTED DURING MIX W2K & W7
                                    
'CPA 20150624 copy first from user_file directory
                                    copy_file user_file + thumbnail_file, send_details_directory + "\" + thumbnail_file
                                    copy_file send_details_directory + "\" + thumbnail_file, working_storage_directory + "\" + thumbnail_file
'CPA 20150624 END copy first from user_file directory
                                    insert_thumbnail working_storage_directory + "\" + thumbnail_file, "EM" ' [PDE] 23-Avr-2010 Cause Problem Ouverture Doc sans le refermer / Word.Picture not available in 2007
                                    '* protect confirmation report *
                                    ActiveDocument.Protect Password:=ICS_password, NoReset:=False, Type:=wdAllowOnlyFormFields
                                    '* save letter in user's file *
                                    file_name = Mid(z_ltr_file, 1, 13) + "X" + Mid(z_ltr_file, 15) + z_ltr_ext
                                    save_file (working_storage_directory + "\" + file_name)
                                    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                                    copy_file working_storage_directory + "\" + file_name, user_file + file_name
                                    '* close document *
                                    '* copy letter to backup directory *
                                    copy_file user_file + file_name, backup_directory + "\X----" + file_name
                                    
'                                   Transfer to UFM
                                    copy_file working_storage_directory + "\" + file_name, documents_for_UFM_directory + "\" + file_name
                                    
                                    

                                    '* delete working file in send details directory *
                                    delete_file (send_details_directory + "\" + thumbnail_file)
                                    delete_file (working_storage_directory + "\*.*")
                                Case Else '* other attachement *
                                    If (attachement_type = "X") Then '* fax acknowledgement of receipt *
                                        delete_existing_acknowledgments_of_receipt
                                    End If
                                    '* copy to user's file *
                                    file_name = user_file + z_ltr_file + z_ltr_ext
                                    copy_file z_ltr_full_name, file_name
                                    '* copy to backup directory *
                                    file_name = backup_directory + "\X----" + z_ltr_file + z_ltr_ext
                                    copy_file z_ltr_full_name, file_name
                                    '* transfer to UFM *
                                    file_name = documents_for_UFM_directory + "\" + z_ltr_file + z_ltr_ext
                                    copy_file z_ltr_full_name, file_name
                            End Select
                        Case Else  '* ICS document to expand *
                            '* copy to user's file *
                            file_name = user_file + z_ltr_file + z_ltr_ext
                            copy_file z_ltr_full_name, file_name
                            '* copy to working storage directory *
                            file_name = working_storage_directory + "\temporary_file.doc"
                            copy_file z_ltr_full_name, file_name
                            '* open letter *
                            Documents.Open FileName:=file_name
                            ActiveDocument.Tables(1).Select
                            With Selection.ParagraphFormat
                                 .SpaceBefore = 0
                                 .SpaceBeforeAuto = False
                                 .SpaceAfter = 0
                                 .SpaceAfterAuto = False
                                 .LineSpacingRule = wdLineSpaceSingle
                           End With
                            
                            '* expand letter *
                            expand_letter
                            '* save result *
                            '* format : "mwa#EM#0022720040526SAP11ExxxML000000010#AIR FRANCE
                            '            #marc=wauters@eurocontrol=int#crco=R5@eurocontrol=int.pdf"
                            '* format : "mwa#LT#0022720040526SAP11ExxxML000000010#AIR FRANCE#-#-.doc"
                            '* format : "mwa#FX#0022720040526SAP11ExxxML000000010#AIR FRANCE#027299092#-.doc"
                            '* format : "mwa#FM#0022720040526SAP11ExxxML000000010#AIR FRANCE#-#-.doc"
                            Select Case z_ltr_format
                                Case "non"
                                    '* save letter in documents to send directory *
                                    file_name = z_ltr_isu + "#" + "NO" + "#" + z_ltr_file + "#" + z_ltr_user_label + "#-#-.doc"
                                    save_file (working_storage_directory + "\" + file_name)
                                    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                                    copy_file working_storage_directory + "\" + file_name, documents_to_send_directory + "\" + file_name
                                    delete_file (working_storage_directory + "\" + file_name)
                                
                                
                                Case "emr"
                                    '* find e-mail address to send *
                                    z_ltr_e_mail = "-"
                                    ActiveDocument.Tables(1).Cell(7, 3).Select


'* MODIFICATION FROM CPA ON 20100209 : change of template "E-Mail :" by "Email :"
        '* first replace old layout by new
        '*  then replace new by "".
        '* this procedure is necessary because not all templates were changed at this time.
        
                                    Selection.Find.ClearFormatting
                                          With Selection.Find
                                              .Text = "E-Mail :"
                                              .Replacement.Text = "Email :"
                                              .Forward = True
                                              .Wrap = wdFindStop
                                              .Format = False
                                              .MatchCase = True
                                              .MatchWholeWord = False
                                              .MatchWildcards = False
                                              .MatchSoundsLike = False
                                              .MatchAllWordForms = False
                                          End With
                                          Selection.Find.Execute Replace:=wdReplaceAll

'* MODIFICATION FROM CPA ON 20110127 : Reselect table, otherwize, it doesn't work in 2007
                                    ActiveDocument.Tables(1).Cell(7, 3).Select
'* END MODIFICATION FROM CPA ON 20110127 : Reselect table, otherwize, it doesn't work in 2007

                                          Selection.Find.ClearFormatting
                                          With Selection.Find
                                            .Text = "Email :"
                                            .Replacement.Text = ""
                                            .Forward = True
                                            .Wrap = wdFindStop
                                            .Format = False
                                            .MatchCase = True
                                            .MatchWholeWord = False
                                            .MatchWildcards = False
                                            .MatchSoundsLike = False
                                            .MatchAllWordForms = False
                                          End With
                                        Selection.Find.Execute
                                    
'* END MODIFICATION FROM CPA ON 20100209 : change of template "E-Mail :" by "Email :"
                                    
                                    If Selection.Find.Found Then
                                        Selection.MoveRight Unit:=wdCharacter, Count:=1
                                        Selection.EndKey Unit:=wdLine, Extend:=wdExtend
                                        Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
                                        z_ltr_e_mail = Trim(Replace(Replace(Selection.Text, Chr(13), ""), Chr(7), ""))
                                    End If
                                    '* no e-mail address found in document *
                                    If (z_ltr_e_mail = "") Then
                                        z_ltr_e_mail = "-"
                                    End If
                                    '* replace "." by "=" *
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, ".", "=")
                                    '* replace forbidden caracters *
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, "\", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, "/", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, ":", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, "*", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, "?", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, """", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, "<", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, ">", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, "|", "")
                                    z_ltr_e_mail = Replace(z_ltr_e_mail, ",", ".")
                                    '* find reply address *
                                    ActiveDocument.Tables(1).Cell(5, 2).Select
                                    z_ltr_reply = Trim(Replace(Replace(Selection.Text, Chr(13), ""), Chr(7), ""))
                                    Selection.MoveRight Unit:=wdCharacter, Count:=1
                                    '* no e-mail address found in document *
                                    If (z_ltr_reply = "") Then
                                        z_ltr_reply = "-"
                                    End If
                                    '* replace "." by "=" *
                                    z_ltr_reply = Replace(z_ltr_reply, ".", "=")
                                    '* convert letter in PDF *
                                    ActivePrinter = "Adobe PDF"
                                    Application.PrintOut FileName:="", _
                                                         Range:=wdPrintAllDocument, _
                                                         Item:=wdPrintDocumentContent, _
                                                         Copies:=1, _
                                                         Pages:="", _
                                                         PageType:=wdPrintAllPages, _
                                                         Collate:=True, _
                                                         Background:=False, _
                                                         PrintToFile:=False, _
                                                         PrintZoomColumn:=0, _
                                                         PrintZoomRow:=0, _
                                                         PrintZoomPaperWidth:=0, _
                                                         PrintZoomPaperHeight:=0
                                    '* prepare confirmation report *
                                    
                                    If (Mid(z_ltr_file, 20, 1) <> "X") Then
                                        If (Selection.Information(wdNumberOfPagesInDocument) > 1) Then
                                            Selection.HomeKey Unit:=wdStory
                                            Selection.GoTo what:=wdGoToPage, Which:=wdGoToNext, Count:=1
                                            Selection.EndKey Unit:=wdStory, Extend:=wdExtend
                                            Selection.Delete
                                            '* delete header and footer *
                                            With ActiveDocument.Sections(2)
                                                .Headers(wdHeaderFooterPrimary).LinkToPrevious = False
                                                .Headers(wdHeaderFooterPrimary).Range.Text = ""
                                                .Footers(wdHeaderFooterPrimary).Range.Text = ""
                                            End With
                                        End If
                                        '* set orientation to portrait *
                                        ActiveDocument.PageSetup.Orientation = wdOrientPortrait
                                        '* save first page in send details directory *
                                        file_name = z_ltr_file + z_ltr_ext
 
 'CPA added ISU name to file saved to SEND_DETAILS_DIRECTORY
 
'CPA TEMPORARY COMMENTED DURING MIX W2K & W7
'                                        save_file (working_storage_directory + "\" + z_ltr_isu + file_name)
                                        save_file (working_storage_directory + "\" + file_name)
                                        
                                        ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
'                                        copy_file working_storage_directory + "\" + z_ltr_isu + file_name, send_details_directory + "\" + z_ltr_isu + file_name
'                                        delete_file (working_storage_directory + "\" + z_ltr_isu + file_name)
                                        copy_file working_storage_directory + "\" + file_name, send_details_directory + "\" + file_name
                                        delete_file (working_storage_directory + "\" + file_name)
'CPA END TEMPORARY COMMENTED DURING MIX W2K & W7
                                    
                                    Else
                                        '* close document *
                                        ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                                    End If
                                   '* copy to documents_to_send_directory *
                                    On Error Resume Next
                                    file_name = z_ltr_isu + "#" + "EM" + "#" + z_ltr_file + "#" + z_ltr_user_label + "#" + z_ltr_e_mail + "#" + z_ltr_reply + ".pdf"
copy_file:
                                    

                                    copy_file working_storage_directory + "\temporary_file.pdf", documents_to_send_directory + "\" + file_name
                                    If (Err.Number <> 0) Then
                                        start = Timer
                                        Do While Timer < start + 5
                                            DoEvents
                                        Loop
                                        Err.Clear
                                        GoTo copy_file
                                    End If
                                    On Error GoTo 0
copy_for_UFM:
'                                   Transfer to UFM
                                    copy_file working_storage_directory + "\temporary_file.pdf", documents_for_UFM_directory + "\" + Mid(file_name, 8, 33) + Right(file_name, 4)
                                    If (Err.Number <> 0) Then
                                        start = Timer
                                        Do While Timer < start + 5
                                            DoEvents
                                        Loop
                                        Err.Clear
                                        GoTo copy_for_UFM
                                    End If
                                    On Error GoTo 0
                                
                                
                                
                                
                                
                                Case "fxr"
                                    '* find fax number *
                                    z_ltr_fax = ""
                                    ActiveDocument.Tables(1).Cell(7, 3).Select
                                    Selection.Find.ClearFormatting
                                      
'* MODIFICATION FROM CPA ON 20100209 : change of template "Fax.    :" by "Fax    :"
        '* first replace old layout by new
        '*  then replace new by "".
        '* this procedure is necessary because not all templates were changed at this time.
                                      
                                      With Selection.Find
                                          .Text = "Fax.    :"
                                          .Replacement.Text = "Fax    :"
                                          .Forward = True
                                          .Wrap = wdFindStop
                                          .Format = False
                                          .MatchCase = True
                                          .MatchWholeWord = False
                                          .MatchWildcards = False
                                          .MatchSoundsLike = False
                                          .MatchAllWordForms = False
                                      End With
                                      Selection.Find.Execute Replace:=wdReplaceAll
                                      Selection.Find.ClearFormatting
                                      With Selection.Find
                                          .Text = "Fax    :"
                                          .Replacement.Text = ""
                                          .Forward = True
                                          .Wrap = wdFindStop
                                          .Format = False
                                          .MatchCase = True
                                          .MatchWholeWord = False
                                          .MatchWildcards = False
                                          .MatchSoundsLike = False
                                          .MatchAllWordForms = False
                                      End With
                                      Selection.Find.Execute
                                    
'* END MODIFICATION FROM CPA ON 20100209 : change of template "Fax.    :" by "Fax    :"
                                    
                                    If Selection.Find.Found Then
                                        Selection.MoveRight Unit:=wdCharacter, Count:=1
                                        Selection.EndKey Unit:=wdLine, Extend:=wdExtend
                                        z_ltr_fax = Trim(Replace(Replace(Selection.Text, Chr(13), ""), Chr(7), ""))
                                        Selection.MoveRight Unit:=wdCharacter, Count:=1
                                    End If
                                    If (z_ltr_fax = "") Then
                                        z_ltr_fax = "999999999"
                                    End If
                                    '* replace forbidden caracters *
                                    z_ltr_fax = Replace(z_ltr_fax, "\", "")
                                    z_ltr_fax = Replace(z_ltr_fax, "/", "")
                                    z_ltr_fax = Replace(z_ltr_fax, ":", "")
                                    z_ltr_fax = Replace(z_ltr_fax, "*", "")
                                    z_ltr_fax = Replace(z_ltr_fax, "?", "")
                                    z_ltr_fax = Replace(z_ltr_fax, """", "")
                                    z_ltr_fax = Replace(z_ltr_fax, "<", "")
                                    z_ltr_fax = Replace(z_ltr_fax, ">", "")
                                    z_ltr_fax = Replace(z_ltr_fax, "|", "")
                                    z_ltr_fax = Replace(z_ltr_fax, ".", "")
                                    z_ltr_fax = Replace(z_ltr_fax, " ", "")
                                    z_ltr_fax = Replace(z_ltr_fax, "+", "")
                                    '* insert Zetafax commands *
                                    Selection.HomeKey Unit:=wdStory
                                    Selection.MoveDown Unit:=wdLine, Count:=1
                                    Selection.Style = ActiveDocument.Styles("Normal")
                                    Selection.Font.Name = "Arial"
                                    Selection.Font.Color = wdColorWhite
                                    Selection.Font.Size = 1
                                    Selection.TypeText Text:=" %%[TO:" + z_ltr_fax + "," + z_ltr_user_label + "] %%[COVERSHEET: ] "
                                    Selection.EndKey Unit:=wdStory
                                    Selection.Style = ActiveDocument.Styles("Normal")
                                    Selection.Font.Name = "Arial"
                                    Selection.Font.Color = wdColorWhite
                                    Selection.Font.Size = 1
                                    Selection.TypeText Text:="A   %%[SEND]   "
                                    '* save letter in documents to send directory *
                                    file_name = z_ltr_isu + "#" + "FX" + "#" + z_ltr_file + "#" + z_ltr_user_label + "#" + z_ltr_fax + "#-.doc"
                                    save_file (working_storage_directory + "\" + file_name)
                                    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                                    copy_file working_storage_directory + "\" + file_name, documents_to_send_directory + "\" + file_name
'                                   Transfer to UFM
                                    copy_file working_storage_directory + "\" + file_name, documents_for_UFM_directory + "\" + Mid(file_name, 8, 33) + Right(file_name, 4)


                                
                                
                                Case "fmr"
                                    '* save letter in documents to send directory *
                                    file_name = z_ltr_isu + "#" + "FM" + "#" + z_ltr_file + "#" + z_ltr_user_label + "#-#-.doc"
                                    save_file (working_storage_directory + "\" + file_name)
                                    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                                    copy_file working_storage_directory + "\" + file_name, documents_to_send_directory + "\" + file_name
'                                   Transfer to UFM
                                    copy_file working_storage_directory + "\" + file_name, documents_for_UFM_directory + "\" + Mid(file_name, 8, 33) + Right(file_name, 4)



                                Case "ltr"
                                    '* add the acknowledgment of receipt at then end of the document *
                                    If (Mid(z_ltr_file, 20, 1) = "R") Then
                                        ActiveDocument.Save
                                        ActiveDocument.Close
                                        copy_file file_name, Strings.Replace(file_name, "temporary_file", "temporary_img") ' [PDE] 06-Mai-2010
                                        Documents.Open file_name
                                        '* create new section *
                                        Selection.EndKey Unit:=wdStory
                                        Selection.InsertBreak Type:=wdSectionBreakNextPage
                                        '* insert the letter confirmation blank form *

                                        copy_file confirmation_forms_directory + "\Letter_Confirmation_Form.doc", working_storage_directory + "\Letter_Confirmation_Form.doc"
                                        '* insert the letter confirmation blank form *
                                        Selection.InsertFile FileName:=working_storage_directory + "\Letter_Confirmation_Form.doc", _
                                                             Range:="", _
                                                             ConfirmConversions:=False, _
                                                             Link:=False, _
                                                             Attachment:=False
                                        '* suppress inherited headers and footers *


                                         With Selection.Sections(1)
                                            .Headers(wdHeaderFooterPrimary).LinkToPrevious = False
                                            .Headers(wdHeaderFooterPrimary).Range.Text = ""
                                            .Footers(wdHeaderFooterPrimary).Range.Text = ""
                                        End With
                                        
                                        
                                        '* add thumbnail of first page *
                                        thumbnail_file = working_storage_directory + "\temporary_img.doc"
                                        insert_thumbnail thumbnail_file, "LT" ' [PDE] 23-Avr-2010 Cause Problem Ouverture Doc sans le refermer / Word.Picture not available in 2007
                                    End If
                                    '* save letter in documents to send directory *
                                    file_name = z_ltr_isu + "#" + "LT" + "#" + z_ltr_file + "#" + z_ltr_user_label + "#-#-.doc"
                                    save_file (working_storage_directory + "\" + file_name)
                                    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                                    copy_file working_storage_directory + "\" + file_name, documents_to_send_directory + "\" + file_name
'                                   Transfer to UFM
                                    copy_file working_storage_directory + "\" + file_name, documents_for_UFM_directory + "\" + Mid(file_name, 8, 33) + Right(file_name, 4)



                            End Select
                            '* clear working storage directory *
                            delete_file (working_storage_directory + "\*.*")
                    End Select
            End Select
            
            oLOG.Close
            Set oLOG = Nothing
            Set oFilSys = Nothing
            
            ' Update LogFile [BEG]
            Set oFilSys = CreateObject("Scripting.FileSystemObject")
            Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
            oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " Delivered")
            oLOG.Close
            Set oLOG = Nothing
            Set oFilSys = Nothing
            ' Update LogFile [BEG]
            '* delete letter to expand in documents_to_expand_directory *
            delete_file (z_ltr_full_name)
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    '* sleep *
    On Error GoTo 0
    
    start = Timer
    Do While Timer < start + 10
        DoEvents
    Loop
    

    GoTo start
    
End Sub
Sub insert_thumbnail(file_name, form_type)
    ImageWriter_Name = Strings.Replace(file_name, ".doc", ".tif")
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    If oFilSys.FileExists(ImageWriter_Name) = True Then
        oFilSys.DeleteFile ImageWriter_Name, True
    End If
    Documents.Open file_name, False, True, False
    ActivePrinter = "Microsoft Office Document Image Writer"
    Application.PrintOut OutputFileName:=ImageWriter_Name, FileName:="", Range:=wdPrintAllDocument, Item:= _
        wdPrintDocumentContent, Copies:=1, Pages:="", PageType:=wdPrintAllPages, _
        ManualDuplexPrint:=False, Collate:=True, Background:=False, PrintToFile:= _
        True, PrintZoomColumn:=0, PrintZoomRow:=0, PrintZoomPaperWidth:=0, _
        PrintZoomPaperHeight:=0
        


    ActiveDocument.Close
    n = ActiveDocument.Tables.Count
    ActiveDocument.Tables(n).Cell(10, 1).Select
    Selection.Delete
    ActiveDocument.Tables(n).Cell(10, 1).Select
    Selection.InlineShapes.AddPicture Strings.Replace(file_name, ".doc", ".tif"), False, True
    ActiveDocument.Tables(n).Cell(10, 1).Select
    With Selection.InlineShapes(1)
      .Fill.Visible = msoFalse
      .Fill.Solid
      .Fill.Transparency = 0#
      .Line.Weight = 0.75
      .Line.Transparency = 0#
      .Line.Visible = msoFalse
      .LockAspectRatio = msoTrue
      If (form_type = "LT") Then
         .Height = 451
         .Width = 308
       Else
         .Height = 635
         .Width = 435
       End If
      .PictureFormat.Brightness = 0.5
      .PictureFormat.Contrast = 0.5
      .PictureFormat.ColorType = msoPictureAutomatic
      .PictureFormat.CropLeft = 0#
      .PictureFormat.CropRight = 0#
      .PictureFormat.CropTop = 0#
      .PictureFormat.CropBottom = 0#
    End With
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    oFilSys.DeleteFile ImageWriter_Name, True
    Set oFilSys = Nothing
End Sub
Sub delete_existing_acknowledgments_of_receipt()
    On Error Resume Next
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = Mid(z_ltr_file, 1, 13) + "X" + Mid(z_ltr_file, 15, 18) + "-.???"
    oregexp.Pattern = Mid(z_ltr_file, 1, 13) + "X" + Mid(z_ltr_file, 15, 18) + "-\...."
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(user_file)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            copy_file ofillst, backup_directory + "\" + "X###-" + Right(ofillst, 37)
            delete_file (ofillst)
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
End Sub
Sub expand_letter()
    
   '* suppress remaining bookmarks *
  
    While ActiveDocument.Bookmarks.Count > 0
        bookmark_name = ActiveDocument.Bookmarks(1).Name
        ActiveDocument.Bookmarks(bookmark_name).Delete
    Wend
    
   '* set initial page setup *
   
    set_page_set_up 0.75, 0.75, 0.95, 0.7
   
   '* find first command line *
   
    Selection.HomeKey Unit:=wdStory
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "[Type=std;Side="
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    
   '* find letter format *
   
    Selection.MoveRight Unit:=wdCharacter, Count:=12
    Selection.MoveRight Unit:=wdCharacter, Count:=3, Extend:=wdExtend
    z_ltr_format = Selection.Text
    

   '* replace contact fax number, generic and personal e_mail address by '******'
   '* to avoid replacement by 'display_e_mail' and 'display_fax_number'
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=14
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    Selection.Text = "******"
    Selection.MoveRight Unit:=wdCharacter, Count:=19
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    Selection.Text = "******"
    Selection.MoveRight Unit:=wdCharacter, Count:=2
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=8
    Selection.Extend (";")
    If (Selection) = "]" Then
        GoTo finselection
    End If
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    Selection.Text = "******"
    Selection.MoveRight Unit:=wdCharacter, Count:=1
   
   '* goto end of letter *
finselection:
    
    
    Selection.Find.Execute
    Selection.HomeKey Unit:=wdLine
    
    If (z_ltr_format = "ltr") Then
        Selection.InsertBreak Type:=wdSectionBreakNextPage
        Selection.Extend ("]")
        Selection.MoveRight Unit:=wdCharacter, Count:=2
    Else
        Selection.Extend ("]")
        Selection.Delete
        Selection.MoveRight Unit:=wdCharacter, Count:=1

    End If
    
   '* find annex list *
    
    Selection.EndKey Unit:=wdStory, Extend:=wdExtend
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    Selection.Fields.ToggleShowCodes
    
    anx_list = Selection.Text
    Selection.Delete
    
   '* for each annex *
   
    i = InStr(1, anx_list, Chr(34))
    
    While i > 0
    
      Selection.EndKey Unit:=wdStory
      j = InStr(i + 1, anx_list, Chr(34))
      file_name = Mid(anx_list, i + 1, j - i - 1)
      file_name = Replace(file_name, "\\", "\")
      
      If Right(file_name, 37) Like "?????20?????????????????????????-.???" Then
      
         file_extension = Right(file_name, 3)
         file_type = Mid(Right(file_name, 37), 14, 1)
            
         Select Case file_extension
      
            Case "doc"
            
              If file_type = "S" Then
                 generate_ics_attachement (file_name)
              Else
                 generate_usr_attachement (file_name)
              End If
              
            Case "rtf", "txt"
            
                 generate_usr_attachement (file_name)

            Case "xls"
            
              generate_xls_attachement (file_name)
                        
            Case "jpg", "png", "bmp", "tif", "gif"
            
              generate_pic_attachement (file_name)
         
         End Select
         
      End If
      
      i = InStr(j + 1, anx_list, Chr(34))
      
    Wend
    
    '* load mask *
      
     v_side = ""
     v_reset_address = False
     load_masks_for_entire_document (v_side)

    '* unlink all fields *
    
     Selection.WholeStory
     Selection.Fields.Unlink
     Selection.HomeKey Unit:=wdStory

End Sub
Sub generate_ics_attachement(file_name)

    copy_file file_name, working_storage_directory + "\" + Right(file_name, 37)
    file_name = working_storage_directory + "\" + Right(file_name, 37)
    
    Dim fso
    Dim file As String
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    If Not fso.FileExists(file_name) Then
        MsgBox file_name & " was not located.", vbInformation, "File Not Found"
        Exit Sub
    End If
    
    
    '* bookmark start of this annex *
    
     bookmark_name = "P_THIS_ANNEX"
     With ActiveDocument.Bookmarks
         .Add Range:=Selection.Range, Name:=bookmark_name
         .DefaultSorting = wdSortByName
         .ShowHidden = True
     End With
    
    Selection.InsertFile FileName:=file_name, Range:="", _
                            ConfirmConversions:=False, Link:=False, Attachment:=False
                              
                              
    '* set the annex in courier new 10 *
    
     Selection.GoTo what:=wdGoToBookmark, Name:="P_THIS_ANNEX"
     Selection.EndKey Unit:=wdStory, Extend:=wdExtend
     
     
     Selection.Font.Name = "Courier New"
     Selection.Font.Size = 10
      
    '* set each command line in ics-cmd style and insert section break *
     
     Selection.GoTo what:=wdGoToBookmark, Name:="P_THIS_ANNEX"
     Selection.Find.ClearFormatting
     With Selection.Find
        .Text = "[Type=anx;Side="
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
     End With
     Selection.Find.Execute
     While Selection.Find.Found
        Selection.MoveRight Unit:=wdCharacter, Count:=1
        Selection.MoveRight Unit:=wdCharacter, Count:=5, Extend:=wdExtend
        Side = Selection.Text
        Selection.HomeKey Unit:=wdLine
        
        If Side = "recto" Then
        
          '* insert page break *
          
           Selection.InsertBreak Type:=wdSectionBreakNextPage
           
          '* set page orientation and margins *
          
          set_page_set_up_for_section 0.4, 0.75, 0.95, 0.7
           
          '* set style of command line *
          
           Selection.EndKey Unit:=wdLine, Extend:=wdExtend
           Selection.Style = ActiveDocument.Styles("ics-cmd")
           Selection.MoveRight Unit:=wdCharacter, Count:=1
           
          '* specific formatting for annex *
          
           Selection.TypeParagraph
           Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
           Selection.Font.Size = 3
           Selection.MoveDown Unit:=wdLine, Count:=1
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
           Selection.TypeParagraph
        
        Else
        
           If (z_ltr_format <> "ltr") Then

             '* delete verso command line *
             
              Selection.EndKey Unit:=wdLine, Extend:=wdExtend
              last_cmd_line = Selection.Text
              Selection.Delete
           
           Else
       
            '* consider verso command line *
            
             Selection.InsertBreak Type:=wdSectionBreakNextPage
             
            '* set style of command line *
            
             Selection.EndKey Unit:=wdLine, Extend:=wdExtend
             Selection.Style = ActiveDocument.Styles("ics-cmd")
             Selection.MoveRight Unit:=wdCharacter, Count:=1
             
            '* set page orientation and margins *
             
             set_page_set_up_for_section 0.4, 0.75, 0.95, 0.7

           End If
           
        End If
        
        Selection.Find.Execute
        
     Wend
     
     If (z_ltr_format <> "ltr") Then

       '* restore the last verso command line *
       
        Selection.EndKey Unit:=wdStory
        Selection.InsertBreak Type:=wdSectionBreakNextPage
        Selection.TypeText Text:=last_cmd_line
        
       '* set style of command line *
            
        Selection.MoveUp Unit:=wdLine, Extend:=wdExtend
        Selection.Style = ActiveDocument.Styles("ics-cmd")
        Selection.MoveRight Unit:=wdCharacter, Count:=1
             
       '* set page orientation and margins *
             
        set_page_set_up_for_section 0.75, 0.75, 0.95, 0.7
        
     End If
end_gen:
    '* delete bookmark *
    
     ActiveDocument.Bookmarks("P_THIS_ANNEX").Delete

End Sub
Sub generate_xls_attachement(file_name)
    copy_file file_name, working_storage_directory + "\" + Right(file_name, 37)
    file_name = working_storage_directory + "\" + Right(file_name, 37)
    
    Dim fso
    Dim file As String
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    If Not fso.FileExists(file_name) Then
        MsgBox file_name & " was not located.", vbInformation, "File Not Found"
        Exit Sub
    End If

    '* insert page break *
    
     Selection.InsertBreak Type:=wdSectionBreakNextPage
     
    '* set page setup *
    
     set_page_set_up_for_section 0.75, 0.75, 0.95, 0.7

    '* insert command line *
    
     Selection.TypeText Text:="[Type=anx;Side=recto;Mask=none;]"
     Selection.TypeParagraph
     Selection.MoveUp Unit:=wdLine, Count:=1
     Selection.HomeKey Unit:=wdLine
     Selection.EndKey Unit:=wdLine, Extend:=wdExtend
     Selection.Style = ActiveDocument.Styles("ics-cmd")
     Selection.MoveRight Unit:=wdCharacter, Count:=1
     
'    '* open excel application *

     
     Dim ExcelSheet As Object
     
     Set ExcelSheet = CreateObject("excel.application")
        ExcelSheet.Application.Visible = False
        ExcelSheet.Application.workbooks.Open FileName:=file_name
    '* find range of cells to insert *
    
     l1 = 50
     l2 = 0
     c1 = 26
     c2 = 0

     For l = 1 To 50
       For c = 1 To 26
         If ExcelSheet.Application.Cells(l, c).Value <> Empty Then
           If (l < l1) Then
             l1 = l
           End If
           If (l > l2) Then
             l2 = l
           End If
           If (c < c1) Then
             c1 = c
           End If
           If (c > c2) Then
             c2 = c
           End If
         End If
       Next c
     Next l
     
     ExcelSheet.Application.Range(ExcelSheet.Application.Cells(l1, c1), ExcelSheet.Application.Cells(l2, c2)).Select
     
    '* copy selected range to clipboard *
    
     ExcelSheet.Application.Selection.Copy
    
    '* insert selected cells as picture into Word documents *
    
     Selection.PasteSpecial Link:=False, Datatype:=wdPasteBitmap, _
               Placement:=wdFloatOverText, DisplayAsIcon:=False
     
    '* empty clipboard dans quit excel application *
     ExcelSheet.Application.cutcopymode = False
     
     ExcelSheet.Application.Quit

    
    '* release excel object *
    
     Set ExcelSheet = Nothing
     
     
    '* set optimal picture size according to page orientation *

     format_picture 540, 750
     
    '* new line to separate picture from next lines *
    
     Selection.TypeParagraph

    '* format letter : insert last blank verso *
    
     If (z_ltr_format = "ltr") Then
        Selection.InsertBreak Type:=wdPageBreak
    End If
end_gen:
End Sub
Sub generate_pic_attachement(file_name)

    copy_file file_name, working_storage_directory + "\" + Right(file_name, 37)
    file_name = working_storage_directory + "\" + Right(file_name, 37)
    
    Dim fso
    Dim file As String
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    If Not fso.FileExists(file_name) Then
        MsgBox file_name & " was not located.", vbInformation, "File Not Found"
        Exit Sub
    End If
    
    '* insert page break *
    
     Selection.InsertBreak Type:=wdSectionBreakNextPage
     
     '* set page setup *
     
     set_page_set_up_for_section 0.75, 0.75, 0.95, 0.7
     
    '* insert command line *
    
     Selection.TypeText Text:="[Type=anx;Side=recto;Mask=none;]"
     Selection.TypeParagraph
     Selection.MoveUp Unit:=wdLine, Count:=1
     Selection.HomeKey Unit:=wdLine
     Selection.EndKey Unit:=wdLine, Extend:=wdExtend
     Selection.Style = ActiveDocument.Styles("ics-cmd")
     Selection.MoveRight Unit:=wdCharacter, Count:=1
     Selection.TypeParagraph
     
    '* insert picture *
    
    Selection.InlineShapes.AddPicture FileName:=file_name, _
                                       LinkToFile:=False, _
                                       SaveWithDocument:=True
    
     Selection.TypeParagraph
                                      
    '* convert to shape *
    
     Selection.MoveLeft Unit:=wdCharacter, Count:=1
     Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
     Selection.InlineShapes(1).ConvertToShape
     
    '* set optimal picture size according to page orientation *
    
     format_picture 595, 842
     
    '* format letter : insert last blank verso *
    
     If (z_ltr_format = "ltr") Then
        Selection.InsertBreak Type:=wdPageBreak
     End If
end_gen:
End Sub
Sub generate_usr_attachement(file_name)

    copy_file file_name, working_storage_directory + "\" + Right(file_name, 37)
    file_name = working_storage_directory + "\" + Right(file_name, 37)
    
    Dim fso
    Dim file As String
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    If Not fso.FileExists(file_name) Then
        MsgBox file_name & " was not located.", vbInformation, "File Not Found"
        Exit Sub
    End If
    
    '* insert page break *
    
     Selection.InsertBreak Type:=wdSectionBreakNextPage
     
    '* bookmark start of this annex *
    
     bookmark_name = "P_THIS_ANNEX"
     With ActiveDocument.Bookmarks
         .Add Range:=Selection.Range, Name:=bookmark_name
         .DefaultSorting = wdSortByName
         .ShowHidden = True
     End With
    Documents.Open FileName:=file_name
    Selection.WholeStory
    Selection.Copy
    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
    Selection.PasteAndFormat wdFormatOriginalFormatting
    '* page set up *
     
     If (Left(Right(file_name, 24), 1) = "X") Then
        set_page_set_up_for_section 0.75, 0.75, 0.95, 0.7
     Else
       set_page_set_up_for_section 2#, 0.5, 2#, 2#
    End If
    
    '* add command line *
    
     Selection.GoTo what:=wdGoToBookmark, Name:="P_THIS_ANNEX"
     Selection.TypeText Text:="[Type=anx;Side=recto;Mask=none;]"
     Selection.TypeParagraph
     Selection.MoveUp Unit:=wdLine, Count:=1
     Selection.HomeKey Unit:=wdLine
     Selection.EndKey Unit:=wdLine, Extend:=wdExtend
     Selection.Style = ActiveDocument.Styles("ics-cmd")
     Selection.MoveRight Unit:=wdCharacter, Count:=1
    
    '* for each page inserted *

next_page:

    '* delete header and footer *
           
     With Selection.Sections(1)
       
       .Footers(wdHeaderFooterPrimary).Range.Text = ""
       .Headers(wdHeaderFooterPrimary).Range.Text = ""
     End With
    
     If (Selection.Information(wdActiveEndPageNumber) < (Selection.Information(wdNumberOfPagesInDocument))) Then
        
        Selection.GoTo what:=wdGoToPage, Which:=wdGoToNext, Count:=1
           
       '* select page break *
          
        Selection.MoveUp Unit:=wdLine, Count:=1
        Selection.HomeKey Unit:=wdLine
        Selection.EndKey Unit:=wdLine, Extend:=wdExtend
          
       '* document already contains manual breaks *
        
        If (Selection.Text = Chr(12)) Then
           Selection.MoveRight Unit:=wdCharacter, Count:=1
        Else
          Selection.MoveRight Unit:=wdCharacter, Count:=1
          Selection.InsertBreak Type:=wdPageBreak
        End If
           
       '* format letter : insert blank verso *
               
        If (z_ltr_format = "ltr") Then
           Selection.InsertBreak Type:=wdPageBreak
        End If

        GoTo next_page

     End If
        
    '* format letter : insert last blank verso *
               
     If (z_ltr_format = "ltr") Then
        Selection.EndKey Unit:=wdStory
        Selection.InsertBreak Type:=wdPageBreak
     End If

    '* delete bookmark *
    
     ActiveDocument.Bookmarks("P_THIS_ANNEX").Delete
end_gen:
End Sub
Sub format_picture(page_width, page_height)

    '* select picture inserted *
    
     ActiveDocument.Sections(1) _
                       .Range.ShapeRange(1).Select
     
     With Selection.ShapeRange
     
       '* resize picture according to page and set paper orientation *
        
        If (.Height < .Width) Then
           ActiveDocument.Sections(1) _
                             .PageSetup.Orientation = wdOrientLandscape
           .Height = page_width
           If (.Width > page_height) Then
              .Width = page_height
           End If
        Else
           ActiveDocument.Sections(1) _
                             .PageSetup.Orientation = wdOrientPortrait
           .Width = page_width
           If (.Height > page_height) Then
              .Height = page_height
           End If
        End If
       
       '* center picture and define wrap properties *
    
        .Fill.Visible = msoFalse
        .Fill.Transparency = 0#
        .LockAspectRatio = msoTrue
        .PictureFormat.Brightness = 0.5
        .PictureFormat.Contrast = 0.5
        .PictureFormat.ColorType = msoPictureAutomatic
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionPage
        .RelativeVerticalPosition = wdRelativeVerticalPositionPage
        .Left = wdShapeCenter
        .Top = wdShapeCenter
        .LockAnchor = False
        .WrapFormat.AllowOverlap = False
        .WrapFormat.Side = wdWrapBoth
        .WrapFormat.DistanceTop = CentimetersToPoints(0)
        .WrapFormat.DistanceBottom = CentimetersToPoints(0)
        .WrapFormat.DistanceLeft = CentimetersToPoints(0.32)
        .WrapFormat.DistanceRight = CentimetersToPoints(0.32)
        .WrapFormat.Type = 3
        .ZOrder 5
    
     End With
     
     Selection.EndKey Unit:=wdStory

End Sub
Sub clear_clipboard()
     
     
End Sub
Sub send_e_mail()

   Dim bStarted As Boolean
   Dim oOutlookApp As Outlook.Application
   Dim oItem As Outlook.MailItem

  '* update log file *
    On Error Resume Next
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oLOG = oFilSys.OpenTextFile(strSendLogFil, 8, True)
    oLOG.writeLine (Strings.Format(Mid(Str(Date), 7, 4) & "-" + Mid(Str(Date), 4, 2) _
                            & "-" + Mid(Str(Date), 1, 2) & " " & Time$ & " Sending by e-mail " _
                            & z_ltr_std & " to " & z_ltr_adrs & " (" & z_ltr_user_label & ")" _
                            & Chr$(10)))
    oLOG.Close
    Set oLOG = Nothing
    Set oFilSys = Nothing
  
  '* if no send e-mail address specified, then send mail to originator *
  
   If z_ltr_adrs = "-" Then
      z_ltr_adrs = originator_e_mail_address
   End If
   
  '* if no reply e-mail address specified, then set reply address to originator *
  
   If z_ltr_reply = "-" Then
      z_ltr_reply = originator_e_mail_address
   End If
   
  '* parameters *
  
   v_send_to = z_ltr_adrs
   v_reply_to = z_ltr_reply
   v_attachement = working_storage_directory + "\" + z_doc_name + "0" + z_ltr_ext
   
   Select Case Mid(z_ltr_std, 5, 1)
   
   Case "F"
   
     v_subject = v_subject + "Redevances Eurocontrol - Ref "
     v_attachement_name = "documents financiers.pdf"
     v_body = "Veuillez trouver en annexe une communication importante de l'Unit|fffd| Perception des redevances" + Chr(13) + _
              "du Service Central de redevances de route d'EUROCONTROL." + Chr(13) + Chr(13) + _
              "Les noms de l'exp|fffd|diteur et du destinataire sont indiqu|fffd|s sur le document en annexe."

   Case "G"
   
     v_subject = v_subject + "Eurocontrol Gebuhren   - Ref "
     v_attachement_name = "documents.pdf"
     
     v_body = "Bitte finden Sie beiliegend eine wichtige Mitteilung der Abteilung Geb|fffd|hreneinzug" + Chr(13) + _
              "der Zentralen Geb|fffd|hrenstelle von EUROCONTROL." + Chr(13) + Chr(13) + _
              "Die Namen von Absender und Empf|fffd|nger sind in dem beiliegenden Dokument enthalten."

   Case Else
   
     v_subject = v_subject + "Eurocontrol Charges    - Ref "
     v_attachement_name = "documents.pdf"
     
     v_body = "Please find attached an important communication from the Collection Unit" + Chr(13) + _
              "of the EUROCONTROL Central Route Charges Office." + Chr(13) + Chr(13) + _
              "The names of the sender and the addressee are indicated in the attachment."

   End Select

   v_subject = v_subject + Left(z_doc_name, 5)
   v_body = v_body + Chr(13) + Chr(13) + "EUROCONTROL" + Chr(13) + _
              "Central Route Charges Office" + Chr(13) + _
              "Rue de la Fus|fffd|e, 96" + Chr(13) + "B-1130 Brussels (Belgium)" + Chr(13) + Chr(13)

   '* get existing outlook instance *
   
    On Error Resume Next
    Set oOutlookApp = GetObject(, "Outlook.Application")
    
   '* outlook is not running *
   
    If (Err.Number <> 0) Then
        Set oOutlookApp = CreateObject("Outlook.Application")
        bStarted = True
    End If
    On Error GoTo 0
    
   '* create new e-mail *
   
    Set oItem = oOutlookApp.CreateItem(olMailItem)

   '* set e-mail configuration *
    
    With oItem
      .To = v_send_to
      .Subject = v_subject
      .Body = v_body
      .ReplyRecipients.Add v_reply_to
      .Attachments.Add Source:=v_attachement, _
                       Type:=olByValue, _
                       DisplayName:=v_attachement_name
      .DeleteAfterSubmit = True
      
     '* send e-mail *
    
      On Error Resume Next
      .Send
      
     '* in case of error, send mail to originator *
     
      If (Err.Number <> 0) Then
         .To = originator_e_mail_address
         .ReplyRecipients.Item(1).Delete
         .Send
      End If
      On Error GoTo 0
      
    End With

   '* resume outlook application *
   
    If bStarted Then
        oOutlookApp.Quit
    End If

   '* release objects *
    
    Set oItem = Nothing
    Set oOutlookApp = Nothing
    
   '* create confirmation form *
 
    If (Mid(z_doc_name, 20, 1) <> "X") Then
 
      '* open confirmation form *
      
       On Error Resume Next
       file_name = "\E_Mail_Confirmation_Form.doc"
       Documents.Open FileName:=working_storage_directory + file_name, _
                      ConfirmConversions:=False, _
                      ReadOnly:=False, _
                      AddToRecentFiles:=False, _
                      PasswordDocument:="", _
                      PasswordTemplate:="", _
                      Revert:=False, _
                      WritePasswordDocument:="", _
                      WritePasswordTemplate:="", _
                      Format:=wdOpenFormatAuto
     
       If (Err.Number <> 0) Then
    
'          On Error GoTo 0
          On Error Resume Next
       
          copy_file confirmation_forms_directory + file_name, working_storage_directory + file_name
       
          Documents.Open FileName:=working_storage_directory + file_name, _
                         ConfirmConversions:=False, _
                         ReadOnly:=False, _
                         AddToRecentFiles:=False, _
                         PasswordDocument:="", _
                         PasswordTemplate:="", _
                         Revert:=False, _
                         WritePasswordDocument:="", _
                         WritePasswordTemplate:="", _
                         Format:=wdOpenFormatAuto
       Else
         On Error GoTo 0
       End If
    
      '* fill in the form *
        
       ActiveDocument.Tables(1).Cell(3, 4).Select
       Selection.Delete
       Selection.TypeText (Mid(Str(Date), 1, 2) + "-" + Mid(Str(Date), 4, 2) _
                            + "-" + Mid(Str(Date), 7, 4) + " " + Time$)
       ActiveDocument.Tables(1).Cell(4, 4).Select
       Selection.Delete
       Selection.TypeText (z_ltr_user_label)
       ActiveDocument.Tables(1).Cell(5, 4).Select
       Selection.Delete
       Selection.TypeText (z_ltr_adrs)
       ActiveDocument.Tables(1).Cell(7, 4).Select
       Selection.Delete
       Selection.TypeText (originator_e_mail_address)
       ActiveDocument.Tables(1).Cell(8, 4).Select
       Selection.Delete
       Selection.TypeText (Mid(z_doc_name, 25, 8))
       ActiveDocument.Tables(1).Cell(10, 1).Select
       Selection.Delete
                              
      '* store confirmation form in user's files *
          
       file_name = "\X" + LCase(Application.UserInitials) + z_ltr_user_label _
                   + Mid(z_doc_name, 1, 13) + "Z" + Mid(z_doc_name, 15, 18) + "-.doc"

       save_file (working_storage_directory + file_name)
       ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
       copy_file working_storage_directory + file_name, documents_to_expand_directory + file_name
      
    End If
   
End Sub

Sub send_fax()

  '* update log file *
  
    On Error Resume Next
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oLOG = oFilSys.OpenTextFile(strSendLogFil, 8, True)
    oLOG.writeLine (Strings.Format(Mid(Str(Date), 7, 4) & "-" + Mid(Str(Date), 4, 2) _
                            & "-" + Mid(Str(Date), 1, 2) & " " & Time$ & " Sending by fax " _
                            & z_ltr_std & " to " & z_ltr_adrs & " (" & z_ltr_user_label & ")" _
                            & Chr$(10)))
    oLOG.Close
    Set oLOG = Nothing
    Set oFilSys = Nothing
   
   '* parameters *

    file_name = working_storage_directory + "\" + z_doc_name + "0" + z_ltr_ext
    
  '* open document to fax *
  
    Documents.Open FileName:=file_name, _
                   ConfirmConversions:=False, _
                   ReadOnly:=False, _
                   AddToRecentFiles:=False, _
                   PasswordDocument:="", _
                   PasswordTemplate:="", _
                   Revert:=False, _
                   WritePasswordDocument:="", _
                   WritePasswordTemplate:="", _
                   Format:=wdOpenFormatAuto
                   
   ' check if previous Zetafax addressing is finished to avoid "Zetafax busy" message *
   
    Do While Tasks.Exists("Zetafax - Addressing")
       DoEvents
    Loop
       
   '* print document *
    
    ActivePrinter = "Zetafax Printer"
    Application.PrintOut FileName:="", _
                         Range:=wdPrintAllDocument, _
                         Item:=wdPrintDocumentContent, _
                         Copies:=1, _
                         Pages:="", _
                         PageType:=wdPrintAllPages, _
                         Collate:=True, _
                         Background:=False, _
                         PrintToFile:=False, _
                         PrintZoomColumn:=0, _
                         PrintZoomRow:=0, _
                         PrintZoomPaperWidth:=0, _
                         PrintZoomPaperHeight:=0
    
   '* wait for start Zetafax addressing *
    
    start = Timer
    Do While (Tasks.Exists("Zetafax - Addressing") = False) And (Timer < start + 5)
       DoEvents
    Loop
     
   '* close document *
   
    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
    
    ActivePrinter = local_printer
    
End Sub
Sub send_letter()

  '* select destination *
    
   If (z_ltr_format = "LT") Then
   
      '* letter *
      
       If (Left(z_ltr_std, 1) = "R") Then
           Active_Printer = printer_for_R_documents
       Else
           Active_Printer = printer_for_A_documents
       End If
       
   Else
   
      '* fax manual or internal note *
       
       Active_Printer = local_printer
       
   End If

  '* update log file *
  
    On Error Resume Next
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oLOG = oFilSys.OpenTextFile(strSendLogFil, 8, True)
    oLOG.writeLine (Strings.Format(Mid(Str(Date), 7, 4) & "-" & Mid(Str(Date), 4, 2) & "-" _
                            & Mid(Str(Date), 1, 2) & " " & Time$ & " Printing          " _
                            & z_ltr_std & " for " & z_ltr_user_label & " on " _
                            & Active_Printer & Chr$(10)))
    oLOG.Close
    Set oLOG = Nothing
    Set oFilSys = Nothing
  
  '* open document to print *

   file_name = working_storage_directory + "\" + z_doc_name + "0" + z_ltr_ext
   Documents.Open FileName:=file_name, _
                  ConfirmConversions:=False, _
                  ReadOnly:=False, _
                  AddToRecentFiles:=False, _
                  PasswordDocument:="", _
                  PasswordTemplate:="", _
                  Revert:=False, _
                  WritePasswordDocument:="", _
                  WritePasswordTemplate:="", _
                  Format:=wdOpenFormatAuto
                   
  '* print document *
  
   ActivePrinter = Active_Printer
   Application.PrintOut FileName:="", _
                        Range:=wdPrintAllDocument, _
                        Item:=wdPrintDocumentContent, _
                        Copies:=1, _
                        Pages:="", _
                        PageType:=wdPrintAllPages, _
                        Collate:=True, _
                        Background:=False, _
                        PrintToFile:=False, _
                        PrintZoomColumn:=0, _
                        PrintZoomRow:=0, _
                        PrintZoomPaperWidth:=0, _
                        PrintZoomPaperHeight:=0

  '* close document *
   
   ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
  
End Sub
Sub print_statements_of_account_for_legal_service()

    n_items = 0
    z_ltr_format = "ltr"
    set_application_context
        
    On Error Resume Next
    
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = "?????????????SST????????????????-.doc"
    oregexp.Pattern = ".............SST................-\.doc"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(legal_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            file_name = ofillst
            '* create new document *
            Documents.Add
            '* define ics-cmd style *
            define_ics_cmd_style
            '* set initial page setup *
            set_page_set_up 0.4, 0.75, 0.95, 0.7
            '* insert statement of account into the new document *
            generate_ics_attachement (file_name)
            '* delete first page break *
            Selection.HomeKey (wdStory)
            Selection.MoveRight wdCharacter, 1, wdExtend
            Selection.Delete
            '* load masks *
            v_side = ""
            v_reset_address = False
            load_masks_for_entire_document (v_side)
            ActivePrinter = printer_for_R_documents
' Enlever les messages d'alerte et l'impression du background
    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Application.DisplayAlerts = 0
    Application.DisplayAlerts = wdAlertsNone
    Options.PrintBackground = False
    ' Imprimer le doc
            Application.PrintOut FileName:="", _
                            Range:=wdPrintAllDocument, _
                            Item:=wdPrintDocumentContent, _
                            Copies:=1, _
                            Pages:="", _
                            PageType:=wdPrintAllPages, _
                            Collate:=True, _
                            Background:=False, _
                            PrintToFile:=False, _
                            PrintZoomColumn:=0, _
                            PrintZoomRow:=0, _
                            PrintZoomPaperWidth:=0, _
                            PrintZoomPaperHeight:=0

'Rendre aux deux propri|fffd|t|fffd|s qu'on a modifi|fffd| leurs valeurs par d|fffd|faut:
        Application.DisplayAlerts = wdAlertsAll
        Options.PrintBackground = True
            n_items = n_items + 1
            '* close document *
            ActiveDocument.Close (wdDoNotSaveChanges)
            ofillst.Delete
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
End Sub

Sub store_fax_confirmation_reports()

    
    Application.ScreenUpdating = True
    set_application_context
    full_zetafax_directory = zetafax_directory + "\" + Application.UserInitials + "\Z-OUT"
    On Error Resume Next
    fax_confirmation_form = "close"
    one_fax_has_been_successfully_sent = False
    '* for each fax submitted to zetafax *
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = "~SEND???.CTL"
    oregexp.Pattern = "~SEND...\.CTL"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(full_zetafax_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            fax_status = "--"
            document_file = ""
            confirmation_requested = ""
            user_number = ""
            document_id = ""
            Open ofillst For Input Access Read As #1
            While Not EOF(1) And (Err.Number = 0)
                '* extract fax details *
                Line Input #1, record
                If Left(record, 5) = "File:" Then
                    image_file = Mid(record, 7)
                End If
                If Left(record, 10) = "AssocFile:" Then
                    If (Len(record) = 49) Then
                        document_file = Mid(record, 12, 13) + "X" + Mid(record, 26, 18) + "-"
                        confirmation_requested = Mid(record, 31, 1)
                        user_number = Mid(record, 12, 5)
                        document_id = Mid(record, 36, 9)
                    End If
                End If
                If Left(record, 7) = "Status:" Then
                    fax_status = Mid(record, 9, 2)
                    If (fax_status = "OK") Then
                        one_fax_has_been_successfully_sent = True
                    End If
                End If
                If Left(record, 5) = "From:" Then
                    From = Mid(record, 7)
                End If
                If Left(record, 5) = "Name:" Then
                    To_name = Mid(record, 7)
                End If
                If Left(record, 10) = "MessageID:" Then
                    MessageID = Mid(record, 12)
                End If
                If Left(record, 7) = "SentOK:" Then
                    Sent = "20" + Mid(record, 9, 17)
                    record = Mid(record, InStr(1, record, "FAX-FINE") + 10)
                    Fax_To = Left(record, InStr(1, record, """") - 1)
                    record = Mid(record, InStr(1, record, "<0000>") + 7)
                    record = Left(record, InStr(1, record, """") - 2)
                    Pages = Left(record, InStr(1, record, " ") - 1)
                    Transmission_time = Mid(record, InStr(1, record, ":") - 2)
                End If
            Wend
            Close #1
            '* fax has been successfully sent *
            If (fax_status = "OK") And (user_number <> "") Then
                '* open fax confirmation form *
                If (confirmation_requested <> "X") Then

                                
                    If (fax_confirmation_form <> "open") Then
                        copy_file confirmation_forms_directory + "\Fax_Confirmation_Form.doc", working_storage_directory + "\Fax_Confirmation_Form.doc"
                        fax_confirmation_form = "open"
                    End If
                    file_name = working_storage_directory + "\Fax_Confirmation_Form.doc"
                    Documents.Open FileName:=file_name, _
                                   ConfirmConversions:=False, _
                                   ReadOnly:=False, _
                                   AddToRecentFiles:=False, _
                                   PasswordDocument:="", _
                                   PasswordTemplate:="", _
                                   Revert:=False, _
                                   WritePasswordDocument:="", _
                                   WritePasswordTemplate:="", _
                                   Format:=wdOpenFormatAuto
                    '* create confirmation report *
                    ActiveDocument.Tables(1).Cell(3, 4).Select
                    Selection.Delete
                    Selection.TypeText (Sent)
                    ActiveDocument.Tables(1).Cell(4, 4).Select
                    Selection.Delete
                    Selection.TypeText (To_name)
                    ActiveDocument.Tables(1).Cell(5, 4).Select
                    Selection.Delete
                    Selection.TypeText (Fax_To)
                    ActiveDocument.Tables(1).Cell(6, 4).Select
                    Selection.Delete
                    Selection.TypeText (Pages + " (" + Transmission_time + ")")
                    ActiveDocument.Tables(1).Cell(8, 4).Select
                    Selection.Delete
                    Selection.TypeText (From)
                    ActiveDocument.Tables(1).Cell(9, 4).Select
                    Selection.Delete
                    Selection.TypeText (document_id)
                    ActiveDocument.Tables(1).Cell(10, 4).Select
                    Selection.Delete
                    Selection.TypeText (MessageID)
                    ActiveDocument.Tables(1).Cell(12, 1).Select
                    Selection.Delete
                    '* insert image of first page sent *
                    Selection.InlineShapes.AddPicture FileName:=full_zetafax_directory + "\" + image_file, _
                                                      LinkToFile:=False, _
                                                      SaveWithDocument:=True
                    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
                    Selection.InlineShapes(1).Height = 624
                    Selection.InlineShapes(1).Width = 498
                    Selection.EndKey
                    '* protect confirmation report *
                    ActiveDocument.Protect Password:=ICS_password, _
                                           NoReset:=False, _
                                           Type:=wdAllowOnlyFormField
                    '* store confirmation report in user's file *

                    file_name = "X" + LCase(Application.UserInitials) + To_name + document_file
                    save_file (working_storage_directory + "\" + file_name)
                    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
                    copy_file working_storage_directory + "\" + file_name + ".doc", documents_to_expand_directory + "\" + file_name + ".doc"
                    delete_file (working_storage_directory + "\" + file_name + ".doc")
                    
                End If
                '* delete fax details in Zetafax directory *
                file_name = Mid(image_file, 1, InStr(1, image_file, ".") - 1) + ".*"
                delete_file (full_zetafax_directory + "\" + file_name)
            End If
        End If
    Next
    Set omatpat = Nothing
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    If (fax_confirmation_form = "open") Then
        delete_file (working_storage_directory + "\Fax_Confirmation_Form.doc")
    End If

    '* open Zetafax client master file *
    If (one_fax_has_been_successfully_sent) Then
        Err.Clear
        file_name = full_zetafax_directory + "\MSGDIR.CTL"
        Documents.Open FileName:=file_name, _
                       ConfirmConversions:=False, _
                       ReadOnly:=False, _
                       AddToRecentFiles:=False, _
                       PasswordDocument:="", _
                       PasswordTemplate:="", _
                       Revert:=False, _
                       WritePasswordDocument:="", _
                       WritePasswordTemplate:="", _
                       Format:=wdOpenFormatAuto
        '* suppress each successfull sending from Zetafax client master file *
        If (Err.Number = 0) Then
            Selection.Find.ClearFormatting
            With Selection.Find
                .Text = "Status: OK^pUserStatus"
                .Replacement.Text = ""
                .Forward = True
                .Wrap = wdFindStop
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With
            Selection.Find.Execute
            While Selection.Find.Found
                Selection.HomeKey Unit:=wdLine
                Selection.MoveUp Unit:=wdLine, Count:=9
                Selection.MoveDown Unit:=wdLine, Count:=14, Extend:=wdExtend
                Selection.Delete
                Selection.Find.Execute
            Wend
            ActiveDocument.Close SaveChanges:=wdSaveChanges
        End If
    End If
    On Error GoTo 0
    Application.ScreenUpdating = True
End Sub
Sub save_first_page_for_e_mail_confirmation_report()

 If (Mid(z_ltr_file, 20, 1) <> "X") Then

    If (Selection.Information(wdNumberOfPagesInDocument) > 1) Then
       Selection.HomeKey Unit:=wdStory
       Selection.GoTo what:=wdGoToPage, Which:=wdGoToNext, Count:=1
       Selection.EndKey Unit:=wdStory, Extend:=wdExtend
       Selection.Delete

      '* delete header and footer *
  
       With ActiveDocument.Sections(2)
         .Headers(wdHeaderFooterPrimary).LinkToPrevious = False
         .Headers(wdHeaderFooterPrimary).Range.Text = ""
         .Footers(wdHeaderFooterPrimary).Range.Text = ""
       End With
    End If

   '* set orientation to portrait *
 
    ActiveDocument.PageSetup.Orientation = wdOrientPortrait

   '* save document for later processing *
                  
    file_name = z_ltr_file + z_ltr_ext



'CPA TEMPORARY COMMENTED DURING MIX W2K & W7
'    save_file (working_storage_directory + "\" + z_ltr_isu + file_name)
'    copy_file working_storage_directory + "\" + z_ltr_isu + file_name, send_details_directory + "\" + z_ltr_isu + file_name
    save_file (working_storage_directory + "\" + file_name)
    copy_file working_storage_directory + "\" + file_name, send_details_directory + "\" + file_name
'CPA END TEMPORARY COMMENTED DURING MIX W2K & W7


                          
 End If

End Sub
Sub clean_up_log_file(LogToClean)

    set_application_context
    n_items = 0
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = "[0-9]{14}" & Mid(LogToClean, InStr(1, LogToClean, "-"))
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(log_files_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            If DateTime.DateDiff("d", ofillst.DateLastModified, Now) > 7 Then
                ofillst.Delete
                n_items = n_items + 1
            End If
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
  
End Sub
Sub clean_up_backup_directory()

    set_application_context
    n_items = 0
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = "X...-.................................\...."
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(backup_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            If DateTime.DateDiff("d", ofillst.DateLastModified, Now) > 7 Then
                Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
                oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " Clean Up : [" + ofillst.Name + "]")
                oLOG.Close
                Set oLOG = Nothing
                ofillst.Delete
                n_items = n_items + 1
            End If
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
  
End Sub
Sub set_page_set_up(top_margin, bottom_margin, left_margin, right_margin)


On Error GoTo DocSetup
    
    ActiveDocument.Tables(1).Select
    If z_ltr_name Like "*SRW02*" Or ActiveWindow.Caption Like "*SRW02*" Then
        With Selection.ParagraphFormat
             .SpaceBefore = 6
             .SpaceBeforeAuto = False
             .SpaceAfter = 6
             .SpaceAfterAuto = False
             .LineSpacingRule = wdLineSpaceSingle
        End With
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
            .Text = "^p^p"
            .Replacement.Text = "^l^p"
            .Forward = True
            .Wrap = wdFindContinue
            .Format = False
            .MatchCase = False
            .MatchWholeWord = False
            .MatchWildcards = False
            .MatchSoundsLike = False
            .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
    Else
        With Selection.ParagraphFormat
             .SpaceBefore = 0
             .SpaceBeforeAuto = False
             .SpaceAfter = 0
             .SpaceAfterAuto = False
             .LineSpacingRule = wdLineSpaceSingle
        End With
        With ActiveDocument
        Set ObjRange = .Range(start:=.Tables(1).Cell(10, 2).Range.start, End:=.Tables(1).Cell(10, 2).Range.End)
        ObjRange.Select
        With Selection.Cells(1)
            .TopPadding = CentimetersToPoints(0.21)
        End With
        With Selection.ParagraphFormat
             .SpaceAfter = 6
             .SpaceAfterAuto = False
             .LineSpacingRule = wdLineSpaceSingle
        End With
    End With

    End If


DocSetup:
Err.Clear
   With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(top_margin)
        .BottomMargin = CentimetersToPoints(bottom_margin)
        .LeftMargin = CentimetersToPoints(left_margin)
        .RightMargin = CentimetersToPoints(right_margin)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(0)
        .FooterDistance = CentimetersToPoints(0)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
   End With

End Sub
Sub set_page_set_up_for_section(top_margin, bottom_margin, left_margin, right_margin)

     With Selection.Sections(1).PageSetup
        
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(top_margin)
        .BottomMargin = CentimetersToPoints(bottom_margin)
        .LeftMargin = CentimetersToPoints(left_margin)
        .RightMargin = CentimetersToPoints(right_margin)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(0)
        .FooterDistance = CentimetersToPoints(0)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
     End With

End Sub
Sub define_ics_cmd_style()

        ActiveDocument.Styles.Add Name:="ics-cmd", Type:=wdStyleTypeParagraph
        With ActiveDocument.Styles("ics-cmd")
           .AutomaticallyUpdate = False
           .BaseStyle = "Normal"
           .NextParagraphStyle = "Normal"
        End With
        With ActiveDocument.Styles("ics-cmd").Font
           .Name = "Arial"
           .Size = 1
           .Bold = False
           .Italic = False
           .Underline = wdUnderlineNone
           .UnderlineColor = wdColorAutomatic
           .StrikeThrough = False
           .DoubleStrikeThrough = False
           .Outline = False
           .Emboss = False
           .Shadow = False
           .Hidden = False
           .SmallCaps = False
           .AllCaps = False
           .Color = wdColorWhite
           .Engrave = False
           .Superscript = False
           .Subscript = False
           .Scaling = 100
           .Kerning = 0
           .Animation = wdAnimationNone
        End With
        ActiveDocument.Styles("ics-cmd").NoProofing = True

End Sub
Sub delete_file(file_to_delete)
  
  On Error Resume Next
  
 '* reset archive attribute *
   
  Set fs = CreateObject("Scripting.FileSystemObject")
  Set f = fs.GetFile(file_to_delete)
  If f.Attributes And 32 Then
     f.Attributes = f.Attributes - 32
  End If
  Set fs = Nothing
  
 '* delete file *
 
  Err.Clear
  Kill file_to_delete
  If (Err.Number <> 0) And (InStr(file_to_delete, "*") = 0) Then
  
      start = Timer
      Do While Timer < start + 5
         DoEvents
      Loop
      i = 1
      ii = 110 - Len(file_to_delete)
      If (ii < 0) Then
         ii = 0
      End If
      While (Err.Number <> 0)
         Err.Clear
         Kill file_to_delete
         i = i + 1
         If (Err.Number <> 0) Then
            If i > 9 Then
                i = 0
'CPA commented to avoid blocking BEG --------------------------------------------------------------------------------
'                 response = MsgBox(" " + Chr(13) + String(21, " ") + "The following file could not be deleted." _
                                                + String(32, " ") _
                                       + Chr(13) + " " _
                                       + Chr(13) + String(ii / 2, " ") + file_to_delete _
                                       + Chr(13) + " " _
                                       + Chr(13) + String(43, " ") + "Do you want to retry ?" _
                                       + Chr(13) + " ", _
                                         vbYesNo, "ICS - Clean-Up Process", "", 0)
'                If (response <> vbYes) Then
                    
                    Set oFilSys = CreateObject("Scripting.FileSystemObject")
                    Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
                    oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " The following file could not be deleted : " & file_to_delete)
                    oLOG.Close
                    Set oLOG = Nothing
                    Set oFilSys = Nothing
                    
                    Err.Clear
'                End If
 'CPA commented to avoid blocking END --------------------------------------------------------------------------------
           End If
            start = Timer
            Do While Timer < start + 15
               DoEvents
            Loop
         End If
      Wend
  
  End If
  On Error GoTo 0

End Sub
Sub save_file(file_to_save)
  
  On Error Resume Next
  
 '* save file *

  ActiveDocument.SaveAs FileName:=file_to_save, _
                        FileFormat:=wdFormatDocument, _
                        LockComments:=False, _
                        Password:="", _
                        AddToRecentFiles:=False, _
                        WritePassword:="", _
                        ReadOnlyRecommended:=False, _
                        EmbedTrueTypeFonts:=False, _
                        SaveNativePictureFormat:=False, _
                        SaveFormsData:=False, _
                        SaveAsAOCELetter:=False
                        
  If (Err.Number <> 0) Then
      start = Timer
      Do While Timer < start + 5
         DoEvents
      Loop
      i = 1
      ii = 110 - Len(file_to_save)
      If (ii < 0) Then
         ii = 0
      End If
      
      While (Err.Number <> 0)
         Err.Clear
         ActiveDocument.SaveAs FileName:=file_to_save, _
                               FileFormat:=wdFormatDocument, _
                               LockComments:=False, _
                               Password:="", _
                               AddToRecentFiles:=False, _
                               WritePassword:="", _
                               ReadOnlyRecommended:=False, _
                               EmbedTrueTypeFonts:=False, _
                               SaveNativePictureFormat:=False, _
                               SaveFormsData:=False, _
                               SaveAsAOCELetter:=False
         
         i = i + 1
         If (Err.Number <> 0) Then
            If i > 9 Then
                i = 0
                response = MsgBox(" " & Strings.Format(Now, "yyyyMMddHHmmss") & " " + Chr(13) + String(21, " ") + "The following file could not be saved." _
                                      + Chr(13) + " " _
                                      + Chr(13) + String(ii / 2, " ") + file_to_save _
                                      + Chr(13) + " " _
                                      + Chr(13) + String(43, " ") + "Do you want to retry ?" _
                                      + Chr(13) + " ", _
                                        vbYesNo, "ICS - File Save Process", "", 0)
                If (response <> vbYes) Then
                    
                    Set oFilSys = CreateObject("Scripting.FileSystemObject")
                    Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
                    oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " The following file could not be saved : " & file_to_save)
                    oLOG.Close
                    Set oLOG = Nothing
                    Set oFilSys = Nothing
                    
                    Err.Clear
                End If
            End If
            start = Timer
            Do While Timer < start + 15
               DoEvents
            Loop
         End If
      Wend
  
  End If
  On Error GoTo 0

End Sub
Sub copy_file(from_file, to_file)

  On Error Resume Next
 
 '* reset archive attribute *
 
  Set fs = CreateObject("Scripting.FileSystemObject")
  Set f = fs.GetFile(to_file)
  If (Err.Number = 0) Then
     If f.Attributes And 32 Then
        f.Attributes = f.Attributes - 32
     End If
  End If
  Set fs = Nothing

 '* copy to file *
 
  Err.Clear
  FileCopy from_file, to_file
  If (Err.Number <> 0) Then
  
      start = Timer
      Do While Timer < start + 5
         DoEvents
      Loop
      i = 1
      ii = 105 - Len(to_file)
      If (ii < 0) Then
         ii = 0
      End If

      While (Err.Number <> 0)
         Err.Clear
         FileCopy from_file, to_file
         i = i + 1
         If (Err.Number <> 0) Then
            If i > 9 Then
                i = 0
'CPA commented to avoid blocking BEG --------------------------------------------------------------------------------
'                response = MsgBox(" " + Chr(13) + String(21, " ") + "The following file could not be copied." _
                                                 + String(32, " ") _
                                  + Chr(13) + " " _
                                  + Chr(13) + String(ii / 2, " ") + "from " + from_file _
                                  + Chr(13) + " " _
                                  + Chr(13) + String(ii / 2, " ") + "to     " + to_file _
                                  + Chr(13) + " " _
                                  + Chr(13) + String(43, " ") + "Do you want to retry ?" _
                                  + Chr(13) + " ", _
                                    vbYesNo, "ICS - Storage Process", "", 0)
                                    
'                If (response <> vbYes) Then
                    
                    Set oFilSys = CreateObject("Scripting.FileSystemObject")
                    Set oLOG = oFilSys.OpenTextFile(strLogFil, 8, True)
                    oLOG.writeLine (Strings.Format(Now, "yyyyMMddHHmmss") & " The following file could not be copied from : " & from_file & " to " & to_file)
                    oLOG.Close
                    Set oLOG = Nothing
                    Set oFilSys = Nothing
                    
                    Err.Clear
'                End If
'CPA commented to avoid blocking END --------------------------------------------------------------------------------
            End If
            start = Timer
            Do While Timer < start + 15
               DoEvents
            Loop
         End If
      Wend
  
  
  
  End If
  On Error GoTo 0

End Sub

Sub export_to_IRS()

Dim OutlookApplication As New Outlook.Application
Dim OutlookExplorer As Outlook.Explorer
Dim OutlookSelection As Outlook.Selection

Set OutlookExplorer = OutlookApplication.ActiveExplorer
Set OutlookSelection = OutlookExplorer.Selection

documents_to_expand_directory = "S:\irs\test\documents_to_expand"
users_file_directory = "C:\irs\test\In"

For x = 1 To OutlookSelection.Count
    Set mail_selected = OutlookSelection.Item(x)
  
    file_name = mail_selected.SenderName + " - " + mail_selected.Subject
    Path = users_file_directory
    
    file_name = Replace(file_name, "\", "-")
    file_name = Replace(file_name, "/", "-")
    file_name = Replace(file_name, ":", "-")
    file_name = Replace(file_name, "?", "-")
    file_name = Replace(file_name, """", "-")
    file_name = Replace(file_name, "<", "-")
    file_name = Replace(file_name, ">", "-")
    file_name = Replace(file_name, "|", "-")
    file_name = Replace(file_name, "*", "-")
    file_name = Replace(file_name, ".", "-")

    mail_selected.SaveAs Path + "\" + file_name + ".msg", olMSG

Next x

On Error Resume Next
    AppActivate "Integrated Recovery System"
On Error GoTo 0

End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Document_Close()

End Sub

Private Sub Document_New()

End Sub

Private Sub Document_Open()

End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{DDEFC8C3-094F-4A67-A2FB-57583B2AEE22}{B22B80D9-D7E2-4852-BF65-75CDA2541A6F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub Label4_Click()

End Sub

Public Sub UserForm_initialize()

    ' PDE before [BEG] ------------------------------------------------------------------------------------------------------------------------------
    '* select the user's files directory *
    'Target = NewMacros.user_file_directory + NewMacros.user_path
    'file_name = NewMacros.v_user_nr + NewMacros.search_string
    '* define a file system object to get size information *
    'fs = CreateObject("Scripting.FileSystemObject")
    '* reset data displayed in listbox1 *
    'ListBox1.Clear()
    '* set length of files searched *
    'n = Len(Target) + Len(file_name) + 1
    '* extract all files according to criteria *
    'With Application.FileSearch
    '    .NewSearch()
    '    .FileName = file_name
    '    .LookIn = Target
    '    If .Execute(SortBy:=msoSortByFileName, SortOrder:=msoSortOrderDescending) > 0 Then
    '        '* for each file found *
    '        For i = 1 To .FoundFiles.Count
    '            '* ensure that the files retreived have the same length as the files searched *
    '            If Len(.FoundFiles(i)) = n Then
    '                '* disregard file path *
    '                file_name = UCase(Mid(.FoundFiles(i), Len(Target) + 2))
    '                If Mid(file_name, 35, 3) = "DOC" _
    '                Or Mid(file_name, 35, 3) = "RTF" _
    '                Or Mid(file_name, 35, 3) = "TXT" _
    '                Or Mid(file_name, 35, 3) = "XLS" _
    '                Or Mid(file_name, 35, 3) = "JPG" _
    '                Or Mid(file_name, 35, 3) = "BMP" _
    '                Or Mid(file_name, 35, 3) = "GIF" _
    '                Or Mid(file_name, 35, 3) = "PNG" _
    '                Or Mid(file_name, 35, 3) = "TIF" Then
    '                    '* build item to display *
    '                    f = fs.GetFile(.FoundFiles(i))
    '                    item_name = Mid(file_name, 12, 2) + "-" + Mid(file_name, 10, 2) + "-" _
    '                               + Mid(file_name, 6, 4) + "  " + Mid(file_name, 14, 1) + "  " _
    '                               + Mid(file_name, 15, 2) + "   " + Mid(file_name, 17, 6) _
    '                               + Mid(file_name, 25, 8) + "    " + Mid(file_name, 23, 2) + "    " _
    '                               + LCase(Mid(file_name, 35, 3)) + "    " _
    '                               + Right("     " + Str(Int(f.Size / 1024)), 5) + " K"
    '                    ListBox1.AddItem(item_name)
    '                End If
    '            End If
    '        Next i
    '    End If
    'End With
    'fs = Nothing
    ' PDE before [END] ------------------------------------------------------------------------------------------------------------------------------
    
    ' PDE after  [BEG] ------------------------------------------------------------------------------------------------------------------------------
    Target = NewMacros.user_file_directory + NewMacros.user_path
    file_name = NewMacros.v_user_nr + NewMacros.search_string
    ListBox1.Clear
    n = Len(Target) + Len(file_name)
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = file_name
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(Target)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            If Len(ofillst) = n Then
                file_name = UCase(Mid(ofillst, Len(Target) + 2))
                If Mid(file_name, 35, 3) = "DOC" _
                Or Mid(file_name, 35, 3) = "RTF" _
                Or Mid(file_name, 35, 3) = "TXT" _
                Or Mid(file_name, 35, 3) = "XLS" _
                Or Mid(file_name, 35, 3) = "JPG" _
                Or Mid(file_name, 35, 3) = "BMP" _
                Or Mid(file_name, 35, 3) = "GIF" _
                Or Mid(file_name, 35, 3) = "PNG" _
                Or Mid(file_name, 35, 3) = "TIF" Then
                    f = oFilSys.GetFile(ofillst)
'                    item_name = Mid(file_name, 12, 2) + "-" + Mid(file_name, 10, 2) + "-" _
                               + Mid(file_name, 6, 4) + "  " + Mid(file_name, 14, 1) + "  " _
                               + Mid(file_name, 15, 2) + "   " + Mid(file_name, 17, 6) _
                               + Mid(file_name, 25, 8) + "    " + Mid(file_name, 23, 2) + "    " _
                               + LCase(Mid(file_name, 35, 3)) + "    " _

'CPA before BEG ---------------------------------------------------------------------------------------------------------------------------------------------------
'                    item_name = Mid(file_name, 12, 2) + "-" + Mid(file_name, 10, 2) + "-" _
'                               + Mid(file_name, 6, 4) + "  " + Mid(file_name, 14, 1) + "  " _
'                               + Mid(file_name, 15, 2) + "   " + Mid(file_name, 17, 6) _
'                               + Mid(file_name, 25, 8) + "    " + Mid(file_name, 23, 2) + "    " _
'                               + LCase(Mid(file_name, 35, 3)) + "    " _
'                              + Right("     " + str(Int(f.Size / 1024)), 5) + " K"
'CPA before END ---------------------------------------------------------------------------------------------------------------------------------------------------
                               
'CPA after BEG ---------------------------------------------------------------------------------------------------------------------------------------------------
                    item_name = Mid(file_name, 12, 2) + "-" + Mid(file_name, 10, 2) + "-" _
                               + Mid(file_name, 6, 4) + "  " + Mid(file_name, 14, 1) + "  " _
                               + Mid(file_name, 15, 2) + "   " + Mid(file_name, 17, 6) _
                               + Mid(file_name, 25, 8) + "    " + Mid(file_name, 23, 2) + "    " _
                               + LCase(Mid(file_name, 35, 3)) + "    " _
                               + Right("     " + Str(Int(ofillst.Size / 1024)), 5) + " K"
'CPA after BEG ---------------------------------------------------------------------------------------------------------------------------------------------------
                    
                    ListBox1.AddItem (item_name)
                End If
            End If
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    ' PDE after  [END] ------------------------------------------------------------------------------------------------------------------------------
   
    '* set font *
  
   With ListBox1
     .Font.Name = "Courier New"
     .Font.Size = 9
   End With
   
  '* name the form *
  
   With UserForm1
   
     If (NewMacros.v_adresse1 = "******") Then
          .Caption = "User's files"
     Else
         .Caption = UCase(Left(NewMacros.v_adresse1, 1)) + LCase(Mid(NewMacros.v_adresse1, 2)) _
                + " 's files"
     End If
     
     .StartUpPosition = 2
     .CommandButton1.SetFocus
   End With

  '* initialize search fields *
  
   TextBox1.Value = Mid(NewMacros.search_string, 7, 2) + "-" _
                    + Mid(NewMacros.search_string, 5, 2) + "-" _
                    + Mid(NewMacros.search_string, 1, 4)
   TextBox2.Value = Mid(NewMacros.search_string, 9, 1)
   TextBox3.Value = Mid(NewMacros.search_string, 10, 2)
   TextBox4.Value = Mid(NewMacros.search_string, 12, 6) _
                    + Mid(NewMacros.search_string, 20, 8)
   TextBox5.Value = Mid(NewMacros.search_string, 18, 2)
   TextBox7.Value = Mid(NewMacros.search_string, 30, 3)

End Sub
Private Sub CommandButton1_Click()

   NewMacros.return_key = "OK"
   NewMacros.file_selected = ListBox1.Text
   return_to_macro
   
End Sub
Private Sub CommandButton2_Click()
   
   NewMacros.return_key = "CANCEL"
   NewMacros.file_selected = ""
   return_to_macro

End Sub
Private Sub CommandButton3_Click()

   NewMacros.search_string = Mid(TextBox1.Value, 7, 4) _
                             + Mid(TextBox1.Value, 4, 2) _
                             + Mid(TextBox1.Value, 1, 2) _
                             + TextBox2.Value + TextBox3.Value _
                             + Mid(TextBox4.Value, 1, 6) + TextBox5.Value + Mid(TextBox4.Value, 7, 8) _
                             + "-." + TextBox7.Value
   
   NewMacros.return_key = "DISPLAY"
   NewMacros.file_selected = ""
   return_to_macro
   
End Sub
Private Sub OptionButton1_Click()

   OptionButton1.Value = False
   NewMacros.return_key = "RESET"
   NewMacros.file_selected = ""
   return_to_macro

End Sub
Private Sub ListBox1_Click()
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

   NewMacros.return_key = "OK"
   NewMacros.file_selected = ListBox1.Text
   return_to_macro
   
End Sub
Private Sub return_to_macro()

  '* deselect selected row *
  
   If ListBox1.ListIndex <> -1 Then
      ListBox1.Selected(ListBox1.ListIndex) = False
   End If
   
   '* get file selected *
   
   If NewMacros.file_selected <> "" Then
      NewMacros.file_selected = NewMacros.v_user_nr + Mid(NewMacros.file_selected, 7, 4) _
               + Mid(NewMacros.file_selected, 4, 2) + Mid(NewMacros.file_selected, 1, 2) _
               + Mid(NewMacros.file_selected, 13, 1) + Mid(NewMacros.file_selected, 16, 2) _
               + Mid(NewMacros.file_selected, 21, 6) + Mid(NewMacros.file_selected, 39, 2) _
               + Mid(NewMacros.file_selected, 27, 8) + "-." + Mid(NewMacros.file_selected, 45, 3)
   End If
   
  '* close dialog *
  
   Hide
   
End Sub




Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{88E2EF57-012A-4A38-9B02-C632ADEDE2CB}{119392B6-A6A9-46C3-80C0-D2B3395593E3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_initialize()

   On Error Resume Next
   
    '* find documents to send *
   
    ' PDE before [BEG] ---------------------------------------------------------------------------------------------------------------------
    'Err.Clear()
    'file_name = Application.UserInitials + "#??#?????20??????S??????XX???????????#*.*"
    'With Application.FileSearch
    '    .NewSearch()
    '    .FileName = file_name
    '    .LookIn = NewMacros.documents_to_send_directory
    
    '    If (.Execute(SortBy:=msoSortByFileName, SortOrder:=msoSortOrderAscending) > 0) Then
    '        If (Err.Number = 0) Then
    '            For i = 1 To .FoundFiles.Count
    '                file_found = .FoundFiles(i)
    '                If (Err.Number = 0) Then
    '                    file_date = Str(FileDateTime(file_found))
    '                    If (Err.Number = 0) Then
    '                        If Mid(file_date, 13, 1) = ":" Then
    '                            file_date = Mid(file_date, 1, 11) + "0" + Mid(file_date, 12)
    '                        End If
    '                        file_name = Mid(file_found, Len(NewMacros.documents_to_send_directory) + 2)
    '                        std_name = Mid(file_name, 22, 10)
    '                        user_number = Mid(file_name, 8, 5)
    '                        user_label = Mid(file_name, 42, InStr(42, file_name, "#") - 42)
    '             user_label = user_label + String(41 - Len(user_label), " ")
    
    '                        display_line = file_date + "  " + std_name + "  " + user_number _
    '                              + "  " + user_label + "  ready to send"
    '                        ListBox1.AddItem(display_line)
    '                    End If
    '                End If
    '                Err.Clear()
    '            Next i
    '        End If
    '    End If
    'End With
    ' PDE before [END] ---------------------------------------------------------------------------------------------------------------------
    
    ' PDE after  [BEG] ---------------------------------------------------------------------------------------------------------------------
    Err.Clear
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = Application.UserInitials + "#??#?????20??????S??????XX???????????#*.*"
    oregexp.Pattern = Application.UserInitials + "#..#.....20......S......XX...........#*\.*"
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(NewMacros.documents_to_send_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            file_found = ofillst
            If (Err.Number = 0) Then
                file_date = Str(FileDateTime(file_found))
                If (Err.Number = 0) Then
                    If Mid(file_date, 13, 1) = ":" Then
                        file_date = Mid(file_date, 1, 11) + "0" + Mid(file_date, 12)
                    End If
                    file_name = Mid(file_found, Len(NewMacros.documents_to_send_directory) + 2)
                    std_name = Mid(file_name, 22, 10)
                    user_number = Mid(file_name, 8, 5)
                    user_label = Mid(file_name, 42, InStr(42, file_name, "#") - 42)
                    user_label = user_label + String(41 - Len(user_label), " ")
                    display_line = file_date + "  " + std_name + "  " + user_number + "  " + user_label + "  ready to send"
                    ListBox1.AddItem (display_line)
                End If
            End If
            Err.Clear
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    ' PDE after  [END] ---------------------------------------------------------------------------------------------------------------------
    
    '* find document generation requests *
    
    ' PDE before [BEG] ---------------------------------------------------------------------------------------------------------------------
    'Err.Clear()
    'first_record = True
    'file_name = "??????XX??." + Application.UserInitials
    'n = Len(NewMacros.value_files_directory) + Len(file_name) + 1

    'With Application.FileSearch
    '    .NewSearch()
    '    .FileName = file_name
    '    .LookIn = NewMacros.value_files_directory

    '    If (.Execute(SortBy:=msoSortByFileName, SortOrder:=msoSortOrderAscending) > 0) Then
    '        If (Err.Number = 0) Then
    '            For ii = 1 To .FoundFiles.Count
    '                file_found = .FoundFiles(ii)
    '                If (Err.Number = 0) Then
    '                    If (Len(file_found) = n) Then
    '                        file_date = Str(FileDateTime(file_found))
    '                        If (Err.Number = 0) Then
    '                            If Mid(file_date, 13, 1) = ":" Then
    '                                file_date = Mid(file_date, 1, 11) + "0" + Mid(file_date, 12)
    '                            End If
    '                            file_name = Mid(file_found, Len(NewMacros.value_files_directory) + 2, 10)
    '                            If (first_record) Then
    '                                first_record = False
    '                                NewMacros.file_to_generate = file_name
    '                            End If

    '                            '* open file *

    '                Open file_found For Input Access Read As #1
    '                            While (Not EOF(1)) And (Err.Number = 0)
    '                  Line Input #1, line_input
    '                                While Len(line_input) > 0
    '                                    i = InStr(1, line_input, Chr(10)) - 1
    '                                    If (i = -1) Then
    '                                        i = Len(line_input)
    '                                    End If
    '                                    record = Left(line_input, i)
    '                                    user_number = Left(record, 5)
    '                                    user_label = Mid(record, 7, InStr(7, record, ";") - 7)
    '                    user_label = user_label + String(41 - Len(user_label), " ")
    '                                    display_line = file_date + "  " + file_name + "  " + user_number _
    '                                          + "  " + user_label + "   to generate "
    '                                    ListBox1.AddItem(display_line)
    '                                    line_input = Mid(line_input, i + 2)
    '                                End While
    '                            End While
    '                Close #1
    '                        End If
    '                    End If
    '                End If
    '                Err.Clear()
    '            Next ii
    '        End If
    '    End If
    'End With
    ' PDE before [END] ---------------------------------------------------------------------------------------------------------------------
    
    ' PDE after  [BEG] ---------------------------------------------------------------------------------------------------------------------
    Err.Clear
    first_record = True
    file_name = "??????XX??." + Application.UserInitials
    n = Len(NewMacros.value_files_directory) + Len(file_name) + 1
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    oregexp.Pattern = "??????XX??." + Application.UserInitials
    oregexp.Pattern = "......XX..\." + Application.UserInitials
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(NewMacros.value_files_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            file_found = ofillst
            If (Err.Number = 0) Then
                If (Len(file_found) = n) Then
                    file_date = Str(FileDateTime(file_found))
                    If (Err.Number = 0) Then
                        If Mid(file_date, 13, 1) = ":" Then
                            file_date = Mid(file_date, 1, 11) + "0" + Mid(file_date, 12)
                        End If
                        file_name = Mid(file_found, Len(NewMacros.value_files_directory) + 2, 10)
                        If (first_record) Then
                            first_record = False
                            NewMacros.file_to_generate = file_name
                        End If
                        '* open file *
                        Open file_found For Input Access Read As #1
                        While (Not EOF(1)) And (Err.Number = 0)
                          Line Input #1, line_input
                            While Len(line_input) > 0
                                i = InStr(1, line_input, Chr(10)) - 1
                                If (i = -1) Then
                                    i = Len(line_input)
                                End If
                                record = Left(line_input, i)
                                user_number = Left(record, 5)
                                user_label = Mid(record, 7, InStr(7, record, ";") - 7)
                                user_label = user_label + String(41 - Len(user_label), " ")
                                display_line = file_date + "  " + file_name + "  " + user_number + "  " + user_label + "   to generate "
                                ListBox1.AddItem (display_line)
                                line_input = Mid(line_input, i + 2)
                            Wend
                        Wend
                        Close #1
                    End If
                End If
            End If
            Err.Clear
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    ' PDE after  [END] ---------------------------------------------------------------------------------------------------------------------
    
    '* find documents faxing *
    
'CPA - 20190312 - No Zetafax anymore
   
   GoTo NoFindDocumentsFaxing
   
   Err.Clear
   file_name = NewMacros.zetafax_directory + "\" + Application.UserInitials + "\Z-OUT\MSGDIR.CTL"
   Open file_name For Input Access Read As #1
   If (Err.Number = 0) Then
      While Not EOF(1)
        Line Input #1, record
        If Left(record, 12) = "Comment: To:" Then
          user_label = Mid(record, 14)
          user_label = user_label + String(41 - Len(user_label), " ")
        End If
        If Left(record, 10) = "AssocFile:" Then
           user_number = Mid(record, 12, 5)
           std_name = Mid(record, 26, 10)
        End If
        If Left(record, 9) = "Accepted:" Then
           file_date = Mid(record, 11, 17)
           file_date = Mid(record, 17, 2) + "/" + Mid(record, 14, 2) + "/20" + Mid(record, 11, 2) + Mid(record, 19, 9)
        End If
        If Left(record, 7) = "Status:" Then
           Status = Mid(record, 9, 2)
           If (Status <> "Fa") Then
              If (Status = "OK") Then
                 Text = "     report    "
              Else
                 Text = "     faxing    "
              End If
              display_line = file_date + "  " + std_name + "  " + user_number _
                               + "  " + user_label + Text
              ListBox1.AddItem (display_line)
           End If
        End If
      Wend
   End If
   Close #1
   
NoFindDocumentsFaxing:
   
    '* find documents to expand *
    
    ' PDE before [BEG] ---------------------------------------------------------------------------------------------------------------------
    'Err.Clear()
    'file_name = "?" + Application.UserInitials + "*.doc"
    'With Application.FileSearch
    '    .NewSearch()
    '    .FileName = file_name
    '    .LookIn = NewMacros.documents_to_expand_directory

    '    If (.Execute(SortBy:=msoSortByFileName, SortOrder:=msoSortOrderAscending) > 0) Then
    '        If (Err.Number = 0) Then
    '            For i = 1 To .FoundFiles.Count
    '                file_found = .FoundFiles(i)
    '                If (Err.Number = 0) Then
    '                    file_date = Str(FileDateTime(file_found))
    '                    If (Err.Number = 0) Then
    '                        If Mid(file_date, 13, 1) = ":" Then
    '                            file_date = Mid(file_date, 1, 11) + "0" + Mid(file_date, 12)
    '                        End If
    '                        file_name = Mid(file_found, Len(NewMacros.documents_to_expand_directory) + 2)
    '                        If (Left(Right(file_name, 24), 1) = "S") Then
    '                            std_name = Left(Right(file_name, 23), 10)
    '                            user_number = Left(Right(file_name, 37), 5)
    '                            user_label = Mid(file_name, 5, Len(file_name) - 41)
    '                user_label = user_label + String(41 - Len(user_label), " ")

    '                            display_line = file_date + "  " + std_name + "  " + user_number _
    '                                  + "  " + user_label + "    expanding  "

    '                            ListBox1.AddItem(display_line)
    '                        End If
    '                    End If
    '                End If
    '                Err.Clear()
    '            Next i
    '        End If
    '    End If
    'End With
    ' PDE before [END] ---------------------------------------------------------------------------------------------------------------------
    
    ' PDE after  [BEG] ---------------------------------------------------------------------------------------------------------------------
    Err.Clear
    file_name = "?" + Application.UserInitials + "*.doc"
    Set oFilSys = CreateObject("Scripting.FileSystemObject")
    Set oregexp = CreateObject("VBScript.RegExp")
    
    ' CPA before [BEG] -----------------------------------------------------------------------------------------------------------------------
    'oregexp.Pattern = "?" + Application.UserInitials + "*.doc"
    'oregexp.Pattern = "." + Application.UserInitials + "*\.doc"
    ' CPA before [END] -----------------------------------------------------------------------------------------------------------------------
    
    ' CPA after [BEG] ------------------------------------------------------------------------------------------------------------------------
    oregexp.Pattern = "." + Application.UserInitials
    ' CPA after [END] ------------------------------------------------------------------------------------------------------------------------
    
    oregexp.IgnoreCase = True
    Set ofolder = oFilSys.GetFolder(NewMacros.documents_to_expand_directory)
    For Each ofillst In ofolder.Files
        Set omatpat = oregexp.Execute(ofillst.Name)
        If omatpat.Count > 0 Then
            file_found = ofillst
    ' CPA before [BEG] -----------------------------------------------------------------------------------------------------------------------
            'If (Err.Number = 0) Then
    ' CPA before [END] -----------------------------------------------------------------------------------------------------------------------
    
    ' CPA after [BEG] ------------------------------------------------------------------------------------------------------------------------
            extens = Right(file_found, 4)
            If (extens = ".doc" And Err.Number = 0) Then
    ' CPA after [END] ------------------------------------------------------------------------------------------------------------------------
                file_date = Str(FileDateTime(file_found))
                If (Err.Number = 0) Then
                    If Mid(file_date, 13, 1) = ":" Then
                        file_date = Mid(file_date, 1, 11) + "0" + Mid(file_date, 12)
                    End If
                    file_name = Mid(file_found, Len(NewMacros.documents_to_expand_directory) + 2)
                    If (Left(Right(file_name, 24), 1) = "S") Then
                        std_name = Left(Right(file_name, 23), 10)
                        user_number = Left(Right(file_name, 37), 5)
                        user_label = Mid(file_name, 5, Len(file_name) - 41)
                        user_label = user_label + String(41 - Len(user_label), " ")
                        display_line = file_date + "  " + std_name + "  " + user_number + "  " + user_label + "    expanding  "
                        ListBox1.AddItem (display_line)
                    End If
                End If
            End If
            Err.Clear
        End If
        Set omatpat = Nothing
    Next
    Set ofolder = Nothing
    Set oregexp = Nothing
    Set oFilSys = Nothing
    ' PDE after  [END] ---------------------------------------------------------------------------------------------------------------------
   
   On Error GoTo 0

  '* set font, size and focus *
  
   With ListBox1
        .Font.Name = "Courier New"
        .Font.Size = 9
        
   End With
   With UserForm2
     .Caption = "Document Generator"
     .StartUpPosition = 2
     .CommandButton1.SetFocus
   End With
   
End Sub
Private Sub CommandButton1_Click()

   NewMacros.return_key = "GENERATE"
   return_to_macro
   
End Sub
Private Sub CommandButton2_Click()

   NewMacros.return_key = "CANCEL"
   return_to_macro

End Sub
Private Sub CommandButton3_Click()

   NewMacros.return_key = "REFRESH"
   return_to_macro

End Sub
Private Sub CommandButton4_Click()

   NewMacros.return_key = "SEND"
   return_to_macro

End Sub
Private Sub CommandButton5_Click()

   NewMacros.return_key = "REPORTS"
   return_to_macro

End Sub

Private Sub ListBox1_Click()
End Sub
Private Sub return_to_macro()

   If ListBox1.ListIndex <> -1 Then
      ListBox1.Selected(ListBox1.ListIndex) = False
   End If
   Hide
   
End Sub

' InQuest injected base64 decoded content
' 0>'-
' bzWR
' z{^uJiz
' )br@'u<
' O*^=
' Z+aJ
' *&n)
' uj+v

INQUEST-PP=macro
