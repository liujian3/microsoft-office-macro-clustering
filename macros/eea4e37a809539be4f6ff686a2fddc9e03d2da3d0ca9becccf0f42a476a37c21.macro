Attribute VB_Name = "ModuloPersonaleWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private mcbMyMenu As Office.CommandBar
Private Const mintStdWidth As Integer = 80

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  RimuoveTuttiMenu
End Sub

Private Sub Workbook_BeforePrint(Cancel As Boolean)
    wksRimborso.NascondiNonUsate
    wksLavoro.ImpostaPagineLavoro
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    wksRimborso.MostraTutto
End Sub

Private Sub Workbook_Open()
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    CreaBarraMenu
End Sub

Private Sub Workbook_WindowActivate(ByVal Wn As Window)
    'If Not (mcbMyMenu Is Nothing) Then mcbMyMenu.Visible = True
End Sub


Private Sub Workbook_WindowDeactivate(ByVal Wn As Window)
    'If Not (mcbMyMenu Is Nothing) Then mcbMyMenu.Visible = False
End Sub

Private Sub CreaSottoMenu( _
    Menu As Office.CommandBarPopup, _
    ByVal Tag As String, _
    Caption As String, _
    TooltipText As String, _
    OnAction As String)
    
    Dim bt As Office.CommandBarButton
    Set bt = mcbMyMenu.FindControl(MsoControlType.msoControlButton, , Tag, , True)
    If bt Is Nothing Then
        Set bt = Menu.Controls.Add(MsoControlType.msoControlButton, , , , True)
        bt.Tag = Tag
    End If
    With bt
        .Caption = Caption
        .TooltipText = TooltipText
        .OnAction = OnAction
        .Style = msoButtonCaption
        .Width = mintStdWidth
        .Visible = True
    End With
End Sub

Private Function CreaMenu( _
    ByVal Tag As String, _
    Caption As String) As Office.CommandBarPopup
    Dim pu As Office.CommandBarPopup
    
    Set pu = mcbMyMenu.FindControl(MsoControlType.msoControlPopup, , Tag, , False)
    If pu Is Nothing Then
        Set pu = mcbMyMenu.Controls.Add(MsoControlType.msoControlPopup, , , , True)
        pu.Tag = Tag
    End If
    pu.Caption = Caption
    pu.Width = mintStdWidth
    Set CreaMenu = pu
End Function

Private Sub CreaBarraMenu()
    Dim pu As Office.CommandBarPopup
    Dim bt As Office.CommandBarButton
    Const intStdWidth As Integer = 80
    Dim strKeyName As String
    
    strKeyName = "'" & Me.Name & "'!"
    On Error Resume Next
    Set mcbMyMenu = Application.CommandBars![Mod. Personale]
    On Error GoTo 0
    If mcbMyMenu Is Nothing Then Set mcbMyMenu = Application.CommandBars.Add("Mod. Personale", msoBarFloating, , True)
    
    'Men|fffd| Sistema
    Set pu = CreaMenu("S", "Sistema")
    'Sottomen|fffd| Salva e Chiudi
    CreaSottoMenu pu, strKeyName & "SSC", "Salva e Chiudi " & Me.Name, "Salva il foglio e chiude l'applicazione", strKeyName & "ModuloPersonaleWorkbook.SSC"
    'Sottomen|fffd| Invia
    CreaSottoMenu pu, strKeyName & "SI", "Invia " & Me.Name, "Invio del foglio per email al server", strKeyName & "ModuloPersonaleWorkbook.SI"
    'Sottomen|fffd| Agg. Commesse
    CreaSottoMenu pu, strKeyName & "SAC", "Agg. Commesse " & Me.Name, "Invio del foglio per l'aggiornamento delle Commesse", strKeyName & "ModuloPersonaleWorkbook.SAC"
    
    'Men|fffd| Funzioni
    Set pu = CreaMenu("F", "Funzioni")
    'Sottomen|fffd| Orario Standard
    CreaSottoMenu pu, strKeyName & "FOS", "Orario Standard " & Me.Name, "Segna un Orario standard", strKeyName & "ModuloPersonaleWorkbook.FOS"
    'Sottomen|fffd| Segna Entrata
    CreaSottoMenu pu, strKeyName & "FSE", "Segna Entrata " & Me.Name, "Segna l'ora attuale in corrispondenza dell'entrata del giorno odierno", strKeyName & "ModuloPersonaleWorkbook.FSE"
    'Sottomen|fffd| Segna Uscita
    CreaSottoMenu pu, strKeyName & "FSU", "Segna Uscita " & Me.Name, "Segna l'ora attuale in corrispondenza dell'uscita del giorno odierno", strKeyName & "ModuloPersonaleWorkbook.FSU"
    
    'Impostazioni barra
    With mcbMyMenu
        .Width = intStdWidth * 2.1
        .Protection = msoBarNoCustomize + msoBarNoChangeVisible
        .Top = ActiveWindow.Top + 100
        .Left = ActiveWindow.Left + 100
        .Visible = True
    End With
End Sub

Private Sub RimuoveTuttiMenu()

  Dim ctl As Office.CommandBarControl
  
  On Error Resume Next
  Set mcbMyMenu = Application.CommandBars![Mod. Personale]
  On Error GoTo 0
  
  If Not mcbMyMenu Is Nothing Then
    Dim pu As Office.CommandBarPopup
    
    Set pu = mcbMyMenu.FindControl(MsoControlType.msoControlPopup, , "S", , False)
    RimuoveSottoMenu pu
    Set pu = mcbMyMenu.FindControl(MsoControlType.msoControlPopup, , "F", , False)
    RimuoveSottoMenu pu
    
  End If
    
End Sub

Private Sub RimuoveSottoMenu(ByVal Menu As Office.CommandBarPopup)
  Dim strKeyName As String
  Dim ctl As Office.CommandBarControl
  strKeyName = "'" & Me.Name & "'!"
  
  If Not Menu Is Nothing Then
    For Each ctl In Menu.Controls
      If InStr(1, ctl.Tag, strKeyName, vbTextCompare) > 0 Then
        ctl.Visible = False
      End If
    Next ctl
  End If

End Sub

Private Sub InvioFoglio(Recipient As String)
    Dim strMessage As String

    If Application.MailSystem = xlNoMailSystem Then
        strMessage = "Spiacente, ma non risulta nessun programma di posta elettronica installato." & vbCrLf
        GoTo MailErr2
        Exit Sub
    End If
    
    On Error GoTo MailErr
    Application.MailLogon
    Me.SendMail Recipient, "Modulo Personale"
    Application.MailLogoff
    On Error GoTo 0
    strMessage = "Modulo trasmesso correttamente al programma di posta elettronica" & vbCrLf & _
        "Controllare l'esito dell'effettivo invio all'interno del proprio programma."
    MsgBox strMessage, vbInformation + vbOKOnly, "Modulo Personale"
    SSC
    Exit Sub
MailErr:
    strMessage = "Si |fffd| presentato un errore non previsto da " & Err.Source & ": <" & Err.Description & ">" & vbCrLf
MailErr2:
    strMessage = strMessage & "Provvedere ad un invio manuale con una mail a " & Recipient & _
        " allegando il file " & Me.FullName & ", grazie!"
    MsgBox strMessage, vbCritical + vbOKOnly, "Problemi Invio Mail"
    Exit Sub
End Sub

Public Sub SSC()
    'Salva e chiude
    If Application.Workbooks.Count > 1 Then
      Me.Close True
    Else
      Me.Save
      Application.Quit
    End If
End Sub

Public Sub SI()
    InvioFoglio gstrEMailModPersonale
End Sub

Public Sub SAC()
    InvioFoglio gstrEMailModAggiornamento
End Sub

Public Sub FOS()
    'Orario Standard
    frmOrarioStandard.Show
End Sub

Public Sub FSE()
    'Segna Entrata
    SegnaOrario True
End Sub

Public Sub FSU()
    'Segna Uscita
    SegnaOrario False
End Sub

Private Function SegnaOrario(ByVal SEntrata As Boolean) As Integer
    Dim PeriodoRif As Date
    Dim Ora As Date
    Dim intRiga As Integer
    Dim Delta As Date
    
    Ora = Date + Time
    PeriodoRif = wksConfigura.Range("cfgMese").Value
    If Year(Ora) = Year(PeriodoRif) And Month(Ora) = Month(PeriodoRif) Then
        'Mese buono
        intRiga = Day(Ora) + 8
    Else
        MsgBox "Periodo di riferimento non valido", vbOKOnly + vbExclamation
        Exit Function
    End If
    Delta = TimeSerial(0, 3, 0)
    Ora = TimeSerial(Hour(Ora), Minute(Ora), 0)
    If SEntrata Then
        wksLavoro.Cells(intRiga, 2).Value = Ora - Delta
    Else
        wksLavoro.Cells(intRiga, 3).Value = Ora + Delta
    End If
    SSC
End Function
Attribute VB_Name = "Settings"
Option Private Module

Public Const gstrPassword As String = "!NetComEng"
Public Const gstrEMailModPersonale As String = "mod.personale@cosmo.netcomgroup.eu"
Public Const gstrEMailModAggiornamento As String = "mod.aggiornamento@cosmo.netcomgroup.eu"
Attribute VB_Name = "frmOrarioStandard"
Attribute VB_Base = "0{EA43E95E-8CD7-4E27-BEB5-DCBD334DF00A}{0BD738C6-8F5E-40AC-8B72-E8A9010D5228}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub OrarioStandard(ByVal Entrata As Date, ByVal Uscita As Date, ByVal Pausa As Date)
    Dim x As Integer
    Const intRiPrima As Integer = 19         'Primo giorno del mese
    Const intRiUltima As Integer = 49       'Ultimo giorno
    Const intCoFormato As Integer = 75      'Colonna dove |fffd| memorizzato il formato F) Feriale; V) Festivo; U) Fuori Mese
    Const intCoDalle As Integer = 2         'Colonna Dalle
    Const intCoAlle As Integer = 3          'Colonna Alle
    Const intCoPausa As Integer = 4         'Colonna Pausa
    Const intColLavoro As Integer = 7       'Prima Colonna Lavoro
    Const intColLavorate As Integer = 5     'Colonna totale lavorate

    Application.ScreenUpdating = False

    With wksLavoro
        For x = intRiPrima To intRiUltima
            If .Cells(x, intCoFormato).Value = "F" Then
                If IsEmpty(.Cells(x, intCoDalle).Value) Then
                     .Cells(x, intCoDalle).Value = Entrata
                End If
                If IsEmpty(.Cells(x, intCoAlle).Value) Then
                     .Cells(x, intCoAlle).Value = Uscita
                End If
                If IsEmpty(.Cells(x, intCoPausa).Value) Then
                     .Cells(x, intCoPausa).Value = Pausa
                End If
                If IsEmpty(.Cells(x, intColLavoro).Value) Then
                    .Cells(x, intColLavoro).Value = .Cells(x, intColLavorate).Value
                End If
            End If
        Next x
    End With
        
    Application.ScreenUpdating = True
End Sub

Private Sub cmdAnnulla_Click()
    Unload Me
End Sub

Private Sub cmdImposta_Click()
    Dim datDalle As Date
    Dim datAlle As Date
    Dim datPausa As Date
    
    On Error Resume Next
    datDalle = CDate(cmbDalle.Text)
    datAlle = CDate(cmbAlle.Text)
    datPausa = CDate(cmbPausa.Text)
    On Error GoTo 0
    
    OrarioStandard datDalle, datAlle, datPausa
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    Dim lngDefault As Long
    Const strShortTime As String = "hh.nn"
    CaricaComboDataOra TimeSerial(7, 0, 0), TimeSerial(10, 30, 0), TimeSerial(0, 15, 0), strShortTime, Me.cmbDalle, TimeSerial(8, 45, 0)
    CaricaComboDataOra TimeSerial(16, 0, 0), TimeSerial(20, 30, 0), TimeSerial(0, 15, 0), strShortTime, Me.cmbAlle, TimeSerial(17, 45, 0)
    CaricaComboDataOra TimeSerial(0, 30, 0), TimeSerial(1, 30, 0), TimeSerial(0, 30, 0), strShortTime, Me.cmbPausa, TimeSerial(1, 0, 0)
    Me.cmbDalle.SetFocus
End Sub

Private Sub CaricaComboDataOra( _
    ByVal Dalle As Date, _
    ByVal Alle As Date, _
    ByVal Frequenza As Date, _
    ByVal Formato As String, _
    ByRef Combo As MSForms.ComboBox, _
    ByVal ValoreDefault As Date)
    
    Dim datUnaData As Date
    Dim lngIndiceDefault As Long
    lngIndiceDefault = -1
    Combo.Clear
    For datUnaData = Dalle To Alle Step Frequenza
        Combo.AddItem Format$(datUnaData, Formato)
        If Year(datUnaData) = Year(ValoreDefault) And _
            Month(datUnaData) = Month(ValoreDefault) And _
            Day(datUnaData) = Day(ValoreDefault) And _
            Hour(datUnaData) = Hour(ValoreDefault) And _
            Minute(datUnaData) = Minute(ValoreDefault) Then lngIndiceDefault = (Combo.ListCount - 1)
    Next datUnaData
    If lngIndiceDefault > -1 Then Combo.ListIndex = lngIndiceDefault
End Sub
Attribute VB_Name = "wksConfigura"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wksEventi"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wksLavoro"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmbCausale, 2, 0, MSForms, ComboBox"
Attribute VB_Control = "cmbCommessa, 3, 1, MSForms, ComboBox"
Attribute VB_Control = "cmbClasse, 4, 2, MSForms, ComboBox"
Option Explicit
Private mstrLastCommessa As String

Private Sub cmbCommessa_Change()
    Dim rngOC As Range
    Dim rngFC As Range
    
    Set rngOC = wksLavoro.cmbCommessa.TopLeftCell
    If Not IsEmpty(rngOC.Value) Then
        Set rngFC = rngOC.Offset(1, 0)
        If IsEmpty(rngFC.Value) Then
            If UCase(CStr(rngOC.Value)) = "CAUSALI ASSENZA" Then
                rngFC.Value = "PRM"
            Else
                rngFC.Value = "ORD"
            End If
        End If
        mstrLastCommessa = cmbCommessa.Value
    End If
    Set rngOC = Nothing
    Set rngFC = Nothing
End Sub

Private Sub cmbCommessa_DropButtonClick()
    If Len(mstrLastCommessa) > 0 Then
      cmbCommessa.Value = mstrLastCommessa
    End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    With wksLavoro
        If (ActiveCell.Column >= 7 And ActiveCell.Column <= 18) Or (ActiveCell.Column >= 26 And ActiveCell.Column <= 63) Then
            Select Case ActiveCell.Row
            Case 17
                .cmbClasse.Visible = False
                .cmbCausale.Visible = False
                MuoveCombo .cmbCommessa
            Case 18
                If UCase(CStr(ActiveCell.Offset(-1, 0).Value)) = "CAUSALI ASSENZA" Then
                    .cmbCommessa.Visible = False
                    .cmbClasse.Visible = False
                    MuoveCombo .cmbCausale
                Else
                    .cmbCommessa.Visible = False
                    .cmbCausale.Visible = False
                    MuoveCombo .cmbClasse
                End If
            Case Else
                If .cmbCommessa.Visible Then .cmbCommessa.Visible = False
                If .cmbClasse.Visible Then .cmbClasse.Visible = False
                If .cmbCausale.Visible Then .cmbCausale.Visible = False
            End Select
        Else
            If .cmbCommessa.Visible Then .cmbCommessa.Visible = False
            If .cmbClasse.Visible Then .cmbClasse.Visible = False
            If .cmbCausale.Visible Then .cmbCausale.Visible = False
        End If
    End With
End Sub

Private Sub MuoveCombo(ByRef MioCombo As MSForms.ComboBox)
    With MioCombo
        .Top = ActiveCell.Top
        .Left = ActiveCell.Left
        .Width = ActiveCell.Width
        .Height = ActiveCell.Height
        On Error Resume Next
        .LinkedCell = ActiveCell.Address
        If Err.Number <> 0 Then
            ActiveCell.ClearContents
            .LinkedCell = ActiveCell.Address
            Err.Clear
        End If
        On Error GoTo 0
        .Visible = True
    End With
End Sub

Public Sub ImpostaPagineLavoro()
    Dim i As Integer
    Dim p As Boolean
    On Error Resume Next
    Application.ScreenUpdating = False
    Application.EnableCancelKey = xlDisabled
    If wksLavoro.ProtectContents Then
        wksLavoro.Unprotect Settings.gstrPassword
        p = True
    Else
        p = False
    End If
    
    Dim sngTotPag3 As Single
    Dim sngTotPag2 As Single
    Dim sngTotPag1 As Single
    
    sngTotPag1 = wksLavoro.Range("TotPag1").Value
    sngTotPag2 = wksLavoro.Range("TotPag2").Value
    sngTotPag3 = wksLavoro.Range("TotPag3").Value
    
    If sngTotPag3 > 0 Then
      wksLavoro.PageSetup.PrintArea = wksLavoro.Range("AreaStampaPag3").Address
    ElseIf sngTotPag2 > 0 Then
      wksLavoro.PageSetup.PrintArea = wksLavoro.Range("AreaStampaPag2").Address
    Else
      wksLavoro.PageSetup.PrintArea = wksLavoro.Range("AreaStampaPag1").Address
    End If
    
    If p Then
        wksLavoro.Protect Settings.gstrPassword
    End If
    Application.ScreenUpdating = True
    Application.EnableCancelKey = xlInterrupt
End Sub


Attribute VB_Name = "wksRimborso"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmbCommessa, 2, 0, MSForms, ComboBox"
Option Explicit
Private mstrLastCommessa As String
Private mbolHoNascosto As Boolean

Private Sub cmbCommessa_Click()
    If Not (cmbCommessa.TopLeftCell.EntireRow.Range("W1").Value) Then
        cmbCommessa.TopLeftCell.Range("A1:A2").ClearContents
    Else
        cmbCommessa.TopLeftCell.Range("A1:A2").Value = cmbCommessa.Value
        mstrLastCommessa = cmbCommessa.Value
    End If
End Sub

Private Sub cmbCommessa_DropButtonClick()
    If Len(mstrLastCommessa) > 0 Then cmbCommessa.Value = mstrLastCommessa
End Sub

Private Sub Worksheet_Activate()
    Me.MostraTutto
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Me.MostraTutto
    If ActiveCell.Column = 2 And ActiveCell.Row >= 10 And ActiveCell.Row <= 71 Then
        wksRimborso.cmbCommessa.Visible = False
        wksRimborso.cmbCommessa.Top = Target.Top
        wksRimborso.cmbCommessa.Left = Target.Left
        wksRimborso.cmbCommessa.Width = Target.Width
        wksRimborso.cmbCommessa.Height = Target.Height
        On Error Resume Next
        wksRimborso.cmbCommessa.LinkedCell = ActiveCell.Offset(0, 22).Address
        If Err.Number <> 0 Then
            ActiveCell.ClearContents
            wksRimborso.cmbCommessa.LinkedCell = ActiveCell.Offset(0, 22).Address
            Err.Clear
        End If
        On Error GoTo 0
        wksRimborso.cmbCommessa.Visible = True
    Else
        If wksRimborso.cmbCommessa.Visible Then wksRimborso.cmbCommessa.Visible = False
    End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim rngOC As Range
    
    Application.EnableCancelKey = xlDisabled
    Application.EnableEvents = False
    On Error Resume Next
    For Each rngOC In Target
        If rngOC.Row >= 10 And rngOC.Row <= 71 And rngOC.Column >= 1 And rngOC.Column <= 18 Then
            'Qualcosa da fare
            If IsEmpty(rngOC.Value) Then
                'Gestisce le cancellazioni
                If (rngOC.Row Mod 2) = 0 Then
                    'Riga superiore (giorno, commessa, note)
                    Select Case rngOC.Column
                    Case 2  'Commessa
                        'Cancella tutto
                        With rngOC.EntireRow
                            .Range("X1").ClearContents
                            .Range("C1:R1").ClearContents
                            .Range("C2:I2").ClearContents
                            .Range("K2:R2").ClearContents
                        End With
                    End Select
                Else
                    'Riga inferiore (scontrini)
                    Select Case rngOC.Column
                    Case 3, 5, 7, 11, 13, 15, 17
                        rngOC.Range("B1").ClearContents
                    End Select
                End If
            Else
                'Gestisce gli inserimenti verificando l'inserimento di una commessa
                If (rngOC.Row Mod 2) = 0 Then
                    'Riga superiore (giorno, commessa, note)
                    Select Case rngOC.Column
                    Case 3, 11 'Partenza e Destinazione
                        If Not (rngOC.EntireRow.Range("W1").Value) Then
                            Application.Undo
                            MsgBox "Bisogna prima inserire una Commessa", vbCritical + vbOKOnly, "Mod. Personale / Rimborso"
                            Exit For
                        End If
                    End Select
                Else
                    Select Case rngOC.Column
                    Case 3, 5, 7, 9, 11, 13, 15, 17   'Numero di scontrini / chilometri
                        If Not (rngOC.EntireRow.Range("W1").Value) Then
                            Application.Undo
                            MsgBox "Bisogna prima inserire una Commessa", vbCritical + vbOKOnly, "Mod. Personale / Rimborso"
                            Exit For
                        End If
                    Case 4, 6, 8, 12, 14, 16, 18 'Importo
                        If IsEmpty(rngOC.Offset(0, -1).Value) Then
                            Application.Undo
                            MsgBox "Bisogna prima inserire un numero di Scontrini e/o Fatture", vbCritical + vbOKOnly, "Mod. Personale / Rimborso"
                            Exit For
                        End If
                    End Select
                End If
            End If
        End If
    Next rngOC
    Application.EnableEvents = True
    Application.EnableCancelKey = xlInterrupt
End Sub

Public Sub NascondiNonUsate()
    Dim i As Integer
    Dim p As Boolean
    On Error Resume Next
    Application.ScreenUpdating = False
    Application.EnableCancelKey = xlDisabled
    If wksRimborso.ProtectContents Then
        wksRimborso.Unprotect Settings.gstrPassword
        p = True
    Else
        p = False
    End If
    For i = 10 To 71 Step 2
        If IsEmpty(wksRimborso.Cells.Item(i, 2).Value) Then
            wksRimborso.Cells.Item(i, 1).Range("1:2").EntireRow.Hidden = True
        End If
    Next i
    If p Then
        wksRimborso.Protect Settings.gstrPassword
    End If
    wksRimborso.cmbCommessa.Visible = False
    mbolHoNascosto = True
    Application.ScreenUpdating = True
    Application.EnableCancelKey = xlInterrupt
End Sub

Public Sub MostraTutto()
    Dim i As Integer
    Dim p As Boolean
    If mbolHoNascosto Then
        On Error Resume Next
        Application.EnableCancelKey = xlDisabled
        Application.ScreenUpdating = False
        If wksRimborso.ProtectContents Then
            wksRimborso.Unprotect Settings.gstrPassword
            p = True
        Else
            p = False
        End If
        For i = 10 To 71 Step 2
            If Year(wksRimborso.Cells.Item(i, 1).Value) = Year(wksConfigura.Range("cfgMese").Value) And _
                    Month(wksRimborso.Cells.Item(i, 1).Value) = Month(wksConfigura.Range("cfgMese").Value) Then
                wksRimborso.Cells.Item(i, 1).Range("1:2").EntireRow.Hidden = False
            End If
        Next i
        If p Then
            wksRimborso.Protect Settings.gstrPassword
        End If
        mbolHoNascosto = False
        Application.ScreenUpdating = True
        Application.EnableCancelKey = xlInterrupt
    End If
End Sub



INQUEST-PP=macro
