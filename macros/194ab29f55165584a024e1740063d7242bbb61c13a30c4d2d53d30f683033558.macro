Attribute VB_Name = "Module1"
Sub showInstruct()
    'MsgBox "called showInstruct"
End Sub
Private Sub createRadioButtonsInnerForBoolean(areatmp As Range)
    Dim area As Range
    Set area = Range(areatmp.Address)
    area.ClearContents
    Set mGroup = ActiveSheet.GroupBoxes.Add(area.Left, area.Top, area.Width, area.Height)
    With mGroup
        .Caption = ""
    End With
    Dim i As Integer
    i = 1
    Dim ary_names() As String
    ReDim ary_names(1)
    ary_names(i) = mGroup.Name
    For Each cell In area
        i = i + 1
        ReDim Preserve ary_names(i)
        Dim tmp_cell As Range
        Set tmp_cell = Range(cell.Address)
        Dim mText As String
        mText = ""
        Dim x_offset As Integer
        Dim wid_pad As Integer
        wid_pad = 0
        If (i = 2) Then
            mText = "|fffd||634||fffd|"
            x_offset = cell.Width * 15 / 100
        ElseIf (i = 3) Then
            mText = "|fffd||634||fffd||fffd||fffd||fffd|"
            wid_pad = cell.Width * 2 / 3
            x_offset = 0
        Else
            Exit For
        End If
        Set rb = ActiveSheet.OptionButtons.Add(cell.Left + x_offset, cell.Top, tmp_cell.Width + wid_pad, tmp_cell.Height)
        With rb
            .Text = mText
            .LinkedCell = area.Cells(area.Rows.Count, 1).Address
        End With
        ary_names(i) = rb.Name
    Next cell
    ActiveSheet.Shapes.Range(ary_names).Group
End Sub

Private Sub createRadioButtonsInner(areatmp As Range)
    
    Dim area As Range
    Set area = Range(areatmp.Address)
    area.ClearContents
    Set mGroup = ActiveSheet.GroupBoxes.Add(area.Left, area.Top, area.Width, area.Height)
    With mGroup
        .Caption = ""
    End With
    Dim i As Integer
    i = 1
    Dim ary_names() As String
    ReDim ary_names(1)
    ary_names(i) = mGroup.Name
    For Each cell In area
        i = i + 1
        ReDim Preserve ary_names(i)
        Dim tmp_cell As Range
        Set tmp_cell = Range(cell.Address)
        Dim rb As OptionButton
        
        Set rb = ActiveSheet.OptionButtons.Add(cell.Left, cell.Top, tmp_cell.Width, tmp_cell.Height)
        With rb
            .Text = ""
            .Display3DShading = False
            .LinkedCell = area.Cells(area.Rows.Count, area.Columns.Count).Address
        End With
        ary_names(i) = rb.Name
    Next cell
    ActiveSheet.Shapes.Range(ary_names).Group
End Sub
Private Sub moveSheet(sheet_index As Integer)

    If (sheet_index <> ActiveSheet.Index) Then

         On Error Resume Next

         Sheets(sheet_index).Activate

         If Err.Number <> 0 Then Sheets(1).Activate

    End If

End Sub

Sub move2NextSheet()

    Call moveSheet(ActiveSheet.Index + 1)

End Sub

Sub move2PreviousSheet()

    Call moveSheet(ActiveSheet.Index - 1)

End Sub

Sub createRadioButtons()
If (isPasswordRequired(Application.ActiveSheet)) Then
        If (Not reqPassword(Application.ActiveSheet)) Then
            Exit Sub
        End If
    End If
    Call createRadioButtonsInner(Selection)
End Sub
Sub deleteAllOptionButtons()
If (isPasswordRequired(Application.ActiveSheet)) Then
        If (Not reqPassword(Application.ActiveSheet)) Then
            Exit Sub
        End If
    End If
    For Each obj In ActiveSheet.OptionButtons
          obj.Delete
    Next obj
End Sub
Sub deleteAllGroupBoxes()
If (isPasswordRequired(Application.ActiveSheet)) Then
        If (Not reqPassword(Application.ActiveSheet)) Then
            Exit Sub
        End If
    End If
    ActiveSheet.GroupBoxes.Visible = False
    For Each obj In ActiveSheet.GroupBoxes
        If (TypeOf obj Is GroupBox) Then
Try:
            On Error GoTo Exception
            obj.Delete
            On Error GoTo Finally
Exception:
          MsgBox "error"
Finally:

        End If
    Next obj
End Sub
Private Function isPasswordRequired(mSheet As Worksheet)
    Dim isSheetProtected As Boolean
    isSheetProtected = mSheet.ProtectContents
    isPasswordRequired = isSheetProtected
End Function
Private Function getSheetPassword() As String
    getSheetPassword = "22001400"
End Function
Private Function reqPassword(mSheet As Worksheet) As Boolean
Dim pass As String
pass = InputBox("Enter Admin Password")
If (pass Like getSheetPassword()) Then
    reqPassword = True
Else
    reqPassword = False
End If


End Function
Sub deleteAllShapes()
If (isPasswordRequired(Application.ActiveSheet)) Then
        If (Not reqPassword(Application.ActiveSheet)) Then
            Exit Sub
        End If
    End If
    For Each obj In ActiveSheet.Shapes
        'If (TypeOf obj Is OptionButton Or TypeOf obj Is GroupBox) Then
            obj.Delete
        'End If
        
    Next obj
End Sub
Sub deleteAllRegionsOfRadioButtons()
If (isPasswordRequired(Application.ActiveSheet)) Then
        If (Not reqPassword(Application.ActiveSheet)) Then
            Exit Sub
        End If
    End If
    Call deleteAllOptionButtons
    Call deleteAllGroupBoxes
End Sub
Sub setupRegionOfRadioButtons()
        If (isPasswordRequired(Application.ActiveSheet)) Then
        If (Not reqPassword(Application.ActiveSheet)) Then
            Exit Sub
        End If
    End If
      Dim area As Range
      Set area = Selection
      Dim row_cnt As Integer
      Dim column_cnt As Integer
       column_cnt = area.Columns.Count
       row_cnt = area.Rows.Count
        For i = 1 To row_cnt
            Dim tmp_rng As Range
            Set tmp_rng = area.Rows(i)
            If (Not tmp_rng Is Nothing) Then
                Call createRadioButtonsInner(tmp_rng)
            End If
        Next i
End Sub


Attribute VB_Name = "Module2"
Private Function unlockSheetAndGetPassword(mSheet As Worksheet)
    
Dim i As Integer, j As Integer, k As Integer
  Dim l As Integer, m As Integer, n As Integer
  Dim i1 As Integer, i2 As Integer, i3 As Integer
  Dim i4 As Integer, i5 As Integer, i6 As Integer
  On Error Resume Next
  For i = 65 To 66: For j = 65 To 66: For k = 65 To 66
  For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66
  For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66
  For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126


 ActiveSheet.Unprotect Chr(i) & Chr(j) & Chr(k) & _
      Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & Chr(i3) & _
      Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
  If ActiveSheet.ProtectContents = False Then
      MsgBox "One usable password is " & Chr(i) & Chr(j) & _
          Chr(k) & Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & _
          Chr(i3) & Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
  End If
  Next: Next: Next: Next: Next: Next
  Next: Next: Next: Next: Next: Next

    unlockSheetAndGetPassword = False
    
End Function

Private Function getSheetPassword() As String
    getSheetPassword = "22001400"
End Function

Private Sub clearUserDataInRadioButtonSheet(mSheet As Worksheet)
    Dim mRange As Range
    Dim row_count As Integer
    Dim row_index_offset As Integer
    row_index_offset = 5
    Dim isSheetProtected As Boolean
    isSheetProtected = mSheet.ProtectContents
    If (isSheetProtected) Then
        mSheet.Unprotect (getSheetPassword())
        'a = unlockSheetAndGetPassword(mSheet)
    End If
    
    row_count = [F5].CurrentRegion.Rows.Count - row_index_offset + 1
    Dim radiobtn_column_index As Integer
    radiobtn_column_index = Range("Q5").Column
    
    Set mRange = Range(Cells(row_index_offset, radiobtn_column_index), Cells(row_index_offset + row_count - 1, radiobtn_column_index + 1))
    'MsgBox mRange.Address
    Dim fRange As Range
    Dim part_range_row_count As Integer
    part_range_row_count = 0
    For i = row_index_offset To row_count + row_index_offset - 1
        Dim tmp_range1 As Range
        Dim chk_col_idx As Integer
        chk_col_idx = Range("C1").Column
        Set tmp_range1 = Range(Cells(i, chk_col_idx), Cells(i, chk_col_idx))
        
        If ((tmp_range1.Text Like "#*.#*.*#")) Then
            part_range_row_count = part_range_row_count + 1
        ElseIf (part_range_row_count > 0) Then
            Dim nRange As Range
            Set nRange = Application.Union(Range(Cells(i - 1, radiobtn_column_index), Cells(i - part_range_row_count, radiobtn_column_index)), Range(Cells(i - 1, radiobtn_column_index + 2), Cells(i - part_range_row_count, radiobtn_column_index + 3)))
            If (fRange Is Nothing) Then
                Set fRange = nRange
            Else
                Set fRange = Application.Union(fRange, nRange)
            End If
            part_range_row_count = 0
            chk_col_idx = Range("G1").Column
            Set tmp_range1 = Range(Cells(i, chk_col_idx), Cells(i, chk_col_idx))
            If (tmp_range1.Text Like "Non-Applicable") Then
                'MsgBox "find na at " & tmp_range1.Address
                tmp_range1.Value = "Applicable"
            End If
        End If
        
    Next i
    'If (Not (fRange Is Nothing)) Then
    'MsgBox fRange.Address
    'Else
    '    MsgBox "fRange is nothing"
    'End If
    If (isSheetProtected) Then
        mSheet.Protect Password:=getSheetPassword(), UserInterfaceOnly:=True
    End If
    fRange.ClearContents
    'If (isSheetProtected) Then
    '    mSheet.Protect Password:=getSheetPassword(), UserInterfaceOnly:=True
    'End If
    
End Sub
Private Sub clearUserDataInCurrentRadioButtonSheet()
    Call clearUserDataInRadioButtonSheet(Application.ActiveSheet)
    
End Sub

Sub clearUserDataInCurrentRadioButtonSheetWithMessage()
    Dim resp As Integer
    resp = MsgBox("|fffd||634||fffd| |fffd||fffd||1ae||fffd||fffd||fffd||fffd| |fffd||537||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||378||fffd| |fffd||fffd||fffd||fffd||fffd||3fd||f0||6bd||fffd||fffd||3f1||fffd|?", vbYesNo)
    'MsgBox "resp: " & resp
    If (resp = 6) Then 'clicked yes
        Call clearUserDataInCurrentRadioButtonSheet
    End If
    
End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
    On Error GoTo mexit
    Dim ws As Worksheet
    
    Set ws = Sheets(1)
    ws.Select
    If (ws.Range("P16").Text Like "#") Then
        Call Module1.showInstruct
    End If
mexit:
    Exit Sub
    
End Sub


INQUEST-PP=macro
