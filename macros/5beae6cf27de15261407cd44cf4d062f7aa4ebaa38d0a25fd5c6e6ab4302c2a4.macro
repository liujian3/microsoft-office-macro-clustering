Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Sub PrepareSecAccWorksheet()

    'Aus Geos werden |fffd|ber die SIRNO Daten erzeugt
    'PrepareSecAccountWorksheet dient dem Fachbereich zum Umformen dieser von Geos
    'erzeugten Daten in ein Excel, welches dann an den Kunden versandt werden kann.
    'Der Code von PrepareSecAccountWorksheet wird also nur in der RSC durchgef|fffd|hrt.
    
    Dim zeile, spalte As Integer
    Dim abbruch As Boolean
    Dim NeueFormel, ausgangswert, abziehen, komplett As String
    
    Worksheets(1).Activate
    
    
    'Wenn im Blatt Data in Cella A1 nichts drinnen steht, dann gehe ich davon aus, dass keine Daten vorhanden sind.
    'somit wird die Verarbeitung abgebrochen
    If Worksheets(1).Cells(1, 1) = "" Then
        Worksheets(3).Select
        Exit Sub
    End If
    
    ScreenUpdating = False
    
    '13.07.2015 -> Andi + Anja
    'Bevor die |fffd|berschriften gesetzt werden, muss das Attribut "Custodian Number" in die Spalte T (= 20) gecuttet werden.
    Worksheets(1).Columns("L:L").Cut
    Worksheets(1).Columns("T:T").Select
    Worksheets(1).Paste
  

    '|fffd|berschriften f|fffd|r zus|fffd|tzliche, vom Kunden auszuf|fffd|llende Felder erzeugen
    '11.07.2013 - Neue Spalte Client Number
    Worksheets(1).Cells(1, 12) = "Client Number"
    '05.09.2013 - Neue Spalte Recipient Code
    Worksheets(1).Cells(1, 13) = "Recipient Code"
    Worksheets(1).Cells(1, 14) = "Recipient's name"
    '05.09.2013 - Adresse aufteilen auf 3 Spalten
    Worksheets(1).Cells(1, 15) = "Street"
    Worksheets(1).Cells(1, 16) = "City"
    Worksheets(1).Cells(1, 17) = "ZIP"
    '05.09.2013 - Neue Spalte Tax Domicile
    Worksheets(1).Cells(1, 18) = "Tax Domicile"
    '11.04.2014 - Neue Spalte State (OAN mit Anja)
    Worksheets(1).Cells(1, 19) = "State"
    '13.07.2015 - Neue Spalte "Custodian Name" (OAN mit Anja)
    'Worksheets(1).Cells(1, 20) = "Custodian Name"
    '04.11.2015 - Spalte 20 - "Custodian Name" auf "Custodian Number" ge|fffd|ndert
    Worksheets(1).Cells(1, 20) = "Custodian Number"
    

    
    'Schrift in der |fffd|berschriftszeile fett machen, und Zellen grau einf|fffd|rben
    Worksheets(1).Rows("1:1").Font.Bold = True
    Worksheets(1).Range("A1:T1").Interior.ColorIndex = 15
    
    '11.07.2013 Anzeige Menge auf 2 Dezimalstellen bringen
    Columns("J:J").Select
    Selection.NumberFormat = "#,##0.00_ ;-#,##0.00 "
    
    'Spalten auf optimale Breite bringen, und danach Spalten f|fffd|r Namen und Adressdaten extra gr|fffd||fffd|er machen
    Columns("A:T").Columns.AutoFit
    Worksheets(1).Columns("N:T").ColumnWidth = 25
    
    'Ganz oben eine leere Zeile einf|fffd|gen, in die dann die Buttons kommen
    Worksheets(1).Rows("1:1").Insert Shift:=xlDown
    Worksheets(1).Rows("1:1").RowHeight = 52.5
        
    
    'In einer Schleife alle Zeilen mit ISINs durchgehen, und eine zus|fffd|tzliche
    'Zeile erzeugen, in der der Kunde die Steuerdaten seiner eigenen Kunden r|fffd|ckmelden muss,
    'sowie einer Check-Zeile, in der |fffd|berpr|fffd|ft wird, ob schon alle Angaben
    'da sind, und ob z.B. die Summen |fffd|bereinstimmen
    
    zeile = 0
    spalte = 1

    abbruch = False
    
    Do Until abbruch
        
        zeile = zeile + 3
        'Wenn Zeile ohne Inhalt gefunden, dann ist die Liste mit den ISINs zu Ende
        If Worksheets(1).Cells(zeile, 1) = "" Then
            abbruch = True
            Exit Do
        End If
        
        'Zeile ausw|fffd|hlen, die aus Geos bef|fffd|llt ist, und darunter 2 Leerzeilen erzeugen
        Worksheets(1).Cells(zeile + 1, spalte).EntireRow.Insert , CopyOrigin:=xlFormatFromLeftOrAbove
        Worksheets(1).Cells(zeile + 1, spalte).EntireRow.Insert , CopyOrigin:=xlFormatFromLeftOrAbove
        
        '05.09.2013 Recipient Code mit Drop Down versehen, damit nur 08, 15 oder 16 eingegeben werden kann
        '13.07.2015 Change 01,02,99 auf 08,15,16
        '05.12.2016 Change 08,15,16 auf 15,16
        Worksheets(1).Cells(zeile + 1, 13).Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="15,16"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Wrong Recipient Code"
            .InputMessage = ""
            .ErrorMessage = "Possible Codes are: 15, 16"
            .ShowInput = True
            .ShowError = True
        End With
        Selection.NumberFormat = "00"
      
        'Tax Domicile mit Daten|fffd|berpr|fffd|fungsformel versehen, damit nur 2-Stellig und nur Buchstaben A bis Z (ASCII-Codes 65 bis 90) eingegeben werden k|fffd|nnen
        'Der Befehl CODE erh|fffd|lt einen Laufzeitfehler, wenn man ihn als Daten|fffd|berpr|fffd|fung auf einen leeren String schickt. Nachdem das Excel beim Aufbau noch leer ist,
        'w|fffd|rde das im folgenden Validation passieren. Daher wird die Zelle mit einem fiktiven Wert (in unserem Fall blank) bef|fffd|llt, dann die Validation gesetzt, und
        'danach der Zellwert (blank) wieder gel|fffd|scht.
        Worksheets(1).Cells(zeile + 1, 18).Select
        Worksheets(1).Cells(zeile + 1, 18) = " "
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:= _
            "=IF(OR(LEN(R" & zeile + 1 & ")>2,CODE(LEFT(R" & zeile + 1 & ",1))<65,CODE(LEFT(R" & zeile + 1 & ",1))>90,CODE(RIGHT(R" & zeile + 1 & ",1))<65,CODE(RIGHT(R" & zeile + 1 & ",1))>90),0,1)"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Wrong Tax Domicile"
            .InputMessage = ""
            .ErrorMessage = "Possible is only A to Z, length must be 2 digits"
            .ShowInput = True
            .ShowError = True
        End With
        Worksheets(1).Cells(zeile + 1, 18) = ""
        
        '11.04.2014 NEU Andi mit Anja
        'STATE (= Spalte S = 19) mit Daten|fffd|berpr|fffd|fungsformel versehen, damit nur 2-Stellig und nur Buchstaben A bis Z (ASCII-Codes 65 bis 90) eingegeben werden k|fffd|nnen
        'Der Befehl CODE erh|fffd|lt einen Laufzeitfehler, wenn man ihn als Daten|fffd|berpr|fffd|fung auf einen leeren String schickt. Nachdem das Excel beim Aufbau noch leer ist,
        'w|fffd|rde das im folgenden Validation passieren. Daher wird die Zelle mit einem fiktiven Wert (in unserem Fall blank) bef|fffd|llt, dann die Validation gesetzt, und
        'danach der Zellwert (blank) wieder gel|fffd|scht.
        Worksheets(1).Cells(zeile + 1, 19).Select
        Worksheets(1).Cells(zeile + 1, 19) = " "
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:= _
            "=IF(OR(LEN(S" & zeile + 1 & ")>2,CODE(LEFT(S" & zeile + 1 & ",1))<65,CODE(LEFT(S" & zeile + 1 & ",1))>90,CODE(RIGHT(S" & zeile + 1 & ",1))<65,CODE(RIGHT(S" & zeile + 1 & ",1))>90),0,1)"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Wrong State"
            .InputMessage = ""
            .ErrorMessage = "Possible is only A to Z, length must be 2 digits"
            .ShowInput = True
            .ShowError = True
        End With
        Worksheets(1).Cells(zeile + 1, 19) = ""
        
        
      
        'Aus der unteren der beiden soeben eingef|fffd|gten Leerzeilen eine Check-Zeile machen
        'Diese zeigt OK an, wenn alle Werte richtig bef|fffd|llt sind, ansonsten NOT OK
        'Die folgende Formel |fffd|berpr|fffd|ft, ob rechts davon in der gleichen Zeile alle Checks auf OK gehen
        NeueFormel = "=if(countif(F" & zeile + 2 & ":S" & zeile + 2 & ",""OK"")<11,""NOT O.K."",""O.K."")"
        Worksheets(1).Cells(zeile + 2, 1).Formula = NeueFormel
        
        'Bedingte Formatierung f|fffd|r die OK/NOT OK-Zelle einf|fffd|gen
        Worksheets(1).Cells(zeile + 2, spalte).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""O.K."""
        Worksheets(1).Cells(zeile + 2, spalte).FormatConditions(1).Font.Color = -11489280
    
        'Check-Formel f|fffd|r Gross generieren
        ausgangswert = "F" & zeile
        abziehen = "F" & zeile + 1
        komplette = ausgangswert & "-" & abziehen
        'In der Formel wird eine Abweichung von 5% (../100*5) erlaubt
        'NeueFormel = "=if(abs(" & komplette & ")<=abs(" & ausgangswert & "/100*5),""OK""," & komplette & ")"
        NeueFormel = "=if(" & ausgangswert & "=" & abziehen & ",""OK""," & komplette & ")"
        Worksheets(1).Cells(zeile + 2, 6).Formula = NeueFormel
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 6).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 6).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
        
        'Check-Formel f|fffd|r Tax Amount generieren
        ausgangswert = "G" & zeile
        abziehen = "G" & zeile + 1
        komplette = ausgangswert & "-" & abziehen
        'In der Formel wird eine Abweichung von 5% (../100*5) erlaubt
        'NeueFormel = "=if(abs(" & komplette & ")<=abs(" & ausgangswert & "/100*5),""OK""," & komplette & ")"
        NeueFormel = "=if(" & ausgangswert & "=" & abziehen & ",""OK""," & komplette & ")"
        Worksheets(1).Cells(zeile + 2, 7).Formula = NeueFormel
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 7).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 7).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
        
        'Check-Formel f|fffd|r Quantity generieren
        ausgangswert = "J" & zeile
        abziehen = "J" & zeile + 1
        komplette = ausgangswert & "-" & abziehen
        'In der Formel wird keine Abweichung erlaubt
        'NeueFormel = "=if(" & ausgangswert & "=" & abziehen & ",""OK""," & ausgangswert & "-" & abziehen & ")"
        NeueFormel = "=if(" & ausgangswert & "=" & abziehen & ",""OK""," & komplette & ")"
        Worksheets(1).Cells(zeile + 2, 10).Formula = NeueFormel
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 10).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 10).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
        
        '11.07.2013 - Neue Spalte Client Number
        'Check-Formel f|fffd|r Client Number generieren
        Worksheets(1).Cells(zeile + 2, 12).Formula = "=if(L" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 12).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 12).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        '05.09.2013 - Neue Spalte Recipient Code
        'Check-Formel f|fffd|r Recipient Code generieren
        Worksheets(1).Cells(zeile + 2, 13).Formula = "=if(M" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 13).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 13).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        'Check-Formel f|fffd|r Recipient's name generieren
        Worksheets(1).Cells(zeile + 2, 14).Formula = "=if(N" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 14).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 14).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        'Check-Formel f|fffd|r Street generieren
        Worksheets(1).Cells(zeile + 2, 15).Formula = "=if(O" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 15).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 15).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        '05.09.2013 - Hauser
        'Check-Formel f|fffd|r City generieren
        Worksheets(1).Cells(zeile + 2, 16).Formula = "=if(P" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 16).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 16).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        '05.09.2013 - Hauser
        'Check-Formel f|fffd|r ZIP generieren
        Worksheets(1).Cells(zeile + 2, 17).Formula = "=if(Q" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 17).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 17).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        'Check-Formel f|fffd|r Tax Domicile generieren
        Worksheets(1).Cells(zeile + 2, 18).Formula = "=if(R" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 18).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 18).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
    
        '11.04.2014 NEU Andi mit Anja
        'Check-Formel f|fffd|r State generieren
        Worksheets(1).Cells(zeile + 2, 19).Formula = "=if(S" & zeile + 2 - 1 & "="""",""MISSING"",""OK"")"
        
        'Bedingte Formatierung einf|fffd|gen, damit Schriftfarbe GR|fffd|N, wenn OK drin steht
        Worksheets(1).Cells(zeile + 2, 19).FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=""OK"""
        With Worksheets(1).Cells(zeile + 2, 19).FormatConditions(1).Font
            .Bold = False
            .Italic = False
            .Color = -11489280
        End With
        
    
        'Der untere Rahmen der Checkzeile wird dicker gemacht, um die ISINs
        'voneinander abzugrenzen
        With Worksheets(1).Rows(zeile + 2).Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = xlAutomatic
            .Weight = xlThin
        End With
        'Textfarbe in der Checkzeile wird auf ROT gesetzt
        Worksheets(1).Rows(zeile + 2).Font.ColorIndex = 3
        
        'Eine neue, ausf|fffd|llbare Zeile in der oberen der beiden soeben eingef|fffd|gten Leerzeilen erzeugen
        Call NeueISINZeile(zeile)
        
        'Die Schrift der urspr|fffd|nglich von Geos kommenden Zeile fett machen, um
        'sie als "|fffd|berschrift" zu kennzeichnen, bei der eine neue ISIN beginnt
        With Worksheets(1).Rows(zeile).Font
            .Size = 11
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
        Worksheets(1).Rows(zeile).Font.Bold = True
                
    Loop
    
    Worksheets(1).Columns("A:A").EntireColumn.AutoFit
    
    'Den Button einf|fffd|gen, der dem Kunden dazu dient, bei einer ISIN neue
    'Unterzeilen f|fffd|r dahinter liegende Kunden einzuf|fffd|gen.
    With Worksheets(1).Buttons.Add(10, 5, 141, 31.5)
        .OnAction = "AddRecipientForISIN"
        .Characters.Text = "Add new row for further recipient"
    End With
    
    'Den Button einf|fffd|gen, der dem Kunden dazu dient, Zeilen zu l|fffd|schen
    With Worksheets(1).Buttons.Add(160, 5, 141, 31.5)
        .OnAction = "DeleteRecipientForISIN"
        .Characters.Text = "Delete row"
    End With
    
    '14.09.2012 - Neuer Button
    'Den Button einf|fffd|gen, mit dem die Daten als Liste in ein neues Tabellenblatt exportiert werden k|fffd|nnen.
    With Worksheets(1).Buttons.Add(310, 5, 141, 31.5)
        .OnAction = "CreateList"
        .Characters.Text = "Create list"
    End With

    'Blattschutz setzen, damit nur mehr die markierten Zellen ausgew|fffd|hlt und ge|fffd|ndert werden d|fffd|rfen
    'Blatt sperren
    Worksheets(1).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:="RSCisthebest"
    Worksheets(1).EnableSelection = xlNoRestrictions
    
    Worksheets(1).Cells(2, 1).Select
    
    Application.DisplayAlerts = False
    Worksheets("Control").Delete
    Application.DisplayAlerts = True
    
    Worksheets(2).Activate
    ScreenUpdating = True
    
End Sub 'PrepareSecAccWorksheet()

Sub CreateList() '19.9.2012/Hauser
    
    Dim i, zeile, ListZeilen, AnzahlLeereZeilen As Integer
    Dim WS As Worksheet
    
    'Button soll nur f|fffd|r bestimmte User in der RSC funktionieren. Sollen weitere Mitarbeiter dazu in der Lage sein, so muss dies im folgendem if eingebaut werden
    '11.07.2013 Anja-Christina Hausner eingebaut
    '23.01.2014 Bettina B|fffd|hm eingebaut
    '11.04.2014 Andi |fffd|sterreicher eingebaut / Bettina B|fffd|hm ausgebaut
    '13.07.2015 Folgende Personen f|fffd|r "RSC Button" berechtigt: "wrckai" "wrcgek" "wrckcn" -> wrcbob (rausgenommen)
    '12.12.2016 Rausgenommen -> "wrcgek" "wrckcn" / Reingenommen/Berechtigt -> wrcfai + wrczis
    '17.09.2018 OAN -> wrcfai rausgenommen / WRCNOE + WRCKLF hinzugef|fffd|gt
    '10.07.2019 Paul Vonbank WRCVPM dazu / Tamara Verezubova (WRCVER) dazu / wrcnoe + wrcklf raus
    
    'wrchto Thomas Hauser
    'wrcoan Andreas |fffd|sterreicher
    'wrcvpm Paul Vonbank
    'wrcpot Monika Potucek
    'wrchnj Anja-Christina Hausner
    'wrckai Gerhard Kain
    'wrcobv Vera Bihl
    'wrcksa Sabine Huber
    'wrczis Sandra Ziehrer
    'wrcver Tamara Verezubova
    
    If LCase(Environ("username")) <> "wrchto" And _
        LCase(Environ("username")) <> "wrcoan" And _
        LCase(Environ("username")) <> "wrcvpm" And _
        LCase(Environ("username")) <> "wrcpot" And _
        LCase(Environ("username")) <> "wrchnj" And _
        LCase(Environ("username")) <> "wrckai" And _
        LCase(Environ("username")) <> "wrcobv" And _
        LCase(Environ("username")) <> "wrcksa" And _
        LCase(Environ("username")) <> "wrczis" And _
        LCase(Environ("username")) <> "wrcver" Then
            x = MsgBox("This button is available only in RSC.", _
            vbOKOnly, "Create list")
            Exit Sub
    End If
    
    'Sollte es das Tabellenblatt "Liste" schon geben, dann zuerst l|fffd|schen
    For Each WS In Worksheets
        If WS.Name = "List" Then
            Application.DisplayAlerts = False
            WS.Delete
            Application.DisplayAlerts = True
        End If
    Next WS
    
    'Tabellenblatt neu anlegen
    Sheets.Add after:=Worksheets(1)
    ActiveSheet.Name = "List"
    Worksheets(1).Activate
    
    zeile = 4 'erste relevante Zeile mit Daten
    ListZeile = 2
    AnzahlLeereZeilen = 0
    
    '|fffd|berschrift erzeugen
    '11.07.2013 - Neue Spalte Client#
    
    Worksheets(2).Cells(1, 1) = Worksheets(1).Cells(2, 12) 'Spalte F = Client Number
    Worksheets(2).Cells(1, 2) = Worksheets(1).Cells(2, 13) 'Spalte A = Recipient Code
    Worksheets(2).Cells(1, 3) = Worksheets(1).Cells(2, 14) 'Spalte B = Recipient's name
    Worksheets(2).Cells(1, 4) = Worksheets(1).Cells(2, 15) 'Spalte C = Street
    Worksheets(2).Cells(1, 5) = Worksheets(1).Cells(2, 16) 'Spalte D = City
    Worksheets(2).Cells(1, 6) = Worksheets(1).Cells(2, 17) 'Spalte E = ZIP
    Worksheets(2).Cells(1, 7) = Worksheets(1).Cells(2, 6)  'Spalte G = Gross
    Worksheets(2).Cells(1, 8) = Worksheets(1).Cells(2, 7)  'Spalte H = Tax amount
    Worksheets(2).Cells(1, 9) = Worksheets(1).Cells(2, 18)  'Spalte H = Tax domicile
    
    Do Until AnzahlLeereZeilen > 2
        If Worksheets(1).Cells(zeile, 12) = "" Then
            AnzahlLeereZeilen = AnzahlLeereZeilen + 1
        Else
            AnzahlLeereZeilen = 0
            If Worksheets(1).Cells(zeile, 12) <> "OK" And Worksheets(1).Cells(zeile, 12) <> "MISSING" Then
                Worksheets(2).Cells(ListZeile, 1) = Worksheets(1).Cells(zeile, 12) 'Client Number
                Worksheets(2).Cells(ListZeile, 2) = Worksheets(1).Cells(zeile, 13) 'Recipient Code
                Worksheets(2).Cells(ListZeile, 3) = Worksheets(1).Cells(zeile, 14) 'Recipient's name
                Worksheets(2).Cells(ListZeile, 4) = Worksheets(1).Cells(zeile, 15) 'Street
                Worksheets(2).Cells(ListZeile, 5) = Worksheets(1).Cells(zeile, 16) 'City
                Worksheets(2).Cells(ListZeile, 6) = Worksheets(1).Cells(zeile, 17) 'ZIP
                Worksheets(2).Cells(ListZeile, 7) = Worksheets(1).Cells(zeile, 6)  'Gross
                Worksheets(2).Cells(ListZeile, 8) = Worksheets(1).Cells(zeile, 7)  'Tax amount
                Worksheets(2).Cells(ListZeile, 9) = Worksheets(1).Cells(zeile, 18)  'Tax domicile
                ListZeile = ListZeile + 1
            End If
        End If
        zeile = zeile + 1
    Loop
    
    'Schrift in der |fffd|berschriftszeile fett machen, und Zellen grau einf|fffd|rben
    Worksheets(2).Rows("1:1").Font.Bold = True
    Worksheets(2).Range("A1:I1").Interior.ColorIndex = 15
    
    'Sortieren nach Client Number
    Worksheets(2).Sort.SortFields.Clear
    Worksheets(2).Sort.SortFields.Add Key:=Range("A:A"), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With Worksheets(2).Sort
        .SetRange Range("A:I")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'Summieren der Zeilen mit gleicher Client Number
    '05.09.2013 Es kann vorkommen, dass die Client Number gleich ist, aber der Kunde verschiedene Adressen oder Recipient namens dazu eingef|fffd|llt hat
    '05.09.2013 Dies liegt z.B. an Tippfehler, u.|fffd|. Es wird aber ignoriert, summiert wird nach Client number, bei den restlichen Daten (Code, name, Street, usw.)
    '05.09.2013 wird das angezeigt, was als erstes gefunden wird -> vom FB (Fr. Hausner) so gew|fffd|nscht.
    
    For i = 2 To ListZeile - 1
        If Worksheets(2).Cells(i + 1, 1) = "" Then Exit For
        If Worksheets(2).Cells(i, 1) = Worksheets(2).Cells(i + 1, 1) Then
            Worksheets(2).Cells(i, 7) = Worksheets(2).Cells(i, 7) + Worksheets(2).Cells(i + 1, 7)
            Worksheets(2).Cells(i, 8) = Worksheets(2).Cells(i, 8) + Worksheets(2).Cells(i + 1, 8)
            Worksheets(2).Rows(i + 1).EntireRow.Delete
            i = i - 1
            ListZeile = ListZeile - 1
        End If
    Next i
    
    'Spalten auf optimale Breite bringen
    Worksheets(2).Columns("A:I").Columns.AutoFit
        
    Worksheets(2).Activate
    
    '09.09.2013 - Blattschutz von Data l|fffd|schen
    Worksheets(1).Unprotect Password:="RSCisthebest"
   
    
End Sub 'CreateList
Sub DeleteRecipientforISIN()

    Dim zeile, spalte, erste, letzte As Integer
    
    zeile = ActiveCell.Row
    spalte = ActiveCell.Column
    
    If ActiveCell = "O.K." Or ActiveCell = "NOT O.K." Or spalte <> 1 Or zeile = 1 Or zeile = 2 Then
        x = MsgBox("Cursor not located on an ISIN!" & Chr(13) & Chr(13) & Chr(10) & _
            "Place the cursor on an existing ISIN to delete the row.", _
            vbOKOnly, "Delete row")
        Exit Sub
    End If
    
    Call ErsteLetzte(zeile, erste, letzte)
    
    If zeile = erste Then
            x = MsgBox("Cursor located on main ISIN! This ISIN must not be deleted!" & Chr(13) & Chr(13) & Chr(10) & _
            "Place the cursor on a customer ISIN row (ISIN must be blue).", _
            vbOKOnly, "Delete row")
        Exit Sub
    End If
    
    If zeile - 1 = erste And zeile = letzte Then
            x = MsgBox("At least one ISIN row must be filled with customer data!" & Chr(13) & Chr(13) & Chr(10) & _
            "Row must not be deleted!", _
            vbOKOnly, "Delete row")
        Exit Sub
    End If
    
    'Blatt entsperren, damit Zeilen eingef|fffd|gt werden k|fffd|nnen
    ActiveSheet.Unprotect Password:="RSCisthebest"

    Rows(zeile).EntireRow.Delete
    
    'Blatt sperren
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:="RSCisthebest"
    ActiveSheet.EnableSelection = xlNoRestrictions
    
End Sub 'DeleteRecipientforISIN()

Function ErsteLetzte(ByRef zeile, erste, letzte) As Integer

    Dim schieber As Integer
    Dim erste_gefunden, letzte_gefunden As Boolean
    
    'erste und letzte Zeile dieser ISIN ermitteln
    erste_gefunden = False
    schieber = 1
    Do Until erste_gefunden
        If zeile = 3 Or zeile - schieber + 1 = 3 Or Worksheets(1).Cells(zeile, 1).Offset(-schieber, 0) = "O.K." Or Worksheets(1).Cells(zeile, 1).Offset(-schieber, 0) = "NOT O.K." Then
            erste = zeile - schieber + 1
            erste_gefunden = True
        Else
            schieber = schieber + 1
        End If
    Loop
    letzte_gefunden = False
    schieber = 1
    Do Until letzte_gefunden
        If Worksheets(1).Cells(zeile, 1).Offset(schieber, 0) = "O.K." Or Worksheets(1).Cells(zeile, 1).Offset(schieber, 0) = "NOT O.K." Then
            letzte = zeile + schieber - 1
            letzte_gefunden = True
        Else
            schieber = schieber + 1
        End If
    Loop

End Function 'ErsteLetzte(zeile)

Sub AddRecipientForISIN()

    Dim zeile, spalte, erste, letzte, schieber As Integer
    Dim erste_gefunden, letzte_gefunden As Boolean
    Dim NeueFormel, ausgangswert, abziehen, komplett As String
    
    zeile = ActiveCell.Row
    spalte = ActiveCell.Column
        
    If ActiveCell = "O.K." Or ActiveCell = "NOT O.K." Or spalte <> 1 Or zeile = 1 Or zeile = 2 Then
        x = MsgBox("Cursor not located on an ISIN!" & Chr(13) & Chr(13) & Chr(10) & _
            "Place the cursor on an existing ISIN to insert a new row directly under it.", _
            vbOKOnly, "Insert new row")
        Exit Sub
    End If
    
    'Blatt entsperren, damit Zeilen eingef|fffd|gt werden k|fffd|nnen
    ActiveSheet.Unprotect Password:="RSCisthebest"
    
    'Eine Zeile runterrutschen und neue Zeile einf|fffd|gen, d.h. man hat unter der ISIN, auf der der Cursor war,
    'eine neue Zeile eingef|fffd|gen
    ActiveCell.Offset(1, 0).EntireRow.Insert , CopyOrigin:=xlFormatFromLeftOrAbove
    
    Call NeueISINZeile(zeile)
    
    'erste und letzte Zeile dieser ISIN ermitteln
    Call ErsteLetzte(zeile, erste, letzte)
    
    'Check-Formeln nachziehen
    
    'Gross
    ausgangswert = "F" & erste
    abziehen = "sum(F" & erste + 1 & ":F" & letzte & ")"
    komplette = ausgangswert & "-" & abziehen
        
    'NeueFormel = "=if(abs(" & komplette & ")<=abs(" & ausgangswert & "/100*5),""OK""," & komplette & ")"
    NeueFormel = "=if(and(countblank(F" & erste + 1 & ":F" & letzte & ")=0," & ausgangswert & " = " & abziehen & "),""OK""," & komplette & ")"
    Worksheets(1).Cells(letzte + 1, 6).Formula = NeueFormel
    
    'Tax Amount
    ausgangswert = "G" & erste
    abziehen = "sum(G" & erste + 1 & ":G" & letzte & ")"
    komplette = ausgangswert & "-" & abziehen
        
    'NeueFormel = "=if(abs(" & komplette & ")<=abs(" & ausgangswert & "/100*5),""OK""," & komplette & ")"
    NeueFormel = "=if(and(countblank(G" & erste + 1 & ":G" & letzte & ")=0," & ausgangswert & " = " & abziehen & "),""OK""," & komplette & ")"
    Worksheets(1).Cells(letzte + 1, 7).Formula = NeueFormel
    
    'Quantity
    ausgangswert = "J" & erste
    abziehen = "sum(J" & erste + 1 & ":J" & letzte & ")"
    komplette = ausgangswert & "-" & abziehen
        
    'NeueFormel = "=if(" & ausgangswert & "=" & abziehen & ",""OK""," & komplette & ")"
    NeueFormel = "=if(and(countblank(J" & erste + 1 & ":J" & letzte & ")=0," & ausgangswert & " = " & abziehen & "),""OK""," & komplette & ")"
    Worksheets(1).Cells(letzte + 1, 10).Formula = NeueFormel
    
    '11.07.2013 Neue Spalte Client number
    NeueFormel = "=if(countblank(L" & erste + 1 & ":L" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 12).Formula = NeueFormel

    '05.09.2013 Neue Spalte Recipient Code
    NeueFormel = "=if(countblank(M" & erste + 1 & ":M" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 13).Formula = NeueFormel
    
    '06.09.2013 Recipient Code mit Drop Down versehen, damit nur 08, 15 oder 16 eingegeben werden kann
    '05.12.2016 Change 08, 15 ,16 auf 15, 16
    Worksheets(1).Cells(letzte, 13).Select
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="15,16"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Wrong Recipient Code"
        .InputMessage = ""
        .ErrorMessage = "Possible Codes are: 15, 16"
        .ShowInput = True
        .ShowError = True
    End With
    Selection.NumberFormat = "00"
      
    'Recipient's name
    NeueFormel = "=if(countblank(N" & erste + 1 & ":N" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 14).Formula = NeueFormel

    'Street
    NeueFormel = "=if(countblank(O" & erste + 1 & ":O" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 15).Formula = NeueFormel
    
    'City
    NeueFormel = "=if(countblank(P" & erste + 1 & ":P" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 16).Formula = NeueFormel
    
    'ZIP
    NeueFormel = "=if(countblank(Q" & erste + 1 & ":Q" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 17).Formula = NeueFormel
    
    'Tax Domicile name
    NeueFormel = "=if(countblank(R" & erste + 1 & ":R" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 18).Formula = NeueFormel
    
    'State
    '13.07.2015 Check neu eingebaut
    NeueFormel = "=if(countblank(S" & erste + 1 & ":S" & letzte & ")=0,""OK"",""MISSING"")"
    Worksheets(1).Cells(letzte + 1, 19).Formula = NeueFormel
    
    'Tax Domicile mit Daten|fffd|berpr|fffd|fungsformel versehen, damit nur 2-Stellig und nur Buchstaben A bis Z (ASCII-Codes 65 bis 90) eingegeben werden k|fffd|nnen
    'Der Befehl CODE erh|fffd|lt einen Laufzeitfehler, wenn man ihn als Daten|fffd|berpr|fffd|fung auf einen leeren String schickt. Nachdem das Excel beim Aufbau noch leer ist,
    'w|fffd|rde das im folgenden Validation passieren. Daher wird die Zelle mit einem fiktiven Wert (in unserem Fall blank) bef|fffd|llt, dann die Validation gesetzt, und
    'danach der Zellwert (blank) wieder gel|fffd|scht.
    Worksheets(1).Cells(letzte, 18).Select
    Worksheets(1).Cells(letzte, 18) = " "
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:= _
        "=IF(OR(LEN(R" & letzte & ")>2,CODE(LEFT(R" & letzte & ",1))<65,CODE(LEFT(R" & letzte & ",1))>90,CODE(RIGHT(R" & letzte & ",1))<65,CODE(RIGHT(R" & letzte & ",1))>90),0,1)"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Wrong Tax Domicile"
        .InputMessage = ""
        .ErrorMessage = "Possible is only A to Z, length must be 2 digits"
        .ShowInput = True
        .ShowError = True
    End With
    Worksheets(1).Cells(letzte, 18) = ""

    'Blattschutz setzen, damit nur mehr die markierten Zellen ausgew|fffd|hlt und ge|fffd|ndert werden d|fffd|rfen
    'Blatt sperren
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:="RSCisthebest"
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    ActiveSheet.Cells(zeile + 1, 6).Select
    
End Sub 'AddRecipientForISIN()
Sub NeueISINZeile(zeile)
    
    Dim farbe As Double
    
    'Aus der urspr|fffd|nglich von Geos bef|fffd|llten Zeile alle jene Werte runterkopieren, die auch bei den Einzelzeilen
    'f|fffd|r die dahinter stehenden Kunden gleich sein m|fffd|sen.
    
    'ISIN runter kopieren
    Worksheets(1).Cells(zeile, 1).Copy
    Worksheets(1).Cells(zeile + 1, 1).PasteSpecial
    
    'IC runter kopieren
    Worksheets(1).Cells(zeile, 2).Copy
    Worksheets(1).Cells(zeile + 1, 2).PasteSpecial
   
   'Currency runter kopieren
    Worksheets(1).Cells(zeile, 3).Copy
    Worksheets(1).Cells(zeile + 1, 3).PasteSpecial
    
    'Credit advice nr. runter kopieren
    Worksheets(1).Cells(zeile, 4).Copy
    Worksheets(1).Cells(zeile + 1, 4).PasteSpecial
    
    'Credit advice date runter kopieren
    Worksheets(1).Cells(zeile, 5).Copy
    Worksheets(1).Cells(zeile + 1, 5).PasteSpecial
    
    'Tax rate runter kopieren
    Worksheets(1).Cells(zeile, 8).Copy
    Worksheets(1).Cells(zeile + 1, 8).PasteSpecial
    
    'Unit of quantity runter kopieren
    Worksheets(1).Cells(zeile, 9).Copy
    Worksheets(1).Cells(zeile + 1, 9).PasteSpecial
        
    'Tax withheld by blablabla runter kopieren
    Worksheets(1).Cells(zeile, 11).Copy
    Worksheets(1).Cells(zeile + 1, 11).PasteSpecial
                
    '"Custodian Number" runter kopieren
    Worksheets(1).Cells(zeile, 20).Copy
    Worksheets(1).Cells(zeile + 1, 20).PasteSpecial
                
    Application.CutCopyMode = False
    
    'Schrift in der Zeile, in der vom Kunden eingetragen werden darf, |fffd|ndern
    With Range(Worksheets(1).Cells(zeile + 1, 1), Worksheets(1).Cells(zeile + 1, 20)).Font
        .Name = "Arial"
        .FontStyle = "Standard"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .Color = -4165632
    End With
    
    'Ausf|fffd|llbare Zellen einf|fffd|rben und den Zellschutz entfernen
    farbe = 6750207
    
    'Gross, tax amount
    With Range(Worksheets(1).Cells(zeile + 1, 6), Worksheets(1).Cells(zeile + 1, 7)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = farbe
    End With
    
    Range(Worksheets(1).Cells(zeile + 1, 6), Worksheets(1).Cells(zeile + 1, 7)).Locked = False
    Range(Worksheets(1).Cells(zeile + 1, 6), Worksheets(1).Cells(zeile + 1, 7)).FormulaHidden = False
    
    'Quantity
    With Worksheets(1).Cells(zeile + 1, 10).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = farbe
    End With
    
    Worksheets(1).Cells(zeile + 1, 10).Locked = False
    Worksheets(1).Cells(zeile + 1, 10).FormulaHidden = False
    
    'Recipient's name, address, Tax Domicile + (11.07.2013) Client number + (05.09.2013) Recipient Code und Adresszeilenaufteilung
    With Range(Worksheets(1).Cells(zeile + 1, 12), Worksheets(1).Cells(zeile + 1, 19)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = farbe
    End With
    
    Range(Worksheets(1).Cells(zeile + 1, 12), Worksheets(1).Cells(zeile + 1, 19)).Locked = False
    Range(Worksheets(1).Cells(zeile + 1, 12), Worksheets(1).Cells(zeile + 1, 19)).FormulaHidden = False
    
End Sub 'NeueISINZeile(zeile)









Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' ^r*bz{E
' ^r*bz{_

INQUEST-PP=macro
