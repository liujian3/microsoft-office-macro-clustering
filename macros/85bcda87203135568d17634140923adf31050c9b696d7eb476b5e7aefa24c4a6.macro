Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "mdlCommGrp"
'=======================================================
' SSS|fffd||fffd||fffd||289||fffd||fffd||fffd||fffd|_Ver2.5
' Common Functions
' 2007.01 WZH
'=======================================================

Option Explicit

#If 0 Then '--- moved : 07.2.7 ---
Sub SetDataLabel(ByVal ser As Series, ByVal nameRge As Range, _
                 Optional ByVal fontsize As Integer = 10, _
                 Optional ByVal charcnt As Integer = 32)
    Dim i As Integer
    On Error Resume Next
    ser.ApplyDataLabels Type:= _
            xlDataLabelsShowLabel, AutoText:=True, LegendKey:=False
    ser.DataLabels.Font.Size = fontsize
    For i = 1 To ser.Points.Count
        If getExcelVerNo() < 12 Then
            ser.Points(i).DataLabel.Characters.Text = MidB(nameRge.Range("A1").Offset(i - 1, 0).Value, 1, charcnt)
        Else
            ser.Points(i).DataLabel.Text = MidB(nameRge.Range("A1").Offset(i - 1, 0).Value, 1, charcnt)
        End If
    Next i
    On Error GoTo 0
End Sub

Function SetDict(ByVal strPara As String) As Object
    Dim arys() As String, subarys() As String
    Dim s As String
    Dim i As Integer, j As Integer
    Dim dict As Object
    arys = Split(strPara, "&")
    Set dict = CreateObject("Scripting.dictionary")
    For i = 0 To UBound(arys)
        subarys = Split(arys(i), "=")
        dict(subarys(0)) = subarys(1)
    Next i
    i = 1
    Set SetDict = dict
    Set dict = Nothing
End Function
#End If '--- moved : 07.2.7 ---

Sub SetTicks(ByVal cht As Chart, ByVal strTicks As String)
    Dim i As Integer, j As Integer
    Dim Ticks() As String
    Dim bRevStatus As Boolean
    Dim xSeries As Series
    Dim CateCnt As Integer
    Dim CateNum As Integer
    Dim cates() As Integer
    Dim MaxScale As Double, MinScale As Double
    Dim bScreenUpdating As Boolean
    On Error Resume Next
    bScreenUpdating = Application.ScreenUpdating
    Application.ScreenUpdating = False
    bRevStatus = cht.Axes(xlCategory).ReversePlotOrder
    If bRevStatus Then
        cht.Axes(xlCategory).ReversePlotOrder = False
        strTicks = StrReverse(strTicks)
    End If
    Ticks = Split(strTicks, ",")
    CateNum = 0
    CateCnt = UBound(Ticks)
    ReDim cates(1 To CateCnt)
    For i = 1 To CateCnt
        CateNum = CateNum + CInt(Ticks(i - 1))
        cates(i) = CInt(Ticks(i - 1))
        For j = 1 To i - 1
            cates(i) = cates(i) + CInt(Ticks(j - 1))
        Next j
    Next i
    CateNum = CateNum + CInt(Ticks(CateCnt))
    Set xSeries = cht.SeriesCollection.NewSeries
    xSeries.Name = "tick1"
    xSeries.ChartType = xlXYScatterLinesNoMarkers
    cht.Axes(xlValue, xlSecondary).MinimumScale = 0
    cht.Axes(xlValue, xlSecondary).MaximumScale = CateNum
    cht.Axes(xlValue, xlSecondary).MinorUnitIsAuto = True
    cht.Axes(xlValue, xlSecondary).MajorUnit = 1
    MaxScale = cht.Axes(xlValue, xlPrimary).MaximumScale
    MinScale = cht.Axes(xlValue, xlPrimary).MinimumScale
    cht.Axes(xlValue, xlPrimary).MaximumScaleIsAuto = False
    cht.Axes(xlValue, xlPrimary).MinimumScaleIsAuto = False
    cht.Axes(xlCategory, xlSecondary).MinimumScale = MinScale
    cht.Axes(xlCategory, xlSecondary).MaximumScale = MaxScale
    xSeries.XValues = "={" & MinScale & "," & MaxScale & "}"
    xSeries.Values = "={" & cates(1) & "," & cates(1) & "}"
    xSeries.Border.ColorIndex = 1
    xSeries.Border.LineStyle = xlDot
    xSeries.Border.Weight = xlThin
    xSeries.MarkerStyle = xlNone
    For i = 2 To CateCnt
        Set xSeries = cht.SeriesCollection.NewSeries
        xSeries.ChartType = xlXYScatterLinesNoMarkers
        xSeries.Name = "tick" & i
        xSeries.XValues = "={" & MinScale & "," & MaxScale & "}"
        xSeries.Values = "={" & cates(i) & "," & cates(i) & "}"
        xSeries.Border.ColorIndex = 1
        xSeries.Border.LineStyle = xlDot
        xSeries.Border.Weight = xlThin
        xSeries.MarkerStyle = xlNone
    Next i
    
    cht.Axes(xlValue, xlSecondary).Delete
    cht.Axes(xlCategory, xlSecondary).Delete
    cht.Axes(xlCategory).Select
    cht.Axes(xlCategory).ReversePlotOrder = bRevStatus
    Application.ScreenUpdating = bScreenUpdating
    On Error GoTo 0
End Sub

Attribute VB_Name = "mdlCommPub"
'=======================================================
' SSS|fffd||fffd||fffd||289||fffd||fffd||fffd||fffd|_Ver2.5
' Common Public
' 2007.1.29 LSQ
'=======================================================
Option Explicit
Option Private Module

'prefix = 'G' : means public used in this file
Public GrgeStr As String
Public GbkName As String
Public GstName As String
Public GrgStr As String

'=== EOF ===

Attribute VB_Name = "mdlSr4Grp"
'=======================================================
' SSS|fffd||fffd||fffd||289||fffd||fffd||fffd||fffd|_Ver2.5
' |fffd||fffd||fffd||289||fffd|4|fffd||fffd|
' 2007.01 WZH
' 2007.1.29 LSQ mdf
'=======================================================

Option Explicit

Sub DrawSr4SmpScore(ByVal strWrkSht As String, _
                    ByVal strGrpOut As String, ByVal strGrpData As String, _
                    ByVal strPara As String, ByVal bCateName As Boolean)
    Dim wrkbk As Workbook
    Dim wrkst As Worksheet
    Dim dataRge As Range, outRge As Range, nameRge As Range
    Dim xRge As Range, yrge As Range
    Dim cht As Chart, serObj As Series, axsVal As Axis, axsCat As Axis
    Dim xaxis As String, yaxis As String
    Dim i As Integer
    Dim para As Object
    Dim fontsize As Integer, charcnt As Integer, dataNum As Integer
    
    'Setting
    On Error Resume Next
    GrgeStr = "'" & strWrkSht & "'!A1"
    Call getRangeInfo(GrgeStr, GbkName, GstName, GrgStr)
    Set wrkbk = Workbooks(GbkName)
    Set wrkst = Workbooks(GbkName).Worksheets(GstName)
    Set para = Comm_SetDict(strPara)
    On Error GoTo 0
    '
    If wrkbk Is Nothing Or wrkst Is Nothing Or para Is Nothing Then
        MsgBox MSG_GRP_DATA_ERR
        Exit Sub
    End If
    
    Set outRge = wrkst.Range(Comm_toXlA1str(strGrpOut))
    Set dataRge = wrkst.Range(Comm_toXlA1str(strGrpData))

    fontsize = CInt(para("FontSize"))
    charcnt = CInt(para("CharCnt"))
    Set para = Nothing

    Set cht = Comm_GetTmplGrp(outRge, ThisWorkbook.Name, "tmplSR4", "grpSmpScore")
    If cht Is Nothing Then
        Exit Sub
    End If
    
    Set serObj = cht.SeriesCollection(1)
    Set axsVal = cht.Axes(xlValue)
    Set axsCat = cht.Axes(xlCategory)
    dataNum = dataRge.Rows.Count
    
    'cht.SetSourceData datarge
    cht.SeriesCollection(1).Name = "='" & GstName & "'!" & Comm_ToXlRCStr(dataRge.Range("C1").Address)
    Set nameRge = Range(dataRge(2, 1), dataRge(dataNum, 1))
    Set xRge = Range(dataRge(2, 2), dataRge(dataNum, 2))
    cht.SeriesCollection(1).XValues = "='" & GstName & "'!" & Comm_ToXlRCStr(xRge.Address)
    Set yrge = Range(dataRge(2, 3), dataRge(dataNum, 3))
    cht.SeriesCollection(1).Values = "='" & GstName & "'!" & Comm_ToXlRCStr(yrge.Address)
    
    yaxis = CStr(dataRge(1, 2))
    xaxis = CStr(dataRge(1, 3))
    axsVal.HasTitle = True
    axsCat.HasTitle = True
    axsVal.AxisTitle.Characters.Text = xaxis
    axsCat.AxisTitle.Characters.Text = yaxis
    axsVal.AxisTitle.Left = 12
    axsVal.AxisTitle.Top = 1
    axsVal.AxisTitle.Orientation = xlHorizontal
    If bCateName Then
        Call Comm_SetDataLabel(serObj, nameRge.Range("A1"), fontsize, charcnt)
    Else
        cht.SeriesCollection(1).DataLabels.Delete
    End If
    '|fffd|}|fffd||308||292|u|fffd||183|T|fffd|C|fffd|Y
    Call Comm_setChartPosSize(cht.Parent, outRge)
    
    outRge.Select
End Sub


INQUEST-PP=macro
