Attribute VB_Name = "Prokas"
'AFA0002 05.04.2011 Add suport to catch After Save/SaveAS and load Prokas.mnu - mantis 9737
'FCR0003 27.10.2014 Mantis 0021963: Prokas Excel plugin port to 64 bits

#If VBA7 Then
Public Declare PtrSafe Function GetProcAddress Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpProcName As String) As LongPtr
#Else
Public Declare Function GetProcAddress Lib "kernel32" (ByVal hModule As Long, ByVal lpProcName As String) As Long
#End If

#If VBA7 Then
Public Declare PtrSafe Function LoadLibrary Lib "kernel32" Alias "LoadLibraryW" (ByVal lpLibFileName As LongPtr) As LongPtr
#Else
Public Declare Function LoadLibrary Lib "kernel32" Alias "LoadLibraryW" (ByVal lpLibFileName As Long) As Long
#End If

#If VBA7 Then
Public Declare PtrSafe Function FreeLibrary Lib "kernel32" (ByVal hLibModule As LongPtr) As Integer
#Else
Public Declare Function FreeLibrary Lib "kernel32" (ByVal hLibModule As Long) As Integer
#End If

'ProkasXLL.xll should be already loaded (installed as an addin)
#If VBA7 Then
#If Win64 Then
Public Declare PtrSafe Function fctMnu Lib "ProkasXLL.x64.xll" () As Integer
Public Declare PtrSafe Function fctRun Lib "ProkasXLL.x64.xll" () As Integer
Public Declare PtrSafe Function fctVer Lib "ProkasXLL.x64.xll" (ByVal buffer As String, ByVal length As Integer) As Integer
Public Declare PtrSafe Function fctLoadMnu Lib "ProkasXLL.x64.xll" () As Integer 'AFA0002
#Else
Public Declare PtrSafe Function fctMnu Lib "ProkasXLL.xll" () As Integer
Public Declare PtrSafe Function fctRun Lib "ProkasXLL.xll" () As Integer
Public Declare PtrSafe Function fctVer Lib "ProkasXLL.xll" (ByVal buffer As String, ByVal length As Integer) As Integer
Public Declare PtrSafe Function fctLoadMnu Lib "ProkasXLL.xll" () As Integer 'AFA0002
#End If
#Else
Public Declare Function fctMnu Lib "ProkasXLL.xll" () As Integer
Public Declare Function fctRun Lib "ProkasXLL.xll" () As Integer
Public Declare Function fctVer Lib "ProkasXLL.xll" (ByVal buffer As String, ByVal length As Integer) As Integer
Public Declare Function fctLoadMnu Lib "ProkasXLL.xll" () As Integer 'AFA0002
#End If


#If VBA7 Then
Public dll As LongPtr
#Else
Public dll As Long
#End If

Sub addMnu()
    'MsgBox "addMnu()"
    delMnu
    
    If dll <> 0 Then
        dll = setDll()
    End If
    'add new addin menu
    Dim cmdBarCtrl As CommandBarPopup
    Set cmdBarCtrl = Application.CommandBars("Worksheet Menu Bar").Controls.Add(Type:=msoControlPopup, temporary:=True) 'adds a menu item to the Menu Bar
    With cmdBarCtrl
        .Caption = "PROKAS" 'names the menu item
        '.TooltipText = "PROKAS tooltip" 'load ProkasXLL.xll and use fctVer(...)
        .TooltipText = ver()
        'On Error Resume Next
        .OnAction = "fctMnu"
    End With
End Sub

Sub delMnu()
    'MsgBox "delMnu()"
    On Error Resume Next
    Application.CommandBars("Worksheet Menu Bar").Controls("PROKAS").Delete
    
    'del prev addin menu (if it exists)
    Dim cbc As CommandBarControl
    For Each cbc In Application.CommandBars("Worksheet Menu Bar").Controls
        If cbc.Caption = "PROKAS" Then
            'MsgBox "to delete: " + cbc.Caption
            cbc.Delete
        End If
    Next cbc
End Sub

#If VBA7 Then
Public Function setDll() As LongPtr
#Else
Public Function setDll() As Long
#End If
    Dim i As Integer
    Dim dllFullPath As String
#If VBA7 Then
    Dim dll As LongPtr
    Dim fct As LongPtr
#Else
    Dim dll As Long 'module handle
    Dim fct As Long
#End If
    Dim dllName As String
#If Win64 Then
    dllName = "ProkasXLL.x64.xll"
#Else
    dllName = "ProkasXLL.xll"
#End If
    
    'MsgBox "loading: " + Application.ThisWorkbook.Path + "\ProkasXLL.xll"
    dllFullPath = Application.ThisWorkbook.Path + "\" + dllName
    dll = LoadLibrary(StrPtr(dllFullPath))
    If dll = 0 Then
        MsgBox "cannot load DLL " + dllName
    Else
        fct = GetProcAddress(dll, "fctMnu")
        If fct = 0 Then
            MsgBox "cannot load function " + "fctMnu"
        End If
    End If
    setDll = dll
End Function

Public Sub delDll()
    If dll <> 0 Then
        FreeLibrary (dll)
        dll = 0
    End If
End Sub

Function ver() As String
    Dim tip As String * 20 'tooltip
    Dim err As Integer
    If dll <> 0 Then
        err = fctVer(tip, 20) 'load tooltip from DLL
    End If
    ver = tip
End Function

Public Sub mnu()
    Dim err As Integer
    'MsgBox "mnu()
    If dll <> 0 Then
        err = fctMnu()
    End If
End Sub

'AFA0002
Public Sub WorkbookAfterSave(ByVal Success As Boolean)
    Dim err As Integer
    'MsgBox "On Prokas WorkbookAfterSave"
    If Success = True And dll <> 0 Then
        err = fctLoadMnu()
    End If
End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'AFA0002 05.04.2011 Add suport to catch After Save/SaveAS and load Prokas.mnu - mantis 9737

Private WithEvents App As Application 'AFA002
Attribute App.VB_VarHelpID = -1

'AFA0002
Private Sub App_SheetChange(ByVal Sh As Object, ByVal Target As Range)
    'MsgBox ("After SheetChange")
    Prokas.WorkbookAfterSave True
End Sub

'AFA0002 - does not work on Office 2003
Private Sub App_WorkbookAfterSave(ByVal Wb As Workbook, ByVal Success As Boolean)
    'MsgBox ("After Save called")
    Prokas.WorkbookAfterSave Success
End Sub

Private Sub Workbook_Open()
    'MsgBox "Workbook_Open()"
    Set App = Application
    Prokas.dll = 0
    If Prokas.dll = 0 Then
        Prokas.dll = setDll()
    End If
    addMnu
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    'MsgBox "Workbook_BeforeClose()"
    'delMnu
    If dll = 0 Then
        delDll
        dll = 0
    End If
End Sub

Private Sub Workbook_AddinInstall()
    MsgBox "Workbook_AddinInstall()"
End Sub

Private Sub Workbook_AddinUninstall()
    MsgBox "Workbook_AddinUninstall()"
End Sub



INQUEST-PP=macro
