Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Option Base 1
Option Compare Text

Private Sub CheckBrutto(control As Variant)
    
    Dim objName As Name, bNameExist As Boolean
       For Each objName In ThisWorkbook.Names
        If objName.Name = ActiveSheet.Name & "Brutto" Then
            bNameExist = True
            Exit For
        End If
          Application.GoTo Reference:= _
          ActiveWorkbook.Names("Brutto").Name
          MsgBox ("Die Pr|fffd|fung war erfolgreich!" & vbNewLine & vbNewLine & "Es wurde die markierte Zelle als Brutto-Summe definiert."), 64, "eVergabe"
        Exit Sub
       Next
         MsgBox ("Sie haben keine Zelle als Brutto-Summe definiert!" & vbNewLine & "Diese Arbeitsmappe kann nicht als LV f|fffd|r die eVergabe genutzt werden."), 16, "eVergabe"
End Sub

Private Sub Help(control As Variant)
 Shell "hh.exe " & (Environ("APPDATA")) & "\RIB\eVergabe\" & "Excel-LV.chm", vbMaximizedFocus
End Sub

Private Sub SaveAndMail(control As Variant)
'Working in 2007-2010
    Dim SaveFormat As Long
    Dim FileExtStr As String
    Dim FileFormatNum As Long
    Dim Sourcewb As Workbook
    Dim Destwb As Workbook
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim I As Long

    With Application
        .ScreenUpdating = False
        .EnableEvents = False
    End With

    Set Sourcewb = ActiveWorkbook

    'Als Betreiber der Vergabeplattform k|fffd|nnen wir Ihrer Bitte nicht nachkommen bzw. Ihnen diese Frage nicht beantworten, da wir die einzelnen Verfahren nicht kennen.
    
    'Nachfragen ob versenden?
    If MsgBox("M|fffd|chten Sie das LV nun an einen Kollegen senden, damit er es zum Beispiel auf der Plattform einstellt?" & vbNewLine & vbNewLine & "Bitte teilen Sie im Betreff und im eMail-Text dann noch mit f|fffd|r welche Vergabe dieses LV ist.", vbYesNo + vbQuestion, "Frage: LV als eMail versenden?") = vbNo Then Exit Sub
    
    'Remember the users setting
    SaveFormat = Application.DefaultSaveFormat
    'Set it to the 97-2003 file format
    Application.DefaultSaveFormat = 56

    ActiveSheet.Copy
    Set Destwb = ActiveWorkbook
    Destwb.CheckCompatibility = False

    'Save/Mail the new workbook and close it
    TempFilePath = Application.DefaultFilePath & "\"
    TempFileName = Sourcewb.Name & "_" _
                 & Format(Now, "yyyy-mm-dd")

    With Destwb
        .SaveAs TempFilePath & TempFileName & ".xls", _
                FileFormat:=56
        On Error Resume Next
        For I = 1 To 3
            .SendMail "", _
                      "Excel LV f|fffd|r Vergabe ..."
            If Err.Number = 0 Then Exit For
        Next I
        On Error GoTo 0
        .Close SaveChanges:=False
    End With

    'Delete the file you have send
    Kill TempFilePath & TempFileName & ".xls"

    'Set DefaultSaveFormat back to the users setting
    Application.DefaultSaveFormat = SaveFormat

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With
End Sub

Private Sub SetUst(control As Variant)
  Dim Zelle As Range
  Set Zelle = Application.InputBox("Klicken Sie mit der Maus die Zelle mit der Umsatzsteuer % des LV", , , , , , , 8)
  Zelle.Name = "Ust"
  MsgBox "Der Wert dieser Zelle ist die Umsatzsteuer in %", 64, "eVergabe"
   
End Sub
Private Sub SetNettoNach(control As Variant)
  Dim Zelle As Range
  Set Zelle = Application.InputBox("Klicken Sie mit der Maus die Zelle welche die Netto-Summe abz|fffd|glich Nachlass", , , , , , , 8)
  Zelle.Name = "Netto_Nachlass"
  MsgBox "Der Wert dieser Zelle ist die Netto-Summe abz|fffd|glich Nachlass", 64, "eVergabe"
   
End Sub

Private Sub SetNachPro(control As Variant)
  Dim Zelle As Range
  Set Zelle = Application.InputBox("Klicken Sie mit der Maus die Zelle in welche der Bieter einen Nachlass in % eintragen soll", , , , , , , 8)
  Zelle.Name = "Nachlass_Prozent"
  MsgBox "Der Wert dieser Zelle ist der Nachlass in %", 64, "eVergabe"
   
End Sub

Private Sub SetNachAbs(control As Variant)
  Dim Zelle As Range
  Set Zelle = Application.InputBox("Klicken Sie mit der Maus die Zelle in welche der Bieter einen absoluten Nachlass eintragen soll", , , , , , , 8)
  Zelle.Name = "Nachlass_Absolut"
  MsgBox "Der Wert dieser Zelle ist der absolute Nachlass", 64, "eVergabe"
   
End Sub

Private Sub SetNetto(control As Variant)
  Dim Zelle As Range
  Set Zelle = Application.InputBox("Klicken Sie mit der Maus die Zelle mit der Netto-Summe des LV", , , , , , , 8)
  Zelle.Name = "Netto"
  MsgBox "Der Wert dieser Zelle ist die Netto-Summe", 64, "eVergabe"
   
End Sub

Private Sub SetBrutto(control As Variant)
  Dim Zelle As Range
  Set Zelle = Application.InputBox("Klicken Sie mit der Maus die Zelle mit der Brutto-Summe des LV", , , , , , , 8)
  Zelle.Name = "Brutto"
  MsgBox "Der Wert dieser Zelle wird als Brutto-Summe in das Angebotsschreiben des Bieters |fffd|bernommen", 64, "eVergabe"
   
End Sub

Private Sub SaveXLS(control As Variant)
   
   Dim fileSaveName As Variant
   fileSaveName = Application.GetSaveAsFilename( _
   fileFilter:="Excel Files (*.xls), *.xls")
   
   'If user specified file name, perform Save and display msgbox
   If fileSaveName <> False Then
      ActiveWorkbook.CheckCompatibility = False
      ActiveWorkbook.SaveAs Filename:=fileSaveName, FileFormat:=xlNormal
      
      MsgBox "Laden Sie jetzt die folgende Datei als LV auf die Plattform " & fileSaveName, 64, "eVergabe"
   End If
End Sub

Private Sub Blattschutz(control As Variant)

Dim ws As Worksheet
    For Each ws In ActiveWorkbook.Worksheets
      ws.Protect Password:="2013eVergabe!x", UserInterfaceOnly:=True, DrawingObjects:=True, Contents:=True, Scenarios:=True
    Next
      ActiveWorkbook.Protect Structure:=True, Windows:=False, Password:="2013eVergabe!x"
    MsgBox "Die Arbeitsmappe ist nun gesch|fffd|tzt und kann gespeichert werden.", 64, "eVergabe"
End Sub

Private Sub Bietereingaben(control As Variant)
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
End Sub

Private Sub BlattschutzAus(control As Variant)

   Dim ws As Worksheet
   
   For Each ws In ActiveWorkbook.Worksheets
       ws.Unprotect Password:="2013eVergabe!x"
   Next
    MsgBox "Die Arbeitsmappe ist nun ungesch|fffd|tzt! Wenn Sie diese f|fffd|r die eVergabe nutzen wollen, m|fffd|ssen Sie diese erst wieder sch|fffd|tzen.", 64, "eVergabe"
End Sub

' 06.04.2011 21:15 (207480) Summen nicht nur aus erstem Blatt



Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
  Dim wb As Workbook
  Dim sFile As String
  Dim sXML As String
  Dim n As Long
  Dim xTotal As Variant
  Dim xDiscountAmt As Variant
  Dim xDiscountPcnt As Variant
  Dim xTotAfterDisc As Variant
  Dim xVAT As Variant
  Dim xTotalGross As Variant

  On Error Resume Next


  ' get values

  Set wb = ThisWorkbook

  xTotal = GetValue(wb, "Netto")
  xDiscountAmt = GetValue(wb, "Nachlass_Absolut")
  xDiscountPcnt = GetValue(wb, "Nachlass_Prozent")
  xTotAfterDisc = GetValue(wb, "Netto_Nachlass")
  xVAT = GetValue(wb, "Ust")
  xTotalGross = GetValue(wb, "Brutto")


  ' define file content

  sXML = "<?xml version=""1.0"" ?>" & vbCrLf
  sXML = sXML & "<GaebTool>" & vbCrLf
  sXML = sXML & "<D83 Path=""" & Me.Name & """></D83>" & vbCrLf
  sXML = sXML & "<D84 Path=""" & Me.Name & """ " & _
                  "Total=""" & xTotal & """ " & _
                  "DiscountPcnt=""" & xDiscountPcnt & """ " & _
                  "DiscountAmt=""" & xDiscountAmt & """ " & _
                  "TotAfterDisc=""" & xTotAfterDisc & """ " & _
                  "TotalLSUM="""" " & _
                  "VAT=""" & xVAT & """ " & _
                  "TotalGross=""" & xTotalGross & """ " & _
                  "TotalCur=""EUR"">" & _
                  "</D84>" & vbCrLf
  sXML = sXML & "<PDF Path=""""></PDF>" & vbCrLf
  sXML = sXML & "<state ready=""true""></state>" & vbCrLf
  sXML = sXML & "<FractDig UP=""3""></FractDig>" & vbCrLf
  sXML = sXML & "<Contract Type=""""></Contract>" & vbCrLf
  sXML = sXML & "</GaebTool>" & vbCrLf


  ' write file

  sFile = wb.FullName

  If sFile <> "" Then
    n = InStrRev(sFile, ".")

    If n = 0 Then
      n = Len(sFile) + 1
    End If

    sFile = Left$(sFile, n - 1) & ".gaeb"
    WriteToFile sFile, sXML
  End If
End Sub


Private Function GetValue(wb As Workbook, sRange As String) As Variant
  Dim ws As Worksheet
  Dim r As Range

  On Error Resume Next

  For Each ws In wb.Worksheets
    Err.Clear
    Set r = ws.Range(sRange)

    If Err.Number = 0 Then
      If IsEmpty(r.Value) Then
        GetValue = ""
      ElseIf IsNumeric(r.Value) Then
        If InStr(r.NumberFormat, "%") > 0 Then
          GetValue = Trim$(Str(r.Value * 100))
        Else
          GetValue = Trim$(Str(r.Value))
        End If
      Else
        GetValue = r.Value
      End If

      Exit Function
    End If
  Next ws

  GetValue = ""
End Function


Private Function WriteToFile(ByVal sFile As String, ByVal sContent As String) As Boolean
  Dim nHandle As Integer

  On Error Resume Next

  Err.Clear
  nHandle = FreeFile
  Open sFile For Output As nHandle

  If Err.Number = 0 Then
    Print #nHandle, sContent

    If Err.Number <> 0 Then
      MsgBox Err.Description
    Else
      WriteToFile = True
    End If

    Close nHandle
  End If
End Function


INQUEST-PP=macro
