Attribute VB_Name = "Module1"
Sub Reset()
    Application.EnableEvents = True
    'Worksheets("Welcome").Visible = xlSheetVisible
End Sub
Attribute VB_Name = "Module2"
Sub CheckForm_Click()
    Dim statusID As Integer
    statusID = ThisWorkbook.CallCheckValidation(False)
    If (statusID = 3) Then
        MsgBox _
            "There are invalid answer(s) in the officer matrix which need to be corrected before it can be saved." & vbCrLf & vbCrLf & _
            "Please update the cells highlighted in red.", _
            vbExclamation, "Error"
    ElseIf (statusID = 2) Then
        MsgBox _
            "There are missing answer(s) in the officer matrix." & vbCrLf & vbCrLf & _
            "Missing Information is highlighted in yellow.", _
            vbInformation, "Missing Information"
    Else
        MsgBox "The Officer Matrix validated successfully." & vbCrLf & vbCrLf & _
        "To complete the process, please email the file to download@Q88.com.", _
            vbApplicationModal, "Validation Successful"
    End If
End Sub


Sub PrintForm_Click()
    'Sheets("Print").Select
    'ActiveWindow.ActiveSheet.PrintPreview
    Sheets("Print").PrintPreview
End Sub

Sub BackToMainForm_Click()
    Sheets("OfficerMatrix").Select
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Change(ByVal Target As Range)
    'This will only call of the custom validation function if more than one cell was modified
    ' If Target.Count > 1 Then
    '   ThisWorkbook.CheckValidation True, Target
    'End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'    With ActiveWindow.VisibleRange
'        ' subsitute the name of the Textbox in question
'        lblVesselName.Top = 15
'        lblVesselName.Left = .Left + 5
'        ' 45 seems to be the right number of points--use fewer if you've hidden the scrollbars or the row headings
'    End With
'    If (lblVesselName.Left > 640) Then
'        lblVesselName.Left = 640
'    End If
End Sub
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'FYI: Color Conversion R+(256*G)+(65536*B)
Const WelcomePage = "Welcome"
Const FirstEditableColumnIndex = 1
Const LastEditableColumnIndex = 21
Const ColorError = 8420607 'RGB(255, 124, 128)
Const ColorMissing = 9895935 'RGB(255, 255, 150)
Const ColorRowOk = 13434828 'RGB(204, 255, 204)
Const ColorRow = 16777215 'RGB(255, 255, 255)
Const ColorRowAlt = 14474460 'RGB(220, 220, 220)
Const MessageError = "There are invalid answer(s) in the officer matrix which need to be corrected before it can be saved." & vbCrLf & vbCrLf & _
            "Please update the cells highlighted in red."
Const MessageErrorHeader = "Invalid Answer(s)"
Const MessageMissing = "There are missing answer(s) in the officer matrix." & vbCrLf & _
            "Do you wish to save anyway?" & vbCrLf & vbCrLf & _
            "Missing Information is highlighted in yellow"
Const MessageMissingHeader = "Missing Information"

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Dim statusID As Integer
    Dim saveAnyway As String
    Application.EnableEvents = False 'Turn off events to prevent unwanted loops
    'Evaluate if workbook is saved and emulate default propmts
    With ThisWorkbook
        If Not .Saved Then
            Select Case MsgBox("Do you want to save the changes made to '" & .Name & "'?", _
                vbYesNoCancel + vbExclamation)
                Case Is = vbYes
                    statusID = CallCheckValidation(True)
                    If statusID = 3 Then
                        MsgBox MessageError, vbExclamation, MessageErrorHeader
                        Cancel = True
                    ElseIf statusID = 2 Then
                        saveAnyway = False
                        saveAnyway = MsgBox(MessageMissing, vbYesNo + vbInformation, MessageMissingHeader)
                        If saveAnyway = vbYes Then
                            Call CustomSave
                        Else
                            Cancel = True
                        End If
                    Else
                        Call CustomSave
                    End If
                Case Is = vbNo
                    'Do not save
                Case Is = vbCancel
                    Cancel = True 'Set up procedure to cancel close
            End Select
        End If
        'If Cancel was clicked, turn events back on and cancel close, otherwise close the workbook without saving further changes
        If Not Cancel = True Then
            .Saved = True
            Application.EnableEvents = True
            .Close savechanges:=False
        Else
            Application.EnableEvents = True
        End If
    End With
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    Dim Target As Range
    Dim statusID As Integer
    Dim saveAnyway As String
    Application.EnableEvents = False 'Turn off events to prevent unwanted loops
    statusID = CallCheckValidation(True)
    If statusID = 3 Then
        MsgBox MessageError, vbExclamation, MessageErrorHeader
        ThisWorkbook.Saved = False
    ElseIf statusID = 2 Then
        saveAnyway = False
        saveAnyway = MsgBox(MessageMissing, vbYesNo + vbInformation, MessageMissingHeader)
        If saveAnyway = vbYes Then
            Call CustomSave(SaveAsUI)
            ThisWorkbook.Saved = True
        End If
    Else
        Call CustomSave(SaveAsUI)
        ThisWorkbook.Saved = True
    End If
    Cancel = True
    Application.EnableEvents = True 'Turn events back on an set saved property to true
End Sub

'Unhide all worksheets
Private Sub Workbook_Open()
    Application.ScreenUpdating = False
    Call ShowAllSheets
    Application.ScreenUpdating = True
End Sub

Private Sub CustomSave(Optional SaveAs As Boolean)
    Dim ws As Worksheet, aWs As Worksheet, newFname As String
    Application.ScreenUpdating = False 'Turn off screen flashing
    Set aWs = ActiveSheet 'Record active worksheet
    Call HideAllSheets 'Hide all sheets
    'Save workbook directly or prompt for saveas filename
    If SaveAs = True Then
        newFname = Application.GetSaveAsFilename( _
            fileFilter:="Excel Files (*.xls), *.xls")
        If Not newFname = "False" Then ThisWorkbook.SaveAs newFname
    Else
        ThisWorkbook.Save
    End If
    Call ShowAllSheets 'Restore file to where user was
    aWs.Activate
    Application.ScreenUpdating = True 'Restore screen updates
End Sub

'Hide all worksheets except the macro welcome page
Private Sub HideAllSheets()
    Dim ws As Worksheet
    Worksheets(WelcomePage).Visible = xlSheetVisible
    For Each ws In ThisWorkbook.Worksheets
        If Not ws.Name = WelcomePage Then
            ws.Visible = xlSheetVeryHidden
        End If
    Next ws
    Worksheets(WelcomePage).Activate
End Sub

'Show all worksheets except the macro welcome page
Private Sub ShowAllSheets()
    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        If Not ws.Name = WelcomePage Then ws.Visible = xlSheetVisible
    Next ws
    Worksheets(WelcomePage).Visible = xlSheetVeryHidden
    
    'Set the officer matrix as the opened sheet if the user has elected to skip the instructions page
    On Error GoTo SkipByPassInstructions
    If (Range("'Instructions'!G37").Value = "Yes") Then
        Sheet5.Select
    End If
SkipByPassInstructions:
    Application.DisplayCommentIndicator = xlCommentIndicatorOnly
End Sub

Public Function CallCheckValidation(isCalledFromSave As Boolean) As Integer
    Dim statusID As Integer
    statusID = CheckValidation(Range("MainInputFields"))
    CallCheckValidation = statusID
End Function

Public Function CheckValidation(Target As Range) As Integer
    Sheet5.Unprotect (Sheet5.Cells(1, 24))
    Dim generalIsValid As Boolean
    Dim generalIsMissingInfo As Boolean
    Dim newError As Boolean
    Dim resetRng As Range
    Dim rowHasValue As Boolean
    Dim rowHasError As Boolean
    Dim rowIsNotAnonymous As Boolean
    Dim rowIndex As Integer
    Dim workingCell As Range
    generalIsValid = True
    generalIsMissingInfo = False
    
    Call ResetValidation
    '*******************************
    '*** Reset Background Colors ***
    '*******************************
    For Each resetRng In Target.Rows
        If resetRng.Row Mod 2 = 1 Then
            resetRng.Interior.Color = ColorRow
        Else
            resetRng.Interior.Color = ColorRowAlt
        End If
    Next resetRng
    '***************************
    '*** Check form is valid ***
    '***************************
    If (Sheet5.Range("GeneralComments_Field").Validation.Value) Then
        Sheet5.Range("GeneralComments_Field").Interior.Color = ColorRow
    Else
        generalIsValid = False
        Sheet5.Range("GeneralComments_Field").Interior.Color = ColorError
    End If
    
    For Each workingCell In Target
        If (rowIndex <> workingCell.Row) Then
            rowIndex = workingCell.Row
            rowHasValue = False
            rowHasError = False
            rowIsNotAnonymous = False
        End If
        If (Not rowHasValue And workingCell.Value <> "") Then
            rowHasValue = True
        End If
        If (Not rowIsNotAnonymous And workingCell.Value <> "" And _
            (workingCell.Column = 3 Or workingCell.Column = 4 Or workingCell.Column = 6)) Then
            rowIsNotAnonymous = True
        End If
        On Error Resume Next
        If (workingCell.Validation.ShowError) Then
            If (Not workingCell.Validation.Value) Then
                generalIsValid = False
                rowHasError = True
                workingCell.Interior.Color = ColorError
            End If
        End If
        If (workingCell.Column = LastEditableColumnIndex) Then
            Call CheckRow(rowHasValue, rowHasError, rowIsNotAnonymous, workingCell.Row, generalIsValid, generalIsMissingInfo)
        End If
    Next workingCell
    '********************
    '*** Return Value *** (1:Success, 2:Missing, 3:Error)
    '********************
    If (Not generalIsValid) Then
        CheckValidation = 3
    ElseIf (generalIsMissingInfo) Then
        CheckValidation = 2
    Else: CheckValidation = 1
    End If
    Sheet5.Protect contents:=True, userinterfaceonly:=True, Password:=Sheet5.Cells(1, 24)
End Function

Public Sub CheckRow(hasValue As Boolean, hasError As Boolean, rowIsNotAnonymous As Boolean, rowIndex As Integer, ByRef generallyIsValid As Boolean, ByRef generallyIsMissingInfo As Boolean)
    Dim rowHasMissingData As Boolean
    Dim targetCheck As Range
    rowHasMissingData = False
    Set targetCheck = Range(Sheet5.Cells(rowIndex, FirstEditableColumnIndex), Sheet5.Cells(rowIndex, LastEditableColumnIndex))
    '******************************
    '*** Highlight Empty Values ***
    '******************************
    If (hasValue) Then
        Dim workingCell As Range
        For Each workingCell In targetCheck
            'Ignore the comments column
            If (workingCell.Value = "" _
                And workingCell.Interior.Color <> ColorError _
                And workingCell.Column <> LastEditableColumnIndex _
            ) Then
                If workingCell.Column >= 3 And workingCell.Column <= 6 Then 'Name Fields
                    If rowIsNotAnonymous And workingCell.Column <> 5 Then
                        workingCell.Interior.Color = ColorMissing
                        rowHasMissingData = True
                        generallyIsMissingInfo = True
                    End If
                ElseIf workingCell.Column <> 19 And workingCell.Column <> 11 And workingCell.Column <> 12 Then 'Watch Officer Experience
                    workingCell.Interior.Color = ColorMissing
                    rowHasMissingData = True
                    generallyIsMissingInfo = True
                End If
            End If
        Next workingCell
    End If
    '******************************
    '*** Set Overall Row Status ***
    '******************************
    If (hasError) Then
        Sheet5.Cells(rowIndex, 1).Interior.Color = ColorError
    ElseIf (rowHasMissingData) Then
        Sheet5.Cells(rowIndex, 1).Interior.Color = ColorMissing
    Else
        Sheet5.Cells(rowIndex, 1).Interior.Color = ColorRowOk
    End If
    If (Not generallyIsMissingInfo) Then
        generallyIsMissingInfo = rowHasMissingData
    End If
End Sub

Public Sub ResetValidation()
    '***************************
    '*** Recreate Validation ***
    '***************************
        With Range("'OfficerMatrix'!A1:'OfficerMatrix'!AA512").Validation
            .Delete
        End With
        '************************
        '*** General Comments ***
        '************************
        With Range("GeneralComments_Field").Validation
            .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
            Operator:=xlLessEqual, Formula1:="500"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "General Comments"
            .ErrorMessage = "Please enter less than 500 characters."
            .ShowError = True
        End With
        '************
        '*** Rank ***
        '************
        With Range("Rank_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=Rank"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Rank"
            .ErrorMessage = "Please select the rank from the list."
            .ShowError = True
        End With
        '*******************
        '*** Family Name ***
        '*******************
        With Range("FamilyName_Field").Validation
            .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
            Operator:=xlLessEqual, Formula1:="50"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Family Name"
            .ErrorMessage = "Please enter less than 50 characters."
            .ShowError = True
        End With
        '******************
        '*** First Name ***
        '******************
        With Range("FirstName_Field").Validation
            .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
            Operator:=xlLessEqual, Formula1:="50"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "First Name"
            .ErrorMessage = "Please enter less than 50 characters."
            .ShowError = True
        End With
        '**********************
        '*** Middle Initial ***
        '**********************
        With Range("MiddleInitial_Field").Validation
            .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
            Operator:=xlLessEqual, Formula1:="1"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Middle Initial"
            .ErrorMessage = "Please enter only the first charcter of the middle name."
            .ShowError = True
        End With
        '*****************************
        '*** Identification Number ***
        '*****************************
        With Range("IdentificationNumber_Field").Validation
            .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, _
             Formula1:="=COUNTIF(IdentificationNumber, CELL(""contents"", INDIRECT(ADDRESS(ROW(), 6))))<= 1"
            .IgnoreBlank = True
            .ErrorTitle = "Document Number"
            .ErrorMessage = "Document Number already exists" & vbCrLf & "Must be unique."
            .ShowError = True
        End With
        '*******************
        '*** Nationality ***
        '*******************
         With Range("Nationality_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=Nationality"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Nationality"
            .ErrorMessage = "Please choose the Nationality from the list."
            .ShowError = True
        End With
        '********************
        '*** Cert of Comp ***
        '********************
        With Range("CertComp_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=CertComp"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Certificate of Competency"
            .ErrorMessage = "Please select the Certificate of Competency from the list."
            .ShowError = True
        End With
        '***********************
        '*** Issuing Country ***
        '***********************
         With Range("Country_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=Countries"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Issuing County"
            .ErrorMessage = "Please choose the Issuing Country from the list."
            .ShowError = True
        End With
        '********************
        '*** Admin Accept ***
        '********************
        With Range("AdminAcceptance_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=AdminAcceptance"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Administration Acceptance"
            .ErrorMessage = "Please select the Administration Acceptance from the list."
            .ShowError = True
        End With
        '*******************
        '*** Tanker Cert ***
        '*******************
        With Range("TankerCert_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=TankerCert"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Tanker Certification"
            .ErrorMessage = "Please select the Tanker Certification from the list."
            .ShowError = True
        End With
        '*******************
        '*** Specialised Tanker Training ***
        '*******************
        With Range("SpecialisedTankerTraining_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=SpecialisedTankerTraining"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Specialised Tanker Training"
            .ErrorMessage = "Please select the Specialised Tanker Training from the list."
            .ShowError = True
        End With
        '******************
        '*** Radio Qual ***
        '******************
        With Range("RadioQualification_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=RadioQualification"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Radio Qualification"
            .ErrorMessage = "Please select the Radio Qualification from the list."
            .ShowError = True
        End With
        '********************
        '*** English Prof ***
        '********************
        With Range("EnglishProficiency_Field").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=EnglishProficiency"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "English Proficiency"
            .ErrorMessage = "Please select the English Proficiency from the list."
            .ShowError = True
        End With
        '*************
        '*** Years ***
        '*************
            '*********************
            '*** With Operator ***
            '*********************
            With Range("YearsOperator_Field").Validation
                .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                :=xlBetween, Formula1:="0.0", Formula2:="99.9"
                .IgnoreBlank = True
                .InCellDropdown = True
                .ErrorTitle = "Years with Operator"
                .ErrorMessage = "Please enter a numeric value between 0.1 and 99.9."
                .ShowError = True
            End With
            '***************
            '*** In Rank ***
            '***************
            With Range("YearsRank_Field").Validation
                .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                :=xlBetween, Formula1:="0.0", Formula2:="99.9"
                .IgnoreBlank = True
                .InCellDropdown = True
                .ErrorTitle = "Years In Rank"
                .ErrorMessage = "Please enter a numeric value between 0.1 and 99.9."
                .ShowError = True
            End With
            '*******************
            '*** Tanker Type ***
            '*******************
            With Range("YearsTankerType_Field").Validation
                .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                :=xlBetween, Formula1:="0.0", Formula2:="99.9"
                .IgnoreBlank = True
                .InCellDropdown = True
                .ErrorTitle = "Years on this Tanker Type"
                .ErrorMessage = "Please enter a numeric value between 0.1 and 99.9."
                .ShowError = True
            End With
            '*****************
            '*** All Types ***
            '*****************
            With Range("YearsTankersAll_Field").Validation
                .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                :=xlBetween, Formula1:="0.0", Formula2:="99.9"
                .IgnoreBlank = True
                .InCellDropdown = True
                .ErrorTitle = "Years on All Tankers"
                .ErrorMessage = "Please enter a numeric value between 0.1 and 99.9."
                .ShowError = True
            End With
            '********************
            '*** Watch Keeper ***
            '********************
            With Range("YearsWatch_Field").Validation
                .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                :=xlBetween, Formula1:="0.0", Formula2:="99.9"
                .IgnoreBlank = True
                .InCellDropdown = True
                .ErrorTitle = "Years as Watch Keeper"
                .ErrorMessage = "Please enter a numeric value between 0.1 and 99.9."
                .ShowError = True
            End With
        '**********************
        '*** Signed On Date ***
        '**********************
         With Range("SignedOnDate_Field").Validation
            .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=(DATE(YEAR(NOW())-10,MONTH(NOW()),DAY(NOW())))", Formula2:="=(DATE(YEAR(NOW())+10,MONTH(NOW()),DAY(NOW())))"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Signed-On Date"
            .ErrorMessage = "Please enter a valid date (mmm dd, yyyy).  Date must be +/- 10 years from today."
            .ShowError = True
        End With
        '***********************
        '*** Comments length ***
        '***********************
        With Range("Comments_Field").Validation
            .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
            Operator:=xlLessEqual, Formula1:="500"
            .IgnoreBlank = True
            .InCellDropdown = True
            .ErrorTitle = "Text Length"
            .ErrorMessage = "Please enter less than 500 characters."
            .ShowError = True
        End With
End Sub


INQUEST-PP=macro
