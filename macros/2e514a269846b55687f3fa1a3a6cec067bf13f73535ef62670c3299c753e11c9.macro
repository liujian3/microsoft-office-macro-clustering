Attribute VB_Name = "Blad1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Blad2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Blad4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Blad56"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ModBladKopieren"
Sub KopieerBlad()
Dim Adres$
Dim Bereik As Range
Set Bereik = [Afdrukbereik]
Bereik.Copy
End Sub
Attribute VB_Name = "ModCopyDelFormules"
Sub CopyDeleteFormules()
' Past de Formules naast de data
    ' Doelbereik voor de formules naast de data instellen
    
    If [N] > 3 Then
        Set rd = [celfitformules]
        Set rd = rd.Resize([N] - 1, rd.Columns.Count)
        
        ' Formules plakken tot einde kolom
        rd.Formula = [celfitformules].Formula
        
        ' Eventueel overtollige formules wissen
        Set rd = rd.Offset([N] - 1).Resize(1000 - [N] + 1)
        rd.ClearContents
    
    Else
        MsgBox "Er gaat iets niet goed met het aantal meetpunten N. Check dit."
    
    End If

End Sub
Attribute VB_Name = "ModDatumVandaag"
Sub DatumVandaag()

' Doelbereik voor de formules naast de data instellen (plakken en wissen)
Call CopyDeleteFormules
    
    ActiveSheet.Range("Datum") = Now

End Sub
Attribute VB_Name = "ModExportQGIS"
Option Explicit

Sub exportQGIS()
'Schrijft een tekst bestand met hierin de data voor QGIS in directory waar de sheet instaat

Dim sShtName$
Dim rTosave As Range
Dim sPath  As String
Dim sAddress As String
Dim sFullName As String

' Doelbereik voor de formules naast de data instellen (plakken en wissen)
Call CopyDeleteFormules

    sShtName = ActiveSheet.Name
    Set rTosave = Range("LijstQGIS")
    
    'get this workbook's path for saving to
    sPath = ThisWorkbook.Path & Application.PathSeparator
    
    'get the full name by adding contents of A1 to path
    sFullName = sPath & "QGIS_" & Range("zb0").Value & ".txt"
    
    'save to specified folder
    sAddress = rTosave.Address
    
    ExportRangeAsDelimitedText ThisWorkbook.Name, _
        sShtName, sAddress, sFullName, _
        ";", True, True, False

End Sub

Sub ExportRangeAsDelimitedText(SourceWB As String, _
   SourceWS As String, SourceAddress As String, _
   TargetFile As String, SepChar As String, SaveValues As Boolean, _
   ExportLocalFormulas As Boolean, AppendToFile As Boolean)

'Because the ExportToTextFile procedure accepts input parameters, _
you must call it from other VBA code, such as the Example Procedure

Dim SourceRange As Range, SC As String * 1
Dim A As Integer, r As Long, c As Integer, totr As Long, pror As Long
Dim fn As Integer, LineString As String, tLine As String
Dim txt$
   
   ' validate the input data if necessary
   Workbooks(SourceWB).Activate
   Worksheets(SourceWS).Activate
   If Application.WorksheetFunction.CountA(Range(SourceAddress)) = 0 Then Exit Sub
   If Not AppendToFile Then
       If Dir(TargetFile) <> "" Then
           On Error Resume Next
           Kill TargetFile
           On Error GoTo 0
           If Dir(TargetFile) <> "" Then
               MsgBox TargetFile & _
                   " already exists, rename, move or delete the file before you try again.", _
                   vbInformation, "Export range to textfile"
               Exit Sub
           End If
       End If
   End If
   If UCase(SepChar) = "TAB" Or UCase(SepChar) = "T" Then
       SC = Chr(9)
   Else
       SC = Left(SepChar, 1)
   End If
   
   ' perform export
   Set SourceRange = Range(SourceAddress)
   On Error GoTo NotAbleToExport
   fn = FreeFile
   Open TargetFile For Append As #fn ' open textfile for new input
   On Error GoTo 0
   ' determine the total number of rows to process
   totr = 0
   For A = 1 To SourceRange.Areas.Count
       totr = totr + SourceRange.Areas(A).Rows.Count
   Next A
   ' start writing the character-separated textfile
   pror = 0
   For A = 1 To SourceRange.Areas.Count
       For r = 1 To SourceRange.Areas(A).Rows.Count
           LineString = ""
           For c = 1 To SourceRange.Areas(A).Columns.Count
               tLine = ""
               On Error Resume Next
               If SaveValues Then
                   tLine = SourceRange.Areas(A).Cells(r, c).Value
               Else
                   If ExportLocalFormulas Then
                       tLine = SourceRange.Areas(A).Cells(r, c).FormulaLocal
                   Else
                       tLine = SourceRange.Areas(A).Cells(r, c).Formula
                   End If
               End If
               On Error GoTo 0
               LineString = LineString & tLine & SC
           Next c
           pror = pror + 1
           If pror Mod 50 = 0 Then
               Application.StatusBar = "Writing delimited textfile " & _
                   Format(pror / totr, "0 %") & "..."
           End If
           If Len(LineString) > 1 Then LineString = Left(LineString, Len(LineString) - 1)
           If LineString = "" Then
               Print #fn,
           Else
               Print #fn, LineString
           End If
       Next r
   Next A
   Close #fn ' close the textfile
   txt = "text-bestand" & vbCr & vbCr & TargetFile & vbCr & vbCr & "is aangemaakt."
   MsgBox (txt)
NotAbleToExport:
   Set SourceRange = Nothing
   Application.StatusBar = False
End Sub

Attribute VB_Name = "ModFit"
Option Explicit

Dim Ze0#, Te0#, tOff0#, Pp0#    ' startwaarde van de control-parameters
Dim dZe#, dTe#, dtOff#, dPp#    ' stapgrootte control-parameters
Dim ErrMin#
Dim Zem#, Tem#, tOffm#, Ppm#    ' waarden waarbij afwijking het kleinst is
Dim ronde%
Const Ntot% = 15

Sub fitparameterformulier()
    ufFitparameters.Show
End Sub

Sub VindFit2()
Dim cPar As Range
Dim tOff1#

Dim I%
Set cPar = [controlpar]

' Doelbereik voor de formules naast de data instellen (plakken en wissen)
Call CopyDeleteFormules

' Uitlezen control-parameters uit de sheet en stapgrootte bepalen
Ze0 = cPar(1, 1): dZe = (cPar(1, 2) - Ze0) / 2
Te0 = cPar(2, 1):  dTe = (cPar(2, 2) - Te0) / 2
' Zorg dat er minimaal 5 punten in het fitbereik vallen
' Zorg dat er minimaal 5 punten in het fitbereik vallen
tOff1 = Range("cel0dag").Offset([N] - 6)

If tOff1 < cPar(3, 2) Then
    MsgBox "Eindtijd interval v (" & cPar(3, 2) & " dgn) wordt op " & tOff1 & " dgn gezet vanwege minimaal aantal punten (5) in fitberekening"
    cPar(3, 2).Value = tOff1
End If
tOff1 = Min(tOff1, cPar(3, 2))
tOff0 = cPar(3, 1): dtOff = (tOff1 - tOff0) / 2
If tOff0 > tOff1 Then
    MsgBox "Begintijd interval v eerder kiezen s.v.p." & vbCr & "Macro stopt nu."
    Exit Sub
End If
Pp0 = cPar(4, 1): dPp = (cPar(4, 2) - Pp0) / 2

For ronde = 1 To 15
    DoorloopAlleWaarden
Next ronde

'afronden van de waarden
[rze] = Round([rze], 3)
[rte] = Round([rte], 3)
[rtoff] = Round([rtoff], 1)
[rpp] = Round([rpp], 0)

Application.StatusBar = False
Application.ScreenUpdating = True

Call GrafiekAanpassen2

End Sub

Private Sub DoorloopAlleWaarden()
Dim I%, j%, k%, m%, N%
Const f = 2

[rze] = Ze0
[rte] = Te0
[rtoff] = tOff0
[rpp] = Pp0
ErrMin = [gemerr]
Zem = Ze0: Tem = Te0: tOffm = tOff0: Ppm = Pp0

Application.ScreenUpdating = False

For I = 0 To 2
    [rze] = Ze0 + I * dZe
    For j = 0 To 2
        [rte] = Te0 + j * dTe
        For k = 0 To 2
            [rtoff] = tOff0 + k * dtOff
            For m = 0 To 2
                [rpp] = Pp0 + m * dPp
                N = N + 1
                If N Mod 27 = 0 Then
                    Application.StatusBar = "ronde = " & ronde & " van " & Ntot & ",   totaal = " & N
                End If
                If [gemerr] < ErrMin Then
                    ErrMin = [gemerr]
                    Zem = [rze]: Tem = [rte]: tOffm = [rtoff]: Ppm = [rpp]
                End If
            Next m
        Next k
    Next j
Next I
[rze] = Zem: [rte] = Tem: [rtoff] = tOffm: [rpp] = Ppm
' Nieuw interval instellen op basis van waarden met minimale fout
Select Case Zem
    Case Ze0 + dZe
        Ze0 = Zem - dZe / f
    Case Ze0 + f * dZe
        Ze0 = Zem - dZe
End Select
Select Case Tem
    Case Te0 + dTe
        Te0 = Tem - dTe / f
    Case Te0 + f * dTe
        Te0 = Tem - dTe
End Select
Select Case tOffm
    Case tOff0 + dtOff
        tOff0 = tOffm - dtOff / f
    Case tOff0 + f * dtOff
        tOff0 = tOffm - dtOff
End Select
Select Case Ppm
    Case Pp0 + dPp
        Pp0 = Ppm - dPp / f
    Case Pp0 + f * dPp
        Pp0 = Ppm - dPp
End Select
dZe = dZe / f: dTe = dTe / f: dtOff = dtOff / f: dPp = dPp / f

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "ModGrafiekAanpassen"
Option Explicit

Sub renameActiveChart()
'Selecteer grafiek
'Run deze macro en de grafiek wordt hernoemd

Dim sNewName$

    sNewName = InputBox("Voer nieuwe grafieknaam in:", "Grafiek hernoemen")

    If sNewName <> "" Then
        ActiveChart.Parent.Name = sNewName
    End If

End Sub
Sub GrafiekassenAuto()
With ActiveSheet.ChartObjects("grafzak").Chart   '<<---Geef hier de naam van de grafiek!
        With .Axes(xlValue, xlPrimary)
            .MaximumScaleIsAuto = True
            .MinimumScaleIsAuto = True
            .MajorUnitIsAuto = True
        End With
        With .Axes(xlValue, xlSecondary)
            .MaximumScaleIsAuto = True
            .MinimumScaleIsAuto = True
            .MajorUnitIsAuto = True
        End With
    End With

End Sub

Sub GrafiekAanpassen2()
'
' Deze macro past de min, max en maatstreep van de primaire en secundaire y-assen aan,
' aan waarden in cellen.
' De waarden moeten in cellen met naam staan (y1min, y1max, y1maj, y2min, y2max, y2maj).
' Als de cel leeggelaten is, dan wordt de as op automatisch gezet.

' Er moet ook een cel [grnaam] zijn met de naam van de grafiek erin

' Doelbereik voor de formules naast de data instellen (plakken en wissen)
Call CopyDeleteFormules

Dim gNaam$

gNaam = "GrafZak"    ' [grnaam] is cel op werkblad
    
ActiveSheet.Unprotect
    
With ActiveSheet.ChartObjects(gNaam).Chart   '<<---Geef hier de naam van de grafiek!
        With .Axes(xlValue, xlPrimary)
            If IsEmpty(Range("y1max")) Then .MaximumScaleIsAuto = True Else .MaximumScale = Range("y1max")
            If IsEmpty(Range("y1min")) Then .MinimumScaleIsAuto = True Else .MinimumScale = Range("y1min")
            If IsEmpty(Range("y1maj")) Then .MajorUnitIsAuto = True Else .MajorUnit = Range("y1maj")
        End With
        With .Axes(xlValue, xlSecondary)
            If IsEmpty(Range("y2max")) Then .MaximumScaleIsAuto = True Else .MaximumScale = Range("y2max")
            If IsEmpty(Range("y2min")) Then .MinimumScaleIsAuto = True Else .MinimumScale = Range("y2min")
            If IsEmpty(Range("y2maj")) Then .MajorUnitIsAuto = True Else .MajorUnit = Range("y2maj")
        End With
    End With
    
ActiveSheet.Protect
    
End Sub

Function readchartXmin(Chrt$)
'Geeft de minimumwaarde van de x-as van de grafiek. Chrt is bijvoorbeeld "Grafiek 1"
'De grafiek en de functie moeten op hetzelfde werkblad staan.
Application.Volatile
readchartXmin = Application.Caller.Parent.ChartObjects(Chrt).Chart.Axes(xlCategory).MinimumScale
End Function

Function readchartXmax(Chrt$)
'Geeft de max-waarde van de x-as van de grafiek. Chrt is bijvoorbeeld "Grafiek 1"
'De grafiek en de functie moeten op hetzelfde werkblad staan.
Application.Volatile
readchartXmax = Application.Caller.Parent.ChartObjects(Chrt).Chart.Axes(xlCategory).MaximumScale
End Function

Function readchartYmin(Chrt$)
'Geeft de minimumwaarde van de y-as van de grafiek. Chrt is bijvoorbeeld "Grafiek 1"
'De grafiek en de functie moeten op hetzelfde werkblad staan.
Application.Volatile
readchartYmin = Application.Caller.Parent.ChartObjects(Chrt).Chart.Axes(xlValue).MinimumScale
End Function

Function readchartYmax(Chrt$)
'Geeft de maximumwaarde van de y-as van de grafiek. Chrt is bijvoorbeeld "Grafiek 1"
'De grafiek en de functie moeten op hetzelfde werkblad staan.
Application.Volatile
readchartYmax = Application.Caller.Parent.ChartObjects(Chrt).Chart.Axes(xlValue).MaximumScale
End Function


Attribute VB_Name = "ModGrafiekVerschalen"
Option Explicit

Public Type scaleAxisScale
  ' Calculated Axis Scale Parameters
  dMin As Double
  dMax As Double
  dMajor As Double
  dMinor As Double
End Type

Function Min(A As Variant, b As Variant) As Variant
    Min = A
    If b < A Then Min = b
End Function

Function fnAxisScale(ByVal dMin As Double, ByVal dMax As Double) As scaleAxisScale
  ' Calculates tidy settings for the chart axes
  Dim dPower As Double, dScale As Double, dSmall As Double, dTemp As Double

  'Check if the max and min are the same
  If dMax = dMin Then
    dTemp = dMax
    dMax = dMax * 1.01
    dMin = dMin * 0.99
  End If

  'Check if dMax is bigger than dMin - swap them if not
  If dMax < dMin Then
    dTemp = dMax
    dMax = dMin
    dMin = dTemp
  End If

  'Make dMax a little bigger and dMin a little smaller (by 1% of their difference)
  If dMax > 0 Then
    dMax = dMax + (dMax - dMin) * 0.01
  ElseIf dMax < 0 Then
    dMax = WorksheetFunction.Min(dMax + (dMax - dMin) * 0.01, 0)
  Else
    dMax = 0
  End If
  If dMin > 0 Then
    dMin = WorksheetFunction.Max(dMin - (dMax - dMin) * 0.01, 0)
  ElseIf dMin < 0 Then
    dMin = dMin - (dMax - dMin) * 0.01
  Else
    dMin = 0
  End If

  'What if they are both 0?
  If (dMax = 0) And (dMin = 0) Then dMax = 1

  'This bit rounds the maximum and minimum values to reasonable values
  'to chart.  If not done, the axis numbers will look very silly
  'Find the range of values covered
  dPower = Log(dMax - dMin) / Log(10)
  dScale = 10 ^ (dPower - Int(dPower))

  'Find the scaling factor
  Select Case dScale
    Case 0 To 2.5
      dScale = 0.2
      dSmall = 0.05
    Case 2.5 To 5
      dScale = 0.5
      dSmall = 0.1
    Case 5 To 10
      dScale = 1
      dSmall = 0.2
    Case Else
      dScale = 2
      dSmall = 0.5
  End Select

  'Calculate the scaling factor (major & minor unit)
  dScale = dScale * 10 ^ Int(dPower)
  dSmall = dSmall * 10 ^ Int(dPower)

  'Round the axis values to the nearest scaling factor
  fnAxisScale.dMin = dScale * Int(dMin / dScale)
  fnAxisScale.dMax = dScale * (Int(dMax / dScale) + 1)
  fnAxisScale.dMajor = dScale
  fnAxisScale.dMinor = dSmall

End Function



Function sc2assen(Y1min, Y1max, Y2min, Y2max)
' voer de Ymin en Ymax van de twee assen in die
' als primaire en secundaire as zijn gedefinieerd

' Functie geeft als resultaat een horizontale rij
' met mooie waarden voor de grafiek van
' Min Y1, Max Y1, Maatstreep Y1, Min Y2, Max Y2, Maatstreep Y2
' Op worksheet 1 tot 6 cellen naast elkaar selecteren,
' de functie intypen en afsluiten met Ctlr + Enter

Dim scaleMyScale1 As scaleAxisScale
Dim scaleMyScale2 As scaleAxisScale
Dim Y1maj#
Dim Ni1%
Dim Y2maj#, p#
Dim scalesout As Variant

    ' Stel extreme waarde als min en max van de as
    Y1min = Min(Y1min, -Y1max)
    Y1max = -Y1min
    Y2min = Min(Y2min, -Y2max)
    Y2max = -Y2min

    ' Maak 'mooie' waarden van de eerste as
    scaleMyScale1 = fnAxisScale(Y1min, Y1max)
    Y1min = scaleMyScale1.dMin
    Y1max = scaleMyScale1.dMax
    Y1maj = scaleMyScale1.dMajor

    ' Iets grotere waarde voor as 2 zodat punt niet op rand terecht komt
    If Y2max = 0 Then
        If Y2min = 0 Then Y2max = 1 Else Y2max = 0
    Else
        If Y2max < 0 Then
            Y2max = Min(0, Y2max + (Y2max - Y2min) / 100)
        Else
            Y2max = Y2max + (Y2max - Y2min) / 100
        End If
    End If
    
    ' Ni1 = aantal gridlijnen op as 1
    Ni1 = Y1max / Y1maj
    ' maat van as 2 bepalen op basis van aantal gridlijnen vanuit as 1
    Y2maj = Y2max / Ni1
    ' bepaal macht van 10 om opzoektabel te schalen
    p = Int(Log(Y2maj) / Log(10))
    
    ' Maak 'mooie' maat voor as 2 door te zoeken in lijstje 1, 2, 2.5, 5, 10
    ' die op basis van de macht met een veelvoud van 10 is vermenigvuldigd dus
    ' 10, 20, 25.. 100 of 100, 200, 250... of 0.01, 0.02, 0.025...
    Select Case Y2maj
      Case 1 * 10 ^ p To 2 * 10 ^ p         ' tussen 1 * 10^p en 2 * 10^p
        Y2maj = 2 * 10 ^ p
      Case 2 * 10 ^ p To 2.5 * 10 ^ p       ' tussen (2 en 2,5) * 10^p
        Y2maj = 2.5 * 10 ^ p
      Case 2.5 * 10 ^ p To 5 * 10 ^ p       ' 2,5 * 10^p
        Y2maj = 5 * 10 ^ p
      Case Else
        Y2maj = 10 * 10 ^ p                 ' 10 * 10^p
    End Select
    
    ' min en max van secundaire as mooi maken
    Y2max = Ni1 * Y2maj
    Y2min = -Y2max
    
    ' Vullen van de outputarray
    ReDim scalesout(1 To 6)
    scalesout(1) = Y1min
    scalesout(2) = Y1max
    scalesout(3) = Y1maj
    scalesout(4) = Y2min
    scalesout(5) = Y2max
    scalesout(6) = Y2maj

    ' Deze functie is de outputarray
    ' Op worksheet 1 tot 6 cellen naast elkaar selecteren,
    ' de functie intypen en afsluiten met Ctlr + Enter
    sc2assen = scalesout
End Function


Public Function udfAxisScale(ByVal dMin As Double, ByVal dMax As Double) As Variant
  ' Worksheet interface to fnAxisScale
  ' Returns a horizontal array to the worksheet
  Dim scaleMyScale As scaleAxisScale
  Dim scaleOutput As Variant

  scaleMyScale = fnAxisScale(dMin, dMax)

  ReDim scaleOutput(1 To 4)
  scaleOutput(1) = scaleMyScale.dMin
  scaleOutput(2) = scaleMyScale.dMax
  scaleOutput(3) = scaleMyScale.dMajor
  scaleOutput(4) = scaleMyScale.dMinor

  udfAxisScale = scaleOutput
End Function


Attribute VB_Name = "ModInlezenCSV"
Option Explicit

Sub CsvBestandSelecteren()
  'Laat window zien om te browsen
  
  Dim x As Variant
  Dim usersel As String, Fil As String, Bericht As String, Respons As String
  Dim Caption As String, Knoptekst As String, SelectedFile As String, Pathname As String
  Dim padje$, txt$
  Dim sht As Worksheet
  Dim Userselec As Variant
  Dim PadenNaam As String
  Dim Filename As String, Naam$
  
    'Stel als huidige drive en pad voor Excel de locatie in van de laatst geopende file van dit tabblad
    'Txt = Left([pad], 1)    'cel [pad] bevat het pad de laatst geopende csv-datafile
    'On Error Resume Next
    'ChDrive Txt             'stel de drive-letter in
    'ChDir [pad]             'wijzig huidig pad in de waarde in cel [pad]

    Call SluitAlleBestanden
    
    Set sht = ActiveSheet
    Set Userselec = Selection '.Address
    
    Fil = "datafiles (*.csv), *.csv"
    'Caption = "Selecteer een bestand"
    Knoptekst = "Selecteren"
    PadenNaam = Application.GetOpenFilename(Fil, , "Selecteer een bestand", "Selecteren")
    x = Split(PadenNaam, Application.PathSeparator)
    Filename = x(UBound(x))
    
    
    x = Split(Filename, ".")      'splits extensie van filenaam
    Naam = x(0)                       'filenaam zonder extensie
    
    On Error Resume Next
    sht.Name = Naam
    [NaamZB] = Naam
    Call DatumVandaag
    
    Call Inlezen(PadenNaam)
    
  End Sub
  
Sub Inlezen(fname As String)
    Dim x As Variant
    Dim Usersheet As Worksheet
    Set Usersheet = ActiveSheet
    Dim sht As Worksheet
    Dim ra As Range, rd As Range
    Set sht = ActiveSheet

'wissen oude data
    Set rd = sht.Range("datacel0")
    Set rd = Range(rd, rd.End(xlDown)).Resize(, 11)
    rd.ClearContents
    
    'Application.ScreenUpdating = False
    Workbooks.OpenText Filename:=fname, _
        Origin:=xlMSDOS, StartRow:=1, DataType:=xlFixedWidth, FieldInfo:= _
        Array(0, 2), TrailingMinusNumbers:=True
    Set ra = Range(Range("A1"), Range("A1048576").End(xlUp))
    ra.TextToColumns Destination:=ra, DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=True, _
        Semicolon:=False, Comma:=True, Space:=False, Other:=False, FieldInfo _
        :=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), _
        Array(7, 1), Array(8, 1)), DecimalSeparator:=".", ThousandsSeparator:=" ", _
        TrailingMinusNumbers:=True
    
    ' Bronbereik instellen
    Set ra = ra.Resize(, 11)
    
    ' Doelbereik instellen en data plakken
    Set rd = rd.Resize(ra.Rows.Count, ra.Columns.Count)
    rd = ra.Value
    
    Usersheet.Activate
    
    ' Doelbereik voor de formules naast de data instellen (plakken en wissen)
    Call CopyDeleteFormules
    
    ' Filenaam zonder pad bepalen
    x = Split(fname, Application.PathSeparator)
    fname = x(UBound(x))
    Call SluitBestand(fname)
    
End Sub
Function WorkbookIsOpen(wbName) As Boolean
'   Returns TRUE if the workbook is open
    Dim x As Workbook
    On Error Resume Next
    Set x = Workbooks(wbName)
    If Err = 0 Then WorkbookIsOpen = True _
        Else WorkbookIsOpen = False
End Function

Sub SluitAlleBestanden()
Dim Nbooks, I As Integer
Dim Filename As String, FE As String

    Nbooks = Workbooks.Count
'   Loop alle geopende workbooks
    For I = Nbooks To 1 Step -1
        Filename = Workbooks(I).Name
        FE = Right(Filename, 3)
        If FE = "csv" Then
            Call SluitBestand(Filename)
        End If
    Next I
    'MsgTimed "Alle databestanden zijn gesloten", 1, "Databestand sluiten", vbInformation

End Sub

Sub SluitBestand(Filenm)
     If WorkbookIsOpen(Filenm) Then
        MsgTimed Filenm & " wordt gesloten", 1, "Databestand sluiten", vbInformation
        Application.DisplayAlerts = False
        Windows(Filenm).Close
        Application.DisplayAlerts = True
     Else
        MsgBox ("Bestand " & Filenm & " is niet open en kan/hoeft dus niet gesloten te worden")
     End If
End Sub

Private Function MsgTimed(Message As String, Optional Seconds As Integer = 5, _
    Optional Title As String = "", Optional Options As Integer = 0)
'   Displays a message box for a predetermined duration then auto closes it.
'   Uses the same syntax as the built-in Popup function referenced on the page below...
'       http://msdn.microsoft.com/en-us/library/x83z1d9f%28v=vs.84%29.aspx
    CreateObject("WScript.Shell").Run "mshta.exe vbscript:close(CreateObject(""WScript.Shell"")" _
        & ".Popup(""" & Message & """," & Seconds & ",""" & Title & """," & Options & "))"
End Function







Attribute VB_Name = "ModInterpol3"
Option Explicit

Function Interpol3(x As Double, rngX As Range, rngY As Range) As Variant
'Interpoleert x in reeks rngX en geeft bijbehorende ge|fffd|nterpoleerde waard y uit reeks rngY
'Reeks rngX moet of oplopend of aflopend gesorteerd zijn

Dim i0 As Integer
Dim x0 As Double, x1 As Double, y0 As Double, y1 As Double
Dim xmin As Double, xmax As Double
Dim Volg%, N%
    N = Application.Count(rngX)
    Set rngX = Range(rngX, rngX(N))
    Set rngY = Range(rngY, rngY(N))
    Volg = 1
    If Application.Index(rngX, N) < Application.Index(rngX, 1) Then Volg = -1
    xmin = WorksheetFunction.Min(rngX)
    xmax = WorksheetFunction.Max(rngX)
    
    'Als x binnen bereik van rngX valt, dan kan er gerekend worden
    If (xmin <= x) And (x <= xmax) Then
        i0 = Application.Match(x, rngX, Volg)
        y0 = Application.Index(rngY, i0)
        x0 = Application.Index(rngX, i0)
        If x0 = x Then
           Interpol3 = y0
        Else
           x1 = Application.Index(rngX, i0 + 1)
           y1 = Application.Index(rngY, i0 + 1)
           Interpol3 = y0 + (x - x0) / (x1 - x0) * (y1 - y0)
        End If
    Else
        'Melding NB# als x-waarde buiten het bereik van rngX valt
        Interpol3 = CVErr(xlErrNA)
    End If
    
End Function

Function sigmak2(niv#, Grondtabel As Range, gws#, Optional bkz#, Optional phi#, Optional gamw#) As Variant
'Rekent de korrelspanning uit op een bepaald niveau, namelijk het niveau niv
'grondtabel moet als volgt uit 4 kolommen zijn opgebouwd:
'bk_laag; ok_laag; gamma_dr; gamma_nat
'gws is de freatische grondwaterstand
'optioneel kunnen de bovenkant zandlaag en stijghoogte van de zandlaag ingevoerd worden
'optioneel kan het gewicht van water aangepast worden, anders krijg je de defaultwaarde 10.

'voorbeelden aanroep in cel op werkblad:
'=sigmak2(-6; $A$1:$D$8; -0,4)
'   --> korrelspanning op -6,0m; wp -0,4m en gam_w = 10 (leeglaten van gam_w --> 10) geen spanningswater

'=sigmak2(-15; $A$1:$D$8; -0,4; -13; -4)
'   --> korrelspanning op -15m; wp -0,4m; bkzand -13m stijghoogte -4m en gam_w = 10 (defaultwaarde)

'=sigmak2(-6; $A$1:$D$8; -0,4;;;9,81)
'   --> korrelspanning op -6,0m; wp -0,4m en gam_w = 9,81 geen spanningswater
'                                                    (let op! de plaatsen van bkzand en phi wel met ; aangeven)
'=sigmak2(-15; $A$1:$D$8; -0,4; -13; -4; 9,81)
'   --> korrelspanning op -15m; wp -0,4m; bkzand -13m stijghoogte -4m en gam_w = 9,81


Dim Nlagen%, I%, iL%, Begrenzer%  'integers
Dim Z0#, z#, Zvolg#, gameff#, deltawsp#, Geff#  'double
Dim gamdr As Variant
Dim gamnat As Variant
Dim bk As Variant
Dim ok As Variant
Dim txt$  'text

Nlagen = Grondtabel.Rows.Count
Nlagen = WorksheetFunction.Count(Range(Grondtabel(1, 2), Grondtabel(Nlagen, 4))) / 3

Set bk = Range(Grondtabel(1, 1), Grondtabel(Nlagen, 1))
Set ok = Range(Grondtabel(1, 2), Grondtabel(Nlagen, 2))
Set gamdr = Range(Grondtabel(1, 3), Grondtabel(Nlagen, 3))
Set gamnat = Range(Grondtabel(1, 4), Grondtabel(Nlagen, 4))

If bk(1) >= niv And niv >= ok(Nlagen) Then
    
    Geff = 0
    Z0 = bk(1) 'maaiveldniveau
    iL = 1
    Begrenzer = 1
    If bkz = Empty Or phi = Empty Then
        bkz = niv
        phi = gws
    End If
    
    'Als gamw is leeggelaten, dan krijgt gamw de waarde 10
    If gamw = Empty Then gamw = 10
    
    Do
        
        'Bepaal volgende laag vanaf z0 gezien, hiermee wordt bedoeld of de volgende laagscheiding,
        'of de grondwaterstand, of het niveau waarop sigma_k berekend moet worden
        If iL <= Nlagen Then
            iL = WorksheetFunction.Match(Z0, bk, -1) 'index van volgende laagscheiding
            Zvolg = WorksheetFunction.Index(ok, iL) 'volgende laagscheiding vanaf z0
            Zvolg = WorksheetFunction.Max(Zvolg, niv)
        Else
            Zvolg = niv
        End If
        If Z0 > gws And gws > Zvolg Then Zvolg = gws
        
        'Bepaal gamma_effectief
        I = WorksheetFunction.Match(Z0, bk, -1)
        If Zvolg >= gws Then
            gameff = WorksheetFunction.Index(gamdr, I)
        Else
            gameff = WorksheetFunction.Index(gamnat, I) - gamw
        End If
        txt = "z0 = " & Format(Z0, "0.00") & _
                "   zvolg = " & Format(Zvolg, "0.00") & _
                "   gameff = " & Format(gameff, "0.00")
        'MsgBox (txt)
        
        'Bepaal de dikte en gewicht
        Geff = Geff + (Z0 - Zvolg) * gameff
        
        'upgraden van z0
        Z0 = Zvolg
        Begrenzer = Begrenzer + 1
    Loop Until Z0 = niv Or Begrenzer = 100  'Begrenzer omdat bij verkeerde opgave van laagniveau's
                                            'de loop oneindig doorgaat.
    If Begrenzer = 100 Then
        sigmak2 = CVErr(xlErrNA)
    Else
        If niv > bkz Then deltawsp = 0 Else deltawsp = (gws - phi) * gamw
        sigmak2 = Geff + deltawsp
    End If
    
Else  'gekozen niveau niv valt buiten bereik van opgegeven grondprofiel
    
    sigmak2 = CVErr(xlErrNA)
    
End If
    
End Function

Attribute VB_Name = "ModKorrelspanning3"
Option Explicit

Function sigmak3(z#, Grondtabel As Range, gws#, Optional bkz#, Optional phi#, Optional gamw#) As Variant
' Application.Volatile
' Rekent de korrelspanning uit op een bepaald niveau, namelijk het niveau z
' grondtabel moet als volgt uit 3 of 4 kolommen zijn opgebouwd:
' bk_laag - [ok_laag] - gamma_dr - gamma_nat .... d.w.z. ok_laag mag weggelaten worden.
' gws is de freatische grondwaterstand
' optioneel kunnen de bovenkant zandlaag en stijghoogte van de zandlaag ingevoerd worden
' optioneel kan het gewicht van water aangepast worden, leeglaten resulteert in defaultwaarde 10.

' wijzigingen ten opzichte van vorige functie sigmak2:
' - laagdikte 0 is toegestaan
' - lege cellen en foutwaarden onderaan de tabel grondtabel zijn toegestaan
' - er wordt alleen gebruik gemaakt van de waarden bk_laag (eerste kolom van Grondtabel)
' - Grondtabel met 4 kolommen (bk-ok-gdr-gnat) maar ook met 3 kolommen (bk-gdr-gnat) is mogelijk
' - de onderste laag heeft dus geen onderkant en is oneindig dik

' voorbeelden aanroep in cel op werkblad:
' =sigmak3(-6; $A$1:$D$8; -0,4)
'    --> korrelspanning op -6,0m; wp -0,4m en gam_w = 10
'           (leeglaten van gam_w --> 10) geen spanningswater

' =sigmak3(-15; $A$1:$D$8; -0,4; -13; -4)
'    --> korrelspanning op -15m; wp -0,4m; bkzand -13m stijghoogte -4m en
'            gam_w = 10 (defaultwaarde)

' =sigmak3(-6; $A$1:$D$8; -0,4;;;9,81)
'    --> korrelspanning op -6,0m; wp -0,4m en gam_w = 9,81 geen spanningswater
'                  (let op! de plaatsen van bkzand en phi wel met ; aangeven)
' =sigmak3(-15; $A$1:$D$8; -0,4; -13; -4; 9,81)
'    --> korrelspanning op -15m; wp -0,4m; bkzand -13m stijghoogte -4m en gam_w = 9,81


Dim Nlagen%, I%, iL%  'integers
Dim Z0#, Z1#, Zt#, gameff#, deltawsp#, Geff#  'double
Dim gamdr As Variant
Dim gamnat As Variant
Dim bk As Variant
Dim ok As Variant
Dim Cel
Dim txt$  'text

' Nlagen is het aantal regels in het opgegeven bereik Grondtabel
Nlagen = Grondtabel.Rows.Count

' De verwijzing grondtabel moet uit 3 of 4 kolommen bestaan namelijk
' bk - gamdr - gamnat OF bk - ok - gamdr - gamnat
If Grondtabel.Columns.Count = 3 Or Grondtabel.Columns.Count = 4 Then
    
    Set bk = Range(Grondtabel(1, 1), Grondtabel(Nlagen, 1))
    
    ' Bepaal aantal lagen, dat is alle getallen >=0 en <0
    ' Lege cellen en fouten onderaan (!) de tabel vallen er nu buiten
    Nlagen = Application.CountIf(bk, ">=0") + Application.CountIf(bk, "<0")
    Set bk = Range(Grondtabel(1, 1), Grondtabel(Nlagen, 1))
    
    ' Splits de grondtabel in afzonderlijke kolommen
    If Grondtabel.Columns.Count = 4 Then
        Set gamdr = Range(Grondtabel(1, 3), Grondtabel(Nlagen, 3))
        Set gamnat = Range(Grondtabel(1, 4), Grondtabel(Nlagen, 4))
    Else ' er zijn 3 kolommen
        Set gamdr = Range(Grondtabel(1, 2), Grondtabel(Nlagen, 2))
        Set gamnat = Range(Grondtabel(1, 3), Grondtabel(Nlagen, 3))
    End If
    
    If bk(1) >= z Then
        
        Geff = 0
        Z0 = bk(1)  ' maaiveldniveau
        iL = 1      ' laagnr
        I = 1       ' teller
        ' als geen spanningswater ingevuld, dan waarden neutraal maken
        If bkz = Empty Or phi = Empty Then
            bkz = z
            phi = gws
        End If
        
        'Als gamw is leeggelaten, dan krijgt gamw de standaardwaarde 10
        If gamw = Empty Then gamw = 10
        
        ' Zt is telkens de eerst volgende laag onder Z0
        ' Zt kan zijn de onderkant van de grondlaag Z1 maar ook
        ' de gws, of het niveau z waarop korrelspanning bepaald moet worden
        I = 0
        Do While iL <= Nlagen And Z0 > z And I < 100
            I = I + 1
            If iL < Nlagen Then
                If Not IsEmpty(bk(iL + 1)) Then
                    Z1 = bk(iL + 1)     ' onderkant van de grondlaag
                    If Z0 > gws Then    ' gws ligt onder bk laag
                        Zt = WorksheetFunction.Max(Z1, z, gws)
                    Else                ' bk laag ligt onder gws
                        Zt = WorksheetFunction.Max(Z1, z)
                    End If
                End If
            Else    ' dit is voor de laatste grondlaag die geen ok heeft
                If Z0 > gws Then        ' gws ligt onder bk laag
                    Zt = WorksheetFunction.Max(z, gws)
                Else                    'bk laag ligt onder gws
                    Zt = z
                End If
            End If
            ' Bepaal gamma van het volgende laagje
            If Z0 > gws Then
                gameff = gamdr(iL)
            Else
                gameff = gamnat(iL) - gamw
            End If
            ' Effectief gewicht van het volgende laagje
            Geff = Geff + (Z0 - Zt) * gameff
            
            'txt = "z = " & z & vbCr & "Nlagen = " & Nlagen & "i = " & I & vbCr & "iL = " & iL & vbCr & "z0 = " & Z0 & vbCr & "zt = " & Zt & vbCr & "gameff = " & gameff & vbCr & "geff =" & Geff
            'MsgBox txt
            
            ' Volgende bovenkant van de laag instellen
            Z0 = Zt
            
            ' Check of Zt is onderkant grondlaag, dan naar volgende grondlaag
            If Zt = Z1 Then iL = iL + 1
        Loop
         
        If I = 100 Then
            sigmak3 = CVErr(xlErrNA)
        Else
            If z > bkz Then deltawsp = 0 Else deltawsp = (gws - phi) * gamw
            sigmak3 = Geff + deltawsp
        End If
        
    Else  'gekozen niveau z ligt boven maaiveld van opgegeven grondprofiel
        sigmak3 = CVErr(xlErrNA)
    End If

Else 'aantal kolommen in verwijzing niet gelijk aan 3 of 4
    sigmak3 = CVErr(xlErrNA)
End If
    
End Function
Attribute VB_Name = "ModSheetnaam"
Function SheetNaam(I As Variant, Optional Rel As Boolean) As String
'Geeft de naam van de sheet met indexnummer i
'Als tweede argument = 1, dan relatieve verwijzing vanaf sheet
'waar de functie aangeroepen wordt;
'Als tweede argument = 0 of leeg, dan absolute waarde sheetnummer
    Application.Volatile
    If Rel Then I = WorksheetIndex(Application.Caller.Parent) + I
    SheetNaam = Sheets(I).Name
End Function

Private Function WorksheetIndex(x As Worksheet) As Integer
'   Returns the Worksheets (not Sheets) Index
    Dim wks As Worksheet, WksNum As Integer
    WksNum = 1
    For Each wks In x.Parent.Worksheets
        If x.Name = wks.Name Then
            WorksheetIndex = WksNum
            Exit Function
        End If
        WksNum = WksNum + 1
    Next wks
End Function
Attribute VB_Name = "ModTabnaam"
Option Explicit

Sub TabnaamWijzigen()
    Dim txt$
    txt = Range("naamZB")
    On Error GoTo msg
    ActiveSheet.Name = txt
    Exit Sub
msg:
txt = txt & vbCr & "Bestaat de sheet met deze naam al?"
MsgBox (txt)

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    Dim wks As Worksheet
    For Each wks In ThisWorkbook.Worksheets
        wks.Protect UserInterfaceOnly:=True
    Next wks
End Sub

Attribute VB_Name = "ufFitparameters"
Attribute VB_Base = "0{834A8408-4814-4B20-8900-8F870ED46414}{88B98FDC-7AD2-4951-AE1E-E6FA1B8AE54B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cbOphalenInit_Click()
Call sht2formFitInit
End Sub


Private Sub Label4_Click()

End Sub

Private Sub UserForm_Activate()
' waarden uit de sheet invullen in het formulier
' fitparameters
Call sht2formFit
Call sht2formFitInit
' intervallen
Call sht2formIntervallen
End Sub
Private Sub sht2formFit()
' waarden uit de sheet invullen in het formulier
' fitparameters
tbZe.Value = [rze]
tbTe.Value = [rte]
tbV.Value = [rtoff]
tbPp.Value = [rpp]
End Sub

Private Sub sht2formFitInit()
' fitparameters uit de sheet weergeven in het formulier
lbZeInit.Caption = [rze]
lbTeInit.Caption = [rte]
lbVInit.Caption = [rtoff]
lbPpInit.Caption = [rpp]
End Sub


Private Sub sht2formIntervallen()
' intervallen uit de formulier invullen in de sheet
Set c0 = [rze].Offset(0, -2)
tbZeStart.Value = c0(1, 1)
tbZeEind.Value = c0(1, 2)
tbTeStart.Value = c0(2, 1)
tbTeEind.Value = c0(2, 2)
tbVStart.Value = c0(3, 1)
tbVEind.Value = c0(3, 2)
tbPpStart.Value = c0(4, 1)
tbPpEind.Value = c0(4, 2)
End Sub


Private Sub cbInvullenEnVindfit_Click()
' Er is op Invullen van interval + start fit geklikt
' intervallen uit formulier in sheet zetten
Call InvullenIntervallen
' start fitprodedure
Call VindFit2
' gevonden waarden in formulier zetten
Call sht2formFit
End Sub

Private Sub cbInvullenFit_Click()
' Er is op Invullen van parameters geklikt

' Waarden uit formulier in sheet invullen
[rze] = CDbl(tbZe.Value)
[rte] = CDbl(tbTe.Value)
[rtoff] = CDbl(tbV.Value)
[rpp] = CDbl(tbPp.Value)
End Sub

Private Sub cbInvullenInterval_Click()
' Er is op Invullen van interval geklikt
' Intervallen uit formulier in sheet invullen
Call InvullenIntervallen
End Sub

Private Sub InvullenIntervallen()
Dim c0 As Range
'bepaal de cel linksboven t.o.v. cel [rZe]
Set c0 = [rze].Offset(0, -2)
' invullen van waarden uit formulier in sheet
c0(1, 1) = CDbl(tbZeStart.Value)
c0(1, 2) = CDbl(tbZeEind.Value)
c0(2, 1) = CDbl(tbTeStart.Value)
c0(2, 2) = CDbl(tbTeEind.Value)
c0(3, 1) = CDbl(tbVStart.Value)
c0(3, 2) = CDbl(tbVEind.Value)
c0(4, 1) = CDbl(tbPpStart.Value)
c0(4, 2) = CDbl(tbPpEind.Value)
End Sub

Private Sub cbExit_Click()
Unload Me
End Sub



INQUEST-PP=macro
