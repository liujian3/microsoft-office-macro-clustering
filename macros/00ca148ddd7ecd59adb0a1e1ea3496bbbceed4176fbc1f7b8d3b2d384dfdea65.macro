Attribute VB_Name = "Ablauf"
Option Explicit

Public antw As Integer

Sub PNG_Einfuegen(pfd, pfdDat)
' Einzel-PNG einf|fffd|gen
'
    Dim seitVerhA4 As Double
    
    seitVerhA4 = 1.4143 ' gerundetes Seitenverh|fffd|ltnis DIN A4: Lange Seite zu kurze Seite => 29.7/21
    
    ' Einf|fffd|gen des Pfades |fffd| NICHT als Link(False) |fffd| IN DER DATEI zu speichern(True) |fffd| am linken |fffd| oberen Rand der aktiven Zelle |fffd|
    ' Breitenma|fffd| |fffd| (Breitenma|fffd| x Seitenverh|fffd|ltnis) als H|fffd|he
    ActiveSheet.Shapes.AddPicture(pfd & "\" & pfdDat, False, True, ActiveCell.Left, ActiveCell.Top, _
                                    453.5433070866, (453.5433070866 * seitVerhA4)).Select
    
    With Selection.ShapeRange
    
        '.Width = 340.157480315     ' 12 cm
        '.Width = 368.5039370079    ' 13 cm
        '.Width = 453.5433070866     ' 16 cm
        .IncrementTop 3.75
    
    End With
    
    ' Seitenumbruch positionieren und setzen
    'Cells(ActiveCell.Row + 36, 1).Select    ' DIN A4
    'Cells(ActiveCell.Row + 43, 1).Select    ' DIN A3
    'Cells(ActiveCell.Row + 58, 1).Select    ' DIN A3 mit Zusatz-Zeilen
    Cells(ActiveCell.Row + 73, 1).Select    ' DIN A3, Skalierung 64%, mit Zusatz-Zeilen
    ActiveWindow.SelectedSheets.HPageBreaks.Add Before:=ActiveCell
        
End Sub
Sub SpeichernAls()
' Speichert als Arbeitsmappe MIT Makros
    Dim pfd As String, pfdKpl As String, datName As String

Einstieg:

    ' Speicher-Pfad ausw|fffd|hlen
    With Application.FileDialog(msoFileDialogFolderPicker)

        .AllowMultiSelect = False
        .Title = "Auswahl Ablage-Verzeichnis"
        .InitialFileName = ""
        .InitialView = msoFileDialogViewThumbnail
        .ButtonName = "Auswahl abschliessen"
        .Show

        If .SelectedItems.Count > 0 Then

            pfd = .SelectedItems(1)

        End If

        If pfd = "" Then

            With UF_Achtung

                .Caption = "Programmabbruch"
                .Label1.Caption = "Kein Ordner ausgew|fffd|hlt."
                .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
                .Show

            End With
            Exit Sub

        End If

    End With

    ' Pfad anzeigen zur |fffd|berpr|fffd|fung
    With UF_PfadPruef

        .Caption = "Pfad-Auswahl"
        .Label1 = "Nachfolgender Pfad wurde ausgew|fffd|hlt:"
        .Label2 = pfd
        .Label3 = "Ist dieser Pfad korrekt ?"
        .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show

    End With

    ' R|fffd|ckmeldung der |fffd|berpr|fffd|fungs-Abfrage
    If antw = -1 Then GoTo Einstieg

    With UF_Speichern
        
        .Caption = "Dateiname"
        .Label1.Caption = "M|fffd|glichkeit 1:" & vbCrLf & _
                            "  Bitte einen Dateinamen angeben." & vbCrLf & _
                            "M|fffd|glichkeit 2:" & vbCrLf & _
                            "  Den angezeigten Vorschlag in Teilen anpassen" & vbCrLf & _
                            "  und dann |fffd|bernehmen." & vbCrLf & _
                            "M|fffd|glichkeit 3:" & vbCrLf & _
                            "  Den angezeigten Vorschlag ohne |fffd|nderung |fffd|bernehmen."
        .datName_TxtBx = "SPEC-Comment__" & Format(Now, "yyyy-mm-dd_hh-mm")
        .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show
        
        datName = .datName_TxtBx.Text
        
    End With
    
    ' Komplett-Pfad
    pfdKpl = pfd & "\" & datName & ".xlsm"

    ' Speichern als "*.xlsm"-Datei
    ActiveWorkbook.SaveAs Filename:=pfdKpl, FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False

    ' Eintrag bei "Zuletzt verwendet"
    Application.RecentFiles.Add (pfdKpl)

End Sub
Sub infoDialog()
    
    With UF_info
        
        .Caption = "Versionsangabe"
        .Label1.Caption = vbCrLf & vbCrLf & vbTab & ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show
        
    End With
    
End Sub
Sub Durchlauf()
' Gesamtablauf
    Dim pfd As String, datei As String, pfdDat As String
    Dim sp As Variant, i As Integer, zeile As Integer, startZeile As Integer, letzteSp As Integer

    If InStr(ThisWorkbook.Name, ".XLSM") > 0 Or InStr(ThisWorkbook.Name, ".xlsm") > 0 Then
    
        With UF_Achtung
    
            .Caption = "Programmabbruch"
            .Label1.Caption = "Makro darf in dieser Datei nicht gestartet werden."
            .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
            .Show
    
        End With
        Exit Sub
    
    End If
    
    startZeile = 75
    letzteSp = 12
    Sheets("Vorlage").Select

Einstieg:

    pfd = ""
    ' Pfad, in dem die zu |fffd|ffnenden PDF-Dateien liegen ausw|fffd|hlen
    With Application.FileDialog(msoFileDialogFolderPicker)

        .AllowMultiSelect = False
        .Title = "Auswahl Benutzer-Verzeichnis"
        .InitialFileName = ""
        .InitialView = msoFileDialogViewThumbnail
        .ButtonName = "Auswahl abschliessen"
        .Show

        If .SelectedItems.Count > 0 Then

            pfd = .SelectedItems(1)

        End If

        If pfd = "" Then

            With UF_Achtung

                .Caption = "Programmabbruch"
                .Label1.Caption = "Kein Ordner ausgew|fffd|hlt."
                .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
                .Show

            End With
            Exit Sub

        End If

    End With

    ' Pfad anzeigen zur |fffd|berpr|fffd|fung
    With UF_PfadPruef

        .Caption = "Pfad-Auswahl"
        .Label1 = "Nachfolgender Pfad wurde ausgew|fffd|hlt:"
        .Label2 = pfd
        .Label3 = "Ist dieser Pfad korrekt ?"
        .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show

    End With

    ' R|fffd|ckmeldung der |fffd|berpr|fffd|fungs-Abfrage
    If antw = -1 Then GoTo Einstieg

'    ' Dateifilter auf "Alle (*) PDF-Dateien"
'    datei = "*.pdf"
    ' Dateifilter auf "Alle (*) PNG-Dateien"
    datei = "*.png"

    ' Dateinamen-Ermittlung
    pfdDat = Dir(pfd & "\" & datei)
    
    If pfdDat = "" Then
        
        With UF_Achtung
            
            .Caption = "Pfadangabe"
            .Label1.Caption = "Keine geeigneten Dateien im Ordner."
            .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
            .Show
            
        End With
        GoTo Einstieg
        
    End If

    ' Fenster auf Maximalgr|fffd||fffd|e setzen
    Application.WindowState = xlMaximized
    ' Blattschutz aufheben mit Kennwort
    ActiveSheet.Unprotect Password:="logo"
    ' Startzelle ausw|fffd|hlen
    Cells(startZeile, 1).Select
    
    Application.StatusBar = "    > > > Grafiken werden eingef|fffd|gt."

    Do While pfdDat <> ""

        PNG_Einfuegen pfd, pfdDat

        ' N|fffd|chste Datei im Verzeichnis ausw|fffd|hlen
        pfdDat = Dir()

    Loop
    
    Application.StatusBar = "    > > > Formatierung wird durchgef|fffd|hrt."

    ' Feststellung der letzten Zeile des Datensatzes
    zeile = ActiveCell.Row - 1

    ' Ja-Nein verkn|fffd|pfen (1 / 3)
    sp = Application.WorksheetFunction.Match("Akzeptiert*", Rows(1), 0)
    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
    JaNein_festl
    ' Abteilungsliste verkn|fffd|pfen (1 / 2)
    sp = Application.WorksheetFunction.Match("Abteilung", Rows(1), 0)
    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
    AbtKuerzel_festl
'
'    ' Personenliste verkn|fffd|pfen
'    sp = Application.WorksheetFunction.Match("Bearbeitende*Person", Rows(1), 0)
'    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
'    PersInAbt_festl
'
    ' Statusliste verkn|fffd|pfen
    sp = Application.WorksheetFunction.Match("Status", Rows(1), 0)
    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
    Status_festl
    ' Abteilungsliste verkn|fffd|pfen (2 / 2)
    sp = Application.WorksheetFunction.Match("Aktion", Rows(1), 0)
    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
    AbtKuerzel_festl
    ' Ja-Nein verkn|fffd|pfen (2 / 3)
    sp = Application.WorksheetFunction.Match("Leegoo*Pos.*", Rows(1), 0)
    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
    JaNein_festl
    ' Ja-Nein verkn|fffd|pfen (3 / 3)
    sp = Application.WorksheetFunction.Match("Text*f|fffd|r*Auftrag*", Rows(1), 0)
    Range(Cells(startZeile, sp), Cells(zeile, sp)).Select
    JaNein_festl

    ' Rahmenlinien
    Range(Cells(startZeile, 2), Cells(zeile, letzteSp)).Select
    RahmenKpl

    ' "Parkposition" des Markierungsrahmens in Zelle "D11"
    Cells(11, 4).Select
    ' Blattschutz mit Kennwort aktivieren
    ActiveSheet.Protect Password:="logo"
    
    ' Register "Steuerung" ausblenden
    Sheets("Steuerung").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Vorlage").Select
    
    Application.StatusBar = False
    
    If InStr(ThisWorkbook.Name, ".XLSM") > 0 Or InStr(ThisWorkbook.Name, ".xlsm") > 0 Then
    
        ActiveWorkbook.Save
    
    Else
        
        SpeichernAls
        
    End If

    ' Fertig-Meldung bei Makroende
    With UF_DL_Fertig
        
        .Caption = "Fertig"
        .Label1.Caption = "Der Durchlauf ist beendet."
        .Show
        
    End With
    
    Werkzeug_Dialog

End Sub

Attribute VB_Name = "Callback_Liste"
Option Explicit

Sub Werkzeug_Dialog_RBN(ByVal control As IRibbonControl)
    Werkzeug_Dialog
End Sub
Sub infoDialog_RBN(ByVal control As IRibbonControl)
    infoDialog
End Sub

Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Formatierung"
Option Explicit

Public vari As Integer

Sub AbtKuerzel_festl()
' Einstellung f|fffd|r Daten|fffd|berpr|fffd|fung mit Angabe der Liste "_AbtKuerzel"
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Operator:=xlBetween, Formula1:="=_AbtKuerzel"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
End Sub
Sub PersInAbt_festl()
' Einstellung f|fffd|r Daten|fffd|berpr|fffd|fung mit Angabe der Liste "_Personen"
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Operator:=xlBetween, Formula1:="=_Personen"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = False
    End With
End Sub
Sub Status_festl()
' Einstellung f|fffd|r Daten|fffd|berpr|fffd|fung mit Angabe der Liste "_Status"
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Operator:=xlBetween, Formula1:="=_Status"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
End Sub
Sub JaNein_festl()
' Einstellung f|fffd|r Daten|fffd|berpr|fffd|fung mit Angabe der Liste "_JaNein"
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Operator:=xlBetween, Formula1:="=_JaNein"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
End Sub
Sub RahmenKpl()
' Rahmenlinien, komplett
    With Selection
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
    End With
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub
Sub RahmenAussen()
' Rahmenlinien l|fffd|schen und Aussen-Rahmen setzen
    With Selection
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlNone
        .Borders(xlEdgeTop).LineStyle = xlNone
        .Borders(xlEdgeBottom).LineStyle = xlNone
        .Borders(xlEdgeRight).LineStyle = xlNone
        .Borders(xlInsideVertical).LineStyle = xlNone
        .Borders(xlInsideHorizontal).LineStyle = xlNone
    End With
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection
        .Borders(xlInsideVertical).LineStyle = xlNone
        .Borders(xlInsideHorizontal).LineStyle = xlNone
    End With
End Sub
Sub Block_Rahmen()
' Rahmen, aussen einstellen oder Rahmen komplett f|fffd|r alle markierten Zellen

    ' Blattschutz aufheben mit Kennwort
    ActiveSheet.Unprotect Password:="logo"
        
    If vari = 1 Then RahmenAussen
    If vari = 2 Then RahmenKpl
    
    vari = 0
    
    ' Blattschutz mit Kennwort aktivieren
    ActiveSheet.Protect Password:="logo"

End Sub
Sub Werkzeug_Dialog()
    
    With UF_Werkzeug
        
        .Caption = "Werkzeug-Box"
        .Label1.Caption = "Rahmenlinien" & vbCrLf & """Aussen"" setzen"
        .Label2.Caption = "Alle Rahmenlinien" & vbCrLf & "setzen"
        .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show
        
    End With
    
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
    
    ' Wenn innerhalb einer Zelle mit Alt+Return ein Zeilenumbruch erzwungen wird.
    If Target.WrapText = True Then
        
        ' Blattschutz aufheben mit Kennwort
        ActiveSheet.Unprotect Password:="logo"
        
        ' Zeilenumbruch zur|fffd|cksetzen
        Target.WrapText = False
        
        ' Blattschutz mit Kennwort aktivieren
        ActiveSheet.Protect Password:="logo"
        
        With UF_Achtung_gross
            
            .Caption = "Unzul|fffd|ssige Eingabe"
            .Label1.Caption = "Ein Zeilenumbruch ist innerhalb der Zellen nicht erw|fffd|nscht." _
                                & vbCrLf & "N|fffd|tzen Sie bitte eine weitere Zelle der nachfolgenden Zeile." _
                                & vbCrLf & vbCrLf & "Begr|fffd|ndung: Zeilenumbr|fffd|che ver|fffd|ndern die Zeilenh|fffd|he. Dadurch verschieben sich die Eingaben m|fffd|glicher Vorg|fffd|nger nach unten." _
                                & vbCrLf & "Somit wird eine Zuordnung der Kommentare erschwert." _
                                & vbCrLf & vbCrLf & "F|fffd|r die Beachtung vielen Dank."
            .Show
            
        End With
        
    End If
    
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "UF_Achtung"
Attribute VB_Base = "0{18FA2893-8D4C-483C-B430-E029BBE0DF5D}{A8394BA1-2D74-42A7-BF8D-CA5D4C6A8581}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub CommandButton1_Click()

    Unload UF_Achtung

End Sub
Attribute VB_Name = "UF_Achtung_gross"
Attribute VB_Base = "0{CF37DE84-E22E-4626-AD17-5A7989602EEB}{A6787D09-DF36-4483-88AB-487DC07EA409}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit

Private Sub CommandButton1_Click()

    Unload UF_Achtung_gross

End Sub
Attribute VB_Name = "UF_DL_Fertig"
Attribute VB_Base = "0{31F1BA93-FC9D-41C9-B2FF-DE507C221942}{971919C4-4093-4A16-AC71-E4F6FCA46A3F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub CommandButton1_Click()

    Unload UF_DL_Fertig

End Sub
Attribute VB_Name = "UF_FrgZ_Mann_JaAbbrech"
Attribute VB_Base = "0{7FDB7C8B-E342-4738-B20F-9902C21C25A7}{B5542E02-A610-4C88-8092-E7D22A7FB259}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub CommandButton1_Click()
    
    Unload UF_FrgZ_Mann_JaAbbrech
    Block_Rahmen
    
End Sub

Private Sub CommandButton2_Click()
    
    Unload UF_FrgZ_Mann_JaAbbrech

End Sub
Attribute VB_Name = "UF_PfadPruef"
Attribute VB_Base = "0{2A503A62-D9B4-4F72-B2B8-F5C655B7BD84}{7F05F9DE-596A-4A0E-97C3-4CFEF8A6223A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub ja_Button_Click()
    
    antw = 1
    Unload UF_PfadPruef
    
End Sub

Private Sub nein_Button_Click()
    
    antw = -1
    Unload UF_PfadPruef

End Sub
Attribute VB_Name = "UF_Speichern"
Attribute VB_Base = "0{EF90AAEC-3026-4F98-8859-73B66B2A72D2}{6A4884D9-A3F9-4B98-BF51-B7C28F289E76}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()

    Unload UF_Speichern

End Sub
Attribute VB_Name = "UF_Werkzeug"
Attribute VB_Base = "0{4DC44990-23C4-43A8-A317-8F1CB65B927F}{DA46834B-1D32-401E-A1FC-5DC132155EDC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
' Schalter "Rahmen, Aussen"

    vari = 1
    
    With UF_FrgZ_Mann_JaAbbrech
        
        .Caption = vbCrLf & "Zellenmarkierung"
        .Label1 = "Wurde der erforderliche Zellbereich markiert ?" & _
                    vbCrLf & "Falls nicht, jetzt Zellbereich markieren."
        .CommandButton1.ForeColor = RGB(0, 150, 64)
        .CommandButton2.ForeColor = RGB(229, 39, 19)
        .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show
        
    End With
    
End Sub

Private Sub CommandButton2_Click()
' Schalter "Rahmen, komplett"

    vari = 2
    
    With UF_FrgZ_Mann_JaAbbrech
        
        .Caption = vbCrLf & "Zellenmarkierung"
        .Label1 = "Wurde der erforderliche Zellbereich markiert ?" & _
                    vbCrLf & "Falls nicht, jetzt Zellbereich markieren."
        .CommandButton1.ForeColor = RGB(0, 150, 64)
        .CommandButton2.ForeColor = RGB(229, 39, 19)
        .index_Label.Caption = ActiveWorkbook.BuiltinDocumentProperties(5)
        .Show
        
    End With

End Sub
Attribute VB_Name = "UF_info"
Attribute VB_Base = "0{47065005-D7C3-4C34-B489-C6551E6313C3}{E6A9A24B-A314-4510-8922-40B210804F49}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()

    Unload UF_info

End Sub


INQUEST-PP=macro
