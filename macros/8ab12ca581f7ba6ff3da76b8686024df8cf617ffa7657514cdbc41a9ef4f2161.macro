Attribute VB_Name = "Module1"
Sub Import_EES_Sheet()
'
' Setup sheets variables
'
    Dim copySheet As Worksheet
    Dim pasteSheet As Worksheet
    Dim copyBook As Workbook
    Dim pasteBook As Workbook
    
    Dim Start As String
    Dim Conversion As String
    Dim copyName As String
    Dim filter As String
    Dim caption As String
    
    Dim Answer_Keep_All As Integer
    Dim Answer_Keep As Integer
    Dim Answer_Group As Integer
    Dim i As Integer
'
' Active workbook is the target
'
    Set pasteBook = Application.ActiveWorkbook
'
' Get the Supply Bid Analysis workbook
'
    filter = "Excel files (*.xls),*.xls,Excel Files (*.xlsx),*.xlsx"
    caption = "Select an EES estimate"
    copyName = Application.GetOpenFilename(filter, , caption)

    If copyName = vbNullString Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    ElseIf copyName = "False" Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    Else
        Set copyBook = Application.Workbooks.Open(copyName)
    End If
'
' Copy data from Supply workbook to target workbook
'
    Application.ScreenUpdating = False
    Set pasteSheet = pasteBook.Worksheets("Line Items")
    Set copySheet = copyBook.Worksheets(1)
    
    Call copySheet.Activate
'
' Go to "Contract Work" (beginning of group)
'
    copySheet.Cells.Find("CONTRACT WORK").Select
'
' Shift active cell to description of first item
'
    ActiveCell.Offset(1, 2).Select
'
' Ask to keep all "Comments"
'
    Answer_Keep_All = MsgBox("Do you want to keep all comments?", vbYesNo + vbQuestion, "Keep All Comments?")
'
' Set i = 1 to start line item count
'
    i = 1
'
' Keep going down till we hit a blank cell (end of "Contract Work" group)
'
    Do Until ActiveCell.Value = ""
        '
        ' Copy "Description" from Supply workbook active row
        '
            ActiveCell.Select
            Selection.Copy
        '
        ' Paste "Description" to Line Items sheet
        '
            pasteSheet.Cells(Rows.Count, "F").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Returns to Supply workbook and copy "QTY" from active row
        '
            copySheet.Range("D" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Paste "QTY" to Line Items sheet.
        '
            pasteSheet.Cells(Rows.Count, "G").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Return to Supply workbook and copy "UOM" from active row
        '
            copySheet.Range("E" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Converts UOM to format accepted by supply
        '
            Select Case Selection
                Case Is = "%"
                    Conversion = "%"
                Case Is = "AC"
                    Conversion = "Acre"
                Case Is = "CY"
                    Conversion = "Cubic Yard"
                Case Is = "DA"
                    Conversion = "Days"
                Case Is = "EA"
                    Conversion = "each"
                Case Is = "GA"
                    Conversion = "GA"
                Case Is = "HR"
                    Conversion = "Hours"
                Case Is = "LF"
                    Conversion = "LF"
                Case Is = "LS"
                    Conversion = "Lump Sum"
                Case Is = "MO"
                    Conversion = "Months"
                Case Is = "SY"
                    Conversion = "Squar. Yard"
                Case Is = "SF"
                    Conversion = "Square ft"
                Case Is = "TF"
                    Conversion = "Track Foot"
                Case Is = "TN"
                    Conversion = "US ton"
                Case Else
                    Conversion = "N/A"
            End Select
        '
        ' Paste "UOM" to Line Items sheet
        '
            pasteSheet.Cells(Rows.Count, "H").End(xlUp).Offset(1, 0).Value = Conversion
        '
        ' Add Line Item Number
        '
            Dim LINumber As String
            LINumber = 0 + i
            pasteSheet.Cells(Rows.Count, "A").End(xlUp).Offset(1, 0).Value = LINumber
        '
        ' Add Item Type
        '
            pasteSheet.Cells(Rows.Count, "C").End(xlUp).Offset(1, 0).Value = "Service"
        '
        ' Add Price Unit
        '
            pasteSheet.Cells(Rows.Count, "AH").End(xlUp).Offset(1, 0).Value = 1
        '
        ' Keeps all "Comments" if desired in initial question box
        '
            If Answer_Keep_All = vbNo Then
            '
            ' do nothing (discards all "Comments" for that item); offset necessary to reposition Active Cell for continuation of loop
            '
            copySheet.Activate
            ActiveCell.Offset(0, -4).Select
            Else
            '
            ' Copies all "Comments" to "Long Description"
            '
                Sheets(1).Select
                copySheet.Range("A" & (ActiveCell.Row)).Select
                Selection.Copy
            '
            ' Pastes all "Comments" to "Long Description"
            '
                pasteSheet.Cells(13 + i, 85).PasteSpecial xlPasteValues
            End If
            
            copySheet.Activate
            ActiveCell.Offset(0, 2).Select
        '
        ' Increase count for next line item and move to next line
        '
            ActiveCell.Offset(1, 0).Select
            i = i + 1
        '
        ' Re-iterate loop until blank cell is reached
        '
    Loop
'
' Return to Line Items sheet and close Supply workbook
'
    Call pasteSheet.Activate
    copyBook.Close
    Application.ScreenUpdating = True
'
' Display completion of import; display message varies based on preservation of comments
'
    If Answer_Keep_All = vbNo Then
        MsgBox "Import Complete. No comments kept."
    Else
        MsgBox "Import Complete. ALL COMMENTS KEPT. REVIEW FOR COMPLETENESS."
    End If

End Sub
Attribute VB_Name = "Module2"
Sub Import_EES_With_Groups()
'
' Setup sheets variables
'
    Dim copySheet As Worksheet
    Dim pasteSheet As Worksheet
    Dim copyBook As Workbook
    Dim pasteBook As Workbook
    
    Dim Start As String
    Dim Conversion As String
    Dim copyName As String
    Dim filter As String
    Dim caption As String
    
    Dim Answer_Keep_All As Integer
    Dim Answer_Keep As Integer
    Dim Answer_Group As Integer
    Dim i As Integer
'
' Active workbook is the target
'
    Set pasteBook = Application.ActiveWorkbook
'
' Get the Supply Bid Analysis workbook
'
    filter = "Excel files (*.xls),*.xls,Excel Files (*.xlsx),*.xlsx"
    caption = "Select an EES estimate"
    copyName = Application.GetOpenFilename(filter, , caption)

    If copyName = vbNullString Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    ElseIf copyName = "False" Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    Else
        Set copyBook = Application.Workbooks.Open(copyName)
    End If
'
' Copy data from Supply workbook to target workbook
'
    Application.ScreenUpdating = False
    Set pasteSheet = pasteBook.Worksheets("Line Items")
    Set copySheet = copyBook.Worksheets(1)
    
    Call copySheet.Activate
'
' Go to "Contract Work" (beginning of group)
'
    copySheet.Cells.Find("CONTRACT WORK").Select
'
' Shift active cell to description of first item
'
    ActiveCell.Offset(1, 3).Select
'
' Ask to keep all "Comments"
'
    Answer_Keep_All = MsgBox("Do you want to keep all comments?", vbYesNo + vbQuestion, "Keep All Comments?")
'
' Set i = 1 to start line item count
'
    i = 1
'
' Keep going down till we hit a blank cell (end of "Contract Work" group)
'
    Do Until ActiveCell.Value = ""
        '
        ' Copy "Description" from Supply workbook active row
        '
            ActiveCell.Select
            Selection.Copy
        '
        ' Paste "Description" to Line Items sheet
        '
            pasteSheet.Cells(Rows.Count, "F").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Returns to Supply workbook and copy "Group" from active row
        '
            copySheet.Range("B" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Paste "Group" to Line Items sheet.
        '
            pasteSheet.Cells(Rows.Count, "B").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Returns to Supply workbook and copy "QTY" from active row
        '
            copySheet.Range("E" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Paste "QTY" to Line Items sheet.
        '
            pasteSheet.Cells(Rows.Count, "G").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Return to Supply workbook and copy "UOM" from active row
        '
            copySheet.Range("F" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Converts UOM to format accepted by supply
        '
            Select Case Selection
                Case Is = "%"
                    Conversion = "%"
                Case Is = "AC"
                    Conversion = "Acre"
                Case Is = "CY"
                    Conversion = "Cubic Yard"
                Case Is = "DA"
                    Conversion = "Days"
                Case Is = "EA"
                    Conversion = "each"
                Case Is = "GA"
                    Conversion = "GA"
                Case Is = "HR"
                    Conversion = "Hours"
                Case Is = "LF"
                    Conversion = "LF"
                Case Is = "LS"
                    Conversion = "Lump Sum"
                Case Is = "MO"
                    Conversion = "Months"
                Case Is = "SY"
                    Conversion = "Squar. Yard"
                Case Is = "SF"
                    Conversion = "Square ft"
                Case Is = "TF"
                    Conversion = "Track Foot"
                Case Is = "TN"
                    Conversion = "US ton"
                Case Else
                    Conversion = "N/A"
            End Select
        '
        ' Paste "UOM" to Line Items sheet
        '
            pasteSheet.Cells(Rows.Count, "H").End(xlUp).Offset(1, 0).Value = Conversion
        '
        ' Add Line Item Number
        '
            Dim LINumber As String
            LINumber = 0 + i
            pasteSheet.Cells(Rows.Count, "A").End(xlUp).Offset(1, 0).Value = LINumber
        '
        ' Add Item Type
        '
            pasteSheet.Cells(Rows.Count, "C").End(xlUp).Offset(1, 0).Value = "Service"
        '
        ' Add Price Unit
        '
            pasteSheet.Cells(Rows.Count, "AH").End(xlUp).Offset(1, 0).Value = 1
        '
        ' Keeps all "Comments" if desired in initial question box
        '
             If Answer_Keep_All = vbNo Then
            '
            ' do nothing (discards all "Comments" for that item); offset necessary to reposition Active Cell for continuation of loop
            '
            copySheet.Activate
            ActiveCell.Offset(0, -5).Select
            Else
            '
            ' Copies all "Comments" to "Long Description"
            '
                Sheets(1).Select
                copySheet.Range("A" & (ActiveCell.Row)).Select
                Selection.Copy
            '
            ' Pastes all "Comments" to "Long Description"
            '
                pasteSheet.Cells(13 + i, 85).PasteSpecial xlPasteValues
            End If
            
            copySheet.Activate
            ActiveCell.Offset(0, 3).Select
        '
        ' Increase count for next line item and move to next line
        '
            ActiveCell.Offset(1, 0).Select
            i = i + 1
        '
        ' Re-iterate loop until blank cell is reached
        '
    Loop
'
' Return to Line Items sheet and close Supply workbook
'
    Call pasteSheet.Activate
    copyBook.Close
    Application.ScreenUpdating = True
'
' Display completion of import; display message varies based on preservation of comments
'
    If Answer_Keep_All = vbNo Then
        MsgBox "Import Complete. No comments kept."
    Else
        MsgBox "Import Complete. ALL COMMENTS KEPT. REVIEW FOR COMPLETENESS."
    End If

End Sub
Sub Click_To_Keep_Comments()

'
' Setup sheets variables
'
    
    Dim copySheet As Worksheet
    Dim pasteSheet As Worksheet
    Dim copyBook As Workbook
    Dim pasteBook As Workbook
    
    Dim Start As String
    Dim Conversion As String
    Dim copyName As String
    Dim filter As String
    Dim caption As String
    
    Dim Rng As Range
    Dim myArray As Variant
'
'Active workbook is the target
'
    Set pasteBook = Application.ActiveWorkbook
'
'Get the Supply Bid Analysis workbook
'
    filter = "Excel files (*.xls),*.xls,Excel Files (*.xlsx),*.xlsx"
    caption = "Select an EES estimate"
    copyName = Application.GetOpenFilename(filter, , caption)

    If copyName = vbNullString Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    ElseIf copyName = "False" Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    Else
        Set copyBook = Application.Workbooks.Open(copyName)
    End If
'
'Copy data from Supply workbook to target workbook; "For" loop represents collection of line items
'
    Application.ScreenUpdating = False
    Set pasteSheet = pasteBook.Worksheets("Line Items")
    Set copySheet = copyBook.Worksheets(1)
    

    copySheet.Select
    Application.ScreenUpdating = True
'
' Select "Comments" to keep; enters them into an array
'
    Set Rng = Application.InputBox(prompt:="Choose comments to keep (Ctrl-click for multiple)", Type:=8)
    If Not Rng Is Nothing Then
        myArray = Rng
    End If
    
    Call pasteSheet.Activate
    MsgBox Rng.Address

End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub CommandButton1_Click()
'
' Setup sheets variables
'
    Dim copySheet As Worksheet
    Dim pasteSheet As Worksheet
    Dim copyBook As Workbook
    Dim pasteBook As Workbook
    
    Dim Start As String
    Dim Conversion As String
    Dim copyName As String
    Dim filter As String
    Dim caption As String
    
    Dim Answer_Keep_All As Integer
    Dim Answer_Keep As Integer
    Dim Answer_Group As Integer
    Dim i As Integer
'
' Active workbook is the target
'
    Application.ScreenUpdating = False
    Set pasteBook = Application.ActiveWorkbook
'
' Get the Supply Bid Analysis workbook
'
    filter = "Excel files (*.xls),*.xls,Excel Files (*.xlsx),*.xlsx"
    caption = "Select an EES estimate"
    copyName = Application.GetOpenFilename(filter, , caption)

    If copyName = vbNullString Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    ElseIf copyName = "False" Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    Else
        Set copyBook = Application.Workbooks.Open(copyName)
    End If
'
' Copy data from Supply workbook to target workbook
'
    Set pasteSheet = pasteBook.Worksheets("Line Items")
    Set copySheet = copyBook.Worksheets(1)
    
    Call copySheet.Activate
'
' Go to "Contract Work" (beginning of group)
'
    copySheet.Cells.Find("CONTRACT WORK").Select
'
' Shift active cell to description of first item
'
    ActiveCell.Offset(1, 2).Select
'
' Ask to keep all "Comments"
'
    Answer_Keep_All = MsgBox("Do you want to keep all comments?", vbYesNo + vbQuestion, "Keep All Comments?")
'
' Set i = 1 to start line item count
'
    i = 1
'
' Keep going down till we hit a blank cell (end of "Contract Work" group)
'
    Do Until ActiveCell.Value = ""
        '
        ' Copy "Description" from Supply workbook active row
        '
            ActiveCell.Select
            Selection.Copy
        '
        ' Paste "Description" to Line Items sheet
        '
            pasteSheet.Cells(Rows.Count, "F").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Returns to Supply workbook and copy "QTY" from active row
        '
            copySheet.Range("D" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Paste "QTY" to Line Items sheet.
        '
            pasteSheet.Cells(Rows.Count, "G").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
        '
        ' Return to Supply workbook and copy "UOM" from active row
        '
            Sheets(1).Select
            copySheet.Range("E" & (ActiveCell.Row)).Select
            Selection.Copy
        '
        ' Converts UOM to format accepted by supply
        '
            Select Case Selection
                Case Is = "%"
                    Conversion = "%"
                Case Is = "AC"
                    Conversion = "Acre"
                Case Is = "CY"
                    Conversion = "Cubic Yard"
                Case Is = "DA"
                    Conversion = "Days"
                Case Is = "EA"
                    Conversion = "each"
                Case Is = "GA"
                    Conversion = "GA"
                Case Is = "HR"
                    Conversion = "Hours"
                Case Is = "LF"
                    Conversion = "LF"
                Case Is = "LS"
                    Conversion = "Lump Sum"
                Case Is = "MO"
                    Conversion = "Months"
                Case Is = "SY"
                    Conversion = "Squar. Yard"
                Case Is = "SF"
                    Conversion = "Square ft"
                Case Is = "TF"
                    Conversion = "Track Foot"
                Case Is = "TN"
                    Conversion = "US ton"
                Case Else
                    Conversion = "N/A"
            End Select
        '
        ' Paste "UOM" to Line Items sheet
        '
            pasteSheet.Cells(Rows.Count, "H").End(xlUp).Offset(1, 0).Value = Conversion
        '
        ' Add Line Item Number
        '
            Dim LINumber As String
            LINumber = 0 + i
            pasteSheet.Cells(Rows.Count, "A").End(xlUp).Offset(1, 0).Value = LINumber
        '
        ' Add Item Type
        '
            pasteSheet.Cells(Rows.Count, "C").End(xlUp).Offset(1, 0).Value = "Service"
        '
        ' Add Price Unit
        '
            pasteSheet.Cells(Rows.Count, "AH").End(xlUp).Offset(1, 0).Value = 1
        '
        ' Keeps all "Comments" if desired in initial question box
        '
            If Answer_Keep_All = vbNo Then
            '
            ' Ask to copy "Comments" to "Long Description" or "Group"
            '
            Answer_Keep = MsgBox("Do you want to keep the comments for this item?", vbYesNo + vbQuestion, "Keep Comments?")
                If Answer_Keep = vbYes Then
                    '
                    ' Copy "Comments" from Supply workbook active row
                    '
                    Sheets("Test LI").Select
                    copySheet.Range("A" & (ActiveCell.Row)).Select
                    Selection.Copy
                    '
                    ' Ask to keep "Comments" as the item's group
                    '
                    Answer_Group = MsgBox("Is this comment the item's group?", vbYesNo + vbQuestion, "Item's Group?")
                        If Answer_Group = vbYes Then
                        '
                        ' Paste "Comments" to Line Items sheet as "Group"
                        '
                            pasteSheet.Cells(13 + i, 2).PasteSpecial xlPasteValues
                        Else
                        '
                        ' Paste "Comments" to Line Items sheet as "Long Description"
                        '
                            pasteSheet.Cells(13 + i, 85).PasteSpecial xlPasteValues
                        End If
                Else
                '
                ' do nothing (discards "Comments" for that item)
                '
                End If
            Else
            '
            ' Copies all "Comments" to "Long Description"
            '
                Sheets(1).Select
                copySheet.Range("A" & (ActiveCell.Row)).Select
                Selection.Copy
            '
            ' Pastes all "Comments" to "Long Description"
            '
                pasteSheet.Cells(13 + i, 85).PasteSpecial xlPasteValues
            End If
            
            copySheet.Activate
            ActiveCell.Offset(0, 2).Select
        '
        ' Increase count for next line item and move to next line
        '
            ActiveCell.Offset(1, 0).Select
            i = i + 1
        '
        ' Re-iterate loop until blank cell is reached
        '
    Loop
'
' Return to Line Items sheet
'
    Call pasteSheet.Activate
    Application.ScreenUpdating = True
'
' Display completion of import
'
    MsgBox "Import Complete"

End Sub

Private Sub CommandButton2_Click()

'
' Setup sheets variables
'
    
    Dim copySheet As Worksheet
    Dim pasteSheet As Worksheet
    Dim copyBook As Workbook
    Dim pasteBook As Workbook
    
    Dim Start As String
    Dim Conversion As String
    Dim copyName As String
    Dim filter As String
    Dim caption As String
    Dim Rng As Range
'
'Active workbook is the target
'
    Application.ScreenUpdating = False
    Set pasteBook = Application.ActiveWorkbook
'
'Get the Supply Bid Analysis workbook
'
    filter = "Excel files (*.xls),*.xls,Excel Files (*.xlsx),*.xlsx"
    caption = "Select an EES estimate"
    copyName = Application.GetOpenFilename(filter, , caption)

    If copyName = vbNullString Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    ElseIf copyName = "False" Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    Else
        Set copyBook = Application.Workbooks.Open(copyName)
    End If
'
'Copy data from Supply workbook to target workbook; "For" loop represents collection of line items
'
    Set pasteSheet = pasteBook.Worksheets("Line Items")
    Set copySheet = copyBook.Worksheets(1)
    

    copySheet.Select
    Application.ScreenUpdating = True
    Set Rng = Application.InputBox(prompt:="Choose comments to keep (Ctrl-click for multiple)", Type:=8)
    Call pasteSheet.Activate
    MsgBox Rng.Address

End Sub

Private Sub CommandButton3_Click()

Dim copySheet As Worksheet
Dim pasteSheet As Worksheet
Dim copyBook As Workbook
Dim pasteBook As Workbook

Dim Start As String
Dim Conversion As String
Dim copyName As String
Dim filter As String
Dim caption As String
    
Set pasteBook = Application.ActiveWorkbook
 filter = "Excel files (*.xls),*.xls,Excel Files (*.xlsx),*.xlsx"
    caption = "Select an EES estimate"
    copyName = Application.GetOpenFilename(filter, , caption)

    If copyName = vbNullString Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    ElseIf copyName = "False" Then
        MsgBox ("No File Selected. Process cancelled")
        Exit Sub
    Else
        Set copyBook = Application.Workbooks.Open(copyName)
    End If

'
'Copy data from Supply workbook to target workbook; "For" loop represents collection of line items
'
    Set pasteSheet = pasteBook.Worksheets("Line Items")
    Set copySheet = copyBook.Worksheets(1)
    'go to "Contract Work" (top of list)
    copySheet.Cells.Find("CONTRACT WORK").Select
    ' shift active cell to description of first item
    ActiveCell.Offset(1, 2).Select
    'keep going down till we hit a blank cell
    Do Until ActiveCell.Value = ""
    'if this has rating above 5 in column D ...
        If ActiveCell.Offset(0, -1).Value > 5 Then
            '... colour entire row
           copySheet.Range(ActiveCell.End(xlToLeft), ActiveCell.End(xlToRight)).Interior.ColorIndex = 20
        End If
        'go onto next row
    ActiveCell.Offset(1, 0).Select
    Loop
    'show finished!
    Call pasteSheet.Activate
MsgBox "All done!"


End Sub
Private Sub CommandButton4_Click()
'UpdatebyExtendoffice20161222
      Dim x As Integer
      Application.ScreenUpdating = False
      ' Set j = number of rows of data.
      x = 15
      j = Range("B15", Range("B15").End(xlDown)).Rows.Count
      ' Select cell a1.
      Range("B15").Select
      ' Establish "For" loop to loop "numrows" number of times.
      Do Until x = j
         ' Insert your code here.
         Cells(x, 3).Value = Cells(x, 2).Value
         ' Selects cell down 1 row from active cell.
         ActiveCell.Offset(1, 0).Select
      Loop
      Application.ScreenUpdating = True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
