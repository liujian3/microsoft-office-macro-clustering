Attribute VB_Name = "Formular"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Dim sem As Integer



Public Sub btnKontrola_Click()
Dim aMsg As String
  ''ActiveSheet.Shapes(Application.Caller).Name = "btnKontrolaN"
  aMsg = ""
  
  sem = 1
  If Kontrola(aMsg) Then
    ''btnGeneruj.Visible = True
    Shapes("btnGenerujN").Visible = True
    ''btnKontrola.Visible = False
    Shapes("btnKontrolaN").Visible = False
  End If
  sem = 0

End Sub

Public Sub btnNewRows_Click()
  ''ActiveSheet.Shapes(Application.Caller).Name = "btnNewRowsN"
  sem = 1
  
  InsertNewRows

  sem = 0
End Sub

Public Sub btnGeneruj_Click()
  ''ActiveSheet.Shapes(Application.Caller).Name = "btnGenerujN"
  UlozVystup
End Sub

Public Sub chAbsencia_Click()
Dim cell As Range
  ''ActiveSheet.Shapes(Application.Caller).Name = "chAbsenciaN"
  ''If ThisWorkbook.ActiveSheet.chAbsencia.Value = False Then
  If Range("Absencia_Value").Value = False Then
    For Each cell In Range("SUKL").Cells
      If cell.Value <> "" Then
          If Range("Ref_Price").Cells(cell.Row - Range("Ref_Price").Cells(1).Row + 1) = "" Then
            MsgBox "Pozor, pre ZP so |fffd||fffd|KL k|fffd|dom  " & GetSUKL(cell.Value) & "  je nedostato?n|fffd| po?et zadan|fffd|ch referen?n|fffd|ch cien!", vbCritical, "Chyba"
            cell.Select
            ''btnGeneruj.Visible = False
            Shapes("btnGenerujN").Visible = False
            ''btnKontrola.Visible = True
            Shapes("btnKontrolaN").Visible = True
            Exit Sub
          End If
      End If
    Next
  End If

End Sub



Private Sub Worksheet_Change(ByVal Target As Range)
Dim aHodn As Double
Dim r As Long
Dim c As Long
  
  If sem = 1 Then
    Exit Sub
  End If
  
  ''btnGeneruj.Visible = False
  Shapes("btnGenerujN").Visible = False
  ''btnKontrola.Visible = True
  Shapes("btnKontrolaN").Visible = True

  sem = 1
  Protect passw, False, False, False
  Range(Cells(Target.Rows(1).Row, Target.Columns(1).Column), Cells(Target.Rows(Target.Rows.Count).Row, Target.Columns(Target.Columns.Count).Column)).Locked = False
  Protect passw, True, True, True
  sem = 0


  For r = 1 To Target.Rows.Count
    For c = 1 To Target.Columns.Count
      
      'ak ch|fffd|ba |fffd||fffd|KL k|fffd|d
      If Not (Intersect(Target, Range("Tabulka_Formatted_Area")) Is Nothing) Then
        If Cells(Target.Rows(r).Row, Target.Columns(c).Column).Text <> "" And _
           Range("SUKL").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = "" Then
           
            MsgBox "Pozor, |fffd||fffd|KL k|fffd|d upravovanom riadku nie je vyplnen|fffd|!", vbExclamation, "Upozornenie"
            Range("SUKL").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1).Select
            
            'Exit For
        End If
      End If
      
      'zmena SUKL
      If Not (Intersect(Target, Range("SUKL")) Is Nothing) Then
        sem = 1
        Protect passw, False, False, False
        
          If Cells(Target.Rows(r).Row, Target.Columns(c).Column) <> "" Then
            
            'If IsNumeric(Cells(Target.Rows(r).Row, Target.Columns(c).Column)) Then
            If TestSUKL(Cells(Target.Rows(r).Row, Target.Columns(c).Column)) Then
              
              Cells(Target.Rows(r).Row, Target.Columns(c).Column) = GetSUKL(Cells(Target.Rows(r).Row, Target.Columns(c).Column))
              
              'vypocet referencnej ceny
              aHodn = Application.WorksheetFunction.Round(GetAvgPrice(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1, Range("Absencia_Value").Value), 2)
                
              If aHodn > 0 Then
                Range("Ref_Price").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = aHodn
              Else
                Range("Ref_Price").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = ""
              End If
            
            Else
              
              Range("Ref_Price").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = ""
              
              MsgBox "Pozor, |fffd||fffd|KL k|fffd|d ZP je zle zadan|fffd|! Spr|fffd|vny form|fffd|t k|fffd|du je ""X00000"", kde X reprezentuje p|fffd|smeno a 00000 reprezentuje 5-miestny alfanumerick|fffd| k|fffd|d (p|fffd|smen|fffd| A-Z alebo ?|fffd|slice 0-9).", vbExclamation, "Upozornenie"
              Range("SUKL").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1).Select
            
            End If
          
          Else
            Range("Ref_Price").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = ""
          End If
          
        
        Protect passw, True, True, True
        sem = 0
      End If
      
      
      
     
      'zmena EU cien
      If Not (Intersect(Target, Range("EU_ALL")) Is Nothing) Then
        sem = 1
        Protect passw, False, False, False
        
          If Cells(Target.Rows(r).Row, Target.Columns(c).Column) <> "" Then
            If IsNumeric(Cells(Target.Rows(r).Row, Target.Columns(c).Column)) Then
              Cells(Target.Rows(r).Row, Target.Columns(c).Column) = Application.WorksheetFunction.Round(Cells(Target.Rows(r).Row, Target.Columns(c).Column), 2)
            End If
          End If
          
          'vypocet referencnej ceny
          aHodn = Application.WorksheetFunction.Round(GetAvgPrice(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1, Range("Absencia_Value").Value), 2)
          If aHodn > 0 Then
            Range("Ref_Price").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = aHodn
          Else
            Range("Ref_Price").Cells(Target.Rows(r).Row - Range("SUKL").Cells(1).Row + 1) = ""
          End If
        
        Protect passw, True, True, True
        sem = 0
      End If
      
    Next c
  Next r
  
  

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub


Attribute VB_Name = "Pomoc"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
  If Formular.Range("Datum").Value = "" Then
    Formular.Range("Datum").Value = Date
  End If
'  FilePathDefault = ""
  KontrolaPlatnosti
End Sub




Attribute VB_Name = "modBack"
Option Explicit

'Const MinPrice = 2
Public Const PocNewRow = 10
Public Const pocEU = 27
Const AvgPoc = 3

Public Const passw = "_C0sM0s*"

Public Const StartMonth = 10
Public Const StartYear = 2018

Public Const ActualMonth = 12
Public Const ActualYear = 2018

Public Sub InsertNewRows()
Dim c As Long
Dim i As Integer
Dim j As Integer
Dim area1 As Range
Dim rngSource As Range
Dim rng2 As Range
Dim rng3 As Range
  
  'c = Range("Blank").End(xlToRight).Column - 1
  c = Range("RightBlank").Column - 1
  ThisWorkbook.ActiveSheet.Protect passw, False, False, False
  
  
  'vloz riadky
  Range(Cells(Range("Blank").Row, 1), Cells(Range("Blank").Row + PocNewRow - 1, c + 1)).Insert Shift:=xlShiftDown, CopyOrigin:=xlFormatFromLeftOrAbove

  'format riadkov
  Range(Cells(Range("Blank").Row - PocNewRow - 1, 1), Cells(Range("Blank").Row - 1, c)).Borders(xlBottom).LineStyle = xlContinuous
  Range(Cells(Range("Blank").Row - PocNewRow - 1, 1), Cells(Range("Blank").Row - 1, c)).Borders(xlBottom).Weight = xlThin
  Range(Cells(Range("Blank").Row - PocNewRow - 1, 1), Cells(Range("Blank").Row - 1, c)).Borders(xlBottom).ColorIndex = Range(Cells(Range("Blank").Row - PocNewRow - 2, 1), Cells(Range("Blank").Row - 1, c)).Borders(xlBottom).ColorIndex

  For i = 1 To c + 1
    With Range(Cells(Range("Blank").Row - PocNewRow, i), Cells(Range("Blank").Row - 1, i))

      .Borders(xlLeft).LineStyle = Range(Cells(Range("Blank").Row - PocNewRow - 1, i), Cells(Range("Blank").Row - PocNewRow - 1, i)).Borders(xlLeft).LineStyle
      .Borders(xlLeft).Weight = Range(Cells(Range("Blank").Row - PocNewRow - 1, i), Cells(Range("Blank").Row - PocNewRow - 1, i)).Borders(xlLeft).Weight
      .Borders(xlLeft).ColorIndex = Range(Cells(Range("Blank").Row - PocNewRow - 1, i), Cells(Range("Blank").Row - PocNewRow - 1, i)).Borders(xlLeft).ColorIndex
      

    End With
  Next i
  
  'copy formulas EU_EUR
  For Each area1 In Range("EU_EUR_ALL").Areas
    Set rngSource = Range(Cells(Range("Blank").Row - PocNewRow - 1, area1.Column), Cells(Range("Blank").Row - PocNewRow - 1, area1.Column))
    rngSource.Copy Destination:=Range(rngSource.Offset(1), rngSource.Offset(PocNewRow))
  Next

  'copy formula Ref_Price_Num
  Set rngSource = Cells(Range("Blank").Row - PocNewRow - 1, Range("Ref_Price_Num").Column)
  rngSource.Copy Destination:=Range(rngSource.Offset(1), rngSource.Offset(PocNewRow))
  
  Dim a As Integer
  a = rngSource.Row - Range("Table_Head").Row
  
  For i = a + 1 To a + PocNewRow
    Set rng2 = rngSource.Offset(i - a)
    
    rng2.Formula = Replace(rng2.Formula, "EU_EUR_" & a, "EU_EUR_" & i)
    
    'define new named range EU_EUR_poradie
    Set rng3 = Nothing
    For Each area1 In Range("EU_EUR_ALL").Areas
      If rng3 Is Nothing Then
        Set rng3 = Range(area1.Areas(1).Cells(i), area1.Areas(1).Cells(i))
      End If
      Set rng3 = Union(rng3, Range(area1.Areas(1).Cells(i), area1.Areas(1).Cells(i)))
    Next
    
    Names.Add Name:="EU_EUR_" & i, RefersTo:=rng3, Visible:=True
  Next i
  
  ThisWorkbook.ActiveSheet.Protect passw, True, True, True


End Sub


Public Function Kontrola(ByRef aMsg As String) As Boolean

  Kontrola = False

  aMsg = ""
  
  FormatHead
  
  FormatTable

  If PovinneH_test Then
    If Spravnost_test(aMsg) Then
      MsgBox "Kontrola |fffd|dajov prebehla |fffd|spe|fffd|ne.", vbOKOnly + vbInformation, "Inform|fffd|cia"
      Kontrola = True
    Else
      'msg v ramci testu
      MsgBox aMsg, vbExclamation, "Upozornenie"
    End If

  Else
    MsgBox "Treba vyplni? v|fffd|etky ?ervenou ozna?en|fffd| pol|fffd|?ka pre |fffd|iadate?a!", vbExclamation, "Upozornenie"
  End If

End Function

Private Sub FormatHead()
  ThisWorkbook.ActiveSheet.Protect passw, False, False, False
  
  Range("DRZ_Format").Select
  Selection.Copy
  ActiveWindow.SmallScroll Down:=-18
  Range("DRZ").Select
  Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Application.CutCopyMode = False
  
  

  Range("ZAS_Format").Select
  Selection.Copy
  ActiveWindow.SmallScroll Down:=-18
  Range("ZAS").Select
  Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Application.CutCopyMode = False
  

  Range("Kontakt_Format").Select
  Selection.Copy
  ActiveWindow.SmallScroll Down:=-18
  Range("Kontakt").Select
  Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Application.CutCopyMode = False
  
  
  ThisWorkbook.ActiveSheet.Protect passw, True, True, True
End Sub

Private Sub FormatTable()

  ThisWorkbook.ActiveSheet.Protect passw, False, False, False
  
  Range("Formatted_Row").Select
  Selection.Copy
  ActiveWindow.SmallScroll Down:=-18
  Range("Tabulka_formatted_Area").Select
  Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Application.CutCopyMode = False

  
  Range("Ref_Price").Locked = True
  Range("EU_EUR_ALL").Locked = True
  

  Range("Formatted_Bottom").Select
  Selection.Copy
  ActiveWindow.SmallScroll Down:=-18
  Range("Blank_Row").Select
  Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Application.CutCopyMode = False


  Range("SUKL").Cells(1).Select


  ThisWorkbook.ActiveSheet.Protect passw, True, True, True

End Sub



Public Function PovinneH_test() As Boolean
Dim i As Integer
Dim b As Boolean

On Error GoTo err

  PovinneH_test = False
  b = True


  If Trim(Range("DRZ_Nazov")) = "" Then
    b = False
  End If

  If Trim(Range("DRZ_Stat")) = "" Then
    b = False
  End If
  
'  If Trim(Range("DRZ_ICO")) = "" Then
'    b = False
'  End If


  If Trim(Range("ZAS_Nazov")) = "" Then
    b = False
  End If

  If Trim(Range("ZAS_Stat")) = "" Then
    b = False
  End If
  
  If Trim(Range("ZAS_ICO")) = "" Then
    b = False
  End If

  If Trim(Range("Kontakt_Meno")) = "" Then
    b = False
  End If

  If Trim(Range("Kontakt_Tel")) = "" Then
    If Trim(Range("Kontakt_Mobil")) = "" Then
      b = False
    Else
    End If
  End If


  PovinneH_test = b
  Exit Function

err:
  PovinneH_test = False
  ErrMsg err, "PovinneH_test"
End Function


Public Function Spravnost_test(ByRef aMsg As String) As Boolean
Dim area As Range
Dim cell As Range
Dim i As Integer
Dim startD As Date
Dim endD As Date

  Spravnost_test = False
  

  'datum ziadosti
  If Range("Datum").Value = "" Then
    Spravnost_test = False
    aMsg = "Pozor, d|fffd|tum |fffd|iadosti nie je vyplnen|fffd|!"
    Range("Datum").Select
    Exit Function
  End If
  
  startD = DateSerial(StartYear, StartMonth, 1)
  endD = DateSerial(ActualYear, ActualMonth + 1, 1) - 1
  
'  If Not (CInt(Month(Range("Datum").Value)) <= CInt(ActualMonth) And CInt(Year(Range("Datum").Value)) = CInt(ActualYear))) Then
  If Not (Range("Datum").Value >= startD And Range("Datum").Value <= endD) Then
    Spravnost_test = False
    aMsg = "Pozor, formul|fffd|r je platn|fffd| v obdob|fffd| od " & startD & _
           " do " & endD & ", preto zad|fffd|vajte d|fffd|tum z tohto obdobia!"
    Range("Datum").Select
    Exit Function
  End If
  
  
  'SUKL
  For Each cell In Range("SUKL").Cells
      If cell.Value <> "" Then

'        'stary format 00000
'        If Not IsNumeric(cell.Value) Then
'          aMsg = "Pozor, v st?pci |fffd||fffd|KL m|fffd||fffd|ete zad|fffd|va? len ?|fffd|sla d?|fffd|ky maxim|fffd|lne 5 cifier!"
'          cell.Select
'          Exit Function
'        End If
'
'        If cell.Value > 99999 Then
'          aMsg = "Pozor, v st?pci |fffd||fffd|KL m|fffd||fffd|ete zad|fffd|va? len ?|fffd|sla d?|fffd|ky maxim|fffd|lne 5 cifier!"
'          cell.Select
'          Exit Function
'        End If
'
'        If Application.WorksheetFunction.Round(cell.Value, 0) <> cell.Value Then
'          aMsg = "Pozor, v st?pci |fffd||fffd|KL m|fffd||fffd|ete zad|fffd|va? len cel|fffd| ?|fffd|sla d?|fffd|ky maxim|fffd|lne 5 cifier!"
'          cell.Select
'          Exit Function
'        End If
              

        'novy format XXXXX
        If Not TestSUKL(cell.Value) Then
          aMsg = "Pozor, |fffd||fffd|KL k|fffd|d ZP je zle zadan|fffd|! Spr|fffd|vny form|fffd|t k|fffd|du je ""X00000"", kde X reprezentuje p|fffd|smeno a 00000 reprezentuje 5-miestny alfanumerick|fffd| k|fffd|d (p|fffd|smen|fffd| A-Z alebo ?|fffd|slice 0-9)."
          cell.Select
          Exit Function
        End If
              
              
        If Range("Absencia_Value").Value = False Then
          If Range("Ref_Price").Cells(cell.Row - Range("Ref_Price").Cells(1).Row + 1) = "" Then
            aMsg = "Pozor, pre ZP so |fffd||fffd|KL k|fffd|dom  " & GetSUKL(cell.Value) & "  je nedostato?n|fffd| po?et zadan|fffd|ch referen?n|fffd|ch cien!"
            cell.Select
            Exit Function
          End If
        End If
      
      End If
        
  Next

  
  'EU
  For Each area In Range("EU_ALL").Areas
    For Each cell In area.Cells
      If cell.Value <> "" Then
        i = cell.Row - Range("SUKL").Cells(1).Row + 1
        If Range("SUKL").Cells(i) = "" Then
          aMsg = "Pozor, v riadku ?. " & cell.Row & " s|fffd| vyplnen|fffd| niektor|fffd| |fffd|daje, ale nie je zadan|fffd| |fffd||fffd|KL k|fffd|d!"
          Range("SUKL").Cells(i).Select
          Exit Function
        End If
        
        If Not IsNumeric(cell.Value) Then
          aMsg = "Pozor, v st?pci meny v |fffd|t|fffd|te E|fffd| m|fffd||fffd|ete zad|fffd|va? len ?|fffd|sla!"
          cell.Select
          Exit Function
        Else
          If cell.Value <= 0 Then
            aMsg = "Pozor, v st?pci meny v |fffd|t|fffd|te E|fffd| m|fffd||fffd|ete zad|fffd|va? len ?|fffd|sla v|fffd|?|fffd|ie ako 0!"
            cell.Select
            Exit Function
          End If
        End If
      End If
    
    Next
  Next
      
  If Not TestDuplSUKL(aMsg) Then
    Exit Function
  End If
  
  
  
  Spravnost_test = True
End Function

Public Function TestDuplSUKL(ByRef aMsg As String) As Boolean
Dim i As Integer
Dim j As Integer
Dim aList() As String
Dim csere As Boolean
Dim dupl As Boolean
Dim duplSUKL As String
Dim pom As String

'duplicita kodov SUKL

  TestDuplSUKL = False

  ReDim aList(Range("SUKL").Rows.Count)
  
  j = 0
  For i = 1 To Range("Blank").Row - Range("SUKL").Cells(1).Row
    If Range("SUKL").Cells(i).Text <> "" Then
      aList(j) = Range("SUKL").Cells(i).Text
      j = j + 1
    End If
  Next
  
  If j > 0 Then
      ReDim Preserve aList(j - 1)
      
      dupl = False
      duplSUKL = ""
      
      
      csere = True
      Do While csere
        csere = False
        For i = 0 To UBound(aList) - 1
          If aList(i) > aList(i + 1) Then
            pom = aList(i)
            aList(i) = aList(i + 1)
            aList(i + 1) = pom
            csere = True
          End If
          If aList(i) = aList(i + 1) Then
            dupl = True
            duplSUKL = aList(i)
            
          End If
        Next i
      Loop
    
      If dupl Then
        aMsg = "Pozor, ZP so |fffd||fffd|KL k|fffd|dom " & duplSUKL & " sa nach|fffd|dza viackr|fffd|t na zozname!"
        Exit Function
      End If
  Else
    aMsg = "Pozor, zoznam zdravotn|fffd|ckych pom|fffd|cok je pr|fffd|zdny!"
    Exit Function
      
  End If
  
  TestDuplSUKL = True


End Function

Public Function GetMinPrice(r As Integer, absencia As Boolean) As Double
Dim i As Integer
Dim j As Integer
Dim aList() As Double
Dim zamena As Boolean
Dim pom As String

Dim area As Range
Dim d As Double

  GetMinPrice = 0

  ReDim aList(pocEU)
  
  j = 0

  For Each area In Range("EU_EUR_" & r).Areas
    If area.Cells(1) <> "" Then
      aList(j) = area.Cells(1)
      j = j + 1
    End If
  Next
  
 
  If j > 0 Then
      ReDim Preserve aList(j - 1)
      
      zamena = True
      Do While zamena
        zamena = False
        For i = 0 To UBound(aList) - 1
          If aList(i) > aList(i + 1) Then
            pom = aList(i)
            aList(i) = aList(i + 1)
            aList(i + 1) = pom
            zamena = True
          End If
        Next i
      Loop
    
  Else
    'nie su dane ceny
    Exit Function
      
  End If
  
  d = aList(0)
  For i = 1 To UBound(aList)
    If aList(i) > aList(0) Then
      d = aList(i)
      Exit For
    End If
  Next i
  GetMinPrice = d


  
End Function

Public Function GetAvgPrice(r As Integer, absencia As Boolean) As Double
Dim i As Integer
Dim j As Integer
Dim aList() As Double
Dim AvgList() As Double
Dim zamena As Boolean
Dim pom As String

Dim area As Range
Dim d As Double

  GetAvgPrice = 0

  ReDim aList(pocEU)
  
  j = 0

  For Each area In Range("EU_EUR_" & r).Areas
    If area.Cells(1) <> "" Then
      aList(j) = area.Cells(1)
      j = j + 1
    End If
  Next
  
 
  If j > 0 Then
      ReDim Preserve aList(j - 1)
      
      zamena = True
      Do While zamena
        zamena = False
        For i = 0 To UBound(aList) - 1
          If aList(i) > aList(i + 1) Then
            pom = aList(i)
            aList(i) = aList(i + 1)
            aList(i + 1) = pom
            zamena = True
          End If
        Next i
      Loop
    
  Else
    'nie su dane ceny
    Exit Function
      
  End If
  
  d = Application.WorksheetFunction.Min(AvgPoc - 1, UBound(aList))
  ReDim AvgList(d)
  For i = 0 To d
      AvgList(i) = aList(i)
  Next i
  GetAvgPrice = Application.WorksheetFunction.Round(Application.WorksheetFunction.Average(AvgList), 2)


  
End Function


Public Function GetSUKL(aSUKL As String) As String
Dim s As String

  s = Trim(aSUKL)
  Do While Len(s) < 5
    s = "0" & s
  Loop
  
  GetSUKL = UCase(s)
  
End Function

Public Function TestSUKL(aSUKL As String) As Boolean
Dim s As String
Dim chr As String
Dim i As Integer

  TestSUKL = False
  
  s = UCase(Trim(aSUKL))
  
  If s <> "" Then
    If Len(s) = 6 Then
      's = UCase(s)
      chr = Mid$(s, 1, 1)
      If chr >= "A" And chr <= "Z" Then
     
        For i = 2 To Len(s)
          chr = Mid(s, i, 1)
          If Not ((chr >= "A" And chr <= "Z") Or (chr >= "0" And chr <= "9")) Then
            Exit Function
          End If
        Next i
      Else
        Exit Function
      End If
    Else
      Exit Function
    End If
  End If
  
  TestSUKL = True
  
End Function



Public Sub ErrMsg(err As ErrObject, strFrmSub As String)
  MsgBox "Chyba:" & vbTab & err.Number & vbNewLine & vbTab & "Popis:" & err.Description & vbNewLine & vbTab & strFrmSub, vbCritical Or vbOKOnly, "Chyba"
  err.Clear
End Sub

'Private Function ActualMonthText(i As Integer) As String
'  ActualMonthText = ""
'  Select Case i
'    Case 1
'      ActualMonthText = "janu|fffd|r"
'    Case 2
'      ActualMonthText = "febru|fffd|r"
'    Case 3
'      ActualMonthText = "marec"
'    Case 4
'      ActualMonthText = "apr|fffd|l"
'    Case 5
'      ActualMonthText = "m|fffd|j"
'    Case 6
'      ActualMonthText = "j|fffd|n"
'    Case 7
'      ActualMonthText = "j|fffd|l"
'    Case 8
'      ActualMonthText = "august"
'    Case 9
'      ActualMonthText = "september"
'    Case 10
'      ActualMonthText = "okt|fffd|ber"
'    Case 11
'      ActualMonthText = "november"
'    Case 12
'      ActualMonthText = "december"
'
'  End Select
'
'End Function

Public Function KontrolaPlatnosti()
  If Not (Month(Now) <= ActualMonth And Year(Now) = ActualYear) Then
  
    Formular.Protect passw, False, False, False

    Formular.Rows(Range("Platnost").Row).Hidden = False
    ''Formular.btnKontrola.Visible = False
    Formular.Shapes("btnKontrolaN").Visible = False
    ''Formular.btnNewRows.Visible = False
    Formular.Shapes("btnNewRowsN").Visible = False
    ''Formular.btnGeneruj.Visible = False
    Formular.Shapes("btnGenerujN").Visible = False


    'zablokovat cele
    Formular.Cells.Select
    Selection.Locked = True
    Selection.FormulaHidden = False
    Formular.Range("DRZ_Nazov").Select

    Formular.Protect passw, True, True, True

  Else
    Formular.Protect passw, False, False, False
    Formular.Rows(Range("Platnost").Row).Hidden = True
    Formular.Protect passw, True, True, True
  End If

End Function

' vracia datum vo formate yyyy-mm-dd
' dd - vstupny datum
Public Function GetSDate(dd As Date) As String
  GetSDate = DatePart("yyyy", dd) & "-" & Format(DatePart("m", dd), "00") & "-" & Format(DatePart("d", dd), "00")
End Function

Public Function GetString(s As String) As String
  s = Trim(s)
  s = Replace(s, "&", "&amp;")
  s = Replace(s, """", "&quot;")
  s = Replace(s, "'", "&apos;")
  s = Replace(s, "<", "&lt;")
  s = Replace(s, ">", "&gt;")
  
  GetString = s
End Function

Public Function GetNumberString(s As Variant, digits As Integer) As String
  If IsEmpty(s) Or s = "" Then
    GetNumberString = ""
  Else
    GetNumberString = Trim(Str(Round(s, digits)))
  End If
End Function


Attribute VB_Name = "modUloz"
Option Explicit

Public gcesta As String
Public gSUKL As String
Public gText As String

'Public CodeString(5) As Byte
Public FilePath As String
Public FilePathDefault As String


Private Sub GetCesta()
  If Mid$(gcesta, Len(gcesta), 1) <> "\" Then
    gcesta = gcesta & "\"
  End If
End Sub

Function GetFolder(strPath As String) As String
Dim fldr As FileDialog
Dim sItem As String
Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Select a Folder"
    .AllowMultiSelect = False
    .InitialFileName = strPath
    If .Show <> -1 Then GoTo NextCode
    sItem = .SelectedItems(1)
End With
NextCode:
GetFolder = sItem
Set fldr = Nothing
End Function

Public Sub UlozVystup()
Dim sf As String
Dim s As String
Dim aFileName As String
Dim i As Integer
  On Error GoTo err
  
  gcesta = GetFolder(CurDir)
  If Right(gcesta, 1) <> "\" Then gcesta = gcesta & "\"
  
  If gcesta <> "\" Then
    'zakodovat string ( GetXMLString)!!!
    gText = CodeText(GetXMLString)
  '  gText = GetXMLString
    
    s = gcesta & Range("Typ_Ziadosti_Kod").Value & ".dfm" '".xml"
    Open s For Output As #1
    Print #1, gText
    Close #1
    MsgBox "V|fffd|stup z formul|fffd|ra bol |fffd|spe|fffd|ne ulo|fffd|en|fffd| na adresu: " & s, vbInformation, "Inform|fffd|cia"
    FilePathDefault = gcesta
  End If
  
  Exit Sub
err:
  MsgBox "Nepodarilo sa ulo|fffd|i? v|fffd|stup z formul|fffd|ra!", vbCritical, "Chyba"

End Sub



Private Function CodeText(aText As String) As String
Dim s As String
Dim mText As String
Dim i As Long
Dim j As Integer

  CodeText = ""
  s = ""
  mText = ""
  
  
  For i = 1 To Len(aText)
    s = Mid$(aText, i, 1)
'    mText = mText & Chr(Asc(s) Xor CodeString(i Mod 5))
    mText = mText & chr(Asc(s) Xor 135)
'    Debug.Print s & "  " & Chr(Asc(s) Xor CodeString(i Mod 5))
  Next i
'  mText = mText & Chr(0 Xor CodeString(i Mod 5))
  mText = mText & chr(0 Xor 135)
  
  Randomize
  j = Round(Rnd(256))
  For i = 1 To j
    mText = mText & chr(Round(Rnd(256)))
  Next i
  
  CodeText = mText
End Function

Private Function GetXMLString() As String
Dim s As String
Dim i As Integer
Dim j As Integer
Dim rowItem As Range
  
  s = ""
  s = s & "<?xml version=""1.0"" encoding=""windows-1250""?>" & vbCrLf
  s = s & "<form>" & vbCrLf
  s = s & "  <formularVerzia>" & Range("Verzia").Value & "</formularVerzia><!-- verzia formulara kvoli importu do Dali --><!--string-->" & vbCrLf
  s = s & "  <drzitel>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("DRZ_Nazov").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <ulica>" & GetString(Range("DRZ_Ulica").Value) & "</ulica><!--string-->" & vbCrLf
  s = s & "    <mesto>" & GetString(Range("DRZ_Mesto").Value) & "</mesto><!--string-->" & vbCrLf
  s = s & "    <psc>" & GetString(Range("DRZ_PSC").Value) & "</psc><!--string-->" & vbCrLf
  s = s & "    <stat>" & GetString(Range("DRZ_Stat").Value) & "</stat><!--string-->" & vbCrLf
  s = s & "    <ico>" & GetString(Range("DRZ_ICO").Value) & "</ico><!--string-->" & vbCrLf
  s = s & "  </drzitel>" & vbCrLf
  s = s & "  <zastupca>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("ZAS_Nazov").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <ulica>" & GetString(Range("ZAS_Ulica").Value) & "</ulica><!--string-->" & vbCrLf
  s = s & "    <mesto>" & GetString(Range("ZAS_Mesto").Value) & "</mesto><!--string-->" & vbCrLf
  s = s & "    <psc>" & GetString(Range("ZAS_PSC").Value) & "</psc><!--string-->" & vbCrLf
  s = s & "    <stat>" & GetString(Range("ZAS_Stat").Value) & "</stat><!--string-->" & vbCrLf
  s = s & "    <ico>" & GetString(Range("ZAS_ICO").Value) & "</ico><!--string-->" & vbCrLf
  s = s & "  </zastupca>" & vbCrLf
  s = s & "  <osoba>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("Kontakt_Meno").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <pevnaLinka>" & GetString(Range("Kontakt_Tel").Value) & "</pevnaLinka><!--string-->" & vbCrLf
  s = s & "    <mobil>" & GetString(Range("Kontakt_Mobil").Value) & "</mobil><!--string-->" & vbCrLf
  s = s & "    <mail>" & GetString(Range("Kontakt_Mail").Value) & "</mail><!--string-->" & vbCrLf
  s = s & "  </osoba>" & vbCrLf
  s = s & "  <datumPodania>" & GetSDate(Range("Datum").Value) & "</datumPodania><!-- YYYY-MM-DD --><!--date-->" & vbCrLf
  s = s & "  <typPodania>" & Range("Typ_Ziadosti_Kod").Value & "</typPodania><!--A1N, A1E, A1P--><!--string-->" & vbCrLf
  ''s = s & "  <absencia>" & Formular.chAbsencia.Value & "</absencia><!--true, false-->" & vbCrLf
  s = s & "  <absencia>" & Range("Absencia_Value").Value & "</absencia><!--true, false-->" & vbCrLf
  
  
  s = s & "  <kurzovyListok>" & vbCrLf
  
  For i = 1 To Range("Kurzova_Tabulka").Rows.Count
    s = s & "    <stat>" & vbCrLf
    s = s & "      <mena>" & Cells(Range("Kurzova_Tabulka").Rows(i).Row, Range("Kurzova_Tabulka").Columns(1).Column).Value & "</mena><!-- skratka meny podla formulara -->" & vbCrLf
    s = s & "      <kurz>" & Trim(Str(Cells(Range("Kurzova_Tabulka").Rows(i).Row, Range("Kurzova_Tabulka").Columns(2).Column).Value)) & "</kurz>" & vbCrLf
    s = s & "    </stat>" & vbCrLf
  Next i
  
  s = s & "  </kurzovyListok>" & vbCrLf
  
  
  s = s & "  <pomocky>" & vbCrLf

  For i = 1 To Range("SUKL").Rows.Count
    If Range("SUKL").Rows(i).Value <> "" Then

      s = s & "    <ZP>" & vbCrLf
      s = s & "      <sukl>" & GetSUKL(Range("SUKL").Rows(i).Value) & "</sukl><!--string-->" & vbCrLf
      s = s & "      <nazov>" & GetString(Range("Nazov").Rows(i).Value) & "</nazov><!--string-->" & vbCrLf
      s = s & "      <doplnok>" & GetString(Range("Doplnok").Rows(i).Value) & "</doplnok><!--string-->" & vbCrLf
      s = s & "      <ceny>" & vbCrLf
      For j = 1 To pocEU
        s = s & "        <stat>" & vbCrLf
        s = s & "          <skratka>" & Range("EU_Staty").Areas(j).Value & "</skratka><!-- skratky podla NBS, ciselnik v Dali --><!--string-->" & vbCrLf
        s = s & "          <home>" & GetNumberString(Range("EU_All").Areas(j).Rows(i).Value, 2) & "</home><!-- suma v domacej mene --><!--cislo-->" & vbCrLf
        s = s & "          <eur>" & GetNumberString(Range("EU_EUR_All").Areas(j).Rows(i).Value, 2) & "</eur><!-- prepocet na |fffd| --><!--cislo-->" & vbCrLf
        s = s & "        </stat>" & vbCrLf
      Next j
      s = s & "      </ceny>" & vbCrLf
      s = s & "      <referencnaCena>" & GetNumberString(Range("Ref_Price").Rows(i).Value, 2) & "</referencnaCena><!--cislo-->" & vbCrLf
      s = s & "      <priemerPocetCien>" & GetNumberString(Range("Ref_Price_Num").Rows(i).Value, 0) & "</priemerPocetCien><!--cislo-->" & vbCrLf
      s = s & "    </ZP>" & vbCrLf
    End If
  Next i
  
  s = s & "  </pomocky>" & vbCrLf
  
  
  s = s & "</form>" & vbCrLf
  
  GetXMLString = s


End Function











INQUEST-PP=macro
