Attribute VB_Name = "Module1"
Option Explicit

Sub UnProtect(strPswd As String)

On Error GoTo CLEANUP:

   Application.ScreenUpdating = False
   Dim wSheet As Worksheet

    For Each wSheet In ActiveWorkbook.Worksheets

        If wSheet.ProtectContents = True Then
            ActiveWorkbook.UnProtect strPswd
            wSheet.UnProtect strPswd
        Else
        End If

    Next wSheet
    
   ActiveWorkbook.UnProtect strPswd
   Application.ScreenUpdating = True


Exit Sub

CLEANUP:
    Application.ScreenUpdating = True
    MsgBox "Incorrect Password", vbCritical, "Incorrect"
Exit Sub
End Sub

Sub Protect(strPswd As String)

On Error GoTo CLEANUP:


   Application.ScreenUpdating = False
  
   Dim wSheet As Worksheet

    For Each wSheet In ActiveWorkbook.Worksheets

        If wSheet.ProtectContents = True Then
        Else
            wSheet.Protect strPswd, DrawingObjects:=True, Contents:=True, Scenarios:=True
        End If

    Next wSheet
       
    ActiveWorkbook.Protect strPswd, Structure:=True, Windows:=False
    Application.ScreenUpdating = True

Exit Sub

CLEANUP:
    Application.ScreenUpdating = True
    MsgBox "Invalid Code!", vbExclamation, "Invalid Code"
Exit Sub
End Sub
Sub GetStateFiscalYear()

Dim varSFY As Variant


    varSFY = InputBox(Prompt:="Please Enter State Fiscal Year for all of the DSH Calc Templates You Are Currently Loading.", _
          Title:="ENTER STATE FISCAL YEAR", Default:="06/30/2006")

        If varSFY = vbNullString Then

           Exit Sub

        Else

          Select Case varSFY

            Case "06/30/2006"


          End Select

        End If
 End Sub

'Sub Import_DSHCalcs_Original()
'
'Dim strMasterFile As String
'Dim vDirAndFilename As Variant
'Dim strFileName(500) As String
'Dim f As Integer
'Dim intRow As Integer
'Dim intNotesBegin As Integer
'Dim intNoteCount As Integer
'Dim intNoteRow As Integer
'Dim intNoteColumn As Integer
'Dim varSFY As Variant
'Dim strMcaidNum As String
'Dim intYear As Integer
'Dim currentDate
'Dim headerRow As Integer
'Dim curCol As Integer
'Dim strEval As String
'Dim intColHeading As Integer
'
'With Worksheets("CR Year Data")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'With Worksheets("DSH Year Data")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'With Worksheets("Notes")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'Application.EnableEvents = True
'
'strMasterFile = ActiveWorkbook.Name
'
'    MsgBox "Warning - All DSH Calculation Template Files Selected Must be from the same State Fiscal Year (e.g., all 2005 or all 2006).  After loading one year you can load the second year.", vbCritical, "All Files Same SFY!"
'
'    varSFY = InputBox(Prompt:="Please Enter State Fiscal Year for all of the DSH Calc Templates You Are Currently Loading.", _
'          Title:="ENTER STATE FISCAL YEAR", Default:="06/30/2006")
'    If varSFY = vbNullString Or IsDate(varSFY) = False Then
'       MsgBox "Invalid Date", vbCritical, "Invalid Date"
'       Exit Sub
'    Else
'       varSFY = DateValue(varSFY)
'    End If
'
'
'    vDirAndFilename = Application.GetOpenFilename("Microsoft Excel Workbooks,*.xls;*.xlt;*.xlsm;*.xlsx", 1, "Select One Or More DSH Calculation Template Files To Import", , True)
'
'    If TypeName(vDirAndFilename) = "Boolean" Then Exit Sub
'
'
'    intNoteColumn = 1
'
'    For f = 1 To UBound(vDirAndFilename)
'        Application.EnableEvents = False
'        Application.ScreenUpdating = False
'        Application.Calculation = xlCalculationManual
'        Workbooks.Open vDirAndFilename(f), False, , , , , , , , True
'
'        strFileName(f) = ActiveWorkbook.Name
'
'        strMcaidNum = Range("McaidNum").Value
'
'
'
'        'STATE FY DATA
'        intRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHColHeadings").Row + 1
'        'Search for Mcaidnum and SFYE - if exists go to that line and clear if not then go to first blank line and add
'        intRow = FindStateFiscalYear(strMasterFile, strMcaidNum, varSFY)
'
'        'Clear contents of non-formula fields
'        Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("D" & intRow & ":" & "V" & intRow).ClearContents
'
'
'        'Evaluate formulas and load into DSH Tab
'           ' headerRow = 11
'            intColHeading = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHColHeadings").Row
'            headerRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHVersion3Header").Row
'            curCol = 1
'            Do While Len(Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intColHeading, curCol).Value) > 0
'                If Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value = "" Then
'                    ' do nothing
'                Else
'                    strEval = Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value
'                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
'                       'set the formula of the header row
'                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
'                        ' copy the formula to the data row
'                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).FormulaR1C1
'                        ' restore header contents
'                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value = strEval
'                    Else
'                    Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value)
'                    End If
'                End If
'
'                curCol = curCol + 1
'            Loop
'
'            currentDate = Now()
'
'            'Update values from DSH Calculation Templates
'            Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHImportDates").Column).Value = currentDate
'            Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHYearBegin").Column).Value = DateValue(Str(Month(varSFY + 1)) + "/01/" + Str(Year(varSFY) - 1))
'            Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHYearEnd").Column).Value = varSFY
'
'
'      'C/R YEAR DATA
'         intRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRColHeadings").Row + 1
'        'Search for Mcaidnum and FYE - if exists go to that line and overwrite if not then go to first blank line and add
'         intRow = FindCostReport(strMasterFile, Range("McaidNum").Value, Range("FYE").Value, "CR Year Data")
'
'         'Clear contents of non-formula fields
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("A" & intRow & ":" & "GA" & intRow).ClearContents
'
'         'Evaluate formulas and load into CR Tab
'            'headerRow = 11
'            intColHeading = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRColHeadings").Row
'            headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion3Header").Row
'            curCol = 1
'            Do While Len(Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intColHeading, curCol).Value) > 0
'                If Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value = "" Then
'                    ' do nothing
'                Else
'                    strEval = Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value
'                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
'                       'set the formula of the header row
'                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
'                        ' copy the formula to the data row
'                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).FormulaR1C1
'                        ' restore header contents
'                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value = strEval
'                    Else
'                    Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value)
'                    End If
'                End If
'
'                curCol = curCol + 1
'            Loop
'
'         Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRImportDates").Column).Value = currentDate
'
'         'Add Notes from SURVEY
'       'Find and clear notes with same Mcaid Number and State Fiscal Year Survey Origination Already in Statewide file
'        intNoteRow = FindCostReportNotes("Old", strMasterFile, Range("McaidNum").Value, Range("FYE").Value, "")
'
'        intNoteCount = 1
'        intNotesBegin = 9
'        intNoteColumn = 1
'
'        'FIND the word "NOTES" and then copy all notes into master file into remaining columns
'        intNotesBegin = FindNotes(strFileName(f), "Notes") + 1
'
'        If intNotesBegin > 1 Then
'            intNoteCount = 8
'            Do While intNoteCount < 20
'               If Len(Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 1) & Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 2) & Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 3) & Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 4)) > 1 Then
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn).Value = Range("McaidNum").Value
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 1).Value = Range("McarNum").Value
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 2).Value = Range("ProvName").Value
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 3).Value = Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 1) & Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 2) & Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 3) & Workbooks(strFileName(f)).Worksheets("UCC Cost & Payment Summary").Cells(intNotesBegin, 4)
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 4).Value = "Unknown"
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 5).Value = Range("FYE").Value
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 8).Value = varSFY
'                 Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteRow, intNoteColumn + 26).Value = currentDate
'                 intNoteRow = intNoteRow + 1
'               End If
'
'               intNotesBegin = intNotesBegin + 1
'               intNoteCount = intNoteCount + 1
'            Loop
'        Else
'            Workbooks(strMasterFile).Worksheets("Notes").Cells(intNoteColumn, intNoteCount).Value = "Can't Find Notes"
'        End If
'
'        Workbooks(strFileName(f)).Close False
'
'    Next f
'
' Application.EnableEvents = True
' Application.ScreenUpdating = True
' Application.Calculation = xlCalculationAutomatic
'End Sub

'Sub Import_CR_Data_V402()
'
'Dim strMasterFile As String
'Dim vDirAndFilename As Variant
'Dim strFileName(500) As String
'Dim f As Integer
'Dim intRow As Integer
'Dim intNotesBegin As Integer
'Dim intNoteColumn As Integer
'Dim intNoteRow As Integer
'Dim intNoteCount As Integer
'Dim varFYE
'Dim varSFY
'Dim intYear As Integer
'Dim strMcaidNum As String
'Dim strSubNum1 As String
'Dim strSubNum2 As String
'Dim strMcareNum As String
'Dim strProvName As String
'Dim strWorksheetName As String
'Dim currentDate
'Dim headerRow As Integer
'Dim curCol As Integer
'Dim strEval As String
'Dim intColHeading As Integer
'
'
'With Worksheets("CR Year Data")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'With Worksheets("DSH Year Data")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'With Worksheets("Notes")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'Application.EnableEvents = True
'
'strMasterFile = ActiveWorkbook.Name
'
'    vDirAndFilename = Application.GetOpenFilename("Microsoft Excel Workbooks,*.xls;*.xlt;*.xlsm;*.xlsx", 1, "Select One Or More DSH Surveys (Version 4.00-4.99) To Import", , True)
'
'    If TypeName(vDirAndFilename) = "Boolean" Then Exit Sub
'
'    intNoteRow = 1
'
'
'     For f = 1 To UBound(vDirAndFilename)
'        On Error GoTo ERRHandler:
'        Application.EnableEvents = False
'        Application.ScreenUpdating = False
'        Application.Calculation = xlCalculationManual
'
'        Workbooks.Open vDirAndFilename(f), False, , , , , , , , True
'
'        strFileName(f) = ActiveWorkbook.Name
'
'
'        If Range("McaidNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McaidNumADJ_ADJ").Value)) = 0 Then
'           strMcaidNum = Range("McaidNum_ADJ").Value
'        Else
'           strMcaidNum = Range("McaidNumADJ_ADJ").Value
'        End If
'
'        If Range("ProvNameADJ_ADJ").Value = 0 Or Len(Trim(Range("ProvNameADJ_ADJ").Value)) = 0 Then
'           strProvName = Range("ProvName_ADJ").Value
'        Else
'           strProvName = Range("ProvNameADJ_ADJ").Value
'        End If
'
'        If Range("SubNum1Adj_ADJ").Value = 0 Or Len(Trim(Range("SubNum1Adj_ADJ").Value)) = 0 Then
'           strSubNum1 = Range("SubNum1_ADJ").Value
'        Else
'           strSubNum1 = Range("SubNum1Adj_ADJ").Value
'        End If
'
'        If Range("SubNum2Adj_ADJ").Value = 0 Or Len(Trim(Range("SubNum2Adj_ADJ").Value)) = 0 Then
'           strSubNum2 = Range("SubNum2_ADJ").Value
'        Else
'           strSubNum2 = Range("SubNum2Adj_ADJ").Value
'        End If
'
'        If Range("McareNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McareNumADJ_ADJ").Value)) = 0 Then
'           strMcareNum = Range("McareNum_ADJ").Value
'        Else
'           strMcareNum = Range("McareNumAdj_ADJ").Value
'        End If
'
'
'        'DO STATE FISCAL YEAR ITEMS
'         intRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHColHeadings").Row + 1
'
'            varSFY = Range("DSH_Year_End_ADJ").Value
'
'            intRow = FindStateFiscalYear(strMasterFile, strMcaidNum, varSFY)
'
'            'Clear contents of non-formula fields
'            Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("D" & intRow & ":" & "T" & intRow).ClearContents
'
'            'Update values from DSH Surveys
'            'Evaluate formulas and load into DSH Tab
'            intColHeading = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHColHeadings").Row
'
'            If Left(Trim(Range("Version")), 16) = "DSH Version 4.00" Then
'                headerRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHVersion4Header").Row
'            Else
'                headerRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHVersion4.02Header").Row
'            End If
'
'            curCol = 1
'            Do While Len(Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intColHeading, curCol).Value) > 0
'                If Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value = "" Then
'                    ' do nothing
'                Else
'                    strEval = Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value
'                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
'                       'set the formula of the header row
'                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
'                        ' copy the formula to the data row
'                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).FormulaR1C1
'                        ' restore header contents
'                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value = strEval
'                    Else
'                    Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value)
'                    End If
'                End If
'
'                curCol = curCol + 1
'             Loop
'
'            currentDate = Now()
'
'           'Update values from DSH Calculation Templates
'            Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHImportDates").Column).Value = currentDate
'
'
'        'DO COST REPORT YEAR STUFF
'        intRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRColHeadings").Row + 1
'
'         intYear = 1
'         Do While intYear < 4
'           If IsDate(Range("FYE_" & intYear & "_ADJ")) Then
'
'              'RHC UCC for some states
'             If Range("State") = "Louisiana" Then
'
'                'Search for Mcaidnum and FYE - if exists go to that line and overwrite if not then go to first blank line and add
'                 varFYE = Range("FYE_" & intYear & "_ADJ").Value
'                 intRow = FindCostReport(strMasterFile, strMcaidNum, varFYE, "CR Year RHC Data")
'
'                 'Clear contents of non-formula fields
'                 Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("A" & intRow & ":" & "GM" & intRow).ClearContents
'
'                 intColHeading = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCColHeadings").Row
'                 headerRow = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCVersion4.02Year" & intYear & "Header").Row
'                 curCol = 1
'                 Do While Len(Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intColHeading, curCol).Value) > 0
'                    If Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value = "" Then
'                        ' do nothing
'                    Else
'                        strEval = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value
'                        If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
'                           'set the formula of the header row
'                            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
'                            ' copy the formula to the data row
'                            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).FormulaR1C1
'                            ' restore header contents
'                            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value = strEval
'                        Else
'                            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value)
'                        End If
'                    End If
'
'                  curCol = curCol + 1
'                  Loop
'
'                Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("D" & intRow).Value = strMcaidNum
'                Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("G" & intRow).Value = strMcareNum
'                Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCImportDates").Column).Value = currentDate
'             End If
'
'
'            'Hospital UCC for all states
'            'Search for Mcaidnum and FYE - if exists go to that line and overwrite if not then go to first blank line and add
'            varFYE = Range("FYE_" & intYear & "_ADJ").Value
'            intRow = FindCostReport(strMasterFile, strMcaidNum, varFYE, "CR Year Data")
'
'             'Clear contents of non-formula fields
'             Workbooks(strMasterFile).Worksheets("CR Year Data").Range("A" & intRow & ":" & "GA" & intRow).ClearContents
'
'             'Evaluate formulas and load into CR Tab
'             intColHeading = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRColHeadings").Row
'
'            If Left(Trim(Range("Version")), 16) = "DSH Version 4.00" Then
'                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion4Year" & intYear & "Header").Row
'            ElseIf Range("State") = "Louisiana" Then
'                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion4.02LAYear" & intYear & "Header").Row
'            Else
'                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion4.02Year" & intYear & "Header").Row
'            End If
'
'
'            curCol = 1
'            Do While Len(Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intColHeading, curCol).Value) > 0
'                If Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value = "" Then
'                    ' do nothing
'                Else
'                    strEval = Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value
'                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
'                       'set the formula of the header row
'                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
'                        ' copy the formula to the data row
'                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).FormulaR1C1
'                        ' restore header contents
'                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value = strEval
'                    Else
'                    Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value)
'                    End If
'                End If
'
'                curCol = curCol + 1
'            Loop
'
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRImportDates").Column).Value = currentDate
'
'            'Update values from DSH Survey Files
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("A" & intRow).Value = strProvName
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("D" & intRow).Value = strMcaidNum
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("E" & intRow).Value = strSubNum1
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("F" & intRow).Value = strSubNum2
'            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("G" & intRow).Value = strMcareNum
'
'         End If
'          intYear = intYear + 1
'        Loop
'
'
'         'Add Notes from SURVEY
'
'            'Find and clear notes with same Mcaid Number and State Fiscal Year Survey Origination Already in Statewide file
'            intNoteRow = FindCostReportNotes("Old", strMasterFile, strMcaidNum, varSFY, "")
'
'            intNoteCount = 1
'            intNotesBegin = 9
'            intNoteColumn = 1
'
'            Dim WS As Worksheet
'
'            Do While intNoteCount < 26
'
'                Set WS = VBAProject.GetWorksheetByCodeName(Workbooks(strFileName(f)), "Sheet30")
'
'                If Len(WS.Cells(intNotesBegin, 2)) > 0 Then
'
'                    With Workbooks(strMasterFile).Worksheets("Notes")
'
'                        .Cells(intNoteRow, intNoteColumn).Value = strMcaidNum
'                        .Cells(intNoteRow, intNoteColumn + 1).Value = strMcareNum
'                        .Cells(intNoteRow, intNoteColumn + 2).Value = strProvName
'
'                        'Get Note Description
'                        .Cells(intNoteRow, intNoteColumn + 3).Value = WS.Cells(intNotesBegin, 2)
'
'                        'Get Note Amount
'                        .Cells(intNoteRow, intNoteColumn + 4).Value = WS.Cells(intNotesBegin, 12)
'
'                        'Get C/R Period 1
'                        .Cells(intNoteRow, intNoteColumn + 5).Value = WS.Cells(intNotesBegin, 13)
'
'                        'Get C/R Period 2
'                        .Cells(intNoteRow, intNoteColumn + 6).Value = WS.Cells(intNotesBegin, 14)
'
'                        'Get C/R Period 3
'                        .Cells(intNoteRow, intNoteColumn + 7).Value = WS.Cells(intNotesBegin, 15)
'
'                        'Get State Fiscal Year End
'                        .Cells(intNoteRow, intNoteColumn + 8).Value = varSFY
'                        .Cells(intNoteRow, intNoteColumn + 26).Value = currentDate
'
'                    End With
'
'                End If
'
'                intNoteCount = intNoteCount + 1
'                intNotesBegin = intNotesBegin + 1
'                intNoteRow = intNoteRow + 1
'
'            Loop
'
'NextFile:
'        Workbooks(strFileName(f)).Close False
'
'    Next f
'
' Application.EnableEvents = True
' Application.ScreenUpdating = True
' Application.Calculation = xlCalculationAutomatic
' Exit Sub
'
'
'ERRHandler:
'Dim intErrRow As Integer
'Dim intSelection As Integer
'
'intErrRow = 0
'
'    Do
'      intErrRow = intErrRow + 1
'      intSelection = Len(Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Formula)
'    Loop Until intSelection = 0
'
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Value = Workbooks(strFileName(f)).Name
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("B" & intErrRow).Value = currentDate
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("C" & intErrRow).Value = Err.Number
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("D" & intErrRow).Value = Err.Description
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("E" & intErrRow).Value = "Import_CR_Data_V402"
'
' Resume NextFile:
'
'End Sub

Function FindCostReport(strFileName As String, varMcaidNum As Variant, varFYE As Variant, strSearchWksht As String) As Integer
Dim rFoundIt As Range
Dim iLoop As Integer
Dim intSelectedText As Integer
Dim x As Integer

' Using the Find Method over Vlookup
'

    With Workbooks(strFileName).Worksheets(strSearchWksht).Range("McaidNumData")
            'Loop no more times that the name occurs
             Set rFoundIt = .Cells(1, 1)
      
             For iLoop = 1 To WorksheetFunction.CountIf _
                                (Workbooks(strFileName).Worksheets(strSearchWksht).Range("McaidNumData"), varMcaidNum)

                'ReSet variable to found occurence of name. Next loop search _
                will start AFTER this Set cell.
                
                'Set variable to start search from
       
                Set rFoundIt = .Find(What:=varMcaidNum, AFTER:=rFoundIt, _
                LookIn:=xlValues, LookAt:=xlWhole, SearchOrder:=xlByRows, _
                SearchDirection:=xlNext, MatchCase:=False)
                               
                If Not rFoundIt Is Nothing Then
                  'Check if it's the right one.
                   If rFoundIt.Offset(0, -1).Value = varFYE Then
                      FindCostReport = rFoundIt.Row
                      Exit For 'Leave loop
                  End If
                End If
                
            Next iLoop
       
       'Find next blank row
       x = 0
       
       If FindCostReport = 0 Then
          Do
             x = x + 1
             intSelectedText = Len(.Cells(x, 1).Formula)
          Loop Until intSelectedText = 0
          
          FindCostReport = .Cells(x, 1).Row
       End If
                
    End With
    
End Function
Function FindStateFiscalYear(strFileName As String, varMcaidNum As Variant, varSFY As Variant) As Integer
Dim rFoundIt As Range
Dim iLoop As Integer
Dim intSelectedText As Integer
Dim x As Integer

' Using the Find Method over Vlookup
'

    With Workbooks(strFileName).Worksheets("DSH Year Data").Range("McaidNumData2")
            'Loop no more times that the name occurs
             Set rFoundIt = .Cells(1, 1)
      
             For iLoop = 1 To WorksheetFunction.CountIf _
                                (Workbooks(strFileName).Worksheets("DSH Year Data").Range("McaidNumData2"), varMcaidNum)

                'ReSet variable to found occurence of name. Next loop search _
                will start AFTER this Set cell.
                
                'Set variable to start search from
       
                Set rFoundIt = .Find(What:=varMcaidNum, AFTER:=rFoundIt, _
                LookIn:=xlValues, LookAt:=xlWhole, SearchOrder:=xlByRows, _
                SearchDirection:=xlNext, MatchCase:=False)
                               
                If Not rFoundIt Is Nothing Then
                  'Check if it's the right one.
                   If rFoundIt.Offset(0, -1).Value = varSFY Then
                      FindStateFiscalYear = rFoundIt.Row
                      Exit For 'Leave loop
                  End If
                End If
                
            Next iLoop
       
       'Find next blank row
       x = 0
       
       If FindStateFiscalYear = 0 Then
          Do
             x = x + 1
             intSelectedText = Len(.Cells(x, 1).Formula)
          Loop Until intSelectedText = 0
          
          FindStateFiscalYear = .Cells(x, 1).Row
       End If
                
    End With
    
End Function
Function FindCostReportNotes(strVersion As String, strFileName As String, varMcaidNumNotes As Variant, varFYE As Variant, strProvType As String) As Integer
Dim rFoundIt As Range
Dim iLoop As Integer
Dim intSelectedText As Integer
Dim x As Integer

' Using the Find Method over Vlookup
'

    With Workbooks(strFileName).Worksheets("Notes").Range("LookUpNums")
            'Loop no more times than the name occurs
             Set rFoundIt = .Cells(1, 1)
      
             For iLoop = 1 To WorksheetFunction.CountIf _
                                (Workbooks(strFileName).Worksheets("Notes").Range("LookUpNums"), varMcaidNumNotes & strProvType)

                'ReSet variable to found occurence of name. Next loop search _
                will start AFTER this Set cell.
                
                'Set variable to start search from
       
                Set rFoundIt = .Find(What:=varMcaidNumNotes & strProvType, AFTER:=rFoundIt, _
                LookIn:=xlValues, LookAt:=xlWhole, SearchOrder:=xlByColumns, _
                SearchDirection:=xlNext, MatchCase:=False)
                               
                If Not rFoundIt Is Nothing Then
                  'Check if it's the right one.
                   If strVersion = "Old" And rFoundIt.Offset(0, -3).Value = varFYE Then
                      Range(rFoundIt.Offset(0, -3), rFoundIt.Offset(0, -11)).ClearContents
                      Range(rFoundIt.Offset(0, -1), rFoundIt.Offset(0, -1)).ClearContents
                   ElseIf rFoundIt.Offset(0, -6).Value = varFYE Then
                      Range(rFoundIt.Offset(0, -3), rFoundIt.Offset(0, -11)).ClearContents
                      Range(rFoundIt.Offset(0, -1), rFoundIt.Offset(0, -1)).ClearContents
                   End If
                End If
                
            Next iLoop
                    
    End With
    
    'Sort data to push blank rows to bottom
    With Workbooks(strFileName).Worksheets("Notes").Sort
        .SetRange Range("A2:L10000")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
                    
                    
   'Find next blank row
   x = 12
    With Workbooks(strFileName).Worksheets("Notes").Range("McaidNumNotes")
          Do
             x = x + 1
             intSelectedText = Len(.Cells(x, 1).Formula)
          Loop Until intSelectedText = 0
          
          FindCostReportNotes = .Cells(x, 1).Row
    End With
    
End Function
'Function FindNotes(strFileName As String, strFindNotes As String) As Integer
'''''ONLY USED ON REALLY OLD IMPORTS  (DSH CALCS OLD IMPORT)
'
'Dim rFoundIt As Range
'Dim iLoop As Integer
'
'    With Workbooks(strFileName).Worksheets("UCC Cost & Payment Summary").Range("A90:AC1000")
'             Set rFoundIt = .Cells(1, 1)
'
'                Set rFoundIt = .Find(What:=strFindNotes, AFTER:=rFoundIt, _
'                LookIn:=xlValues, LookAt:=xlPart, SearchOrder:=xlByRows, _
'                SearchDirection:=xlNext, MatchCase:=False)
'
'                If Not rFoundIt Is Nothing Then
'                  'Check if it's the right one.
'                      FindNotes = rFoundIt.Row
'                Else
'                  FindNotes = 0
'                End If
'    End With
'
'End Function

Sub Import_Surveys_Pt2_V510()

Dim strMasterFile As String
Dim vDirAndFilename As Variant
Dim strFileName(500) As String
Dim f As Integer
Dim intRow As Integer
Dim intNotesBegin As Integer
Dim intNoteColumn As Integer
Dim intNoteRow As Integer
Dim intNoteCount As Integer
Dim varFYE
Dim intYear As Integer
Dim strMcaidNum As String
Dim strSubNum1 As String
Dim strSubNum2 As String
Dim strMcareNum As String
Dim strProvName As String
Dim currentDate
Dim headerRow As Integer
Dim curCol As Integer
Dim strEval As String
Dim varVersion As Variant
Dim intColHeading As Integer

With Worksheets("CR Year Data")
  If .FilterMode Then
     .ShowAllData
  End If
End With

With Worksheets("Notes")
  If .FilterMode Then
     .ShowAllData
  End If
End With

Application.EnableEvents = True

strMasterFile = ActiveWorkbook.Name

    vDirAndFilename = Application.GetOpenFilename("Microsoft Excel Workbooks,*.xls;*.xlt;*.xlsm;*.xlsx", 1, "Select One Or More DSH Part II v5.00 (and up) Surveys To Import", , True)
    
    If TypeName(vDirAndFilename) = "Boolean" Then Exit Sub
    
    intRow = 30
    intNoteRow = 1
    
    For f = 1 To UBound(vDirAndFilename)
        On Error GoTo ERRHandler:
        
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        Workbooks.Open vDirAndFilename(f), False, , , , , , , , True
        
        strFileName(f) = ActiveWorkbook.Name
                    
        'Get Cost Report Variable Fields
          If Range("ProvNameADJ_ADJ").Value = 0 Or Len(Trim(Range("ProvNameADJ_ADJ").Value)) = 0 Then
               strProvName = Range("ProvName_ADJ").Value
            Else
              strProvName = Range("ProvNameADJ_ADJ").Value
          End If
            
          If Range("McaidNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McaidNumADJ_ADJ").Value)) = 0 Then
             strMcaidNum = Range("McaidNum_ADJ").Value
          Else
             strMcaidNum = Range("McaidNumADJ_ADJ").Value
          End If
        
          If Range("SubNum1Adj_ADJ").Value = 0 Or Len(Trim(Range("SubNum1Adj_ADJ").Value)) = 0 Then
             strSubNum1 = Range("SubNum1_ADJ").Text
          Else
             strSubNum1 = Range("SubNum1Adj_ADJ").Text
          End If
          
          If Range("SubNum2Adj_ADJ").Value = 0 Or Len(Trim(Range("SubNum2Adj_ADJ").Value)) = 0 Then
             strSubNum2 = Range("SubNum2_ADJ").Text
          Else
             strSubNum2 = Range("SubNum2Adj_ADJ").Text
          End If
          
          If Range("McareNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McareNumADJ_ADJ").Value)) = 0 Then
             strMcareNum = Range("McareNum_ADJ").Value
          Else
             strMcareNum = Range("McareNumAdj_ADJ").Value
          End If
                        
        currentDate = Now()
        
             
        intYear = 1
                         
           If IsDate(Range("FYE_" & intYear & "_ADJ")) Then
               
            'Search for Mcaidnum and FYE - if exists go to that line and overwrite if not then go to first blank line and add
            varFYE = Range("FYE_" & intYear & "_ADJ").Value
            intRow = FindCostReport(strMasterFile, strMcaidNum, varFYE, "CR Year Data")
            
            'Clear contents of non-formula fields
            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("A" & intRow & ":" & "GA" & intRow).ClearContents
                                      
            'Evaluate formulas and load
            intColHeading = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRColHeadings").Row
            
            If Left(Trim(Range("Version")), 3) = "DSH" Then
                varVersion = Mid(Trim(Range("Version").Formula), 13, 4)
            Else
                varVersion = Range("Version").Value
            End If
            
            Select Case varVersion
            Case 5 To 5.09
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion5.00Header").Row
            Case 5.1 To 5.99
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion5.10Header").Row
            Case 6 To 6.02
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion6Header").Row
            Case 6.02 To 6.09
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion6.03Header").Row
            Case 7 To 7.02
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion6Header").Row
            Case 7.02 To 7.09
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion6.03Header").Row
            Case 7.1 To 7.19
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion7Header").Row
            Case 7.2 To 7.24
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion7.20Header").Row
            Case 7.25 To 7.29
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRVersion7.25Header").Row
            Case Else
                GoTo ERRHandler:
            End Select
                        
            curCol = 1
            Do While Len(Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intColHeading, curCol).Value) > 0
                If Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value = "" Then
                    ' do nothing
                Else
                    strEval = Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value
                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
                       'set the formula of the header row
                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
                        ' copy the formula to the data row
                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).FormulaR1C1
                        ' restore header contents
                        Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value = strEval
                    Else
                    Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(headerRow, curCol).Value)
                    End If
                End If
                
                curCol = curCol + 1
            Loop
             
             Workbooks(strMasterFile).Worksheets("CR Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("CR Year Data").Range("CRImportDates").Column).Value = currentDate
                        
            'Update values from DSH Survey Files
            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("A" & intRow).Value = strProvName
            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("D" & intRow).Value = strMcaidNum
            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("E" & intRow).Value = strSubNum1
            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("F" & intRow).Value = strSubNum2
            Workbooks(strMasterFile).Worksheets("CR Year Data").Range("G" & intRow).Value = strMcareNum
            
           End If
                           
                           
         'Add Notes from SURVEY
             
            'Find and clear notes with same Mcaid Number and State Fiscal Year Survey Origination Already in Statewide file
            intNoteRow = FindCostReportNotes("New", strMasterFile, strMcaidNum, varFYE, "")
            
            intNoteCount = 1
            intNotesBegin = 9
            intNoteColumn = 1
            
            Dim WS As Worksheet
            
            Do While intNoteCount < 26
            
                Set WS = VBAProject.GetWorksheetByCodeName(Workbooks(strFileName(f)), "Sheet30")
                
                If Len(WS.Cells(intNotesBegin, 2)) > 0 Then
                
                    With Workbooks(strMasterFile).Worksheets("Notes")
                    
                        .Cells(intNoteRow, intNoteColumn).Value = strMcaidNum
                        .Cells(intNoteRow, intNoteColumn + 1).Value = strMcareNum
                        .Cells(intNoteRow, intNoteColumn + 2).Value = strProvName
                        
                        'Get Note Description
                        .Cells(intNoteRow, intNoteColumn + 3).Value = WS.Cells(intNotesBegin, 2)
                        
                        'Get Note Amount
                        .Cells(intNoteRow, intNoteColumn + 4).Value = WS.Cells(intNotesBegin, 12)
                        
                        'Get C/R Period 1
                        .Cells(intNoteRow, intNoteColumn + 5).Value = varFYE
                        .Cells(intNoteRow, intNoteColumn + 26).Value = currentDate
                        
                    End With
                    
                End If
                
                intNoteCount = intNoteCount + 1
                intNotesBegin = intNotesBegin + 1
                intNoteRow = intNoteRow + 1
                
            Loop
            
NextFile:
 Workbooks(strFileName(f)).Close False
    
    Next f
 
 Application.EnableEvents = True
 Application.ScreenUpdating = True
 Application.Calculation = xlCalculationAutomatic
 Exit Sub
 
 
 
 
ERRHandler:
Dim intErrRow As Integer
Dim intSelection As Integer
intErrRow = 1
    Do
      intErrRow = intErrRow + 1
      intSelection = Len(Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Formula)
    Loop Until intSelection = 0
Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Value = Workbooks(strFileName(f)).Name
Workbooks(strMasterFile).Worksheets("ERRORS").Range("B" & intErrRow).Value = currentDate
Workbooks(strMasterFile).Worksheets("ERRORS").Range("C" & intErrRow).Value = Err.Number
Workbooks(strMasterFile).Worksheets("ERRORS").Range("D" & intErrRow).Value = Err.Description
Workbooks(strMasterFile).Worksheets("ERRORS").Range("E" & intErrRow).Value = "Import_Surveys_Pt2_V510"

Resume NextFile:
 
End Sub

Sub Import_RHC_Data_V531()

Dim strMasterFile As String
Dim vDirAndFilename As Variant
Dim strFileName(500) As String
Dim f As Integer
Dim intRow As Integer
Dim intNotesBegin As Integer
Dim intNoteColumn As Integer
Dim intNoteRow As Integer
Dim intNoteCount As Integer
Dim varFYE
Dim intYear As Integer
Dim strMcaidNum As String
Dim strSubNum1 As String
Dim strSubNum2 As String
Dim strMcareNum As String
Dim strProvName As String
Dim currentDate
Dim headerRow As Integer
Dim curCol As Integer
Dim strEval As String
Dim intColHeading As Integer
Dim varVersion As Variant

With Worksheets("CR Year RHC Data")
  If .FilterMode Then
     .ShowAllData
  End If
End With

With Worksheets("Notes")
  If .FilterMode Then
     .ShowAllData
  End If
End With

Application.EnableEvents = True

strMasterFile = ActiveWorkbook.Name

    vDirAndFilename = Application.GetOpenFilename("Microsoft Excel Workbooks,*.xls;*.xlt;*.xlsm;*.xlsx", 1, "Select One Or More Rural Health Clinic DSH Surveys To Import", , True)
    
    If TypeName(vDirAndFilename) = "Boolean" Then Exit Sub
    
    intNoteRow = 1
    
    For f = 1 To UBound(vDirAndFilename)
       On Error GoTo ERRHandler:
        
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        Workbooks.Open vDirAndFilename(f), False, , , , , , , , True
        
        strFileName(f) = ActiveWorkbook.Name
                    
        'Get Cost Report Variable Fields
          If Range("ProvNameADJ_ADJ").Value = 0 Or Len(Trim(Range("ProvNameADJ_ADJ").Value)) = 0 Then
               strProvName = Worksheets("Sec. L, M, N CR Data ADJ").Range("ProvName_ADJ").Value
            Else
              strProvName = Range("ProvNameADJ_ADJ").Value
          End If
            
          If Range("McaidNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McaidNumADJ_ADJ").Value)) = 0 Then
             strMcaidNum = Worksheets("Sec. L, M, N CR Data ADJ").Range("McaidNum_ADJ").Value
          Else
             strMcaidNum = Range("McaidNumADJ_ADJ").Value
          End If
          
          If Range("McareNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McareNumADJ_ADJ").Value)) = 0 Then
             strMcareNum = Worksheets("Sec. L, M, N CR Data ADJ").Range("McareNum_ADJ").Value
          Else
             strMcareNum = Range("McareNumAdj_ADJ").Value
          End If
                        
        currentDate = Now()
             
        intYear = 1
                         
           If IsDate(Range("FYE_" & intYear & "_ADJ")) Then
               
            'Search for Mcaidnum and FYE - if exists go to that line and overwrite if not then go to first blank line and add
            varFYE = Range("FYE_" & intYear & "_ADJ").Value
            intRow = FindCostReport(strMasterFile, strMcaidNum, varFYE, "CR Year RHC Data")
            
            'Clear contents of non-formula fields
            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("A" & intRow & ":" & "GM" & intRow).ClearContents
            
             'Evaluate formulas and load
            If Left(Trim(Range("Version_ADJ")), 3) = "RHC" Then
                varVersion = Mid(Trim(Range("Version_ADJ").Formula), 17, 4)
            Else
                varVersion = Range("Version_ADJ").Value
            End If
            
            Select Case varVersion
            Case 1 To 5.99
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCVersion1.01Header").Row
            Case 6 To 6.09
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCVersion6Header").Row
            Case 6.1 To 6.99
                headerRow = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCVersion6.10Header").Row
            End Select
    
            intColHeading = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCColHeadings").Row
            curCol = 1
            Do While Len(Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intColHeading, curCol).Value) > 0
                If Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value = "" Then
                    ' do nothing
                Else
                    strEval = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value
                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
                       'set the formula of the header row
                        Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
                        ' copy the formula to the data row
                        Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).FormulaR1C1
                        ' restore header contents
                        Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value = strEval
                    Else
                    Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value)
                    End If
                End If
                
                curCol = curCol + 1
             Loop
            
           'Update values from DSH Calculation Templates
            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCImportDates").Column).Value = currentDate
                        
            'Update values from DSH Survey Files
            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("A" & intRow).Value = strProvName
            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("D" & intRow).Value = strMcaidNum
            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("G" & intRow).Value = strMcareNum
            
           End If
                           
                           
         'Add Notes from SURVEY
             
            'Find and clear notes with same Mcaid Number and State Fiscal Year Survey Origination Already in Statewide file
            intNoteRow = FindCostReportNotes("New", strMasterFile, strMcaidNum, varFYE, "RHC")
            
            intNoteCount = 1
            intNotesBegin = 9
            intNoteColumn = 1
            
            Dim WS As Worksheet
            
            Do While intNoteCount < 26
            
                Set WS = VBAProject.GetWorksheetByCodeName(Workbooks(strFileName(f)), "Sheet30")
                
                If Len(WS.Cells(intNotesBegin, 2)) > 0 Then
                
                    With Workbooks(strMasterFile).Worksheets("Notes")
                    
                        .Cells(intNoteRow, intNoteColumn).Value = strMcaidNum
                        .Cells(intNoteRow, intNoteColumn + 1).Value = strMcareNum
                        .Cells(intNoteRow, intNoteColumn + 2).Value = strProvName
                        
                        'Get Note Description
                        .Cells(intNoteRow, intNoteColumn + 3).Value = WS.Cells(intNotesBegin, 2)
                        
                        'Get Note Amount
                        .Cells(intNoteRow, intNoteColumn + 4).Value = WS.Cells(intNotesBegin, 12)
                        
                        'Get C/R Period 1
                        .Cells(intNoteRow, intNoteColumn + 5).Value = varFYE
                        
                        'Add RHC indicator
                        .Cells(intNoteRow, intNoteColumn + 10).Value = "RHC"
                        .Cells(intNoteRow, intNoteColumn + 26).Value = currentDate
                        
                    End With
                    
                End If
                
                intNoteCount = intNoteCount + 1
                intNotesBegin = intNotesBegin + 1
                intNoteRow = intNoteRow + 1
                
            Loop
            
NextFile:
        Workbooks(strFileName(f)).Close False
    
    Next f
 
 Application.EnableEvents = True
 Application.ScreenUpdating = True
 Application.Calculation = xlCalculationAutomatic
 Exit Sub
 
 
ERRHandler:
Dim intErrRow As Integer
Dim intSelection As Integer

intErrRow = 0

    Do
      intErrRow = intErrRow + 1
      intSelection = Len(Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Formula)
    Loop Until intSelection = 0
    
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Value = Workbooks(strFileName(f)).Name
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("B" & intErrRow).Value = currentDate
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("C" & intErrRow).Value = Err.Number
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("D" & intErrRow).Value = Err.Description
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("E" & intErrRow).Value = "Import_RHC_Data_V531"
 
 Resume NextFile:
 
 
End Sub

Sub Import_DSH_Data_V501()

Dim strMasterFile As String
Dim vDirAndFilename As Variant
Dim strFileName(500) As String
Dim f As Integer
Dim varSFY
Dim strMcaidNum As String
Dim strEval As String
Dim intRow As Integer
Dim curCol As Integer
Dim headerRow As Integer
Dim currentDate
Dim intColHeading As Integer
Dim varVersion As Variant

With Worksheets("DSH Year Data")
  If .FilterMode Then
     .ShowAllData
  End If
End With


Application.EnableEvents = True

strMasterFile = ActiveWorkbook.Name

    vDirAndFilename = Application.GetOpenFilename("Microsoft Excel Workbooks,*.xls;*.xlt;*.xlsm;*.xlsx", 1, "Select One Or More DSH Surveys Part I (v5.00 and up) To Import", , True)
    
    If TypeName(vDirAndFilename) = "Boolean" Then Exit Sub
    
    intRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHColHeadings").Row + 1
   
    For f = 1 To UBound(vDirAndFilename)
        On Error GoTo ERRHandler:
        
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        Workbooks.Open vDirAndFilename(f), False, , , , , , , , True
        
        strFileName(f) = ActiveWorkbook.Name
                 
        strMcaidNum = Range("McaidNum_ADJ").Value
        varSFY = Range("DSH_Year_End_ADJ").Value
         
        intRow = FindStateFiscalYear(strMasterFile, strMcaidNum, varSFY)
            
        'Clear contents of non-formula fields
         Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("A" & intRow & ":" & "V" & intRow).ClearContents
            
        'Evaluate formulas and load
            intColHeading = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHColHeadings").Row
            
            If Left(Trim(Range("Version")), 3) = "DSH" Then
                varVersion = Mid(Trim(Range("Version").Formula), 13, 4)
            Else
                varVersion = Range("Version").Value
            End If
            
            Select Case varVersion
            Case 5 To 5.19
                headerRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHVersion5.01Header").Row
            Case 5.2 To 5.99
                headerRow = Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHVersion5.2Header").Row
            End Select
        
           curCol = 1
            Do While Len(Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intColHeading, curCol).Value) > 0
                If Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value = "" Then
                    ' do nothing
                Else
                    strEval = Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value
                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
                       'set the formula of the header row
                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
                        ' copy the formula to the data row
                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).FormulaR1C1
                        ' restore header contents
                        Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value = strEval
                    Else
                    Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(headerRow, curCol).Value)
                    End If
                End If
                
                curCol = curCol + 1
             Loop
            currentDate = Now()
            
            'Update values from DSH Calculation Templates
            Workbooks(strMasterFile).Worksheets("DSH Year Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("DSH Year Data").Range("DSHImportDates").Column).Value = currentDate
            
            
NextFile:
        Workbooks(strFileName(f)).Close False
    
    Next f
 
 Application.EnableEvents = True
 Application.ScreenUpdating = True
 Application.Calculation = xlCalculationAutomatic
 Exit Sub
 
 
ERRHandler:
Dim intErrRow As Integer
Dim intSelection As Integer

intErrRow = 0

    Do
      intErrRow = intErrRow + 1
      intSelection = Len(Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Formula)
    Loop Until intSelection = 0
    
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Value = Workbooks(strFileName(f)).Name
 currentDate = Now()
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("B" & intErrRow).Value = currentDate
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("C" & intErrRow).Value = Err.Number
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("D" & intErrRow).Value = Err.Description
 Workbooks(strMasterFile).Worksheets("ERRORS").Range("E" & intErrRow).Value = "Import_DSH_Data_V501"
 
 Resume NextFile:
 
End Sub
'Sub Import_RHC_Data_V101()
'
'Dim strMasterFile As String
'Dim vDirAndFilename As Variant
'Dim strFileName(500) As String
'Dim f As Integer
'Dim intRow As Integer
'Dim intNotesBegin As Integer
'Dim intNoteColumn As Integer
'Dim intNoteRow As Integer
'Dim intNoteCount As Integer
'Dim varFYE
'Dim intYear As Integer
'Dim strMcaidNum As String
'Dim strSubNum1 As String
'Dim strSubNum2 As String
'Dim strMcareNum As String
'Dim strProvName As String
'Dim currentDate
'Dim headerRow As Integer
'Dim curCol As Integer
'Dim strEval As String
'Dim intColHeading As Integer
'Dim varVersion As Variant
'
'With Worksheets("CR Year RHC Data")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'With Worksheets("Notes")
'  If .FilterMode Then
'     .ShowAllData
'  End If
'End With
'
'Application.EnableEvents = True
'
'strMasterFile = ActiveWorkbook.Name
'
'    vDirAndFilename = Application.GetOpenFilename("Microsoft Excel Workbooks,*.xls;*.xlt;*.xlsm;*.xlsx", 1, "Select One Or More Rural Health Clinic DSH Surveys To Import", , True)
'
'    If TypeName(vDirAndFilename) = "Boolean" Then Exit Sub
'
'    intNoteRow = 1
'
'    For f = 1 To UBound(vDirAndFilename)
'        On Error GoTo ERRHandler:
'
'        Application.EnableEvents = False
'        Application.ScreenUpdating = False
'        Application.Calculation = xlCalculationManual
'        Workbooks.Open vDirAndFilename(f), False, , , , , , , , True
'
'        strFileName(f) = ActiveWorkbook.Name
'
'        'Get Cost Report Variable Fields
'          If Range("ProvNameADJ_ADJ").Value = 0 Or Len(Trim(Range("ProvNameADJ_ADJ").Value)) = 0 Then
'               strProvName = Range("ProvName_ADJ").Value
'            Else
'              strProvName = Range("ProvNameADJ_ADJ").Value
'          End If
'
'          If Range("McaidNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McaidNumADJ_ADJ").Value)) = 0 Then
'             strMcaidNum = Range("McaidNum_ADJ").Value
'          Else
'             strMcaidNum = Range("McaidNumADJ_ADJ").Value
'          End If
'
'          If Range("McareNumADJ_ADJ").Value = 0 Or Len(Trim(Range("McareNumADJ_ADJ").Value)) = 0 Then
'             strMcareNum = Range("McareNum_ADJ").Value
'          Else
'             strMcareNum = Range("McareNumAdj_ADJ").Value
'          End If
'
'        currentDate = Now()
'
'        intYear = 1
'
'           If IsDate(Range("FYE_" & intYear & "_ADJ")) Then
'
'            'Search for Mcaidnum and FYE - if exists go to that line and overwrite if not then go to first blank line and add
'            varFYE = Range("FYE_" & intYear & "_ADJ").Value
'            intRow = FindCostReport(strMasterFile, strMcaidNum, varFYE, "CR Year RHC Data")
'
'            'Clear contents of non-formula fields
'            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("A" & intRow & ":" & "GM" & intRow).ClearContents
'
'             'Evaluate formulas and load
'            If Left(Trim(Range("Version")), 3) = "RHC" Then
'                varVersion = Mid(Trim(Range("Version").Formula), 17, 4)
'            Else
'                varVersion = Range("Version").Value
'            End If
'
'            Select Case varVersion
'            Case 1 To 5.99
'                headerRow = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCVersion1.01Header").Row
'            Case 6 To 6.99
'                headerRow = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCVersion6Header").Row
'            End Select
'
'            intColHeading = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCColHeadings").Row
'            curCol = 1
'            Do While Len(Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value) > 0 Or Len(Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intColHeading, curCol).Value) > 0
'                If Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value = "" Then
'                    ' do nothing
'                Else
'                    strEval = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value
'                    If Left(strEval, 2) = "<<" And Right(strEval, 2) = ">>" Then
'                       'set the formula of the header row
'                        Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Formula = "=" & Mid(strEval, 3, Len(strEval) - 4)
'                        ' copy the formula to the data row
'                        Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, curCol).FormulaR1C1 = Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).FormulaR1C1
'                        ' restore header contents
'                        Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value = strEval
'                    Else
'                    Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, curCol).Value = Evaluate("=" & Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(headerRow, curCol).Value)
'                    End If
'                End If
'
'                curCol = curCol + 1
'             Loop
'
'           'Update values from DSH Calculation Templates
'            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Cells(intRow, Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("RHCImportDates").Column).Value = currentDate
'
'            'Update values from DSH Survey Files
'            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("A" & intRow).Value = strProvName
'            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("D" & intRow).Value = strMcaidNum
'            Workbooks(strMasterFile).Worksheets("CR Year RHC Data").Range("G" & intRow).Value = strMcareNum
'
'           End If
'
'
'         'Add Notes from SURVEY
'
'            'Find and clear notes with same Mcaid Number and State Fiscal Year Survey Origination Already in Statewide file
'            intNoteRow = FindCostReportNotes("New", strMasterFile, strMcaidNum, varFYE, "RHC")
'
'            intNoteCount = 1
'            intNotesBegin = 9
'            intNoteColumn = 1
'
'            Dim WS As Worksheet
'
'            Do While intNoteCount < 26
'
'                Set WS = VBAProject.GetWorksheetByCodeName(Workbooks(strFileName(f)), "Sheet30")
'
'                If Len(WS.Cells(intNotesBegin, 2)) > 0 Then
'
'                    With Workbooks(strMasterFile).Worksheets("Notes")
'
'                        .Cells(intNoteRow, intNoteColumn).Value = strMcaidNum
'                        .Cells(intNoteRow, intNoteColumn + 1).Value = strMcareNum
'                        .Cells(intNoteRow, intNoteColumn + 2).Value = strProvName
'
'                        'Get Note Description
'                        .Cells(intNoteRow, intNoteColumn + 3).Value = WS.Cells(intNotesBegin, 2)
'
'                        'Get Note Amount
'                        .Cells(intNoteRow, intNoteColumn + 4).Value = .Cells(intNotesBegin, 12)
'
'                        'Get C/R Period 1
'                        .Cells(intNoteRow, intNoteColumn + 5).Value = varFYE
'
'                        'Add RHC indicator
'                        .Cells(intNoteRow, intNoteColumn + 10).Value = "RHC"
'                        .Cells(intNoteRow, intNoteColumn + 26).Value = currentDate
'
'                    End With
'
'                End If
'
'                intNoteCount = intNoteCount + 1
'                intNotesBegin = intNotesBegin + 1
'                intNoteRow = intNoteRow + 1
'
'            Loop
'
'NextFile:
'        Workbooks(strFileName(f)).Close False
'
'    Next f
'
' Application.EnableEvents = True
' Application.ScreenUpdating = True
' Application.Calculation = xlCalculationAutomatic
' Exit Sub
'
'
'ERRHandler:
'Dim intErrRow As Integer
'Dim intSelection As Integer
'
'intErrRow = 0
'
'    Do
'      intErrRow = intErrRow + 1
'      intSelection = Len(Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Formula)
'    Loop Until intSelection = 0
'
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("A" & intErrRow).Value = Workbooks(strFileName(f)).Name
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("B" & intErrRow).Value = currentDate
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("C" & intErrRow).Value = Err.Number
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("D" & intErrRow).Value = Err.Description
' Workbooks(strMasterFile).Worksheets("ERRORS").Range("E" & intErrRow).Value = "Import_RHC_Data_V101"
'
' Resume NextFile:
'
'
'End Sub

Public Function GetWorksheetByCodeName(Workbook As Workbook, CodeName As String)

    Dim WS As Worksheet
    
    For Each WS In Workbook.Worksheets
    
        If WS.CodeName = CodeName Then
            Set GetWorksheetByCodeName = WS
            Exit Function
        End If
        
    Next WS
    
End Function
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Const strToolbar As String = "DSH"

    On Error Resume Next
    If Application.CommandBars(strToolbar).Name = strToolbar Then
        Application.CommandBars(strToolbar).Delete
    End If
    On Error GoTo 0

End Sub

Private Sub Workbook_Open()

    Application.WindowState = xlMaximized
    Worksheets("DSH Year Data").Activate
    Run "Sheet2.Worksheet_Activate"
    ActiveWindow.WindowState = xlMaximized

End Sub



INQUEST-PP=macro
