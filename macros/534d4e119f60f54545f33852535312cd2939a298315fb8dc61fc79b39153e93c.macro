Attribute VB_Name = "Module1"
  
  
  Function TCtoframes(TC As Long, Optional ByVal fps As Double = 25#)
  
  'Donne le nombre d'images pour un Time Code donn|fffd|.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'Si fps est 29.97, le Time Code est interpr|fffd|t|fffd| en NTSC drop frame.
  'TCtoframes(00:00:02:05;24)=53
  'TCtoframes(00:00:02:05;25)=55
  'TCtoframes(00:00:02:05)=55
  
  Dim f As Long
  Dim s As Long
  Dim m As Long
  Dim h As Long
  Dim sign As Long
  Dim drop As Boolean
  Dim frames As Long
  
  sign = 1
  If TC < 0 Then
    sign = -1
    TC = -TC
  End If
  
  If fps <= 0 Then
  fps = 25
  End If

  drop = False
  If fps = 29.97 Then
    drop = True
    fps = 30
  ElseIf fps = 59.94 Then
    drop = True
    fps = 60
  ElseIf fps = 23.98 Then
    fps = 24
  End If
  
  f = TC Mod 100
  s = (TC \ 100) Mod 100
  m = (TC \ 10000) Mod 100
  h = TC \ 1000000
  
  frames = f + fps * (s + 60 * m + 3600 * h) * sign
  If drop Then
   frames = TCdropit(frames, fps)
  End If
  frames = TCNormalize(frames, fps)
  TCtoframes = frames

    
  End Function
  
  
  
  Private Function TCNormalize(frames As Long, Optional ByVal fps As Double = 25#)
  ' Forces to frames be between 0 an 24h
  Dim unit As Long
  Dim fraction As Long
  If fps <= 0 Then
  fps = 25
  End If
  unit = TC24hours(fps)
    If frames < 0 Then
        fraction = (-fraction) \ unit
        frames = frames + (fraction + 1) * unit
    End If
  TCNormalize = frames Mod unit
  End Function
  
  Private Function TC24hours(ByVal fps As Double)
    If fps = 29.97 Then
    TC24hours = 17982# * 6# * 24#
  ElseIf fps = 59.94 Then
    TC24hours = 17982# * 6# * 24# * 2#
    ElseIf fps = 23.98 Then
    TC24hours = 24# * 60# * 60# * 24#
  Else
    TC24hours = fps * 60# * 60# * 24#
  End If
  End Function
  
  Private Function TCdropit(frames As Long, fps As Double)
      Dim minutes As Long
      Dim tenminutes As Long
     Dim multiplier As Long
      Dim dropbit As Long

     If fps = 60 Then
    multiplier = 2
  Else
   multiplier = 1
  End If

    minutes = frames \ 1800 * multiplier
    tenminutes = frames \ 18000 * multiplier
     If (frames Mod (1800 * multiplier)) = 0 And (frames Mod (18000 * multiplier)) > 0 Then
        dropbit = 1 * multiplier
    Else
    dropbit = 0
  End If
  TCdropit = frames - 2 * minutes * multiplier + 2 * tenminutes * multiplier + dropbit
  End Function
  Private Function TCundropit(frames As Long, fps As Double)
      Dim minutes As Long
      Dim tenminutes As Long
      Dim dropbit As Long
      Dim multiplier As Long
      Dim framesoffset As Long
  
  If fps = 60 Then
    multiplier = 2
  Else
   multiplier = 1
  End If
  
  tenminutes = frames \ (17982 * multiplier)
  minutes = (frames - tenminutes * 17982 * multiplier) \ (1798 * multiplier)
  framesoffset = frames - tenminutes * 17982 * multiplier - minutes * 1798 * multiplier
  If minutes > 0 And framesoffset < 2 * multiplier Then
    dropbit = -2 * multiplier
  Else
    dropbit = 0
  End If
  TCundropit = tenminutes * 18000 * multiplier + minutes * 1800 * multiplier + framesoffset + dropbit
  End Function
  
  Function framestoTC(frames As Long, Optional ByVal fps As Double = 25#)
  
  'Donne le Time Code pour un nombre d'images donn|fffd|es.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'Si fps est 29.97, le Time Code est interpr|fffd|t|fffd| en NTSC drop frame.
  'framestoTC(53;24)=00:00:02:05
  
    Dim f As Long
    Dim s As Long
    Dim m As Long
    Dim h As Long
    Dim sign As Long
    Dim drop As Boolean
    Dim TC As Long
    Dim unit As Long
    
    If fps <= 0 Then
    fps = 25
    End If
    
  frames = TCNormalize(frames, fps)
  
  drop = False
  If fps = 29.97 Then
    drop = True
    fps = 30
  ElseIf fps = 59.94 Then
    drop = True
    fps = 60
  ElseIf fps = 23.98 Then
    fps = 24
  End If
  
  If drop Then
   frames = TCundropit(frames, fps)
  End If
  
  f = frames Mod fps
  s = (frames \ fps) Mod 60
  m = (frames \ (60 * fps)) Mod 60
  h = (frames \ (3600 * fps)) Mod 24
  
  framestoTC = f + 100 * s + 10000 * m + 1000000 * h
  
  
  
  End Function
  
  Function TCplus(TC1 As Long, TC2 As Long, Optional fps As Double = 25#)
  'Donne TC1+TC2.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'TCplus(01:00:01:02;00:00:03:00;25)=01:00:04:02
  
  Dim frames1 As Long
  Dim frames2 As Long
  Dim frames As Long
  
  frames1 = TCtoframes(TC1, fps)
  frames2 = TCtoframes(TC2, fps)
  
  frames = frames1 + frames2
  
  TCplus = framestoTC(frames, fps)
  End Function
Function TCminus(TC1 As Long, TC2 As Long, Optional fps As Double = 25#)

 'Donne TC1-TC2.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'TCminus(01:00:01:02;00:00:03:00)=00:59:58:02
  Dim frames1 As Long
  Dim frames2 As Long
  Dim frames As Long
  
  frames1 = TCtoframes(TC1, fps)
  frames2 = TCtoframes(TC2, fps)
  
  frames = frames1 - frames2
  
  TCminus = framestoTC(frames, fps)

End Function
Function TCmult(TC1 As Long, facteur As Double, Optional fps As Double = 25#)
  'Donne TC1* facteur.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'TCmult(00:00:02:05;2)=00:00:04:10
  
  Dim frames1 As Long
  Dim frames As Long
  
  frames1 = TCtoframes(TC1, fps)
  
  frames = frames1 * facteur
  
  TCmult = framestoTC(frames, fps)
  
End Function
  Function TCdiv(TC1 As Long, facteur As Double, Optional fps As Double = 25#) As Variant
  'Donne TC1/ facteur.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  
  Dim frames1 As Long
  Dim frames As Long
  
  If facteur = 0# Then
    TCdiv = CVErr(xlErrDiv0)
    Return
  End If
  
  frames1 = TCtoframes(TC1, fps)
  
  frames = frames1 / facteur
  
  TCdiv = framestoTC(frames, fps)
  
End Function
 
  Function TCsum(TCref As Range, Optional fps As Double = 25#)
  'Additionne une plage de cellules indiqu|fffd| par TCref. Cette fonction est tr|fffd|s souple, quoique un peu lente. Vous pouvez vous r|fffd|f|fffd|rer par exemple |fffd| toute une colonne pour calculer les dur|fffd|es. Vous pouvez donner les Time Code en chiffre comme dans les autres fonctions ou en format texte. Cette fonction est la seule |fffd| accepter aussi des arguments en format texte. P.e. vous pouvez facilement traiter un fichier EDL import|fffd|. Elle ne donne pas des erreurs si des champs r|fffd|f|fffd|r|fffd|s sont partiellement remplis de textes ou vide.
  'TCref se r|fffd|f|fffd|re |fffd| une plage de cellules (plage, colonne, ligne), r|fffd|f|fffd|r|fffd| par les adresses ou par un nom pr|fffd|d|fffd|fini.
  'L 'indication de fps est facultative (d|fffd|faut 25).
  Dim frames As Long
  Dim c As Range
  Dim TC As Long
  For Each c In TCref
        TC = c.Value
        frames = frames + TCtoframes(TC, fps)
  Next c
  
  TCsum = framestoTC(frames, fps)
  
  End Function
  
  Function TCtrans(TC As Long, fromfps As Double, Optional tofps As Double = 25#)
  'Change la rate d'images pour un Time Code donn|fffd|e.
  'L 'indication de tofps est facultative (d|fffd|faut 25).
  'TCtrans(00:00:01:02;24;25)=00:00:01:01
  
  Dim frames As Long
  frames = TCtoframes(TC, fromfps)
  TCtrans = framestoTC(frames, tofps)
  
  End Function
  
  Function TCtofeet(TC As Long, Optional gauge As Long = 35, Optional fps As Double = 25#)
 'Donne la longueur en pieds pour un Time Code et une fps donn|fffd|e.
  'Pour gauge on peut mettre 16 ou 35 (35 d|fffd|faut)
  '16mm: 40 images/pied, 35mm: 16 images/pied
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'Le r|fffd|sultat est donn|fffd| en pied.images (et pas des fractions de pieds)
  'TCtofeet(00:00:01:00;35;25)=1.09
  'TCtofeet(00:00:01:00;16;25)=0.25
  
  Dim frames As Long
  frames = TCtoframes(TC, fps)
  TCtofeet = framestofeet(frames, gauge)
  
  End Function
  
  Private Function framestofeet(frames As Long, Optional gauge As Long = 35)
  Dim g As Long
  Select Case gauge
  Case 16
    g = 40
  Case 35
    g = 16
  Case Else
    g = 40
  End Select
  framestofeet = frames \ g + (frames Mod g) / 100
  End Function
  Function feettoTC(feet As Double, Optional gauge As Long = 35, Optional fps As Double = 25#)
  'Donne le Time Code pour une longueur en pied donn|fffd|e.
  'Pour gauge on peut mettre 16 ou 35 (35 d|fffd|faut)
  '16mm: 40 images/pied, 35mm: 16 images/pied
  'L 'indication de fps est facultative (d|fffd|faut 25).
  'Feet doit |fffd|tre donn|fffd|e en pied.images (et pas des fractions de pieds)
  
  Dim frames As Long
  frames = feettoframes(feet, gauge)
  feettoTC = framestoTC(frames, fps)
  End Function
  Private Function feettoframes(feet As Double, Optional gauge As Long = 35)
  Dim g As Long
  Select Case gauge
  Case 16
    g = 40
  Case 35
    g = 16
  Case Else
    g = 40
  End Select
  feettoframes = Application.Floor(feet) * g + 100 * (feet - Application.Floor(feet))
  End Function
  
  Function TCtometer(TC As Long, Optional gauge As Long = 35, Optional fps As Double = 25#)
 'Comme avec les pieds, mais avec meter.cm (1 pied = 0.3048 m)
  
  Dim frames As Long
  frames = TCtoframes(TC, fps)
  TCtometer = framestometer(frames, gauge)
  
  End Function
  
  Private Function framestometer(frames As Long, Optional gauge As Long = 35)
  Dim g As Double
  Select Case gauge
  Case 16
    g = 40# / 0.3048
  Case 35
    g = 16# / 0.3048
  Case Else
    g = 40# / 0.3048
  End Select
  framestometer = frames / g
  End Function
  
  Function metertoTC(meter As Double, Optional gauge As Long = 35, Optional fps As Double = 25#)
  ' Comme avec les pieds, mais avec meter.cm (1 pied = 0.3048 m)
  
  Dim frames As Long
  frames = metertoframes(meter, gauge)
  metertoTC = framestoTC(frames, fps)
  End Function
  
  Private Function metertoframes(meter As Double, Optional gauge As Long = 35)
  Dim g As Double
  Select Case gauge
  Case 16
    g = 40# / 0.3048
  Case 35
    g = 16# / 0.3048
  Case Else
    g = 40# / 0.3048
  End Select
  metertoframes = meter * g
  End Function
 
  Function timetoTC(time As Double, Optional fps As Double = 25#)
    'Donne le Time Code pour un temps donn|fffd| dans la norme Macintosh (24h=1).
    Dim fps2 As Double
    Dim secondsperday As Double
    Dim frames As Long
    Select Case fps
    Case 23.98
    fps2 = 24# * 1000# / 1001#
    Case 29.97
     fps2 = 30# * 1000# / 1001#
    Case 59.94
    fps2 = 60# * 1000# / 1001#
    Case Else
        fps2 = fps
    End Select
    
    secondsperday = 24# * 3600#
    frames = secondsperday * fps2
    frames = frames * time
    timetoTC = framestoTC(frames, fps)
    
  End Function
  
  Function TCtotime(TC As Long, Optional fps As Double = 25#)
   'Donne le temps norme Macintosh pour un Time Code donn|fffd|
   
   Dim fps2 As Double
    Dim secondsperday As Double
    Dim frames As Long
    Dim time As Double
    Select Case fps
    Case 23.98
    fps2 = 24# * 1000# / 1001#
    Case 29.97
     fps2 = 30# * 1000# / 1001#
    Case 59.94
    fps2 = 60# * 1000# / 1001#
    Case Else
        fps2 = fps
    End Select
    
    frames = TCtoframes(TC, fps)
    secondsperday = 24# * 3600#
    time = frames / secondsperday / fps2
    
   TCtotime = time
   
  End Function
 
  Function texttoTC(text As String)
  
   'Transforme un Time Code en format texte ("00:00:00:00") en Time Code chiffre pour l'utilisation dans les calculs.
  'Des espaces seront omises, mais le Time Code doit avoir les 8 chiffres et les interponctions (":" ou autres) pour |fffd|tre bien interpr|fffd|t|fffd|.
  'Utile pour une traduction des EDL (Edit Decision List) import|fffd|s.
  'texttoTC(01:00:01:17) = 01000117
    Dim TC As Long
    texttoTC = Val(Replace(Replace(Replace(text, ":", ""), ";", ""), ".", ""))
  
  End Function
  
  Function TCtotext(TC As Long, Optional fps As Double = 25#)
  'Transforme un Time Code calcul|fffd| en format texte explicite ("00:00:00:00").
  'Pour exporter une liste des calculs dans un autre logiciels ou vers un |fffd|diteur.
  'Pour refaire de calculs, il faut retransformer le Time Code avec texttoTC.
  'TCtotext(1000117) = "01:00:01:17"
  'L 'indication de fps est facultative. Elle est 25 par d|fffd|faut.
  'Si fps est 29.97, le format et drop frame ("00:00:00;00").
  'Nouveau: isTC(TC;fps)
  
    If fps = 29.97 Or fps = 59.94 Then
    TCtotext = Format(TC \ 100, "00\:00\:00") + ";" + Format(TC Mod 100, "00")
  Else
    TCtotext = Format(TC, "00\:00\:00\:00")
  End If
  
  End Function

  Function isTC(TC As Long, Optional fps As Double = 25#)
    'Indique si le Time Code a une valeur l|fffd|gale, pour une fps donn|fffd|e. La valeur est VRAI, si les frames sont en-desous de fps, les secondes et minutes en dessous de 60 et les heures positives et en-dessous de 24. Dans tous les autres cas, le valeur est FAUX.
  'L 'indication de fps est facultative (d|fffd|faut 25). Si fps est 29.97, le test se porte aussi sur les valeurs l|fffd|gales du NTSC Drop Frame.
  Dim test As Boolean
  test = TC > 0
  test = test And (TC < 24000000)
  test = test And (TC Mod 1000000 < 600000)
  test = test And (TC Mod 10000 < 6000)
  test = test And (TC Mod 100 < fps)
  If fps = 29.97 Or fps = 59.94 Then
    isTC = (test And ((TC Mod 10000 > 1) Or ((TC Mod 1000000) \ 10000 = 0)))
  Else
    isTC = test
  End If
  End Function
  
Sub AddTimecodeStyle()
'
' AddTimecodeStyle Macro
'
' Keyboard Shortcut: Option+Cmd+Shift+T
'
    Application.StatusBar = "TC.XLA 1.3b3 |fffd| Matthias Buercher 1997-2017 www.belle-nuit.com"
    
    On Error GoTo StyleError
    
    ActiveWorkbook.Styles.Add Name:="TimeCode"
    With ActiveWorkbook.Styles("TimeCode")
        .IncludeNumber = True
        .IncludeFont = False
        .IncludeAlignment = False
        .IncludeBorder = False
        .IncludePatterns = False
        .IncludeProtection = False
    End With
    ActiveWorkbook.Styles("TimeCode").NumberFormat = "00\:00\:00\:00"
    
    
    ActiveWorkbook.Styles.Add Name:="TimeCode DF"
    With ActiveWorkbook.Styles("TimeCode DF")
        .IncludeNumber = True
        .IncludeFont = False
        .IncludeAlignment = False
        .IncludeBorder = False
        .IncludePatterns = False
        .IncludeProtection = False
    End With
    ActiveWorkbook.Styles("TimeCode DF").NumberFormat = "00\:00\:00\;00"
    
    Beep

StyleError:
    Beep
    
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
