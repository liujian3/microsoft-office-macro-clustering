Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Option Explicit
  
Dim G_ObjectyUser As Long
Dim G_ObjectyOU As Long
Dim G_Headlines As Collection

Const ADSTYPE_DN_STRING = 1
Const ADSTYPE_CASE_EXACT_STRING = 2
Const ADSTYPE_CASE_IGNORE_STRING = 3
Const ADSTYPE_PRINTABLE_STRING = 4
Const ADSTYPE_NUMERIC_STRING = 5
Const ADSTYPE_BOOLEAN = 6
Const ADSTYPE_INTEGER = 7
Const ADSTYPE_OCTET_STRING = 8
Const ADSTYPE_UTC_TIME = 9
Const ADSTYPE_LARGE_INTEGER = 10
Const ADSTYPE_PROV_SPECIFIC = 11


Const ADS_SECURE_AUTHENTICATION = 1


Private Sub CommandButton1_Click()
  
  G_ObjectyUser = 1
  G_ObjectyOU = 1
  
  Dim cnt As Long
  cnt = 0
  
'  GetAllUsersAndGroupsLDAP cnt, Cells(10, 1).Value
'  GetObjekte cnt, Cells(7, 1).Value
  
  Dim c As Collection
  
  Set c = New Collection
  GetVars 13, 1, c
  GetLDAP c, "Ergebnis", cnt, Cells(7, 1).Value, Cells(10, 1)
  
  
  Cells(3, 4).Value = cnt

  MsgBox "Fertig! Es wurden " & cnt & " Datens|fffd|tze gelesen. Ergebnisse (falls vorhanden) finden sich in den anderen Tabellenreitern!"
End Sub






Sub GetVars(ByVal y As Long, ByVal x As Long, ByRef c As Collection)

  Do While Cells(y, x).Value <> ""
    c.Add CStr(Cells(y, x).Value), CStr(Cells(y, x).Value)
    y = y + 1
  Loop

End Sub


Private Sub GetLDAP(ByRef c As Collection, ByVal sheetname As String, ByRef cnt As Long, sDomainString As String, sfilter As String)

  Dim i As Long
  For i = 1 To c.Count
     Worksheets(sheetname).Cells(1, i).Value = c(i)
  Next i

  Dim conn As ADODB.Connection
  Dim rs As ADODB.Recordset

  Set conn = New ADODB.Connection
  conn.Provider = "ADSDSOObject"
  
  If CStr(Cells(6, 4).Value <> "") Then
    conn.Properties("User ID") = Cells(6, 4).Value                'Credentials angeben - geschieht das nicht, wird die Suche mit den ...
    conn.Properties("Password") = Cells(7, 4).Value               '...Anmeldedaten des aktuellen Benutzers ausgef|fffd|hrt
    conn.Properties("Encrypt Password") = IIf(Trim(UCase(Cells(8, 4).Value)) = "TRUE", True, False)
  End If
  
  ' ADSI Flag
  If CStr(Cells(9, 4).Value <> "") Then
    conn.Properties("ADSI Flag") = Cells(9, 4).Value
  End If
  
  ' SearchScope
  If CStr(Cells(10, 4).Value <> "") Then
    conn.Properties("SearchScope") = Cells(10, 4).Value
  End If
  
  ' Page Size
'  If CStr(Cells(11, 4).Value <> "") Then
'    conn.Properties("Page size") = Cells(11, 4).Value
'  End If
  conn.Open "ADs Provider"
  
  Dim flds As String
    For i = 1 To c.Count
       flds = flds & IIf(flds <> "", ",", "") & c(i)
    Next i
  
  On Error GoTo nogo
  Dim ts As String
  ts = "<" & Cells(12, 4) & "://" & sDomainString & ">;" _
        & sfilter & ";" & flds & ";subtree"
  Set rs = conn.Execute(ts)

  Dim y As Long
  y = 2
  On Error Resume Next
  
  If Not rs.EOF Then
    For i = 1 To rs.Fields.Count
        Debug.Print rs.Fields(i).Name
    Next i
  End If
  
  
  While Not rs.EOF
    For i = 1 To c.Count
       Worksheets(sheetname).Cells(y, i).Value = rs.Fields(c(i)).Value
    Next i
    rs.MoveNext
    y = y + 1
    cnt = cnt + 1
  Wend

  conn.Close
  Exit Sub
  
nogo:
  MsgBox "Vermutlich existiert einer der Parameter aus '" & flds & "' nicht in '" & sDomainString & "'" & vbCrLf & vbCrLf & Err.Description & vbCrLf & vbCrLf & ts

End Sub

Private Sub GetObjekte(ByRef cnt As Long, sDomainString As String)

  Dim conn As ADODB.Connection
  Dim rs As ADODB.Recordset

  Set conn = New ADODB.Connection
  conn.Provider = "ADSDSOObject"
  conn.Open "ADs Provider"

  Set rs = conn.Execute( _
        "<" & Cells(12, 4) & "://" & sDomainString & ">;" _
        & "(objectClass=*);ADsPath,objectClass,cn;subtree")

  Dim y As Long
  y = 1
  While Not rs.EOF
     Worksheets("Objekte").Cells(y, 1).Value = rs.Fields(0).Value
     Worksheets("Objekte").Cells(y, 2).Value = rs.Fields(1).Value
     Worksheets("Objekte").Cells(y, 3).Value = rs.Fields(2).Value
     rs.MoveNext
     y = y + 1
     cnt = cnt + 1
  Wend

  conn.Close

End Sub

Sub PrintObjectAttributes2(ByRef y As Long, ByVal sheetname As String, ByRef obj, ByRef c As Collection)
  On Error Resume Next

'  obj.GetInfo
'  obj.GetInfoEx Array("createTimeStamp", "modifyTimeStamp"), 0
  
  Dim i As Long
  On Error Resume Next
  For i = 1 To c.Count
     Worksheets(sheetname).Cells(y, i).Value = obj.Item(c(i))
  Next i
End Sub


Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
