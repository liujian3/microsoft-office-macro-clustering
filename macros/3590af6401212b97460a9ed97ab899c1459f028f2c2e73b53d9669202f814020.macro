Attribute VB_Name = "Form_Hilfe"
Attribute VB_Base = "0{A4A00940-2055-48B8-B17C-CE1CEDE4112B}{1E7A4C16-7ECE-4F3B-97A1-E024DA1F32C4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Function help_artikel()
    WebBrowser1.Navigate (Modul_Tools.getRegPath() & "\hilfe\artikel.htm")
End Function

Function help_produktgruppen()
    WebBrowser1.Navigate (Modul_Tools.getRegPath() & "\hilfe\produktgruppen.htm")
End Function

Function help_kaeufer()
    WebBrowser1.Navigate (Modul_Tools.getRegPath() & "\hilfe\kaeufer.htm")
End Function

Function help_lieferant()
    WebBrowser1.Navigate (Modul_Tools.getRegPath() & "\hilfe\lieferant.htm")
End Function

Function help_katalog()
    WebBrowser1.Navigate (Modul_Tools.getRegPath() & "\hilfe\katalog.htm")
End Function

Attribute VB_Name = "Modul_Tools"
' -------------------------------------------------
' Api Declarations
' -------------------------------------------------
'Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
'Private Declare Function GetWindowPlacement Lib "user32" (ByVal hwnd As Long, lpwndpl As WINDOWPLACEMENT) As Long
'Private Declare Function SetWindowPlacement Lib "user32" (ByVal hwnd As Long, lpwndpl As WINDOWPLACEMENT) As Long
'Private Declare Function SetForegroundWindow Lib "user32" (ByVal hwnd As Long) As Long
'Private Declare Function BringWindowToTop Lib "user32" (ByVal hwnd As Long) As Long
'Private Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As Long) As Long
'Private Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long
'Private Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, lpType As Long, lpData As Any, lpcbData As Any) As Long
'Private Declare Function RegCreateKeyEx Lib "advapi32.dll" Alias "RegCreateKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, ByVal Reserved As Long, ByVal lpClass As String, ByVal dwOptions As Long, ByVal samDesired As Long, ByVal lpSecurityAttributes As Any, phkResult As Long, lpdwDisposition As Long) As Long
'Private Declare Function RegFlushKey Lib "advapi32.dll" (ByVal hKey As Long) As Long
'Private Declare Function RegSetValueEx Lib "advapi32.dll" Alias "RegSetValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As Long, lpData As Long, ByVal cbData As Long) As Long
'Private Declare Function RegSetValueEx_Str Lib "advapi32.dll" Alias "RegSetValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As Long, ByVal lpData As String, ByVal cbData As Long) As Long
'Private Declare Function RegDeleteKey Lib "advapi32.dll" Alias "RegDeleteKeyA" (ByVal hKey As Long, ByVal lpSubKey As String) As Long
'Private Declare Function RegDeleteValue Lib "advapi32.dll" Alias "RegDeleteValueA" (ByVal hKey As Long, ByVal lpValueName As String) As Long
'Private Declare Function GetTempPath Lib "kernel32" Alias "GetTempPathA" (ByVal nSize As Long, ByVal lpBuffer As String) As Long
'
'Private Type POINTAPI
'  x As Long
'  y As Long
'End Type
'
'Private Type RECT
'  Left As Long
'  Top As Long
'  Right As Long
'  Bottom As Long
'End Type
'
'Private Type WINDOWPLACEMENT
'  Length As Long
'  flags As Long
'  showCmd As Long
'  ptMinPosition As POINTAPI
'  ptMaxPosition As POINTAPI
'  rcNormalPosition As RECT
'End Type
'
Const HKEY_CLASSES_ROOT = &H80000000
Const HKEY_CURRENT_USER = &H80000001
Const HKEY_LOCAL_MACHINE = &H80000002
Const HKEY_USERS = &H80000003
Const HKEY_PERFORMANCE_DATA = &H80000004
Const HKEY_CURRENT_CONFIG = &H80000005
Const HKEY_DYN_DATA = &H80000006

Const KEY_QUERY_VALUE = &H1
Const KEY_SET_VALUE = &H2
Const KEY_CREATE_SUB_KEY = &H4
Const KEY_ENUMERATE_SUB_KEYS = &H8
Const KEY_NOTIFY = &H10
Const KEY_CREATE_LINK = &H20
Const KEY_READ = KEY_QUERY_VALUE Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY
Const KEY_ALL_ACCESS = KEY_QUERY_VALUE Or KEY_SET_VALUE Or KEY_CREATE_SUB_KEY Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY Or KEY_CREATE_LINK
Const ERROR_SUCCESS = 0&

Const REG_NONE = 0
Const REG_SZ = 1
Const REG_EXPAND_SZ = 2
Const REG_BINARY = 3
Const REG_DWORD = 4
Const REG_DWORD_LITTLE_ENDIAN = 4
Const REG_DWORD_BIG_ENDIAN = 5
Const REG_LINK = 6
Const REG_MULTI_SZ = 7

Const REG_OPTION_NON_VOLATILE = &H0

Const SW_SHOWNORMAL = 1
Const SW_SHOWMINIMIZED = 2
Const articleSheetNr = 1
Const catalogGroupSheetNr = 2
Const productgroupSheetNr = 2
Const cataloginfoSheetNr = 5

' Registrierungsschl|fffd|ssel-Stammtypen...

Const gREGKEYSYSINFOLOC = "SOFTWARE\Microsoft\Shared Tools Location"
Const gREGVALSYSINFOLOC = "MSINFO"
Const gREGKEYSYSINFO = "SOFTWARE\Microsoft\Shared Tools\MSINFO"
Const gREGVALSYSINFO = "PATH"

Private Const MAX_PATH As Long = 260


Private RegRoot&

'Function RegValueGet(Root&, Key$, Field$, Value As Variant) As Long
'  Dim Result&, hKey&, dwType&, Lng&, Buffer$, l&
'    'Wert aus einem Feld der Registry auslesen
'    Result = RegOpenKeyEx(Root, Key, 0, KEY_READ, hKey)
'    If Result = ERROR_SUCCESS Then
'      Result = RegQueryValueEx(hKey, Field, 0&, dwType, ByVal 0&, l)
'      If Result = ERROR_SUCCESS Then
'        Select Case dwType
'          Case REG_SZ
'            Buffer = Space$(l + 1)
'            Result = RegQueryValueEx(hKey, Field, 0&, _
'                                     dwType, ByVal Buffer, l)
'            If Result = ERROR_SUCCESS Then Value = Buffer
'          Case REG_DWORD
'            Result = RegQueryValueEx(hKey, Field, 0&, dwType, Lng, l)
'            If Result = ERROR_SUCCESS Then Value = Lng
'        End Select
'      End If
'    End If
'
'    If Result = ERROR_SUCCESS Then Result = RegCloseKey(hKey)
'    RegValueGet = Result
'End Function

Function RegValueGet(Root&, Key$, Field$, Value As Variant) As Long
    Set WshShell = CreateObject("WScript.Shell")
    On Error Resume Next
    Value = WshShellRegReadFailSave("HKEY_LOCAL_MACHINE\" & Key$ & "\" & Field$)
    If Value = "" Or Err.Number <> 0 Then
        ' 64 bit.
        Err.Clear
        Value = WshShellRegReadFailSave("HKEY_LOCAL_MACHINE\" & Replace(Key$, "StoreserverSystems", "Wow6432Node\StoreserverSystems") & "\" & Field$)
    End If
    RegValueGet = 0
    If Value = "" Then
        MsgBox "Fehler beim Lesen von Registrierungsinformationen" & vbCr & Err.Number & " - " & Err.Description, vbCritical
    End If
End Function

Public Function WshShellRegReadFailSave(keyName)
    On Error Resume Next
    Err.Clear
    Set WshShell = CreateObject("WScript.Shell")
    Value = WshShell.RegRead(Replace(keyName, "HKEY_LOCAL_MACHINE", "HKLM"))
    If Err.Number = 0 Then
        WshShellRegReadFailSave = Value
    End If
    Err.Clear
End Function

Function ActivateWindow(xhWnd&) As Boolean
'  Dim Result&, WndPlcmt As WINDOWPLACEMENT
'
'    With WndPlcmt
'      .Length = Len(WndPlcmt)
'      Result = GetWindowPlacement(xhWnd, WndPlcmt)
'      If Result Then
'        If .showCmd = SW_SHOWMINIMIZED Then
'          .flags = 0
'          .showCmd = SW_SHOWNORMAL
'          Result = SetWindowPlacement(xhWnd, WndPlcmt)
'        Else
'          Call SetForegroundWindow(xhWnd)
'          Result = BringWindowToTop(xhWnd)
'        End If
'        If Result Then ActivateWindow = True
'      End If
'    End With
  End Function

Function MReplace(rinput, rwhat, rwith)
    If rinput <> "" Then
        For i = 1 To Len(rinput)
            If Mid(rinput, i, 1) = rwhat Then
                rinput = Mid(rinput, 1, i - 1) & rwith & Mid(rinput, i + 1, Len(rinput))
            End If
        Next
    End If
    MReplace = rinput
End Function


'------------------------------------------------------------------------
' registry-access
'------------------------------------------------------------------------
Function getRegPath()
    Dim Result&, Value As Variant
    Result = RegValueGet(HKEY_LOCAL_MACHINE, StoreserverGenerator.getGeneratorRegPath, "AppPath", Value)
    If Result = 0 Then
      res = CStr(Value)
    Else
      res = "Fehler"
    End If
    'getRegPath = Left(res, Len(res) - 2)
    getRegPath = res
End Function

Function getDatamapperRegPath()
    Dim Result&, Value As Variant
    Result = RegValueGet(HKEY_LOCAL_MACHINE, StoreserverGenerator.getGeneratorRegPath, "AppPath", Value)
    If Result = 0 Then
      res = CStr(Value) & "\DataMapper"
    Else
      res = "Fehler"
    End If
    'getDatamapperRegPath = Left(res, Len(res) - 2)
    getDatamapperRegPath = res
End Function

Function getDatastoreRegPath()
    Dim Result&, Value As Variant
    Result = RegValueGet(HKEY_LOCAL_MACHINE, StoreserverGenerator.getDatastoreRegPath, "AppPath", Value)
    If Result = 0 Then
      res = CStr(Value)
    Else
      res = "er"
    End If
    'getDatastoreRegPath = Left(res, Len(res) - 2)
    getDatastoreRegPath = res
End Function

Function getclassifierRegPath()
    Dim Result&, Value As Variant
    Result = RegValueGet(HKEY_LOCAL_MACHINE, StoreserverGenerator.getclassifierRegPath, "AppPath", Value)
    If Result = 0 Then
      res = CStr(Value)
    Else
      res = "Fehler"
    End If
    'getclassifierRegPath = Left(res, Len(res) - 2)
    getclassifierRegPath = res
End Function

' ---------------------------------------------------------------------------
' window-functions
' ---------------------------------------------------------------------------
Function getWindow(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
    'getWindow = FindWindow(ByVal lpClassName, ByVal lpWindowName)
End Function


Public Function GetTempDir() As String

    Dim nSize As Long
    Dim tmp As String
    
    tmp = Space$(MAX_PATH)
    tmp = String$(260, " ")
    nSize = Len(tmp)
    Call GetTempPath(nSize, tmp)
    
    GetTempDir = Trim(tmp)
    GetTempDir = Left(GetTempDir, Len(GetTempDir) - 2)
End Function


Attribute VB_Name = "StoreserverGenerator"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
' ---------------------------------------------------------------------------
'
' Storeserver|fffd| Generator Makros
'
' ---------------------------------------------------------------------------
Const articleSheetNr = 1
Const cataloginfoSheetNr = 5

Const generatorVersion = "6.0"
Const generatorExecutable = "storeserver70.exe"
Const generatorRegPath = "Software\StoreserverSystems\Generator7.0"

Const dataMapperExecutable = "datamapper.exe"
Const datamapperRegPath = "Software\StoreserverSystems\DataMapper7.0"

Const classifierExecutable = "classifier.exe"
Const classifierRegPath = "Software\StoreserverSystems\Classifier7.0"

Const datastoreRegPath = "Software\StoreserverSystems\DatastoreClient7.0"

' ---------------------------------------------------------------------------
' datamapper & datastore
' ---------------------------------------------------------------------------
Private Sub Workbook_Open()
    Tabelle3.ImageMakros.Visible = False
    Tabelle3.TextBoxMakros1.Visible = False
    Tabelle3.TextBoxMakros2.Visible = False
    Tabelle3.TextBoxMakros3.Visible = False
   
    DoEvents
    If Len(Modul_Tools.getDatamapperRegPath) > 0 Then
        Tabelle3.CommandRead.Visible = True
    End If
   
End Sub

' ---------------------------------------------------------------------------
' version names & files
' ---------------------------------------------------------------------------
Function getGeneratorExecutable()
    getGeneratorExecutable = generatorExecutable
End Function

Function getGeneratorVersion()
    getGeneratorVersion = generatorVersion
End Function

Function getGeneratorRegPath()
    getGeneratorRegPath = generatorRegPath
End Function

Function getDataMapperExecutable()
    getDataMapperExecutable = dataMapperExecutable
End Function

Function getDatamapperRegPath()
    getDatamapperRegPath = datamapperRegPath
End Function

Function getDatastoreRegPath()
    getDatastoreRegPath = datastoreRegPath
End Function

Function getclassifierExecutable()
    getclassifierExecutable = classifierExecutable
End Function

Function getclassifierRegPath()
    getclassifierRegPath = classifierRegPath
End Function

Attribute VB_Name = "Tabelle0"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Hilfe, 11, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 31, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButtonClassifier, 45, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButtonPm, 55, 3, MSForms, CommandButton"
Dim stopSignal

Private Sub CommandButton2_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " featureAssistent autostart"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " featureAssistent autostart", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub CommandButtonPm_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " pm"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " pm", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub CommandButtonClassifier_Click()
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " classifier"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " classifier", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub Hilfe_Click()
    Form_Hilfe.help_artikel
    Form_Hilfe.Show
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "hilfe, 7, 1, MSForms, CommandButton"
Private Sub Hilfe_Click()
    Form_Hilfe.help_kaeufer
    Form_Hilfe.Show
End Sub
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "hilfe, 3, 1, MSForms, CommandButton"
Attribute VB_Control = "ImageMakros, 32, 2, MSForms, Image"
Attribute VB_Control = "TextBoxMakros1, 33, 3, MSForms, TextBox"
Attribute VB_Control = "TextBoxMakros2, 34, 4, MSForms, TextBox"
Attribute VB_Control = "TextBoxMakros3, 35, 5, MSForms, TextBox"
Attribute VB_Control = "Einlesen, 21, 6, MSForms, CommandButton"
Attribute VB_Control = "Erstellen, 7, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandRead, 36, 8, MSForms, CommandButton"
Attribute VB_Control = "Plattform, 37, 9, MSForms, CommandButton"
Private Sub Hilfe_Click()
    Form_Hilfe.help_katalog
    Form_Hilfe.Show
End Sub

Private Sub Einlesen_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " viewerGN"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " import", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub Erstellen_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " export null autostart"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " export null autostart", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub CommandRead_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getDatamapperRegPath & "\" & StoreserverGenerator.getDataMapperExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " read"
    'Shell Chr(34) & Modul_Tools.getDatamapperRegPath & "\" & StoreserverGenerator.getDataMapperExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " read", vbNormalFocus
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getDataMapperExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getDatamapperRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub Plattform_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " publishGN"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " import", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Hilfe, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 11, 1, MSForms, CommandButton"
Private Sub Anlegen_Click()
    Modul_Produktgruppe_Anlegen.Show_Produktgruppe_anlegen
End Sub

Private Sub CommandButton2_Click()
    Dim xhWnd&
    On Error Resume Next
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " browser autostart"
    'Shell Chr(34) & Modul_Tools.getRegPath & "\" & StoreserverGenerator.getGeneratorExecutable() & Chr(34) & " " & MReplace(StoreserverGenerator.Name, " ", "*") & " browser autostart", vbNormalFocus
    xhWnd = Modul_Tools.getWindow(vbNullString, "Storeserver|fffd| Generator " & StoreserverGenerator.getGeneratorVersion)
    Modul_Tools.ActivateWindow (xhWnd)
    If Err <> 0 Then
        MsgBox "Beim |fffd|ffnen der Datei " & StoreserverGenerator.getGeneratorExecutable() & " ist ein Fehler aufgetreten. [" & Err.Description & "]" & vbCr & vbCr & _
        "Bitte stellen Sie sicher, das sich die Generator-Programmdateien an dem Ort befinden, an dem der Generator installiert wurde." & vbCr & _
        "(" & Modul_Tools.getRegPath & ") Die Programmdateien d|fffd|rfen nach der Installation nicht verschoben werden." & vbCr & _
        "Sollten die Programmdateien verschoben worden sein, installieren Sie den Generator bitte neu. ", vbCritical, "Storeserver Generator"
    End If
End Sub

Private Sub Hilfe_Click()
    Form_Hilfe.help_produktgruppen
    Form_Hilfe.Show
End Sub
   
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 2, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Form_Hilfe.help_lieferant
    Form_Hilfe.Show
End Sub

' InQuest injected base64 decoded content
' Ej)Rj

INQUEST-PP=macro
