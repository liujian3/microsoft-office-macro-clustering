Attribute VB_Name = "Cover"
Function covers(x1, x2, x3, y1, y2, y3, x4, x5, x6, y4, y5, y6) As Variant

'Dim x1 As String, x2 As String, x3 As String, y1 As String, y2 As String, y3 As String
'Dim x4 As String, x5 As Single, x6 As Single, y4 As Single, y5 As Single, y6 As Single
Dim myAry1()
Dim myAry2()
Dim myAry3()
Dim i As Long
Dim i3 As Long
Dim sk As String
 Dim lRow As Long, lCol As Long
  Dim i2 As Long, j As Long
  Dim X, y
  Dim myCnt As Long


Dim kijun(3, 5) As String
Dim kouten(1 To 2, 1 To 12) As String
Dim koutenRG(3, 1)
Dim koutenGB(3, 1)
Dim koutenBR(3, 1)

Dim Rx As Single, Ry As Single, Gx As Single, Gy As Single, Bx As Single, By As Single

Dim Rx1 As Single, Ry1 As Single, Gx1 As Single, Gy1 As Single, Bx1 As Single, By1 As Single
Dim RGx1 As Single, RGx2 As Single, RGx3 As Single, GBx1 As Single, GBx2 As Single, GBx3 As Single, BRx1 As Single, BRx2 As Single, BRx3 As Single
Dim RGy1 As Single, RGy2 As Single, RGy3 As Single, GBy1 As Single, GBy2 As Single, GBy3 As Single, BRy1 As Single, BRy2 As Single, BRy3 As Single
Dim RBk1 As Single, BGk1 As Single, GRk1 As Single, RBs1 As Single, BGs1 As Single, GRs1 As Single
Dim RBk2 As Single, BGk2 As Single, GRk2 As Single, RBs2 As Single, BGs2 As Single, GRs2 As Single
Dim RBk3 As Single, BGk3 As Single, GRk3 As Single, RBs3 As Single, BGs3 As Single, GRs3 As Single
Dim RBk4 As Single, BGk4 As Single, GRk4 As Single, RBs4 As Single, BGs4 As Single, GRs4 As Single
Dim RBk5 As Single, BGk5 As Single, GRk5 As Single, RBs5 As Single, BGs5 As Single, GRs5 As Single
Dim RBk6 As Single, BGk6 As Single, GRk6 As Single, RBs6 As Single, BGs6 As Single, GRs6 As Single
Dim RBk7 As Single, BGk7 As Single, GRk7 As Single, RBs7 As Single, BGs7 As Single, GRs7 As Single
Dim RBk8 As Single, BGk8 As Single, GRk8 As Single, RBs8 As Single, BGs8 As Single, GRs8 As Single
Dim RBk9 As Single, BGk9 As Single, GRk9 As Single, RBs9 As Single, BGs9 As Single, GRs9 As Single
Dim RBk10 As Single, BGk10 As Single, GRk10 As Single, RBs10 As Single, BGs10 As Single, GRs10 As Single
Dim RBk11 As Single, BGk11 As Single, GRk11 As Single, RBs11 As Single, BGs11 As Single, GRs11 As Single
Dim RBk12 As Single, BGk12 As Single, GRk12 As Single, RBs12 As Single, BGs12 As Single, GRs12 As Single

'x1 = Range("k61")
'x2 = Range("n61")
'x3 = Range("q61")
'y1 = Range("l61")
'y2 = Range("o61")
'y3 = Range("r61")

'x4 = 0.64
'x5 = 0.3
'x6 = 0.15
'y4 = 0.33
'y5 = 0.6
'y6 = 0.06

sk = (x4 * y5 - x5 * y4 + x5 * y6 - x6 * y5 + x6 * y4 - x4 * y6) / 2


'|fffd||e3c0||fffd|F|fffd||fffd||30a|e|fffd||4c2||315||fffd||fffd||fffd||fffd||fffd|
Rx = Round(((y5 - y4) / (x5 - x4)), 7)
Ry = Round((y4 - Rx * x4), 7)
Gx = Round(((y6 - y5) / (x6 - x5)), 7)
Gy = Round((y5 - Gx * x5), 7)
Bx = Round(((y4 - y6) / (x4 - x6)), 7)
By = Round((y6 - Bx * x6), 7)

'|fffd||fffd||fffd||fffd|l|fffd||30a|e|fffd||4c2||315||fffd||fffd||fffd||fffd||fffd|
Rx1 = Round(((y2 - y1) / (x2 - x1)), 7)
Ry1 = Round((y1 - Rx1 * x1), 7)
Gx1 = Round(((y3 - y2) / (x3 - x2)), 7)
Gy1 = Round((y2 - Gx1 * x2), 7)
Bx1 = Round(((y1 - y3) / (x1 - x3)), 7)
By1 = Round((y3 - Bx1 * x3), 7)

'|fffd||e3c0||fffd|F|fffd||fffd||191||fffd||fffd||fffd|l|fffd||310|F|fffd||fffd||30c||fffd|_

If (Rx1 - Rx) = 0 Then
  RGx1 = 0
Else
  RGx1 = Round((-(Ry1 - Ry) / (Rx1 - Rx)), 7)
End If
RGy1 = Round((Rx1 * RGx1 + Ry1), 7)

If (Gx1 - Gx) = 0 Then
  GBx1 = 0
Else
  GBx1 = Round((-(Gy1 - Gy) / (Gx1 - Gx)), 7)
End If
GBy1 = Round((Gx1 * GBx1 + Gy1), 7)

If (Bx1 - Bx) = 0 Then
  BRx1 = 0
Else
  BRx1 = Round((-(By1 - By) / (Bx1 - Bx)), 7)
End If
BRy1 = Round((Bx1 * BRx1 + By1), 7)


RGx2 = Round((-(Gy1 - Ry) / (Gx1 - Rx)), 7)
RGy2 = Round((Gx1 * RGx2 + Gy1), 7)
GBx2 = Round((-(By1 - Gy) / (Bx1 - Gx)), 7)
GBy2 = Round((Bx1 * GBx2 + By1), 7)
BRx2 = Round((-(Ry1 - By) / (Rx1 - Bx)), 7)
BRy2 = Round((Rx1 * BRx2 + Ry1), 7)


RGx3 = Round((-(By1 - Ry) / (Bx1 - Rx)), 7)
RGy3 = Round((Bx1 * RGx3 + By1), 7)
GBx3 = Round((-(Ry1 - Gy) / (Rx1 - Gx)), 7)
GBy3 = Round((Rx1 * GBx3 + Ry1), 7)
BRx3 = Round((-(Gy1 - By) / (Gx1 - Bx)), 7)
BRy3 = Round((Gx1 * BRx3 + Gy1), 7)

'|fffd||e3c0||fffd|O|fffd|p|fffd|A|fffd||fffd||fffd||fffd|O|fffd|p|fffd||313||fffd||fffd|O|fffd||fffd||fffd||fffd|
    RBk1 = Round(((x6 - x4) * (y1 - y4) - (y6 - y4) * (x1 - x4)), 4)
    BGk1 = Round(((x5 - x6) * (y1 - y6) - (y5 - y6) * (x1 - x6)), 4)
    GRk1 = Round(((x4 - x5) * (y1 - y5) - (y4 - y5) * (x1 - x5)), 4)
    
    RBs1 = Round(((x3 - x1) * (y4 - y1) - (y3 - y1) * (x4 - x1)), 4)
    BGs1 = Round(((x2 - x3) * (y4 - y3) - (y2 - y3) * (x4 - x3)), 4)
    GRs1 = Round(((x1 - x2) * (y4 - y2) - (y1 - y2) * (x4 - x2)), 4)
    
    If RBk1 <= 0 And BGk1 <= 0 And GRk1 <= 0 Then
     koutenRG(0, 0) = x1
     koutenRG(0, 1) = y1
           
    Else
      If RBs1 <= 0 And BGs1 <= 0 And GRs1 <= 0 Then
        koutenRG(0, 0) = x4
        koutenRG(0, 1) = y4
      Else
         koutenRG(0, 0) = 0
         koutenRG(0, 1) = 0
      End If
    End If


    RBk2 = Round(((x6 - x4) * (y2 - y4) - (y6 - y4) * (x2 - x4)), 4)
    BGk2 = Round(((x5 - x6) * (y2 - y6) - (y5 - y6) * (x2 - x6)), 4)
    GRk2 = Round(((x4 - x5) * (y2 - y5) - (y4 - y5) * (x2 - x5)), 4)
    
    RBs2 = Round(((x3 - x1) * (y5 - y1) - (y3 - y1) * (x5 - x1)), 4)
    BGs2 = Round(((x2 - x3) * (y5 - y3) - (y2 - y3) * (x5 - x3)), 4)
    GRs2 = Round(((x1 - x2) * (y5 - y2) - (y1 - y2) * (x5 - x2)), 4)
    
    If RBk2 <= 0 And BGk2 <= 0 And GRk2 <= 0 Then
     koutenGB(0, 0) = x2
     koutenGB(0, 1) = y2
           
    Else
      If RBs2 <= 0 And BGs2 <= 0 And GRs2 <= 0 Then
        koutenGB(0, 0) = x5
        koutenGB(0, 1) = y5
      Else
         koutenGB(0, 0) = 0
         koutenGB(0, 1) = 0
      End If
    End If
    
    
    RBk3 = Round(((x6 - x4) * (y3 - y4) - (y6 - y4) * (x3 - x4)), 4)
    BGk3 = Round(((x5 - x6) * (y3 - y6) - (y5 - y6) * (x3 - x6)), 4)
    GRk3 = Round(((x4 - x5) * (y3 - y5) - (y4 - y5) * (x3 - x5)), 4)
    
    RBs3 = Round(((x3 - x1) * (y6 - y1) - (y3 - y1) * (x6 - x1)), 4)
    BGs3 = Round(((x2 - x3) * (y6 - y3) - (y2 - y3) * (x6 - x3)), 4)
    GRs3 = Round(((x1 - x2) * (y6 - y2) - (y1 - y2) * (x6 - x2)), 4)
    
    If RBk3 <= 0 And BGk3 <= 0 And GRk3 <= 0 Then
     koutenBR(0, 0) = x3
     koutenBR(0, 1) = y3
          
    Else
     If RBs3 <= 0 And BGs3 <= 0 And GRs3 <= 0 Then
        koutenBR(0, 0) = x6
        koutenBR(0, 1) = y6
      Else
         koutenBR(0, 0) = 0
         koutenBR(0, 1) = 0
      End If
    End If


'|fffd||fffd|_RG|fffd||18a||e3c0||fffd|A|fffd||fffd||fffd||fffd|O|fffd|p|fffd||313||fffd||fffd|O|fffd||fffd||fffd||fffd|
    RBk4 = Round(((x6 - x4) * (RGy1 - y4) - (y6 - y4) * (RGx1 - x4)), 4)
    BGk4 = Round(((x5 - x6) * (RGy1 - y6) - (y5 - y6) * (RGx1 - x6)), 4)
    GRk4 = Round(((x4 - x5) * (RGy1 - y5) - (y4 - y5) * (RGx1 - x5)), 4)
    
    RBs4 = Round(((x3 - x1) * (RGy1 - y1) - (y3 - y1) * (RGx1 - x1)), 4)
    BGs4 = Round(((x2 - x3) * (RGy1 - y3) - (y2 - y3) * (RGx1 - x3)), 4)
    GRs4 = Round(((x1 - x2) * (RGy1 - y2) - (y1 - y2) * (RGx1 - x2)), 4)
    
    If RBk4 <= 0 And BGk4 <= 0 And GRk4 <= 0 And RBs4 <= 0 And BGs4 <= 0 And GRs4 <= 0 Then
     koutenRG(1, 0) = RGx1
     koutenRG(1, 1) = RGy1
    Else
     koutenRG(1, 0) = 0
     koutenRG(1, 1) = 0
    End If


    RBk5 = Round(((x6 - x4) * (GBy1 - y4) - (y6 - y4) * (GBx1 - x4)), 4)
    BGk5 = Round(((x5 - x6) * (GBy1 - y6) - (y5 - y6) * (GBx1 - x6)), 4)
    GRk5 = Round(((x4 - x5) * (GBy1 - y5) - (y4 - y5) * (GBx1 - x5)), 4)
    
    RBs5 = Round(((x3 - x1) * (GBy1 - y1) - (y3 - y1) * (GBx1 - x1)), 4)
    BGs5 = Round(((x2 - x3) * (GBy1 - y3) - (y2 - y3) * (GBx1 - x3)), 4)
    GRs5 = Round(((x1 - x2) * (GBy1 - y2) - (y1 - y2) * (GBx1 - x2)), 4)
    
    If RBk5 <= 0 And BGk5 <= 0 And GRk5 <= 0 And RBs5 <= 0 And BGs5 <= 0 And GRs5 <= 0 Then
     koutenGB(1, 0) = GBx1
     koutenGB(1, 1) = GBy1
           
    Else
     koutenGB(1, 0) = 0
     koutenGB(1, 1) = 0
    End If


    RBk6 = Round(((x6 - x4) * (BRy1 - y4) - (y6 - y4) * (BRx1 - x4)), 4)
    BGk6 = Round(((x5 - x6) * (BRy1 - y6) - (y5 - y6) * (BRx1 - x6)), 4)
    GRk6 = Round(((x4 - x5) * (BRy1 - y5) - (y4 - y5) * (BRx1 - x5)), 4)
    
    
    RBs6 = Round(((x3 - x1) * (BRy1 - y1) - (y3 - y1) * (BRx1 - x1)), 4)
    BGs6 = Round(((x2 - x3) * (BRy1 - y3) - (y2 - y3) * (BRx1 - x3)), 4)
    GRs6 = Round(((x1 - x2) * (BRy1 - y2) - (y1 - y2) * (BRx1 - x2)), 4)
    
    If RBk6 <= 0 And BGk6 <= 0 And GRk6 <= 0 And RBs6 <= 0 And BGs6 <= 0 And GRs6 <= 0 Then
     koutenBR(1, 0) = BRx1
     koutenBR(1, 1) = BRy1
           
    Else
     koutenBR(1, 0) = 0
     koutenBR(1, 1) = 0
    End If

'|fffd||fffd|_GB|fffd||18a||e3c0||fffd|A|fffd||fffd||fffd||fffd|O|fffd|p|fffd||313||fffd||fffd|O|fffd||fffd||fffd||fffd|
    RBk7 = Round(((x6 - x4) * (RGy2 - y4) - (y6 - y4) * (RGx2 - x4)), 4)
    BGk7 = Round(((x5 - x6) * (RGy2 - y6) - (y5 - y6) * (RGx2 - x6)), 4)
    GRk7 = Round(((x4 - x5) * (RGy2 - y5) - (y4 - y5) * (RGx2 - x5)), 4)
    
    
    RBs7 = Round(((x3 - x1) * (RGy2 - y1) - (y3 - y1) * (RGx2 - x1)), 4)
    BGs7 = Round(((x2 - x3) * (RGy2 - y3) - (y2 - y3) * (RGx2 - x3)), 4)
    GRs7 = Round(((x1 - x2) * (RGy2 - y2) - (y1 - y2) * (RGx2 - x2)), 4)
    
    If RBk7 <= 0 And BGk7 <= 0 And GRk7 <= 0 And RBs7 <= 0 And BGs7 <= 0 And GRs7 <= 0 Then
     koutenRG(2, 0) = RGx2
     koutenRG(2, 1) = RGy2
    Else
     koutenRG(2, 0) = 0
     koutenRG(2, 1) = 0
    End If


    RBk8 = Round(((x6 - x4) * (GBy2 - y4) - (y6 - y4) * (GBx2 - x4)), 4)
    BGk8 = Round(((x5 - x6) * (GBy2 - y6) - (y5 - y6) * (GBx2 - x6)), 4)
    GRk8 = Round(((x4 - x5) * (GBy2 - y5) - (y4 - y5) * (GBx2 - x5)), 4)
    
    RBs8 = Round(((x3 - x1) * (GBy2 - y1) - (y3 - y1) * (GBx2 - x1)), 4)
    BGs8 = Round(((x2 - x3) * (GBy2 - y3) - (y2 - y3) * (GBx2 - x3)), 4)
    GRs8 = Round(((x1 - x2) * (GBy2 - y2) - (y1 - y2) * (GBx2 - x2)), 4)
    
    If RBk8 <= 0 And BGk8 <= 0 And GRk8 <= 0 And RBs8 <= 0 And BGs8 <= 0 And GRs8 <= 0 Then
     koutenGB(2, 0) = GBx2
     koutenGB(2, 1) = GBy2
           
    Else
     koutenGB(2, 0) = 0
     koutenGB(2, 1) = 0
    End If


    RBk9 = Round(((x6 - x4) * (BRy2 - y4) - (y6 - y4) * (BRx2 - x4)), 4)
    BGk9 = Round(((x5 - x6) * (BRy2 - y6) - (y5 - y6) * (BRx2 - x6)), 4)
    GRk9 = Round(((x4 - x5) * (BRy2 - y5) - (y4 - y5) * (BRx2 - x5)), 4)
    
    RBs9 = Round(((x3 - x1) * (BRy2 - y1) - (y3 - y1) * (BRx2 - x1)), 4)
    BGs9 = Round(((x2 - x3) * (BRy2 - y3) - (y2 - y3) * (BRx2 - x3)), 4)
    GRs9 = Round(((x1 - x2) * (BRy2 - y2) - (y1 - y2) * (BRx2 - x2)), 4)
    
    If RBk9 <= 0 And BGk9 <= 0 And GRk9 <= 0 And RBs9 <= 0 And BGs9 <= 0 And GRs9 <= 0 Then
     koutenBR(2, 0) = BRx2
     koutenBR(2, 1) = BRy2
           
    Else
     koutenBR(2, 0) = 0
     koutenBR(2, 1) = 0
    End If

'|fffd||fffd|_BR|fffd||18a||e3c0||fffd|A|fffd||fffd||fffd||fffd|O|fffd|p|fffd||313||fffd||fffd|O|fffd||fffd||fffd||fffd|
    RBk10 = Round(((x6 - x4) * (RGy3 - y4) - (y6 - y4) * (RGx3 - x4)), 4)
    BGk10 = Round(((x5 - x6) * (RGy3 - y6) - (y5 - y6) * (RGx3 - x6)), 4)
    GRk10 = Round(((x4 - x5) * (RGy3 - y5) - (y4 - y5) * (RGx3 - x5)), 4)
    
    RBs10 = Round(((x3 - x1) * (RGy3 - y1) - (y3 - y1) * (RGx3 - x1)), 4)
    BGs10 = Round(((x2 - x3) * (RGy3 - y3) - (y2 - y3) * (RGx3 - x3)), 4)
    GRs10 = Round(((x1 - x2) * (RGy3 - y2) - (y1 - y2) * (RGx3 - x2)), 4)
    
    If RBk10 <= 0 And BGk10 <= 0 And GRk10 <= 0 And RBs10 <= 0 And BGs10 <= 0 And GRs10 <= 0 Then
     koutenRG(3, 0) = RGx3
     koutenRG(3, 1) = RGy3
    Else
     koutenRG(3, 0) = 0
     koutenRG(3, 1) = 0
    End If


    RBk11 = Round(((x6 - x4) * (GBy3 - y4) - (y6 - y4) * (GBx3 - x4)), 4)
    BGk11 = Round(((x5 - x6) * (GBy3 - y6) - (y5 - y6) * (GBx3 - x6)), 4)
    GRk11 = Round(((x4 - x5) * (GBy3 - y5) - (y4 - y5) * (GBx3 - x5)), 4)
    
    RBs11 = Round(((x3 - x1) * (GBy3 - y1) - (y3 - y1) * (GBx3 - x1)), 4)
    BGs11 = Round(((x2 - x3) * (GBy3 - y3) - (y2 - y3) * (GBx3 - x3)), 4)
    GRs11 = Round(((x1 - x2) * (GBy3 - y2) - (y1 - y2) * (GBx3 - x2)), 4)
    
    If RBk11 <= 0 And BGk11 <= 0 And GRk11 <= 0 And RBs11 <= 0 And BGs11 <= 0 And GRs11 <= 0 Then
     koutenGB(3, 0) = GBx3
     koutenGB(3, 1) = GBy3
           
    Else
     koutenGB(3, 0) = 0
     koutenGB(3, 1) = 0
    End If


    RBk12 = Round(((x6 - x4) * (BRy3 - y4) - (y6 - y4) * (BRx3 - x4)), 4)
    BGk12 = Round(((x5 - x6) * (BRy3 - y6) - (y5 - y6) * (BRx3 - x6)), 4)
    GRk12 = Round(((x4 - x5) * (BRy3 - y5) - (y4 - y5) * (BRx3 - x5)), 4)
    
    RBs12 = Round(((x3 - x1) * (BRy3 - y1) - (y3 - y1) * (BRx3 - x1)), 4)
    BGs12 = Round(((x2 - x3) * (BRy3 - y3) - (y2 - y3) * (BRx3 - x3)), 4)
    GRs12 = Round(((x1 - x2) * (BRy3 - y2) - (y1 - y2) * (BRx3 - x2)), 4)
    
    If RBk12 <= 0 And BGk12 <= 0 And GRk12 <= 0 And RBs12 <= 0 And BGs12 <= 0 And GRs12 <= 0 Then
     koutenBR(3, 0) = BRx3
     koutenBR(3, 1) = BRy3
           
    Else
     koutenBR(3, 0) = 0
     koutenBR(3, 1) = 0
    End If



 
 Call BubbleSort3(koutenRG, 0)
 
 'Range("BK86:BL89").Value = koutenRG

  Call BubbleSort3(koutenGB, 0)
 
 'Range("BK90:BL93").Value = koutenGB


 Call BubbleSort2(koutenBR, 0)
 
 'Range("BK94:BL97").Value = koutenBR

 kouten(1, 1) = koutenRG(0, 0)
 kouten(2, 1) = koutenRG(0, 1)
 kouten(1, 2) = koutenRG(1, 0)
 kouten(2, 2) = koutenRG(1, 1)
 kouten(1, 3) = koutenRG(2, 0)
 kouten(2, 3) = koutenRG(2, 1)
 kouten(1, 4) = koutenRG(3, 0)
 kouten(2, 4) = koutenRG(3, 1)
 kouten(1, 5) = koutenGB(0, 0)
 kouten(2, 5) = koutenGB(0, 1)
 kouten(1, 6) = koutenGB(1, 0)
 kouten(2, 6) = koutenGB(1, 1)
 kouten(1, 7) = koutenGB(2, 0)
 kouten(2, 7) = koutenGB(2, 1)
 kouten(1, 8) = koutenGB(3, 0)
 kouten(2, 8) = koutenGB(3, 1)
 kouten(1, 9) = koutenBR(0, 0)
 kouten(2, 9) = koutenBR(0, 1)
 kouten(1, 10) = koutenBR(1, 0)
 kouten(2, 10) = koutenBR(1, 1)
 kouten(1, 11) = koutenBR(2, 0)
 kouten(2, 11) = koutenBR(2, 1)
 kouten(1, 12) = koutenBR(3, 0)
 kouten(2, 12) = koutenBR(3, 1)
 
 
 
   

 ReDim kouten1(1 To 2, 1 To 12)
    For i2 = 1 To 12
        '----|fffd||d3dc||fffd||fffd||fffd||202||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd|y|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If kouten(1, i2) <> 0 Then
            myCnt = myCnt + 1
            For j = 1 To 2
                kouten1(j, myCnt) = kouten(j, i2)
            Next j
        End If
    Next i2
    ReDim Preserve kouten1(1 To 2, 1 To myCnt)
    
    
    '----|fffd|z|fffd||fffd|y|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||58f||fffd||fffd||fffd||fffd|o|fffd||fffd|
    
     i3 = UBound(kouten1, 1)
    
    
    'Range("BM86:Bx87").Value = kouten1
          

'Range("BM83").Value = AreaPolygon_xyarray(kouten1)



covers = Abs(AreaPolygon_xyarray(kouten1)) / sk

End Function

Sub BubbleSort2(ByRef argAry() As Variant, ByVal keyPos As Long)
    Dim vSwap
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    For i = LBound(argAry, 1) To UBound(argAry, 1)
        For j = UBound(argAry, 1) To i Step -1
            If argAry(i, keyPos) > argAry(j, keyPos) Then
                For k = LBound(argAry, 2) To UBound(argAry, 2)
                    vSwap = argAry(i, k)
                    argAry(i, k) = argAry(j, k)
                    argAry(j, k) = vSwap
                Next
            End If
        Next j
    Next i
 End Sub
 
 
Sub BubbleSort3(ByRef argAry() As Variant, ByVal keyPos As Long)
    Dim vSwap
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    For i = LBound(argAry, 1) To UBound(argAry, 1)
        For j = UBound(argAry, 1) To i Step -1
            If argAry(i, keyPos) < argAry(j, keyPos) Then
                For k = LBound(argAry, 2) To UBound(argAry, 2)
                    vSwap = argAry(i, k)
                    argAry(i, k) = argAry(j, k)
                    argAry(j, k) = vSwap
                Next
            End If
        Next j
    Next i
 End Sub

Function Area3Angle_xy(x1, x2, x3, y1, y2, y3) As Variant
'|fffd|O|fffd|p|fffd|`|fffd||316||290||fffd|
'|fffd|R|fffd||fffd||fffd|_|fffd||302|w|fffd|x|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd|R|fffd|p|fffd|`|fffd||316||290||3c2||fffd||fffd||fffd||fffd||7c2||702||fffd|
    Area3Angle_xy = (x1 * (y3 - y2) + x2 * (y1 - y3) + x3 * (y2 - y1)) / 2
 End Function

Function AreaPolygon_xyarray(xyarray) As Variant
'|fffd||fffd||fffd|p|fffd|`|fffd||316||290||3c2||fffd||fffd||fffd||fffd||7c2||702||fffd|
'|fffd||fffd||fffd|p|fffd|`|fffd|i|fffd|R|fffd|p|fffd|`|fffd||fffd||fffd||702||781|j|fffd||316||290||3c2||12e13|_|fffd||fffd|xy|fffd||fffd||fffd|W|fffd||302|Q|fffd||fffd||fffd|z|fffd||42a42||72c1||fffd||7c2||702||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|Z|fffd||fffd||fffd||348||341|A|fffd||702||fffd||fffd||354|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||90b1||fffd||182||fffd||fffd||142||fffd||fffd||702||fffd|
'|fffd|c|fffd||fffd||fffd||1c2||fffd||fffd||fffd||142||fffd||fffd||389||fffd||fffd||fffd||fffd||702||fffd|
'xy|fffd||30f||fffd||fffd||242||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
'|fffd||fffd||fffd|_|fffd||34e||fffd||fffd|v|fffd||fffd||fffd||142||fffd||fffd|A|fffd||fffd||fffd||30b|t|fffd||142||fffd||fffd||fffd||fffd||702||fffd||fffd||702||fffd||fffd||fffd|
'Area3Angle_xy|fffd||fffd||fffd|g|fffd||fffd||fffd||10c|v|fffd|Z|fffd||fffd||fffd||702||fffd||fffd||302||141|A|fffd||fffd||fffd||4c2||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||fffd| Variant |fffd||242||fffd||fffd||702||fffd||fffd||fffd|
    Dim al, au, bl, bu, array_size, xs(), ys(), n, xy
     If IsObject(xyarray) Then
     '|fffd|Z|fffd||fffd||fffd||348||342||30f||a347||fffd||341|A|fffd||fffd||fffd||312|l|fffd||fffd|z|fffd||fffd||253||fffd||fffd||fffd||fffd|
        xy = xyarray.Formula
     ElseIf IsArray(xyarray) Then
     '|fffd|z|fffd||fffd||30f||a347||fffd||342||fffd||fffd||302||702||fffd|
        xy = xyarray
     Else
         AreaPolygon_xyarray = "|fffd|G|fffd||fffd||fffd|[!(|fffd|z|fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|)"
         Exit Function
     End If
     
     On Error Resume Next
     '|fffd|Q|fffd||fffd||fffd|z|fffd||42a42||1c2||fffd||fffd||fffd||fffd||fffd||fffd||5c2||fffd|
    al = LBound(xy)
     au = UBound(xy)
     bl = LBound(xy, 2)
     bu = UBound(xy, 2)
     If Err.Number > 0 Then
         AreaPolygon_xyarray = "|fffd|G|fffd||fffd||fffd|[!(|fffd|K|fffd||602||214|z|fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|)"
         Exit Function
     End If
     If Not (((au - al) = 1) Or ((bu - bl) = 1)) Then
         AreaPolygon_xyarray = "|fffd|G|fffd||fffd||fffd|[!(2|fffd||fffd||fffd|z|fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|)"
         Exit Function
     End If
     
     If (au - al) = 1 Then '|fffd|c|fffd|z|fffd||fffd|
        array_size = bu - bl
         ReDim xs(array_size)
         ReDim ys(array_size)
         For n = 0 To bu - bl 'xs,ys|fffd|z|fffd||fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd|
            xs(n) = Val(xyarray(al, bl + n))
             ys(n) = Val(xyarray(au, bl + n))
         Next n
     Else '|fffd||fffd||fffd|z|fffd||fffd|
        array_size = au - al
         ReDim xs(array_size)
         ReDim ys(array_size)
         For n = 0 To au - al 'xs,ys|fffd|z|fffd||fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd|
            xs(n) = Val(xyarray(al + n, bl))
             ys(n) = Val(xyarray(al + n, bu))
         Next n
     End If
     
     AreaPolygon_xyarray = 0
     For n = 0 To array_size - 2
     '|fffd|R|fffd|p|fffd|`|fffd||fffd|(n-2)|fffd||fffd||fffd||d0b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd|n|fffd|p|fffd|`
        AreaPolygon_xyarray = AreaPolygon_xyarray + _
             Area3Angle_xy(xs(0), xs(n + 1), xs(n + 2), ys(0), ys(n + 1), ys(n + 2))
     Next n
     
 End Function







Attribute VB_Name = "Graph"

'|fffd|F|fffd|x|fffd|O|fffd||fffd||fffd|t

Sub Chromaticity_graph()
   Dim s As String
   Dim LED1 As String
   Dim LED As String
   Dim c() As String
   Dim Basic_data As Range
   Dim graph_area As Range
   Dim counter As Integer
   Dim Threshold_line As Integer
   Dim Processing_row As Integer
   Dim Processing_column As Integer
   Dim H_axis_title As String
   Dim V_axis_title As String
   Dim n1 As String
   Dim n2 As Integer
   Dim n3 As String
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim FoundCell As Variant
   Dim GYO As Long
   Dim Mem_R As Variant

  
  ActiveSheet.ChartObjects("Chromaticity").Activate
  ActiveChart.ChartArea.ClearContents


    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With

  For Processing_row = Mem_R To s
   
   
      LED1 = Cells(Processing_row, 19).Value
      If LED1 = "" Then
          LED1 = 1
      End If
      
      If LED1 <> LED Then
        
        ReDim Preserve c(counter)
           c(counter) = Processing_row
        
         Threshold_line = Processing_row
         counter = counter + 1
         LED = LED1
      End If
        
   Next Processing_row
      ReDim Preserve c(counter)
      c(counter) = Processing_row
      n1 = counter


     Set Basic_data = Application.Union(Range(Cells(Mem_R, 7), Cells((c(1) - 1), 7)), _
                                     Range(Cells(Mem_R, 8), Cells((c(1) - 1), 8)))

       

    With ActiveSheet.ChartObjects("Chromaticity").Chart
        .ChartType = xlXYScatter
       .SetSourceData Source:=Basic_data, PlotBy:=xlColumns
        .SeriesCollection(1).Name = Cells(Mem_R, 19).Value
        
   For n2 = 2 To n1
        n3 = n2 - 1

       .SeriesCollection.NewSeries
       .SeriesCollection(n2).XValues = Range(Cells((c(n3)), 7), Cells((c(n2)), 7))           'LED2|fffd||fffd|X|fffd||fffd|
       .SeriesCollection(n2).Values = Range(Cells((c(n3)), 8), Cells((c(n2)), 8))             'LED2|fffd||fffd|Y|fffd||fffd|
       .SeriesCollection(n2).Name = Cells(c(n3), 19).Value

      
        
     
   Next n2
   
       .SeriesCollection.NewSeries
       .SeriesCollection(n1 + 1).XValues = Range("j8")            'PQ|fffd||fffd|X
       .SeriesCollection(n1 + 1).Values = Range("j9")             'PQ|fffd||fffd|Y
       .SeriesCollection(n1 + 1).Name = "PQ"
 
       .SeriesCollection.NewSeries
       .SeriesCollection(n1 + 2).XValues = Range("e16, e16,g16, g16,e16")     'Spec|fffd||fffd|X
       .SeriesCollection(n1 + 2).Values = Range("e17, g17,g17, e17,e17")      'Spec|fffd||fffd|Y
       .SeriesCollection(n1 + 2).Name = "SPEC"
       
       
 
      .HasTitle = True
      .ChartTitle.Characters.Text = "Chromaticity variation (measurement)"              '|fffd|O|fffd||fffd||fffd|t|fffd||fffd|
      .Axes(xlCategory, xlPrimary).HasTitle = True                    '|fffd||fffd|H_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "x" '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|H_axis_title
      .Axes(xlValue, xlPrimary).HasTitle = True                       '|fffd||fffd|V_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "y"    '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|V_axis_title

     With .SeriesCollection(n1 + 1)
         .MarkerStyle = xlMarkerStyleCircle
         .MarkerSize = 12                            'PQ|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .MarkerBackgroundColorIndex = 3
      End With

     With .SeriesCollection(n1 + 2)
         .MarkerStyle = xlMarkerStyleNone
         '.MarkerSize = 0                            'SPEC|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .Format.Line.Weight = 4
         '.ObjectThemeColor = msoThemeColorAccent6
          .Border.ColorIndex = 46

         
      End With


      With .Axes(xlCategory)
          .HasMajorGridlines = True                                   '|fffd|c|fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd||fffd||fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|20|fffd||242||fffd||fffd||fffd|
      End With

      With .Axes(xlValue)
          .HasMajorGridlines = True                                   '|fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd|c|fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|100|fffd||242||fffd||fffd||fffd|
      End With

    End With
  
End Sub

'|fffd|F|fffd|x|fffd|O|fffd||fffd||fffd|t_|fffd||fffd||fffd||fffd|

Sub Chromaticity_graph_A()
   Dim s As String
   Dim LED1 As String
   Dim LED As String
   Dim c() As String
   Dim Basic_data As Range
   Dim graph_area As Range
   Dim counter As Integer
   Dim Threshold_line As Integer
   Dim Processing_row As Integer
   Dim Processing_column As Integer
   Dim H_axis_title As String
   Dim V_axis_title As String
   Dim n1 As String
   Dim n2 As Integer
   Dim n3 As String
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim FoundCell As Variant
   Dim GYO As Long
   Dim Mem_R As Variant

  
  ActiveSheet.ChartObjects("Chromaticity_A").Activate
  ActiveChart.ChartArea.ClearContents


    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With

  For Processing_row = Mem_R To s
   
   
      LED1 = Cells(Processing_row, 19).Value
      If LED1 = "" Then
          LED1 = 1
      End If
      
      If LED1 <> LED Then
        
        ReDim Preserve c(counter)
           c(counter) = Processing_row
        
         Threshold_line = Processing_row
         counter = counter + 1
         LED = LED1
      End If
        
   Next Processing_row
      ReDim Preserve c(counter)
      c(counter) = Processing_row
      n1 = counter


     Set Basic_data = Application.Union(Range(Cells(Mem_R, 26), Cells((c(1) - 1), 26)), _
                                     Range(Cells(Mem_R, 27), Cells((c(1) - 1), 27)))
  
       

    With ActiveSheet.ChartObjects("Chromaticity_A").Chart
        .ChartType = xlXYScatter
       .SetSourceData Source:=Basic_data, PlotBy:=xlColumns
        .SeriesCollection(1).Name = Cells(Mem_R, 19).Value
        
   For n2 = 2 To n1
        n3 = n2 - 1

       .SeriesCollection.NewSeries
       .SeriesCollection(n2).XValues = Range(Cells((c(n3)), 26), Cells((c(n2)), 26))           'LED2|fffd||fffd|X|fffd||fffd|
       .SeriesCollection(n2).Values = Range(Cells((c(n3)), 27), Cells((c(n2)), 27))             'LED2|fffd||fffd|Y|fffd||fffd|
       .SeriesCollection(n2).Name = Cells(c(n3), 19).Value

      
        
     
   Next n2
   
       .SeriesCollection.NewSeries
       .SeriesCollection(n1 + 1).XValues = Range("j8")            'PQ|fffd||fffd|X
       .SeriesCollection(n1 + 1).Values = Range("j9")             'PQ|fffd||fffd|Y
       .SeriesCollection(n1 + 1).Name = "PQ"
 
       .SeriesCollection.NewSeries
       .SeriesCollection(n1 + 2).XValues = Range("e16, e16,g16, g16,e16")     'Spec|fffd||fffd|X
       .SeriesCollection(n1 + 2).Values = Range("e17, g17,g17, e17,e17")      'Spec|fffd||fffd|Y
       .SeriesCollection(n1 + 2).Name = "SPEC"
       
       
 
      .HasTitle = True
      .ChartTitle.Characters.Text = "Chromaticity variation (actual)"              '|fffd|O|fffd||fffd||fffd|t|fffd||fffd|
      .Axes(xlCategory, xlPrimary).HasTitle = True                    '|fffd||fffd|H_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "x" '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|H_axis_title
      .Axes(xlValue, xlPrimary).HasTitle = True                       '|fffd||fffd|V_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "y"    '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|V_axis_title

     With .SeriesCollection(n1 + 1)
         .MarkerStyle = xlMarkerStyleCircle
         .MarkerSize = 12                            'PQ|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .MarkerBackgroundColorIndex = 3
      End With

     With .SeriesCollection(n1 + 2)
         .MarkerStyle = xlMarkerStyleNone
         '.MarkerSize = 0                            'SPEC|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .Format.Line.Weight = 4
         '.ObjectThemeColor = msoThemeColorAccent6
          .Border.ColorIndex = 46

         
      End With


      With .Axes(xlCategory)
          .HasMajorGridlines = True                                   '|fffd|c|fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd||fffd||fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|20|fffd||242||fffd||fffd||fffd|
      End With

      With .Axes(xlValue)
          .HasMajorGridlines = True                                   '|fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd|c|fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|100|fffd||242||fffd||fffd||fffd|
      End With

    End With
  
End Sub

'|fffd|P|fffd|x|fffd|O|fffd||fffd||fffd|t

Sub Lum_graph()
    Dim s As String
    Dim s1 As String
    Dim Lvc_data As Range
    Dim axis_data As Range
    Dim graph_area As Range
     
    Dim lngLeft   As Long
    Dim lngTop    As Long
    Dim lngRight As Long
    Dim lngBottom As Long
    Dim objShape As Object
    Dim FoundCell As Variant
    Dim GYO As Long
    Dim Mem_R As Variant
    Dim AVG As Variant
    

   ActiveSheet.ChartObjects("Lvc").Activate
   ActiveChart.ChartArea.ClearContents

 
   
   With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With
    
    

   Set Lvc_data = Application.Union(Range(Cells(Mem_R, 5), Cells(s, 5)), _
                                     Range(Cells(Mem_R, 5), Cells(s, 5)))


   Set axis_data = Range(Cells(Mem_R, 3), Cells(s, 3))


  
        
   With ActiveSheet.ChartObjects("Lvc").Chart
    .SetSourceData Source:=Lvc_data, PlotBy:=xlColumns
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
   
    .SeriesCollection.NewSeries
    .SeriesCollection(2).Values = Range(Cells(Mem_R, 4), Cells(s, 4))
    .SeriesCollection(2).ChartType = xlLine
    .SeriesCollection(2).Name = "Spec"
    .SeriesCollection(1).Name = Cells(11, 4).Value
    
   End With
   
    AVG = Application.WorksheetFunction.RoundDown((Cells(s + 1, 5)), -1)

   ActiveSheet.ChartObjects("Lvc").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .HasTitle = True
        .ChartTitle.Characters.Text = "Luminance(measurement)"
        If Range("E15").Value <> "" Then
        .Axes(xlValue).MinimumScale = Application.WorksheetFunction.RoundDown((Range("E15") - 50), -2)
        Else
        .Axes(xlValue).MinimumScale = 50
        End If
        
        If Range("F15").Value <> "0" Then
        .Axes(xlValue).MaximumScale = Application.WorksheetFunction.RoundDown((Range("F15") + 100), -1)
        Else
        .Axes(xlValue).MaximumScale = AVG + 100
        End If
        
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "No."
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Lvc"
    End With


    '|fffd|F|fffd||fffd||fffd||fffd|
   
       
End Sub

'|fffd|P|fffd|x|fffd|O|fffd||fffd||fffd|t_|fffd||fffd||fffd||fffd|

Sub Lum_graph_A()
    Dim s As String
    Dim s1 As String
    Dim Lvc_data As Range
    Dim axis_data As Range
    Dim graph_area As Range
     
    Dim lngLeft   As Long
    Dim lngTop    As Long
    Dim lngRight As Long
    Dim lngBottom As Long
    Dim objShape As Object
    Dim FoundCell As Variant
    Dim GYO As Long
    Dim Mem_R As Variant
    Dim AVG As Variant

   ActiveSheet.ChartObjects("Lvc_A").Activate
   ActiveChart.ChartArea.ClearContents

 
   
   With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With
    
    

   Set Lvc_data = Application.Union(Range(Cells(Mem_R, 25), Cells(s, 25)), _
                                     Range(Cells(Mem_R, 25), Cells(s, 25)))


   Set axis_data = Range(Cells(Mem_R, 3), Cells(s, 3))


  
        
   With ActiveSheet.ChartObjects("Lvc_A").Chart
    .SetSourceData Source:=Lvc_data, PlotBy:=xlColumns
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
   
    .SeriesCollection.NewSeries
    .SeriesCollection(2).Values = Range(Cells(Mem_R, 4), Cells(s, 4))
    .SeriesCollection(2).ChartType = xlLine
    .SeriesCollection(2).Name = "Spec"
    .SeriesCollection(1).Name = Cells(11, 4).Value
    
   End With
   
   AVG = Application.WorksheetFunction.RoundDown((Cells(s + 1, 5)), -1)

   ActiveSheet.ChartObjects("Lvc_A").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .HasTitle = True
        .ChartTitle.Characters.Text = "Luminance(Actual)"
        If Range("E15").Value <> "" Then
        .Axes(xlValue).MinimumScale = Application.WorksheetFunction.RoundDown((Range("E15") - 50), -2)
        Else
        .Axes(xlValue).MinimumScale = 50
        End If
        
        If Range("F15").Value <> "0" Then
        .Axes(xlValue).MaximumScale = Application.WorksheetFunction.RoundDown((Range("F15") + 100), -1)
        Else
        .Axes(xlValue).MaximumScale = AVG + 100
        End If
        
        
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "No."
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Lvc"
    End With


    'Color
   
       
End Sub


'|fffd|F|fffd||fffd||fffd||fffd|

Sub Color()
    Dim tmp As Variant, i As Long, j As Long
    Dim tmp1 As Variant
    Dim s As String
    Dim s1 As Long
    Dim LED1 As String
    Dim LED As String
    Dim c() As String
    Dim Basic_data As Range
    Dim graph_area As Range
    Dim counter As Integer
    Dim Threshold_line As Integer
    Dim Processing_row As Integer
    Dim Processing_column As Integer
    Dim FoundCell As Variant
    Dim GYO As Long
    Dim n1 As String
    Dim n2 As Integer
    Dim n3 As String
    Dim Mem_R As Variant
     
   With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With
     
     
   For Processing_row = Mem_R To s
    LED1 = Cells(Processing_row, 19).Value
      If LED1 <> LED Then
        
        ReDim Preserve c(counter)
           c(counter) = Cells(Processing_row, 19).Value
        
         Threshold_line = Processing_row
         counter = counter + 1
         LED = LED1
      End If
        
   Next Processing_row
      ReDim Preserve c(counter)
      c(counter) = Cells(Processing_row, 19).Value
     n1 = counter
    
    
    
    
    
    
    
   tmp = ActiveSheet.ChartObjects("Lvc").Chart.SeriesCollection(2).XValues
  ' temp1 = Range(Cells(60, 3), Cells(s, 3)).Value
   
     'Range("c110").Value = Cells(s1, 19)
    
   For j = 0 To n1 - 1
    For i = Mem_R To s
       
        If Cells(i, 19) = c(0) Then
            With ActiveSheet.ChartObjects("Lvc").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 23
                .Interior.Pattern = xlSolid
                
            End With
            
             With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 23
                .Interior.Pattern = xlSolid
                
            End With
        ElseIf Cells(i, 19) = c(1) Then
            With ActiveSheet.ChartObjects("Lvc").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 30
                .Interior.Pattern = xlSolid
                
            End With
            
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 30
                .Interior.Pattern = xlSolid
                
            End With
            
        ElseIf Cells(i, 19) = c(2) Then
            With ActiveSheet.ChartObjects("Lvc").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 43
                .Interior.Pattern = xlSolid
                
            End With
            
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 43
                .Interior.Pattern = xlSolid
                
            End With
            
        ElseIf Cells(i, 19) = c(3) Then
            With ActiveSheet.ChartObjects("Lvc").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 54
                .Interior.Pattern = xlSolid
                
            End With
            
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 54
                .Interior.Pattern = xlSolid
                
            End With
            
        End If
    Next i
  Next j
  
    
End Sub

Sub Color_A()
    Dim tmp As Variant, i As Long, j As Long
    Dim tmp1 As Variant
    Dim s As String
    Dim s1 As Long
    Dim LED1 As String
    Dim LED As String
    Dim c() As String
    Dim Basic_data As Range
    Dim graph_area As Range
    Dim counter As Integer
    Dim Threshold_line As Integer
    Dim Processing_row As Integer
    Dim Processing_column As Integer
    Dim FoundCell As Variant
    Dim GYO As Long
    Dim n1 As String
    Dim n2 As Integer
    Dim n3 As String
    Dim Mem_R As Variant
     
   With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With
     
     
   For Processing_row = Mem_R To s
    LED1 = Cells(Processing_row, 19).Value
      If LED1 <> LED Then
        
        ReDim Preserve c(counter)
           c(counter) = Cells(Processing_row, 19).Value
        
         Threshold_line = Processing_row
         counter = counter + 1
         LED = LED1
      End If
        
   Next Processing_row
      ReDim Preserve c(counter)
      c(counter) = Cells(Processing_row, 19).Value
     n1 = counter
    
    
    
    
    
    
    
   tmp = ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(2).XValues
  ' temp1 = Range(Cells(60, 3), Cells(s, 3)).Value
   
     'Range("c110").Value = Cells(s1, 19)
    
   For j = 0 To n1 - 1
    For i = Mem_R To s
       
        If Cells(i, 19) = c(0) Then
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 23
                .Interior.Pattern = xlSolid
                
            End With
        ElseIf Cells(i, 19) = c(1) Then
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 30
                .Interior.Pattern = xlSolid
                
            End With
            
        ElseIf Cells(i, 19) = c(2) Then
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 43
                .Interior.Pattern = xlSolid
                
            End With
        ElseIf Cells(i, 19) = c(3) Then
            With ActiveSheet.ChartObjects("Lvc_A").Chart.SeriesCollection(1).Points(i - (Mem_R - 1))
                .Interior.ColorIndex = 54
                .Interior.Pattern = xlSolid
                
            End With
            
            
        End If
    Next i
  Next j
  
    
End Sub






Sub Chromaticity_graph_non()
   Dim s As String
   Dim LED1 As String
   Dim LED As String
   Dim c() As String
   Dim Basic_data As Range
   Dim graph_area As Range
   Dim counter As Integer
   Dim Threshold_line As Integer
   Dim Processing_row As Integer
   Dim Processing_column As Integer
   Dim H_axis_title As String
   Dim V_axis_title As String
   Dim n1 As String
   Dim n2 As Integer
   Dim n3 As String
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim FoundCell As Variant
   Dim GYO As Long
   Dim Mem_R As Variant

  
  ActiveSheet.ChartObjects("Chromaticity").Activate
  ActiveChart.ChartArea.ClearContents


    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With

 ' For Processing_row = Mem_R To s
   
   
 '     LED1 = Cells(Processing_row, 19).Value
 '     If LED1 = "" Then
 '         LED1 = 1
 '     End If
 '
 '     If LED1 <> LED Then
 '
 '       ReDim Preserve c(counter)
 '          c(counter) = Processing_row
 '
 '        Threshold_line = Processing_row
 '
 '        counter = counter + 1
 '        LED = LED1
 '     End If
 '
 '  Next Processing_row
 '     ReDim Preserve c(counter)
 '     c(counter) = Processing_row
 '     n1 = counter


     Set Basic_data = Application.Union(Range(Cells(Mem_R, 7), Cells(s, 7)), _
                                     Range(Cells(Mem_R, 8), Cells(s, 8)))

       

    With ActiveSheet.ChartObjects("Chromaticity").Chart
        .ChartType = xlXYScatter
       .SetSourceData Source:=Basic_data, PlotBy:=xlColumns
        .SeriesCollection(1).Name = Cells(11, 4).Value
        
 '  For n2 = 2 To n1
 '       n3 = n2 - 1

   '    .SeriesCollection.NewSeries
   '    .SeriesCollection(n2).XValues = Range(Cells((c(n3)), 7), Cells((c(n2)), 7))           'LED2|fffd||fffd|X|fffd||fffd|
   '    .SeriesCollection(n2).Values = Range(Cells((c(n3)), 8), Cells((c(n2)), 8))             'LED2|fffd||fffd|Y|fffd||fffd|
   '    .SeriesCollection(n2).Name = Cells(c(n3), 19).Value

      
        
     
  ' Next n2
   
       .SeriesCollection.NewSeries
       .SeriesCollection(2).XValues = Range("j8")            'PQ|fffd||fffd|X
       .SeriesCollection(2).Values = Range("j9")             'PQ|fffd||fffd|Y
       .SeriesCollection(2).Name = "PQ"
 
       .SeriesCollection.NewSeries
       .SeriesCollection(3).XValues = Range("e16, e16,g16, g16,e16")     'Spec|fffd||fffd|X
       .SeriesCollection(3).Values = Range("e17, g17,g17, e17,e17")      'Spec|fffd||fffd|Y
       .SeriesCollection(3).Name = "SPEC"
       
       
 
      .HasTitle = True
      .ChartTitle.Characters.Text = "Chromaticity variation (measurement)"              '|fffd|O|fffd||fffd||fffd|t|fffd||fffd|
      .Axes(xlCategory, xlPrimary).HasTitle = True                    '|fffd||fffd|H_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "x" '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|H_axis_title
      .Axes(xlValue, xlPrimary).HasTitle = True                       '|fffd||fffd|V_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "y"    '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|V_axis_title

     With .SeriesCollection(2)
         .MarkerStyle = xlMarkerStyleCircle
         .MarkerSize = 12                            'PQ|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .MarkerBackgroundColorIndex = 3
      End With

     With .SeriesCollection(3)
         .MarkerStyle = xlMarkerStyleNone
         '.MarkerSize = 0                            'SPEC|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .Format.Line.Weight = 4
         '.ObjectThemeColor = msoThemeColorAccent6
          .Border.ColorIndex = 46

         
      End With


      With .Axes(xlCategory)
          .HasMajorGridlines = True                                   '|fffd|c|fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd||fffd||fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|20|fffd||242||fffd||fffd||fffd|
      End With

      With .Axes(xlValue)
          .HasMajorGridlines = True                                   '|fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd|c|fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|100|fffd||242||fffd||fffd||fffd|
      End With

    End With
  
End Sub

Sub Chromaticity_graph_A_non()
   Dim s As String
   Dim LED1 As String
   Dim LED As String
   Dim c() As String
   Dim Basic_data As Range
   Dim graph_area As Range
   Dim counter As Integer
   Dim Threshold_line As Integer
   Dim Processing_row As Integer
   Dim Processing_column As Integer
   Dim H_axis_title As String
   Dim V_axis_title As String
   Dim n1 As String
   Dim n2 As Integer
   Dim n3 As String
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim FoundCell As Variant
   Dim GYO As Long
   Dim Mem_R As Variant

  
  ActiveSheet.ChartObjects("Chromaticity_A").Activate
  ActiveChart.ChartArea.ClearContents


    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With




     Set Basic_data = Application.Union(Range(Cells(Mem_R, 26), Cells(s, 26)), _
                                     Range(Cells(Mem_R, 27), Cells(s, 27)))
  
       

    With ActiveSheet.ChartObjects("Chromaticity_A").Chart
        .ChartType = xlXYScatter
       .SetSourceData Source:=Basic_data, PlotBy:=xlColumns
        .SeriesCollection(1).Name = Cells(11, 4).Value
        
 
   
       .SeriesCollection.NewSeries
       .SeriesCollection(2).XValues = Range("j8")            'PQ|fffd||fffd|X
       .SeriesCollection(2).Values = Range("j9")             'PQ|fffd||fffd|Y
       .SeriesCollection(2).Name = "PQ"
 
       .SeriesCollection.NewSeries
       .SeriesCollection(3).XValues = Range("e16, e16,g16, g16,e16")     'Spec|fffd||fffd|X
       .SeriesCollection(3).Values = Range("e17, g17,g17, e17,e17")      'Spec|fffd||fffd|Y
       .SeriesCollection(3).Name = "SPEC"
       
       
 
      .HasTitle = True
      .ChartTitle.Characters.Text = "Chromaticity variation (actual)"              '|fffd|O|fffd||fffd||fffd|t|fffd||fffd|
      .Axes(xlCategory, xlPrimary).HasTitle = True                    '|fffd||fffd|H_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "x" '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|H_axis_title
      .Axes(xlValue, xlPrimary).HasTitle = True                       '|fffd||fffd|V_axis_title|fffd||fffd|t|fffd||fffd||fffd||fffd|
      .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "y"    '|fffd|t|fffd||fffd||fffd||90bb||fffd||fffd|V_axis_title

     With .SeriesCollection(2)
         .MarkerStyle = xlMarkerStyleCircle
         .MarkerSize = 12                            'PQ|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .MarkerBackgroundColorIndex = 3
      End With

     With .SeriesCollection(3)
         .MarkerStyle = xlMarkerStyleNone
         '.MarkerSize = 0                            'SPEC|fffd||303|}|fffd|[|fffd|J|fffd|[|fffd||303|T|fffd|C|fffd|Y
         .Format.Line.Weight = 4
         '.ObjectThemeColor = msoThemeColorAccent6
          .Border.ColorIndex = 46

         
      End With


      With .Axes(xlCategory)
          .HasMajorGridlines = True                                   '|fffd|c|fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd||fffd||fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|20|fffd||242||fffd||fffd||fffd|
      End With

      With .Axes(xlValue)
          .HasMajorGridlines = True                                   '|fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          .HasMinorGridlines = False
          .MinimumScale = 0.23                                         '|fffd|c|fffd||fffd||fffd||30d||14f||fffd||fffd|l|fffd||fffd|100|fffd||242||fffd||fffd||fffd|
      End With

    End With
  
End Sub



Attribute VB_Name = "Histogram"
Option Explicit

Dim Histogram_analysis As String
Dim extension As String


'Const Mem_R As Variant = 50   '|fffd||fffd||fffd||28b|L|fffd||697|p|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||30d||142||fffd||fffd||fffd||30d|s|fffd||50d||fffd|  |fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|U|fffd|C|fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||310||fffd||fffd|l|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|

'|fffd|P|fffd|x|fffd||fffd||fffd|z

'******************************************************
Sub Lvc_histogram()
'******************************************************
   Dim graph_data As Range
   Dim graph_area As Range
   Dim axis_data As Range
   Dim Last_row As Integer
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
    Dim lngLeft   As Long
    Dim lngTop    As Long
    Dim lngRight As Long
    Dim lngBottom As Long
    Dim objShape As Object


 
   
   
   Call Get_OS_version_Excel_version
   
  

   ThisWorkbook.Worksheets("WKG").Activate
   
   
   
   
   
    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
   
    Last_row = s + 2
    
   
     '|fffd|O|fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||d3dc|
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
    Cells(s + 27, 4).CurrentRegion.ClearContents
   'Range("E59").Select
        
    
    If Cells(15, 6).Value = "0" Then
        Cells(s + 32, 4).Value = Application.WorksheetFunction.RoundDown((Cells(s + 1, 5)), -1) + 20
    
    Else
        Cells(s + 32, 4).Value = Cells(15, 6) + 20
    
    End If
    
    Cells(s + 31, 4).Value = Cells(s + 32, 4) - 20
    Cells(s + 30, 4).Value = Cells(s + 32, 4) - 40
    Cells(s + 29, 4).Value = Cells(s + 32, 4) - 60
    Cells(s + 28, 4).Value = Cells(s + 32, 4) - 80
    Cells(s + 27, 4).Value = Cells(s + 32, 4) - 100
    Cells(s + 33, 4).Value = Cells(s + 32, 4) + 20
    Cells(s + 34, 4).Value = Cells(s + 32, 4) + 40
    Cells(s + 35, 4).Value = Cells(s + 32, 4) + 60
    Cells(s + 36, 4).Value = Cells(s + 32, 4) + 80
    Cells(s + 37, 4).Value = Cells(s + 32, 4) + 100

    
    
    If Cells(15, 6).Value = "0" Then
        Cells(s + 32, 3).Value = Application.WorksheetFunction.RoundDown((Cells(s + 1, 5)), -1)
    
    Else
        Cells(s + 32, 3).Value = Cells(15, 6)
    
    End If
        
    Cells(s + 31, 3).Value = Cells(s + 32, 4) - 40
    Cells(s + 30, 3).Value = Cells(s + 32, 4) - 60
    Cells(s + 29, 3).Value = Cells(s + 32, 4) - 80
    Cells(s + 28, 3).Value = Cells(s + 32, 4) - 100
    Cells(s + 27, 3).Value = Cells(s + 32, 4) - 120
    Cells(s + 33, 3).Value = Cells(s + 32, 4)
    Cells(s + 34, 3).Value = Cells(s + 32, 4) + 20
    Cells(s + 35, 3).Value = Cells(s + 32, 4) + 40
    Cells(s + 36, 3).Value = Cells(s + 32, 4) + 60
    Cells(s + 37, 3).Value = Cells(s + 32, 4) + 80
    
     
 
    s1 = Cells(Mem_R - 1, 5).Address()
    

   'Excel 2003 |fffd||fffd| 2007 |fffd||20d|~|fffd||142||341|A|fffd||fffd||fffd||343|c|fffd|[|fffd||fffd||fffd||fffd|extension|fffd||fffd||fffd||10a4|
   Application.Run Histogram_analysis _
      , ActiveSheet.Range(s1).Resize(Last_row - Mem_R, 1) _
      , Worksheets("WKG").Range(Cells(s + 26, 5), Cells(s + 38, 5)) _
      , Worksheets("WKG").Range(Cells(s + 26, 4), Cells(s + 38, 4)) _
      , False, False, False, True
   '|fffd|q|fffd|X|fffd|g|fffd|O|fffd||fffd||fffd||fffd||fffd|o|fffd||354||348||342||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||33d1||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd| [OK] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
   
   '|fffd|O|fffd||fffd||fffd|t|fffd||248||682||fffd|O|fffd||241|A|fffd|Z|fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|W|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|B
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
   
   Cells(s + 26, 6).Value = "Lvc dispersion"
   Set graph_data = Range(Cells(s + 27, 6), Cells(s + 37, 6))
   Set axis_data = Range(Cells(s + 27, 3), Cells(s + 37, 3))
   

   ThisWorkbook.Worksheets("WKG").Activate
  
        
   With ActiveSheet.ChartObjects("Lum").Chart
    .SetSourceData Source:=graph_data
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
    .HasLegend = False
    
    
   End With
   
   '|fffd||fffd|Excel 2003 |fffd|p|fffd|R|fffd|[|fffd|h|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||341|AExcel 2007 |fffd||142||fffd||fffd|g|fffd||fffd||fffd||fffd|B
   ActiveSheet.ChartObjects("Lum").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Lvc"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Number"
        
        
    End With
    
    Application.ScreenUpdating = True
    

    Cells(s + 26, 3).Select
      
End Sub

'OS|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|Excel|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|

'******************************************************
Private Sub Get_OS_version_Excel_version()
'******************************************************

   Dim OS_name As String
   Dim Excel_version As Integer

    OS_name = Application.OperatingSystem
    Excel_version = CInt(Application.Version)
            
'            2000 |fffd|F5.00
'            XP   |fffd|F5.01
'            Vista|fffd|F6.00

'            2003 |fffd|F11.0
'            2007 |fffd|F12.0
   If Excel_version > 11 Then
      extension = ".xlsx"
      Histogram_analysis = "ATPVBAEN.XLAM!Histogram"
   Else
      extension = ".xls"
      Histogram_analysis = "ATPVBAEN.XLA!Histogram"
   End If
   
End Sub


'|fffd||fffd||fffd|j|fffd|t|fffd|H|fffd|~|fffd|e|fffd|B|fffd||fffd||fffd|z

'******************************************************
Sub Uniformity_histogram()
'******************************************************
   Dim graph_data As Range
   Dim graph_area As Range
   Dim axis_data As Range
   Dim Last_row As Integer
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
    Dim lngLeft   As Long
    Dim lngTop    As Long
    Dim lngRight As Long
    Dim lngBottom As Long
    Dim objShape As Object


 
   
   
   Call Get_OS_version_Excel_version
   
  

   ThisWorkbook.Worksheets("WKG").Activate
   
   
   
   
   
    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
   
    Last_row = s + 2
    
   
     '|fffd|O|fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||d3dc|
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
    Cells(s + 27, 11).CurrentRegion.ClearContents
   'Range("E59").Select
        
    
    
    
    Cells(s + 32, 13).Value = Application.RoundDown(Cells(s + 1, 6), 2) + 0.02
    Cells(s + 31, 13).Value = Cells(s + 32, 13) - 0.02
    Cells(s + 30, 13).Value = Cells(s + 32, 13) - 0.04
    Cells(s + 29, 13).Value = Cells(s + 32, 13) - 0.06
    Cells(s + 28, 13).Value = Cells(s + 32, 13) - 0.08
    Cells(s + 27, 13).Value = Cells(s + 32, 13) - 0.1
    Cells(s + 33, 13).Value = Cells(s + 32, 13) + 0.02
    Cells(s + 34, 13).Value = Cells(s + 32, 13) + 0.04
    Cells(s + 35, 13).Value = Cells(s + 32, 13) + 0.06
    Cells(s + 36, 13).Value = Cells(s + 32, 13) + 0.08
    Cells(s + 37, 13).Value = Cells(s + 32, 13) + 0.1

    Cells(s + 32, 12).Value = Application.RoundDown(Cells(s + 1, 6), 2)
    Cells(s + 31, 12).Value = Cells(s + 32, 13) - 0.04
    Cells(s + 30, 12).Value = Cells(s + 32, 13) - 0.06
    Cells(s + 29, 12).Value = Cells(s + 32, 13) - 0.08
    Cells(s + 28, 12).Value = Cells(s + 32, 13) - 0.1
    Cells(s + 27, 12).Value = Cells(s + 32, 13) - 0.12
    Cells(s + 33, 12).Value = Cells(s + 32, 13)
    Cells(s + 34, 12).Value = Cells(s + 32, 13) + 0.02
    Cells(s + 35, 12).Value = Cells(s + 32, 13) + 0.04
    Cells(s + 36, 12).Value = Cells(s + 32, 13) + 0.06
    Cells(s + 37, 12).Value = Cells(s + 32, 13) + 0.08
    
     
 
    s1 = Cells(Mem_R - 1, 6).Address()
    

   'Excel 2003 |fffd||fffd| 2007 |fffd||20d|~|fffd||142||341|A|fffd||fffd||fffd||343|c|fffd|[|fffd||fffd||fffd||30a|g|fffd||fffd||fffd|q|fffd||fffd||fffd||10a4|
   Application.Run Histogram_analysis _
      , ActiveSheet.Range(s1).Resize(Last_row - Mem_R, 1) _
      , Worksheets("WKG").Range(Cells(s + 26, 14), Cells(s + 38, 14)) _
      , Worksheets("WKG").Range(Cells(s + 26, 13), Cells(s + 38, 13)) _
      , False, False, False, True
   '|fffd|q|fffd|X|fffd|g|fffd|O|fffd||fffd||fffd||fffd||fffd|o|fffd||354||348||342||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||33d1||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd| [OK] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
   
   '|fffd|O|fffd||fffd||fffd|t|fffd||248||682||fffd|O|fffd||241|A|fffd|Z|fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|W|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|B
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
   
   Cells(s + 26, 15).Value = "Uni dispersion"
   Set graph_data = Range(Cells(s + 27, 15), Cells(s + 37, 15))
   Set axis_data = Range(Cells(s + 27, 12), Cells(s + 37, 12))
   

   ThisWorkbook.Worksheets("WKG").Activate
  
        
   With ActiveSheet.ChartObjects("Uniformity").Chart
    .SetSourceData Source:=graph_data
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
    .HasLegend = False
    
    
   End With
   
   '|fffd||fffd|Excel 2003 |fffd|p|fffd|R|fffd|[|fffd|h|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||341|AExcel 2007 |fffd||142||fffd||fffd|g|fffd||fffd||fffd||fffd|B
   ActiveSheet.ChartObjects("Uniformity").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Uniformity"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Number"
        
        
    End With
    
    Application.ScreenUpdating = True

    Cells(s + 26, 3).Select
      
End Sub


'******************************************************
Sub Uniformity_histogram_1()
'******************************************************
   Dim graph_data As Range
   Dim graph_area As Range
   Dim axis_data As Range
   Dim Last_row As Integer
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim j As String

 
   
   
   Call Get_OS_version_Excel_version
   
  

   ThisWorkbook.Worksheets("WKG").Activate
   
   
   
   
   
    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
   
    Last_row = s + 2
    
    j = Cells(s + 28, 12).Value - Cells(s + 27, 12).Value
   
    Cells(s + 27, 13).Value = Cells(s + 27, 12) + j
    Cells(s + 28, 13).Value = Cells(s + 28, 12) + j
    Cells(s + 29, 13).Value = Cells(s + 29, 12) + j
    Cells(s + 30, 13).Value = Cells(s + 30, 12) + j
    Cells(s + 31, 13).Value = Cells(s + 31, 12) + j
    Cells(s + 32, 13).Value = Cells(s + 32, 12) + j
    Cells(s + 33, 13).Value = Cells(s + 33, 12) + j
    Cells(s + 34, 13).Value = Cells(s + 34, 12) + j
    Cells(s + 35, 13).Value = Cells(s + 35, 12) + j
    Cells(s + 36, 13).Value = Cells(s + 36, 12) + j
    Cells(s + 37, 13).Value = Cells(s + 37, 12) + j
   
   
    s1 = Cells(Mem_R - 1, 6).Address()
    

   'Excel 2003 |fffd||fffd| 2007 |fffd||20d|~|fffd||142||341|A|fffd||fffd||fffd||343|c|fffd|[|fffd||fffd||fffd||30a|g|fffd||fffd||fffd|q|fffd||fffd||fffd||10a4|
   Application.Run Histogram_analysis _
      , ActiveSheet.Range(s1).Resize(Last_row - Mem_R, 1) _
      , Worksheets("WKG").Range(Cells(s + 26, 14), Cells(s + 38, 14)) _
      , Worksheets("WKG").Range(Cells(s + 26, 13), Cells(s + 38, 13)) _
      , False, False, False, True
   '|fffd|q|fffd|X|fffd|g|fffd|O|fffd||fffd||fffd||fffd||fffd|o|fffd||354||348||342||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||33d1||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd| [OK] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
   
   '|fffd|O|fffd||fffd||fffd|t|fffd||248||682||fffd|O|fffd||241|A|fffd|Z|fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|W|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|B
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
   
   Cells(s + 26, 15).Value = "Uni dispersion"
   Set graph_data = Range(Cells(s + 27, 15), Cells(s + 37, 15))
   Set axis_data = Range(Cells(s + 27, 12), Cells(s + 37, 12))
   

   ThisWorkbook.Worksheets("WKG").Activate
  
        
   With ActiveSheet.ChartObjects("Uniformity").Chart
    .SetSourceData Source:=graph_data
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
    .HasLegend = False
    
    
   End With
   
   '|fffd||fffd|Excel 2003 |fffd|p|fffd|R|fffd|[|fffd|h|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||341|AExcel 2007 |fffd||142||fffd||fffd|g|fffd||fffd||fffd||fffd|B
   ActiveSheet.ChartObjects("Uniformity").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Uniformity"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Number"
        
        
    End With
    
    Application.ScreenUpdating = True

    Cells(s + 26, 3).Select
      
End Sub

'******************************************************
Sub Lvc_histogram_1()
'******************************************************
   Dim graph_data As Range
   Dim graph_area As Range
   Dim axis_data As Range
   Dim Last_row As Integer
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim j As String

 
   
   
   Call Get_OS_version_Excel_version
   
  

   ThisWorkbook.Worksheets("WKG").Activate
   
   
   
   
   
    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
   
    Last_row = s + 2
    
    j = Cells(s + 28, 3).Value - Cells(s + 27, 3).Value
   
    Cells(s + 27, 4).Value = Cells(s + 27, 3) + j
    Cells(s + 28, 4).Value = Cells(s + 28, 3) + j
    Cells(s + 29, 4).Value = Cells(s + 29, 3) + j
    Cells(s + 30, 4).Value = Cells(s + 30, 3) + j
    Cells(s + 31, 4).Value = Cells(s + 31, 3) + j
    Cells(s + 32, 4).Value = Cells(s + 32, 3) + j
    Cells(s + 33, 4).Value = Cells(s + 33, 3) + j
    Cells(s + 34, 4).Value = Cells(s + 34, 3) + j
    Cells(s + 35, 4).Value = Cells(s + 35, 3) + j
    Cells(s + 36, 4).Value = Cells(s + 36, 3) + j
    Cells(s + 37, 4).Value = Cells(s + 37, 3) + j
   
   
    s1 = Cells(Mem_R - 1, 5).Address()
    

   'Excel 2003 |fffd||fffd| 2007 |fffd||20d|~|fffd||142||341|A|fffd||fffd||fffd||343|c|fffd|[|fffd||fffd||fffd||30a|g|fffd||fffd||fffd|q|fffd||fffd||fffd||10a4|
   Application.Run Histogram_analysis _
      , ActiveSheet.Range(s1).Resize(Last_row - Mem_R, 1) _
      , Worksheets("WKG").Range(Cells(s + 26, 5), Cells(s + 38, 5)) _
      , Worksheets("WKG").Range(Cells(s + 26, 4), Cells(s + 38, 4)) _
      , False, False, False, True
   '|fffd|q|fffd|X|fffd|g|fffd|O|fffd||fffd||fffd||fffd||fffd|o|fffd||354||348||342||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||33d1||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd| [OK] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
   
   '|fffd|O|fffd||fffd||fffd|t|fffd||248||682||fffd|O|fffd||241|A|fffd|Z|fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|W|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|B
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
   
   Cells(s + 26, 6).Value = "Lvc dispersion"
   Set graph_data = Range(Cells(s + 27, 6), Cells(s + 37, 6))
   Set axis_data = Range(Cells(s + 27, 3), Cells(s + 37, 3))
   

   ThisWorkbook.Worksheets("WKG").Activate
  
        
   With ActiveSheet.ChartObjects("Lum").Chart
    .SetSourceData Source:=graph_data
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
    .HasLegend = False
    
    
   End With
   
   '|fffd||fffd|Excel 2003 |fffd|p|fffd|R|fffd|[|fffd|h|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||341|AExcel 2007 |fffd||142||fffd||fffd|g|fffd||fffd||fffd||fffd|B
   ActiveSheet.ChartObjects("Lum").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Lvc"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Number"
        
        
    End With
    
    Application.ScreenUpdating = True
    

    Cells(s + 26, 3).Select
      
End Sub

'******************************************************
Sub Lvc_histogram_A()
'******************************************************
   Dim graph_data As Range
   Dim graph_area As Range
   Dim axis_data As Range
   Dim Last_row As Integer
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   Dim lngLeft   As Long
   Dim lngTop    As Long
   Dim lngRight As Long
   Dim lngBottom As Long
   Dim objShape As Object
   Dim j As String

 
   
   
   Call Get_OS_version_Excel_version
   
  

   ThisWorkbook.Worksheets("WKG").Activate
   
   
   
   
   
    With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
    
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
   
    Last_row = s + 2
    
        '|fffd|O|fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||d3dc|
   
         Cells(s + 27, 48).CurrentRegion.ClearContents
   
   
    If Cells(15, 6).Value = "0" Then
        Cells(s + 32, 48).Value = Application.WorksheetFunction.RoundDown((Cells(s + 1, 25)), -1) + 20
    
    Else
        Cells(s + 32, 47).Value = Cells(15, 6)
    
    End If
    
        
        Cells(s + 27, 47).Value = Cells(s + 32, 47) - 100
        Cells(s + 28, 47).Value = Cells(s + 32, 47) - 80
        Cells(s + 29, 47).Value = Cells(s + 32, 47) - 60
        Cells(s + 30, 47).Value = Cells(s + 32, 47) - 40
        Cells(s + 31, 47).Value = Cells(s + 32, 47) - 20
        Cells(s + 33, 47).Value = Cells(s + 32, 47) + 20
        Cells(s + 34, 47).Value = Cells(s + 32, 47) + 40
        Cells(s + 35, 47).Value = Cells(s + 32, 47) + 60
        Cells(s + 36, 47).Value = Cells(s + 32, 47) + 60
        Cells(s + 37, 47).Value = Cells(s + 32, 47) + 100
        
     
    j = Cells(s + 28, 47).Value - Cells(s + 27, 47).Value

       
    Cells(s + 27, 48).Value = Cells(s + 27, 47) + j
    Cells(s + 28, 48).Value = Cells(s + 28, 47) + j
    Cells(s + 29, 48).Value = Cells(s + 29, 47) + j
    Cells(s + 30, 48).Value = Cells(s + 30, 47) + j
    Cells(s + 31, 48).Value = Cells(s + 31, 47) + j
    Cells(s + 32, 48).Value = Cells(s + 32, 47) + j
    Cells(s + 33, 48).Value = Cells(s + 33, 47) + j
    Cells(s + 34, 48).Value = Cells(s + 34, 47) + j
    Cells(s + 35, 48).Value = Cells(s + 35, 47) + j
    Cells(s + 36, 48).Value = Cells(s + 36, 47) + j
    Cells(s + 37, 48).Value = Cells(s + 37, 47) + j
   
   
    s1 = Cells(Mem_R - 1, 25).Address()
    

   'Excel 2003 |fffd||fffd| 2007 |fffd||20d|~|fffd||142||341|A|fffd||fffd||fffd||343|c|fffd|[|fffd||fffd||fffd||30a|g|fffd||fffd||fffd|q|fffd||fffd||fffd||10a4|
   Application.Run Histogram_analysis _
      , ActiveSheet.Range(s1).Resize(Last_row - Mem_R, 1) _
      , Worksheets("WKG").Range(Cells(s + 26, 49), Cells(s + 38, 49)) _
      , Worksheets("WKG").Range(Cells(s + 26, 48), Cells(s + 38, 48)) _
      , False, False, False, True
   
   '|fffd|q|fffd|X|fffd|g|fffd|O|fffd||fffd||fffd||fffd||fffd|o|fffd||354||348||342||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||33d1||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd| [OK] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
   
   '|fffd|O|fffd||fffd||fffd|t|fffd||248||682||fffd|O|fffd||241|A|fffd|Z|fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|W|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|B
   'ThisWorkbook.Worksheets("|fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t|fffd|p|fffd|W|fffd|v|fffd|\").Activate
   
   Cells(s + 26, 50).Value = "Lvc dispersion"
   Set graph_data = Range(Cells(s + 27, 50), Cells(s + 37, 50))
   Set axis_data = Range(Cells(s + 27, 47), Cells(s + 37, 47))
   

   ThisWorkbook.Worksheets("WKG").Activate
  
        
   With ActiveSheet.ChartObjects("Lum_A").Chart
    .SetSourceData Source:=graph_data
    .ChartType = xlColumnClustered
'    .Axes(xlCategory).Select '|fffd||fffd|Excel 2003 |fffd||142||34a|O|fffd||fffd|
    .SeriesCollection(1).XValues = axis_data
    .HasLegend = False
    
    
   End With
   
   '|fffd||fffd|Excel 2003 |fffd|p|fffd|R|fffd|[|fffd|h|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||341|AExcel 2007 |fffd||142||fffd||fffd|g|fffd||fffd||fffd||fffd|B
   ActiveSheet.ChartObjects("Lum_A").Activate
    ActiveChart.ChartArea.Select
    With ActiveChart
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Lvc"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Number"
        
        
    End With
    
    Application.ScreenUpdating = True
    

    Cells(s + 26, 3).Select
      
End Sub

Attribute VB_Name = "Module1"
Function FolderPath2() As String
    '2002|fffd||20d|~|fffd||153||fffd||fffd||c0b5||fffd||702||fffd|
Dim strPATHNAME As String, vntPathName As Variant

    With Application.FileDialog(msoFileDialogFolderPicker)
            
        If .Show = -1 Then  '|fffd|A|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||a0bd|
            FolderPath2 = .SelectedItems(1)
            strPATHNAME = .SelectedItems(1)
        Else                '|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||a0bd|
            FolderPath2 = ""
            'strPathName = .SelectedItems(1)
        End If
         ' Range("D2").Value = strPATHNAME
    End With

End Function

Sub delete_name_and_style()

    On Error Resume Next

'|fffd||fffd||fffd|O|fffd||fffd|`|fffd||fffd|S|fffd||d3dc||fffd|i|fffd||fffd||fffd|O|fffd||fffd||fffd||590||fffd||fffd||fffd||fffd||311||fffd||fffd||257|L|fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||342||fffd||fffd||fffd||fffd||34d||d3dc||fffd|j

    Dim n As Name
    For Each n In ActiveWorkbook.Names
        n.Delete
    Next

'|fffd||fffd||fffd||fffd||fffd|i|fffd|X|fffd|^|fffd|C|fffd||fffd||fffd|j|fffd||fffd|`|fffd||fffd|S|fffd||d3dc|

    Dim M()

    j = ActiveWorkbook.Styles.Count
    ReDim M(j)
    For i = 1 To j
        M(i) = ActiveWorkbook.Styles(i).Name
    Next
    For i = 1 To j
        If InStr("Hyperlink,Normal,Followed Hyperlink", _
                    M(i)) = 0 Then
            ActiveWorkbook.Styles(M(i)).Delete
        End If
    Next

End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


 



'*********************************************************************************************************************
'*********************************************************************************************************************
'
'DATA|fffd||702||182||7c3|}|fffd|N|fffd||fffd|
'
'*********************************************************************************************************************
'*********************************************************************************************************************



'Const Mem_R As Variant = 50   '|fffd||fffd||fffd||28b|L|fffd||697|p|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||30d||142||fffd||fffd||fffd||30d|s|fffd||50d||fffd|  |fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|U|fffd|C|fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||310||fffd||fffd|l|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|



'|fffd|f|fffd|[|fffd|^|fffd||702||182||fffd|

Sub Data_make()
    Dim c As Range
    Dim firstAddress As String
    Dim MyStr As String
    Dim MyStr2 As String
    Dim i As Long
    Dim i2 As String
    Dim GYO As Long
    Dim s As String
    
    Dim Mem_R As Variant
    Dim FoundCell As Variant
    Dim LastRow As Variant
    
    
Application.ScreenUpdating = False

    
    
    With Worksheets("WKG")
             
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
             Mem_R = 50
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
        
      
        'Set FoundCell = .Range("c50:c250").Find("AVG")
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
  
    GYO = s + 45
    
    Range(Cells(Mem_R, 5), Cells(s, 18)).ClearContents
    Range(Cells(GYO - 2, 3), Cells(Rows.Count, 1)).EntireRow.Delete
   
   
 For i = Mem_R To s
    
        Sheets("WKG").Activate
        
  
  MyStr = Cells(i, 3).Value
  MyStr2 = Format(MyStr, "00")
  
  '*******************************
  
  If MyStr <> "" Then
     
     LastRow = Worksheets("DATA").Cells(Rows.Count, 4).End(xlUp).Row
     
    
   
    With Worksheets("DATA").Range("c9:c600")
    'With Worksheets("DATA").Range(Cells(9, 3), Cells(LastRow, 3))


        Set c = .Find(MyStr, LookIn:=xlFormulas, LookAt:=xlWhole)
        If Not c Is Nothing Then
            firstAddress = c.Address
               i2 = c.Row
               
         
                c.Resize(5, 25).Offset(-2, 0).Copy
                  
                
                Sheets("WKG").Activate
                       
                Sheets("WKG").Paste Destination:=Range(Cells(GYO, 3), Cells(GYO, 27))
                
                 Cells(i, 5).Value = Cells(GYO + 3, 6)
                 Cells(i, 6).Value = Cells(GYO + 2, 8)
                 Cells(i, 7).Value = Cells(GYO + 3, 10)
                 Cells(i, 8).Value = Cells(GYO + 3, 13)
                 Cells(i, 9).Value = Cells(GYO + 2, 15)
                 Cells(i, 10).Value = Cells(GYO + 2, 27)
                 Cells(i, 11).Value = Cells(GYO + 2, 17)
                 Cells(i, 12).Value = Cells(GYO + 2, 18)
                 Cells(i, 13).Value = Cells(GYO + 2, 20)
                 Cells(i, 14).Value = Cells(GYO + 2, 21)
                 Cells(i, 15).Value = Cells(GYO + 2, 23)
                 Cells(i, 16).Value = Cells(GYO + 2, 24)
                 Cells(i, 17).Value = Cells(GYO + 2, 25)
                 Cells(i, 18).Value = Cells(GYO + 2, 26)
                
                 GYO = GYO + 6
                 
                Set c = .FindNext(c)
          
                
                
         Else
                
             
         End If
         
     End With
     
          
     'GYO = GYO + 6
  End If
Next i

  Chromaticity_graph_non
  Chromaticity_graph_A_non
  Lum_graph
  Lum_graph_A
  Lvc_histogram
 ' Lvc_histogram_A
  Uniformity_histogram

Application.CutCopyMode = False
Application.ScreenUpdating = True

End Sub

'|fffd||d448d||d3dc|

Sub Del_Space()
  Dim lRow As Long
  Dim i As Long
  Dim i2 As Long
  Dim s As String
  Dim Mem_R As Variant
  Dim FoundCell As Variant
  Dim GYO As Long
  
  
     With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
     
     
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
             GYO = s + 43
            
        End If
    End With
  
    
    'lRow = Cells(Rows.Count, 1).End(xlUp).Row
    Application.ScreenUpdating = False
    For i = s To Mem_R Step -1
        If Cells(i, 5).Value = "" Then
            Range(i & ":" & i).Delete
        End If
    Next i
    
    
    Application.ScreenUpdating = True
 End Sub

'|fffd||fffd||fffd||5d1||582||fffd|

Sub sort_0()
   Dim s As String
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
            
        End If
    End With



    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Clear
    
 
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, 3), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    
    
    With ActiveWorkbook.Worksheets("WKG").sort
        .SetRange Range(Cells(Mem_R, 3), Cells(s, 28))
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub


'|fffd||fffd||fffd||5d1||582||fffd|1

Sub sort_1()
   Dim s As String
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   With Worksheets("WKG")
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
             
            
        End If
    End With



    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Clear
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, 19), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
 
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, 3), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    
    
    With ActiveWorkbook.Worksheets("WKG").sort
        .SetRange Range(Cells(Mem_R, 3), Cells(s, 28))
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub


'|fffd||fffd||fffd||5d1||582||fffd|2

Sub sort_2()
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   With Worksheets("WKG")
            s1 = ActiveCell.Column
            
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
            
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
                 
            
        End If
    End With



    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Clear
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, s1), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
 
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, 3), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    
    
    With ActiveWorkbook.Worksheets("WKG").sort
        .SetRange Range(Cells(Mem_R, 3), Cells(s, 28))
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
    Chromaticity_graph
    Chromaticity_graph_A
    Lum_graph
   
    Lum_graph_A
    Color
    
End Sub


'|fffd||fffd||fffd||5d1||582||fffd|3

Sub sort_3()
   Dim s As String
   Dim s1 As Variant
   Dim FoundCell As Variant
   Dim Mem_R As Variant
   
   With Worksheets("WKG")
            s1 = ActiveCell.Column
            
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
            
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
   
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
                 
            
        End If
    End With



    'ActiveWorkbook.Worksheets("WKG").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Delete
    
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, s1), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
 
    ActiveWorkbook.Worksheets("WKG").sort.SortFields.Add Key:=Cells(Mem_R, 3), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    
    
    With ActiveWorkbook.Worksheets("WKG").sort
        .SetRange Range(Cells(Mem_R, 3), Cells(s, 28))
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub

Sub Data_make_wo_G()
    Dim c As Range
    Dim firstAddress As String
    Dim MyStr As String
    Dim MyStr2 As String
    Dim i As Long
    Dim i2 As String
    Dim GYO As Long
    Dim s As String
    
    Dim Mem_R As Variant
    Dim FoundCell As Variant
    Dim LastRow As Variant
    
    
Application.ScreenUpdating = False

    
    
    With Worksheets("WKG")
             
        Set FoundCell = .Range(Cells(1, 3), Cells(200, 3)).Find("Optical measurement result")
        If FoundCell Is Nothing Then
             Mem_R = 50
        Else
             Mem_R = FoundCell.Row + 3
            
        End If
        
      
        'Set FoundCell = .Range("c50:c250").Find("AVG")
        Set FoundCell = .Range(Cells(Mem_R, 3), Cells(Mem_R + 200, 3)).Find("AVG")
        If FoundCell Is Nothing Then
            
        Else
             s = FoundCell.Row - 1
            
        End If
    End With
  
    GYO = s + 45
    
    Range(Cells(Mem_R, 5), Cells(s, 18)).ClearContents
    Range(Cells(GYO - 2, 3), Cells(Rows.Count, 1)).EntireRow.Delete
   
   
 For i = Mem_R To s
    
        Sheets("WKG").Activate
        
  
  MyStr = Cells(i, 3).Value
  MyStr2 = Format(MyStr, "00")
  
  '*******************************
  
  If MyStr <> "" Then
     
     LastRow = Worksheets("DATA").Cells(Rows.Count, 4).End(xlUp).Row
     
    
   
    With Worksheets("DATA").Range("c9:c600")
    'With Worksheets("DATA").Range(Cells(9, 3), Cells(LastRow, 3))


        Set c = .Find(MyStr, LookIn:=xlFormulas, LookAt:=xlWhole)
        If Not c Is Nothing Then
            firstAddress = c.Address
               i2 = c.Row
               
         
                c.Resize(5, 25).Offset(-2, 0).Copy
                  
                
                Sheets("WKG").Activate
                       
                Sheets("WKG").Paste Destination:=Range(Cells(GYO, 3), Cells(GYO, 27))
                
                 Cells(i, 5).Value = Cells(GYO + 3, 6)
                 Cells(i, 6).Value = Cells(GYO + 2, 8)
                 Cells(i, 7).Value = Cells(GYO + 3, 10)
                 Cells(i, 8).Value = Cells(GYO + 3, 13)
                 Cells(i, 9).Value = Cells(GYO + 2, 15)
                 Cells(i, 10).Value = Cells(GYO + 2, 27)
                 Cells(i, 11).Value = Cells(GYO + 2, 17)
                 Cells(i, 12).Value = Cells(GYO + 2, 18)
                 Cells(i, 13).Value = Cells(GYO + 2, 20)
                 Cells(i, 14).Value = Cells(GYO + 2, 21)
                 Cells(i, 15).Value = Cells(GYO + 2, 23)
                 Cells(i, 16).Value = Cells(GYO + 2, 24)
                 Cells(i, 17).Value = Cells(GYO + 2, 25)
                 Cells(i, 18).Value = Cells(GYO + 2, 26)
                
                 GYO = GYO + 6
                 
                Set c = .FindNext(c)
          
                
                
         Else
                
             
         End If
         
     End With
     
          
     'GYO = GYO + 6
  End If
Next i


Application.CutCopyMode = False
Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub CA310_measure()

    Dim ans As String
    Dim s As String
    Dim i As String
    Dim i2 As String
    Dim MaxRow As String
    Dim FILENAME As Variant

   '|fffd|ASDK|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||3d0||fffd||fffd||310||933e|

    Dim objCa200 As Ca200 ' |fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    Dim objCa As CA ' CA-200|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    Dim objProbe As Probe ' |fffd|v|fffd||fffd||fffd|[|fffd|u|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    Dim objMemory As Memory ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g

    ' |fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|p|fffd||3d0||fffd||fffd||310||933e|
    'Dim fFlck As Single
     Dim Date1 As Single
     Dim time1 As Single
     Dim RD As Single
     Dim Sx As Single
     Dim Sy As Single
     Dim Lv As Single
     Dim LvfL As Single
     Dim X As Single
     Dim y As Single
     Dim Z As Single
     Dim ud As Single
     Dim duv As Single
     Dim T As Single
     Dim Result As Long
     Dim INumber As Long
     Dim IProbeSNo As String
     Dim CA As Variant
          
     
     Dim CAType_SWVer As String
    

    On Error GoTo Er ' |fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|
    
    '|fffd|BSDK|fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||310||fffd||fffd||fffd||fffd||18d|\|fffd||fffd||fffd||310||752||fffd|
    ' |fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||310||fffd||fffd||fffd|
    Set objCa200 = New Ca200
    ' |fffd|\|fffd||fffd||fffd||310||752||fffd|i|fffd||fffd||fffd||fffd||fffd||752||fffd|j
    objCa200.AutoConnect ' CA-200 |fffd|P|fffd||fffd|E|fffd|v|fffd||fffd||fffd|[|fffd|u1|fffd|{|fffd|EUSB|fffd||691||fffd|
    
    
    '|fffd|C|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||3d0||fffd||fffd||311||fffd||fffd|
    ' |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||3d0||fffd||fffd||582||303|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    Set objCa = objCa200.SingleCa 'CA-200|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    Set objProbe = objCa.SingleProbe ' |fffd|v|fffd||fffd||fffd|[|fffd|u|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    Set objMemory = objCa.Memory ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    
    objCa.DisplayMode = 0
    
    
    MaxRow = Range("d1000").End(xlUp).Row
    s = MaxRow + 2
    
    
    
    i = 0
    
    
Do


    ans = InputBox("No. ?")

    If ans <> "" Then
      
        'With Range("c4:ab8")
        ' .Copy Destination:=.Range(Cells(s + 6 * i, 3), Cells(s + 6 * i + 4, 28))
         
        'End With
    
        Worksheets("DATA").Range(Cells(4, 2), Cells(8, 28)) _
        .Copy Destination:=Worksheets("DATA").Cells(s + 6 * i, 2)
        
              Cells(s + 2 + 6 * i, 3).Value = ans
              
         Cells(s - 9 + 6 * i, 3).Activate
         ActiveWindow.SmallScroll down:=6
              
      Else
       Exit Do
        
    End If
    
    
    
    Result = MsgBox("9 points No.1", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
 
        Date1 = Date
        time1 = Time
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
        INumber = objProbe.Number
        IProbeSNo = objProbe.SerialNO
        
        
        'CA Type, SW Version|fffd||30e||64fe|
        CAType_SWVer = objCa.CAType & " / " & objCa.CAVersion & " / " & objCa.Number
        
        If IProbeSNo = 8151676 Then
             CA = "LCD 77809"
        ElseIf IProbeSNo = 8351007 Then
             CA = "DP 77799"
        Else
             CA = other
        End If
        
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 2 + 6 * i, 29) = Date
             .Cells(s + 2 + 6 * i, 30) = Time
             .Cells(s + 2 + 6 * i, 31) = CAType_SWVer
             .Cells(s + 3 + 6 * i, 31) = CA
             .Cells(s + 3 + 6 * i, 32) = IProbeSNo
             .Cells(s + 2 + 6 * i, 9) = Sx
             .Cells(s + 2 + 6 * i, 12) = Sy
             .Cells(s + 2 + 6 * i, 5) = Lv
        End With
        
        Else
      Exit Do
      
    End If
        
    Result = MsgBox("9 points No.2", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 2 + 6 * i, 10) = Sx
             .Cells(s + 2 + 6 * i, 13) = Sy
             .Cells(s + 2 + 6 * i, 6) = Lv
        End With
        
        Else
          Exit Do
      
     End If
   
    Result = MsgBox("9 points No.3", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 2 + 6 * i, 11) = Sx
             .Cells(s + 2 + 6 * i, 14) = Sy
             .Cells(s + 2 + 6 * i, 7) = Lv
        End With
        
      Else
        Exit Do
      
     End If
   
   
    Result = MsgBox("9 points No.4", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 3 + 6 * i, 9) = Sx
             .Cells(s + 3 + 6 * i, 12) = Sy
             .Cells(s + 3 + 6 * i, 5) = Lv
        End With
        
     Else
      Exit Do
      
     End If
   
     Result = MsgBox("9 points No.5", vbYesNo + vbQuestion)
     If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
        T = objProbe.T
        X = objProbe.X
        y = objProbe.y
        Z = objProbe.Z
        ud = objProbe.ud
        duv = objProbe.duv
        
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 3 + 6 * i, 10) = Sx
             .Cells(s + 3 + 6 * i, 13) = Sy
             .Cells(s + 3 + 6 * i, 6) = Lv
             .Cells(s + 2 + 6 * i, 15) = T
        End With
        
      Else
        Exit Do
      
      End If
        
   
    Result = MsgBox("9 points No.6", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 3 + 6 * i, 11) = Sx
             .Cells(s + 3 + 6 * i, 14) = Sy
             .Cells(s + 3 + 6 * i, 7) = Lv
        End With
        
     Else
      Exit Do
      
     End If
   
    Result = MsgBox("9 points No.7", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 4 + 6 * i, 9) = Sx
             .Cells(s + 4 + 6 * i, 12) = Sy
             .Cells(s + 4 + 6 * i, 5) = Lv
        End With
             
    Else
      Exit Do
      
    End If
   
    Result = MsgBox("9 ponts No.8", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 4 + 6 * i, 10) = Sx
             .Cells(s + 4 + 6 * i, 13) = Sy
             .Cells(s + 4 + 6 * i, 6) = Lv
        End With
    
    Else
      Exit Do
      
    End If
   
     Result = MsgBox("9 points No.9", vbYesNo + vbQuestion)
     If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 4 + 6 * i, 11) = Sx
             .Cells(s + 4 + 6 * i, 14) = Sy
             .Cells(s + 4 + 6 * i, 7) = Lv
        End With
        
     Else
      Exit Do
      
     End If
        
    Result = MsgBox("Center R", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 2 + 6 * i, 17) = Sx
             .Cells(s + 2 + 6 * i, 18) = Sy
             .Cells(s + 2 + 6 * i, 16) = Lv
        End With
        
    Else
      Exit Do
      
    End If
   
    Result = MsgBox("Center G", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 2 + 6 * i, 20) = Sx
             .Cells(s + 2 + 6 * i, 21) = Sy
             .Cells(s + 2 + 6 * i, 19) = Lv
        End With
        
     Else
      Exit Do
      
     End If
   
    Result = MsgBox("Center B", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             .Cells(s + 2 + 6 * i, 23) = Sx
             .Cells(s + 2 + 6 * i, 24) = Sy
             .Cells(s + 2 + 6 * i, 22) = Lv
        End With
        
    Else
      Exit Do
      
    End If
    
    Result = MsgBox("Center Black", vbYesNo + vbQuestion)
    If Result = vbYes Then
            '|fffd|E|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
            ' |fffd||fffd||fffd||fffd||30e||fffd||fffd|s
        objCa.Measure
    
            '|fffd|F|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        Sx = objProbe.Sx
        Sy = objProbe.Sy
        Lv = objProbe.Lv
    
       With ThisWorkbook.Sheets("DATA")
             '.Cells(s + 2 + 6 * i, 17) = Sx
             '.Cells(s + 2 + 6 * i, 18) = Sy
             .Cells(s + 2 + 6 * i, 25) = Lv
        End With
     
    Else
      Exit Do
      
    End If
     i = i + 1
     
     
Loop

 
 
    objCa.RemoteMode = 0
    Exit Sub

    
    '|fffd|I|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Er:
    Dim strERR As String
    Dim iReturn As Integer
    
    strERR = "Error from " + Err.Source + Chr$(10) + Chr$(13)
    strERR = strERR + Err.Description + Chr$(10) + Chr$(13)
    strERR = strERR + "HRESULT " + CStr(Err.Number - vbObjectError)
    iReturn = MsgBox(strERR, vbRetryCancel)
    Select Case iReturn
    
        Case vbRetry:
            Resume
        
        Case Else:
            objCa.RemoteMode = 0
            End
        
    End Select
    
    'GetColorFromCA200 = 0



    'FILENAME = Application.GetSaveAsFilename(InitialFileName:="_|fffd||fffd||fffd|w|fffd|f|fffd|[|fffd|^.xlsm", FileFilter:="Excel|fffd|t|fffd|@|fffd|C|fffd||fffd|,*.xls*")
    'If FILENAME = False Then
    '    Exit Sub
    'End If
    'ActiveWorkbook.SaveAs FILENAME


End Sub

' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||308||a5d7||fffd||fffd||fffd||64fe|
' |fffd|f|fffd|[|fffd|^|fffd||fffd||835e||fffd||fffd|

Sub Data_capture()
    Const cnsTitle = "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||a5d7||fffd||64fe|"
    Const cnsDIR = "\*.*"
    Dim xlAPP As Application
    Dim strPATHNAME As String, vntPathName As Variant
    Dim strFILENAME As String
    Dim s As String
    Dim GYO As Long
    Dim MyStr As String
    Dim csvf As Variant
    Dim intFF As Integer            ' FreeFile|fffd|l
    Dim X() As String        ' |fffd||1c2||74d||fffd||fffd||42f83||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|e  ' |fffd|@
    Dim FILENAME As String          ' File|fffd||fffd||fffd|i|fffd|[
    Dim ModuleNum As String         'Module No.|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a93||fffd||fffd||fffd|
    Dim ModuleType As String        '|fffd||fffd||fffd||fffd|:"THB", |fffd||1277|:"LTO", TST:"TST" |fffd||302||1c2||a0a9||fffd||315||fffd||fffd||fffd||fffd||42a93||fffd||fffd||fffd|
    Dim CSV_FN_First As String      'CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||311|O|fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|
    Dim CSV_FN_Ary As Variant       'CSV_FN_First|fffd||248||fffd|v|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
    Dim i As Long, n As Long, j As Long
    Dim i2 As Long
    Dim Result As Long
    Dim CsvAry() As Variant
    Dim buf As String, max_n As Long
    Dim Ary() As Variant
    
    ThisWorkbook.Worksheets("DATA").Activate
    
     MaxRow = Range("d1000").End(xlUp).Row
     s = MaxRow + 2

    Set FSO = CreateObject("Scripting.FileSystemObject")
    strPATHNAME = FolderPath2
     If strPATHNAME <> "" Then
       Else: Exit Sub
       End If
    
    
    Range("D2").Value = strPATHNAME
    
    
    
    GYO = s
        
    

    ' |fffd||64ea||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||30e||64fe|
    strFILENAME = Dir(strPATHNAME & cnsDIR, vbNormal)               ' |fffd|B
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||202||fffd||702||14c|J|fffd||fffd||502||fffd|
    Do While strFILENAME <> ""                                          ' |fffd|C
        
         Cells(GYO, 1).Value = FSO.GetBaseName(strFILENAME)
        
         Worksheets("DATA").Range(Cells(4, 2), Cells(8, 28)) _
        .Copy Destination:=Worksheets("DATA").Cells(GYO, 2)
   
        ' |fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
        strFILENAME = Dir()            ' |fffd|E
        
        GYO = GYO + 6
        
    Loop
    
    
    ThisWorkbook.Worksheets("DATA").Activate
     
     'strPATHNAME = Range("d2").Value
     
     
   For i = s To Cells(Rows.Count, 1).End(xlUp).Row
     
        MyStr = Cells(i, 1)
        Cells(i + 2, 3).Value = Left(MyStr, 2)
        If MyStr <> "" Then
            csvf = strPATHNAME & "\" & MyStr + ".csv"
            
            max_n = CreateObject("Scripting.FileSystemObject").OpenTextFile(csvf, 8).Line '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||64fe|
        
            ReDim CsvAry(max_n, 12) As Variant  '|fffd||64fe||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30d||112||fffd|`
            
            intFF = FreeFile
            Open csvf For Input As #intFF
    
        
        
        n = 0
        
        ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|EOF(End of File)|fffd||702||14c|J|fffd||fffd||502||fffd|
        'CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311|S|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||1c2||74d||fffd||fffd||783||fffd||fffd|[|fffd|v
        Do Until EOF(intFF)
        
            '1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
            Line Input #intFF, buf
            
            '|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||fffd||154|z|fffd||fffd||24a|i|fffd|[
            X = Split(buf, ",")
            
            For j = 0 To UBound(X)
                CsvAry(n, j) = X(j)
            Next j
            
        n = n + 1
        
        Loop
        ' |fffd|w|fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|CLOSE
        Close #intFF
        
        'Call csv_AryToTable(CsvAry, i)     '|fffd||1c2||74d||fffd||fffd||fffd|CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||24b|L|fffd||fffd|
          Cells(i + 2, 5).Value = CsvAry(2, 6)
          Cells(i + 2, 6).Value = CsvAry(3, 6)
          Cells(i + 2, 7).Value = CsvAry(4, 6)
          Cells(i + 3, 5).Value = CsvAry(5, 6)
          Cells(i + 3, 6).Value = CsvAry(6, 6)
          Cells(i + 3, 7).Value = CsvAry(7, 6)
          Cells(i + 4, 5).Value = CsvAry(8, 6)
          Cells(i + 4, 6).Value = CsvAry(9, 6)
          Cells(i + 4, 7).Value = CsvAry(10, 6)
    
          Cells(i + 2, 8).Value = WorksheetFunction.Min(Range(Cells(i + 2, 5), Cells(i + 2 + 2, 7))) / _
                                    WorksheetFunction.Max(Range(Cells(i + 2, 5), Cells(i + 2 + 2, 7)))
    
          Cells(i + 2, 9).Value = CsvAry(2, 4)
          Cells(i + 2, 10).Value = CsvAry(3, 4)
          Cells(i + 2, 11).Value = CsvAry(4, 4)
          Cells(i + 3, 9).Value = CsvAry(5, 4)
          Cells(i + 3, 10).Value = CsvAry(6, 4)
          Cells(i + 3, 11).Value = CsvAry(7, 4)
          Cells(i + 4, 9).Value = CsvAry(8, 4)
          Cells(i + 4, 10).Value = CsvAry(9, 4)
          Cells(i + 4, 11).Value = CsvAry(10, 4)
    
          Cells(i + 2, 12).Value = CsvAry(2, 5)
          Cells(i + 2, 13).Value = CsvAry(3, 5)
          Cells(i + 2, 14).Value = CsvAry(4, 5)
          Cells(i + 3, 12).Value = CsvAry(5, 5)
          Cells(i + 3, 13).Value = CsvAry(6, 5)
          Cells(i + 3, 14).Value = CsvAry(7, 5)
          Cells(i + 4, 12).Value = CsvAry(8, 5)
          Cells(i + 4, 13).Value = CsvAry(9, 5)
          Cells(i + 4, 14).Value = CsvAry(10, 5)
    
          Cells(i + 2, 15).Value = CsvAry(6, 9)
          Cells(i + 2, 16).Value = CsvAry(11, 6)
          Cells(i + 2, 17).Value = CsvAry(11, 4)
          Cells(i + 2, 18).Value = CsvAry(11, 5)
          Cells(i + 2, 19).Value = CsvAry(12, 6)
          Cells(i + 2, 20).Value = CsvAry(12, 4)
          Cells(i + 2, 21).Value = CsvAry(12, 5)
          Cells(i + 2, 22).Value = CsvAry(13, 6)
          Cells(i + 2, 23).Value = CsvAry(13, 4)
          Cells(i + 2, 24).Value = CsvAry(13, 5)
          Cells(i + 2, 25).Value = CsvAry(14, 6)
    
          Cells(i + 2, 26).Value = Cells(i + 2 + 1, 6) / Cells(i + 2, 25)
        
        
        
        End If
        
        
        Erase CsvAry
        Erase X
        
    
    Next i
    
    
    
    
    
    
 
  'CSVinput
  'save
    

End Sub

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit




Sub importLCDdata()

    Const GYO_Start As Integer = 102  '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||5c2||fffd||14f||fffd||fffd||30d|s |fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||14d|s|fffd||308||292|u|fffd||fffd||fffd||3c2||fffd||fffd||fffd||fffd||fffd||70b1||fffd||fffd||fffd||fffd|M|fffd||fffd|

    Dim strPATHNAME As String   '|fffd|f|fffd|[|fffd|^|fffd||6d1||fffd||fffd||fffd|p|fffd|X
    Dim strFILENAME As String   '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd|p |fffd||fffd||fffd|H|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|v|fffd||202||fffd||fffd||fffd||fffd||fffd|
    Dim strFILEPATH As String   '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X
    Dim FILENAME() As String    '|fffd|S|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd|p|fffd|z|fffd||fffd|
    Dim i As Integer            'Loop|fffd|p|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||3d0||fffd|
    Dim j As Integer            'Loop|fffd|p|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||3d0||fffd|
    Dim k As Integer            'Loop|fffd|p|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||3d0||fffd|
    Dim X As Integer            'Loop|fffd|p|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||3d0||fffd|
    Dim thisbook As Workbook    '|fffd||fffd||fffd||fffd|WorkBook|fffd||30f||fffd||fffd||fffd||fffd|i|fffd|[
    Dim GYO As Integer          'Loop|fffd|p|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||3d0||fffd|
    Dim GYO_J As Integer
    Dim RETSU As Integer
    Dim pos() As Integer          '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||303|A|fffd||fffd||fffd|_|fffd|[|fffd|o|fffd|[|fffd||292|u|fffd|i|fffd|[|fffd|p
    Dim Dic
    Dim SampleNo
    Dim num As String
    Dim StopNo As Integer       '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|p
    Dim MaxSampleNo As Integer  'SampleNo|fffd||30d||151||fffd|l|fffd||fffd||fffd|i|fffd|[
    Const cnsDIR = "\*.*"
    Dim Result As Long
    
      Range("c102").Select
    
  Result = MsgBox("Did you fill in the module number?", vbYesNo + vbExclamation)
    If Result = vbYes Then
        
    Else
        Exit Sub
    End If
    
    
    Set Dic = CreateObject("Scripting.Dictionary")
    Set thisbook = ThisWorkbook '|fffd||fffd||fffd||fffd|WorkBook|fffd||30f||fffd||fffd||fffd||fffd|i|fffd|[
    
    
    
    
    ' |fffd||64ea||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||30e||64fe|
    
    strPATHNAME = FolderPath2
       If strPATHNAME <> "" Then
       Else: Exit Sub
       End If
        

    strFILENAME = Dir(strPATHNAME & cnsDIR, vbNormal)
    
    i = 1
    MaxSampleNo = -1
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||202||fffd||702||14c|J|fffd||fffd||502||fffd|
    Do While strFILENAME <> ""
        ReDim Preserve FILENAME(i)          '|fffd|z|fffd||50502||fffd||fffd|`
        ReDim Preserve pos(i)
        FILENAME(i) = strFILENAME           '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[
        pos(i) = InStr(FILENAME(i), "_")       '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||303|A|fffd||fffd||fffd|_|fffd|[|fffd|o|fffd|[|fffd||292|u|fffd|i|fffd|[
        num = Left(FILENAME(i), pos(i) - 1)
        If Not Dic.Exists(num) Then
            Dic.Add num, num
        End If
        If MaxSampleNo < num Then   'MaxSampleNo|fffd||fffd||fffd||64fe|
            MaxSampleNo = num
        End If
        strFILENAME = Dir()
        i = i + 1
    Loop
    
    StopNo = i
    
    SampleNo = Dic.Keys
    i = 0
    For GYO = GYO_Start To GYO_Start + 30 Step 11
        If UBound(SampleNo) >= i Then
            Cells(GYO, 3) = SampleNo(i)
        End If
        i = i + 1
    Next GYO
    Set Dic = Nothing
    
    GYO = GYO_Start                         '|fffd||14f||fffd||fffd||30d|s|fffd||243||fffd||fffd|Z|fffd|b|fffd|g
    i = 1
    Do Until i = StopNo                     '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
        strFILEPATH = strPATHNAME + "\" & FILENAME(i)
        If Right(strFILEPATH, 4) = ".csv" Or Right(strFILEPATH, 4) = ".CSV" Then  'CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||202||73c8||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
            Application.ScreenUpdating = False
            Workbooks.Open _
                FILENAME:=strFILEPATH              '|fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd|
            If Workbooks(FILENAME(i)).Sheets(1).Range("A1").Value = "[DTH]" Then       'A1|fffd|Z|fffd||fffd||fffd||312||fffd||fffd|g|fffd||fffd|[DTH]|fffd||202||fffd|SR-3 |fffd||fffd||fffd||283||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                For GYO = GYO_Start To GYO_Start + (11 * 2) Step 11
                    If thisbook.Sheets("LCD_Sample").Cells(GYO, 3) = CInt(Left(FILENAME(i), pos(i) - 1)) Then
                        If Workbooks(FILENAME(i)).Sheets(1).Range("A16") = 81 Then             '|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|81|fffd||202||fffd|White81point|fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                            X = 17
                            For k = 0 To 8
                                For j = 8 To 16
                                    thisbook.Sheets("LCD_Sample").Cells(GYO + 8 - k, j) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 6)
                                    X = X + 1
                                Next j
                            Next k
                            thisbook.Sheets("LCD_Sample").Cells(GYO, 18) = Workbooks(FILENAME(i)).Sheets(1).Cells(57, 7)   'x
                            thisbook.Sheets("LCD_Sample").Cells(GYO, 19) = Workbooks(FILENAME(i)).Sheets(1).Cells(57, 8)   'y
                            thisbook.Sheets("LCD_Sample").Cells(GYO, 20) = Workbooks(FILENAME(i)).Sheets(1).Cells(57, 11)  'Tc
                        ElseIf Workbooks(FILENAME(i)).Sheets(1).Range("A16") = 9 Then          '|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|9|fffd||202||fffd|White9point|fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                            X = 17
                            For k = 0 To 6 Step 3
                                For j = 9 To 15 Step 3
                                    thisbook.Sheets("LCD_Sample").Cells(GYO + 7 - k, j) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 6)
                                    X = X + 1
                                Next j
                            Next k
                            thisbook.Sheets("LCD_Sample").Cells(GYO, 18) = Workbooks(FILENAME(i)).Sheets(1).Cells(21, 7)   'x
                            thisbook.Sheets("LCD_Sample").Cells(GYO, 19) = Workbooks(FILENAME(i)).Sheets(1).Cells(21, 8)   'y
                            thisbook.Sheets("LCD_Sample").Cells(GYO, 20) = Workbooks(FILENAME(i)).Sheets(1).Cells(21, 11)  'Tc
                        End If
                    End If
                Next GYO
            ElseIf Workbooks(FILENAME(i)).Sheets(1).Range("A1").Value = "[DTI]" Then   'A1|fffd|Z|fffd||fffd||fffd||312||fffd||fffd|g|fffd||fffd|[DTI]|fffd||202||fffd|SR-3 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                GYO_J = GYO_Start + 39
                For RETSU = 4 To 20 Step 8
                    If thisbook.Sheets("LCD_Sample").Cells(GYO_J, RETSU) = CInt(Left(FILENAME(i), pos(i) - 1)) Then
                        If Workbooks(FILENAME(i)).Sheets(1).Range("A16") = 121 Then                      '|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|121|fffd||202||739e||fffd||513||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                            X = 17
                            For k = 2 To 14
                                thisbook.Sheets("LCD_Sample").Cells(GYO_J + k, RETSU) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 6)
                                thisbook.Sheets("LCD_Sample").Cells(GYO_J + k, RETSU + 1) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 7)
                                thisbook.Sheets("LCD_Sample").Cells(GYO_J + k, RETSU + 2) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 8)
                                X = X + 10
                            Next k
                        ElseIf Workbooks(FILENAME(i)).Sheets(1).Range("A16") = 61 Then                   '|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|61|fffd||202||739e||fffd||513||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                            X = 17
                            For k = 2 To 14
                                thisbook.Sheets("LCD_Sample").Cells(GYO_J + k, RETSU) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 6)
                                thisbook.Sheets("LCD_Sample").Cells(GYO_J + k, RETSU + 1) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 7)
                                thisbook.Sheets("LCD_Sample").Cells(GYO_J + k, RETSU + 2) = Workbooks(FILENAME(i)).Sheets(1).Cells(X, 8)
                                X = X + 5
                            Next k
                        End If
                    End If
                Next RETSU
            ElseIf Workbooks(FILENAME(i)).Sheets(1).Range("B1").Value = "|fffd||e3c0|" Then     'B1|fffd|Z|fffd||fffd||fffd||312||fffd||fffd|g|fffd||fffd||fffd|u|fffd||e3c0||fffd|v|fffd||202||756a||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||194||fffd||fffd|f
                For GYO = GYO_Start To GYO_Start + (11 * 2) Step 11
                    If thisbook.Sheets("LCD_Sample").Cells(GYO, 3) = CInt(Left(FILENAME(i), pos(i) - 1)) Then
                        thisbook.Sheets("LCD_Sample").Cells(GYO, 23) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 6)
                        thisbook.Sheets("LCD_Sample").Cells(GYO, 24) = Workbooks(FILENAME(i)).Sheets(1).Cells(11, 6)
                        thisbook.Sheets("LCD_Sample").Cells(GYO, 25) = Workbooks(FILENAME(i)).Sheets(1).Cells(12, 6)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 2, 23) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 7)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 2, 24) = Workbooks(FILENAME(i)).Sheets(1).Cells(11, 7)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 2, 25) = Workbooks(FILENAME(i)).Sheets(1).Cells(12, 7)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 4, 23) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 8)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 4, 24) = Workbooks(FILENAME(i)).Sheets(1).Cells(11, 8)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 4, 25) = Workbooks(FILENAME(i)).Sheets(1).Cells(12, 8)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 7, 23) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 9)
                        thisbook.Sheets("LCD_Sample").Cells(GYO, 29) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 5)
                        thisbook.Sheets("LCD_Sample").Cells(GYO, 30) = Workbooks(FILENAME(i)).Sheets(1).Cells(11, 5)
                        thisbook.Sheets("LCD_Sample").Cells(GYO, 31) = Workbooks(FILENAME(i)).Sheets(1).Cells(12, 5)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 1, 29) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 10)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 1, 30) = Workbooks(FILENAME(i)).Sheets(1).Cells(11, 10)
                        thisbook.Sheets("LCD_Sample").Cells(GYO + 1, 31) = Workbooks(FILENAME(i)).Sheets(1).Cells(12, 10)
                        
                       If GYO = GYO_Start Then
                            thisbook.Sheets("LCD_Sample").Cells(56, 4) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 10)
                            thisbook.Sheets("LCD_Sample").Cells(56, 5) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 5)
                            thisbook.Sheets("LCD_Sample").Range(Cells(GYO_Start + 98, 4), Cells(GYO_Start + 498, 9)).Value = Workbooks(FILENAME(i)).Sheets(1).Range("e19:J419").Value
                        ElseIf GYO = GYO_Start + (11 * 1) Then
                            thisbook.Sheets("LCD_Sample").Cells(57, 4) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 10)
                            thisbook.Sheets("LCD_Sample").Cells(57, 5) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 5)
                            thisbook.Sheets("LCD_Sample").Range(Cells(GYO_Start + 98, 10), Cells(GYO_Start + 498, 15)).Value = Workbooks(FILENAME(i)).Sheets(1).Range("e19:J419").Value
                        ElseIf GYO = GYO_Start + (11 * 2) Then
                            thisbook.Sheets("LCD_Sample").Cells(58, 4) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 10)
                            thisbook.Sheets("LCD_Sample").Cells(58, 5) = Workbooks(FILENAME(i)).Sheets(1).Cells(7, 5)
                            thisbook.Sheets("LCD_Sample").Range(Cells(GYO_Start + 98, 16), Cells(GYO_Start + 498, 21)).Value = Workbooks(FILENAME(i)).Sheets(1).Range("e19:J419").Value
                        End If
                    End If
                Next GYO
            End If
            Workbooks(FILENAME(i)).Close
        End If
        i = i + 1
    Loop
    Application.ScreenUpdating = True
    MsgBox "|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
End Sub


Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'*********************************************************************************************************************
'*********************************************************************************************************************
' |fffd|C|fffd||fffd||fffd||fffd||303|}|fffd|N|fffd||fffd|
'
' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|         |fffd|F "_|fffd||fffd||fffd|w|fffd|f|fffd|[|fffd|^|fffd||702||182||7d7|p_170727.xlsm"  |fffd||20d|~
' "|fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd|"|fffd|V|fffd|[|fffd|g   |fffd|F Ver.5.3 |fffd||20d|~
'*********************************************************************************************************************
'*********************************************************************************************************************


Const TblStt_R = 134    '|fffd||fffd||fffd||28b|L|fffd||697|p|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||30d||142||fffd||fffd||fffd||30d|s|fffd||50d||fffd|  |fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|U|fffd|C|fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||310||fffd||fffd|l|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|



'*********************************************************************************************
' "DATA"|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|O|fffd||311||fffd||fffd||830b||fffd||282||fffd||1c2||74d||fffd||fffd||fffd|  (|fffd|Z|fffd|b|fffd|gNo.|fffd||fffd|B_**|fffd||182||fffd||fffd||fffd||fffd||a347||fffd|j
'
' |fffd|V|fffd|[|fffd|g|fffd||fffd||303|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|[|fffd|`|fffd||fffd|

'Sub |fffd||fffd||fffd||fffd||fffd|O_B()

'    Call TestResult_FromDataSheet("B")
    
'End Sub


'*********************************************************************************************
' "DATA"|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|O|fffd||311||fffd||fffd||830b||fffd||282||fffd||1c2||74d||fffd||fffd||fffd|  (|fffd|Z|fffd|b|fffd|gNo.|fffd||fffd|**|fffd||182||fffd||fffd||fffd||fffd||a347||fffd|j

'|fffd||fffd||fffd||fffd||fffd|O

Sub Before_test()

    Dim c As Range
    Dim firstAddress As String
    Dim MyStr As String
    Dim MyStr2 As String
    Dim i As Long
    Dim i2 As Long
    Dim Result As Long
    Dim LastRow As Long

  Cells(TblStt_R, 2).Select
'
  Result = MsgBox("Did you fill in the module number?", vbYesNo + vbExclamation)
    If Result = vbYes Then

    Else
        Exit Sub
    End If

'
'
'
'
'
 For i = TblStt_R To TblStt_R + 72 Step 9
        Sheets("Reliability_test").Activate

'
'
  MyStr = Cells(i, 2)
'
   If MyStr <> "" Then
'
'
  MyStr2 = Cells(i - 2, 3)
'


       With Worksheets("DATA").Range("b4:b600")
     
      'With Worksheets("DATA")
'      LastRow = Worksheets("DATA").Cells(Rows.Count, 4).End(xlUp).Row
     
'      With Worksheets("DATA").Range(Cells(4, 2), Cells(LastRow, 2))
       
        Set c = .Find(MyStr, LookIn:=xlValues, LookAt:=xlWhole)
        If Not c Is Nothing Then
            firstAddress = c.Address
            i2 = c.Row
'
            Do
                c.Resize(3, 23).Offset(0, 3).Copy

                Sheets("Reliability_test").Activate

                Sheets("Reliability_test").Paste Destination:=Range(Cells(i, 5), Cells(i + 2, 27))

                Set c = .FindNext(c)
                If c Is Nothing Then Exit Do
            Loop Until c.Address = firstAddress
         End If
     End With

  End If '
 Next i
'
Application.CutCopyMode = False
'
End Sub
'



'*********************************************************************************************
' "DATA"|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|O|fffd||311||fffd||fffd||830b||fffd||282||fffd||1c2||74d||fffd||fffd||fffd|
'
' |fffd|V|fffd|[|fffd|g|fffd||fffd||303|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|[|fffd|`|fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd|

Sub After_test()

    Call TestResult_FromDataSheet("A")

End Sub



'*********************************************************************************************
'|fffd||fffd||fffd||fffd||fffd|O|fffd||311||fffd||fffd||830b||fffd||282||fffd|CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
'
' |fffd|V|fffd|[|fffd|g|fffd||fffd||303|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|[|fffd|`|fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||835e||fffd||fffd|

Sub Bfore_Data_capture()

    Call TestResult_FromCSV("B")
    
End Sub



'*********************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||fffd||311||fffd||fffd||830b||fffd||282||fffd|CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||835e||fffd||fffd|
 

Sub After_Data_capture()
    
    Call TestResult_FromCSV("A")

End Sub



'*********************************************************************************************
' TestResult_FromDataSheet
'
' |fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30c||fffd||fffd||282||fffd|"Data"|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
' |fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||24b|L|fffd||fffd||fffd||fffd||fffd||93c8||fffd||fffd|
'
' B_A   : |fffd||fffd||fffd||fffd||fffd|O/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|("B":|fffd|O,"A":|fffd||fffd|)

Sub TestResult_FromDataSheet(B_A As String)

    Dim c As Range
    Dim firstAddress As String
    Dim MyStr As String
    Dim MyStr2 As String
    Dim i As Long
    Dim i2 As Long
    Dim Result As Long
    Dim rdiff As Long
    
    If B_A = "A" Then
        rdiff = 3
    Else
        rdiff = 0
    End If
    
    Cells(TblStt_R, 3).Select
    
    Result = MsgBox("Did you fill in the module number?", vbYesNo + vbExclamation)
    If Result = vbNo Then Exit Sub
    
    'For i = TblStt_R To TblStt_R + 72
    For i = TblStt_R To TblStt_R + 83
        Sheets("Reliability_test").Activate
        
         MyStr = Cells(i, 3)
        
        If MyStr <> "" Then
        
            MyStr2 = Cells(i - 2, 3)
            
            With Worksheets("DATA").Range("c4:c600")
            
                'Set c = .Find(MyStr2 + "_" + B_A + "_" + MyStr, LookIn:=xlValues, LookAt:=xlWhole)
                Set c = .Find(B_A + "_" + MyStr, LookIn:=xlValues, LookAt:=xlWhole)
                
                If Not c Is Nothing Then
                
                    firstAddress = c.Address
                    i2 = c.Row
                    
                    Do
                        c.Resize(3, 23).Offset(0, 2).Copy
                        
                        Sheets("Reliability_test").Activate
                        
                        Sheets("Reliability_test").Paste Destination:=Range(Cells(i + rdiff, 5), Cells(i + rdiff + 2, 27))
                        
                        Set c = .FindNext(c)
                        
                        If c Is Nothing Then Exit Do
                        
                    Loop Until c.Address = firstAddress
                    
                End If
                
            End With
        
        End If
        
    Next i
    
    Application.CutCopyMode = False
    
End Sub



'*********************************************************************************************
' TestResult_FromCSV
'
' |fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30c||fffd||fffd||282||fffd|CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
' |fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||24b|L|fffd||fffd||fffd||fffd||fffd||93c8||fffd||fffd|
'
' B_A   : |fffd||fffd||fffd||fffd||fffd|O/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|("B":|fffd|O,"A":|fffd||fffd|)

Sub TestResult_FromCSV(B_A As String)

    Const cnsTitle = "Get list of file names in folder."
    Const cnsDIR = "\*.*"
    
    Dim FSO As Object
    
    Dim strPATHNAME As String
    Dim strFILENAME As String
    Dim y() As String
    
    Dim ModuleNum As String         'Module No.|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a93||fffd||fffd||fffd|
    Dim ModuleType As String        '|fffd||fffd||fffd||fffd|:"THB", |fffd||1277|:"LTO", TST:"TST" |fffd||302||1c2||a0a9||fffd||315||fffd||fffd||fffd||fffd||42a93||fffd||fffd||fffd|
    Dim CSV_FN_First As String      'CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||311|O|fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|
    Dim CSV_FN_Ary As Variant       'CSV_FN_First|fffd||248||fffd|v|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
    Dim i As Long, n As Long, j As Long
    Dim Result As Long
    
    Dim csvf As Variant
    Dim intFF As Integer    ' FreeFile|fffd|l
    Dim X As Variant        ' |fffd||1c2||74d||fffd||fffd||42f83||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|e
    Dim CsvAry() As Variant
    Dim buf As String, max_n As Long
    
    
    'On Error Resume Next
    Application.ScreenUpdating = False
    
    '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|No.|fffd|m|fffd|F
    Result = MsgBox("Did you fill in the module number?", vbYesNo + vbExclamation)
    If Result <> vbYes Then Exit Sub
    
    '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|I|fffd||fffd|
    Set FSO = CreateObject("Scripting.FileSystemObject")
    strPATHNAME = FolderPath2                               'FolderPath2 : |fffd||fffd||fffd||fffd||590||fffd||fffd|A|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|I|fffd||fffd|
    If strPATHNAME = "" Then Exit Sub
    
    ReDim y(0)
    
    strFILENAME = Dir(strPATHNAME & cnsDIR, vbNormal)   ' |fffd||64ea||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||30e||64fe|
    
    Do While strFILENAME <> ""  ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||202||fffd||702||14c|J|fffd||fffd||502||fffd|
    
        If y(0) <> "" Then ReDim Preserve y(UBound(y) + 1)
        
        y(UBound(y)) = strFILENAME
        
        strFILENAME = Dir() '|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
    
    Loop
    
    'Cells(117, 3).Select
    Cells(TblStt_R, 3).Select
    
    'For i = 117 To 189 Step 9
    For i = TblStt_R To TblStt_R + 72 Step 9
    
        Sheets("Reliability_test").Activate
        
        ModuleNum = Cells(i, 2)
        
        If ModuleNum = "" Then GoTo SkipSet         'Module Number|fffd||fffd||fffd|L|fffd||682||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||10e||fffd||fffd||303||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
        
        ModuleType = Cells(i - 2, 3)
        CSV_FN_First = ModuleType + "_" + B_A + "_" + ModuleNum
        CSV_FN_Ary = Filter(y, CSV_FN_First, True, vbTextCompare)
        
        If UBound(CSV_FN_Ary) <= -1 Then GoTo SkipSet '|fffd||fffd||fffd||283|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||10e||fffd||fffd||303||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
        
        csvf = strPATHNAME & "\" & CSV_FN_Ary(0)
        
        max_n = CreateObject("Scripting.FileSystemObject").OpenTextFile(csvf, 8).Line '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||64fe|
        
        ReDim CsvAry(max_n, 12) As Variant  '|fffd||64fe||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30d||112||fffd|`
        
        intFF = FreeFile
        
        Open csvf For Input As #intFF
        
        n = 0
        
        ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|EOF(End of File)|fffd||702||14c|J|fffd||fffd||502||fffd|
        'CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311|S|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||1c2||74d||fffd||fffd||783||fffd||fffd|[|fffd|v
        Do Until EOF(intFF)
        
            '1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
            Line Input #intFF, buf
            
            '|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||fffd||154|z|fffd||fffd||24a|i|fffd|[
            X = Split(buf, ",")
            
            For j = 0 To UBound(X)
                CsvAry(n, j) = X(j)
            Next j
            
            n = n + 1
        
        Loop
        ' |fffd|w|fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|CLOSE
        Close #intFF
        
        Call AryToTable(CsvAry, i, B_A)     '|fffd||1c2||74d||fffd||fffd||fffd|CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||24b|L|fffd||fffd|
        
        Erase CsvAry
        Erase X
        
SkipSet:
    
    Next i
    
    Application.CutCopyMode = False

End Sub



'*********************************************************************************************
' AryToTable
'
' CSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||42f91||fffd||fffd||830b||fffd||282||fffd|
' |fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||24b|L|fffd||fffd||fffd||fffd||fffd||93c8||fffd||fffd|
'
' Ary   : |fffd||fffd||fffd||830b||fffd||294|z|fffd||fffd|iCSV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||193||fffd||fffd||fffd||fffd|z|fffd|u)
' Index : |fffd|f|fffd|[|fffd|^|fffd|L|fffd||fffd||fffd||4cf||fffd||fffd||30d||142||fffd||fffd||fffd||30d|s|fffd||50d||fffd|
' B_A   : |fffd||fffd||fffd||fffd||fffd|O/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(B:|fffd|O,A:|fffd||fffd|)


Sub AryToTable(Ary As Variant, Index As Long, B_A As String)

    Dim rdiff As Long
    
    If B_A = "A" Then
        rdiff = 3
    Else
        rdiff = 0
    End If
    
    Cells(Index + rdiff, 5).Value = Ary(2, 6)
    Cells(Index + rdiff, 6).Value = Ary(3, 6)
    Cells(Index + rdiff, 7).Value = Ary(4, 6)
    Cells(Index + rdiff + 1, 5).Value = Ary(5, 6)
    Cells(Index + rdiff + 1, 6).Value = Ary(6, 6)
    Cells(Index + rdiff + 1, 7).Value = Ary(7, 6)
    Cells(Index + rdiff + 2, 5).Value = Ary(8, 6)
    Cells(Index + rdiff + 2, 6).Value = Ary(9, 6)
    Cells(Index + rdiff + 2, 7).Value = Ary(10, 6)
    
    Cells(Index + rdiff, 8).Value = WorksheetFunction.Min(Range(Cells(Index + rdiff, 5), Cells(Index + rdiff + 2, 7))) / _
                                    WorksheetFunction.Max(Range(Cells(Index + rdiff, 5), Cells(Index + rdiff + 2, 7)))
    
    Cells(Index + rdiff, 9).Value = Ary(2, 4)
    Cells(Index + rdiff, 10).Value = Ary(3, 4)
    Cells(Index + rdiff, 11).Value = Ary(4, 4)
    Cells(Index + rdiff + 1, 9).Value = Ary(5, 4)
    Cells(Index + rdiff + 1, 10).Value = Ary(6, 4)
    Cells(Index + rdiff + 1, 11).Value = Ary(7, 4)
    Cells(Index + rdiff + 2, 9).Value = Ary(8, 4)
    Cells(Index + rdiff + 2, 10).Value = Ary(9, 4)
    Cells(Index + rdiff + 2, 11).Value = Ary(10, 4)
    
    Cells(Index + rdiff, 12).Value = Ary(2, 5)
    Cells(Index + rdiff, 13).Value = Ary(3, 5)
    Cells(Index + rdiff, 14).Value = Ary(4, 5)
    Cells(Index + rdiff + 1, 12).Value = Ary(5, 5)
    Cells(Index + rdiff + 1, 13).Value = Ary(6, 5)
    Cells(Index + rdiff + 1, 14).Value = Ary(7, 5)
    Cells(Index + rdiff + 2, 12).Value = Ary(8, 5)
    Cells(Index + rdiff + 2, 13).Value = Ary(9, 5)
    Cells(Index + rdiff + 2, 14).Value = Ary(10, 5)
    
    Cells(Index + rdiff, 15).Value = Ary(6, 9)
    Cells(Index + rdiff, 16).Value = Ary(11, 6)
    Cells(Index + rdiff, 17).Value = Ary(11, 4)
    Cells(Index + rdiff, 18).Value = Ary(11, 5)
    Cells(Index + rdiff, 19).Value = Ary(12, 6)
    Cells(Index + rdiff, 20).Value = Ary(12, 4)
    Cells(Index + rdiff, 21).Value = Ary(12, 5)
    Cells(Index + rdiff, 22).Value = Ary(13, 6)
    Cells(Index + rdiff, 23).Value = Ary(13, 4)
    Cells(Index + rdiff, 24).Value = Ary(13, 5)
    Cells(Index + rdiff, 25).Value = Ary(14, 6)
    
    Cells(Index + rdiff, 26).Value = Cells(Index + rdiff + 1, 6) / Cells(Index + rdiff, 25)

End Sub

'*********************************************************************************************
' RTFileMaker
'
' |fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|i|fffd||1d2||fffd|o|fffd|p|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d||c42c||fffd|B
' "|fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd|"|fffd|V|fffd|[|fffd|g|fffd||302||742||315||283|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|B
' |fffd||fffd||313|I|fffd||242||348||209||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'
'   |fffd|E"|fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd|"|fffd|V|fffd|[|fffd|g|fffd||fffd|V|fffd|K|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||243|R|fffd|s|fffd|[
'   |fffd|E|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd|
'   |fffd|E|fffd||fffd||fffd||fffd||fffd|N|fffd||752||fffd||30d||d3dc|
'   |fffd|E|fffd|{|fffd|^|fffd||fffd|,|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X,|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||30d||d3dc|
'   |fffd|E|fffd|}|fffd|N|fffd||fffd||fffd||202||fffd||fffd||155||6d1||fffd|
'

Sub RTFileMaker()

    Dim FN_SaveAs As Variant
    Dim OriginalFile_FullPath As String
    Dim Shp As Variant
    Dim ShpName As String
    
    
    ' |fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||303|t|fffd||fffd||fffd|p|fffd|X|fffd||fffd||fffd|L|fffd|^  =================================
    OriginalFile_FullPath = ThisWorkbook.FullName
    
    
    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||308||292|u|fffd||255||3cd|X  =================================
    CreateObject("WScript.Shell").CurrentDirectory = ThisWorkbook.Path
    
    
    ' |fffd|M|fffd||fffd||fffd||fffd||fffd|T|fffd||fffd||fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|V|fffd|K|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||243|R|fffd|s|fffd|[  =================================
    Sheets("Reliability_test").Select
    Sheets("Reliability_test").Copy
    
    
    ' |fffd||fffd||fffd||fffd||fffd||209||fffd||fffd|V|fffd|K|fffd||c42c||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||142||30f||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    
    ' |fffd||283|V|fffd|[|fffd|g|fffd||243||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd|  =================================
    With ActiveSheet.Range("RT_Title")
        .Copy
        .PasteSpecial Paste:=xlPasteValues, _
                      Operation:=xlNone, _
                      SkipBlanks:=False, _
                      Transpose:=False
    End With
    
    With ActiveSheet.Range("RT_OptSpec")
        .Copy
        .PasteSpecial Paste:=xlPasteValues, _
                      Operation:=xlNone, _
                      SkipBlanks:=False, _
                      Transpose:=False
    End With
    
    Application.CutCopyMode = False
    
    ActiveSheet.Cells(1, 1).Select
    
    
    ' |fffd|]|fffd||fffd||fffd||203||fffd||fffd||fffd||fffd|N|fffd||752||fffd||fffd||fffd||d3dc|  =================================
    ActiveWorkbook.BreakLink Name:=OriginalFile_FullPath, _
                             Type:=xlExcelLinks
    
    
    ' |fffd|}|fffd|N|fffd||fffd||fffd|N|fffd||fffd||fffd|p|fffd|{|fffd|^|fffd||fffd|, |fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X, |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||d3dc|  =================================
    For Each Shp In ActiveSheet.Shapes
    
        ShpName = Shp.Name
        ShpName = Left(ShpName, InStr(ShpName, " ") - 1)
        
        If (ShpName = "Button") Or _
           (ShpName = "TextBox") Or _
           (ShpName = "Comment") Then
           
            Shp.Delete
                
        End If
            
    Next Shp
    
    
    ' |fffd|V|fffd|K|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||296||fffd||fffd||155||6d1||fffd||fffd|i|fffd|}|fffd|N|fffd||fffd||fffd||202||fffd||fffd|j  =================================
    FN_SaveAs = Application.GetSaveAsFilename(FileFilter:="Excel|fffd|t|fffd|@|fffd|C|fffd||fffd|,*.xlsx")
    
    If FN_SaveAs <> False Then
    
        If Dir(FN_SaveAs) <> "" Then
        
            If MsgBox("Overwrite?", vbOKCancel) = vbCancel Then
            
                MsgBox "No save & Exit"
                Exit Sub
                
            End If
            
        End If
        
        Application.DisplayAlerts = False
        ActiveWorkbook.SaveAs FILENAME:=FN_SaveAs, _
                              FileFormat:=xlOpenXMLWorkbook, _
                              CreateBackup:=False
    Else
    
        MsgBox "No save & Exit"
        
    End If


End Sub




Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' ZrH+

INQUEST-PP=macro
