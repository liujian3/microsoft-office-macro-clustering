Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Hoja10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Hoja5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Hoja6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "M|fffd|dulo1"



Sub Macro2()

'
' COSTANTES
'
Const COLUMNA_INICIO As String = "B"
Const CELDA_NOMBRE_CSV As String = "I6"
Const CELDA_NUMERO_CAMPOS As String = "I7"
Const CELDA_NUMERO_IDIOMAS As String = "K7"
Const TAG_INICIO As String = "MULTIIDIOMA"
Const TAG_INICIO_IDIOMA As String = "IDIOMAS"
Const TAG_DOCUMENTO As String = "DOCUMENTO"
Const TAG_VERSION As String = "VERSION"


Const CELDA_quemarca_INICIO_DE_TRADUCCION As String = "E9"
Const FILA_quemarca_TAG As String = "E10"
Dim CELDA_INICIO_DE_TRADUCCION As String
Dim FILA_TAG As String
CELDA_INICIO_DE_TRADUCCION = ActiveSheet.Range(CELDA_quemarca_INICIO_DE_TRADUCCION).Value
FILA_TAG = ActiveSheet.Range(FILA_quemarca_TAG).Value
Dim LITERALES_EN_BLANCO As String
LITERALES_EN_BLANCO = ""
Dim CELDAS_ERROR_TRADUCCION As String
CELDAS_ERROR_TRADUCCION = ""

Calculate

Set Documento = Worksheets("Versiones").Range("C1")
Set Version = Worksheets("Versiones").Range("C2")

'MsgBox "Documento " & Documento & vbCr & "Versi|fffd|n " & Version

    Dim Y As Single
    Dim RutaCompleta As String
    Dim RutaCompletaDef As String
    Dim Ruta As String
    Dim nombre As String
    Y = 2

' Este debe  de ser con el nombre que el usuario debe de guardar el CSV de lenguages
'  en el popup que se habre, se da al usuario el nombre para que no lo modifique
RutaCompleta = Application.GetSaveAsFilename("LANGUAGES_" & ActiveSheet.Range(CELDA_NOMBRE_CSV) & ".csv")
If (RutaCompleta = "Falso") Then
    End
End If

'MsgBox "LOG: RutaCompleta:" & RutaCompleta

Ruta = Mid(RutaCompleta, 1, InStrRev(RutaCompleta, "\"))
'MsgBox "LOG: Ruta:" & Ruta
nombre = Mid(RutaCompleta, InStrRev(RutaCompleta, "\") + 1, Len(RutaCompleta))
'MsgBox "LOG: nombre:" & nombre


' Se comprueba que el usuario no haya cambiado el nombre  al hora de guardarlo
If nombre <> "LANGUAGES_" & ActiveSheet.Range(CELDA_NOMBRE_CSV).Value & ".csv" Then
 MsgBox "No puede cambiar el nombre, el fichero se va a guardar como: " & Ruta & ActiveSheet.Range(CELDA_NOMBRE_CSV).Value & ".csv", vbCritical, "Error en el nombre"
End If
 
' TODO: DEBEMOS DE VALIDAR LA FILA DE LAS VARIABLES, para que no se repita ningun valor
valida = validaTAGRepetidos(COLUMNA_INICIO, FILA_TAG, CELDA_NUMERO_CAMPOS)
' se comenta porque no esta probada la funcion - valida = unificaValores(COLUMNA_INICIO, 15, CELDA_NUMERO_CAMPOS)
 
' ABRIMOS EL FICHERO para escribir nuestro fichero de traducciones CELDA_NOMBRE_CSV
 RutaCompletaDef = Ruta & "LANGUAGES_" & ActiveSheet.Range(CELDA_NOMBRE_CSV).Value & ".csv"
 'Dim sw As new System.IO.StreamWriter(RutaCompletaDef, False, System.Text.Encoding.UTF8)
 
 Dim objStream
 Set out = CreateObject("ADODB.Stream")
 out.Charset = "utf-8"
 out.open

 'Set fso = CreateObject("Scripting.FileSystemObject")
 'Set out = fso.CreateTextFile(RutaCompletaDef, True, True)

 

    'ESCRIBIMOS EL TAG DE INICIO DE FICHERO:
    '<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
    '<MULTIIDIOM>
    aux = PrintFichero("<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no"" ?>", 0, out)
    
    'ESCRIBIMOS EL TAG DE INICIO DE FICHERO <MULTIIDIOM>
    aux = PrintFichero(EscribeTAGInicio(TAG_INICIO), 0, out)
 
    'Escribe el nombre del documento
    aux = PrintFichero(EscribeTAGInicio(TAG_DOCUMENTO) & Documento & EscribeTAGFin(TAG_DOCUMENTO), 0, out)
    'Escribe la versi|fffd|n
    aux = PrintFichero(EscribeTAGInicio(TAG_VERSION) & Version & EscribeTAGFin(TAG_VERSION), 0, out)
        
    
    'ESCRIBIMOS POR IDIOMA
    For idiomas = 1 To ActiveSheet.Range(CELDA_NUMERO_IDIOMAS).Value
    
        ' Abre de <IDIOMAS>
        aux = PrintFichero(EscribeTAGInicio(TAG_INICIO_IDIOMA), 1, out)
        
    
        ' Seleccionar primera l|fffd|nea de datos.
        Range(CELDA_INICIO_DE_TRADUCCION).Select
        'Si llevamos mas de un idioma... bajamos tantas filas como idiomas llevemos recorridos
        If (idiomas <> 1) Then
            For idiomasrecorridos = 2 To idiomas
                ' ActiveCell.Offset(1, 0).Select --> Se cambia de idioma para "abajo" cuando la excel es en horizontal
                ActiveCell.Offset(0, 1).Select ' --> Se cambia de idioma para "la derecha", cuando la excel es el vertical
            Next idiomasrecorridos
        End If
        
        ' Escribe los campos....
        For campo = 0 To ActiveSheet.Range(CELDA_NUMERO_CAMPOS).Value
            
            'Vamos a la fila de los TAG, pero mantenemos la columna en curos
            'aux = PrintFichero(EscribeTAGFin(ActiveSheet.Range(CStr(ActiveCell.Column) & CStr(FILA_TAG)).Value), 2)
            
            'MsgBox "LOG: ActiveCell.Column:" & ActiveCell.Column
            'MsgBox "LOG: ActiveCell.Row:" & ActiveCell.Row
            'MsgBox "LOG: ActiveCell.Address:" & ActiveCell.Address
            'MsgBox "LOG: ActiveCell.funcion saca letra: " & Mid(ActiveCell.Address, 2, (InStr(2, ActiveCell.Address, "$")) - 2)
            'MsgBox "LOG: ActiveCell.funcion saca columna tag: " & CStr(FILA_TAG)
            'MsgBox "LOG: ActiveCell.funcion saca valor tag  : " & ActiveSheet.Range(CStr(Mid(ActiveCell.Address, 2, (InStr(2, ActiveCell.Address, "$")) - 2)) & CStr(FILA_TAG))
            
            Dim tagTemporal As String
            
            ' Se coge el valor del TAG. Se monta toda la siguiente formlula, para obtener unicamente la columna en LETRA de la fila activa
            ' Formula para excel el horizontal
            tagTemporal = ActiveSheet.Range(CStr(Mid(ActiveCell.Address, 2, (InStr(2, ActiveCell.Address, "$")) - 2)) & CStr(FILA_TAG))
            ' Para la excel en vertical, lo que no cambia es la columna, pero si la fila.
            tagTemporal = ActiveSheet.Range(COLUMNA_INICIO & ActiveCell.Row)
           
            
            
            ' Validamos si la celda esta en blanco. En caso de estar en blanco, guardamos la celda en la que a ocurrido.
            If ActiveCell.Value = "" Then
                If LITERALES_EN_BLANCO = "" Then
                    LITERALES_EN_BLANCO = LITERALES_EN_BLANCO & ActiveCell.Address
                Else
                    LITERALES_EN_BLANCO = LITERALES_EN_BLANCO & ", " & ActiveCell.Address
                End If
                
            End If
            
            ' Validamos si la celda tiene error de traducci|fffd|n (**ERROR**). Si es as|fffd|, guardamos la celda en la que ha ocurrido.
            If ActiveCell.Value = "**ERROR**" Then
                If CELDAS_ERROR_TRADUCCION = "" Then
                    CELDAS_ERROR_TRADUCCION = CELDAS_ERROR_TRADUCCION & ActiveCell.Address
                Else
                    CELDAS_ERROR_TRADUCCION = CELDAS_ERROR_TRADUCCION & ", " & ActiveCell.Address
                End If
                
            End If
            
            aux = PrintFichero(EscribeTAGInicio(tagTemporal) & "<![CDATA[" & ActiveCell.Value & "]]>" & EscribeTAGFin(tagTemporal), 2, out)
            
            
            
            
            'Avanzamos a la derecha (Horizontal)
            'ActiveCell.Offset(0, 1).Select

            'Avanzamos para abajo (vertical)
            ActiveCell.Offset(1, 0).Select

        Next campo
    
    
 
        ' Cierre de <IDIOMAS>
        aux = PrintFichero(EscribeTAGFin(TAG_INICIO_IDIOMA), 1, out)
    Next idiomas
 
    'ESCRIBIMOS EL TAG DE INICIO DE FICHERO
    aux = PrintFichero(EscribeTAGFin(TAG_INICIO), 0, out)
 
    ActiveSheet.Range("H15").Select
 
    'Si hemos encontrado alguna celda en blanco, levantamos una observacion
    If (LITERALES_EN_BLANCO <> "") Or (CELDAS_ERROR_TRADUCCION <> "") Then
        MsgBox "Ha finalizado correctamente, pero con los siguientes avisos: " & vbCr & vbCr & "EXISTEN celdas sin traduccion: " & vbCr & LITERALES_EN_BLANCO & vbCr & "EXISTEN errores de traduccion: " & vbCr & CELDAS_ERROR_TRADUCCION, vbInformation, "Valores sin Traduci|fffd|n"
                
    Else
        MsgBox "Ha finalizado correctamente", vb, "Finalizado correcamente"
    End If
    
    
    
 ' CERRAMOS EL FICHERO CELDA_NOMBRE_CSV
 out.SaveToFile RutaCompletaDef, 2
 out.Close

End Sub


Public Function EscribeTAGInicio(ByVal tag As String) As String
    EscribeTAGInicio = "<" & tag & ">"
End Function

Public Function EscribeTAGFin(ByVal tag As String) As String
    EscribeTAGFin = "</" & tag & ">"
End Function

Public Function PrintFichero(ByVal valor As String, ByVal tabulacion As Integer, ByVal out As Object)

    Select Case tabulacion
       Case 0
            'out.writeline (valor)
            out.WriteText (valor & vbLf)
        Case 1
            'out.writeline (vbTab & valor)
            out.WriteText (vbTab & valor & vbLf)
        Case 2
            'out.writeline (vbTab & vbTab & valor)
            out.WriteText (vbTab & vbTab & valor & vbLf)
        Case 3
            'out.writeline (vbTab & vbTab & vbTab & valor)
            out.WriteText (vbTab & vbTab & vbTab & valor & vbLf)
        Case Else
            'out.writeline (valor)
            out.WriteText (valor & vbLf)
    End Select

    
End Function

Public Function validaTAGRepetidos(ByVal COLUMNA_INICIO As String, ByVal FILA_TAG As String, ByVal CELDA_NUMERO_CAMPOS As String)

    'Declarar
    Dim dict As Object
    Dim espacioBlanco As String
    conAcento = Array("|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|")
    Dim lenConAcento As Integer
    lenConAcento = UBound(conAcento) - LBound(conAcento)
    
    'Crear
    Set dict = CreateObject("Scripting.Dictionary")

    ' Se posiciona en la CELDA donde comienzan los nombres de los TAGS
    Range(COLUMNA_INICIO & FILA_TAG).Select

    For campo = 0 To ActiveSheet.Range(CELDA_NUMERO_CAMPOS).Value
        
        'Se valida que los TAG no contenga espacios
        espacioBlanco = 0
        espacioBlanco = InStr(ActiveCell.Value, " ")
        If espacioBlanco > 0 Then
            MsgBox "EXISTE espacio en blanco en el TAG [" & ActiveCell.Value & "] " & vbCr & vbCr & "EN LA CELDA [" & ActiveCell.Address & "]. " & vbCr & vbCr & "Se aborta la generacion del fichero", vbCritical, "ESPACIO EN BLANCO"
            End
        End If

        'Valida que no haya acentos.
        For i = 0 To lenConAcento
            espacioBlanco = 0
            espacioBlanco = InStr(ActiveCell.Value, conAcento(i))
            
            If espacioBlanco > 0 Then
                MsgBox "EXSITE el car|fffd|cter invalido [" & conAcento(i) & "] en el  TAG [" & ActiveCell.Value & "] " & vbCr & vbCr & "EN LA CELDA [" & ActiveCell.Address & "]. " & vbCr & vbCr & "Se aborta la generacion del fichero", vbCritical, "CARACTER INVALIDO"
                End
            End If
        Next i
        
        If dict.Exists(UCase(ActiveCell.Value)) Then
            MsgBox "EXSITE UN TAG REPETIDO [" & ActiveCell.Value & "] " & vbCr & vbCr & "EN LA CELDA [" & dict(UCase(ActiveCell.Value)) & "] y [ " & ActiveCell.Address & "]. " & vbCr & vbCr & "Se aborta la generacion del fichero", vbCritical, "TAG  REPETIDO"
            End
        Else
            dict.Add UCase(ActiveCell.Value), UCase(ActiveCell.Address)
        End If
        
        'Avanzamos a la derecha (Horizontal)
        'ActiveCell.Offset(0, 1).Select

        'Avanzamos para abajo (vertical)
        ActiveCell.Offset(1, 0).Select


    Next campo
    
End Function



Public Function unificaValores(ByVal COLUMNA_INICIO As String, ByVal FILA_TAG As String, ByVal CELDA_NUMERO_CAMPOS As String)

    'FILA donde vamos a unificar los balores:
    Const CELDA_NUMERO_IDIOMAS As String = "C40"
    'Declarar
    Dim dict As Object
    'Crear
    Set dict = CreateObject("Scripting.Dictionary")

    ' Se posiciona en la CELDA donde comienzan los nombres de los TAGS
    Range(COLUMNA_INICIO & FILA_TAG).Select
    
    ' Se recorre tantos campos como esten indicados
    For campo = 0 To ActiveSheet.Range(CELDA_NUMERO_CAMPOS).Value
    
    Next campo

End Function


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
