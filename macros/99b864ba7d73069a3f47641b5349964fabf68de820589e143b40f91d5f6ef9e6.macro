Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Funktion"
Public Function FctZahl_In_Worten(Zahl As Double)

'wandelt Zahlen im Bereich 0-999.999.999 in Worte um von Karl Donaubauer

Dim z As String, w As String
Dim r As Integer, i As Integer

z = Int(Zahl)
If z = 0 Then FctZahl_In_Worten = "null": Exit Function

For i = 6 To 0 Step -3
  If Len(z) > i Then
    r = Right(Int(z / (10 ^ i)), 3)
    If r > 99 Then w = FctZif(1, Left(r, 1), w) & "hundert": r = Right(r, 2)
    If r > 19 Then w = FctZif(3, Right(r, 1), w): w = FctZif(4, Left(r, 1), w)
    If i = 0 And Right(z, 3) Like "00*" And r > 0 Then w = w & "und"
    If r < 10 Then w = FctZif(1, r, w)
    If r > 9 And r < 20 Then w = FctZif(2, Right(r, 1), w)
    If i = 6 And Len(z) = 7 And r = 1 Then w = "einemillion"
    If i = 6 And Right(Int(z / 10 ^ i), 3) > 1 Then w = w & "millionen"
    If i = 3 And Right(Int(z / 10 ^ i), 3) > 0 Then w = w & "tausend"
    If i = 0 And r = 1 Then w = w & "s"
  End If
Next

FctZahl_In_Worten = w

End Function

Function FctZif(Par As Byte, r As Integer, w As String)

w = w & Choose(r, "ein", "zwei", "drei", "vier", "f|fffd|nf", "sech", "sieb", "acht", "neun")

Select Case Par
    Case 1, 3
        If r = 6 Then w = w & "s"
        If r = 7 Then w = w & "en"
        If Par = 3 And r > 0 Then w = w & "und"
    Case 2
        w = w & "zehn"
        If r = 1 Then w = Left(w, Len(w) - 7) & "elf"
        If r = 2 Then w = Left(w, Len(w) - 8) & "zw|fffd|lf"
    Case 4
        If r = 2 Then w = Left(w, Len(w) - 4) & "zwan"
        w = w & "zig"
        If r = 3 Then w = Left(w, Len(w) - 3) & "|fffd|ig"
End Select

FctZif = w

End Function

Attribute VB_Name = "Steuerung"
Sub Auto_Open()
On Error Resume Next
  
Worksheets("RL_Bewirt|fffd|bern").Select
Worksheets("RL_Bewirt|fffd|bern").Range("A1").Select
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

Worksheets("Kassenumbuchung").Select
Worksheets("Kassenumbuchung").Range("A1").Select
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

Worksheets("Belegschaftskonto").Select
Worksheets("Belegschaftskonto").Range("A1").Select
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

Worksheets("Einzahlung").Select
Worksheets("Kassenbeleg").Range("A1").Select
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

Worksheets("Auszahlung").Select
Worksheets("Kassenbeleg").Range("A1").Select
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True


End Sub

Sub AuszahlungL|fffd|schen()

If MsgBox("Alle Eingaben werden gel|fffd|scht!" & vbCr & "All entries will be deleted!", vbOKCancel) = vbOK Then
    Worksheets("Auszahlung").Range("C4,C6,C8,F4,F6,F8,A13:A22,C13:C22,E13:E22,F13:F22,G13:G22,I13:J22").ClearContents: calculate
End If

End Sub

Sub EinzahlungL|fffd|schen()

If MsgBox("Alle Eingaben werden gel|fffd|scht!" & vbCr & "All entries will be deleted!", vbOKCancel) = vbOK Then
    Worksheets("Einzahlung").Range("C4,F4,A13:A22,C13:C22,E13:E22,F13:F22,G13:G22,I13:J22").ClearContents: calculate
End If

End Sub

Sub PDF()

calculate: ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:="C:\TEMP\" & ActiveWorkbook.Name & ".pdf", Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True

End Sub

Attribute VB_Name = "Tabelle00"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle01"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
'Target wird auf den sich |fffd|berschneidenden Bereich gesetzt, um bei
'Mehrfachmarkierungen die ausserhalb des eingeschr|fffd|nkten Bereiches
'liegenden Zellen nicht ebenfalls zu ver|fffd|ndern
On Error Resume Next
Bereich$ = Intersect(Target, Range("C13:C22"))
'Hier den Bereich anpassen
If Bereich <> "" Then
'Wenn nicht innerhalb des Bereiches wird die Prozedur verlassen
    Select Case Target.Value
    Case "Hotelkosten"
        MsgBox "Hinweis: " & vbCr & vbCr & "Je Steuersatz ist eine Belegzeile erforderlich," & vbCr & "d.h. im Inland immer eine eigene Zeile f|fffd|r das das Fr|fffd|hst|fffd|ck im Hotel (=19%) verwenden." _
        & vbCr & vbCr & "Bitte beachten Sie die Richtlinie zu Bewirtungskosten vom 15.05.2017"
    Case "Bewirtung Fremde", "Bewirtung Mitarbeiter"
        MsgBox "Hinweis: " & vbCr & vbCr & "Je Steuersatz ist eine Belegzeile erforderlich," & vbCr & "d.h. im Inland immer eine eigene Zeile f|fffd|r das Trinkgeld (=0%) verwenden." _
        & vbCr & vbCr & "Bitte beachten Sie die Richtlinie zu Bewirtungskosten vom 15.05.2017" _
        & vbCr & "1. Lassen Sie sich immer eine maschinell erstellte und registrierte Rechnung geben!" _
        & vbCr & "2. Lassen Sie eine Bewirtungsrechnung |fffd|ber 250 |fffd| auf die Gesellschaft ausstellen (mit Adresse)!" _
        & vbCr & "3. Lassen Sie das Trinkgeld vom Kellner separat abzeichnen!"
    Case "Taxi / Vignette / Parkgeb|fffd|hren"
        MsgBox "Hinweis: " & vbCr & vbCr & "Taxifahrten im Inland " & vbCr & "    - unter 50 km =   7%" & vbCr & "    - |fffd|ber  50 km = 19%" & vbCr & vbCr & "(Im Zweifel 7% ausw|fffd|hlen!)"
    Case "Bahn- und Busfahrkarten"
        MsgBox "Hinweis: " & vbCr & vbCr & "Personennahverkehr  im Inland  7%" & vbCr & "Personenfernverkehr im Inland 19%"
    Case "Geb|fffd|hren und Abgaben"
        MsgBox "Hinweis: " & vbCr & vbCr & "Bitte nur Geb|fffd|hren und Abgaben an Beh|fffd|rden!" & vbCr & vbCr & "Taxi und Vignetten Parkgeb|fffd|hr bitte Vorgang" & vbCr & "Taxi / Vignette / Parkgeb|fffd|hren ausw|fffd|hlen"
    End Select
End If
Bereich$ = Intersect(Target, Range("E1"))
'Hier den Bereich anpassen
If Bereich <> "" Then
'Wenn nicht innerhalb des Bereiches wird die Prozedur verlassen
    Select Case Target.Value
    Case "SZ 1030 GBLR Ochsenfurt", "SZ 1030 Hofgut L|fffd|ttewitz", "SZ 1030 Hofgut Friemar", "SZ 1030 Hofgut Einsiedel/Hemmingen", "SZ 1030 Hofgut Kraichgau", "SZ 1030 Hofgut Neuhof", "SZ 1030 Hofgut Wisselsheim", "SZ 1030 Hofgut Urfahrhof", "SZ 1030 Hofgut Franken", "Agrar und Umwelt AG"
        ActiveSheet.Unprotect
        Range("C13").Select
        ActiveCell.SpecialCells(xlCellTypeSameValidation).Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Daten_Auszahlungen_Landwirtschaft"
            .IgnoreBlank = False
            .InCellDropdown = True
            .InputTitle = "Hinweis"
            .ErrorTitle = "Fehler"
            .InputMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ErrorMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ShowInput = True
            .ShowError = True
        End With
    Case "SZ 1000 HV Mannheim", "CE 1400 HV Mannheim", "Beneo 1200 HV Mannheim", "Palatinit 1200 HV Mannheim", "Beneo GmbH 1250 HV Mannheim", "SZ Reise 1620 HV Mannheim", "SZ 1000 Werk Brottewitz", "SZ 1000 Werk Ochsenfurt", "SZ 1000 Werk Offenau", "SZ 1000 Werk Offstein", "SZ 1000 Werk Plattling", "SZ 1000 Werk Rain", "SZ 1000 Werk Wabern", "SZ 1000 Werk Warburg", "SZ 1000 Werk Zeitz", "SZ 1000 Werk Zeil", "CE 1300 Werk Zeitz", "Palatinit 1200 Werk Offstein", "Beneo GmbH 1250 Werk Offstein", "BGD Bodengesundheitsdienst GmbH"
        ActiveSheet.Unprotect
        Range("C13").Select
        ActiveCell.SpecialCells(xlCellTypeSameValidation).Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Daten_Auszahlungen"
            .IgnoreBlank = False
            .InCellDropdown = True
            .InputTitle = "Hinweis"
            .ErrorTitle = "Fehler"
            .InputMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ErrorMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ShowInput = True
            .ShowError = True
        End With
    Case Else
    End Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
End If
End Sub

Attribute VB_Name = "Tabelle02"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
'Target wird auf den sich |fffd|berschneidenden Bereich gesetzt, um bei
'Mehrfachmarkierungen die ausserhalb des eingeschr|fffd|nkten Bereiches
'liegenden Zellen nicht ebenfalls zu ver|fffd|ndern
On Error Resume Next
Bereich$ = Intersect(Target, Range("E1"))
'Hier den Bereich anpassen
If Bereich <> "" Then
'Wenn nicht innerhalb des Bereiches wird die Prozedur verlassen
    Select Case Target.Value
    Case "SZ 1030 GBLR Ochsenfurt", "SZ 1030 Hofgut L|fffd|ttewitz", "SZ 1030 Hofgut Friemar", "SZ 1030 Hofgut Einsiedel/Hemmingen", "SZ 1030 Hofgut Kraichgau", "SZ 1030 Hofgut Neuhof", "SZ 1030 Hofgut Wisselsheim", "SZ 1030 Hofgut Urfahrhof", "SZ 1030 Hofgut Franken", "Agrar und Umwelt AG"
        ActiveSheet.Unprotect
        Range("C13").Select
        ActiveCell.SpecialCells(xlCellTypeSameValidation).Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Daten_Einzahlungen_Landwirtschaft"
            .IgnoreBlank = False
            .InCellDropdown = True
            .InputTitle = "Hinweis"
            .ErrorTitle = "Fehler"
            .InputMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ErrorMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ShowInput = True
            .ShowError = True
        End With
    Case "SZ 1000 HV Mannheim", "CE 1400 HV Mannheim", "Beneo 1200 HV Mannheim", "Palatinit 1200 HV Mannheim", "Beneo GmbH 1250 HV Mannheim", "SZ Reise 1620 HV Mannheim", "SZ 1000 Werk Brottewitz", "SZ 1000 Werk Ochsenfurt", "SZ 1000 Werk Offenau", "SZ 1000 Werk Offstein", "SZ 1000 Werk Plattling", "SZ 1000 Werk Rain", "SZ 1000 Werk Wabern", "SZ 1000 Werk Warburg", "SZ 1000 Werk Zeitz", "SZ 1000 Werk Zeil", "CE 1300 Werk Zeitz", "Palatinit 1200 Werk Offstein", "Beneo GmbH 1250 Werk Offstein", "BGD Bodengesundheitsdienst GmbH"
        ActiveSheet.Unprotect
        Range("C13").Select
        ActiveCell.SpecialCells(xlCellTypeSameValidation).Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Daten_Einzahlungen"
            .IgnoreBlank = False
            .InCellDropdown = True
            .InputTitle = "Hinweis"
            .ErrorTitle = "Fehler"
            .InputMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ErrorMessage = "Nur Eingaben aus der Drop-Down-Liste sind zugelassen."
            .ShowInput = True
            .ShowError = True
        End With
    Case Else
    End Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
'    Range("E1").Select
End If
End Sub


Attribute VB_Name = "Tabelle03"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle04"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle05"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle06"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
'Target wird auf den sich |fffd|berschneidenden Bereich gesetzt, um bei
'Mehrfachmarkierungen die ausserhalb des eingeschr|fffd|nkten Bereiches
'liegenden Zellen nicht ebenfalls zu ver|fffd|ndern
On Error Resume Next
Bereich$ = Intersect(Target, Range("C13:C22"))
'Hier den Bereich anpassen
If Bereich <> "" Then
'Wenn nicht innerhalb des Bereiches wird die Prozedur verlassen
    Select Case Target.Value
    Case "Hotelkosten"
        MsgBox "Hinweis: " & vbCr & vbCr & "Je Steuersatz ist eine Belegzeile erforderlich," & vbCr & "d.h. im Inland immer eine eigene Zeile f|fffd|r das das Fr|fffd|hst|fffd|ck im Hotel (=19%) verwenden." _
        & vbCr & vbCr & "Bitte beachten Sie die Richtlinie zu Bewirtungskosten vom 15.05.2017"
    Case "Bewirtung Fremde", "Bewirtung Mitarbeiter"
        MsgBox "Hinweis: " & vbCr & vbCr & "Je Steuersatz ist eine Belegzeile erforderlich," & vbCr & "d.h. im Inland immer eine eigene Zeile f|fffd|r das Trinkgeld (=0%) verwenden." _
        & vbCr & vbCr & "Bitte beachten Sie die Richtlinie zu Bewirtungskosten vom 15.05.2017" _
        & vbCr & "1. Lassen Sie sich immer eine maschinell erstellte und registrierte Rechnung geben!" _
        & vbCr & "2. Lassen Sie eine Bewirtungsrechnung |fffd|ber 250 |fffd| auf die Gesellschaft ausstellen (mit Adresse)!" _
        & vbCr & "3. Lassen Sie das Trinkgeld vom Kellner separat abzeichnen!"
    Case "Taxi / Vignette / Parkgeb|fffd|hren"
        MsgBox "Hinweis: " & vbCr & vbCr & "Taxifahrten im Inland " & vbCr & "    - unter 50 km =   7%" & vbCr & "    - |fffd|ber  50 km = 19%" & vbCr & vbCr & "(Im Zweifel 7% ausw|fffd|hlen!)"
    Case "Bahn- und Busfahrkarten"
        MsgBox "Hinweis: " & vbCr & vbCr & "Personennahverkehr  im Inland  7%" & vbCr & "Personenfernverkehr im Inland 19%"
    Case "Geb|fffd|hren und Abgaben"
        MsgBox "Hinweis: " & vbCr & vbCr & "Bitte nur Geb|fffd|hren und Abgaben an Beh|fffd|rden!" & vbCr & vbCr & "Taxi und Vignetten Parkgeb|fffd|hr bitte Vorgang" & vbCr & "Taxi / Vignette / Parkgeb|fffd|hren ausw|fffd|hlen"
    End Select
End If

End Sub

' InQuest injected base64 decoded content
' waz+lv'

INQUEST-PP=macro
