Attribute VB_Name = "Module1"

'---------------------------------------------------
'---------------------------------------------------
'||                                               ||
'||     This code is copyright protected          ||
'||     by Gray Technical, LLC. Any copying,      ||
'||     distributing, modifying, duplicating      ||
'||     manipulating or likewise is strictly      ||
'||     prohibited and will be enforced to        ||
'||     fullest extent of the law.                ||
'||                                               ||
'||     If you require support, please email      ||
'||     us at support@graytechnical.com           ||
'||                                               ||
'||     Version numner v3.0.13                    ||
'||                                               ||
'||     last modified on 9/19/2019 7:58 PM        ||
'---------------------------------------------------
'---------------------------------------------------





Dim header As String
Dim footer As String
Dim lines As String
Dim rectangles As String
Dim circles As String
Dim points As String
Dim texts As String

Public YRotation As Integer
Public XRotation As Integer
Public ZRotation As Integer
Public ZoomMag As Double
Public XMovement As Double
Public YMovement As Double
Public C_Origins_X As Double
Public C_Origins_Y As Double
Public C_Origins_Z As Double
Public ScaleFactor As Double


Dim rs As Integer
Dim cls As Integer

Dim r1 As Double
Dim x1 As String
Dim y1 As String
Dim x2 As String
Dim y2 As String
Dim z1 As String
Dim z2 As String
Dim circlestringx As String
Dim circlestringy As String

Dim ElementNumber As Integer
Dim ChartName As String
Dim sh As String
Dim str2 As String


Public MIN_X As Double
Public MAX_X As Double
Public MIN_Y As Double
Public MAX_Y As Double
Public MIN_Z As Double
Public MAX_Z As Double
        
Dim X3n As Double
Dim Y3n As Double
Dim X4n As Double
Dim Y4n As Double
                    
        
Dim cLEFT As Double
Dim cWIDTH As Double
Dim cTOP As Double
Dim cHEIGHT As Double
Dim cRIGHT As Double
Dim cBOTTOM As Double


Dim time As String
Dim preview As Boolean
Dim RELIVENT As Boolean
Dim ZENABLED As Boolean
Dim FORMAT As Boolean



Dim tb1 As String
Dim cb1 As String
Dim cb2 As String
Dim cb3 As String
Dim cb4 As String
Dim FORMATNUM As String
Dim cb6 As String

Public AA As Integer
Public AB As Integer
Public ac As Integer
Public ad As Integer
Public ae As Integer
Public af As Integer

Dim X As Double
Dim Y As Double
Dim rd As Double
                        

Dim lastsaved As String

Dim stvar As String
Public IsBobMarley As Boolean
Dim ImiTXT As Boolean
Public ActLice As String


Dim X1n As Double
Dim X2n As Double
Dim Y1n As Double
Dim Y2n As Double

Dim activation As Boolean
Dim trialactivation As Boolean
Dim thirdtrialactivation As Boolean

Dim showaxis As Boolean

Dim ObjectTypeName As String

Public ZoomMag_Var As Integer

Public ColorChangeType As String
Public R_L As Integer, G_L As Integer, B_L As Integer
Public R_R As Integer, G_R As Integer, B_R As Integer
Public R_C As Integer, G_C As Integer, B_C As Integer
Public R_P As Integer, G_P As Integer, B_P As Integer
Public R_A As Integer, G_A As Integer, B_A As Integer
Public R_D As Integer, G_D As Integer, B_D As Integer

Public R_CHART As Integer, G_CHART As Integer, B_CHART As Integer

Public ShowArms As Boolean
Public CustomOrigin As Boolean








Private Sub App_SheetChange(ByVal sh As Object, ByVal Target As Range)
    If Target = "D2" Then
    MsgBox ("D2")
    End If
    
End Sub

Sub BobMarley()
    'IsBobMarley = False
    ZoomMag_Var = 5000
    
    
End Sub




'---------------------------------------------------
'---------------------------------------------------
'||                                               ||
'||         this begins the macros for            ||
'||         the ribbon buttons                    ||
'||                                               ||
'||                                               ||
'---------------------------------------------------
'---------------------------------------------------

Sub Module1_Initialize()

    Set Xvals = New Collection
    Set Yvals = New Collection
    Set Zvals = New Collection
    
    ShowArms = False
    showaxis = True
    CreateDefaults
    
    CustomOrigin = False
    IfTrial
    
    
    
    
End Sub

Sub SettingsShow(control As IRibbonControl)

'IfTrial
UserForm3.Show

End Sub
Sub CAD_INPUT(control As IRibbonControl)

'IfTrial


UserForm10.Show

End Sub


Sub Rec(control As IRibbonControl)
'rectangles added to name ranges
Dim xxx As String
xxx = "TESTREC"
AddingNames (xxx)
End Sub

Sub ln(control As IRibbonControl)
'line added to name ranges
Dim xxx As String
xxx = "TESTLINE4"
AddingNames (xxx)
End Sub

Sub LoadDXF(control As IRibbonControl)
'open dxf
    UserForm6.Show
End Sub

Sub PT(control As IRibbonControl)
'points added to name ranges, both 2 and 4 points
Dim xxx As String

If (Selection.Columns.Count = 2) Or (Selection.Columns.Count = 3) Then
xxx = "TESTPT2"
ElseIf Selection.Columns.Count >= 4 Then
xxx = "TESTPT4"
Else
MsgBox ("Error in column count")
End If

AddingNames (xxx)
End Sub

Sub cr(control As IRibbonControl)

'Circles added to name ranges, 3 points
Dim xxx As String
xxx = "TESTCIRR"
AddingNames (xxx)
End Sub

Sub Activte_Prod(control As IRibbonControl)

UserForm11.Show
UserForm11.TextBox1.text = ActLice

End Sub

Sub HELP(control As IRibbonControl)

'IfTrial
UserForm4.Show
End Sub
Sub TXTIMITATE(control As IRibbonControl, pressed4 As Boolean)
ImiTXT = pressed4
End Sub
Sub RELV(control As IRibbonControl, pressed1 As Boolean)
RELIVENT = pressed1
End Sub

Sub XYZ(control As IRibbonControl, pressed2 As Boolean)
ZENABLED = pressed2
End Sub

Sub FORME(control As IRibbonControl, pressed3 As Boolean)
FORMAT = pressed3
End Sub

Public Sub AutoZEnabledON()
    Dim ztested As Boolean
    If ZENABLED = True Then
        ztested = True
    Else
        ztested = False
    End If
    
    ZENABLED = True
    
End Sub
Public Sub AutoZEnabledOFF()
    
    If ztested = False Then
        ZENABLED = False
    End If
    
    
    
End Sub
Sub DWG(control As IRibbonControl)

BobMarley
IfTrial

    UserForm5.TextBox1.text = XRotation
    UserForm5.TextBox2.text = YRotation
    UserForm5.TextBox3.text = ZoomMag / ZoomMag_Var
    UserForm5.TextBox4.text = XMovement
    UserForm5.TextBox5.text = YMovement
    UserForm5.TextBox6.text = ZRotation
    
    
    
UserForm2.Show
'UserForm2.MeRefresh

End Sub

Sub Generate(control As IRibbonControl)
    graphnr
    'v3Generate

End Sub

Sub ReGraph(control As IRibbonControl)
    graphnr
    'v3Generate
End Sub


Sub EXPdxf(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".dxf"
    UserForm1.TextBox2.text = tb1 & "-DXF"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave

End Sub

Sub UF5S(control As IRibbonControl)

    ShowGraphOri



End Sub

Public Sub ShowGraphOri()

    'graphnr
    BobMarley
    IfTrial
    
    Dim opx5 As Double
    Dim opy5 As Double
    Dim opz5 As Double
    opx5 = XRotation
    opy5 = YRotation
    opz5 = ZoomMag
    
    
    UserForm5.TextBox1.text = XRotation
    UserForm5.TextBox2.text = YRotation
    UserForm5.TextBox6.text = ZRotation
    
    UserForm5.TextBox3.text = ZoomMag / ZoomMag_Var
    UserForm5.TextBox4.text = XMovement
    UserForm5.TextBox5.text = YMovement
    
    
    If showaxis = True Then
        UserForm5.CheckBox2.Value = False
    Else
        UserForm5.CheckBox2.Value = True
    End If
    
    If ShowArms = True Then
        UserForm5.CheckBox3.Value = True
    Else
        UserForm5.CheckBox3.Value = False
    End If
    
    
    
    UserForm5.Show
    UserForm5.selectionlabelupdate



End Sub

Public Sub CheckAxis()

    If UserForm5.CheckBox2.Value = True Then
        showaxis = False
    Else
        showaxis = True
    End If
    
    graphnr
    'v3Generate

End Sub


Sub EXPjpg(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".jpg"
    UserForm1.TextBox2.text = tb1 & "-JPG"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave
End Sub
Sub EXPpdf(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".pdf"
    UserForm1.TextBox2.text = tb1 & "-PDF"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave
End Sub
Sub EXPtxt(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".txt"
    UserForm1.TextBox2.text = tb1 & "-TXT"
    UserForm1.TextBox1.text = lastsaved
    UserForm1.Show
End Sub
Sub EXPhtml(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".html"
    UserForm1.TextBox2.text = tb1 & "-HTML"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave
End Sub
Sub EXPpng(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".png"
    UserForm1.TextBox2.text = tb1 & "-PNG"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave
End Sub
Sub EXPxls(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".xls"
    UserForm1.TextBox2.text = tb1 & "-XLS"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave
End Sub
Sub EXPcsv(control As IRibbonControl)
    'graphnr
    BobMarley
    IfTrial
    If IsBobMarley = True Then
        Exit Sub
    End If
    
    CreateDefaults
    UserForm1.ComboBox1.text = ".csv"
    UserForm1.TextBox2.text = tb1 & "-CSV"
    UserForm1.Show
    UserForm1.TextBox1.text = lastsaved
    ResortLastSave
End Sub

Sub TX(control As IRibbonControl)
    'texst added to name ranges, 3 points
    Dim xxx As String
    xxx = "TESTTEXT"
    AddingNames (xxx)
End Sub

Sub AR(control As IRibbonControl)
    'texst added to name ranges, 3 points
    Dim xxx As String
    xxx = "TESTARCR"
    AddingNames (xxx)
End Sub

'---------------------------------------------------
'---------------------------------------------------
'||                                               ||
'||                                               ||
'||                                               ||
'||                                               ||
'||                                               ||
'---------------------------------------------------
'---------------------------------------------------
Public Sub LastSave()
    lastsaved = UserForm1.TextBox1.text
End Sub
Sub module_Initialize()
    MsgBox ("HELLO!")

End Sub
Public Sub IfTrial()
    On Error Resume Next
    
    If IsBobMarley = True Then
    
        Dim Msg3 As String
        Dim Ans As Integer
        Msg3 = "You are currently running the TRIAL of Excel Draw. This TRIAL does not export any data and only graphs 5 objects. For more functionality please purchase the full version." & vbNewLine & vbNewLine & "Would you like to be redirected to the Excel Draw purchase page?"
        Ans = MsgBox(Msg3, vbYesNo)
        If Ans = vbYes Then
            ThisWorkbook.FollowHyperlink Address:="http://www.graytechnical.com/exceldraw/", NewWindow:=True
        End If
    
    End If

End Sub

Public Sub ByPasser()

    On Error Resume Next
    
    
        Dim Msg3 As String
        Dim Ans As Integer
        Msg3 = "You are currently running the TRIAL of Excel Draw. This TRIAL does not export any data. For more functionality please purchase the full version." & vbNewLine & vbNewLine & "Would you like to be redirected to the Excel Draw purchase page?"
        Ans = MsgBox(Msg3, vbYesNo)
    If Ans = vbYes Then
        ThisWorkbook.FollowHyperlink Address:="http://www.graytechnical.com/exceldraw/", NewWindow:=True
    End If


End Sub

Public Sub ResortLastSave()
    UserForm1.TextBox1.text = lastsaved
End Sub
Private Sub AutoAddNames()
    
    Dim COL As Long
    Dim TP As String
    
    
    COL = Selection.Columns.Count
    
    If COL = 0 Then
        Exit Sub
    ElseIf COL = 1 Then
        MsgBox ("Please select more than one column")
    ElseIf COL = 2 Then
        TP = Line
    ElseIf COL = 3 Then
        
    
    End If


End Sub

Sub ClearNames()
    On Error Resume Next
        For Each nm In ActiveWorkbook.Names
            If nm.RefersToRange.Parent.Name = ActiveSheet.Name Then nm.Delete
            
        Next nm
        On Error GoTo 0
        
    
End Sub


Public Sub exportingChartImage()
    Dim exportfile As String
    Temp = Environ("temp")
    exportfile = Temp & "\ExcelDrawChartimage.jpg"
    
    On Error Resume Next
    SetAttr exportfile, vbNormal
    Kill exportfile
    On Error GoTo 0
    
    
    ActiveChart.Export (exportfile)
End Sub

Sub AddingNames(xxx As String)


On Error Resume Next
Dim namenum As String
namenum = ""

CreateDefaults

        Dim r1 As String
        Dim r2 As String
        Dim c1 As String
        Dim c2 As String
        
        r1 = Selection.Row
        r2 = Selection.Row + Selection.Rows.Count
        c1 = Selection.Column
        c2 = Selection.Column + Selection.Columns.Count
        
        



Dim DT As String
Dim REL As String
Dim ZE As String

DT = DateTime.Now
DT = Replace(DT, "/", "")
DT = Replace(DT, ":", "")
DT = Replace(DT, "\", "")
DT = Replace(DT, " ", "")
DT = Replace(DT, ",", "")
DT = Replace(DT, ";", "")
DT = Replace(DT, ".", "")
DT = Replace(DT, "-", "")
DT = Replace(DT, "_", "")
DT = Replace(DT, "(", "")
DT = Replace(DT, ")", "")
DT = Replace(DT, "=", "")
DT = Replace(DT, " ", "")
DT = Replace(DT, "*", "")
DT = Replace(DT, "&", "")
DT = Replace(DT, "^", "")
DT = Replace(DT, "%", "")
DT = Replace(DT, "$", "")
DT = Replace(DT, "#", "")
DT = Replace(DT, "@", "")
DT = Replace(DT, "!", "")
DT = Replace(DT, "~", "")
DT = Replace(DT, "`", "")
DT = Replace(DT, "?", "")
DT = Replace(DT, ".", "")
DT = Replace(DT, ",", "")
DT = Replace(DT, "<", "")
DT = Replace(DT, ">", "")
DT = Replace(DT, "]", "")
DT = Replace(DT, "[", "")
DT = Replace(DT, "}", "")
DT = Replace(DT, "{", "")
DT = Replace(DT, "|", "")
DT = Replace(DT, "+", "")

time = DT


Dim TP As String
Dim rws As Integer
rws = Selection.Rows.Count



For i = 1 To rws

If xxx = "TESTREC" Then
    TP = "R" 'this is for a rectangle - 4 columns x1 y1 x2 y2
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
    
    
ElseIf xxx = "TESTLINE4" Then
    TP = "L" 'this is for a line- 4 columns x1 y1 x2 y2
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
    

ElseIf xxx = "TESTPT2" Then
    TP = "p" ' this is for a point - 2 columns x1 y1
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
    

ElseIf xxx = "TESTPT4" Then
    TP = "P" 'this is for a point - 4 columns x1 y1 x2 y2
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
    

ElseIf xxx = "TESTCIRR" Then
    TP = "C" 'this is for a circle - 3 columns x1 y1 r
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
    

ElseIf xxx = "TESTARCR" Then
    TP = "A" 'this is for a ark - 5-6 columns x1 y1 z1 r start end
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
        
    
ElseIf xxx = "TESTTEXT" Then
    TP = "T" 'this is for a circle - 3 columns x1 y1 r
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
    
ElseIf xxx = "TESTDIST" Then
    TP = "D" 'this is for a distance - basically a line
    
    If RELIVENT = True Then
        REL = "R"
    Else
        REL = "A"
    End If
    
    If ZENABLED = True Then
        ZE = "Z"
    Else
        ZE = "N"
    End If
Else
    MsgBox ("Error gathering information on format")
Exit Sub
End If




Dim SName As String




Dim NamedRange As String

Dim SorG As String
Dim Obj As String
Dim AorR As String





If Selection.Rows.Count >= 1 Then

        activation = False
        
        For ci = 1 To Selection.Columns.Count
            Dim poopie As String
            poopie = ActiveSheet.Cells(r1 + i - 1, c1 + ci - 1).text
            If poopie = "" Then
            Else
                Dim poopies As Double
                poopies = poopie
                    If IsNumeric(poopie) = True Then
                        activation = True
                    End If
            End If
        Next
        
        
        If activation = True Then
        
            Dim shnm As String
            shnm = ActiveSheet.Name
            
            shnm = Replace(shnm, "/", "")
            shnm = Replace(shnm, ":", "")
            shnm = Replace(shnm, "\", "")
            shnm = Replace(shnm, " ", "")
            shnm = Replace(shnm, ",", "")
            shnm = Replace(shnm, ";", "")
            shnm = Replace(shnm, ".", "")
            shnm = Replace(shnm, "-", "")
            shnm = Replace(shnm, "_", "")
            shnm = Replace(shnm, "(", "")
            shnm = Replace(shnm, ")", "")
            shnm = Replace(shnm, "=", "")
            shnm = Replace(shnm, " ", "")
            shnm = Replace(shnm, "*", "")
            shnm = Replace(shnm, "&", "")
            shnm = Replace(shnm, "^", "")
            shnm = Replace(shnm, "%", "")
            shnm = Replace(shnm, "$", "")
            shnm = Replace(shnm, "#", "")
            shnm = Replace(shnm, "@", "")
            shnm = Replace(shnm, "!", "")
            shnm = Replace(shnm, "~", "")
            shnm = Replace(shnm, "`", "")
            shnm = Replace(shnm, "?", "")
            shnm = Replace(shnm, ".", "")
            shnm = Replace(shnm, ",", "")
            shnm = Replace(shnm, "<", "")
            shnm = Replace(shnm, ">", "")
            shnm = Replace(shnm, "]", "")
            shnm = Replace(shnm, "[", "")
            shnm = Replace(shnm, "}", "")
            shnm = Replace(shnm, "{", "")
            shnm = Replace(shnm, "|", "")
            shnm = Replace(shnm, "+", "")
            
            namenum = ""
            
            If i < 10000 Then
                If i < 1000 Then
                    If i < 100 Then
                        If i < 10 Then
                            namenum = "0000" & i
                        Else
                            namenum = "000" & i
                        End If
                    Else
                        namenum = "00" & i
                    End If
                Else
                    namenum = "0" & i
                End If
            Else
                namenum = i
            End If
            
            
            
            NamedRange = shnm & "__" & TP & REL & ZE & "_" & DT & namenum
            
            If TP = "T" Then
                NamedRange = NamedRange & "___" & cb6
            End If
            
            
    
            
            'ActiveSheet.Selection = Range(Cells(Selection.Rows(i), Selection.Column).Address & ":" & Cells(Selection.Rows(i), Selection.Column + Selection.Columns.Count - 1).Address)
            ActiveSheet.Range(Cells(r1 + i - 1, Selection.Column).Address & ":" & Cells(r1 + i - 1, Selection.Column + Selection.Columns.Count - 1).Address).Select
            
             
            
    
                       
           If FORMAT = True Then
    
           
            For i2 = 1 To c2
                If ActiveSheet.Range(Cells(r1 + i - 1, Selection.Column + i2 - 1).Address).IsNumeric = True Then
                    Selection.NumberFormat = FORMATNUM
                End If
            Next
            
           End If
           
           
    
           
            For i3 = 1 To Names.Count
                   'MsgBox ("=" & ActiveSheet.Name & "!" & Selection.Address & " | " & Names(i3))
                If Names(i3) = "=" & ActiveSheet.Name & "!" & Selection.Address Then
                    Dim nm As String
                    nm = Left(NamedRange, 18)
                    Dim mn As String
                    
                    For X = 1 To ActiveSheet.ChartObjects.Count
                        If ActiveSheet.ChartObjects(X).Name = tb1 Then
                            'ActiveSheet.ChartObjects(tb1).Activate
                            Dim amount As String
                            amount = ActiveChart.SeriesCollection.Count
                
                            For i9 = 1 To ActiveChart.SeriesCollection.Count
                                mn = Left(ActiveChart.SeriesCollection(i9).Name, 18)
                                
                                Dim RNms As String
                                RNms = Names(i3).Name
                                
                                Dim Types As String
                                Dim RELS As String
                                Dim ZEN As String
                                
                                Dim UnlineDASHUnderlinePlacement As Integer
                                UnlineDASHUnderlinePlacement = InStr(RNms, "__")
                                
    
                                
                                Dim UnlinePlacement As Integer
                                UnlinePlacement = InStr(RNms, "_")
                                Dim fullstring As String
                                fullstring = Mid(RNms, UnlineDASHUnderlinePlacement + 2, UnlinePlacement - 1)
                                
                                Types = Left(fullstring, 1)
                                Dim second As String
                                second = Left(fullstring, 2)
                                
                                RELS = Right(second, 1)
                                
                                
                                Dim third As String
                                third = Left(fullstring, 3)
                                ZEN = Right(third, 1)
                                
                                
                            
                                Dim str As String
                                str = Types
                                
                                
                                
                                
                                If Types & RELS & ZEN = TP & REL & ZE Then
                                    Names(i3).Delete
                                End If
                            Next
                    
                        End If
                    Next
                    
                    
                    
                    
                   
                    
                End If
                
            Next
            
            ActiveSheet.Range(Cells(r1 + i - 1, Selection.Column).Address & ":" & Cells(r1 + i - 1, Selection.Column + Selection.Columns.Count - 1).Address).Select
          
            Selection.Name = NamedRange
            
            'ActiveSheet.Selection = Nothing
            
            'ActiveSheet.Selection = ActiveSheet.Range(Cells(r1, c1).Address & ":" & Cells(r2, c2).Address).Select
            'ActiveSheet.Range(Cells(r1, c1).Address & ":" & Cells(r2, c2).Address).Select

    

        End If
        
End If


Next


CheckUpdatedCell
graphnr



End Sub


Public Sub imagepreviewer()

On Error Resume Next


CreateDefaults

ActiveSheet.ChartObjects(tb1).Activate

    Dim lstA As Collection
    Set lstA = New Collection
    
    For q = 0 To UserForm2.ListBox1.ListCount - 1
        If UserForm2.ListBox1.Selected(q) = True Then
            lstA.Add (UserForm2.ListBox1.List(q, 0))
        End If
    Next

For i = 1 To ActiveChart.SeriesCollection.Count

    
    On Error Resume Next
    
    ActiveChart.SeriesCollection(i).Selected = True
    ActiveChart.SeriesCollection(i).Select
    Selection.FORMAT.Line.ForeColor.ObjectThemeColor = msoThemeColorAccent1
    Selection.FORMAT.Line.FillColor.ObjectThemeColor = msoThemeColorAccent1
    Selection.FORMAT.Fill.ForeColor.ObjectThemeColor = msoThemeColorAccent1
    
    
    Dim act As String
    act = ActiveChart.SeriesCollection(i).Name
    

    Dim id As Integer


    Dim ts As String
    
    
    For R = 1 To lstA.Count
        ts = lstA(R)
        If act = ts Then
            Selection.FORMAT.Line.ForeColor.RGB = RGB(255, 192, 0)
            Selection.FORMAT.Line.FillColor.RGB = RGB(255, 192, 0)
            Selection.FORMAT.Fill.ForeColor.RGB = RGB(255, 192, 0)
        End If
        
    Next
    
Next



exportingChartImage




End Sub


Public Sub deletegraph()

 On Error Resume Next
 
 ClearNames
 
    ActiveSheet.ChartObjects(tb1).Activate
    
    For i = 1 To ActiveChart.SeriesCollection.Count


   ActiveChart.SeriesCollection(i).Delete

    
    Next
    
    
    ActiveChart.Parent.Delete
    ActiveSheet.Shapes.Delete (ChartName)

End Sub

Public Sub CheckUpdatedCell()
On Error Resume Next
Dim bln As Boolean
bln = True
If ActiveSheet.ChartObjects(tb1).Visible = True Or ActiveSheet.ChartObjects("EXCEL_DRAW_CADD").Visible = True Then
Else
    bln = False
End If

If bln = True Then
    graphnr
    'V3Graphing
End If

End Sub

Public Sub DeleteONLYgraph()

On Error Resume Next

    ActiveSheet.ChartObjects(tb1).Activate
    
    For i = 1 To ActiveChart.SeriesCollection.Count


   ActiveChart.SeriesCollection(i).Delete

    
    Next
    
    
    ActiveChart.Parent.Delete
    ActiveSheet.Shapes.Delete (ChartName)

End Sub

Public Sub CheckIfChart(bln As Boolean)
If ActiveWorkbook.ActiveSheet.ChartObjects(tb1).Visible = False Then
    bln = False
End If
End Sub

Public Sub CreateDefaults()

Dim Temp As String
Temp = Environ("temp")
Dim settings As String
settings = Temp & "\EXCDXF_GT.txt"


Dim fileNum As Integer
fileNum = FreeFile()

If Dir(settings) <> "" Then
    'file exist
    Open settings For Input As #fileNum
    Dim ln As Integer
    ln = 1

    Do Until EOF(fileNum)
        Dim readdata As String
        readdata = ""
        
        
        Line Input #fileNum, readdata 'adding line to read the whole line, not only first 128 positions
    
        If ln = 2 Then
            tb1 = readdata
        ElseIf ln = 3 Then
            cb1 = readdata
        ElseIf ln = 4 Then
            cb2 = readdata
        ElseIf ln = 5 Then
            cb3 = readdata
        ElseIf ln = 6 Then
            cb4 = readdata
        ElseIf ln = 7 Then
            FORMATNUM = readdata
        ElseIf ln = 8 Then
            cb6 = readdata
        ElseIf ln = 9 Then
            R_R = readdata
        ElseIf ln = 10 Then
            G_R = readdata
        ElseIf ln = 11 Then
            B_R = readdata
        ElseIf ln = 12 Then
            R_L = readdata
        ElseIf ln = 13 Then
            G_L = readdata
        ElseIf ln = 14 Then
            B_L = readdata
        ElseIf ln = 15 Then
            R_C = readdata
        ElseIf ln = 16 Then
            G_C = readdata
        ElseIf ln = 17 Then
            B_C = readdata
        ElseIf ln = 18 Then
            R_P = readdata
        ElseIf ln = 19 Then
            G_P = readdata
        ElseIf ln = 20 Then
            B_P = readdata
        ElseIf ln = 21 Then
            R_A = readdata
        ElseIf ln = 22 Then
            G_A = readdata
        ElseIf ln = 23 Then
            B_A = readdata
        ElseIf ln = 24 Then
            R_D = readdata
        ElseIf ln = 25 Then
            G_D = readdata
        ElseIf ln = 26 Then
            B_D = readdata
        ElseIf ln = 27 Then
            Wgt_O = readdata
        ElseIf ln = 28 Then
            R_CHART = readdata
        ElseIf ln = 29 Then
            G_CHART = readdata
        ElseIf ln = 30 Then
            B_CHART = readdata
        End If
        ln = ln + 1
        
        
    Loop
    
    
    
Close #fileNum
    
Else
    'file does not exist
    Dim strprint As String
    strprint = ""
    strprint = vbCrLf & "Drawing Preview" & vbCrLf _
                & "X1-Y1-Z1-X2-Y2-Z2" & vbCrLf _
                & "X1-Y1-Z1-X2-Y2-Z2" & vbCrLf _
                & "X1-Y1-Z1-X2-Y2-Z2" & vbCrLf _
                & "X-Y-Z-R" & vbCrLf _
                & "0.00000" & vbCrLf _
                & "4.0" & vbCrLf _
                & "255" & vbCrLf & "0" & vbCrLf & "0" & vbCrLf _
                & "50" & vbCrLf & "0" & vbCrLf & "120" & vbCrLf _
                & "225" & vbCrLf & "215" & vbCrLf & "0" & vbCrLf _
                & "10" & vbCrLf & "255" & vbCrLf & "10" & vbCrLf _
                & "255" & vbCrLf & "165" & vbCrLf & "0" & vbCrLf _
                & "57" & vbCrLf & "255" & vbCrLf & "20" & vbCrLf _
                & "1" & vbCrLf _
                & "255" & vbCrLf & "255" & vbCrLf & "255"
                
                


    'this will start creating the txt document
    Dim fso As Object
    Set fso = CreateObject("Scripting.filesystemobject")
        
    Dim fileout As Object
        
    Set fileout = fso.createtextfile(settings, True, True)
    fileout.write strprint
    fileout.Close

    
End If


    CreateLice





End Sub



Function RandomDigitsNumber(i As Double)

    Dim LRandomNumber As Long
    
    Randomize
    LRandomNumber = Int((999999999) - ((100000000) + 1) * Rnd + (100000000))

    RandomDigitsNumber = LRandomNumber


End Function

Public Sub RecStar(ZEN As String)

    stvar = cb3
  
            If stvar = "X1-Y1-Z1-X2-Y2-Z2" Then
                
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
                
                
                
            ElseIf stvar = "Y1-X1-Z1-Y2-X2-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "5"
                    ae = "4"
                    af = "6"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    'af = "6"
                End If
            
            ElseIf stvar = "Z1-Y1-X1-Z2-Y2-X2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "2"
                    ac = "1"
                    ad = "6"
                    ae = "5"
                    af = "4"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-X1-Y1-Z2-X2-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "3"
                    ac = "1"
                    ad = "5"
                    ae = "6"
                    af = "4"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "X1-X2-Y1-Y2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "3"
                    ac = "5"
                    ad = "2"
                    ae = "4"
                    af = "6"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Y1-Y2-X1-X2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "1"
                    ac = "5"
                    ad = "4"
                    ae = "2"
                    af = "6"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "2"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-Z2-Y1-Y2-X1-X2" Then
            
                If ZEN = "Z" Then
                    AA = "5"
                    AB = "3"
                    ac = "1"
                    ad = "6"
                    ae = "4"
                    af = "2"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-Z2-X1-X2-Y1-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "5"
                    ac = "1"
                    ad = "4"
                    ae = "6"
                    af = "2"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            Else
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
                            
            End If
            
End Sub

Public Sub ArcStar(ZEN As String)

    stvar = cb2
    
    
    
    
               If stvar = "X1-Y1-Z1-X2-Y2-Z2" Then
                
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "5"
                End If
                
                
                
            ElseIf stvar = "Y1-X1-Z1-Y2-X2-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "5"
                    ae = "4"
                    af = "6"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    af = "5"
                End If
            
            ElseIf stvar = "Z1-Y1-X1-Z2-Y2-X2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "2"
                    ac = "1"
                    ad = "6"
                    ae = "5"
                    af = "4"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "1"
                    ad = "5"
                    ae = "4"
                    af = "3"
                End If
            
            
            ElseIf stvar = "Z1-X1-Y1-Z2-X2-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "3"
                    ac = "1"
                    ad = "5"
                    ae = "6"
                    af = "4"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "1"
                    ad = "4"
                    ae = "5"
                    af = "3"
                End If
            
            
            ElseIf stvar = "X1-X2-Y1-Y2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "3"
                    ac = "5"
                    ad = "2"
                    ae = "4"
                    af = "6"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "5"
                    ad = "2"
                    ae = "4"
                    af = "5"
                End If
            
            
            ElseIf stvar = "Y1-Y2-X1-X2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "1"
                    ac = "5"
                    ad = "4"
                    ae = "2"
                    af = "6"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "5"
                    ad = "4"
                    ae = "2"
                    af = "5"
                End If
            
            
            ElseIf stvar = "Z1-Z2-Y1-Y2-X1-X2" Then
            
                If ZEN = "Z" Then
                    AA = "5"
                    AB = "3"
                    ac = "1"
                    ad = "6"
                    ae = "4"
                    af = "2"
                Else
                    AA = "4"
                    AB = "2"
                    'ac = "1"
                    ad = "5"
                    ae = "3"
                    af = "1"
                End If
            
            
            ElseIf stvar = "Z1-Z2-X1-X2-Y1-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "5"
                    ac = "1"
                    ad = "4"
                    ae = "6"
                    af = "2"
                Else
                    AA = "2"
                    AB = "4"
                    'ac = "1"
                    ad = "3"
                    ae = "5"
                    af = "1"
                End If
            
            
            Else
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "5"
                End If
                            
            End If
    
    
   Exit Sub
   
    
    If ZEN = "N" Then
    
        
        If stvar = "X1-Y1-Z1-X2-Y2-Z2" Then
                

                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "5"
             
                
                
                
            ElseIf stvar = "Y1-X1-Z1-Y2-X2-Z2" Then

                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ad = "4"
                    ae = "3"
                    af = "5"
             
            
            ElseIf stvar = "Z1-Y1-X1-Z2-Y2-X2" Then
            
   
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ad = "4"
                    ae = "3"
                    af = "5"
          
            
            
            ElseIf stvar = "Z1-X1-Y1-Z2-X2-Y2" Then
            

                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "5"
        
            
            
            ElseIf stvar = "X1-X2-Y1-Y2-Z1-Z2" Then
            

                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ad = "2"
                    ae = "4"
                    af = "5"
               
            
            
            ElseIf stvar = "Y1-Y2-X1-X2-Z1-Z2" Then
            

                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ad = "4"
                    ae = "2"
                    af = "5"
              
            
            
            ElseIf stvar = "Z1-Z2-Y1-Y2-X1-X2" Then
            

                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ad = "2"
                    ae = "4"
                    'af = "6"
            
            
            
            ElseIf stvar = "Z1-Z2-X1-X2-Y1-Y2" Then
            

                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ad = "2"
                    ae = "4"
                    'af = "6"
  
            Else
            

                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ad = "3"
                    ae = "4"
                    'af = "6"
                  
            End If
         
        
    Else
    'z enabled
            If stvar = "X1-Y1-Z1-X2-Y2-Z2" Then
                

                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "6"
             
                
                
                
            ElseIf stvar = "Y1-X1-Z1-Y2-X2-Z2" Then

                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "4"
                    ae = "3"
                    af = "6"
             
            
            ElseIf stvar = "Z1-Y1-X1-Z2-Y2-X2" Then
            
   
                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "4"
                    ae = "3"
                    af = "6"
          
            
            
            ElseIf stvar = "Z1-X1-Y1-Z2-X2-Y2" Then
            

                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "6"
        
            
            
            ElseIf stvar = "X1-X2-Y1-Y2-Z1-Z2" Then
            

                    AA = "1"
                    AB = "3"
                    ac = "3"
                    ad = "2"
                    ae = "4"
                    af = "6"
               
            
            
            ElseIf stvar = "Y1-Y2-X1-X2-Z1-Z2" Then
            

                    AA = "3"
                    AB = "1"
                    ac = "3"
                    ad = "4"
                    ae = "2"
                    af = "6"
              
            
            
            ElseIf stvar = "Z1-Z2-Y1-Y2-X1-X2" Then
            

                    AA = "3"
                    AB = "1"
                    ac = "3"
                    ad = "2"
                    ae = "4"
                    af = "6"
            
            
            
            ElseIf stvar = "Z1-Z2-X1-X2-Y1-Y2" Then
            

                    AA = "1"
                    AB = "3"
                    ac = "3"
                    ad = "2"
                    ae = "4"
                    af = "6"
  
            Else
            

                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "3"
                    ae = "4"
                    af = "6"
                  
            End If
         
    End If
    
            
    
End Sub

Public Sub LineStar(ZEN As String)

    stvar = cb2
    
  If stvar = "X1-Y1-Z1-X2-Y2-Z2" Then
                
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
                
                
                
            ElseIf stvar = "Y1-X1-Z1-Y2-X2-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "5"
                    ae = "4"
                    af = "6"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    'af = "6"
                End If
            
            ElseIf stvar = "Z1-Y1-X1-Z2-Y2-X2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "2"
                    ac = "1"
                    ad = "6"
                    ae = "5"
                    af = "4"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-X1-Y1-Z2-X2-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "3"
                    ac = "1"
                    ad = "5"
                    ae = "6"
                    af = "4"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "X1-X2-Y1-Y2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "3"
                    ac = "5"
                    ad = "2"
                    ae = "4"
                    af = "6"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Y1-Y2-X1-X2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "1"
                    ac = "5"
                    ad = "4"
                    ae = "2"
                    af = "6"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "2"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-Z2-Y1-Y2-X1-X2" Then
            
                If ZEN = "Z" Then
                    AA = "5"
                    AB = "3"
                    ac = "1"
                    ad = "6"
                    ae = "4"
                    af = "2"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-Z2-X1-X2-Y1-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "5"
                    ac = "1"
                    ad = "4"
                    ae = "6"
                    af = "2"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            Else
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
                            
            End If
         
        
            
            
    
End Sub

Public Sub PointStar(ZEN As String)
    stvar = cb1
    
                If stvar = "X1-Y1-Z1-X2-Y2-Z2" Then
                
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
                
                
                
            ElseIf stvar = "Y1-X1-Z1-Y2-X2-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "5"
                    ae = "4"
                    af = "6"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    'af = "6"
                End If
            
            ElseIf stvar = "Z1-Y1-X1-Z2-Y2-X2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "2"
                    ac = "1"
                    ad = "6"
                    ae = "5"
                    af = "4"
                Else
                    AA = "2"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "3"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-X1-Y1-Z2-X2-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "3"
                    ac = "1"
                    ad = "5"
                    ae = "6"
                    af = "4"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "X1-X2-Y1-Y2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "3"
                    ac = "5"
                    ad = "2"
                    ae = "4"
                    af = "6"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Y1-Y2-X1-X2-Z1-Z2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "1"
                    ac = "5"
                    ad = "4"
                    ae = "2"
                    af = "6"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ac = "4"
                    ad = "2"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-Z2-Y1-Y2-X1-X2" Then
            
                If ZEN = "Z" Then
                    AA = "5"
                    AB = "3"
                    ac = "1"
                    ad = "6"
                    ae = "4"
                    af = "2"
                Else
                    AA = "3"
                    AB = "1"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            ElseIf stvar = "Z1-Z2-X1-X2-Y1-Y2" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "5"
                    ac = "1"
                    ad = "4"
                    ae = "6"
                    af = "2"
                Else
                    AA = "1"
                    AB = "3"
                    'ac = "3"
                    ac = "2"
                    ad = "4"
                    'af = "6"
                End If
            
            
            Else
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"
                    ae = "5"
                    af = "6"
                Else
                    AA = "1"
                    AB = "2"
                    'ac = "3"
                    ac = "3"
                    ad = "4"
                    'af = "6"
                End If
                            
            End If

End Sub

Public Sub TextStar(ZEN As String)

    stvar = cb3
    
    If stvar = "X-Y-Z-R" Then
                
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"

                Else
                    AA = "1"
                    AB = "2"
                    
                    ac = "3"
                    
                End If
                
                
                
            ElseIf stvar = "Y-X-Z-R" Then
          
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "1"
                    ac = "3"
                    ad = "4"

                Else
                    AA = "2"
                    AB = "1"
                    
                    ac = "3"
                    
                End If
            ElseIf stvar = "Z-X-Y-R" Then
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "3"
                    ac = "1"
                    ad = "4"

                Else
                    AA = "1"
                    AB = "2"
                    
                    ac = "3"
                    
                End If
            ElseIf stvar = "Z-Y-X-R" Then
            
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "2"
                    ac = "1"
                    ad = "4"

                Else
                    AA = "2"
                    AB = "1"
                    
                    ac = "3"
                    
                End If
            ElseIf stvar = "X-Y-R-Z" Then
            
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "4"
                    ad = "3"

                Else
                    AA = "1"
                    AB = "2"
                    
                    ac = "3"
                    
                End If
            ElseIf stvar = "X-R-Y-Z" Then
          
                If ZEN = "Z" Then
                    AA = "1"
                    AB = "3"
                    ac = "4"
                    ad = "2"

                Else
                    AA = "1"
                    AB = "3"
                    
                    ac = "2"
                    
                End If
            ElseIf stvar = "R-X-Y-Z" Then
 
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "3"
                    ac = "4"
                    ad = "1"

                Else
                    AA = "2"
                    AB = "3"
                    
                    ac = "1"
                    
                End If
            ElseIf stvar = "Y-X-R-Z" Then
 
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "1"
                    ac = "4"
                    ad = "3"

                Else
                    AA = "2"
                    AB = "1"
                    
                    ac = "3"
                    
                End If
            ElseIf stvar = "Y-R-X-Z" Then
 
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "1"
                    ac = "4"
                    ad = "2"

                Else
                    AA = "3"
                    AB = "1"
                    
                    ac = "2"
                    
                End If
            ElseIf stvar = "R-Y-X-Z" Then
 
                If ZEN = "Z" Then
                    AA = "3"
                    AB = "2"
                    ac = "4"
                    ad = "1"

                Else
                    AA = "3"
                    AB = "2"
                    
                    ac = "1"
                    
                End If
            ElseIf stvar = "Z-X-R-Y" Then
 
                If ZEN = "Z" Then
                    AA = "2"
                    AB = "4"
                    ac = "1"
                    ad = "3"

                Else
                    AA = "1"
                    AB = "3"
                    
                    ac = "2"
                    
                End If
            ElseIf stvar = "Z-R-X-Y" Then
                 If ZEN = "Z" Then
                    AA = "3"
                    AB = "4"
                    ac = "1"
                    ad = "2"

                Else
                    AA = "2"
                    AB = "3"
                    
                    ac = "1"
                    
                End If
            
            ElseIf stvar = "R-Z-X-Y" Then
 
                 If ZEN = "Z" Then
                    AA = "3"
                    AB = "4"
                    ac = "2"
                    ad = "1"

                Else
                    AA = "2"
                    AB = "3"
                    
                    ac = "1"
                    
                End If
            ElseIf stvar = "Z-Y-R-X" Then
 
                If ZEN = "Z" Then
                    AA = "4"
                    AB = "2"
                    ac = "1"
                    ad = "3"

                Else
                    AA = "3"
                    AB = "1"
                    
                    ac = "2"
                    
                End If
            ElseIf stvar = "Z-R-Y-X" Then
 
                If ZEN = "Z" Then
                    AA = "4"
                    AB = "3"
                    ac = "1"
                    ad = "2"

                Else
                    AA = "3"
                    AB = "2"
                    
                    ac = "1"
                    
                End If
            ElseIf stvar = "R-Z-Y-X" Then
                 If ZEN = "Z" Then
                    AA = "4"
                    AB = "3"
                    ac = "2"
                    ad = "1"

                Else
                    AA = "3"
                    AB = "2"
                    
                    ac = "1"
                    
                End If
            
            Else
                  If ZEN = "Z" Then
                    AA = "1"
                    AB = "2"
                    ac = "3"
                    ad = "4"

                Else
                    AA = "1"
                    AB = "2"
                    
                    ac = "3"
                    
                End If
            End If
    
    
End Sub
Private Sub CheckMovements()

If XRotation <= 0 Then
    XRotation = 0
End If

If YRotation <= 0 Then
    yrotataion = 0
End If

If ZoomMag <= 0 Then
    ZoomMag = Math.Abs(((MAX_X - MIN_X) + (MAX_Y - MIN_Y) + (MAX_Z - MIN_Z)) / 3) * ZoomMag_Var
    
End If

If XMovement <= -501 Then
    XMovement = 0
End If

If YMovement <= -501 Then
    YMovement = 0
End If

End Sub


Private Sub RecAbsNo()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        

rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 & vbCrLf
                    
                        
                    
                        
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        
                        X3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Sin((YRotation) * 3.141592 / 180), 5)
                        X4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Sin((YRotation) * 3.141592 / 180), 5)
                   
                        
                        
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                        Y3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((XRotation) * 3.141592 / 180)), 5)
                        Y4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((XRotation) * 3.141592 / 180)), 5)
                        
   


End Sub

Private Sub RecAbsZ()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        

'creates the dxf format
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 & vbCrLf
                    

                        
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        
                        X3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        X4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        
                     
                        
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                        Y3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos((YRotation) * 3.141592 / 180) - (Offset_Points_For_Origin_Z(CDbl(z2)) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5)
                        Y4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos((YRotation) * 3.141592 / 180) - (Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5)
                        

                        
                        
        
                    

End Sub

Private Sub RecRelNo()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        

                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 + z1 & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 + z1 & vbCrLf
                    

                   
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(CDbl(z1))) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        X2n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(CDbl(CDbl(z2)) + CDbl(CDbl(z1)))) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        
                        X3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(CDbl(z2)) + CDbl(CDbl(z1))) * Math.Sin((YRotation) * 3.141592 / 180), 5)
                        X4n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(CDbl(CDbl(z1)))) * Math.Sin((YRotation) * 3.141592 / 180), 5)
                   
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(CDbl(z1))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y((Range(y1).Value + Range(y2).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z((CDbl(CDbl(z2)) + CDbl(CDbl(z1)))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                        Y3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value + Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(CDbl(z2)) + CDbl(CDbl(z1))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((XRotation) * 3.141592 / 180)), 5)
                        Y4n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y((Range(y1).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z((CDbl(CDbl(z1)))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((XRotation) * 3.141592 / 180)), 5)
                        
                    
                    
                        'X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        'X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                       '
                       ' X3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                       ' X4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                       '
                    '
                    '
                    '    Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    '    Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    '
                    '    Y3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos((YRotation) * 3.141592 / 180) - (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5)
                    '    Y4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos((YRotation) * 3.141592 / 180) - (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5)
                    '



End Sub

Private Sub RecRelZ()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & Range(z1).Value & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        
                        

                 'creates the dxf format
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 + z1 & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 + z1 & vbCrLf
                        
                   
                   
                   
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        X2n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z((CDbl(z1) + CDbl(z2))) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        
                        X3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z1) + CDbl(z2)) * Math.Sin((YRotation) * 3.141592 / 180), 5)
                        X4n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z((CDbl(z1))) * Math.Sin((YRotation) * 3.141592 / 180), 5)
                   
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y((Range(y1).Value + Range(y2).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z((CDbl(z1) + CDbl(z2))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                        Y3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y((Range(y1).Value + Range(y2).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z((CDbl(z1) + CDbl(z2))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((XRotation) * 3.141592 / 180)), 5)
                        Y4n = Math.Round(Offset_Points_For_Origin_X((Range(x1).Value + Range(x2).Value)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y((Range(y1).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z((CDbl(z1))) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((XRotation) * 3.141592 / 180)), 5)
                        
                    
                    
                                            
                        'X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        'X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        
                        'X3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        'X4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180)), 5)
                        
                     
                        
                        'Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        'Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                       '
                       ' Y3n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos((YRotation) * 3.141592 / 180) - (Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5)
                       ' Y4n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos((YRotation) * 3.141592 / 180) - (Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5)
                        

                        
                       

End Sub


Private Sub RecEnd()

     rectangles = rectangles _
                        & "0" & vbCrLf _
                        & "SEQEND" & vbCrLf

End Sub

Public Sub Get_Highest_And_Lowest()


    
    

End Sub

Public Sub Set_Origin(X As Double, Y As Double, z As Double)

    C_Origins_X = 0
    C_Origins_Y = 0
    C_Origins_Z = 0
    
    On Error Resume Next
    
    C_Origins_X = X
    C_Origins_Y = Y
    C_Origins_Z = z
    
    On Error GoTo 0
    
    CustomOrigin = True
    
End Sub

Public Sub Auto_Origin()

    CustomOrigin = False
End Sub
Public Sub graphnr()
'
' graphnr Macro
'

'
   BobMarley
    
    DoEvents
    Application.ScreenUpdating = False
    
    
    
CreateDefaults
MAX_X = -10000000
MIN_X = 10000000
MAX_Y = -10000000
MIN_Y = 10000000
MAX_Z = -10000000
MIN_Z = 10000000

On Error Resume Next




lines = ""
rectangles = ""
circles = ""
points = ""
texts = ""

ElementNumber = 1
ChartName = tb1
Min = 100000000
Max = -100000000

   
    'CheckMovements
    
    'this checks to see if chart exist, if it does then it deletes it
    
    ActiveSheet.ChartObjects(ChartName).Activate
    ActiveSheet.ChartObjects(ChartName).ChartTitle.Delete
    
    cLEFT = ActiveSheet.ChartObjects(ChartName).Left
   cWIDTH = ActiveSheet.ChartObjects(ChartName).Width
   cTOP = ActiveSheet.ChartObjects(ChartName).Top
   cHEIGHT = ActiveSheet.ChartObjects(ChartName).Height
   
   
    
    Dim counter As Double
    counter = Names.Count
    
    'this is the min and max calculations
    
    Dim X1_v3 As Double
    Dim Y1_v3 As Double
    Dim Z1_v3 As Double
    Dim X2_v3 As Double
    Dim Y2_v3 As Double
    Dim Z2_v3 As Double
    

                    
                    
 For i = 1 To ActiveWorkbook.Names.Count
        Dim RNms_O As String
        RNms_O = ActiveWorkbook.Names(i).Name
        
        Dim Types_O As String
        Dim RELS_O As String
        Dim ZEN_O As String
        
        Dim UnlineDASHUnderlinePlacement_O As Integer
        UnlineDASHUnderlinePlacement_O = InStr(RNms_O, "__")
        
        Dim shnm_O As String
        shnm_O = Left(RNms_O, UnlineDASHUnderlinePlacement_O - 1)

        Dim UnlinePlacement_O As Integer
        UnlinePlacement_O = InStr(RNms_O, "_")
        Dim fullstr_ing_O As String
        fullstr_Oing_O = Mid(RNms_O, UnlineDASHUnderlinePlacement_O + 2, UnlinePlacement_O - 1)
        
        Types_O = Left(fullstr_Oing_O, 1)
        Dim second_O As String
        second_O = Left(fullstr_Oing_O, 2)
        
        RELS_O = Right(second_O, 1)
        
        Dim third_O As String
        third_O = Left(fullstr_Oing_O, 3)
        ZEN_O = Right(third_O, 1)
        
        Dim str_O As String
        str_O = Types_O
        
        
        Dim asnfn_O As String
        asnfn_O = ActiveSheet.Name
        
        
            
            asnfn_O = Replace(asnfn_O, "/", "")
            asnfn_O = Replace(asnfn_O, ":", "")
            asnfn_O = Replace(asnfn_O, "\", "")
            asnfn_O = Replace(asnfn_O, " ", "")
            asnfn_O = Replace(asnfn_O, ",", "")
            asnfn_O = Replace(asnfn_O, ";", "")
            asnfn_O = Replace(asnfn_O, ".", "")
            asnfn_O = Replace(asnfn_O, "-", "")
            asnfn_O = Replace(asnfn_O, "_", "")
            asnfn_O = Replace(asnfn_O, "(", "")
            asnfn_O = Replace(asnfn_O, ")", "")
            asnfn_O = Replace(asnfn_O, "=", "")
            asnfn_O = Replace(asnfn_O, " ", "")
            asnfn_O = Replace(asnfn_O, "*", "")
            asnfn_O = Replace(asnfn_O, "&", "")
            asnfn_O = Replace(asnfn_O, "^", "")
            asnfn_O = Replace(asnfn_O, "%", "")
            asnfn_O = Replace(asnfn_O, "$", "")
            asnfn_O = Replace(asnfn_O, "#", "")
            asnfn_O = Replace(asnfn_O, "@", "")
            asnfn_O = Replace(asnfn_O, "!", "")
            asnfn_O = Replace(asnfn_O, "~", "")
            asnfn_O = Replace(asnfn_O, "`", "")
            asnfn_O = Replace(asnfn_O, "?", "")
            asnfn_O = Replace(asnfn_O, ".", "")
            asnfn_O = Replace(asnfn_O, ",", "")
            asnfn_O = Replace(asnfn_O, "<", "")
            asnfn_O = Replace(asnfn_O, ">", "")
            asnfn_O = Replace(asnfn_O, "]", "")
            asnfn_O = Replace(asnfn_O, "[", "")
            asnfn_O = Replace(asnfn_O, "}", "")
            asnfn_O = Replace(asnfn_O, "{", "")
            asnfn_O = Replace(asnfn_O, "|", "")
            asnfn_O = Replace(asnfn_O, "+", "")
            
        
        
        If shnm_O = asnfn_O Then
        

            
            rs = Range(ActiveWorkbook.Names(i)).Rows.Count
            cls = Range(ActiveWorkbook.Names(i)).Columns.Count
            
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            Dim stvar_O As String
            
            If str_O = "R" Then
                stvar_O = cb3
                RecStar (ZEN_O)
            ElseIf str_O = "L" Then
                stvar_O = cb2
                LineStar (ZEN_O)
            ElseIf str_O = "p" Then
                stvar_O = cb1
                PointStar (ZEN_O)
            ElseIf str_O = "P" Then
                stvar_O = cb1
                PointStar (ZEN_O)
            ElseIf str_O = "C" Or str_O = "A" Then
                stvar_O = cb3
                LineStar (ZEN_O)
            ElseIf str_O = "T" Then
                stvar_O = cb3
                TextStar (ZEN_O)
            End If
            
            For R = 1 To rs
                For cl = 1 To Range(ActiveWorkbook.Names(i)).Columns.Count
                    r1 = Range(ActiveWorkbook.Names(i)).Rows(R).Row
                    If RELS_O = "A" Then
                        'If ZEN_O = "N" Then
                       '
                       '     x1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AA).Column).Address
                       '     y1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AB).Column).Address
                ''
                '            x2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ac).Column).Address
                '            y2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ad).Column).Address
                '
                '            z1 = "0.0"
                '            z2 = "0.0"
                '
                 '       Else
                    
                            x1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AA).Column).Address
                            y1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AB).Column).Address
                
                            x2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ad).Column).Address
                            y2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ae).Column).Address
                           
                            z1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ac).Column).Value
                            z2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(af).Column).Value
                                
                            If z1 = "" Then
                                z1 = "0.0"
                            End If
                            
                            If z2 = "" Then
                                z2 = "0.0"
                            End If
                            
                        'End If
                        
                        X1_v3 = Range(x1).Value
                        X2_v3 = Range(x2).Value
                        
                        Y1_v3 = Range(y1).Value
                        Y2_v3 = Range(y2).Value
                        
                        Z1_v3 = z1
                        Z2_v3 = z2
                        

                        
                        
                    Else
                    
                        'If ZEN_O = "N" Then
                        '
                        '    x1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AA).Column).Address
                         '   y1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AB).Column).Address
                        ''
                        '    x2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ac).Column).Address
                        '    y2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ad).Column).Address
                        '
                        '    z1 = "0.0"
                         '   z2 = "0.0"
                         ''
                        'Else
                                   
                            x1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AA).Column).Address
                            y1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AB).Column).Address
                        
                            x2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ad).Column).Address
                            y2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ae).Column).Address
                                   
                            z1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ac).Column).Value
                            z2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(af).Column).Value
                                        
                            If z1 = "" Then
                                z1 = "0.0"
                            End If
                                        
                            If z2 = "" Then
                                z2 = "0.0"
                            End If
                                        
                        'End If
                        
                        X1_v3 = Range(x1).Value
                        X2_v3 = Range(x2).Value + Range(x1).Value
                        
                        Y1_v3 = Range(y1).Value
                        Y2_v3 = Range(y2).Value + Range(y1).Value
                        
                        Z1_v3 = Range(z1).Value
                        Z2_v3 = z2 + z1
                        
                      
                    End If
                    

                            
                    
                    If X1_v3 >= MAX_X Then
                        MAX_X = X1_v3
                    End If
                                        
                    If X1_v3 <= MIN_X Then
                        MIN_X = X1_v3
                    End If
                                    
                    If Y1_v3 >= MAX_Y Then
                        MAX_Y = Y1_v3
                    End If
                                        
                    If Y1_v3 <= MIN_Y Then
                        MIN_Y = Y1_v3
                    End If
                        
                    If Z1_v3 >= MAX_Z Then
                        MAX_Z = Z1_v3
                    End If
                                        
                    If Z1_v3 <= MIN_Z Then
                        MIN_Z = Z1_v3
                    End If


                    If str_O = "C" Or str_O = "A" Or str_O = "T" Then
                    Else
                                        
                        If X2_v3 >= MAX_X Then
                            MAX_X = X2_v3
                        End If
                                            
                        If X2_v3 <= MIN_X Then
                            MIN_X = X2_v3
                        End If
                                        
                        If Y2_v3 >= MAX_Y Then
                            MAX_Y = Y2_v3
                        End If
                                            
                        If Y2_v3 <= MIN_Y Then
                            MIN_Y = Y2_v3
                        End If
                            
                        If Z2_v3 >= MAX_Z Then
                            MAX_Z = Z2_v3
                        End If
                                            
                        If Z2_v3 <= MIN_Z Then
                            MIN_Z = Z2_v3
                        End If
                    
                    End If

    
                Next
            Next
        End If
        
    Next
    
    'sets the default origins
    Dim maxoverdrive As Integer
    maxoverdrive = 25
    
    Dim Xc As Double
    Dim Yc As Double
    Dim Zc As Double
    
    Xc = Math.Abs(MAX_X - MIN_X)
    Yc = Math.Abs(MAX_Y - MIN_Y)
    Zc = Math.Abs(MAX_Z - MIN_Z)
    
    If Xc > Yc And Xc > Zc Then
        maxoverdrive = Xc
    ElseIf Yc > Zc Then
        maxoverdrive = Yc
    Else
        maxoverdrive = Zc
    End If
    
    If maxoverdrive = 0 Then maxoverdrive = 25
    
    UserForm5.ScrollBar3.Max = maxoverdrive * 400
    
        If maxoverdrive >= 1000 And maxoverdrive < 2000 Then
            UserForm5.ScrollBar3.Max = maxoverdrive * (ZoomMag_Var / 7.5)
        ElseIf maxoverdrive >= 2000 And maxoverdrive < 3000 Then
            UserForm5.ScrollBar3.Max = maxoverdrive * (ZoomMag_Var / 5)
        ElseIf maxoverdrive >= 3000 Then
            UserForm5.ScrollBar3.Max = maxoverdrive * (ZoomMag_Var / 2.5)
        Else
            UserForm5.ScrollBar3.Max = maxoverdrive * (ZoomMag_Var / 10.5)
        End If
    
    
    
    UserForm5.ScrollBar4.Max = maxoverdrive * 5
    UserForm5.ScrollBar4.Min = maxoverdrive * -5
    UserForm5.ScrollBar5.Max = UserForm5.ScrollBar4.Max
    UserForm5.ScrollBar5.Min = maxoverdrive * -5
    If CustomOrigin = True Then
        GetOrigin_Default C_Origins_X - 1, C_Origins_X + 1, C_Origins_Y - 1, C_Origins_Y + 1, C_Origins_Z - 1, C_Origins_Z + 1
    Else
        GetOrigin_Default MIN_X, MAX_X, MIN_Y, MAX_Y, MIN_Z, MAX_Z
    End If
    
    CheckMovements
    
    For i = 0 To UserForms.Count
        If UserForms(i).Name = "UserForm5" Then
            Dim s As String
            s = "Origins"
            If CustomOrigin = True Then
                s = s & " (custom): "
            Else
                s = s & ": "
            End If
            
            s = s & "X: " & Origin_X & _
                " Y: " & Origin_Y & _
                " Z: " & Origin_Z
                
            UserForm5.Label13.Caption = s
            'UserForm5.Repaint
            
            
        End If
    Next
    
    
    
    For i = 1 To ActiveChart.SeriesCollection.Count

    On Error Resume Next
   ActiveChart.SeriesCollection(i).Delete

    
    Next
    
    
    ActiveChart.Parent.Delete
    ActiveSheet.Shapes.Delete (ChartName)
    ActiveSheet.Shapes.AddChart2(240, xlXYScatterLines).Select
    ActiveChart.Parent.Name = ChartName
     
    If ActiveSheet.Shapes(ChartName).Visible = False Then
    
    ActiveSheet.Shapes.AddChart.Select
    ActiveChart.ChartType = xlXYScatterLines
    
    End If
    
    ActiveChart.Parent.Name = ChartName
    ActiveChart.Name = tb1
    Application.CommandBars("Format Object").Visible = False
    ActiveChart.ChartTitle.text = "" '<-- this is the charttitle chart title
    
    
    
    'this starts the graphing
    Dim lmt As Integer
    lmt = Names.Count + 1
    Dim elcnt As Integer
    
    If IsBobMarley = True Then
        If lmt >= 5 Then lmt = 5
    End If
    
    
    
    For i = 1 To Names.Count
        

        
        Dim RNms As String
        RNms = Names(i).Name
        
        Dim Types As String
        Dim RELS As String
        Dim ZEN As String
        
        Dim UnlineDASHUnderlinePlacement As Integer
        UnlineDASHUnderlinePlacement = InStr(RNms, "__")
        
        Dim shnm As String
        shnm = Left(RNms, UnlineDASHUnderlinePlacement - 1)

        Dim UnlinePlacement As Integer
        UnlinePlacement = InStr(RNms, "_")
        Dim fullstring As String
        fullstring = Mid(RNms, UnlineDASHUnderlinePlacement + 2, UnlinePlacement - 1)
        
        Types = Left(fullstring, 1)
        Dim second As String
        second = Left(fullstring, 2)
        
        RELS = Right(second, 1)
        
        Dim third As String
        third = Left(fullstring, 3)
        ZEN = Right(third, 1)
        
        Dim str As String
        str = Types
        
        
        Dim asnfn As String
        asnfn = ActiveSheet.Name
        

asnfn = Replace(asnfn, "/", "")
asnfn = Replace(asnfn, ":", "")
asnfn = Replace(asnfn, "\", "")
asnfn = Replace(asnfn, " ", "")
asnfn = Replace(asnfn, ",", "")
asnfn = Replace(asnfn, ";", "")
asnfn = Replace(asnfn, ".", "")
asnfn = Replace(asnfn, "-", "")
asnfn = Replace(asnfn, "_", "")
asnfn = Replace(asnfn, "(", "")
asnfn = Replace(asnfn, ")", "")
asnfn = Replace(asnfn, "=", "")
asnfn = Replace(asnfn, " ", "")
asnfn = Replace(asnfn, "*", "")
asnfn = Replace(asnfn, "&", "")
asnfn = Replace(asnfn, "^", "")
asnfn = Replace(asnfn, "%", "")
asnfn = Replace(asnfn, "$", "")
asnfn = Replace(asnfn, "#", "")
asnfn = Replace(asnfn, "@", "")
asnfn = Replace(asnfn, "!", "")
asnfn = Replace(asnfn, "~", "")
asnfn = Replace(asnfn, "`", "")
asnfn = Replace(asnfn, "?", "")
asnfn = Replace(asnfn, ".", "")
asnfn = Replace(asnfn, ",", "")
asnfn = Replace(asnfn, "<", "")
asnfn = Replace(asnfn, ">", "")
asnfn = Replace(asnfn, "]", "")
asnfn = Replace(asnfn, "[", "")
asnfn = Replace(asnfn, "}", "")
asnfn = Replace(asnfn, "{", "")
asnfn = Replace(asnfn, "|", "")
asnfn = Replace(asnfn, "+", "")

        ObjectTypeName = str
        
If shnm = asnfn Then

    'If IsBobMarley = True Then
        elcnt = elcnt + 1
        If elcnt >= lmt Then Exit For
    'End If
'---------------------------------------------------
'---------------------------------------------------
'||             graphing rectangle                ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        'this is for rectangle
        If str = "R" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            Dim stvar As String
            stvar = cb3
            RecStar (ZEN)
            
            rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
            
                                'creates the dxf format
                   
            For R = 1 To rs
                    
                    str2 = RNms
                    
                'this is if it is NOT relivnet data
                If RELS = "A" Then
                    
                    
                    sh = ActiveSheet.Name
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                    z1 = ""
                    z2 = ""
                    
                    
                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                   End If
                   
                    
                  
                    str2 = RNms
                    
                    'draws a box with rotation

                    'If ZEN = "N" Then
                   '
                   '     RecAbsNo
                   '     RecEnd
                   '
                    'Else
                   '
                   '
                        RecAbsZ
                        RecEnd
                        
                    
                   ' End If
                    
                    
                ColorShapeModifier str
                CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    

                     
                ElementNumber = ElementNumber + 1

                    
                    
                    
                Else
                'if it IS relivent
                
                 sh = ActiveSheet.Name
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   

                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                   End If

                  
                  
                  
                    str2 = RNms
                    
                    

                 
                    'draws a box with rotation
                    'If ZEN = "N" Then
                   '
                   '     RecRelNo
                   '     RecEnd
                   ' Else
                   '
                        RecRelZ
                        RecEnd
                    
                   ' End If
                    
                    
                ColorShapeModifier str
                CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    

                     
                ElementNumber = ElementNumber + 1

                    
                    
                
                
                End If
                  
                 
                       
            Next
            
    
    

    
    
    
    
    
    
'---------------------------------------------------
'---------------------------------------------------
'||             graphing lines                    ||
'---------------------------------------------------
'---------------------------------------------------
    
    
    
    
    
    'line with 4 columns
        ElseIf str = "L" Or str = "D" Then
        
            Dim DX As Double
            Dim DY As Double
            Dim DZ As Double
            Dim DD As Double
            
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            
            
            
            
            stvar = cb2
            
            LineStar (ZEN)
            
          
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                  
                For R = 1 To rs
                  str2 = RNms
                'this is if it is NOT relivnet data
                If RELS = "A" Then
                
                
                    sh = ActiveSheet.Name
                    
                    
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                   
                   
                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                   End If
                   
                   

                  
                    str2 = RNms
                    
                    
                    'gets dxf format for line


                    'If (z1 = "0.0") Or (z2 = "0.0") Then
                    If str = "L" Then
                    
                        lines = lines & _
                            "  0" & vbCrLf _
                            & "LINE" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf _
                            & " 11" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 21" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 31" & vbCrLf _
                            & z2 & vbCrLf
                    End If
                    
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
                        DX = Range(x1).Value - Range(x2).Value
                        DY = Range(y1).Value - Range(y2).Value
                        DZ = z1 - z2
 '                   Else
 '
 '                       lines = lines & _
 '                           "  0" & vbCrLf _
 '                           & "LINE" & vbCrLf _
 '                           & "  8" & vbCrLf _
 '                           & "0" & vbCrLf _
 '                           & " 10" & vbCrLf _
 '                           & Range(x1).Value & vbCrLf _
 '                           & " 20" & vbCrLf _
 '                           & Range(y1).Value & vbCrLf _
 '                           & " 30" & vbCrLf _
 '                           & Range(z1).Value & vbCrLf _
  '                          & " 11" & vbCrLf _
  '                          & Range(x2).Value & vbCrLf _
  ''                          & " 21" & vbCrLf _
  '                          & y2 & vbCrLf _
  '                          & " 31" & vbCrLf _
  '                          & z2 & vbCrLf
  '
  '                      X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(z1) * Math.Sin((XRotation) * 3.141592 / 180), 5)
   ''                     X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(z2) * Math.Sin((XRotation) * 3.141592 / 180), 5)
   '                     Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(z1) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
   '                     Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(z2) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
   '
   '
   '                     DX = Range(x1).Value - Range(x2).Value
   '                     DY = Range(y1).Value - Range(y2).Value
   '                     DZ = Range(z1).Value - Range(z2).Value
    '
    '                End If
    '
                    
                    ColorShapeModifier str
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    
                    'this sets the colors of the lines
                    With Selection.FORMAT.Line
                        If preview = True Then
                        If Names(i).Name = UserForm2.ListBox1.text Then
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        .FillColor.ObjectThemeColor = msoThemeColorAccent6
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        Else
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .FillColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        End If
                       End If
                    End With
                    
                    'this sets the colors of the fill

                     
                    ElementNumber = ElementNumber + 1
                    
                    
             
             
             Else
             'this is if it is relitive
             
             
                             
                    sh = ActiveSheet.Name
                    
                    
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                   
                   
                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                   End If
                   
                   

                  
                    str2 = RNms
                    
                    
                    

                   ' If (z1 = "0.0") Or (z2 = "0.0") Then
                    If str = "L" Then
                        lines = lines _
                            & "  0" & vbCrLf _
                            & "LINE" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf _
                            & " 11" & vbCrLf _
                            & Range(x2).Value + Range(x1).Value & vbCrLf _
                            & " 21" & vbCrLf _
                            & Range(y2).Value + Range(y1).Value & vbCrLf _
                            & " 31" & vbCrLf _
                            & z2 + z1 & vbCrLf
                    
                    End If
                    
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        X2n = Math.Round((Offset_Points_For_Origin_X(Range(x2).Value) + Offset_Points_For_Origin_X(Range(x1).Value)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round((Offset_Points_For_Origin_X(Range(x2).Value) + Offset_Points_For_Origin_X(Range(x1).Value)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Offset_Points_For_Origin_Y(Range(y2).Value) + Offset_Points_For_Origin_Y(Range(y1).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
                        DX = Range(x1).Value - (Range(x1).Value + Range(x2).Value)
                        DY = Range(y1).Value - (Range(y2).Value + Range(y1).Value)
                        DZ = (z1) - (z2 + z1)
                    
                 '   Else
                 '
                 '       'creates the dxf format
                  '      lines = lines _
                  '          & "  0" & vbCrLf _
                  ''          & "LINE" & vbCrLf _
                  '          & "  8" & vbCrLf _
                  '          & "0" & vbCrLf _
                  '          & " 10" & vbCrLf _
                   '         & Range(x1).Value & vbCrLf _
                   ''         & " 20" & vbCrLf _
                   '         & Range(y1).Value & vbCrLf _
                   '         & " 30" & vbCrLf _
                   '         & Range(z1).Value & vbCrLf _
                   '         & " 11" & vbCrLf _
                   '         & Range(x2).Value + Range(x1).Value & vbCrLf _
                   '         & " 21" & vbCrLf _
                   '         & Range(y2).Value + Range(y1).Value & vbCrLf _
                   '         & " 31" & vbCrLf _
                   '         & Range(z2).Value + Range(z1).Value & vbCrLf
                   '
                   '     X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                   '     X2n = Math.Round((Offset_Points_For_Origin_X(Range(x2).Value) + Offset_Points_For_Origin_X(Range(x1).Value)) * Math.Cos((XRotation) * 3.141592 / 180) + (Offset_Points_For_Origin_Z(Range(z1).Value) + Offset_Points_For_Origin_Z(Range(z2).Value)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                   '     Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Range(z1).Value * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                   '     Y2n = Math.Round((Offset_Points_For_Origin_X(Range(x2).Value) + Offset_Points_For_Origin_X(Range(x1).Value)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Offset_Points_For_Origin_Y(Range(y2).Value) + Offset_Points_For_Origin_Y(Range(y1).Value)) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Offset_Points_For_Origin_Z(Range(z1).Value) + Offset_Points_For_Origin_Z(Range(z2).Value)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                  '
                  '
                  '      DX = Range(x1).Value - (Range(x1).Value + Range(x2).Value)
                  '      DY = Range(y1).Value - (Range(y2).Value + Range(y1).Value)
                  '      DZ = Range(z1).Value - (Range(z2).Value + Range(z1).Value)
                   
                  '  End If
                  ''
                    ColorShapeModifier str
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    
                    
                 
                    
                    'this sets the colors of the lines
                    With Selection.FORMAT.Line
                        If preview = True Then
                        If Names(i).Name = UserForm2.ListBox1.text Then
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        .FillColor.ObjectThemeColor = msoThemeColorAccent6
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        Else
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .FillColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        End If
                       End If
                    End With
                    
                     
                    ElementNumber = ElementNumber + 1
             
             
             End If
             
             
             
             
             
             
                If str = "D" Then
                        DD = Math.Sqr((DX ^ 2) + (DY ^ 2) + (DZ ^ 2))
                    
                        ActiveChart.SeriesCollection(ElementNumber - 1).points(1).ApplyDataLabels
                        ActiveChart.SeriesCollection(ElementNumber - 1).points(1).DataLabel.Select
                        ActiveChart.SeriesCollection(ElementNumber - 1).points(1).DataLabel.text = _
                        "DX: " & DX & " | " & _
                        "DY: " & DY & " | " & _
                        "DZ: " & DZ & " | " & _
                        "Direct: " & DD
                        
    
                        ActiveChart.SeriesCollection(ElementNumber - 1).DataLabels(1).Font.Color = RGB(R_Leg, G_Leg, B_Leg)
                        ActiveChart.SeriesCollection(ElementNumber - 1).DataLabels(1).Font.Size = 8
                        
                        'ActiveChart.SeriesCollection(ElementNumber - 1).points(1).DataLabel.Height = (cHEIGHT / 2)
                        ActiveChart.SeriesCollection(ElementNumber - 1).points(1).DataLabel.Width = (cWIDTH / 1.5)
                        
                    If (R_CHART + G_CHART + B_CHART < 350) And (G_CHART < 200) Then
                        R_Leg = 200
                        G_Leg = 200
                        B_Leg = 200
                    Else
                        R_Leg = 95
                        G_Leg = 95
                        B_Leg = 95
                    End If
                       
                    End If
             
             
                 
                       
            Next
        

        
        
        
        
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing points 2                   ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
        
        
        'point with two columns
        
        ElseIf str = "p" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""

    
            stvar = cb1
            
            PointStar (ZEN)
         
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    str2 = RNms
                    
                    
     

                
                    sh = ActiveSheet.Name
                    
                    
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   

                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
 
                   
                   If ZEN = "N" Then
                   
                    z1 = "0.0"
                    
                   Else
                    
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    
                   End If
                   

                  
                    str2 = RNms
                    

                    
                    If z1 = "0.0" Then
                    
                        'adds to the dxf format
                        points = points _
                            & "  0" & vbCrLf _
                            & "POINT" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                    
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                    Else
                    
                        'adds to the dxf format
                        points = points _
                            & "  0" & vbCrLf _
                            & "POINT" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z1).Value & vbCrLf

                        
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
                    End If
                    
                    'draws a point
                    ColorShapeModifier str
                    CreateLine X1n, Y1n, X1n, Y1n, Color_R, Color_G, Color_B, Wgt_O
                    
                    'ActiveChart.SeriesCollection.NewSeries
                    'ActiveChart.SeriesCollection(ElementNumber).Name = str2
                    'ActiveChart.SeriesCollection(ElementNumber).XValues = "={" & X1n & "}"
                    'ActiveChart.SeriesCollection(ElementNumber).Values = "={" & Y1n & "}"
                    'ActiveChart.SeriesCollection(ElementNumber).ForeColor.ObjectThemeColor = msoThemeColorAccent6
                    'ActiveChart.SeriesCollection(ElementNumber).Select
                    
                    
                    'this sets the colors of the lines
                    With Selection.FORMAT.Line
                    If preview = True Then
                        If Names(i).Name = UserForm2.ListBox1.text Then
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        .FillColor.ObjectThemeColor = msoThemeColorAccent6
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        Else
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .FillColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        End If
                    End If
                    End With
                    
                    'this sets the colors of the fill
                    
                    ElementNumber = ElementNumber + 1
                    
                 
                       
            Next
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing points 4                   ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
        'point with 4 columns
         ElseIf str = "P" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            

    
            stvar = cb1
            
            PointStar (ZEN)
            
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    str2 = RNms
                    


                    sh = ActiveSheet.Name
                    
                    r1 = Range(Names(i)).Rows(R).Row
                    
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
                    
                    
                        If ZEN = "N" Then
                        'if no z
                    
                   
                        x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                        y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                        z1 = "0.0"
                        z2 = "0.0"


                        Else
                        'if there is a z enabled
                    
                        x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                        y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                        z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                        z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Address
                    
                    
                        End If
                    

                    
                    
                    
                    Dim allsame As Boolean
                    allsame = False
                    
                    If ZEN = "N" Then
                        If (Range(x1).Value = Range(x2).Value) And (Range(y1).Value = Range(y2).Value) Then
                            allsame = True
                        End If
                        
                    Else
                        If (Range(x1).Value = Range(x2).Value) And (Range(y1).Value = Range(y2).Value) And (Range(z1).Value = Range(z2).Value) Then
                            allsame = True
                        End If

                    End If
                    
                    
                    If (z1 = "0.0") Or (z2 = "0.0") Then
                    
                        'line formats go here for line/rec/ect
                    
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                        
                    Else
                    
                        'line formats go here for line/rec/ect
                        
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        X2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(Range(z1).Value) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        Y2n = Math.Round(Offset_Points_For_Origin_X(Range(x2).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y2).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(Range(z2).Value) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        
                        z1 = Range(z1).Value
                        z2 = Range(z2).Value
                        
                    End If
                    
                    
                    
                    If allsame = True Then
                    
                        points = points _
                        & "  0" & vbCrLf _
                        & "POINT" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 10" & vbCrLf _
                        & Range(x1).Value & vbCrLf _
                        & " 20" & vbCrLf _
                        & Range(y1).Value & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf
                    
                        
                        'draws one point
                        ActiveChart.SeriesCollection.NewSeries
                        ActiveChart.SeriesCollection(ElementNumber).Name = str2
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = "={" & X1n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).Values = "={" & Y1n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        ActiveChart.SeriesCollection(ElementNumber).Select
                    
                    Else
                    
                        points = points _
                        & "  0" & vbCrLf _
                        & "POINT" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 10" & vbCrLf _
                        & Range(x1).Value & vbCrLf _
                        & " 20" & vbCrLf _
                        & Range(y1).Value & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf
                        
                        points = points _
                        & "  0" & vbCrLf _
                        & "POINT" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 10" & vbCrLf _
                        & Range(x2).Value & vbCrLf _
                        & " 20" & vbCrLf _
                        & Range(y2).Value & vbCrLf _
                        & " 30" & vbCrLf _
                        & z2 & vbCrLf
                    
                        'draws two points
                        ActiveChart.SeriesCollection.NewSeries
                        ActiveChart.SeriesCollection(ElementNumber).Name = str2
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = "={" & X1n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).Values = "={" & Y1n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        ActiveChart.SeriesCollection(ElementNumber).Select
                        
                    
                    
                    'this sets the colors of the lines
                    With Selection.FORMAT.Line
                    If preview = False Then
                    
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent2
                        .FillColor.ObjectThemeColor = msoThemeColorAccent2
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        
                    Else
                        If Names(i).Name = UserForm2.ListBox1.text Then
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        .FillColor.ObjectThemeColor = msoThemeColorAccent6
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        Else
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .FillColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        End If
                       End If
                    End With
                    
                    

                     
                    'this sets the colors of the fill
                    
                    
                    With Selection.FORMAT.Fill
                    If preview = False Then
                    
                    
                    
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent2
                        .ForeColor.TintAndShade = 0

                    
                     
                    Else
                    
                        If Names(i).Name = UserForm2.ListBox1.text Then
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                            .ForeColor.TintAndShade = 0
                        Else
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                            .ForeColor.TintAndShade = 0
                        End If
                    
                    End If
                     End With
                     
                     
                     
                     
                    ElementNumber = ElementNumber + 1
                    
                    
                        ActiveChart.SeriesCollection.NewSeries
                        ActiveChart.SeriesCollection(ElementNumber).Name = str2
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = "={" & X2n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).Values = "={" & Y2n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        ActiveChart.SeriesCollection(ElementNumber).Select
                    
                    End If
                    
                  
                    str2 = RNms
                    
                    
                    
                    'this sets the colors of the lines
                    With Selection.FORMAT.Line
                    
                    If preview = False Then
                    
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent2
                        .FillColor.ObjectThemeColor = msoThemeColorAccent2
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        
                        
                        
                    Else
                        If Names(i).Name = UserForm2.ListBox1.text Then
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        .FillColor.ObjectThemeColor = msoThemeColorAccent6
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        Else
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .FillColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        End If
                      End If
                    End With
                    
                    
                    'this sets the colors of the fill
                    
                    
                    With Selection.FORMAT.Fill
                    If preview = False Then
                    
                    
                    
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent2
                        .ForeColor.TintAndShade = 0

                    
                     
                    Else
                    
                        If Names(i).Name = UserForm2.ListBox1.text Then
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                            .ForeColor.TintAndShade = 0
                        Else
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                            .ForeColor.TintAndShade = 0
                        End If
                    
                    End If
                    End With
                     
                     
                    ElementNumber = ElementNumber + 1
                    
                    
                       
            Next
        
        
        
        
        
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing circles                    ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
         'cricle with r
        ElseIf str = "C" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""

            
            stvar = cb3
            
            LineStar (ZEN)
            
           
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    
                    sh = ActiveSheet.Name
                    
                    
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   


                If ZEN = "N" Then
                
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    z1 = "0.0"
                    
                Else
                    
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    
                End If
                
                
                    circlestringx = "=" & "{" '& Math.Round(Range(X1).Value * Math.Cos((XRotation) * 3.141592 / 180) + Z1 * Math.Sin((XRotation) * 3.141592 / 180), 5)
                    circlestringy = "=" & "{" '& Math.Round(Range(X1).Value * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Range(Y1).Value * Math.Cos(((YRotation) * 3.141592 / 180)) - Z1 * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    

                    '-------
                    
                    
                Dim amtofloop As Integer
                amtofloop = 20
                Dim finalLOOP As Boolean
                finalLOOP = False
                
                'check min and max here
                'CheckHighestLowest Range(X1).Value, Range(X2).Value, Range(Y1).Value, Range(Y1).Value, CDbl(Z1), CDbl(Z1)
                
                
                For ii = 0 To amtofloop
                        

                    rd = ""
                        
                    rd = Range(x2).Value
                    Dim ang As Integer
                    ang = Math.Round((360 / amtofloop) * ii)
                    
                    X1V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + (Range(x1).Value), 5)
                    Y1V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - ((Range(y1).Value) * -1), 5)
                    
                    ii = ii + 1
                    If ii >= amtofloop Then
                        ii = 0
                        finalLOOP = True
                        
                    End If
                    
                    ang = Math.Round((360 / amtofloop) * ii)
                    
                    X2V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + (Range(x1).Value), 5)
                    Y2V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - ((Range(y1).Value) * -1), 5)
 
                    Z1V = CDbl(z1)
                    Z2V = CDbl(z1)
                        
                    X1n = Math.Round(Offset_Points_For_Origin_X(CDbl(X1V)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(Z1V)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                    X2n = Math.Round(Offset_Points_For_Origin_X(CDbl(X2V)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(Z2V)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                    
                    Y1n = Math.Round(Offset_Points_For_Origin_X(CDbl(X1V)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(CDbl(Y1V)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(Z1V)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    Y2n = Math.Round(Offset_Points_For_Origin_X(CDbl(X2V)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(CDbl(Y2V)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(Z2V)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
                    Dim x1w As Double
                    Dim y1w As Double
                    Dim x2w As Double
                    Dim y2w As Double
                    

                    x1w = Math.Round((X1n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y1n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y1w = Math.Round((Y1n * Math.Cos(ZRotation * (3.141592 / 180))) + (X1n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    x2w = Math.Round((X2n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y2n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y2w = Math.Round((Y2n * Math.Cos(ZRotation * (3.141592 / 180))) + (X2n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    
                    
                    
                    ColorShapeModifier (str)
                    
                    circlestringx = circlestringx & x1w & "," & x2w & ","
                    
                    circlestringy = circlestringy & y1w & "," & y2w & ","
                    
                    
                    If finalLOOP = True Then
                        finalLOOP = False
                        circlestringx = Left(circlestringx, Len(circlestringx) - 1)
                        circlestringy = Left(circlestringy, Len(circlestringy) - 1)
                        Exit For
                    End If
                     ii = ii - 1
                Next
                
                
                '---
                
                    
                   
                
                
                    circlestringx = circlestringx & "}"
                    circlestringy = circlestringy & "}"
                    
                    str2 = RNms
                    
                    'draws a box
                    ColorShapeModifier str
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    
                    
                    
                        circles = circles _
                        & "  0" & vbCrLf _
                        & "CIRCLE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 10" & vbCrLf _
                        & Range(x1).Value & vbCrLf _
                        & " 20" & vbCrLf _
                        & Range(y1).Value & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 40" & vbCrLf _
                        & Range(x2).Value & vbCrLf
                    
                    
                    
                    
                
                    'this sets the colors of the fill
                    
                    With Selection.FORMAT.Fill
                    If preview = True Then
                    
                        If Names(i).Name = UserForm2.ListBox1.text Then
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                            .ForeColor.TintAndShade = 0
                        Else
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                            .ForeColor.TintAndShade = 0
                        End If
                    
                    End If
                   End With
                     
                    ElementNumber = ElementNumber + 1
                    
                    
            Next
        
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing Arcs                   ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
         'cricle with r
        ElseIf str = "A" Then
        
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""

            
            stvar = cb3
            
            ArcStar (ZEN)
            
           
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    
                    sh = ActiveSheet.Name
                    
                    
                  
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                    
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address

                    
                    x1 = ""
                    y1 = ""
                    z1 = ""
                    x2 = ""
                    y2 = ""
                    z2 = ""
                    
                    
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address  'x
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address  'y
                    Dim tst As String
                    tst = ""
                    tst = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                    If ZEN = "N" Then
                        'this means they are not using the z values
                        'x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address    'radius
                        'y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address  'start
                        'z2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address  'end
                        z1 = "0.0" 'end
                    Else
                        'this means they are using a z values
                        z1 = CDbl(Cells(r1, Range(Names(i)).Columns(ac).Column).Value)    'z
                    End If
                    
                        x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address  'Radius
                        y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address  'Start
                        z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Address  'end
                    
                    

                    
                    circlestringx = "=" & "{" '& Math.Round(Range(X1).Value * Math.Cos((XRotation) * 3.141592 / 180) + Z1 * Math.Sin((XRotation) * 3.141592 / 180), 5)
                    circlestringy = "=" & "{" '& Math.Round(Range(X1).Value * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Range(Y1).Value * Math.Cos(((YRotation) * 3.141592 / 180)) - Z1 * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    

                    '-------
                    
                    
                Dim amtofloop2 As Integer
                amtofloop2 = 20
                Dim finalLOOP2 As Boolean
                finalLOOP2 = False
                
                'check min and max here
                'CheckHighestLowest Range(X1).Value, Range(X2).Value, Range(Y1).Value, Range(Y1).Value, CDbl(Z1), CDbl(Z1)
                
                Dim stp As Integer
                If Math.Abs((CDbl(Range(z2).Value)) - CDbl(Range(y2).Value)) < 20 Then
                    stp = 1
                Else
                    stp = (Math.Round((Math.Abs(CDbl(Range(z2).Value) - CDbl(Range(y2).Value)) / amtofloop2), 0))
                End If
                
                
                Dim srt As Integer
                srt = CInt(Range(y2).Value)
                Dim edp As Integer
                edp = CInt(Range(z2).Value)
                
                'If edp <= str Then edp = edp + 360
                

                
                For ii = srt To edp Step stp
                        

                    rd = ""
                        
                    rd = CInt(Range(x2).Value)
                    Dim ang2 As Integer
                    ang2 = ii
                    
                    If ang2 > 360 Then ang2 = ang2 - 360

    
                    X1V = Math.Round((Math.Cos(ang2 * (3.141592 / 180)) * rd) + (CDbl(Range(x1).Value)), 5)
                    Y1V = Math.Round((Math.Sin(ang2 * (3.141592 / 180)) * rd) - ((CDbl(Range(y1).Value)) * -1), 5)
                        
                    
                    ii = ii + stp
                    If ii >= edp Then
                        ii = edp
                        finalLOOP2 = True
                    End If
                    
                    ang2 = ii
                    
                    If ang2 >= 360 Then ang2 = ang2 - 360

                    X2V = Math.Round((Math.Cos(ang2 * (3.141592 / 180)) * rd) + CDbl(Range(x1).Value), 5)
                    Y2V = Math.Round((Math.Sin(ang2 * (3.141592 / 180)) * rd) - (CDbl(Range(y1).Value) * -1), 5)
 
                    Z1V = CDbl(z1)
                    Z2V = CDbl(z1)
                        
                    X1n = Math.Round(Offset_Points_For_Origin_X(CDbl(X1V)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(Z1V)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                    X2n = Math.Round(Offset_Points_For_Origin_X(CDbl(X2V)) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(Z2V)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                    
                    Y1n = Math.Round(Offset_Points_For_Origin_X(CDbl(X1V)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(CDbl(Y1V)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(Z1V)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    Y2n = Math.Round(Offset_Points_For_Origin_X(CDbl(X2V)) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(CDbl(Y2V)) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(Z2V)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
                    

                    
                    Dim x1wA As Double
                    Dim y1wA As Double
                    Dim x2wA As Double
                    Dim y2wA As Double
                    

                    x1wA = Math.Round((X1n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y1n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y1wA = Math.Round((Y1n * Math.Cos(ZRotation * (3.141592 / 180))) + (X1n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    x2wA = Math.Round((X2n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y2n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y2wA = Math.Round((Y2n * Math.Cos(ZRotation * (3.141592 / 180))) + (X2n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    
                    

                    
                    'ColorShapeModifier (str)
                    
                    circlestringx = circlestringx & x1wA & "," & x2wA & ","
                    
                    circlestringy = circlestringy & y1wA & "," & y2wA & ","
                    
                    
                    If finalLOOP2 = True Then
                        finalLOOP2 = False
                        circlestringx = Left(circlestringx, Len(circlestringx) - 1)
                        circlestringy = Left(circlestringy, Len(circlestringy) - 1)
                        Exit For
                    End If
                     ii = ii - stp
                Next
                
                
                '---
                
                    
                   
                
                
                    circlestringx = circlestringx & "}"
                    circlestringy = circlestringy & "}"
                    
                    str2 = RNms
                    
                    'draws a box
                    ColorShapeModifier str
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    
                    
                    
                        circles = circles _
                        & "  0" & vbCrLf _
                        & "ARC" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 10" & vbCrLf _
                        & Range(x1).Value & vbCrLf _
                        & " 20" & vbCrLf _
                        & Range(y1).Value & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 40" & vbCrLf _
                        & Range(x2).Value & vbCrLf _
                        & " 50" & vbCrLf _
                        & Range(y2).Value & vbCrLf _
                        & " 51" & vbCrLf _
                        & Range(z2).Value & vbCrLf
                    
                    
                    
                    
                
                    'this sets the colors of the fill
                    
                    With Selection.FORMAT.Fill
                    If preview = True Then
                    
                        If Names(i).Name = UserForm2.ListBox1.text Then
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                            .ForeColor.TintAndShade = 0
                        Else
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                            .ForeColor.TintAndShade = 0
                        End If
                    
                    End If
                   End With
                     
                    ElementNumber = ElementNumber + 1

        Next

                    
        
             
        
        





'---------------------------------------------------
'---------------------------------------------------
'||           graphing TEXT                       ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
         'cricle with r
        ElseIf str = "T" Then
        
            
        

        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            
            stvar = cb3
            
            TextStar (ZEN)
            
            
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    str2 = RNms
                    
                    sh = ActiveSheet.Name
                    
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   


                If ZEN = "N" Then
                
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                     z1 = "0.0"
                    
                Else
                    
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    
                End If
                
                

                    
                    
                    'this is where we add in for the excel graphing
                    '--------------------------------------------------------------------------------------
                    
                        'Dim txtstr As String
                        txtstr = ""
                        txtstr = Range(x2).Value
                        Dim txt As String
                        txt = ""
                        
                        Dim underscoreplace As String
                        Dim usp As Integer
                        
                        usp = InStr(RNms, "___")
                        If usp = 0 Then
                            underscoreplace = "4.0"
                        Else
                        
                            underscoreplace = Mid(RNms, usp + 3, Len(RNms))
                            underscoreplace = underscoreplace / 4
                        End If
                        

                    
                                        
                    If z1 = "0.0" Then
                    
                        'adds to the dxf format
                        texts = texts _
                            & "  0" & vbCrLf _
                            & "TEXT" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf & _
                            " 40" & vbCrLf & _
                            underscoreplace & vbCrLf & _
                            "  1" & vbCrLf & _
                            txtstr & vbCrLf
                    
                    
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(0) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(0) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        

  
                    Else
                    
                        'adds to the dxf format
                        texts = texts _
                            & "  0" & vbCrLf _
                            & "TEXT" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf & _
                            " 40" & vbCrLf & _
                            underscoreplace & vbCrLf & _
                            "  1" & vbCrLf & _
                            txtstr & vbCrLf
                        
                        X1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Cos((XRotation) * 3.141592 / 180) + Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        Y1n = Math.Round(Offset_Points_For_Origin_X(Range(x1).Value) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + Offset_Points_For_Origin_Y(Range(y1).Value) * Math.Cos(((YRotation) * 3.141592 / 180)) - Offset_Points_For_Origin_Z(CDbl(z1)) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
                    End If
                    
                    If (R_CHART + G_CHART + B_CHART < 350) And (G_CHART < 200) Then
                        R_Leg = 200
                        G_Leg = 200
                        B_Leg = 200
                    Else
                        R_Leg = 95
                        G_Leg = 95
                        B_Leg = 95
                    End If
                    
                    'draws a point
                    'ActiveChart.SeriesCollection.NewSeries
                    'ActiveChart.SeriesCollection(ElementNumber).Name = str2
                    'ActiveChart.SeriesCollection(ElementNumber).XValues = "={" & X1n & "}"
                    'ActiveChart.SeriesCollection(ElementNumber).Values = "={" & Y1n & "}"
                    
                    ColorShapeModifier str
                    CreateLine X1n, Y1n, X1n, Y1n, Color_R, Color_G, Color_B, Wgt_O
                    
                    ActiveChart.SeriesCollection(ElementNumber).points(1).ApplyDataLabels
                    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Select
                    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.text = _
                    txtstr

                    ActiveChart.SeriesCollection(ElementNumber).DataLabels(1).Font.Color = RGB(R_Leg, G_Leg, B_Leg)
                    ActiveChart.SeriesCollection(ElementNumber).DataLabels(1).Font.Size = ((cb6 * 12) / (ZoomMag / ZoomMag_Var)) 'cb6 * 6
                    ActiveChart.SeriesCollection(ElementNumber).DataLabels(1).HorizontalAlignment = xlLeft
                    ActiveChart.SeriesCollection(ElementNumber).DataLabels(1).VerticalAlignment = xlLeft
                    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Height = ActiveChart.SeriesCollection(ElementNumber).DataLabels(1).Font.Size
                    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Width = Len(txtstr) * (ActiveChart.SeriesCollection(ElementNumber).DataLabels(1).Font.Size / 2)
                    'ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Left = ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Left - (ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Width / 2)
        
        
    If ImiTXT = True Then
    
        Dim fontsize As Double
        fontsize = cb6 * 6
        Dim fontheight As Double
        fontheight = fontsize / 2
        Dim fontwidth As Double
        fontwidth = ((Len(txtstr) + 1) ^ 2) * fontsize

    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Font.Size = fontsize
    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Width = fontwidth
    ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.Height = fontheight

   ActiveChart.SeriesCollection(ElementNumber).points(1).DataLabel.bottom = ActiveChart.SeriesCollection(ElementNumber).points(1).bottom

End If

    Selection.FORMAT.TextFrame2.TextRange.Characters.text = txtstr

                    
                    
                      ActiveChart.SeriesCollection(ElementNumber).Select
                    
                   
                    For cl = 1 To Range(Names(i)).Columns.Count
                        If Cells(r1, Range(Names(i)).Columns(cl).Column).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Cells(r1, Range(Names(i)).Columns(cl).Column).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                    Next
                    
                    
                    
                    'this whole section from here down needs to be an option so people can
                    'change the colors if needed, or omitted if they want to go with the
                    'default colors
                    
                    
                    'this sets the colors of the lines
                    With Selection.FORMAT.Line
                    If preview = False Then
                    
                        .Visible = msoTrue
                        .ForeColor.RGB = RGB(R_Leg, G_Leg, B_Leg)
                        .FillColor.RGB = RGB(R_Leg, G_Leg, B_Leg)
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        
                    Else
                        If Names(i).Name = UserForm2.ListBox1.text Then
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                        .FillColor.ObjectThemeColor = msoThemeColorAccent6
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        Else
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .FillColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0
                        .ForeColor.Brightness = 0
                        .Transparency = 0
                        End If
                    End If
                    End With
                    
                    
                     
                    'this sets the colors of the fill
                    
                    
                    With Selection.FORMAT.Fill
                    If preview = False Then
                    
                    
                    
                        .Visible = msoTrue
                        .ForeColor.RGB = RGB(0, 0, 0)
                        .ForeColor.TintAndShade = 0

                    
                     
                    Else
                    
                        If Names(i).Name = UserForm2.ListBox1.text Then
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                            .ForeColor.TintAndShade = 0
                        Else
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                            .ForeColor.TintAndShade = 0
                        End If
                    
                    End If
                    End With
                     
                '--------------------------------------------------------------------------------------------------------------------

                    
                     
                    ElementNumber = ElementNumber + 1
                    
            Next
        
        
        End If
      
    End If
    
    Next
    
    'On Error GoTo 0
    
    chartscalezoom

    
    ActiveSheet.ChartObjects(ChartName).Left = cLEFT
    ActiveSheet.ChartObjects(ChartName).Top = cTOP

    
   
    ActiveChart.Legend.Delete
    ActiveChart.Parent.Name = ChartName
    ActiveChart.Name = ChartName
        
    exportingChartImage
    
    If UserForm2.Visible = True Then
        UserForm2.imageupdatingforuserform2
    End If
    
    'MsgBox ("Min = " & MIN & vbNewLine & "Max = " & MAX)
    
    Application.ScreenUpdating = True
    
     
End Sub

Public Sub ChartSquare()

    If cWIDTH - 30 > cHEIGHT Then
        cHEIGHT = cWIDTH - 30
    Else
        cWIDTH = cHEIGHT + 30
    End If
    
   
    If cWIDTH <= 0 Then
   
        Dim wth As Integer
        Dim hght As Integer
        
        ActiveSheet.Shapes(tb1).Width = 280
        ActiveSheet.Shapes(tb1).Height = 250
        
        
    Else
    
        ActiveSheet.Shapes(tb1).Height = cHEIGHT
        ActiveSheet.Shapes(tb1).Width = cWIDTH
    End If
    
    
    
End Sub

Private Sub chartscalezoom()
    
    'ActiveChart.ChartObjects(tb1).Fill.ForeColor.RGB = RGB(R_CHART, G_CHART, B_CHART)
    Application.CommandBars("Format Object").Visible = False
    ActiveSheet.Shapes(tb1).Fill.ForeColor.RGB = RGB(R_CHART, G_CHART, B_CHART)
 
    
    'need to have an option for auto scaling or relational
    Max = 5 * 2.5
    
    ActiveChart.Axes(xlValue).MaximumScale = (Max * (ZoomMag / ZoomMag_Var)) - (Max * ((YMovement) / ZoomMag_Var)) + YMovement
    ActiveChart.Axes(xlCategory).MaximumScale = (Max * (ZoomMag / ZoomMag_Var)) + (Max * ((XMovement) / ZoomMag_Var)) + XMovement
    ActiveChart.Axes(xlCategory).MinimumScale = -(Max * (ZoomMag / ZoomMag_Var)) + (Max * ((XMovement) / ZoomMag_Var)) + XMovement
    ActiveChart.Axes(xlValue).MinimumScale = -(Max * (ZoomMag / ZoomMag_Var)) - (Max * ((YMovement) / ZoomMag_Var)) + YMovement
    
   'this sets the width and height to be the same
   
   

   
   
    If cWIDTH <= 0 Then
   
        Dim wth As Integer
        Dim hght As Integer
        
        ActiveSheet.Shapes(tb1).Width = 280
        ActiveSheet.Shapes(tb1).Height = 250
        
        'wth = ActiveSheet.Shapes(tb1).Width
        'hght = ActiveSheet.Shapes(tb1).Height
        
        'If wth >= hght Then
        '    ActiveSheet.Shapes(tb1).Height = wth - 30
        'Else
        '    ActiveSheet.Shapes(tb1).Width = hght + 30
        'End If
        
    Else
    
        ActiveSheet.Shapes(tb1).Height = cHEIGHT
        ActiveSheet.Shapes(tb1).Width = cWIDTH
    End If
    
    
    
    If showaxis = True Then
        ActiveSheet.ChartObjects(tb1).Activate
        ActiveChart.Axes(xlValue).Delete
        'Selection.Delete
        ActiveChart.Axes(xlCategory).Delete
        '.Selection.Delete
        ActiveChart.Axes(xlValue).MajorGridlines.Delete
        ActiveChart.Axes(xlValue).MinorGridlines.Delete
        ActiveChart.Axes(xlPrimary).MajorGridlines.Delete
        ActiveChart.Axes(xlPrimary).MinorGridlines.Delete
        'Selection.Delete
        
        
    End If
    
    If ShowArms = True Then
        ShowXYZArms (tb1)
    End If
    
    

    
End Sub

Public Sub exportfile()

Dim er As String
er = ""
Dim pth As String
pth = ""

On Error GoTo error


Dim FilNam As String
FilNam = UserForm1.TextBox1.text & "\" & UserForm1.TextBox2.text & UserForm1.ComboBox1.text 'creates file name
    

If (UserForm1.ComboBox1.text = ".dxf") Or (UserForm1.ComboBox1.text = ".txt") Then


        WriteHeader
        WriteFooter
        
        graphnr
        
        Dim strprint As String
        strprint = header & lines & rectangles & points & circles & texts & footer
        'MsgBox strprint
        Dim FreFil As Integer
        FreFil = FreeFile
        Open FilNam For Output As #FreFil
        Print #FreFil, strprint
        Close #FreFil
        
        
        
        
        'this will start creating the txt document
        'Dim fso As Object
        'Set fso = CreateObject("Scripting.filesystemobject")
        
        'Dim fileout As Object
        
        'Set fileout = fso.createtextfile(FilNam, True, True)
        'fileout.write strprint
        'fileout.Close

    
    
ElseIf (UserForm1.ComboBox1.text = ".jpg") Or (UserForm1.ComboBox1.text = ".png") Then
    
    ActiveChart.Export FilNam
    
    
ElseIf UserForm1.ComboBox1.text = ".pdf" Then
    
   ActiveSheet.Range("A1").Select
   
    
    ActiveSheet.ExportAsFixedFormat _
    Type:=xlTypePDF, _
    Filename:=FilNam, _
    Quality:=xlQualityStandard, _
    IncludeDocProperties:=True, _
    IgnorePrintAreas:=False, _
    OpenAfterPublish:=False
    
 
        
        
ElseIf UserForm1.ComboBox1.text = ".html" Then


   ' activeworkbook.SaveAs(filename, fileformat, password, writepassword, readonly recomended, createbackup, accessmode, conflict resolution, astomru?, text something, text visual layou, local)
 
 
 sh = ActiveWorkbook.ActiveSheet.Name
    
    
    ScreenUpdating = False
    
    pth = UserForm1.TextBox1.text
        ChDir (pth)
    Sheets(sh).Select
    Sheets(sh).Copy
 
 
    ActiveWorkbook.SaveAs Filename:=FilNam, _
        FileFormat:=xlHtml, ReadOnlyRecommended:=False, CreateBackup:=True
        
     ActiveWindow.Close (True)

    ScreenUpdating = True
           
        
ElseIf UserForm1.ComboBox1.text = ".csv" Then
    

    
    
    
    sh = ActiveWorkbook.ActiveSheet.Name
    
    
    ScreenUpdating = False
    
    pth = UserForm1.TextBox1.text
        ChDir (pth)
    Sheets(sh).Select
    Sheets(sh).Copy
    

    ActiveWorkbook.SaveAs Filename:=FilNam, _
        FileFormat:=xlCSV, CreateBackup:=False
    
    ActiveWorkbook.save
    
    ActiveWindow.Close (True)
    

    ScreenUpdating = True
    
ElseIf UserForm1.ComboBox1.text = ".xls" Then
    
   
   
    sh = ActiveWorkbook.ActiveSheet.Name
    
    
    ScreenUpdating = False
    
    pth = UserForm1.TextBox1.text
        ChDir (pth)
    Sheets(sh).Select
    Sheets(sh).Copy
    ActiveWorkbook.SaveAs Filename:=FilNam, _
        FileFormat:=xlExcel8, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWindow.Close (True)
    

    ScreenUpdating = True
    
Else
MsgBox ("Error: File type not recognized.")
Exit Sub


End If

If er = "" Then

Dim Msg As String
Dim Ans As Integer
Dim FName As String
Msg = "Your file has been exported to """ & FilNam & """" & vbCrLf & "Would you like to open the exported document?"
Ans = MsgBox(Msg, vbYesNo)
If Ans = vbYes Then
  Call Shell("explorer.exe " & FilNam)
  
End If


'MsgBox ("Your file has been exported to """ & FilNam & """")
Else

MsgBox ("There was an error exporting your document. Please insure that the data you would like to export is being displayed and try again." & vbCrLf & vbCrLf & "If you are exporting an image please insure that the image is displayed and selected before exporting.")
End If




Exit Sub

error:

er = "ERROR"

Resume Next


End Sub


    



Private Sub WriteHeader()

header = ""
    header = "  0" & vbCrLf _
        & "SECTION" & vbCrLf _
        & "  2" & vbCrLf _
        & "HEADER" & vbCrLf _
        & "  9" & vbCrLf _
        & "$PDMODE" & vbCrLf _
        & " 70" & vbCrLf _
        & "32" & vbCrLf _
        & "  9" & vbCrLf _
        & "$PDSIZE" & vbCrLf _
        & " 40" & vbCrLf _
        & "2.0" & vbCrLf _
        & "  0" & vbCrLf _
        & "ENDSEC" & vbCrLf _
        & "  0" & vbCrLf _
        & "SECTION" & vbCrLf _
        & "  2" & vbCrLf _
        & "ENTITIES" & vbCrLf
    



End Sub

Public Sub UpdateRotationsY()
'On Error Resume Next

YRotation = UserForm5.ScrollBar2.Value


If UserForm5.CheckBox1.Value = True Then
    CheckUpdatedCell
End If

End Sub
Public Sub UpdateRotationsX()
'On Error Resume Next


XRotation = UserForm5.ScrollBar1.Value


If UserForm5.CheckBox1.Value = True Then
    CheckUpdatedCell
End If

End Sub

Public Sub UpdateRotationsYM()
'On Error Resume Next

YMovement = UserForm5.ScrollBar5.Value


If UserForm5.CheckBox1.Value = True Then
    CheckUpdatedCell
End If

End Sub
Public Sub UpdateRotationsXM()
'On Error Resume Next


    XMovement = UserForm5.ScrollBar4.Value


    If UserForm5.CheckBox1.Value = True Then
        CheckUpdatedCell
    End If

End Sub

Public Sub UpdateRotationsZoom()

    ZoomMag = UserForm5.ScrollBar3.Value
    
    If UserForm5.CheckBox1.Value = True Then
        CheckUpdatedCell
    End If


End Sub

Public Sub UpdateRotationsZ()
'On Error Resume Next

    ZRotation = UserForm5.ScrollBar6.Value
    
    If UserForm5.CheckBox1.Value = True Then
        CheckUpdatedCell
    End If

End Sub
Private Sub WriteFooter()

footer = ""
    footer = "  0" & vbCrLf _
        & "ENDSEC" & vbCrLf _
        & "  0" & vbCrLf _
        & "EOF"


End Sub





Sub changingtext(XS As Double, YS As Double, sts As String)



End Sub













'--------------------------------------
'form 2 subs'--------------------------------------



Public Sub CreateLine(XS As Double, YS As Double, XE As Double, YE As Double, RGB_R As Integer, RGB_G As Integer, RGB_B As Integer, Wgt As Integer)

                    On Error Resume Next
                    
                    Dim x1w As Double
                    Dim y1w As Double
                    Dim x2w As Double
                    Dim y2w As Double
                    

                    x1w = Math.Round((XS * Math.Cos(ZRotation * (3.141592 / 180))) - (YS * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y1w = Math.Round((YS * Math.Cos(ZRotation * (3.141592 / 180))) + (XS * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    x2w = Math.Round((XE * Math.Cos(ZRotation * (3.141592 / 180))) - (YE * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y2w = Math.Round((YE * Math.Cos(ZRotation * (3.141592 / 180))) + (XE * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    
                    'X1V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + (Range(x1).Value), 5)
                    'Y1V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - ((Range(y1).Value) * -1), 5)
                    

                    XS = x1w
                    YS = y1w
                    XE = x2w
                    YE = y2w
                    
                    Dim x1q As Double
                    Dim y1q As Double
                    Dim x2q As Double
                    Dim y2q As Double
                    
                    Dim x3q As Double
                    Dim y3q As Double
                    Dim x4q As Double
                    Dim y4q As Double
                    
                   
                    x1q = Math.Round((X1n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y1n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y1q = Math.Round((Y1n * Math.Cos(ZRotation * (3.141592 / 180))) + (X1n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    x2q = Math.Round((X2n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y2n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y2q = Math.Round((Y2n * Math.Cos(ZRotation * (3.141592 / 180))) + (X2n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                   
                    x3q = Math.Round((X3n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y3n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y3q = Math.Round((Y3n * Math.Cos(ZRotation * (3.141592 / 180))) + (X3n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    x4q = Math.Round((X4n * Math.Cos(ZRotation * (3.141592 / 180))) - (Y4n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                    y4q = Math.Round((Y4n * Math.Cos(ZRotation * (3.141592 / 180))) + (X4n * Math.Sin(ZRotation * (3.141592 / 180))), 10)
                   
 
                    ActiveChart.SeriesCollection.NewSeries
                    ActiveChart.SeriesCollection(ElementNumber).Name = str2
                    
                    If ObjectTypeName = "R" Then
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = "={" & X1n & "," & x3q & "," & X2n & "," & x4q & "," & X1n & "}"
                        ActiveChart.SeriesCollection(ElementNumber).Values = "={" & Y1n & "," & y3q & "," & Y2n & "," & y4q & "," & Y1n & "}"
                    
                    ElseIf ObjectTypeName = "C" Or ObjectTypeName = "A" Then
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = circlestringx
                        ActiveChart.SeriesCollection(ElementNumber).Values = circlestringy
                        
                    ElseIf ObjectTypeName = "P" Or ObjectTypeName = "p" Then
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = "={" & XS & "}"
                        ActiveChart.SeriesCollection(ElementNumber).Values = "={" & YS & "}"
                    Else
                    
                        ActiveChart.SeriesCollection(ElementNumber).Xvalues = "={" & XS & "," & XE & "}"
                        ActiveChart.SeriesCollection(ElementNumber).Values = "={" & YS & "," & YE & "}"
                    End If
                    

                    'ActiveChart.SeriesCollection(ElementNumber).Line.Weight = Wgt_O
                    ActiveChart.SeriesCollection(ElementNumber).Line.Visible = msoFalse
                    ActiveChart.SeriesCollection(ElementNumber).Line.Visible = msoTrue
                    'ActiveChart.SeriesCollection(ElementNumber).Line.Weight = Wgt_O
                    
                    ActiveChart.FullSeriesCollection(ElementNumber).FORMAT.Line.Weight = Wgt_O
                  
                    ActiveChart.SeriesCollection(ElementNumber).Line.ForeColor.RGB = RGB(RGB_R, RGB_G, RGB_B)
                    ActiveChart.SeriesCollection(ElementNumber).Border.Color = RGB(RGB_R, RGB_G, RGB_B)
                    ActiveChart.SeriesCollection(ElementNumber).MarkerStyle = xlMarkerStyleNone
                    ActiveChart.SeriesCollection(ElementNumber).Select
                    On Error GoTo 0
                    
                    
                    
                    
                    
                    If ObjectTypeName = "P" Or ObjectTypeName = "p" Or onjecttypename = "D" Or ObjectTypeName = "T" Then
                        ActiveChart.SeriesCollection(ElementNumber).MarkerStyle = xlMarkerStylCircle
                        ActiveChart.SeriesCollection(ElementNumber).MarkerSize = Wgt_O + 0.5
                        ActiveChart.SeriesCollection(ElementNumber).MarkerBackgroundColor = RGB(RGB_R, RGB_G, RGB_B)
                        ActiveChart.SeriesCollection(ElementNumber).MarkerForegroundColor = RGB(RGB_R, RGB_G, RGB_B)
                        'ActiveChart.SeriesCollection(ElementNumber).MarkerColor = RGB(RGB_R, RGB_G, RGB_B)
                    End If
                    
                    
                    

                    
            
                    
                    'this sets the colors of the lines
                    
                    If preview = True Then
                        With Selection.FORMAT.Line
                            If Names(i).Name = UserForm2.ListBox1.text Then
                                .Visible = msoTrue
                                .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                                .FillColor.ObjectThemeColor = msoThemeColorAccent6
                                .ForeColor.TintAndShade = 0
                                .ForeColor.Brightness = 0
                                .Transparency = 0
                            Else
                                .Visible = msoTrue
                                .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                                .FillColor.ObjectThemeColor = msoThemeColorAccent1
                                .ForeColor.TintAndShade = 0
                                .ForeColor.Brightness = 0
                                .Transparency = 0
                            End If
                        End With
                    End If
                        
                   
                    
                    Exit Sub
                    
                    
                    'this sets the colors of the fill
                    
                     With Selection.FORMAT.Fill
                    If preview = False Then
                    
                    
                   
                        .Visible = msoTrue
                        .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                        .ForeColor.TintAndShade = 0

                   
                     
                    Else
                    
                        If Names(i).Name = UserForm2.ListBox1.text Then
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent6
                            .ForeColor.TintAndShade = 0
                        Else
                            .Visible = msoTrue
                            .ForeColor.ObjectThemeColor = msoThemeColorAccent1
                            .ForeColor.TintAndShade = 0
                        End If
                    
                    End If
                End With
                     
                    
                    
                        
    
End Sub

Sub ThreeDCalculations(TypeOfObject As String, X1n As Double, Y1n As Double, z1 As Double, X2n As Double, Y2n As Double, z2 As Double)

    If TypeOfObject = "Line" Then
    ElseIf TypeOfObject = "Polyline" Then
    ElseIf TypeOfObject = "Rectangle" Then
    End If
    
    CreateLine X1n, Y1n, X2n, Y2n
    
End Sub


Private Sub ColorShapeModifier(TP As String)


    If TP = "R" Then
        Color_R = R_R
        Color_G = G_R
        Color_B = B_R
    ElseIf TP = "L" Then
        Color_R = R_L
        Color_G = G_L
        Color_B = B_L
    ElseIf TP = "C" Then
        Color_R = R_C
        Color_G = G_C
        Color_B = B_C
    ElseIf TP = "p" Or TP = "P" Then
        Color_R = R_P
        Color_G = G_P
        Color_B = B_P
    ElseIf TP = "A" Then
        Color_R = R_A
        Color_G = G_A
        Color_B = B_A
    ElseIf TP = "D" Then
        Color_R = R_D
        Color_G = G_D
        Color_B = B_D
    End If
    
End Sub

Sub ShowXYZArms(ChartName As String)

    Dim spx As Double
    Dim epx As Double
    
    Dim spy As Double
    Dim epy As Double
    
    Dim spz As Double
    Dim epz As Double
    
    Dim d As Double
    Dim lx As Double
    Dim ly As Double
    Dim lz As Double
    
    Dim R_Leg As Integer
    Dim G_Leg As Integer
    Dim B_Leg As Integer
    
    If (R_CHART + G_CHART + B_CHART < 350) And (G_CHART < 200) Then
        R_Leg = 200
        G_Leg = 200
        B_Leg = 200
    Else
        R_Leg = 95
        G_Leg = 95
        B_Leg = 95
    End If
    
    Dim test As Double
    
    'ElementNumber = ElementNumber + 1
    
    test = ActiveChart.Axes(xlValue).MaximumScale
    
    d = ActiveChart.Axes(xlValue).MaximumScale - ActiveChart.Axes(xlValue).MinimumScale
    spx = ActiveChart.Axes(xlValue).MinimumScale + (d * (1 / 4.5))
    lx = d * (1 / 4.5)
    d = ActiveChart.Axes(xlCategory).MaximumScale - ActiveChart.Axes(xlCategory).MinimumScale
    spy = ActiveChart.Axes(xlCategory).MinimumScale + (d * (1 / 4.5))
    ly = d * (1 / 4.5)
    lz = (lx + ly) / 2
     
    epx = spx + lx
    epy = spy + ly
    epz = spz + lz
    
    'X axes needs to be red
    
    X1n = Math.Round(spx * Math.Cos((XRotation) * 3.141592 / 180) + spz * Math.Sin((XRotation) * 3.141592 / 180), 5)
    Y1n = Math.Round(spx * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + spy * Math.Cos(((YRotation) * 3.141592 / 180)) - spz * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
    X2n = Math.Round(epx * Math.Cos((XRotation) * 3.141592 / 180) + spz * Math.Sin((XRotation) * 3.141592 / 180), 5)
    Y2n = Math.Round(epx * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + spy * Math.Cos(((YRotation) * 3.141592 / 180)) - spz * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                  

    str2 = "EDArmsX"
    ObjectTypeName = "ArmsX"
    CreateLine X1n, Y1n, X2n, Y2n, R_Leg, G_Leg, B_Leg, 2
    'ActiveChart.FullSeriesCollection(ElementNumber).points(2).Select
    ActiveChart.FullSeriesCollection(ElementNumber).points(2).ApplyDataLabels
    ActiveChart.SeriesCollection(ElementNumber).DataLabels(2).FORMAT.TextFrame2.TextRange. _
        Characters.text = "+X"
    ActiveChart.SeriesCollection(ElementNumber).DataLabels(2).Font.Color = RGB(R_Leg, G_Leg, B_Leg)
        
    ElementNumber = ElementNumber + 1
    
               
    
    'Y ases is yellow
    
    X1n = Math.Round(spx * Math.Cos((XRotation) * 3.141592 / 180) + spz * Math.Sin((XRotation) * 3.141592 / 180), 5)
    Y1n = Math.Round(spx * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + spy * Math.Cos(((YRotation) * 3.141592 / 180)) - spz * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
    X2n = Math.Round(spx * Math.Cos((XRotation) * 3.141592 / 180) + spz * Math.Sin((XRotation) * 3.141592 / 180), 5)
    Y2n = Math.Round(spx * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + epy * Math.Cos(((YRotation) * 3.141592 / 180)) - spz * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                   
    str2 = "EDArmsY"
    ObjectTypeName = "ArmsY"
    CreateLine X1n, Y1n, X2n, Y2n, R_Leg, G_Leg, B_Leg, 2
    
    ActiveChart.FullSeriesCollection(ElementNumber).points(2).ApplyDataLabels
    ActiveChart.SeriesCollection(ElementNumber).DataLabels(2).FORMAT.TextFrame2.TextRange. _
        Characters.text = "+Y"
    ActiveChart.SeriesCollection(ElementNumber).DataLabels(2).Font.Color = RGB(R_Leg, G_Leg, B_Leg)
        
    ElementNumber = ElementNumber + 1
    
    'Z axes is green
    
    X1n = Math.Round(spx * Math.Cos((XRotation) * 3.141592 / 180) + spz * Math.Sin((XRotation) * 3.141592 / 180), 5)
    Y1n = Math.Round(spx * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + spy * Math.Cos(((YRotation) * 3.141592 / 180)) - spz * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                    
    X2n = Math.Round(spx * Math.Cos((XRotation) * 3.141592 / 180) + epz * Math.Sin((XRotation) * 3.141592 / 180), 5)
    Y2n = Math.Round(spx * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + spy * Math.Cos(((YRotation) * 3.141592 / 180)) - epz * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                   
    str2 = "EDArmsZ"
    ObjectTypeName = "ArmsZ"
    CreateLine X1n, Y1n, X2n, Y2n, R_Leg, G_Leg, B_Leg, 2
    
    ActiveChart.FullSeriesCollection(ElementNumber).points(2).ApplyDataLabels
    ActiveChart.SeriesCollection(ElementNumber).DataLabels(2).FORMAT.TextFrame2.TextRange. _
        Characters.text = "+Z"
    ActiveChart.SeriesCollection(ElementNumber).DataLabels(2).Font.Color = RGB(R_Leg, G_Leg, B_Leg)
        
    ElementNumber = ElementNumber + 1
    
End Sub

Public Sub CheckArms()
    If UserForm5.CheckBox3.Value = True Then
        ShowArms = True
    Else
        ShowArms = False
    End If
    graphnr
End Sub


    
Attribute VB_Name = "Module2"
'----------------------
'
' this form contains the
' following code for
' Excel Draw functions:
'
'   * Origin
'
'
'
'----------------------

Public Origin_X As Double
Public Origin_Y As Double
Public Origin_Z As Double

Public Origin_X_offset As Double
Public Origin_Y_offset As Double
Public Origin_Z_offset As Double




Public Sub GetOrigin_Default(StartX As Double, EndX As Double, StartY As Double, EndY As Double, StartZ As Double, EndZ As Double)
    
    Origin_X = ((EndX - StartX) / 2) + StartX
    Origin_Y = ((EndY - StartY) / 2) + StartY
    Origin_Z = ((EndZ - StartZ) / 2) + StartZ

    
End Sub

Public Sub SetOrigin_GT(X As Double, Y As Double, z As Double)
    
    Origin_X = X
    Origin_Y = Y
    Origin_Z = z
    
End Sub

Public Function Offset_Points_For_Origin_X(X As Double) As Double
    
    Offset_Points_For_Origin_X = X - Origin_X
    
End Function

Public Function Offset_Points_For_Origin_Y(Y As Double) As Double
    
    Offset_Points_For_Origin_Y = Y - Origin_Y
    
End Function

Public Function Offset_Points_For_Origin_Z(z As Double) As Double
    
    Offset_Points_For_Origin_Z = z - Origin_Z
    
End Function
Attribute VB_Name = "Module3"
Option Explicit

Public LicNums As Collection

Public Sub CheckLiceNumb()
    CreateLiceGens
    Dim i As Integer
    Dim al As String
    Dim isNOTfound As Boolean
    isNOTfound = False
    For i = 1 To LicNums.Count
        al = LicNums(i)
        If ActLice = al Then isNOTfound = False
    Next
      IsBobMarley = isNOTfound
    'If IsBobMarley = True Then IfTrial
    
End Sub

Private Sub LiceN1()
    With LicNums
        .Add ("EXUT8M4ZX4")
        .Add ("EXFP6X3JF2")
        .Add ("EX2N36A4PX")
        .Add ("EXXXZEJNJR")
        .Add ("EXR3672JTN")
        .Add ("EXC23F24C9")
        .Add ("EXZ8PP8EM7")
        .Add ("EXJ6MZFZ73")
        .Add ("EXE4J8EJFP")
        .Add ("EX2AFHN42K")
        .Add ("EXM8CRXN97")
        .Add ("EXEEH7AFT9")
        .Add ("EX9KEF9RAY")
        .Add ("EXXJAPJCMT")
        .Add ("EXHF88RY6P")
        .Add ("EX3N6HPHFA")
        .Add ("EXNM3RY3Z7")
        .Add ("EXJJZ27M9U")
        .Add ("EX6RX8E7TP")
        .Add ("EXRPTHCH4M")
        .Add ("EXAMPRM4M8")
        .Add ("EXYUM2UNY6")
        .Add ("EXTTJ9T8HR")
        .Add ("EXEPFJ2TRM")
        .Add ("EXZYCT9CAJ")
        .Add ("EXU6JKRYUE")
        .Add ("EXP3FUPJ6A")
        .Add ("EXA9C4Z4NY")
        .Add ("EXY89C7NZT")
        .Add ("EXH67M68HP")
        .Add ("EX4C4UCTTA")
        .Add ("EXZA34M4A8")
        .Add ("EXKHZCUPMU")
        .Add ("EX7FXMT96P")
        .Add ("EXRETX3UFM")
        .Add ("EXMKP69E28")
        .Add ("EX8JMNHZ96")
        .Add ("EXUHJYFJUR")
        .Add ("EXEN77PX4N")
        .Add ("EX2M4FYFNJ")
        .Add ("EXXK2PX2Y6")
        .Add ("EXHRYY6KH3")
        .Add ("EX4PU7C6RN")
        .Add ("EXNNRFKP3K")
        .Add ("EXR3XYR8TE")
        .Add ("EXC2T7ZT39")
        .Add ("EXYYPP8CM6")
        .Add ("EXJ6MZ7ZYT")
        .Add ("EX64J7EJFN")
        .Add ("EX22FFN4RA")
        .Add ("EXM8CPXN97")
        .Add ("EX779ZUZK4")
        .Add ("EXT4783J4P")
        .Add ("EXEA4HA6EK")
        .Add ("EX992R9PY8")
        .Add ("EXU7Y2H984")
        .Add ("EXFEU9PUR2")
        .Add ("EX3ARTZ63M")
        .Add ("EXY9N3YPAH")
        .Add ("EXJHK96AX6")
        .Add ("EX4EHJEX62")
        .Add ("EXPCETCFPY")
        .Add ("EXAKA3K2ZJ")
        .Add ("EXFTHK4KTN")
        .Add ("EX3ZEUA64A")
        .Add ("EXMYA49RM7")
        .Add ("EX8U8CHAY4")
        .Add ("EX436MRXFP")
        .Add ("EXP236ZFRM")
        .Add ("EX9Y2EY298")
        .Add ("EXX6MM7AK4")
        .Add ("EXH4JXEX42")
        .Add ("EXC2H6CHEM")
        .Add ("EXZ8EEK3ZJ")
        .Add ("EXJ7ANUM86")
        .Add ("EX648Y37H2")
        .Add ("EX2A672H3N")
        .Add ("EXM93F83CJ")
        .Add ("EX87ZZHNXF")
        .Add ("EXTEX8F873")
        .Add ("EXECTHNTPY")
        .Add ("EX99PPYC2K")
        .Add ("EX3PU7C6RN")
        .Add ("EXNMRFAF2J")
        .Add ("EX9KNPJ2K7")
        .Add ("EXXTKZRKX3")
        .Add ("EXPPH8R7EN")
        .Add ("EXANEHZRPK")
        .Add ("EXYXAP7A8F")
        .Add ("EXJT88FMJ4")
        .Add ("EXER6HE7TZ")
        .Add ("EXZZ3RMRCK")
        .Add ("EXKXZ2UAMH")
        .Add ("EX7UX9UY7C")
        .Add ("EXT3TJ3HF2")
        .Add ("EXNZPT9T2X")
        .Add ("EX87M3JC9H")
        .Add ("EXU6JAHYUE")
        .Add ("EXF3FJPH49")
        .Add ("EXKJM37CY7")
        .Add ("EX7HJKFY83")
        .Add ("EXREFUEHRP")
        .Add ("EXCM44MT3K")
        .Add ("EXZK2CXCKH")
        .Add ("EXUHYMUYX4")
        .Add ("EXEPUX3JEZ")
        .Add ("EX2NR694PM")
        .Add ("EXMKNEJNZH")
        .Add ("EXHTKNHZJ4")
        .Add ("EX4RHYPJT2")
        .Add ("EXNNEFZ4CX")
        .Add ("EX9XCNYPMJ")
        .Add ("EXXT9Y697E")
        .Add ("EXRR77CUF2")
        .Add ("EXAZ4FME2Y")
        .Add ("EXYX2PKPAT")
        .Add ("EX8JMNH2J6")
        .Add ("EXURJYRKU2")
        .Add ("EXPPF7P6CN")
        .Add ("EXAMCFYPNJ")
        .Add ("EXXU9P797F")
        .Add ("EXHT78EKH3")
        .Add ("EXCP4HC6RY")
        .Add ("EXZY2RKRAK")
        .Add ("EXJXYZUAMF")
        .Add ("EX6TU8TX6C")
        .Add ("EXR2RH2FFZ")
        .Add ("EXMZNR9RZU")
        .Add ("EX86K2HA9H")
        .Add ("EXT4H9FYTC")
        .Add ("EXE2EJNH49")
        .Add ("EXJHM37AX6")
        .Add ("EX6FJKEX73")
        .Add ("EXREFUCFPN")
        .Add ("EXAK44MR2J")
        .Add ("EXYJ2AUCKF")
        .Add ("EXTHYKTYU3")
        .Add ("EXENUU2HEZ")
        .Add ("EXZMR493NK")
        .Add ("EXKJNCHMZF")
        .Add ("EXFRKMFYH4")
        .Add ("EX3PHXPJTZ")
        .Add ("EXNMEEY4AX")
        .Add ("EX8UANXNMH")
        .Add ("EXUT8Y486C")
        .Add ("EXYYCCJ2M7")
        .Add ("EXH69MTK74")
        .Add ("EX437XRXHZ")
        .Add ("EXP246ZF2M")
        .Add ("EXA82E82AH")
        .Add ("EX76YN7MU6")
        .Add ("EXR4UYE762")
        .Add ("EXCAR7MRNX")
        .Add ("EXZ8NPX3ZJ")
        .Add ("EXU7KYUM8E")
        .Add ("EXEEH737T3")
        .Add ("EX2AEFAT3Y")
        .Add ("EXM9AP9CMT")
        .Add ("EXHRH8R76P")
        .Add ("EXCNEHZHPK")
        .Add ("EXYXAR8328")
        .Add ("EXJU827MJ4")
        .Add ("EX6R69E8U2")
        .Add ("EX2Z3JNTCM")
        .Add ("EXMYZ3XCNH")
        .Add ("EX7UX9UY76")
        .Add ("EXT3JJ38H2")
        .Add ("EXE2FTAT2Y")
        .Add ("EX9YC39EAJ")
        .Add ("EXX69AHZUE")
        .Add ("EXN9ETYRC8")
        .Add ("EX98A37AM6")
        .Add ("EX6F896M7R")
        .Add ("EXPC6JC7FN")
        .Add ("EXAA33KR2J")
        .Add ("EXYJZAKA96")
        .Add ("EXJFXKTXU3")
        .Add ("EXCETU2H4N")
        .Add ("EXZMP493NK")
        .Add ("EXKJMC8CYF")
        .Add ("EX7HJMFYH4")
        .Add ("EX3ZR6YR28")
        .Add ("EXXXNEYCKU")
        .Add ("EXHUKN6YXR")
        .Add ("EX43HXCHEM")
        .Add ("EXPZEEMTP9")
        .Add ("EXKYANKCZ6")
        .Add ("EX668YTYJR")
        .Add ("EXR3672HTN")
        .Add ("EXC23F24CJ")
        .Add ("EXZ8ZP8NM7")
        .Add ("EXT6XZFZ73")
        .Add ("EXMK2EXRNX")
        .Add ("EX8HYNUA8T")
        .Add ("EXTFUY4XHN")
        .Add ("EXNNR7AF39")
        .Add ("EX9KNPJ2A7")
        .Add ("EXXJKZJMXT")
        .Add ("EXHR88RY6P")
        .Add ("EX3N6HZHPK")
        .Add ("EXYM3RY3Z7")
        .Add ("EXJTZ27MJ4")
        .Add ("EXPPTHMT4M")
        .Add ("EXU7Z2XCYH")
        .Add ("EXF4X94Y7E")
        .Add ("EX33TTAHR9")
        .Add ("EXN9P3932X")
        .Add ("EX87MAJMKT")
        .Add ("EX46JKR8UE")
        .Add ("EXPCFUZTEA")
        .Add ("EXA9C4Z4N7")
    
    End With
End Sub

Private Sub LiceN2()
    With LicNums
        .Add ("EXY89C7N8T")
        .Add ("EXHE7KE8HP")
        .Add ("EXKKA3K29J")
        .Add ("EX7H8ATKJE")
        .Add ("EXRP6K364A")
        .Add ("EXCN349FCY")
        .Add ("EX8KZC83NU")
        .Add ("EXUTXMHM7F")
        .Add ("EXFRTXP7HA")
        .Add ("EX2NP4NR28")
        .Add ("EXMXMCXAAU")
        .Add ("EXR4UXEX42")
        .Add ("EXC9R6MHEM")
        .Add ("EXZ8NEK3YJ")
        .Add ("EXJ7KNUM8E")
        .Add ("EXECHY37T2")
        .Add ("EX2AEF9R3Y")
        .Add ("EXM9AP8AMJ")
        .Add ("EX7FZZHNXF")
        .Add ("EXTEX8P8FA")
        .Add ("EXXJZNX2Y6")
        .Add ("EXHRXY4KF2")
        .Add ("EX3PT7C6RN")
        .Add ("EXNMRFKP2J")
        .Add ("EXJUNPJ2K7")
        .Add ("EX6TKZRKU3")
        .Add ("EXPPHH26EY")
        .Add ("EXAYERZRPK")
        .Add ("EX76K9FKHP")
        .Add ("EX33HHP6TC")
        .Add ("EXN9ERYPA8")
        .Add ("EX88A2X2M6")
        .Add ("EX3CFHATCZ")
        .Add ("EXNKCRJCNU")
        .Add ("EXHH92JZ7F")
        .Add ("EX4F79RJHC")
        .Add ("EXPN4HZ428")
        .Add ("EXAK228EAX")
        .Add ("EX7JY97ZKR")
        .Add ("EXRRUJEJ6C")
        .Add ("EXMY23YENJ")
        .Add ("EX8XYAXZ8E")
        .Add ("EXU4UK4JH3")
        .Add ("EXP2RUAU3Y")
        .Add ("EX98N4KEAK")
        .Add ("EXX7KCJZXF")
        .Add ("EXH4HMRK7C")
        .Add ("EXCAEU26PZ")
        .Add ("EX6FJKEY73")
        .Add ("EXREFUEHRN")
        .Add ("EXCM44MT2K")
        .Add ("EXYJ2CUCKF")
        .Add ("EXTHYMUYU4")
        .Add ("EXEPUX3HEZ")
        .Add ("EX2MR693NK")
        .Add ("EXXUYNTY8R")
        .Add ("EXR3UXR8TC")
        .Add ("EXAZR6ZT39")
        .Add ("EXYYNN7CM6")
        .Add ("EXJ6KY7YXT")
        .Add ("EX63H7EJFN")
        .Add ("EXZ2EFM4P9")
        .Add ("EX9Y3EKCZX")
        .Add ("EXXUZNJN8R")
        .Add ("EXHTXYR8TE")
        .Add ("EX42T7ZT49")
        .Add ("EXZYPFZEMX")
        .Add ("EXJXMP7ZYT")
        .Add ("EXECT8NTPY")
        .Add ("EX29PRY42K")
        .Add ("EXX8MZXN9F")
        .Add ("EXHFJ848U4")
        .Add ("EX3CFHCU4Z")
        .Add ("EXNACRAENX")
        .Add ("EX9J92JZYH")
        .Add ("EXANEHZHPK")
        .Add ("EXYXAR73Z7")
        .Add ("EXJT8Z7MJ4")
        .Add ("EX6R68E7TZ")
        .Add ("EXZZ3HMRCM")
        .Add ("EXKXZ2XCMH")
        .Add ("EXF46J47FC")
        .Add ("EX3ATTAHP9")
        .Add ("EXN8P3J396")
        .Add ("EXH7MAJMKT")
        .Add ("EX4EJKR74N")
        .Add ("EXPAFUZTEA")
        .Add ("EXHHK9EJXE")
        .Add ("EXCNHJCXE2")
        .Add ("EXZMETMFPX")
        .Add ("EXKKAAU28T")
        .Add ("EX7R8KTKJE")
        .Add ("EXRP6U364A")
        .Add ("EXXYACJ2M7")
        .Add ("EXH48MRK74")
        .Add ("EX436XRXFZ")
        .Add ("EXP236ZF2K")
        .Add ("EX97ZC729H")
        .Add ("EXCC4UCT2A")
        .Add ("EXZ924KCA7")
        .Add ("EXJHYCUYX4")
        .Add ("EX6FUX386P")
        .Add ("EX2CR62UFM")
        .Add ("EXMKNE9EZ8")
        .Add ("EXHTUYR8JC")
        .Add ("EX3PR7PT39")
        .Add ("EXNYNEYCCX")
        .Add ("EXJXKN7NXT")
        .Add ("EX63JYE97E")
        .Add ("EXY8MEK2YH")
        .Add ("EXJ6JNTM8E")
        .Add ("EXECFY37R2")
        .Add ("EX2ACF9R3X")
        .Add ("EXK89N8AKJ")
        .Add ("EXFP77PX6N")
        .Add ("EX3N4FZFNK")
        .Add ("EXYK2PY3Z7")
        .Add ("EXJTZZ6MH4")
        .Add ("EX4RX8E7TP")
        .Add ("EXYXZPUZ9T")
        .Add ("EXT4XZT9UE")
        .Add ("EXC2T72U4A")
        .Add ("EXCC44MT2K")
        .Add ("EXZJ2CKCA7")
        .Add ("EXJHYMUYX4")
        .Add ("EXNP46ATEZ")
        .Add ("EX9X2EJCZX")
        .Add ("EXXUYNJN8R")
        .Add ("EXHTUYR8TC")
        .Add ("EX3ZR6ZT39")
        .Add ("EX66XM6KU4")
        .Add ("EXR3TXC64Z")
        .Add ("EXA9P6MPNX")
        .Add ("EXY8MNU2YH")
        .Add ("EX3ET73XHN")
        .Add ("EXNMPFAF29")
        .Add ("EX9KMPJ2A6")
        .Add ("EXUHJZHKU3")
        .Add ("EXFPF7P66N")
        .Add ("EXJUKN6NXR")
        .Add ("EX43HYE87E")
        .Add ("EXP2E7CTP9")
        .Add ("EXAYAFKE27")
        .Add ("EXFEHZ48T3")
        .Add ("EX3CEHAT4Y")
        .Add ("EXM9AR9CMK")
        .Add ("EX8HZZJNYF")
        .Add ("EX3M4FZFNJ")
        .Add ("EXYK2PY2Z7")
        .Add ("EXHTYZ6KH3")
        .Add ("EX4PU8C7TP")
        .Add ("EXZY2RX2AU")
        .Add ("EXU6Y2UAXF")
        .Add ("EXF4U93X6C")
        .Add ("EX22RTAFP8")
        .Add ("EXUFX8F873")
        .Add ("EXECTHPTRZ")
        .Add ("EX9APRYE2K")
        .Add ("EXXHM26ZKH")
        .Add ("EXRPTJEJ4M")
        .Add ("EXCNPTM4N9")
        .Add ("EXYXN3UNY6")
        .Add ("EX22RH2FPZ")
        .Add ("EXMYNR92ZU")
        .Add ("EX86K2HKJR")
        .Add ("EXT4HJPYTC")
        .Add ("EXYAN3YRCJ")
        .Add ("EXJHKA7AX6")
        .Add ("EXREFUCFPY")
        .Add ("EXJTJ9T88R")
        .Add ("EXERFJ3JRM")
        .Add ("EX2YCT9439")
        .Add ("EXKX938PK6")
        .Add ("EXF4HKRJ6A")
        .Add ("EXA9EUZ4NY")
        .Add ("EXY8AC7NZU")
        .Add ("EXJ78M68JF")
        .Add ("EXT3KK49H3")
        .Add ("EXE2HUAU3Y")
        .Add ("EX9ZE49EAJ")
        .Add ("EXX6KMT86P")
        .Add ("EXRCHU2TEA")
        .Add ("EXAAE48EP8")
        .Add ("EX7HAC8P8U")
        .Add ("EX2NFUNFRY")
        .Add ("EXMKCCX39U")
        .Add ("EX7T9MUMKF")
        .Add ("EXTR7X374A")
        .Add ("EXYYCEK2N8")
        .Add ("EXJ69NTK74")
        .Add ("EX647XRXH2")
        .Add ("EXY8AC7N8U")
        .Add ("EXJF8MF9JP")
        .Add ("EXEC6XEU3C")
        .Add ("EXZA36MEC8")
        .Add ("EXUT8N686E")
        .Add ("EXNYCCKRN8")
        .Add ("EXJX9MJAY4")
        .Add ("EX447XRXHP")
        .Add ("EXP246ZFRM")
        .Add ("EXK89N8AKR")
        .Add ("EX7F7YFXUE")
        .Add ("EX3C47N7E9")
        .Add ("EXXXZEJN9H")
        .Add ("EXHTXYR8JE")
        .Add ("EX4RT7RU42")
        .Add ("EXE4J8FJFP")
        .Add ("EXM8CRXPA7")
        .Add ("EX879Z49K4")
        .Add ("EX3E784K6P")
        .Add ("EXHH88RY6P")
        .Add ("EXNM3RY3Z8")
        .Add ("EXJKZ27M9U")
        .Add ("EXE26JNH4Z")
        .Add ("EX2Z3TMTCX")
        .Add ("EXKYZ2XCYH")
        .Add ("EXX7Y2H984")
        .Add ("EXFEU9RUR2")
        .Add ("EX3CRTZ63M")
        .Add ("EX7JYA72MT")
        .Add ("EXTRUKEK6E")
        .Add ("EXEPRTN6F9")
        .Add ("EX87M3JC9J")
        .Add ("EXF3FKPH49")
        .Add ("EXA9CTY4NY")
        .Add ("EX7HJMFY83")
        .Add ("EXUHYMUZX4")
        .Add ("EX2NR6A4PM")
        .Add ("EXA9E48CP7")
        .Add ("EX7HAC7N8U")
        .Add ("EXTF8MPJTZ")
        .Add ("EXNNEEY4AX")
        .Add ("EXUT8Y486E")
        .Add ("EXYYCCJ2N8")
        .Add ("EX447XRXHZ")
        .Add ("EXA82E83AH")
        .Add ("EXFF7YFX4E")
        .Add ("EX2C47NFE9")
        .Add ("EXMK2FY2Y7")
        .Add ("EXFP66CJF2")
        .Add ("EXAN3EA4PX")
        .Add ("EXXXZNJN9H")
        .Add ("EXU6XZFZ73")
        .Add ("EXECT8PJFP")
        .Add ("EXUFUY4XHN")
        .Add ("EXYM3RY3Z8")
        .Add ("EXT489FXTC")
        .Add ("EX2Z3RX3CX")
        .Add ("EX3C783J4P")
        .Add ("EXNA4HA6EK")
        .Add ("EXJJ99TZ7R")
        .Add ("EX6P7JRJHC")
        .Add ("EXPN4T2439")
        .Add ("EXTT88FXJ4")
        .Add ("EXE26HNF3Z")
        .Add ("EXZZ3RMRCX")
        .Add ("EXU6896M6R")
        .Add ("EXNKCRKCNU")
        .Add ("EXJH92JZ7H")
        .Add ("EXZYCT8C9J")
    
    End With

End Sub

Private Sub LiceN3()
    With LicNums
        .Add ("EXKU9AHNK6")
        .Add ("EXFT7JF8U2")
        .Add ("EX87A2X2MU")
        .Add ("EXU6894KXR")
        .Add ("EXF46J37FM")
        .Add ("EX6H8ATAJE")
        .Add ("EXRP6K3XT2")
        .Add ("EX3CRJP63M")
        .Add ("EXN9NTYRCJ")
        .Add ("EXJHK26AX6")
        .Add ("EXEPRUN6F9")
        .Add ("EXZMN3MPZY")
        .Add ("EXT3JJ38F2")
        .Add ("EXEZFT9T2X")
        .Add ("EX8YC39CAJ")
        .Add ("EX4EJKR84N")
        .Add ("EXA9C48CN7")
        .Add ("EXCNHJEXE2")
        .Add ("EXKKAAU29T")
        .Add ("EXF3HU3UTN")
        .Add ("EX2ZE4AECK")
        .Add ("EX44JKR7UE")
        .Add ("EXPAFTZRC9")
        .Add ("EXA9C3Y3N7")
        .Add ("EX6HJKFYH3")
        .Add ("EXRNFUNHRZ")
        .Add ("EXUUKAU9HT")
        .Add ("EXERHK3UTN")
        .Add ("EX98N4KNMU")
        .Add ("EXX7KMTZXF")
        .Add ("EXR4HXRJ6A")
        .Add ("EXJJMA7AY6")
        .Add ("EXREFUEHRY")
        .Add ("EXMXMCXA9U")
        .Add ("EXHTJM4MUP")
        .Add ("EX98N4JEAJ")
        .Add ("EXX6KAJZXF")
        .Add ("EXRCRU2TEK")
        .Add ("EXMKN48CZ8")
        .Add ("EX7HKMHZ84")
        .Add ("EX2NP4MR2Y")
        .Add ("EXMUCCX39U")
        .Add ("EXF3JXCX4Z")
        .Add ("EXA2F6AFCK")
        .Add ("EXMY349PM7")
        .Add ("EX436X26FZ")
        .Add ("EXZ936ZF2K")
        .Add ("EXRE7KE8HP")
        .Add ("EXCC44MT3K")
        .Add ("EX8U9MUMKF")
        .Add ("EXUR7X476C")
        .Add ("EXH48MRJ63")
        .Add ("EX436UPXFZ")
        .Add ("EXY9AC8P9U")
        .Add ("EXJF8MF9JR")
        .Add ("EXEE6XEU4C")
        .Add ("EX7J9CUMKF")
        .Add ("EXTR7M474C")
        .Add ("EXNZCEKRN8")
        .Add ("EXJX9NJAZ4")
        .Add ("EXAAE4Z4PZ")
        .Add ("EXY8AC7PZU")
        .Add ("EXTFHXFJT2")
        .Add ("EXENE6N43M")
        .Add ("EXFTJM4MUP")
        .Add ("EX32FXA74A")
        .Add ("EXY7MEK2YH")
        .Add ("EXJ6JMTK7C")
        .Add ("EXKKN48CZ7")
        .Add ("EX7HKMFY84")
        .Add ("EX3PR6PT3Z")
        .Add ("EXNYEEY4AX")
        .Add ("EXF3JUCX4Z")
        .Add ("EXA2F4AFCK")
        .Add ("EX7FMMU97R")
        .Add ("EXTEJX3UFC")
        .Add ("EX336UZ6FZ")
        .Add ("EXY834ZFZK")
        .Add ("EXTF8MF9JR")
        .Add ("EXEE66NU4M")
        .Add ("EXNN46AREZ")
        .Add ("EXJ69NTK84")
        .Add ("EX647XRYH2")
        .Add ("EXEE6XEU3C")
        .Add ("EX9KAEXNMH")
        .Add ("EX32FUAFCK")
        .Add ("EXT6JXTK7C")
        .Add ("EXCCF626R2")
        .Add ("EXTFHXEHTZ")
        .Add ("EXNXNEYCAX")
        .Add ("EXHUKN6NXR")
        .Add ("EXA9P4KFCK")
        .Add ("EXY7MCJ2XH")
        .Add ("EXMMP69E28")
        .Add ("EXUHJYHKUR")
        .Add ("EXMXCEY3AU")
        .Add ("EX8U9M6NUR")
        .Add ("EXC3H6CHEM")
        .Add ("EXK7ANUM86")
        .Add ("EXCAE69EP8")
        .Add ("EXHTMNHZJ6")
        .Add ("EX4RJYPJT2")
        .Add ("EXEC66NU3M")
        .Add ("EXZK3EMEC8")
        .Add ("EXUT8Y686E")
        .Add ("EXPR67CTF2")
        .Add ("EXJ69MTK74")
        .Add ("EX447XRXH2")
        .Add ("EXZ9CE8R9X")
        .Add ("EXTPHXNHTZ")
        .Add ("EXMME6N4AK")
        .Add ("EX43HYCHEM")
        .Add ("EXPZEFMTP9")
        .Add ("EXR6JXTK7C")
        .Add ("EXCAF626RZ")
        .Add ("EXUHJYHKU2")
        .Add ("EXMXNCYAAU")
        .Add ("EXHUKM6MUR")
        .Add ("EXCAR6MHEM")
        .Add ("EXZ8NEK3ZJ")
        .Add ("EXRERX2UFM")
        .Add ("EXXUZEJN8H")
        .Add ("EXP236ZFRK")
        .Add ("EX9YZCY298")
        .Add ("EX6EXXEKUC")
        .Add ("EXRCT6N6C9")
        .Add ("EXTHYMUYX4")
        .Add ("EXNZ46ATN8")
        .Add ("EXR3UYR8TC")
        .Add ("EX3PHXNHRZ")
        .Add ("EXXXNN7CK6")
        .Add ("EXH4KY6YXR")
        .Add ("EXA8NCKPMU")
        .Add ("EXFFXX3J6P")
        .Add ("EX2NT6A4PM")
        .Add ("EXUTXMHM7P")
        .Add ("EXFRTXP7RA")
        .Add ("EX98ZE729H")
        .Add ("EXCC4UCT3A")
        .Add ("EXKHYCUYX4")
        .Add ("EXEP46AJEZ")
        .Add ("EXHU8MH9X3")
        .Add ("EX436XPXFP")
        .Add ("EXZ9AE8P2U")
        .Add ("EXCMC4M32K")
        .Add ("EX32FXC76C")
        .Add ("EXH4HKRJ6A")
        .Add ("EXMKN48EZ8")
        .Add ("EX7JKMHZ84")
        .Add ("EX2NP4NR2Y")
        .Add ("EXMXCCX39U")
        .Add ("EX3P6U364A")
        .Add ("EXX7ACJ2XF")
        .Add ("EXH68MRK74")
        .Add ("EXA9C37CN7")
        .Add ("EXFRJKFYH3")
        .Add ("EX2NFUNHRZ")
        .Add ("EXUUKK49H3")
        .Add ("EXP9R4A43Y")
        .Add ("EX98NCKNMU")
        .Add ("EXCCTT2F4N")
        .Add ("EXZKP382MJ")
        .Add ("EXUTXKFK7P")
        .Add ("EXMY23XCYJ")
        .Add ("EX86YA6Y8E")
        .Add ("EXY924KCA7")
        .Add ("EXRP6J2639")
        .Add ("EXMXAAJPM7")
        .Add ("EXHU8KH9X3")
        .Add ("EX98C3Y3MX")
        .Add ("EXREFUCFRY")
        .Add ("EXAKC4M32J")
        .Add ("EXERFJ3JRN")
        .Add ("EX98N3JEAJ")
        .Add ("EXX6KAHZUF")
        .Add ("EX6T79F8U2")
        .Add ("EX99CTY3NY")
        .Add ("EXX79A7NYT")
        .Add ("EXPCETAEPM")
        .Add ("EXKTAAU28T")
        .Add ("EXCZER9RZX")
        .Add ("EX8XA28C9H")
        .Add ("EX9KPRYE9U")
        .Add ("EXXJM26ZKH")
        .Add ("EXRPTJNT4M")
        .Add ("EXU6YZUAXF")
        .Add ("EXE3U83X6C")
        .Add ("EX9922JPZH")
        .Add ("EX4N6HPHFA")
        .Add ("EXYXA28A9H")
        .Add ("EXTU89FYJ4")
        .Add ("EX879ZUZK4")
        .Add ("EX3CFHCUEZ")
        .Add ("EXNKCRKENX")
        .Add ("EXRRH8R7EP")
        .Add ("EXMYNR82ZU")
        .Add ("EXYU9P798F")
        .Add ("EXCP4HC7TZ")
        .Add ("EX8792X2KU")
        .Add ("EX2CEFAT3Y")
        .Add ("EXXJKZJMX4")
        .Add ("EXHRH8R77P")
        .Add ("EXKXMP7PYT")
        .Add ("EXECT8PJHP")
        .Add ("EX8HYNXA8T")
        .Add ("EXZY2FKRAK")
        .Add ("EXJUYZUAKF")
        .Add ("EXE4J8EJFN")
        .Add ("EX9KPRYC9U")
        .Add ("EXNNRFKP3J")
        .Add ("EXT4YZT9UF")
        .Add ("EXM93F83AJ")
        .Add ("EXJJZZ7M9U")
        .Add ("EXPPTHCH4M")
        .Add ("EXJUYZT9UF")
        .Add ("EXEA4HA4EK")
        .Add ("EXZZPFZEMY")
        .Add ("EXU6XZF873")
        .Add ("EXECT8PTRZ")
        .Add ("EX8HYY6A8T")
        .Add ("EXCP4FC6RY")
        .Add ("EX648YTYJR")
        .Add ("EX8H8ZHYXF")
        .Add ("EX3E68P8FA")
        .Add ("EXXU9N62Y6")
        .Add ("EXR2F7CURA")
        .Add ("EXJ7JNTM8E")
        .Add ("EXNMR7AF29")
        .Add ("EXXJKZHKXT")
        .Add ("EXNYEEY4CX")
        .Add ("EXJ6KYFY63")
        .Add ("EXK9PEMPNX")
        .Add ("EXFRXY4KF2")
        .Add ("EX9X2CJAYU")
        .Add ("EXXUYMRY8R")
        .Add ("EX2A462H3M")
        .Add ("EXAZRE83AJ")
        .Add ("EX77YYFMXE")
        .Add ("EXPP67CTF2")
        .Add ("EX8JYZ6A8T")
        .Add ("EX2APHN42K")
        .Add ("EXCYER8RZU")
        .Add ("EX7XA28A8H")
        .Add ("EX29FFN42K")
        .Add ("EXXHMZ6YJF")
        .Add ("EX6TKZRKX3")
        .Add ("EX2ZRR9FN8")
        .Add ("EXTEU7F863")
        .Add ("EXNM3PY3Z7")
        .Add ("EXJJZZ6M9U")
        .Add ("EXUFKY4XHE")
        .Add ("EXPNRFAF3K")
        .Add ("EX42T72T49")
        .Add ("EX88ZP8NX7")
        .Add ("EX2C46NFC9")
        .Add ("EXXU9N697E")
        .Add ("EXNZCEKTN8")
        .Add ("EXT7KYUM8E")
    
    End With

End Sub

Private Sub LiceN4()
    With LicNums
        .Add ("EX8JKNHZ94")
        .Add ("EXNYPEYCCX")
        .Add ("EXR3TXCX4Z")
        .Add ("EXMJZEXPNX")
        .Add ("EXEP4X3HEZ")
        .Add ("EX2M2693NU")
        .Add ("EX647NTYHR")
        .Add ("EXTFHXFJTP")
        .Add ("EX4CUUCJTA")
        .Add ("EXPAR4M4A8")
        .Add ("EX8UZCHAYT")
        .Add ("EXRE7KE8HN")
        .Add ("EXMMCCX3AU")
        .Add ("EXE2HU3UTN")
        .Add ("EX2ZE49EAK")
        .Add ("EX67KMT8XF")
        .Add ("EXTTXKFK7P")
        .Add ("EX86YA4Y8E")
        .Add ("EXJJ92JZ8H")
        .Add ("EXERHJ3UTN")
        .Add ("EXN3ETNH49")
        .Add ("EXJHMA7AX6")
        .Add ("EXCN3U2FCY")
        .Add ("EX99CTY3NX")
        .Add ("EX4EHJCU62")
        .Add ("EXZMN3KNZX")
        .Add ("EXR2HH27FZ")
        .Add ("EXM8N2J286")
        .Add ("EXPCTHPTRZ")
        .Add ("EXJUZ27NJ4")
        .Add ("EX6Z4HME2Y")
        .Add ("EXZY2PU2AU")
        .Add ("EX4E784K6P")
        .Add ("EXCYERZRPK")
        .Add ("EX64J8EJFN")
        .Add ("EX99PRYC2K")
        .Add ("EXK7APUN96")
        .Add ("EXFEH848TA")
        .Add ("EX8JMNJ2J6")
        .Add ("EX42T72U4A")
        .Add ("EX77YN7MU6")
        .Add ("EX3C47NFE9")
        .Add ("EXUT8M486C")
        .Add ("EXFNF7P64N")
        .Add ("EX4RT7PT42")
        .Add ("EXX6MM6AK4")
        .Add ("EXAZF4AFCK")
        .Add ("EXKJMCHMYF")
        .Add ("EXP2UXP7RC")
        .Add ("EXH6YA6Z8F")
        .Add ("EXCC46NT3K")
        .Add ("EX7T8KTKJE")
        .Add ("EX3ZE4AECK")
        .Add ("EX46JKR7UE")
        .Add ("EXZKP483NJ")
        .Add ("EXRRUJEJ6N")
        .Add ("EXMY23YEYJ")
        .Add ("EXFC6JC6FM")
        .Add ("EXKKA3K28J")
        .Add ("EXCPFH2TPM")
        .Add ("EX87M2HMJR")
        .Add ("EXJT89FMJ4")
        .Add ("EXFFJ848U3")
        .Add ("EXAMPRK4C8")
        .Add ("EX6TU8RU6A")
        .Add ("EX282R9PN8")
        .Add ("EX3E67P7EA")
        .Add ("EXYXAP73Z7")
        .Add ("EXP2E7CUP9")
        .Add ("EXK8MPXN9F")
        .Add ("EXNMP69F29")
        .Add ("EXJUXZT9KE")
        .Add ("EXAZ2EZ3A8")
        .Add ("EX7FY6NU3M")
        .Add ("EX8UAN6NXR")
        .Add ("EX2MR694PK")
        .Add ("EXJ7ZC729H")
        .Add ("EXTR7X374C")
        .Add ("EXYZCEK2N8")
        .Add ("EXAAE4Z4P8")
        .Add ("EX7HKMHZH4")
        .Add ("EX2YP4YP27")
        .Add ("EX64XM6KT4")
        .Add ("EXY923KC97")
        .Add ("EX2YCT9EAJ")
        .Add ("EXU6KKRZUE")
        .Add ("EXY9N3YRCJ")
        .Add ("EXTRUKFK6E")
        .Add ("EXZMN3KNZ6")
        .Add ("EXMZNR9RZX")
        .Add ("EXHF3HZTRZ")
        .Add ("EXJU827NJ4")
        .Add ("EXCZCHME27")
        .Add ("EXHFJ269U4")
        .Add ("EX9KNPK3A7")
        .Add ("EX6TU8TX63")
        .Add ("EXNMRFKP3J")
        .Add ("EXE3U83X6A")
        .Add ("EX2AEFATAY")
        .Add ("EXXTKZTMX4")
        .Add ("EXMK2EX2Y6")
        .Add ("EXHR78EKH3")
        .Add ("EXEEH737T2")
        .Add ("EX8JKNHZ96")
        .Add ("EX4RT7PT39")
        .Add ("EXX6XM6KK4")
        .Add ("EX2C36N6C9")
        .Add ("EXTR7M4YU4")
        .Add ("EXNZC6ARN8")
        .Add ("EXRCRX2TEK")
        .Add ("EXA9CUZ4NY")
        .Add ("EXTFHXEHRP")
        .Add ("EXKUAAU29T")
        .Add ("EXM8P3J396")
        .Add ("EXRFXKTXU3")
        .Add ("EXKU228NK6")
        .Add ("EXF37JPH42")
        .Add ("EX87A269M4")
        .Add ("EXCNHJCUE2")
        .Add ("EXF4X93X7C")
        .Add ("EX88ZZHNYF")
        .Add ("EX4P6HRJFC")
        .Add ("EX74J8FJHP")
        .Add ("EXRR67CUF2")
        .Add ("EXK8CPXN97")
        .Add ("EXECF737R9")
        .Add ("EX9KMPJ2K7")
        .Add ("EXA82E83AJ")
        .Add ("EX2A36MEC8")
        .Add ("EXUT8N687E")
        .Add ("EXT6JYTK7C")
        .Add ("EXKKNC8CZ7")
        .Add ("EXFRUXP7HC")
        .Add ("EX9YZCXZ8F")
        .Add ("EXAKA3K22J")
        .Add ("EXFTJK4KTP")
        .Add ("EX2ZEU9639")
        .Add ("EXU4J9FYTE")
        .Add ("EXNAPTZRCJ")
        .Add ("EXRPT9EJ4C")
        .Add ("EXU6794KXP")
        .Add ("EXNACTAENM")
        .Add ("EX4N6HZHPK")
        .Add ("EX8XA28A9H")
        .Add ("EXXHM26YJF")
        .Add ("EXYY2PUZAU")
        .Add ("EX77ZZHNXF")
        .Add ("EX2AEFATCY")
        .Add ("EXMK2FX2Y6")
        .Add ("EXUHJYFJT2")
        .Add ("EXNYPFZECX")
        .Add ("EXR4TXEX42")
        .Add ("EXMJ2EXRNX")
        .Add ("EXNZC6ATN8")
        .Add ("EX8JKMHZ94")
        .Add ("EXF3HUCU3Z")
        .Add ("EXPAFUZTE9")
        .Add ("EXRRUJNU6N")
        .Add ("EXX823YEZJ")
        .Add ("EXPC6JC7FM")
        .Add ("EXRRJJ38FZ")
        .Add ("EXM8P3932X")
        .Add ("EXPN4RZ428")
        .Add ("EXRT78EXH3")
        .Add ("EXM9CRYPA8")
        .Add ("EX779ZUZK3")
        .Add ("EX2ACF9RAX")
        .Add ("EXXTKZRKU3")
        .Add ("EXYYNEYCMX")
        .Add ("EXXT8N687E")
        .Add ("EXNYCEKRN8")
        .Add ("EX2CR42TEK")
        .Add ("EXUUYMHM8H")
        .Add ("EXNZ34YEPK")
        .Add ("EXPCEUCFPY")
        .Add ("EXKUMCX99T")
        .Add ("EXT4H9FXTC")
        .Add ("EXJHK37AX6")
        .Add ("EXKYZ2XCMH")
        .Add ("EXE34H36EA")
        .Add ("EX9J22JPYH")
        .Add ("EXAYER8RZU")
        .Add ("EXE3H7EJFN")
        .Add ("EX9JPPXC9U")
        .Add ("EXAZ3FKE2Y")
        .Add ("EX647X27H2")
        .Add ("EX9KCE9RAX")
        .Add ("EXUH9NF9JR")
        .Add ("EXH4JX6XUR")
        .Add ("EXMM349PCY")
        .Add ("EXX79A6M7T")
        .Add ("EXRNFUNHRY")
        .Add ("EX43UK4JR3")
        .Add ("EXX8Y2J986")
        .Add ("EXJU89FMJ4")
        .Add ("EXZY3RMRCK")
        .Add ("EX3CFHAT4Z")
        .Add ("EXYKM2JMY4")
        .Add ("EXPZPFZEEY")
        .Add ("EXMK2FYRPY")
        .Add ("EXHT7Z6MH3")
        .Add ("EXK7KPUM9E")
        .Add ("EXMMP69E29")
        .Add ("EXAZ2EY2A8")
        .Add ("EXCM46NT3K")
        .Add ("EXTHYMTYU3")
        .Add ("EXX6AAHZXF")
        .Add ("EXAAE48CP7")
        .Add ("EXNZTUN6PA")
        .Add ("EXN9P3A32Y")
        .Add ("EXKM238PAX")
        .Add ("EXN9ETYPA8")
        .Add ("EXJHKA6AXE")
        .Add ("EXKXZ2XCXH")
        .Add ("EXPN4JZ429")
        .Add ("EX9KZ27C9U")
        .Add ("EXMZCRME27")
        .Add ("EX9KNPJ3A7")
        .Add ("EXC23FZ3CJ")
        .Add ("EX6E6XEUUC")
        .Add ("EXHUJM6MUP")
        .Add ("EXC9P6MFEM")
        .Add ("EX8U8AH9X3")
        .Add ("EXCAEUZ6PZ")
        .Add ("EXH67M68HF")
        .Add ("EXAK33KRZJ")
    
    End With

End Sub

Private Sub LiceN5()
    With LicNums
        .Add ("EXCZFT9T2X")
        .Add ("EXPEUHPURZ")
        .Add ("EXM9ERYPA8")
        .Add ("EXFEH8CHTA")
        .Add ("EXR4XYT9UE")
        .Add ("EXM93F94CK")
        .Add ("EXPPFFZ6EY")
        .Add ("EX2M3ENEC9")
        .Add ("EX32F6CFEM")
        .Add ("EX78MNUAYH")
        .Add ("EXXUYNHN8R")
        .Add ("EXNZ34YEZK")
        .Add ("EXRNFUNFRY")
        .Add ("EXXUMCXAJU")
        .Add ("EXY923KCA7")
        .Add ("EXT4HJPXTC")
        .Add ("EXMZPR9RZX")
        .Add ("EX9KZRYE9U")
        .Add ("EXCZCHMF38")
        .Add ("EXEEHY37T3")
        .Add ("EX8HNNUA8T")
        .Add ("EXC2R7ZT39")
        .Add ("EX77YYFMUE")
        .Add ("EXPP66CTF2")
        .Add ("EX437XRXFZ")
        .Add ("EX7HJMFYH3")
        .Add ("EX86YA6Z8F")
        .Add ("EX8KZC82MT")
        .Add ("EX436XRXFP")
        .Add ("EX6HJKFY73")
        .Add ("EXH4HMRJ6A")
        .Add ("EXPCETCFPN")
        .Add ("EXPEUJPURZ")
        .Add ("EXT388EXTC")
        .Add ("EXPNRHMR3K")
        .Add ("EXT4XYTJ4N")
        .Add ("EXUH9NHAKR")
        .Add ("EXNZ34YFZK")
        .Add ("EXXXMCXAJU")
        .Add ("EXRN4J2639")
        .Add ("EX87A2X2KU")
        .Add ("EXAMNRK3C7")
        .Add ("EX6TX9TX6C")
        .Add ("EX8H8ZHYYF")
        .Add ("EX64JZF98F")
        .Add ("EX8JYPXA8T")
        .Add ("EXAYAEKCZ6")
        .Add ("EXCAFX26PZ")
        .Add ("EX2NP4NR2Z")
        .Add ("EX3R7U374A")
        .Add ("EX6EKKR86P")
        .Add ("EX9YN4XPZ7")
        .Add ("EX44XXEJTA")
        .Add ("EX7T8KUKJF")
        .Add ("EXHUJM6MUR")
        .Add ("EXJHYCUNMU")
        .Add ("EXMYA49PM7")
        .Add ("EXJ78M68HF")
        .Add ("EXKX238NK6")
        .Add ("EX88A269M6")
        .Add ("EXKXPRK3M8")
        .Add ("EXM93H94CK")
        .Add ("EX42F6CFEM")
        .Add ("EX88MNUAYH")
        .Add ("EX97ZC729F")
        .Add ("EXTR7M374C")
        .Add ("EXX6KKTZXF")
        .Add ("EX7KZA82MT")
        .Add ("EX98A3Y3MX")
        .Add ("EXF46J36FM")
        .Add ("EXAJA3K2ZJ")
        .Add ("EXMZPR9T2X")
        .Add ("EXPM3HZURZ")
        .Add ("EXHT7Z6KH3")
        .Add ("EXK7KNUM8E")
        .Add ("EX6RX9E7TP")
        .Add ("EXZMN3MPZ7")
        .Add ("EXKUKAU99T")
        .Add ("EXY8Z3J396")
        .Add ("EXZYCR8428")
        .Add ("EX3ARHN63M")
        .Add ("EXUFUZ4YJP")
        .Add ("EX768NTZJT")
        .Add ("EX8JMNJ296")
        .Add ("EXY6NN7CK6")
        .Add ("EXRCU7N7E9")
        .Add ("EXM9PEMPNX")
        .Add ("EXNZ46ARN8")
        .Add ("EXAAE48CP8")
        .Add ("EXRE6KC7FN")
        .Add ("EXJJ99TZ8R")
        .Add ("EXM7N282ZU")
        .Add ("EX2Z3RMRCX")
        .Add ("EXKXY2UAXF")
        .Add ("EXMJAPJCMU")
        .Add ("EXCAR6MRNX")
        .Add ("EX8HYZ6A8T")
        .Add ("EXZ7ZP8NM7")
        .Add ("EXC9P6MHEM")
        .Add ("EXPCPUZTEK")
        .Add ("EX324KPUEN")
        .Add ("EXPCETCFPM")
        .Add ("EXH7MAJMJT")
        .Add ("EXC26HNF3Z")
        .Add ("EXZZPP8EN7")
        .Add ("EX2ZRH2FNZ")
        .Add ("EX3E67PHEA")
        .Add ("EX63HYEJFN")
        .Add ("EXUHJYHKU3")
        .Add ("EXY7YN7MK6")
        .Add ("EX9KAEXEMH")
        .Add ("EXY7MCK2YH")
        .Add ("EXTTXAFK7F")
        .Add ("EXMY23XCNJ")
        .Add ("EXZMN3KNYX")
        .Add ("EXNCTHPTPZ")
        .Add ("EXR277EURA")
        .Add ("EXTFKY4XHE")
        .Add ("EXECF69FR9")
        .Add ("EXK82E83AH")
        .Add ("EXFP66AJF2")
        .Add ("EXR6HXRK7C")
        .Add ("EX4EUKR84N")
        .Add ("EXZM2493NU")
        .Add ("EX4FHJEX72")
        .Add ("EX7UX9UY74")
        .Add ("EX9H22JPYH")
        .Add ("EXAYEP8RZU")
        .Add ("EXNARFNRPY")
        .Add ("EXP267CTP9")
        .Add ("EXXUZNTY8R")
        .Add ("EX8JAE8P9U")
        .Add ("EX9YP4YR28")
        .Add ("EXEFUX3H6P")
        .Add ("EXH48KRJ63")
        .Add ("EXJJMA7AYE")
        .Add ("EXHE7KE7HN")
        .Add ("EXTTK9U8HR")
        .Add ("EXCPFJ2TRM")
        .Add ("EXFEU8PURZ")
        .Add ("EXHT78EMH3")
        .Add ("EXU7KZUN9F")
        .Add ("EXYXZNJP9J")
        .Add ("EXZ9CE8P2X")
        .Add ("EX3PR6NR38")
        .Add ("EX4C6UETTA")
        .Add ("EXY924K4A7")
        .Add ("EX2ZET9639")
        .Add ("EX3CTJP73M")
        .Add ("EX7UXAUY76")
        .Add ("EX9J22JPZH")
        .Add ("EXE4J7EJFN")
        .Add ("EXHRXY4KF3")
        .Add ("EX3NT6A4PM")
        .Add ("EX437X26FZ")
        .Add ("EXFRJMFYH3")
        .Add ("EXZK2CMCA8")
        .Add ("EXX79A7N7T")
        .Add ("EXZXN3XPZ6")
        .Add ("EX993TARZ8")
        .Add ("EX6F79RJHC")
        .Add ("EX76K2HKHR")
        .Add ("EX9JZZ7C9U")
        .Add ("EXKZCPME27")
        .Add ("EXFRUXR8HC")
        .Add ("EXJ78M79JP")
        .Add ("EXKUMCXA9U")
        .Add ("EXFRHK3KTN")
        .Add ("EXHFXARMJR")
        .Add ("EXKU927NK6")
        .Add ("EXXJY27ZKR")
        .Add ("EX879RX2KU")
        .Add ("EX9MNPK3C7")
        .Add ("EXK6MZFZ73")
        .Add ("EXHRYZ6KH3")
        .Add ("EX3NT7A6RN")
        .Add ("EXYYCCK2N8")
        .Add ("EXKJNC8CYF")
        .Add ("EXNZ24YEZJ")
        .Add ("EXPMETMFPY")
        .Add ("EXAA3TAR29")
        .Add ("EXNM3HZ328")
        .Add ("EXR2FHNURA")
        .Add ("EX4FU74XHN")
        .Add ("EX648YTYHR")
        .Add ("EX4PT7PT39")
        .Add ("EXCM3T2FCY")
        .Add ("EXE3FJPH49")
        .Add ("EXRPU9EJ4C")
        .Add ("EXXJKZJMXU")
        .Add ("EXNA4HA6EM")
        .Add ("EXRRHH27EZ")
        .Add ("EXKX9AHNK6")
        .Add ("EXET7JE8U2")
        .Add ("EXHFJ969U4")
        .Add ("EXJXYZUAKF")
        .Add ("EXUHJYFJU2")
        .Add ("EX2C46N6C9")
    
    End With

End Sub

Private Sub LiceN6()
    With LicNums
        .Add ("EX42FXC76C")
        .Add ("EX6FUMT86P")
        .Add ("EXPCRU2TEK")
        .Add ("EXJTZZ6MJ4")
        .Add ("EXUHKZ6YJF")
        .Add ("EXNNFFZ4CX")
        .Add ("EXRCT6E642")
        .Add ("EXTR7X476C")
        .Add ("EX86YA4Y7E")
        .Add ("EX882R9NY7")
        .Add ("EXKYNP82YU")
        .Add ("EXNK2FY2Z7")
        .Add ("EXP2EFMTP9")
        .Add ("EX3ET63UFM")
        .Add ("EXY89C7NZU")
        .Add ("EXJTKAU88R")
        .Add ("EXX8Y2J286")
        .Add ("EXJT99TZ8R")
        .Add ("EXM7N2H284")
        .Add ("EXJUZ27MJ4")
        .Add ("EX779Z48K3")
        .Add ("EX8JCE8P9X")
        .Add ("EXAZR6YR28")
        .Add ("EXMMEEY3AU")
        .Add ("EXPAR4C43Z")
        .Add ("EXMN349PCY")
        .Add ("EXXJN27ZKH")
        .Add ("EXZY3RMRAU")
        .Add ("EXANEFZFNK")
        .Add ("EXNK2FYRPY")
        .Add ("EXECFX26R2")
        .Add ("EXP246ZHRM")
        .Add ("EXH67K68HE")
        .Add ("EXJTAAU28T")
        .Add ("EXM8N2J386")
        .Add ("EXZM3RZ328")
        .Add ("EXPNRFKR3K")
        .Add ("EXM93F94CJ")
        .Add ("EX3N4FPFE9")
        .Add ("EX43H7EHFN")
        .Add ("EXNN449RCY")
        .Add ("EX7HKMFYH4")
        .Add ("EXZXAR8A9H")
        .Add ("EX879ZU2KU")
        .Add ("EXXJKZJMX3")
        .Add ("EXY7ZP8NM6")
        .Add ("EXPAPUZTEK")
        .Add ("EX324JNUEN")
        .Add ("EXCNRTN6E9")
        .Add ("EXR378EXRA")
        .Add ("EXUFKZ4YJF")
        .Add ("EX768Z48J3")
        .Add ("EX2A472H3N")
        .Add ("EX9YP4YR27")
        .Add ("EXCA44MT2K")
        .Add ("EXE2HU3URN")
        .Add ("EXRN6T2639")
        .Add ("EX34HJP7TC")
        .Add ("EX6RX9E8UP")
        .Add ("EXYXZPJP9T")
        .Add ("EXZ9CE9R9X")
        .Add ("EXZA34MEC8")
        .Add ("EX3ZEUAFCK")
        .Add ("EXCN349HCY")
        .Add ("EXA9C4Y4NY")
        .Add ("EXX79A6MYT")
        .Add ("EXR2RH2FEZ")
        .Add ("EXYXAR83Z8")
        .Add ("EX8HYNUA7R")
        .Add ("EXECHY37R2")
        .Add ("EX7HJMFY84")
        .Add ("EX8XYAXZ87")
        .Add ("EXC24HNF3Z")
        .Add ("EX7UM2UMY4")
        .Add ("EXHH99TZ7R")
        .Add ("EXK7MZ8ZYU")
        .Add ("EXNK2PY2Z7")
        .Add ("EX77MMU9YH")
        .Add ("EX8X2CJAYU")
        .Add ("EXYXAR8A9H")
        .Add ("EX2APRY42K")
        .Add ("EXMZCPME27")
        .Add ("EXNNRFAF39")
        .Add ("EXAZ2EZ3AH")
        .Add ("EXCME6N43K")
        .Add ("EXTP6K3XU3")
        .Add ("EX3ARHP63M")
        .Add ("EXC2EHNF38")
        .Add ("EXPNT8CH3A")
        .Add ("EX4RT7PT32")
        .Add ("EX2M3EYEMJ")
        .Add ("EXC2F6CFEM")
        .Add ("EXMX339PM7")
        .Add ("EXNAFTZRC9")
        .Add ("EX2Z3TY3CX")
        .Add ("EXNA4H94CK")
        .Add ("EXZZPR9EN7")
        .Add ("EXNN449RCZ")
        .Add ("EXPCFU2TEA")
        .Add ("EXJJMA7AYF")
        .Add ("EXEA4HA6EM")
        .Add ("EXMZNR92ZU")
        .Add ("EX9N2E94PX")
        .Add ("EXUUYMHM8F")
        .Add ("EXP3TUCX3Z")
        .Add ("EXZYCT9429")
        .Add ("EXE2EHNF38")
        .Add ("EXEEHY37T2")
        .Add ("EXC23FZ4C9")
        .Add ("EXEN67PU4M")
        .Add ("EXN9R4K4A7")
        .Add ("EX2P6U2639")
        .Add ("EXCMTT2FCY")
        .Add ("EXE37JPH42")
        .Add ("EX769Z48J3")
        .Add ("EXT4XZT9UF")
        .Add ("EXUH9NHAKT")
        .Add ("EX64XXEKTC")
        .Add ("EXF3JX4XUP")
        .Add ("EXJFYKTYU3")
        .Add ("EXKKZ27N9U")
        .Add ("EXM9CRXPA8")
        .Add ("EXZY2RMRAU")
        .Add ("EX8JMNHZJ6")
        .Add ("EXKH9NF9KR")
        .Add ("EXXXMCXAKU")
        .Add ("EXN2RTA42Y")
        .Add ("EXRN4J2439")
        .Add ("EXRPTHCH4C")
        .Add ("EX3CFHAU4Z")
        .Add ("EXAZ2FZ3AJ")
        .Add ("EX7E7YFXUE")
        .Add ("EXHUKM6NXR")
        .Add ("EXRP6K3XT3")
        .Add ("EXU4J9HYUE")
        .Add ("EX7T79F8U2")
        .Add ("EXPNR8CH3A")
        .Add ("EXJUYZT9KF")
        .Add ("EXTFHXFJTR")
        .Add ("EXX6MM6AJ4")
        .Add ("EX7T9M4MUP")
        .Add ("EXJ8NCJNKT")
        .Add ("EXT489FYTC")
        .Add ("EXT4XYT9UE")
        .Add ("EX4RJYRKU3")
        .Add ("EXCC66NT3K")
        .Add ("EXF3HU4UTP")
        .Add ("EXTP6U364A")
        .Add ("EXE36JNH42")
        .Add ("EXCNPTM4N8")
        .Add ("EXMJAPJCMT")
        .Add ("EX87ZP8NX7")
        .Add ("EXHUJM6XUP")
        .Add ("EXA9P4KPMU")
        .Add ("EXY9N2YPAH")
        .Add ("EXMZPT9T2X")
        .Add ("EXZYCT8428")
        .Add ("EX8JYPXC8T")
        .Add ("EX3N37A6RY")
        .Add ("EXCCF69ER9")
        .Add ("EXY824YEZJ")
        .Add ("EX8XN3XPZ7")
        .Add ("EX22RR9FP8")
        .Add ("EX22FHN4RA")
        .Add ("EXCZ4FME2Y")
        .Add ("EXMKNE9EZH")
        .Add ("EX8J9CUMKF")
        .Add ("EX4ETU274N")
        .Add ("EXN2ERNF38")
        .Add ("EXT4683JUN")
        .Add ("EX4RT7RU4A")
        .Add ("EXEPTUN6FA")
        .Add ("EXH67K47HE")
        .Add ("EXT3JK48H2")
        .Add ("EX7XA28A9H")
        .Add ("EXZ9EFM3ZJ")
        .Add ("EXAY3FKE2X")
        .Add ("EXKJNCHMYF")
        .Add ("EX7H9C7N8U")
        .Add ("EXF4X94Y7C")
        .Add ("EXCZERZRPK")
        .Add ("EXMK2NX2Y6")
        .Add ("EX88NNUAYJ")
        .Add ("EXH48MRK73")
        .Add ("EXEPTUP7RA")
        .Add ("EX74X94Y7E")
        .Add ("EXTTJ9T8FR")
        .Add ("EX63HYEHFN")
        .Add ("EXFR67CJF2")
        .Add ("EXHU8MHAY4")
        .Add ("EXUTXMFM7F")
        .Add ("EXZMN3KPZ6")
        .Add ("EXCPEH2HPM")
        .Add ("EXMK2FXRNX")
        .Add ("EXFR6Y4KF2")
        .Add ("EXXUYCHM8H")
        .Add ("EXRCFUCFPN")
        .Add ("EX3ATTAHR9")
        .Add ("EXF6K9HKHR")
        .Add ("EX8JNPXA8T")
        .Add ("EXCAF69EP8")
        .Add ("EXZ946ZF2M")
        .Add ("EX8XN3XPZ6")
        .Add ("EX6R8KTKJE")
        .Add ("EXYXA28A8H")
        .Add ("EX7H8ATAJE")
        .Add ("EXFEU8PKHP")
        .Add ("EXZ9NFM3ZJ")
        .Add ("EXNMR7AF39")
        .Add ("EXY9AC8P2U")
        .Add ("EX9YZCY297")
        .Add ("EXJTAAUZ8R")
        .Add ("EXXHY9T9HE")
        .Add ("EX3N4FNFE9")
        .Add ("EXA9PCKPMU")
        .Add ("EXMKPE9EZ8")
        .Add ("EX3PR6PT38")
        .Add ("EXAKC3M22J")
        .Add ("EXY9Z3K397")
        .Add ("EX76K2FA8F")
        .Add ("EXAZCFME27")
        .Add ("EXFEHY38T3")
        .Add ("EXAZ2EY298")
        .Add ("EXMXCCX3AU")
        .Add ("EXXHZATAJE")
        .Add ("EXH7MAHMJR")
        .Add ("EX9JPPYC9U")
        .Add ("EXYXAZ7A8F")
        .Add ("EXFHXY4J7R")
        .Add ("EXTEJY3XHC")
        .Add ("EX326UPUEY")
        .Add ("EX6FHKEXF2")
        .Add ("EXFC6JC7FN")
        .Add ("EXZZRH2FNY")
        .Add ("EXANEFZRNK")
        .Add ("EXKJZEXZY6")
        .Add ("EXEP66AJEZ")
        .Add ("EXZAP4ZRCJ")
        .Add ("EXHFK969U4")
        .Add ("EXF46J36EM")
        .Add ("EXPZPFZECY")
        .Add ("EXT6XYFY63")
        .Add ("EX32FXC74A")
        .Add ("EXMXA38PK7")
        .Add ("EX9YC39CAJ")
        .Add ("EXKX238PK6")
        .Add ("EXCZ4HMF3Z")
        .Add ("EX2A672J3N")
        .Add ("EXK82E729H")
        .Add ("EXF2HU3UTN")
    
    End With

End Sub

Private Sub LiceN0()
    With LicNums
        .Add ("EXFEUJRUT2")
        .Add ("EX34HJP6TC")
        .Add ("EXT3H8EXRA")
        .Add ("EXC23FZ3A9")
        .Add ("EXH3JXCX4Z")
        .Add ("EX2P6T2639")
        .Add ("EXCMTTZFAY")
        .Add ("EXKUMCXA9T")
        .Add ("EX6F79R9HC")
        .Add ("EXFEU9RKHR")
        .Add ("EXPZFFZ6CY")
        .Add ("EXPZ46ATN8")
        .Add ("EXKJMAFMYF")
        .Add ("EX6F9A6N7T")
        .Add ("EX7UM2UNY4")
        .Add ("EXFF88RX6N")
        .Add ("EX2K3EMEC8")
        .Add ("EXA9PEMPMX")
        .Add ("EXCETU2F4N")
        .Add ("EX4EHJCUE2")
        .Add ("EXFC6JA6FM")
        .Add ("EXZZPFZENY")
        .Add ("EX668YTYJT")
        .Add ("EX7HKMFZ84")
        .Add ("EXFPUX3JEZ")
        .Add ("EXZKP482MJ")
        .Add ("EX99C37CN7")
        .Add ("EXAMFHAUCZ")
        .Add ("EXXJAPHAKT")
        .Add ("EX77YZHMXE")
        .Add ("EXKJMC7CYF")
        .Add ("EXHH8ZHY7F")
        .Add ("EXU7XZH874")
        .Add ("EXCAR7MRNY")
        .Add ("EX6EUX386P")
        .Add ("EXR4HURJ6A")
        .Add ("EX3EFHCU4Z")
        .Add ("EXE34H36EM")
        .Add ("EXENF7P64M")
        .Add ("EX8K9CXCKF")
        .Add ("EXHFX9RMJR")
        .Add ("EXU4J9FYUE")
        .Add ("EX4P48C7TZ")
        .Add ("EX7FYYFMXE")
        .Add ("EXPAT6M6C8")
        .Add ("EX6EJKR84N")
        .Add ("EXF47KRJ63")
        .Add ("EX879269K4")
        .Add ("EX2C673J3N")
        .Add ("EXC2T72U49")
        .Add ("EXXXNN7AK4")
        .Add ("EX7UYAH9XT")
        .Add ("EXJHKA7AXE")
        .Add ("EXAM238EAX")
        .Add ("EXU8MZXN9F")
        .Add ("EX769ZUZJT")
        .Add ("EXX6YM7KK4")
        .Add ("EXCAEX26PZ")
        .Add ("EXPCETAENM")
        .Add ("EXPZHH26EY")
        .Add ("EXTEJY3UFC")
        .Add ("EX447X27H2")
        .Add ("EXY834YEZK")
        .Add ("EXPC6JA6EM")
        .Add ("EX22TTAFP8")
        .Add ("EXK6MZ7ZYT")
        .Add ("EXUT8X486C")
        .Add ("EX3CFHCUCZ")
        .Add ("EXA93F83AJ")
        .Add ("EXT6JYTM8E")
        .Add ("EX2NP6NR28")
        .Add ("EXKUKAU98T")
        .Add ("EXFCT8PKHP")
        .Add ("EXHR7Y4KF2")
        .Add ("EXTFTY3XHN")
        .Add ("EXREFUCFRN")
        .Add ("EX29RR9FP8")
        .Add ("EXUFY8R9HC")
        .Add ("EXNNRFAF3J")
        .Add ("EX8JKNHZJ4")
        .Add ("EX44UK4JT3")
        .Add ("EXNZPT932X")
        .Add ("EXZYCT9C9J")
        .Add ("EXJT88EMH4")
        .Add ("EX3ET73UFM")
        .Add ("EXN234ZFRK")
        .Add ("EX4C4UCTRA")
        .Add ("EXR3F8EURA")
        .Add ("EXTETY3XHN")
        .Add ("EXECFX27R2")
        .Add ("EXJ78M69JF")
        .Add ("EXUFX8R8FC")
        .Add ("EXMARFMRNX")
        .Add ("EXZ8EEM3ZJ")
        .Add ("EX6H9A7N8T")
        .Add ("EXH6YA6Z8E")
        .Add ("EXKJAAU28T")
        .Add ("EX4P6HRHFA")
        .Add ("EXCARFMRNX")
        .Add ("EX67KMT9XF")
        .Add ("EXA92F83AJ")
        .Add ("EX8KACXNMH")
        .Add ("EXTP6K364A")
        .Add ("EXM2ERNF38")
        .Add ("EX768ZUZJT")
        .Add ("EXNYPEZCCX")
        .Add ("EX8J9CUCKF")
        .Add ("EXRP6J2XT2")
        .Add ("EX9KZRYC9U")
        .Add ("EX768PUZJT")
        .Add ("EX4CJJP74N")
        .Add ("EXNNFFZ6CY")
        .Add ("EX8U9MXMKF")
        .Add ("EX2YC39CAJ")
        .Add ("EXTT89FXJ4")
        .Add ("EXFF7YFX6E")
        .Add ("EXHUJM6XUR")
        .Add ("EXUR7M486C")
        .Add ("EX99C3Y3NX")
        .Add ("EXKXY2UAMF")
        .Add ("EXXJKZHKU3")
        .Add ("EX6E6XEUTC")
        .Add ("EXY923K4A7")
        .Add ("EXHEU9RKJR")
        .Add ("EXYXZEJN9J")
        .Add ("EXUHZMUZX4")
        .Add ("EXCNTU2FCY")
        .Add ("EXE26JNH42")
        .Add ("EXHUKM6YUR")
        .Add ("EX99C3Y3NY")
        .Add ("EXM9AP8AKT")
        .Add ("EX2YET9639")
        .Add ("EXAM2TZFAX")
        .Add ("EX3PR6NR3Z")
        .Add ("EXF8P3J396")
        .Add ("EXREUJRXT2")
        .Add ("EX6TKZTMX3")
        .Add ("EX63UHA6EK")
        .Add ("EX77YN7MX6")
        .Add ("EXZA24MCA8")
        .Add ("EXHFXATXT3")
        .Add ("EX3ARRY62K")
        .Add ("EXECF626R2")
        .Add ("EXJ78M68JP")
        .Add ("EX3A3TARR9")
        .Add ("EXU7Y2H284")
        .Add ("EX76KZFA8F")
        .Add ("EXC23FZ3C9")
        .Add ("EXPPTHMR4K")
        .Add ("EXAMFHATCZ")
        .Add ("EX2ZE4AEAK")
        .Add ("EXUU99FYJ4")
        .Add ("EXMKPE9E2H")
        .Add ("EXRNFUMFRY")
        .Add ("EXERFJ3TRN")
        .Add ("EXNM3HY3Z7")
        .Add ("EX7HXY4A7R")
        .Add ("EXHX9MJAY4")
        .Add ("EX324UNUEN")
        .Add ("EXT2TJ3HF2")
        .Add ("EXKYMP8PYU")
        .Add ("EXHR7Y4KH3")
        .Add ("EX2M2694PX")
        .Add ("EXZKN3KNYX")
        .Add ("EXZ8RR9EN7")
        .Add ("EXJ4KYEY62")
        .Add ("EXTRUKPU6N")
        .Add ("EX6TKZTMX4")
        .Add ("EXPNFFZ6CY")
        .Add ("EX8U9MXMKH")
        .Add ("EX97MAJNKT")
        .Add ("EXE26JNF3Z")
        .Add ("EXYX2PKP9T")
        .Add ("EXFTUXR8TC")
        .Add ("EXEP4X3JEZ")
        .Add ("EX2Z4JNTEM")
        .Add ("EX6RU8RU43")
        .Add ("EX9UAN6NXR")
        .Add ("EXHFK9EJUC")
        .Add ("EXAMEFATCY")
        .Add ("EXUH9NH9KR")
        .Add ("EX44UUCJTA")
        .Add ("EX6R7JTJHC")
        .Add ("EXHHYY4K7R")
        .Add ("EX8KACXNKH")
        .Add ("EXREFUEHRZ")
        .Add ("EXXHXZ6YJP")
        .Add ("EXNMP7AF29")
        .Add ("EXKUCCX39U")
        .Add ("EX6R7J3JRN")
        .Add ("EXF6K9FKHR")
        .Add ("EX29FFM42K")
        .Add ("EXJ69NTM84")
        .Add ("EX336UZ4FY")
        .Add ("EXRRJJ37FZ")
        .Add ("EXAXCPYPNJ")
        .Add ("EXMKNC8EZH")
        .Add ("EX6FJKEXF3")
        .Add ("EX64JYEJFN")
        .Add ("EX7FXX497R")
        .Add ("EXZAP4ZTEK")
        .Add ("EXJHK969X6")
        .Add ("EXYKAP9CMT")
        .Add ("EX6E7XFUUC")
        .Add ("EXZ924K4A7")
        .Add ("EXUHXZ6YJP")
        .Add ("EXF46K47FE")
        .Add ("EXR2JJ37FZ")
        .Add ("EXAYCP8PYT")
        .Add ("EXAZE4AFCK")
        .Add ("EXCMTTZFCY")
        .Add ("EXXHM26ZKF")
        .Add ("EXHFXATMJT")
        .Add ("EXR2F7EURA")
        .Add ("EX9YAEKCZ6")
        .Add ("EX436KPXFP")
        .Add ("EXNARFNTPY")
        .Add ("EX7HMNU97R")
        .Add ("EXPCHU2TEA")
        .Add ("EXRPUJNT6M")
        .Add ("EXHH88RY7P")
    
        End With

End Sub

Private Sub LiceN7()
    With LicNums
        .Add ("EX8UAMXNKH")
        .Add ("EX98NAJNKT")
        .Add ("EXRPH8R7EP")
        .Add ("EXCMC4M33K")
        .Add ("EXCPFH2JRM")
        .Add ("EXECT7NJFN")
        .Add ("EXAAEUZ4PZ")
        .Add ("EXHR99TY7P")
        .Add ("EX3N4FZFNJ")
        .Add ("EX4T8Y486E")
        .Add ("EXNY449RN8")
        .Add ("EXHFJ9EJUC")
        .Add ("EXT4783K4P")
        .Add ("EXC93F83AJ")
        .Add ("EXCM339FCY")
        .Add ("EX6JX96ZKR")
        .Add ("EXPNRFAF3A")
        .Add ("EXP2462HRM")
        .Add ("EXN2PTAT2Y")
        .Add ("EXUUKM69J3")
        .Add ("EXEZFT2TRM")
        .Add ("EXUTXMFM7P")
        .Add ("EXCNRTM4N9")
        .Add ("EXXTK2TMX4")
        .Add ("EXXU9P798F")
        .Add ("EX6EUU386P")
        .Add ("EXTRXKFK6E")
        .Add ("EXANPRM4E8")
        .Add ("EXC23F24CK")
        .Add ("EX8KAEXEMH")
        .Add ("EXZYCT9428")
        .Add ("EXXHX26ZKR")
        .Add ("EXF37KPJ63")
        .Add ("EXZZ3RX2CX")
        .Add ("EXE2T82U4A")
        .Add ("EXU6794K6P")
        .Add ("EXC93F94CJ")
        .Add ("EXNNE6N4AM")
        .Add ("EXFTJM4XUP")
        .Add ("EXPPTHCH4C")
        .Add ("EXM9AP9CMU")
        .Add ("EX6E7YFXUC")
        .Add ("EXZA24M4A7")
        .Add ("EXPN4HZURZ")
        .Add ("EX29PFN42K")
        .Add ("EX7JKMHZ94")
        .Add ("EXE2HTAU3Y")
        .Add ("EX4RU8C7TP")
        .Add ("EXMMPEJP2J")
        .Add ("EX6F9A6M7T")
        .Add ("EXRRHH27FZ")
        .Add ("EX64J8EJFP")
        .Add ("EXZZEEK3N8")
        .Add ("EX7TYAF9XT")
        .Add ("EXJJ92JZ7H")
        .Add ("EXKYNR82ZU")
        .Add ("EXECT7NTPY")
        .Add ("EX336UPUFN")
        .Add ("EXCNRTM6E9")
        .Add ("EXFPF7P64N")
        .Add ("EX4CTJP73M")
        .Add ("EXM8MRXN9F")
        .Add ("EX4CXXEJTA")
        .Add ("EXYJZAUAJF")
        .Add ("EXT388FXTC")
        .Add ("EXXUZNTY9R")
        .Add ("EXX723XEYJ")
        .Add ("EXF4X93X6C")
        .Add ("EX22EFM4P9")
        .Add ("EXERFJ3TRM")
        .Add ("EXFCT8PURZ")
        .Add ("EX2Z3TNTCM")
        .Add ("EXNYPFZCCX")
        .Add ("EXR4TXEX4Z")
        .Add ("EXAM2TZEAX")
        .Add ("EXKUAAU28T")
        .Add ("EXK6MZHZ73")
        .Add ("EXC3H7CHEM")
        .Add ("EX98A2X3M6")
        .Add ("EXPNF7P6CN")
        .Add ("EX2ZEUAECK")
        .Add ("EX9JZ27C9U")
        .Add ("EX3FU74XHN")
        .Add ("EXXUYNJN8H")
        .Add ("EX4R48C7TZ")
        .Add ("EXYXZEJP9J")
        .Add ("EXX6AAJZXF")
        .Add ("EXT4YZTAUF")
        .Add ("EXTP6U374A")
        .Add ("EXTT88EXJ4")
        .Add ("EX3PT7A6RN")
        .Add ("EXKKNC8CZH")
        .Add ("EXANPRM4N8")
        .Add ("EXPPF7P6EN")
        .Add ("EXY7MMT2XF")
        .Add ("EX9MCEYEMJ")
        .Add ("EX88ARX2MX")
        .Add ("EXT4683JUP")
        .Add ("EX8U9M6MUR")
        .Add ("EX6TX9F8UR")
        .Add ("EXP3UXR8RC")
        .Add ("EX9YP4XP27")
        .Add ("EXE26TYPA8")
        .Add ("EXPNRHAH3K")
        .Add ("EXFRTXP7RC")
        .Add ("EXZXN3XPZ7")
        .Add ("EXYXAR8A8H")
        .Add ("EXR2FFNURA")
        .Add ("EX336UPUFP")
        .Add ("EXAMPRK3C8")
        .Add ("EX4RT8RU4A")
        .Add ("EXU4XM6KJ3")
        .Add ("EX6TU8TX64")
        .Add ("EXRCU6N7E9")
        .Add ("EXPPTHMR4M")
        .Add ("EXAZP6YR28")
        .Add ("EXFCTHPURZ")
        .Add ("EXYJY27ZKR")
        .Add ("EX8T9M4MUP")
        .Add ("EXH6K9HMJR")
        .Add ("EXCNFHCUEZ")
        .Add ("EX89NPXAZJ")
        .Add ("EXMMPE9E2J")
        .Add ("EXCPRTN6P9")
        .Add ("EX74X94Y7C")
        .Add ("EXNNF7P6CM")
        .Add ("EXRP6K2639")
        .Add ("EX4CTTZ73N")
        .Add ("EX9MCEYFNJ")
        .Add ("EXNYC49RN8")
        .Add ("EXPPT8CH4A")
        .Add ("EX2P6U263A")
        .Add ("EXR378EURA")
        .Add ("EXTRXKPU7N")
        .Add ("EXX7Z3XCYH")
        .Add ("EXFF77PX6N")
        .Add ("EX3ZF4AFCK")
        .Add ("EXU6894K6R")
        .Add ("EX63U83X6C")
        .Add ("EX2C36NEC9")
        .Add ("EXMXACJPM7")
        .Add ("EX4EHRK3C8")
        .Add ("EXY7YN7MM6")
        .Add ("EXZA36M6C8")
        .Add ("EX87M2HC9H")
        .Add ("EX2APHN62K")
        .Add ("EXCCF626R9")
        .Add ("EXTPHXNHRZ")
        .Add ("EX992R9PZ8")
        .Add ("EX4E68PHFA")
        .Add ("EXUR7M476C")
        .Add ("EXZZ3RMRCM")
        .Add ("EXP3462HTM")
        .Add ("EXM9MRXPAH")
        .Add ("EXRAT6M6C8")
        .Add ("EXREUJRUT2")
        .Add ("EX779Z48K4")
        .Add ("EXK82E82AH")
        .Add ("EXAA33KRZJ")
        .Add ("EX4P7JRJHC")
        .Add ("EXC9PEMRNX")
        .Add ("EX99C3Y3N6")
        .Add ("EXKXZ2UCXH")
        .Add ("EXKJZEXZX6")
        .Add ("EX6HX96YJP")
        .Add ("EXYY2PKPAJ")
        .Add ("EXNZ34ZFPK")
        .Add ("EX3A3TARP9")
        .Add ("EX3E47P7E9")
        .Add ("EXUT8N6ZX6")
        .Add ("EXM9AP9CMJ")
        .Add ("EX6EXXEKTC")
        .Add ("EXN9NTYRCH")
        .Add ("EXPPT8CH4C")
        .Add ("EXFTUXR8HC")
        .Add ("EXHTKNHZJ6")
        .Add ("EXPR67CUF2")
        .Add ("EXH67K47FE")
        .Add ("EXNCTHNTPY")
        .Add ("EXY7CCJ2YH")
        .Add ("EXCPHJEXE2")
        .Add ("EXZYPP8EM7")
        .Add ("EX436UPUFZ")
        .Add ("EXZXN3UNY6")
        .Add ("EXT6UYF762")
        .Add ("EXTR7K374A")
        .Add ("EX2APRY62K")
        .Add ("EX4FU84XHN")
        .Add ("EXAZ2EY29H")
        .Add ("EXN2RTAT2Y")
    
        End With

End Sub

Private Sub LiceN8()
    With LicNums
        .Add ("EXY8MEK3YH")
        .Add ("EX8X9CJAY4")
        .Add ("EXJHK269X6")
        .Add ("EX9KMNJ2A6")
        .Add ("EXJ78N79JH")
        .Add ("EX9J33KRZJ")
        .Add ("EXAXCP7PYT")
        .Add ("EXNAETYRC9")
        .Add ("EXHFJ8CJUC")
        .Add ("EX9KCF9RAY")
        .Add ("EX2NFUNHRY")
        .Add ("EXTTJK48H2")
        .Add ("EXKJZNUZX4")
        .Add ("EXHF7ME8HP")
        .Add ("EXT6XZF873")
        .Add ("EXU6JKRZUE")
        .Add ("EX3PR6PT39")
        .Add ("EXYU9P72Z7")
        .Add ("EXPZE7CTP9")
        .Add ("EXYKZ382MT")
        .Add ("EX879PU2KU")
        .Add ("EXU4MM69J3")
        .Add ("EXN9P3K397")
        .Add ("EXYM3PY3Z7")
        .Add ("EXFPXX3JE2")
        .Add ("EX7TY9F8UR")
        .Add ("EXU6Z2UAXH")
        .Add ("EXTR7X474C")
        .Add ("EXPNRHCH3K")
        .Add ("EX3NR6NR28")
        .Add ("EXAKC4M32K")
        .Add ("EXMYNR8RZU")
        .Add ("EXY7MCJ2YH")
        .Add ("EXJR99TZ7R")
        .Add ("EXXK2NX2Y6")
        .Add ("EXX7ACJZXF")
        .Add ("EX99C37AN7")
        .Add ("EXNA4H94EK")
        .Add ("EX9UANXNMH")
        .Add ("EXKK227N9X")
        .Add ("EXAY3EKCZX")
        .Add ("EX98N3JNKT")
        .Add ("EXFFJ848U4")
        .Add ("EXJTKAU98R")
        .Add ("EXY7NN7CK6")
        .Add ("EX8HNPXA8T")
        .Add ("EXUTXMRX7P")
        .Add ("EXAMEHATCY")
        .Add ("EX9XANYNMJ")
        .Add ("EX2ZE39EAJ")
        .Add ("EXTT88EXH3")
        .Add ("EXECF626R9")
        .Add ("EXEPRUN6P9")
        .Add ("EXMZNR92ZX")
        .Add ("EX6FUX396P")
        .Add ("EX2A36M6C8")
        .Add ("EXHUMNJ2K6")
        .Add ("EXJ7YC6Z8F")
        .Add ("EX9822JPYH")
        .Add ("EXRCU7E762")
        .Add ("EXKHYMUZX4")
        .Add ("EXUU99HYK6")
        .Add ("EX63U83U6A")
        .Add ("EX32FXAFCM")
        .Add ("EX224TNTEN")
        .Add ("EX88ZZJNYF")
        .Add ("EXK89N79JR")
        .Add ("EXU4XM6KJ4")
        .Add ("EXX7Y2H284")
        .Add ("EXR2F7CUP9")
        .Add ("EXZKZ483NU")
        .Add ("EX88ARX2MU")
        .Add ("EX3M4FYFNJ")
        .Add ("EXYJN27ZKH")
        .Add ("EX779Z49K4")
        .Add ("EX3PHXPJT2")
        .Add ("EX43UUCJRA")
        .Add ("EXAYEPZRNK")
        .Add ("EXA9PEKPMX")
        .Add ("EXHFK969UC")
        .Add ("EXKH9NH9KR")
        .Add ("EXAA4UCT29")
        .Add ("EX3E68PHFA")
        .Add ("EX42FXCFEM")
        .Add ("EX88A2X2MX")
        .Add ("EXUTXAFK7F")
        .Add ("EXY7NN7CM6")
        .Add ("EXJTZZ7MJ4")
        .Add ("EXFTHK4KTP")
        .Add ("EXZJ2CUCKF")
        .Add ("EX4CJJP73N")
        .Add ("EXAY3FKE2Y")
        .Add ("EXPNRFAH3A")
        .Add ("EXTFHXFJTZ")
        .Add ("EXT3TJ3HH2")
        .Add ("EXT6X8P8FA")
        .Add ("EXA8P4KFCK")
        .Add ("EXAK2RZEAX")
        .Add ("EXK8KPUN9F")
        .Add ("EX436KRXFP")
        .Add ("EX6TU9TX64")
        .Add ("EXFP88RX6N")
        .Add ("EXA2F6AFCM")
        .Add ("EXAMRTZFAX")
        .Add ("EXJHYMUYU4")
        .Add ("EXAARTZE3M")
        .Add ("EXA9E4Z4P7")
        .Add ("EXC93F94CK")
        .Add ("EXUUKAU9JT")
        .Add ("EX6H79TJHE")
        .Add ("EXCAE6Z6PZ")
        .Add ("EX4FHJEX62")
        .Add ("EXPZRH2EEY")
        .Add ("EX8K9CXCKH")
        .Add ("EXK89P8AKJ")
        .Add ("EXXXZNTZ9T")
        .Add ("EX7H9C7N8T")
        .Add ("EX9XCPYPNJ")
        .Add ("EX98NCKNKU")
        .Add ("EX33HJP6TC")
        .Add ("EX2ACE9RAX")
        .Add ("EX2YP4XP27")
        .Add ("EXHX9MHAY4")
        .Add ("EXJUYZTAKF")
        .Add ("EXJ78M79JR")
        .Add ("EXEAR7NJFN")
        .Add ("EXZM3RZ428")
        .Add ("EXAZ3FME2Y")
        .Add ("EXAA34MR2J")
        .Add ("EXK7MZ7ZYT")
        .Add ("EXKJZMUZX4")
        .Add ("EXKHYCUNMU")
        .Add ("EX2Z3HMRCM")
        .Add ("EXRRUJNT6M")
        .Add ("EX2C673J4N")
        .Add ("EXE2HT3URN")
        .Add ("EXJT88EMH3")
        .Add ("EXCAE626PZ")
        .Add ("EXPCETAENX")
        .Add ("EX7F7YFXXE")
        .Add ("EXA9EUZ4PY")
        .Add ("EX7T9MUMJF")
        .Add ("EX76K9HKHR")
        .Add ("EXFHXY4K7R")
        .Add ("EXZKP483NK")
        .Add ("EX88A2X2M4")
        .Add ("EX8JMNJ2K6")
        .Add ("EXUTKAU9HR")
        .Add ("EXPM3HZ328")
        .Add ("EX7HXY497R")
        .Add ("EXFU7KF9X3")
        .Add ("EX2CEFAT4Y")
        .Add ("EX3PR6NR28")
        .Add ("EX8H92JZYF")
        .Add ("EX4CTJP74N")
        .Add ("EXJ78M79JF")
        .Add ("EX29TTAFP8")
        .Add ("EX88A26AM6")
        .Add ("EXJUMPJ2K6")
        .Add ("EXJ7ZC7Z9F")
        .Add ("EXKHZMUZX4")
        .Add ("EXCCRTZF3M")
        .Add ("EXFRUXP7RC")
        .Add ("EXZZRH2ENY")
        .Add ("EXKU99HNK6")
        .Add ("EXU7KZUM8E")
        .Add ("EXMKNC8EZ8")
        .Add ("EXMYZ3XCNJ")
        .Add ("EXTP7K3YU3")
        .Add ("EXN9NRYPAH")
        .Add ("EXRCT6N7C9")
        .Add ("EXFFJ8CHUA")
        .Add ("EXJ6KY7YXR")
        .Add ("EXAMNPK3M7")
        .Add ("EXTPHXPJT2")
        .Add ("EX33UK4HR2")
        .Add ("EX9MCEYPNJ")
        .Add ("EXTP6K374A")
        .Add ("EX4E68P8FA")
        .Add ("EXEPTUP7FA")
        .Add ("EXYKM2KNYU")
        .Add ("EXKXNRK3M7")
        .Add ("EXYY2PKPAT")
        .Add ("EXR3472H3M")
        .Add ("EXCNEHZRPK")
        .Add ("EXUT8N486C")
        .Add ("EX4ETU284N")
        .Add ("EXT4783JUP")
        .Add ("EXY7CCK2YH")
        .Add ("EXKXNPK3M7")
        .Add ("EXAA44MR2J")
        .Add ("EX2C46N7C9")
        .Add ("EX9JZPXC9U")
        .Add ("EX9X9EJAY4")
        .Add ("EXUUYMRX8R")
        .Add ("EXMYRTM4N9")
        .Add ("EXPPFFZ6CY")
        .Add ("EX2YC39EAJ")
        .Add ("EX2ZEUA63A")
        .Add ("EXRFXKTXT3")
        .Add ("EX3AFHN62K")
        .Add ("EX437X26HZ")
        .Add ("EXYKCRKENX")
        .Add ("EX7T9KUMJF")
        .Add ("EXFEUJRUR2")
        .Add ("EXXXZNJN9R")
        .Add ("EXX79A7N8T")
        .Add ("EXXUK2TMX4")
        .Add ("EXUUMAX9JT")
        .Add ("EXXUZNJN9H")
        .Add ("EXCNRTM4E9")
        .Add ("EXXJKZHKX3")
        .Add ("EX7J9CUCKF")
        .Add ("EXK7KPUN9F")
        .Add ("EXUUYCHM8F")
        .Add ("EXJUNPJ3K7")
        .Add ("EXUUMM69J3")
        .Add ("EXYXZPKP9T")
        .Add ("EXR4UXE742")
        .Add ("EXZXCR8C9H")
        .Add ("EXP2FFMUP9")
        .Add ("EX7UX9UY7E")
        .Add ("EXHRYY4KH3")
        .Add ("EXRCHX2TEA")
        .Add ("EXFEJ8CHTA")
        .Add ("EXZA462H3M")
        .Add ("EXPC6JA6FM")
        .Add ("EX2M4FNFE9")
        .Add ("EXNNRFAF3K")
        .Add ("EXR4UXE762")
        .Add ("EXRP6K363A")
        .Add ("EXHR77CKF2")
        .Add ("EX2CR62TEK")
        .Add ("EXNM3FYTPY")
        .Add ("EX6EUMT86P")
        .Add ("EXUHXZ4YJP")
        .Add ("EXNZ24YEPK")
        .Add ("EX4R8X486C")
        .Add ("EXYKN372MJ")
        .Add ("EX647Y37H2")
        .Add ("EXJH99TZ7R")
        .Add ("EXJ4KY6YXR")
        .Add ("EXPNRFAH3K")
        .Add ("EX6E7YFXUE")
        .Add ("EXR3472HTM")
        .Add ("EXHR99TZ7R")
        .Add ("EXTEU7P7E9")
        .Add ("EXJ8NCKNMU")
    
        End With

End Sub

Private Sub LiceN9()
    With LicNums
        .Add ("EXJYANKCZ6")
        .Add ("EXPCETAEPX")
        .Add ("EXFPH8R76N")
        .Add ("EXTR7M3YU3")
        .Add ("EX4CUXEJTA")
        .Add ("EXXJAPJAMT")
        .Add ("EX4P6HRHFC")
        .Add ("EXEEUX3H6P")
        .Add ("EXRPTJCJ4M")
        .Add ("EX87YC6Z8F")
        .Add ("EXPPH7R6EN")
        .Add ("EXHUJM6YUR")
        .Add ("EXPM4HZ428")
        .Add ("EXEME6N43M")
        .Add ("EX97M3JCAJ")
        .Add ("EXZ8NEM3ZJ")
        .Add ("EX324TY4EY")
        .Add ("EXXXMM6AK4")
        .Add ("EX6R8KTKHE")
        .Add ("EXCAREMRNX")
        .Add ("EXEEUU3H6P")
        .Add ("EX7JYA7ZKR")
        .Add ("EX8UZCH9XT")
        .Add ("EX9MEFATCY")
        .Add ("EXAA44MT2K")
        .Add ("EXNMRFAF3J")
        .Add ("EXRPHXNHRZ")
        .Add ("EXAA3TARZ9")
        .Add ("EX437XRXHP")
        .Add ("EXYKM2KNY6")
        .Add ("EXENF7P44M")
        .Add ("EXN2RUAU3Y")
        .Add ("EXEAT7NJFN")
        .Add ("EXF4RU2TEK")
        .Add ("EXHHK269X4")
        .Add ("EX7FYYFMUE")
        .Add ("EX6R8J3KTN")
        .Add ("EXMAREMRNX")
        .Add ("EX3PHXPHTZ")
        .Add ("EXKK227NAX")
        .Add ("EXJ79NTM86")
        .Add ("EXEPTUN6PA")
        .Add ("EXEA4H94CK")
        .Add ("EXUUMCX9JT")
        .Add ("EXPN4J2439")
        .Add ("EXNACRAENK")
        .Add ("EXF2HUAU3Y")
        .Add ("EXJ7ZC729F")
        .Add ("EXFEH737T3")
        .Add ("EX9Y2EY29H")
        .Add ("EX292R9PN8")
        .Add ("EXJXMN7PXT")
        .Add ("EXHFXATMKT")
        .Add ("EX2NP4MP2Y")
        .Add ("EXNCTFNTPY")
        .Add ("EXY8CEK2YH")
        .Add ("EX88A269M4")
        .Add ("EXEE66PU4M")
        .Add ("EXM8N292ZX")
        .Add ("EXKJZNXZY6")
        .Add ("EX66KKR8UF")
        .Add ("EXR3FHNURA")
        .Add ("EXN9NTYPAH")
        .Add ("EX647MRYHR")
        .Add ("EXX89A7NZT")
        .Add ("EX4RT7RU43")
        .Add ("EX4CUUCJRA")
        .Add ("EXT6YZUAXF")
        .Add ("EXTF8MF9JP")
        .Add ("EX9922JPYH")
        .Add ("EX77KMT9XF")
        .Add ("EXAMNRK3M7")
        .Add ("EX2YP4YR27")
        .Add ("EXRRH8R7FP")
        .Add ("EXJUKN6YXR")
        .Add ("EX768YTYJT")
        .Add ("EXFRTXP7HC")
        .Add ("EX6TU8TX6A")
        .Add ("EXENF6N44M")
        .Add ("EX87M3JCAJ")
        .Add ("EXFR6Y4JF2")
        .Add ("EXC23F24CA")
        .Add ("EXMXEEY3AU")
        .Add ("EXFFXX4J7R")
        .Add ("EX7TYAF9XR")
        .Add ("EXEEH737TA")
        .Add ("EXR4HXRK7C")
        .Add ("EXK89N8AKT")
        .Add ("EXU4UK4JJ3")
        .Add ("EXU7XZHZ74")
        .Add ("EXY8AC8PZU")
        .Add ("EXE34H36EC")
        .Add ("EXK9PEKPMU")
        .Add ("EXAMRTZEAX")
        .Add ("EXP2TXP7RA")
        .Add ("EX77ZZHMXE")
        .Add ("EXN9R4A43Y")
        .Add ("EXNK2PY3Z7")
        .Add ("EXEEUU2H4N")
        .Add ("EXFEH738TA")
        .Add ("EX33TJ3HR2")
        .Add ("EX32FXCFEM")
        .Add ("EXJ7KNTM8E")
        .Add ("EX98CTY3NX")
        .Add ("EX2AEF9T3Y")
        .Add ("EXR2HH27EZ")
        .Add ("EXZK3CXEMH")
        .Add ("EX3AHHN63M")
        .Add ("EX2MR493NK")
        .Add ("EXHTMNH2J6")
        .Add ("EXZMETMFPY")
        .Add ("EX88ZZHNXF")
        .Add ("EXZK2CKCA7")
        .Add ("EXYXA27A8F")
        .Add ("EXNP46AREZ")
        .Add ("EX8KMNJ2K6")
        .Add ("EXZ8NNX3ZJ")
        .Add ("EX7KYA72MT")
        .Add ("EXYX2PKPAJ")
        .Add ("EXH67K68HP")
        .Add ("EX43HYE86E")
        .Add ("EX4P48C6RY")
        .Add ("EXKKN48CZ8")
        .Add ("EX7T8K4KTP")
        .Add ("EXJTYZ6MH3")
        .Add ("EX9XANXNMH")
        .Add ("EXFEH838TA")
        .Add ("EX2ZET9EAJ")
        .Add ("EXHR77EKH3")
        .Add ("EXAZ2EY3A8")
        .Add ("EX8YC38C9J")
        .Add ("EX8UZAH9XT")
        .Add ("EXP3UXR8TC")
        .Add ("EX7UM2UNY6")
        .Add ("EXJHYATYU3")
        .Add ("EXKYNP8PYU")
        .Add ("EXUR7M4YX4")
        .Add ("EX9MNPK3A7")
        .Add ("EXF4J8FKHP")
        .Add ("EXRP6U2639")
        .Add ("EXMY23XEYJ")
        .Add ("EXR2F8EURA")
        .Add ("EXUFY9R9HC")
        .Add ("EX4R7X486C")
        .Add ("EXKU227NK6")
        .Add ("EXTFJY4XHE")
        .Add ("EX98C37AN6")
        .Add ("EXJ7ZC6Z9F")
        .Add ("EX4R68E7TZ")
        .Add ("EXPNTHMR3K")
        .Add ("EXECT8PJFN")
        .Add ("EXEN4U2HEZ")
        .Add ("EXH4KXEY62")
        .Add ("EX8YC28C9H")
        .Add ("EX7HMNUA7R")
        .Add ("EX43H7EHEN")
        .Add ("EXUX9AHZK6")
        .Add ("EX668YTYJ3")
        .Add ("EX63U83X6A")
        .Add ("EXRRUJEJ6E")
        .Add ("EXNACRAENM")
        .Add ("EXUJZNUZX4")
        .Add ("EXNNEEY4CX")
        .Add ("EX6R7JTKHE")
        .Add ("EXEARFNRPY")
        .Add ("EX66JKR8UE")
        .Add ("EX4PU8C7TN")
        .Add ("EX8K9CXMKF")
        .Add ("EXPM3HZ428")
        .Add ("EXJX9NJAY4")
        .Add ("EXY7ZP8MM6")
        .Add ("EX7J8AUAJF")
        .Add ("EXNK2FYTPY")
        .Add ("EXZKZ382MT")
        .Add ("EXYX2FKPAJ")
        .Add ("EXNZ34YFPK")
        .Add ("EXNACR9CMK")
        .Add ("EXE4J8FJHP")
        .Add ("EX6FKMT96P")
        .Add ("EXN8P3932X")
        .Add ("EXKJNC8CZF")
        .Add ("EX9MCFYPNJ")
        .Add ("EX97N3JNKT")
        .Add ("EXAZ2EY2AH")
        .Add ("EXU7MP8PYU")
        .Add ("EXJHYCUNKU")
        .Add ("EX769PUZJT")
        .Add ("EXYKM2KNYX")
        .Add ("EXYHZAUAJE")
        .Add ("EX6U9Z697E")
        .Add ("EXHTMNJ2J6")
        .Add ("EXACRTZE3M")
        .Add ("EXTEJY3XHE")
        .Add ("EXMKARJCMU")
        .Add ("EXCC6XET3A")
        .Add ("EXCPEH2RPK")
        .Add ("EXX6KKRZUE")
        .Add ("EXNMRFAF29")
        .Add ("EXMZ23YEPJ")
        .Add ("EX8HZZHNYF")
        .Add ("EXMY349RM7")
        .Add ("EXT3H8EXRC")
        .Add ("EXRCRX2UFM")
        .Add ("EXR3673JTN")
        .Add ("EX8XYAXZ86")
        .Add ("EXY7PP8CM6")
        .Add ("EX224TNTEY")
        .Add ("EXHTXYR9TE")
        .Add ("EXHE7KC7FN")
        .Add ("EXT3HJPXTC")
        .Add ("EX2ER62UFM")
        .Add ("EXKXY2UAMH")
        .Add ("EXNM3HZTPZ")
        .Add ("EX7T7AF9X3")
        .Add ("EX668NTYJT")
        .Add ("EXPAT6C64Z")
        .Add ("EXPM3RZ328")
        .Add ("EXFFUX3J6P")
        .Add ("EXYY2PKPAU")
        .Add ("EXFC6JC7FM")
        .Add ("EXP2RUA43Y")
        .Add ("EXAAE4Z4PY")
        .Add ("EXE34H24EA")
        .Add ("EXKUCCX29T")
        .Add ("EXK7MZHZ74")
        .Add ("EX3P6U374A")
        .Add ("EX66KMT8XF")
        .Add ("EXK8APXN97")
        .Add ("EXKJMA7CYF")
        .Add ("EXHTXYT9TE")
        .Add ("EXTTKAU8HR")
        .Add ("EX2YCT9CAJ")
        .Add ("EXFR67CKF2")
        .Add ("EXFT7KF8U2")
        .Add ("EXN234ZFPK")
        .Add ("EXAZ2EZ3AJ")
        .Add ("EXRN4J2UT2")
        .Add ("EXT2JJ38F2")
        .Add ("EXC2F6CHEM")
        .Add ("EXKKNCHMZH")
        .Add ("EXREJX3UFC")
    
    End With
End Sub

Private Sub CreateLiceGens()

    Set LicNums = New Collection
    
    With LicNums
        .Add ("EXT4784K4P")
        .Add ("EXZYPFZEMY")
        .Add ("EX6H8ATKJE")
        .Add ("EXXT8N697E")
        .Add ("EXCR6HE7TZ")
        .Add ("EX324UPUEN")
        .Add ("EXX6YN7KK4")
        .Add ("EXYXAR83Z7")
        .Add ("EXU499FYTE")
        .Add ("EXUUYMRY8R")
        .Add ("EXKYPRM4N8")
        .Add ("EXAZR6ZR38")
        .Add ("EXTTJJ38F2")
        .Add ("EXRCU6E742")
        .Add ("EXZYC28C9H")
        .Add ("EX9X2EJCZU")
        .Add ("EX879ZU2K4")
        .Add ("EXJF8ME8HP")
        .Add ("EX88ZP8NY7")
        .Add ("EXAMPRM4C8")
        .Add ("EXANCFZFNK")
        .Add ("EXJFXATNKT")
        .Add ("EX8HYPXA8T")
        .Add ("EXFEJZ48T3")
        .Add ("EX8UAM6NXR")
        .Add ("EXH6K9HKJR")
        .Add ("EX2MR694PM")
        .Add ("EXUU99FYK6")
        .Add ("EXTRXKFK7N")
        .Add ("EXJUXYT9UE")
        .Add ("EXNACRAENU")
        .Add ("EXX6XM6KJ4")
        .Add ("EXUT8N6ZX4")
        .Add ("EXKU927NJ4")
        .Add ("EXH6JMTK7C")
        .Add ("EX779PUZKU")
        .Add ("EXEN66NU3M")
        .Add ("EXXK2PY2Z7")
        .Add ("EXE36JPH42")
        .Add ("EXJ6KY6YXR")
        .Add ("EXA82E729H")
        .Add ("EXY8MNU3YH")
        .Add ("EXFEJ848T3")
        .Add ("EX9JA3K2ZJ")
        .Add ("EXR4UYEY62")
        .Add ("EX29PHN42K")
        .Add ("EXE3H7EHFN")
        .Add ("EX4CJJR74N")
        .Add ("EX336UZ4FZ")
        .Add ("EXTRJ9T8FR")
        .Add ("EX76K2FKHP")
        .Add ("EXEN46AHEZ")
        .Add ("EXNZ24YEPJ")
        .Add ("EXJ78M79JH")
        .Add ("EXK7N2H284")
        .Add ("EXK8NCKNMU")
        .Add ("EX447X26H2")
        .Add ("EXKXPRK4M8")
        .Add ("EXPAR4A43Y")
        .Add ("EXYU9Z798F")
        .Add ("EXXXACJZM7")
        .Add ("EXK8APUN97")
        .Add ("EXTRUKFK6N")
        .Add ("EXJH92JZ7F")
        .Add ("EX8J9CXMKF")
        .Add ("EXYXAR7A8F")
        .Add ("EXHRJ9T77P")
        .Add ("EXCZCFME27")
        .Add ("EXZMN4MPZY")
        .Add ("EXJHYMTYU3")
        .Add ("EXMMPE9E28")
        .Add ("EX7UXAUY7E")
        .Add ("EXJFXATMKT")
        .Add ("EXPAPTZRCJ")
        .Add ("EX8JMNH296")
        .Add ("EXZMN3MPZX")
        .Add ("EXTCU7N7E9")
        .Add ("EXREXJRXT2")
        .Add ("EXFRXY4JF2")
        .Add ("EX8822JNYF")
        .Add ("EXEPTUP7PA")
        .Add ("EX43U82U4A")
        .Add ("EX22TJ3HPZ")
        .Add ("EX8KAEXNMH")
        .Add ("EXJTJ9T87R")
        .Add ("EXA8N4KECK")
        .Add ("EXK7KPUM8E")
        .Add ("EXJJM37AY6")
        .Add ("EXAY3FKC2X")
        .Add ("EXJHK9FKXE")
        .Add ("EXUH9NF9KR")
        .Add ("EXA933KRZJ")
        .Add ("EXPNTHCH3K")
        .Add ("EXJ7ZC6Z8F")
        .Add ("EXP3RUC43Y")
        .Add ("EX43HYEHFN")
        .Add ("EXMZCRMF38")
        .Add ("EX3A4UCRR9")
        .Add ("EXJXMN7PYT")
        .Add ("EXT3H8FXTC")
        .Add ("EX2M2493NU")
        .Add ("EXZY2HMRAK")
        .Add ("EXEN77PU4M")
        .Add ("EX6P7J3JRM")
        .Add ("EX4RU8E7TP")
        .Add ("EXJJMAFKYF")
        .Add ("EX2A673J3N")
        .Add ("EXRE7KC7FN")
        .Add ("EXPAT6C63Z")
        .Add ("EX64J8FJFP")
        .Add ("EXRPUJEJ6M")
        .Add ("EXKJZEUZX4")
        .Add ("EX9KZ27E9U")
        .Add ("EXFFJZ48U3")
        .Add ("EXMKPEJN2H")
        .Add ("EXJ6MZ7ZXT")
        .Add ("EX86K9HMJR")
        .Add ("EX7YCCK2N8")
        .Add ("EXR3673J4N")
        .Add ("EX8HYY4A7R")
        .Add ("EXYXZPKP9J")
        .Add ("EXY6YN7MK6")
        .Add ("EXE3EJNH49")
        .Add ("EXCCFX26R2")
        .Add ("EXFN77PX4N")
        .Add ("EXZN4RZ428")
        .Add ("EXCAE48EP8")
        .Add ("EX3C683J4P")
        .Add ("EX2MEUMFPY")
        .Add ("EXMYZ3XCYH")
        .Add ("EX3ARRZ63M")
        .Add ("EX6FHKEX72")
        .Add ("EXA9E48CN7")
        .Add ("EXPAR4C43Y")
        .Add ("EX98N4KECK")
        .Add ("EXPZE6CTP9")
        .Add ("EXX47MRXHR")
        .Add ("EX2NR6NR2Z")
        .Add ("EXZ8PP8EN7")
        .Add ("EXH6M9HMJR")
        .Add ("EXN9ETYRC9")
        .Add ("EX447X26HZ")
        .Add ("EX44JJR7UE")
        .Add ("EXTFJY3XHE")
        .Add ("EXTPHXPHTZ")
        .Add ("EXA9C3Y4NY")
        .Add ("EXHTUYR8JE")
        .Add ("EXE34J36EM")
        .Add ("EX43HYC86C")
        .Add ("EX4P47C6RY")
        .Add ("EXKJM37AY7")
        .Add ("EX8XYAUY76")
        .Add ("EXYJZAJA96")
        .Add ("EXUT8Y687E")
        .Add ("EXZ82P9NN7")
        .Add ("EXXUYCHCZ8")
        .Add ("EX8U9M6MUP")
        .Add ("EXXYACJZM7")
        .Add ("EXNMPFAF2J")
        .Add ("EXCNRTN6N9")
        .Add ("EX43HYCHEN")
        .Add ("EXJU89FNJ4")
        .Add ("EX9M2C93NU")
        .Add ("EXZA24M4A8")
        .Add ("EX74KZFA8F")
        .Add ("EXMXA39PM7")
        .Add ("EXAZC7A6RY")
        .Add ("EX6R7J3JRM")
        .Add ("EXUJZMUZX4")
        .Add ("EXT3H8EXTC")
        .Add ("EXJJM37AY7")
        .Add ("EX9KMPJ2A7")
        .Add ("EXZN4TZ428")
        .Add ("EXTR7U374A")
        .Add ("EXFF8YHX6E")
        .Add ("EXMZPT932X")
        .Add ("EXRPTJEJ4C")
        .Add ("EXJ78M69JP")
        .Add ("EXRZRH2FEZ")
        .Add ("EX9Y9EJCZ6")
        .Add ("EX9JNPXC8T")
        .Add ("EX3R7X374A")
        .Add ("EXHTYZ6MH3")
        .Add ("EXCNFJCUEZ")
        .Add ("EXUFY9H984")
        .Add ("EX98NCJNKU")
        .Add ("EXHHYZ6K8T")
        .Add ("EXYJN372MJ")
        .Add ("EX7JKMHZJ4")
        .Add ("EXPCETCFPX")
        .Add ("EX98ATY3MX")
        .Add ("EXTFHXEHTP")
        .Add ("EX8HZZHNXF")
        .Add ("EX7R8K3KTN")
        .Add ("EXHRYY4KF3")
        .Add ("EXRT78EUH3")
        .Add ("EXYKN382MJ")

    End With
    
    LiceN0
    LiceN1
    LiceN2
    LiceN3
    LiceN4
    LiceN5
    LiceN6
    LiceN7
    LiceN8
    LiceN9
    
End Sub



Public Sub KillLice()

    Dim Temp As String
    Temp = Environ("temp")
    
    Dim settingsL As String
    settingsL = Temp & "\EXDRW_GT_LICE.txt"
    
    
    If Len(Dir$(settingsL)) > 0 Then Kill settingsL

    CreateLice
    

End Sub
Public Sub CreateLice()


Dim Temp As String
Temp = Environ("temp")

Dim settingsL As String
settingsL = Temp & "\EXDRW_GT_LICE.txt"


Dim fileNumL As Integer
fileNumL = FreeFile()

If Dir(settingsL) <> "" Then
    'file exist
    Open settingsL For Input As #fileNumL
    Dim lnL As Integer
    lnL = 1

    Do Until EOF(fileNumL)
        Dim readdataL As String
        readdataL = ""
        
        Line Input #fileNumL, readdataL 'adding line to read the whole line, not only first 128 positions
        
        
        If lnL = 15 Then
            ActLice = readdataL
        
        End If
        lnL = lnL + 1
        
        
    Loop
    
    
    
Close #fileNumL
    
    
    
Else
    'file does not exist
    Dim strprintL As String
    strprintL = ""
    Dim i As Integer
    For i = 1 To 30
        If i = 15 Then
            If ActLice = "" Then
                ActLice = "TRIAL-TRIAL"
            End If
            
            strprintL = strprintL & ActLice & vbCrLf
            
        ElseIf i = 30 Then
            strprintL = strprintL & RandomDigitsNumber(1)
        Else
            strprintL = strprintL & RandomDigitsNumber(1) & vbCrLf
        End If
    Next
                


    'this will start creating the txt document
    Dim fsoL As Object
    Set fsoL = CreateObject("Scripting.filesystemobject")
        
    Dim fileoutL As Object
        
    Set fileoutL = fsoL.createtextfile(settingsL, True, True)
    fileoutL.write strprintL
    fileoutL.Close

    
End If

CheckLiceNumb


End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public WithEvents App As Application
Attribute App.VB_VarHelpID = -1


Private Sub Workbook_SheetChange(ByVal sh As Object, ByVal Target As Range)
    For ii = 1 To ActiveWorkbook.ActiveSheet.Shapes.Count
        If ActiveSheet.Shapes("EXCEL_DRAW_CADD").Visible = True Then
          For i = 1 To ActiveWorkbook.Names.Count
            If Not Intersect(Target, Names(i)) Is Nothing Then
                CheckUpdatedCell
                Exit Sub
            End If
            Exit Sub
            
        Next
    End If
End Sub



Private Sub App_SheetChange(ByVal sh As Object, ByVal Target As Range)

    On Error Resume Next

    Dim strgcell As String
    strgcell = ActiveCell.Address


    For ii = 1 To ActiveWorkbook.ActiveSheet.ChartObjects.Count
        If ActiveSheet.ChartObjects(ii).Visible = True Then
        
          For i = 1 To ActiveWorkbook.Names.Count
            If Not Intersect(Target, Names(i)) Is Nothing Then
               
                ActiveWorkbook.Selection = Range(strgcell)
                CheckUpdatedCell
                Range(strgcell).Select
                Exit Sub
                
            End If
            Exit Sub
            
        Next
        End If
    Next
    
    

    For ii = 1 To ActiveWorkbook.ActiveSheet.Shapes.Count
        If ActiveSheet.ChartObjects(tb1).Visible = True Or ActiveSheet.Shapes("EXCEL_DRAW_CADD").Visible = True Then
        
          For i = 1 To ActiveWorkbook.Names.Count
            If Not Intersect(Target, Names(i)) Is Nothing Then
               
                ActiveWorkbook.Selection = Range(strgcell)
                CheckUpdatedCell
                Range(strgcell).Select
                Exit Sub
                
            End If
            Exit Sub
            
        Next
        End If
    Next



    

End Sub


Private Sub App_WorkbookBeforeClose(ByVal Wb As Workbook, Cancel As Boolean)
End Sub

Private Sub App_WorkbookBeforeSave(ByVal Wb As Workbook, ByVal SaveAsUI As Boolean, Cancel As Boolean)
End Sub




Private Sub Workbook_Open()

  Set App = Application
    
    'this will run if it is a trial
CreateDefaults
    
 'TrialTest
 
End Sub


Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{D295C040-A4C1-46EB-9BDD-980F94959D66}{AF63A731-E649-4D27-A479-4D80B71DE5B6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private Sub CommandButton1_Click()
On Error Resume Next

Set FD = Application.FileDialog(msoFileDialogFolderPicker)



With FD
    
    .Title = "Save File"
    '.InitialFileName = "ExcelPac"
    If .Show = -1 Then
        'this is where we start saving the file
        UserForm1.TextBox1.text = .SelectedItems(1)
        LastSave
        
    End If
End With

End Sub

Private Sub CommandButton2_Click()
exportfile
Unload Me

End Sub




Private Sub TextBox1_Change()
LastSave

End Sub

Private Sub UserForm_Initialize()
CheckLiceNumb

If IsBobMarley = True Then
    'IfTrial
    Unload Me
End If


On Error Resume Next


Dim FullName As String
Dim FirstSpace As Integer
FirstSpace = 0
FullName = ActiveWorkbook.Name
FirstSpace = InStr(FullName, ".")

If FirstSpace = 0 Then
firstname = FullName
Else
firstname = Left(FullName, FirstSpace - 1)
End If




    TextBox2.text = firstname & " Conversion"

    
    With ComboBox1
        .AddItem (".dxf")
        .AddItem (".txt")
        .AddItem (".pdf")
        .AddItem (".html")
        .AddItem (".xls")
        .AddItem (".jpg")
        .AddItem (".png")
        .AddItem (".csv")
        .text = ".dxf"
        
    End With
        
        
        ResortLastSave
        
        If TextBox1.text = "" Then
        
            TextBox1.text = ActiveWorkbook.Path
        End If
        
End Sub
Attribute VB_Name = "UserForm10"
Attribute VB_Base = "0{0B046FE8-CE9B-41F7-B5FD-CAD1E5A1F4CF}{6510D7AC-7AC7-4C19-B149-A7B0C4ED635E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub ComboBox1_Change()

    If ComboBox1.ListIndex = 0 Then
        TextBox1.Visible = True
        Label2.Visible = True
    Else
        Label2.Visible = False
        TextBox1.Visible = False
        TextBox1.text = ""
    End If
    

End Sub

Private Sub CommandButton1_Click()

    If ComboBox1.ListIndex = 0 Then
        'new sheet
        On Error Resume Next
        Sheets.Add After:=ActiveSheet
        If TextBox1.text = "" Then
        ElseIf Len(TextBox1.text) > 0 Then
            ActiveSheet.Name = TextBox1.text
        End If
        On Error GoTo 0
        
        ActiveSheet.Range("B1").Value = "X1"
        ActiveSheet.Range("C1").Value = "Y1"
        ActiveSheet.Range("D1").Value = "Z1"
        
        
        ActiveSheet.Range("E1").Value = "X2"
        ActiveSheet.Range("F1").Value = "Y2"
        ActiveSheet.Range("G1").Value = "Z2"
        
        UserForm9.SetUpTheInput (2)
        
        
    Else
        'existing sheet
        Worksheets(ComboBox1.SelText).Activate
        Dim b As Integer
        Dim c As Integer
        Dim d As Integer
        Dim e As Integer
        Dim f As Integer
        Dim g As Integer
        
        b = ActiveSheet.Range("B65536").End(xlUp).Row
        c = ActiveSheet.Range("C65536").End(xlUp).Row
        d = ActiveSheet.Range("D65536").End(xlUp).Row
        e = ActiveSheet.Range("E65536").End(xlUp).Row
        f = ActiveSheet.Range("F65536").End(xlUp).Row
        g = ActiveSheet.Range("G65536").End(xlUp).Row
        
        Dim l As Integer
        
        If b >= c And b >= d And b >= e And b >= f And b >= g Then
            'b is highest
            l = b
        ElseIf c >= d And c >= e And c >= f And c >= g Then
            'c is highest
            l = c
        ElseIf d >= e And d >= f And d >= g Then
            'd is highest
            l = d
        ElseIf e >= f And e >= g Then
            'e is highest
            l = e
        ElseIf f >= g Then
            'f is highest
            l = f
        Else
            'g wins
            l = g
        End If
        
        l = l + 1
        ActiveSheet.Range("B" & l).Value = "X1"
        ActiveSheet.Range("C" & l).Value = "Y1"
        ActiveSheet.Range("D" & l).Value = "Z1"
        
        
        ActiveSheet.Range("E" & l).Value = "X2"
        ActiveSheet.Range("F" & l).Value = "Y2"
        ActiveSheet.Range("G" & l).Value = "Z2"
        
        
        UserForm9.SetUpTheInput l + 1
        
        
    End If
    

    ActiveSheet.Range("A1").Activate
    
    UserForm9.Show
    Unload Me
    

End Sub

Private Sub UserForm_Initialize()


    TextBox1.Visible = False
    Label2.Visible = False
        
    With ComboBox1
        .AddItem "Create New Sheet"
        Dim st As Worksheet
        For Each st In Worksheets
            .AddItem st.Name
        Next
    End With

End Sub
Attribute VB_Name = "UserForm11"
Attribute VB_Base = "0{9B2ACF4C-E8C0-4F87-A9DF-C331D82D08A5}{BAC3C45A-D73A-4810-9FDE-5C9D8AADB526}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text


Private Sub CommandButton1_Click()
    ThisWorkbook.FollowHyperlink Address:="http://www.graytechnical.com/exceldraw/", NewWindow:=True
End Sub

Private Sub CommandButton2_Click()
    Dim strg As String
    strg = TextBox1.text
    strg = Replace(strg, "-", "")
    If Len(strg) = 10 Then
    Else
        MsgBox ("Incorrect length of license. License numbers are 10 characters in length.")
        Exit Sub
    End If
    
    ActLice = strg
    KillLice
    CheckLiceNumb
    
    If IsBobMarley = False Then
        MsgBox ("Excel Draw has been activated with license number " & ActLice & ". This license number is only valid for one install. To insatll on another machine please deactivate this license first.")
        Unload Me
    Else
        MsgBox ("Activation failed for license number " & TextBox1.text & ". Please check to make sure all characters are correct and try again.")
    End If
    
End Sub

Private Sub CommandButton3_Click()

    TextBox1.text = ActLice
    ActLice = ""
    KillLice
    CheckLiceNumb
    
    
    If IsBobMarley = False Then
        MsgBox ("Failed to deactivated with license number " & ActLice & ". If you have trouble deactivating your license please contact our support at 'support@graytechnical.com'.")
    Else
        MsgBox ("Deactivation of license number " & TextBox1.text & " has succeeded. Please write down this license number so you may re-activate it at a later date.")
    End If
    
End Sub



Private Sub UserForm_Error(ByVal Number As Integer, ByVal Description As MSForms.ReturnString, ByVal SCode As Long, ByVal Source As String, ByVal HelpFile As String, ByVal HelpContext As Long, ByVal CancelDisplay As MSForms.ReturnBoolean)

End Sub

Private Sub UserForm_Initialize()

    TextBox1.text = ActLice
    

End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{5A8599DD-ABC3-4264-861D-9E4297C10F09}{A43A021E-D10D-4274-B450-3D8A3E5B7E12}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Dim tb1 As String
Dim cb1 As String
Dim cb2 As String
Dim cb3 As String
Dim cb4 As String

Dim DX As Double
Dim DY As Double
Dim DZ As Double
Dim DD As Double

Dim cx1 As Double
Dim cy1 As Double
Dim cz1 As Double
Dim cx2 As Double
Dim cy2 As Double
Dim cz2 As Double

Dim O1_T As String
Dim O1_X1 As String
Dim O1_Y1 As String
Dim O1_Z1 As String
Dim O1_X2 As String
Dim O1_Y2 As String
Dim O1_Z2 As String

Dim O2_T As String
Dim O2_X1 As String
Dim O2_Y1 As String
Dim O2_Z1 As String
Dim O2_X2 As String
Dim O2_Y2 As String
Dim O2_Z2 As String





Private Sub CheckBox1_Click()

If CheckBox1.Value = True Then

    imagepreviewer
Else
    
    graphnr
    
    If CheckBox2.Value = False Then
    DeleteONLYgraph
    End If
    
End If

ListBox1.SetFocus


End Sub

Private Sub CheckBox2_Click()

If CheckBox2.Value = False Then
DeleteONLYgraph
Else


    graphnr
    
    If CheckBox1.Value = True Then
        imagepreviewer
    Else
        graphnr
    End If

End If

ListBox1.SetFocus

End Sub

Private Sub CommandButton1_Click()

deleterange2

lstpop
TextBox1.text = ""
End Sub

Private Sub CommandButton2_Click()

DeleteObject
lstpop

TextBox1.text = ""
End Sub











Private Sub CommandButton4_Click()
ClearNames
lstpop
DeleteONLYgraph
TextBox1.text = ""
End Sub

Private Sub CommandButton5_Click()

MeRefresh

End Sub

Public Sub MeRefresh()
lstpop

graphnr
    If CheckBox2.Value = False Then
    DeleteONLYgraph
    End If
End Sub

Private Sub CommandButton6_Click()

UserForm1.Show


End Sub

Private Sub CommandButton7_Click()

    ShowGraphOri


End Sub

Private Sub CommandButton8_Click()


    'existing sheet
        'Worksheets(ComboBox1.SelText).Activate
        Dim b1 As Integer
        Dim c1 As Integer
        Dim d1 As Integer
        Dim e1 As Integer
        Dim f1 As Integer
        Dim g1 As Integer
        
        b1 = ActiveSheet.Range("B65536").End(xlUp).Row
        c1 = ActiveSheet.Range("C65536").End(xlUp).Row
        d1 = ActiveSheet.Range("D65536").End(xlUp).Row
        e1 = ActiveSheet.Range("E65536").End(xlUp).Row
        f1 = ActiveSheet.Range("F65536").End(xlUp).Row
        g1 = ActiveSheet.Range("G65536").End(xlUp).Row
        
        Dim l1 As Integer
        
        If b1 >= c1 And b1 >= d1 And b1 >= e1 And b1 >= f1 And b1 >= g1 Then
            'b is highest
            l1 = b1
        ElseIf c1 >= d1 And c1 >= e1 And c1 >= f1 And c1 >= g1 Then
            'c is highest
            l1 = c1
        ElseIf d1 >= e1 And d1 >= f1 And d1 >= g1 Then
            'd is highest
            l1 = d1
        ElseIf e1 >= f1 And e1 >= g1 Then
            'e is highest
            l1 = e1
        ElseIf f1 >= g1 Then
            'f is highest
            l1 = f1
        Else
            'g wins
            l1 = g1
        End If
        
        l1 = l1 + 2
        
        ActiveSheet.Range("B" & l1).Value = "X1"
        ActiveSheet.Range("C" & l1).Value = "Y1"
        ActiveSheet.Range("D" & l1).Value = "Z1"
        
        
        ActiveSheet.Range("E" & l1).Value = "X2"
        ActiveSheet.Range("F" & l1).Value = "Y2"
        ActiveSheet.Range("G" & l1).Value = "Z2"
        
        
    
    
    
    AutoZEnabledON
    l1 = l1 + 1
    
    ActiveSheet.Range("A" & l1).Value = "Distance"
    
    ActiveSheet.Range("B" & l1).Value = cx1
    ActiveSheet.Range("C" & l1).Value = cy1
    ActiveSheet.Range("D" & l1).Value = cz1
    
    ActiveSheet.Range("E" & l1).Value = cx2
    ActiveSheet.Range("F" & l1).Value = cy2
    ActiveSheet.Range("G" & l1).Value = cz2
    
    'If OB = "L" Or OB = "R" Or OB = "A" Then
        ActiveSheet.Range("B" & l1 & ":G" & l1).Activate
    'ElseIf OB = "P" Then
    '    ActiveSheet.Range("B" & RW & ":D" & RW).Activate
    'ElseIf OB = "C" Or OB = "T" Then
    '    ActiveSheet.Range("B" & RW & ":E" & RW).Activate
    'End If
    
    'If OB = "L" Then
        AddingNames ("TESTDIST")
    'ElseIf OB = "R" Then
    '    AddingNames ("TESTREC")
    'ElseIf OB = "P" Then
    '    AddingNames ("TESTPT2")
    'ElseIf OB = "C" Then
    '    AddingNames ("TESTCIRR")
    'ElseIf OB = "A" Then
    '    AddingNames ("TESTARCR")
    'ElseIf OB = "T" Then
    '    AddingNames ("TESTTEXT")
    'End If
    
    AutoZEnabledOFF
    

    graphnr
    
    ActiveSheet.Range("A1").Activate
    

End Sub

Private Sub ListBox1_Change()

LstbC
    
End Sub



Private Sub ListBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)


If KeyCode = 46 Then
    DeleteObject
End If



End Sub

Private Sub OptionButton1_Click()
LstbC
End Sub

Private Sub OptionButton10_Click()
LstbC
End Sub

Private Sub OptionButton11_Click()
LstbC
End Sub

Private Sub OptionButton12_Click()
LstbC
End Sub

Private Sub OptionButton13_Click()
LstbC
End Sub

Private Sub OptionButton14_Click()
LstbC
End Sub

Private Sub OptionButton2_Click()
LstbC
End Sub

Private Sub OptionButton3_Click()
LstbC
End Sub

Private Sub OptionButton4_Click()
LstbC
End Sub

Private Sub OptionButton5_Click()
LstbC
End Sub

Private Sub OptionButton6_Click()
LstbC
End Sub

Private Sub OptionButton7_Click()
LstbC
End Sub

Private Sub OptionButton8_Click()
LstbC
End Sub

Private Sub OptionButton9_Click()
LstbC
End Sub

Private Sub TextBox1_Change()

End Sub

Private Sub UserForm_Activate()
MeRefresh
lstpop
End Sub

Private Sub UserForm_Initialize()
CheckLiceNumb
If IsBobMarley = True Then
    'IfTrial
    'Unload Me
End If


On Error Resume Next

Dim sh As Worksheet
Set sh = ActiveSheet

imagepreviewer

Sheet1.Select
sh.Select
On Error GoTo 0
LstbC
    
lstpop
'imageupdatingforuserform2


'graphnr
graphnr
    If CheckBox2.Value = False Then
    DeleteONLYgraph
    End If

On Error Resume Next


MeRefresh
lstpop



End Sub


Public Sub deleterange()
On Error Resume Next


        For X = 1 To ActiveSheet.ChartObjects.Count
            If ActiveSheet.ChartObjects(X).Name = tb1 Then
                ActiveSheet.ChartObjects(tb1).Activate
                Dim amount As String
                amount = ActiveChart.SeriesCollection.Count
            
                For i = 1 To ActiveChart.SeriesCollection.Count
                    If ActiveChart.SeriesCollection(i).Name = Me.ListBox1.text Then
                        ActiveChart.SeriesCollection(i).Delete
                        'lstpop
                    End If
                Next
            End If
        Next


For i = 1 To Names.Count
    Dim fn As String
    fn = Names(i).Name
    Dim lbn As String
    lbn = Left(Me.ListBox1.text, Len(fn))
    Dim XV As Variant
   
    Dim yv As Variant
    
    
    If fn = lbn Then
        Range(Names(i)).Delete
        
        Names(i).Delete
        
    End If
Next

lstpop
End Sub



Public Sub imageupdatingforuserform2()



Dim locat As String
Dim Temp As String
Temp = Environ("temp")
If CheckBox1.Value = True Then
    locat = Temp & "\ExcelDrawChartimage.jpg"
    Image1.Picture = Nothing
    
    On Error Resume Next
    Image1.Picture = LoadPicture(locat)
    On Error GoTo 0
    
    UserForm2.Repaint
    
End If

End Sub


Public Sub lstpop()
On Error Resume Next

'Application.ScreenUpdating = False

graphnr
imageupdatingforuserform2


'Application.ScreenUpdating = True



Dim FileNum2 As Integer
FileNum2 = FreeFile()




    With Me.ListBox1
        .Clear
        For Each nm In ActiveWorkbook.Names
            If nm.RefersToRange.Parent.Name = ActiveSheet.Name Then .AddItem (nm.Name)
            '.AddItem (nm.Name)
        Next nm
    
    End With
    

Dim cnt As Integer
cnt = ListBox1.ListCount

    
If cnt = 0 Then
deletegraph

End If

    If CheckBox2.Value = False Then
        DeleteONLYgraph
    End If


    If ListBox1.ListCount <= 1 Then
        DeleteONLYgraph
    End If


End Sub



Public Sub LstbC()

TextBox1.text = ""
Label8.Caption = "X Y Z"
Label10.Caption = "Details:"
Label18.Caption = "X Y Z"
Label17.Caption = "Details:"
Label15.Caption = "Distance X:"
Label16.Caption = "Distance Y:"
Label14.Caption = "Distance Z:"
Label20.Caption = "Direct Distance:"

On Error Resume Next

If Me.CheckBox1 = True Then

    imagepreviewer
    
Else
    'graphnr
End If

    For X = 1 To ActiveSheet.ChartObjects.Count
            If ActiveSheet.ChartObjects(X).Name = tb1 Then
                ActiveSheet.ChartObjects(tb1).Activate
               
            End If
    Next
        
    
    
   

   
   
    Dim wd As String
    Dim ht As String
    Dim di As String
    Dim cr As String
    Dim AR As String
    Dim XV As String
    Dim yv As String
    
    
    Dim fn As String
    Dim lbn As String
    
    For i = 1 To Names.Count
    
    fn = Names(i).Name
    
    lbn = Left(Me.ListBox1.text, Len(fn))

    
    
    If fn = lbn Then
        On Error Resume Next
        
        
        
    Dim A As Integer
    
        For A = 1 To ActiveChart.SeriesCollection.Count
            If ActiveChart.SeriesCollection(A).Name = Me.ListBox1.text Then
                    XV = ""
                    yv = ActiveChart.SeriesCollection(A).Values
            End If
        Next

                    XV = Names(Me.ListBox1.text).Xvalues
                    yv = ActiveChart.SeriesCollection(Me.ListBox1.text).Values
                    
        'Me.Label2.Caption = "Range:" & Names(Me.ListBox1.text)
        Range(Names(i)).Select
        
    End If
    
Next




   'this is where i need to add in the data about what is selected
   
   Dim ObjectT As String
   Dim TxtBStr As String
   Dim X1values As String
   Dim Y1values As String
   Dim Z1values As String
   Dim X2values As String
   Dim Y2values As String
   Dim Z2values As String
   Dim adrs As String
   
   Dim ctr As Integer
   ctr = 1
   
   ObjectT = ""
   
    Dim lstA As Collection
    Set lstA = New Collection
    
    For q = 0 To ListBox1.ListCount - 1
        If ListBox1.Selected(q) = True Then
            lstA.Add (ListBox1.List(q, 0))
        End If
    Next
   
   
    For i = 1 To ActiveWorkbook.Names.Count
        For X = 1 To lstA.Count
            If ActiveWorkbook.Names(i).Name = lstA.Item(X) Then
                'there is a match
                
        
                Dim RNms_O As String
                RNms_O = ActiveWorkbook.Names(i).Name
                
                Dim Types_O As String
                Dim RELS_O As String
                Dim ZEN_O As String
                
                Dim UnlineDASHUnderlinePlacement_O As Integer
                UnlineDASHUnderlinePlacement_O = InStr(RNms_O, "__")
                
                Dim shnm_O As String
                shnm_O = Left(RNms_O, UnlineDASHUnderlinePlacement_O - 1)
        
                Dim UnlinePlacement_O As Integer
                UnlinePlacement_O = InStr(RNms_O, "_")
                Dim fullstr_ing_O As String
                fullstr_Oing_O = Mid(RNms_O, UnlineDASHUnderlinePlacement_O + 2, UnlinePlacement_O - 1)
                
                Types_O = Left(fullstr_Oing_O, 1)
                Dim second_O As String
                second_O = Left(fullstr_Oing_O, 2)
                
                RELS_O = Right(second_O, 1)
                
                Dim third_O As String
                third_O = Left(fullstr_Oing_O, 3)
                ZEN_O = Right(third_O, 1)
                
                Dim str_O As String
                str_O = Types_O
                
                
                Dim asnfn_O As String
                asnfn_O = ActiveSheet.Name
                

                    
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            Dim stvar_O As String
            
            If str_O = "R" Then
                stvar_O = cb3
                RecStar (ZEN_O)
            ElseIf str_O = "L" Then
                stvar_O = cb2
                LineStar (ZEN_O)
            ElseIf str_O = "p" Then
                stvar_O = cb1
                PointStar (ZEN_O)
            ElseIf str_O = "P" Then
                stvar_O = cb1
                PointStar (ZEN_O)
            ElseIf str_O = "C" Or str_O = "A" Then
                stvar_O = cb3
                LineStar (ZEN_O)
            ElseIf str_O = "T" Then
                stvar_O = cb3
                TextStar (ZEN_O)
            End If
            
            For R = 1 To 1
                For cl = 1 To Range(ActiveWorkbook.Names(i)).Columns.Count
                    r1 = Range(ActiveWorkbook.Names(i)).Rows(R).Row
                  
                        If ZEN_O = "N" Then
                       
                            x1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AA).Column).Address
                            y1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AB).Column).Address
                
                            x2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ac).Column).Address
                            y2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ad).Column).Address
                           
                            z1 = "0.0"
                            z2 = "0.0"
                        
                        Else
                       
                            x1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AA).Column).Address
                            y1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(AB).Column).Address
                
                            x2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ad).Column).Address
                            y2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ae).Column).Address
                           
                            z1 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(ac).Column).Address
                            z2 = Cells(r1, Range(ActiveWorkbook.Names(i)).Columns(af).Column).Address
                                
                            If z1 = "" Then
                                z1 = "0.0"
                            End If
                            
                            If z2 = "" Then
                                z2 = "0.0"
                            End If
                            
                        End If
                        
                        X1values = Range(x1).Value
                        X2values = Range(x2).Value
                        
                        Y1values = Range(y1).Value
                        Y2values = Range(y2).Value
                        
                        Z1values = Range(z1).Value
                        Z2values = Range(z2).Value
                        
                        
                   
                Next
            Next
                    
            Dim TBtest As String
            TBtest = ""
            
            If str_O = "R" Then
                ObjectT = "Rectangle"
                TBtest = X1values & ", " _
                    & Y1values & ", " _
                    & Z1values & ", " _
                    & X2values & ", " _
                    & Y2values & ", " _
                    & Z2values
            ElseIf str_O = "L" Then
                ObjectT = "Line"
                TBtest = X1values & ", " _
                    & Y1values & ", " _
                    & Z1values & ", " _
                    & X2values & ", " _
                    & Y2values & ", " _
                    & Z2values
            ElseIf str_O = "p" Then
                ObjectT = "1-Point"
                TBtest = X1values & ", " _
                    & Y1values & ", " _
                    & Z1values
            ElseIf str_O = "P" Then
                ObjectT = "2-Points"
                TBtest = "| Point1: " & X1values & ", " _
                    & Y1values & ", " _
                    & Z1values & "| Point2: " _
                    & X2values & ", " _
                    & Y2values & ", " _
                    & Z2values
            ElseIf str_O = "C" Then
                ObjectT = "Circle"
                TBtest = "X: " & X1values & ", " _
                    & "Y: " & Y1values & ", " _
                    & "Z: " & Z1values & ", " _
                    & "R: " & X2values
            ElseIf str_O = "A" Then
                ObjectT = "Arc"
                TBtest = "X: " & X1values & ", " _
                    & "Y: " & Y1values & ", " _
                    & "Z: " & Z1values & ", " _
                    & "R: " & X2values & ", " _
                    & "Start: " & Y2values & ", " _
                    & "End: " & Z2values
            ElseIf str_O = "T" Then
                ObjectT = "Text"
                TBtest = "X: " & X1values & ", " _
                    & "Y: " & Y1values & ", " _
                    & "Z: " & Z1values & ", " _
                    & "Text: " & X2values
            End If
            
            
            TxtBStr = TxtBStr & ctr & ". " & ObjectT & ": " & TBtest & " | Refers to: " & ActiveWorkbook.Names(i).RefersTo & vbNewLine
            
            If ctr = 1 Then
                Label8.Caption = TBtest
                Label10.Caption = ObjectT
                
                O1_X1 = X1values
                O1_Y1 = Y1values
                O1_Z1 = Z1values
                O1_X2 = X2values
                O1_Y2 = Y2values
                O1_Z2 = Z2values
                O1_T = str_O
                
                
            ElseIf ctr = 2 Then
                Label18.Caption = TBtest
                Label17.Caption = ObjectT
                
                O2_X1 = X1values
                O2_Y1 = Y1values
                O2_Z1 = Z1values
                O2_X2 = X2values
                O2_Y2 = Y2values
                O2_Z2 = Z2values
                O2_T = str_O
                
                'this point we calculate the disances
                
                'with point one
                Dim OC1 As Boolean
                Dim NX1 As Boolean
                Dim PX1 As Boolean
                Dim NY1 As Boolean
                Dim PY1 As Boolean
                Dim NZ1 As Boolean
                Dim PZ1 As Boolean
                
                Dim OC2 As Boolean
                Dim NX2 As Boolean
                Dim PX2 As Boolean
                Dim NY2 As Boolean
                Dim PY2 As Boolean
                Dim NZ2 As Boolean
                Dim PZ2 As Boolean
                
                OC1 = OptionButton1.Value
                NX1 = OptionButton2.Value
                PX1 = OptionButton3.Value
                NY1 = OptionButton4.Value
                PY1 = OptionButton5.Value
                NZ1 = OptionButton6.Value
                PZ1 = OptionButton7.Value

                OC2 = OptionButton8.Value
                NX2 = OptionButton10.Value
                PX2 = OptionButton9.Value
                NY2 = OptionButton11.Value
                PY2 = OptionButton12.Value
                NZ2 = OptionButton13.Value
                PZ2 = OptionButton14.Value

                
                If OC1 = True Then
                    'this is if point one center is selected
                    If O1_T = "T" Or O1_T = "C" Or O1_T = "A" Or O1_T = "p" Then
                        'this is text, circle, arc or point, no calculations needed
                        cx1 = O1_X1
                        cy1 = O1_Y1
                        cz1 = O1_Z1
                    ElseIf O1_T = "R" Or O1_T = "L" Then
                        'this is for rectangle
                        cx1 = Math.Abs((O1_X2 - O1_X1)) / 2
                        If O1_X1 > O1_X2 Then
                            cx1 = O1_X1 - cx1
                        Else
                            cx1 = O1_X2 - cx1
                        End If
                        
                        cy1 = Math.Abs((O1_Y2 - O1_Y1)) / 2
                        If O1_Y1 > O1_Y2 Then
                            cy1 = O1_Y1 - cy1
                        Else
                            cy1 = O1_Y2 - cy1
                        End If
                        
                        cz1 = Math.Abs((O1_Z2 - O1_Z1)) / 2
                        If O1_Z1 > O1_Z2 Then
                            cz1 = O1_Z1 - cz1
                        Else
                            cz1 = O1_Z2 - cz1
                        End If
                    End If
                    
                ElseIf NX1 = True Or NY1 = True Or NZ1 = True Then
                    'this is for neg x value
                    If O1_T = "T" Or O1_T = "R" Or O1_T = "L" Or O1_T = "p" Then
                        'this is text, circle, arc or point, no calculations needed
                        cx1 = O1_X1
                        cy1 = O1_Y1
                        cz1 = O1_Z1
                    ElseIf O1_T = "C" Or O1_T = "A" Then
                        If NX1 = True Then
                            cx1 = O1_X1 - O1_X2
                            cy1 = O1_Y1
                            cz1 = O1_Z1
                        ElseIf NY1 = True Then
                            cx1 = O1_X1
                            cy1 = O1_Y1 - O1_X2
                            cz1 = O1_Z1
                        ElseIf NZ1 = True Then
                            cx1 = O1_X1
                            cy1 = O1_Y1
                            cz1 = O1_Z1
                        End If
                    End If
                ElseIf PX1 = True Or PY1 = True Or PZ1 = True Then
                    'this is for pos x value
                    If O1_T = "T" Or O1_T = "R" Or O1_T = "L" Or O1_T = "p" Then
                        'this is text, circle, arc or point, no calculations needed
                        cx1 = O1_X1
                        cy1 = O1_Y1
                        cz1 = O1_Z1
                    ElseIf O1_T = "C" Or O1_T = "A" Then
                        If PX1 = True Then
                            cx1 = O1_X1 + O1_X2
                            cy1 = O1_Y1
                            cz1 = O1_Z1
                        ElseIf PY1 = True Then
                            cx1 = O1_X1
                            cy1 = O1_Y1 + O1_X2
                            cz1 = O1_Z1
                        ElseIf PZ1 = True Then
                            cx1 = O1_X1
                            cy1 = O1_Y1
                            cz1 = O1_Z1
                        End If
                    End If
                End If
                
            
            
                If OC2 = True Then
                    'this is if point one center is selected
                    If O2_T = "T" Or O2_T = "C" Or O2_T = "A" Or O2_T = "p" Then
                        'this is text, circle, arc or point, no calculations needed
                        cx2 = O2_X1
                        cy2 = O2_Y1
                        cz2 = O2_Z1
                    ElseIf O2_T = "R" Or O2_T = "L" Then
                        'this is for rectangle
                        cx2 = Math.Abs((O2_X2 - O2_X1)) / 2
                        If O2_X1 > O2_X2 Then
                            cx2 = O2_X1 - cx2
                        Else
                            cx2 = O2_X2 - cx2
                        End If
                        
                        cy2 = Math.Abs((O2_Y2 - O2_Y1)) / 2
                        If O2_Y1 > O2_Y2 Then
                            cy2 = O2_Y1 - cy2
                        Else
                            cy2 = O2_Y2 - cy2
                        End If
                        
                        cz2 = Math.Abs((O2_Z2 - O2_Z1)) / 2
                        If O2_Z1 > O2_Z2 Then
                            cz2 = O2_Z1 - cz2
                        Else
                            cz2 = O2_Z2 - cz2
                        End If
                    End If
                    
                ElseIf NX2 = True Or NY2 = True Or NZ2 = True Then
                    'this is for neg x value
                    If O2_T = "T" Or O2_T = "p" Then
                        'this is text, circle, arc or point, no calculations needed
                        cx2 = O2_X1
                        cy2 = O2_Y1
                        cz2 = O2_Z1
                    ElseIf O2_T = "R" Or O2_T = "L" Then
                        cx2 = O2_X2
                        cy2 = O2_Y2
                        cz2 = O2_Z2
                    ElseIf O2_T = "C" Or O2_T = "A" Then
                        If NX2 = True Then
                            cx2 = O2_X1 - O2_X2
                            cy2 = O2_Y1
                            cz2 = O2_Z1
                        ElseIf NY2 = True Then
                            cx2 = O2_X1
                            cy2 = O2_Y1 - O2_X2
                            cz2 = O2_Z1
                        ElseIf NZ2 = True Then
                            cx2 = O2_X1
                            cy2 = O2_Y1
                            cz2 = O2_Z1
                        End If
                    End If
                ElseIf PX2 = True Or PY2 = True Or PZ2 = True Then
                    'this is for pos x value
                    If O2_T = "T" Or O2_T = "p" Then
                        'this is text, circle, arc or point, no calculations needed
                        cx2 = O2_X1
                        cy2 = O2_Y1
                        cz2 = O2_Z1
                    ElseIf O2_T = "R" Or O2_T = "L" Then
                        cx2 = O2_X2
                        cy2 = O2_Y2
                        cz2 = O2_Z2
                    ElseIf O2_T = "C" Or O2_T = "A" Then
                        If PX2 = True Then
                            cx2 = O2_X1 + O2_X2
                            cy2 = O2_Y1
                            cz2 = O2_Z1
                        ElseIf PY2 = True Then
                            cx2 = O2_X1
                            cy2 = O2_Y1 + O2_X2
                            cz2 = O2_Z1
                        ElseIf PZ2 = True Then
                            cx2 = O2_X1
                            cy2 = O2_Y1
                            cz2 = O2_Z1
                        End If
                    End If
                End If
                
            'End If
            
            
            DX = (cx1 - cx2)
            DY = (cy1 - cy2)
            DZ = (cz1 - cz2)
            DD = Math.Sqr((DX ^ 2) + (DY ^ 2) + (DZ ^ 2))
            
            '15
            '16
            '14
            '20
            
            Label15.Caption = "Distance X: " & DX
            Label16.Caption = "Distance Y: " & DY
            Label14.Caption = "Distance Z: " & DZ
            Label20.Caption = "Direct Distance: " & DD
            
            
        End If
           
            ctr = ctr + 1
            
            
            
            End If
        Next
    Next
   
   '----------------------------------------------------------
   
    TextBox1.text = TxtBStr
    


On Error GoTo 0

imageupdatingforuserform2


    
    If CheckBox2.Value = False Then
        DeleteONLYgraph
    End If


End Sub



Public Sub deleterange2()

On Error Resume Next

Dim lstA As Collection
Set lstA = New Collection

Dim id As Integer
For i = 0 To ListBox1.ListCount - 1
    If ListBox1.Selected(i) = True Then
        lstA.Add (ListBox1.List(i, 0))
    End If
Next


id = ListBox1.ListIndex

If id = -1 Then
Exit Sub
End If



For i = 1 To Names.Count
    For R = 1 To lstA.Count
        If Names(i).Name = lstA(R) Then
            
            Range(Names(i)).Delete
            Names(i).Delete
            'lstpop
            
        End If
    Next
    
    On Error GoTo skiperror001
    
    
    'If Names(i).Name = Me.ListBox1.text Then
    '
    '    Range(Names(i)).Delete
    '    Names(i).Delete
    '    lstpop
    '
    'End If
    
skiperror001:
On Error GoTo 0

Next

If id = 0 Then
ListBox1.ListIndex = id
Else
ListBox1.ListIndex = id - 1
End If

End Sub


Public Sub DeleteObject()
On Error Resume Next

Dim lstA As Collection
Set lstA = New Collection

Dim id As Integer
For i = 0 To ListBox1.ListCount - 1
    If ListBox1.Selected(i) = True Then
        lstA.Add (ListBox1.List(i, 0))
    End If
Next

id = ListBox1.ListIndex

If id = -1 Then
Exit Sub
End If



For i = 1 To Names.Count
    For R = 1 To lstA.Count
        If Names(i).Name = lstA(R) Then
            
            Names(i).Delete
            'lstpop
            
        End If
    Next
    
Next

lstpop

If id = 0 Then
ListBox1.ListIndex = id
Else
ListBox1.ListIndex = id - 1
End If

End Sub


Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{B45FB8B7-E63B-4C49-9081-63E45194DA42}{F39E497F-25E5-4E9C-98DD-CF4771BFE086}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Dim tb1 As String
Dim cb1 As String
Dim cb2 As String
Dim cb3 As String
Dim cb4 As String
Dim cb5 As String
Dim cb6 As String

Dim tb1c As String
Dim cb1c As String
Dim cb2c As String
Dim cb3c As String
Dim cb4c As String




Private Sub ComboBox6_Change()
On Error Resume Next

Label8.Font.Size = ComboBox6.text * 2
End Sub

Private Sub ComboBox8_Change()
    Wgt_O = ComboBox8.text
    graphnr
End Sub

Private Sub CommandButton1_Click()

TextBox1.text = "Drawing Preview"

With Me.ComboBox2
    .text = "X1-Y1-Z1-X2-Y2-Z2"
End With

With Me.ComboBox1
    .text = "X1-Y1-Z1-X2-Y2-Z2"
End With
With Me.ComboBox3
    .text = "X1-Y1-Z1-X2-Y2-Z2"
End With

With Me.ComboBox4
    .text = "X-Y-Z-R"
End With

With Me.ComboBox5
    .text = "0.00000"
End With


Me.ComboBox6.text = "4"
R_R = 255
G_R = 0
B_R = 0
R_L = 50
G_L = 0
B_L = 120
R_C = 225
G_C = 215
B_C = 0
R_P = 10
G_P = 255
B_P = 10
R_A = 255
G_A = 165
B_A = 0
R_D = 57
G_D = 255
B_D = 20
R_CHART = 255
G_CHART = 255
B_CHART = 255
MGT_O = 1

Me.ComboBox8.text = 1

save

graphnr

End Sub

Private Sub Opening()

TextBox1.text = "Drawing Preview"

With Me.ComboBox2
    .Clear
    .AddItem ("X1-Y1-Z1-X2-Y2-Z2")
    .AddItem ("Y1-X1-Z1-Y2-X2-Z2")
    .AddItem ("Z1-Y1-X1-Z2-Y2-X2")
    .AddItem ("Z1-X1-Y1-Z2-X2-Y2")
    .AddItem ("X1-X2-Y1-Y2-Z1-Z2")
    .AddItem ("Y1-Y2-X1-X2-Z1-Z2")
    .AddItem ("Z1-Z2-Y1-Y2-X1-X2")
    .AddItem ("Z1-Z2-X1-X2-Y1-Y2")
    .text = "X1-Y1-Z1-X2-Y2-Z2"
End With

With ComboBox1
    .Clear
    .AddItem ("X1-Y1-Z1-X2-Y2-Z2")
    .AddItem ("Y1-X1-Z1-Y2-X2-Z2")
    .AddItem ("Z1-Y1-X1-Z2-Y2-X2")
    .AddItem ("Z1-X1-Y1-Z2-X2-Y2")
    .AddItem ("X1-X2-Y1-Y2-Z1-Z2")
    .AddItem ("Y1-Y2-X1-X2-Z1-Z2")
    .AddItem ("Z1-Z2-Y1-Y2-X1-X2")
    .AddItem ("Z1-Z2-X1-X2-Y1-Y2")
    .text = "X1-Y1-Z1-X2-Y2-Z2"
End With
With ComboBox3
    .Clear
    .AddItem ("X1-Y1-Z1-X2-Y2-Z2")
    .AddItem ("Y1-X1-Z1-Y2-X2-Z2")
    .AddItem ("Z1-Y1-X1-Z2-Y2-X2")
    .AddItem ("Z1-X1-Y1-Z2-X2-Y2")
    .AddItem ("X1-X2-Y1-Y2-Z1-Z2")
    .AddItem ("Y1-Y2-X1-X2-Z1-Z2")
    .AddItem ("Z1-Z2-Y1-Y2-X1-X2")
    .AddItem ("Z1-Z2-X1-X2-Y1-Y2")
    .text = "X1-Y1-Z1-X2-Y2-Z2"
End With

With ComboBox4
    .Clear
    .AddItem ("X-Y-Z-R")
    .AddItem ("Y-X-Z-R")
    .AddItem ("Z-X-Y-R")
    .AddItem ("Z-Y-X-R")
    .AddItem ("X-Y-R-Z")
    .AddItem ("X-R-Y-Z")
    .AddItem ("R-X-Y-Z")
    .AddItem ("Y-X-R-Z")
    .AddItem ("Y-R-X-Z")
    .AddItem ("R-Y-X-Z")
    .AddItem ("Z-X-R-Y")
    .AddItem ("Z-R-X-Y")
    .AddItem ("R-Z-X-Y")
    .AddItem ("Z-Y-R-X")
    .AddItem ("Z-R-Y-X")
    .AddItem ("R-Z-Y-X")
    .text = "X-Y-Z-R"
End With


With ComboBox5
    .Clear
    .AddItem ("0.0")
    .AddItem ("0.00")
    .AddItem ("0.000")
    .AddItem ("0.0000")
    .AddItem ("0.00000")
    .AddItem ("0.000000")
    .AddItem ("0.0000000")
    .AddItem ("0.00000000")
    .AddItem ("0.000000000")
    .AddItem ("0.0000000000")
    .text = "0.00000"
End With


For i = 1 To 50
    ComboBox6.AddItem (i * 0.5)
Next
    ComboBox6.text = "4"
    

'need to add in the text docs here



Dim Temp As String
Temp = Environ("temp")
Dim settings As String
settings = Temp & "\EXCDXF_GT.txt"

Open settings For Input As #5
Dim ln As Integer
ln = 1

Do Until EOF(5)
        Dim readdata As String
        readdata = ""
        
    Line Input #5, readdata 'adding line to read the whole line, not only first 128 positions
    
    If ln = 2 Then
        TextBox1.text = readdata
    ElseIf ln = 3 Then
        ComboBox1.text = readdata
    ElseIf ln = 4 Then
        ComboBox2.text = readdata
    ElseIf ln = 5 Then
        ComboBox3.text = readdata
    ElseIf ln = 6 Then
        ComboBox4.text = readdata
    ElseIf ln = 7 Then
        ComboBox5.text = readdata
    ElseIf ln = 8 Then
        ComboBox6.text = readdata
    End If
     ln = ln + 1
Loop

     
Close #5


End Sub


Private Sub CommandButton2_Click()

save


End Sub


Public Sub save()

Dim Temp As String
Temp = Environ("temp")
Dim settings As String
settings = Temp & "\EXCDXF_GT.txt"



Dim FName As String

'file does not exist
    Dim strprint As String
    strprint = ""
    
    strprint = vbNewLine & TextBox1.text & vbNewLine _
                & ComboBox1.text & vbNewLine _
                & ComboBox2.text & vbNewLine _
                & ComboBox3.text & vbNewLine _
                & ComboBox4.text & vbNewLine _
                & ComboBox5.text & vbNewLine _
                & ComboBox6.text & vbNewLine _
                & R_R & vbNewLine & G_R & vbNewLine & B_R & vbNewLine _
                & R_L & vbNewLine & G_L & vbNewLine & B_L & vbNewLine _
                & R_C & vbNewLine & G_C & vbNewLine & B_C & vbNewLine _
                & R_P & vbNewLine & G_P & vbNewLine & B_P & vbNewLine _
                & R_A & vbNewLine & G_A & vbNewLine & B_A & vbNewLine _
                & R_D & vbNewLine & G_D & vbNewLine & B_D & vbNewLine _
                & Wgt_O & vbNewLine _
                & R_CHART & vbNewLine & G_CHART & vbNewLine & B_CHART

    'this will start creating the txt document
    Dim fso As Object
    Set fso = CreateObject("Scripting.filesystemobject")
        
    Dim fileout As Object
        
    Set fileout = fso.createtextfile(settings, True, True)
    fileout.write strprint
    fileout.Close


tb1 = TextBox1.text
cb1 = ComboBox1.text
cb2 = ComboBox2.text
cb3 = ComboBox3.text
cb4 = ComboBox4.text
cb5 = ComboBox5.text
cb6 = ComboBox6.text

End Sub



Private Sub CommandButton3_Click()
    UserForm7.Show
    
End Sub



Private Sub UserForm_Initialize()

    'CreateDefaults
    
    Opening
    
     
    tb1 = TextBox1.text
    cb1 = ComboBox1.text
    cb2 = ComboBox2.text
    cb3 = ComboBox3.text
    cb4 = ComboBox4.text
    cb5 = ComboBox5.text
    cb6 = ComboBox6.text
    
    
    
    With ComboBox7
        .AddItem ("Line")
        .AddItem ("Rectangle")
        .AddItem ("Circle")
        .AddItem ("Point")
        .AddItem ("Arc")
        .AddItem ("Distance")
        .AddItem ("Chart Background")
    End With
    
    With ComboBox8
        For i = 1 To 20
            .AddItem (i)
        Next
    End With
    
    ComboBox7.text = "Line"
    ComboBox8.text = Wgt_O
    If Wgt_O = 0 Then
        ComboBox8.text = 1
        Wgt_O = 1
    End If


End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)




If (tb1 = TextBox1.text) And (cb1 = ComboBox1.text) And (cb2 = ComboBox2.text) And (cb3 = ComboBox3.text) And (cb4 = ComboBox4.text) And (cb5 = ComboBox5.text) And (cb6 = ComboBox6.text) Then
    'everything is the same
    
Else


Dim Temp As String
Temp = Environ("temp")
Dim settings As String
settings = Temp & "\EXCDXF_GT.txt"


Dim Msgab As String
Dim Ans As Integer
Dim FName As String
Msgb = "Save changes before leaving?"
Ans = MsgBox(Msgb, vbYesNo)
If Ans = vbYes Then

    save
End If

End If

End Sub
Attribute VB_Name = "UserForm4"
Attribute VB_Base = "0{A6B8A057-3804-4AE5-AC06-B5B9118C689E}{C65CACDD-2AED-4980-B826-2170425672BA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
TextBox1.text = ""
TextBox1.text = "Settings" & vbNewLine & vbNewLine & _
"   Graph Settings" & vbNewLine & vbNewLine & _
"These Graphing Options are used to format your data. This list corresponds with options as they appear in the Graphing Options window." & vbNewLine & vbNewLine & _
"o   Chart Name:" & vbNewLine & vbNewLine & _
"   This is the name of the chart. Each sheet can have its own chart; however the name is chart specific. This means that you can have multiple charts with the same name on several pages, but if you change the name of the charts from page to page you will need to change the chart name back in order to view a chart with a different name. Because of this it is not recommended to change the chart name between projects." & vbNewLine & vbNewLine & _
"o   Point Format" & vbNewLine & vbNewLine & _
"   This is the format of point objects. These formats will automatically include Z values. If Z values are not present in your data they will be skipped over during formatting." & vbNewLine & vbNewLine & _
"o   Line Format" & vbNewLine & vbNewLine & _
"   This is the format of line objects. These formats will automatically include Z values. If Z values are not present in your data they will be skipped over during formatting." & vbNewLine & vbNewLine & _
"o   Rectangle Format" & vbNewLine & vbNewLine & _
"   This is the format of rectangles. These formats will automatically include Z values. If Z values are not present in your data they will be skipped over during formatting." & vbNewLine & vbNewLine & _
"o   Circle/Text Format" & vbNewLine & vbNewLine & _
"   This is the format of circles and text. In this format circles are calculated with a radius, also known as R. Text will fall in the same format location as the radius of a circle. These formats will automatically include Z values. If Z values are not present in your data they will be skipped over during formatting." & vbNewLine & vbNewLine & _
"o   Number Format" & vbNewLine & vbNewLine & _
"   Changing this will change the amount of decimal points you want to allow during the optional formatting phase of graphing. Please read more about this formatting in the section below: 'Format Numbers'." & vbNewLine & vbNewLine & _
"o   Text Size" & vbNewLine & vbNewLine & _
"   Changing this will change the size of the text for the future text objects that will be defined. You may change this as many times as needed." & vbNewLine & vbNewLine & _
"o   Reset Defaults will reset the formatting back to default." & vbNewLine & vbNewLine & _
"o   Save Settings will save your formatting settings for future projects." & vbNewLine & vbNewLine & _
"   Relative Values" & vbNewLine & vbNewLine & _
"o   By default Excel Draw reads data as absolute values. By selecting the 'Relative Values' checkbox you are specifying that the selected values are relative instead of absolute." & vbNewLine & vbNewLine & _
"   Z Values Included" & vbNewLine & vbNewLine & _
"o   By default Excel Draw does not include Z values in its calculations. By selecting the 'Z Values Included' checkbox you are specifying that the selected values have Z values included in them. For more information on the formatting of Z values please read the above section on 'Graph Settings'." & vbNewLine & vbNewLine & _
"   Format Numbers" & vbNewLine & vbNewLine & _
"o   By default Excel Draw will not format object values based on decimal points. If you would like to automatically convert your data into decimal points with decimal limit placements you can check 'Format Numbers'. For more information on this please read the above section on 'Graph Settings'."

End Sub



Private Sub CommandButton2_Click()


TextBox1.text = ""
TextBox1.text = "Adding Objects" & vbNewLine & vbNewLine & _
"   Rectangle" & vbNewLine & vbNewLine & _
"o   Pressing this button will add a rectangle Object into your Drawing Graph." & vbNewLine & vbNewLine & _
"   Line" & vbNewLine & vbNewLine & _
"o   Pressing this button will add a line Object into your Drawing Graph." & vbNewLine & vbNewLine & _
"   Point" & vbNewLine & vbNewLine & _
"o   Pressing this button will add a point Object into your Drawing Graph." & vbNewLine & vbNewLine & _
"  Circle" & vbNewLine & vbNewLine & _
"o   Pressing this button will add a circle Object into your Drawing Graph. All circles inside of Excel Draw generate a point at 0,0 of the circle diameter, effectively displaying the center of the circle object. This is only present inside of Excel Draw and will only display the circle object when exported into a DXF file." & vbNewLine & vbNewLine & _
"   Text" & vbNewLine & vbNewLine & _
"o   Pressing this button will add a text Object into your Drawing Graph. Text objects are handled as labels inside of Excel Draw. When exported into a DXF file the text objects are set to your DXF file readers default font size." & vbNewLine & vbNewLine & _
"   Text Imitation" & vbNewLine & vbNewLine & _
"o   With this activated Excel Draw will try to imitate the font size inside of most DXF viewers. It is not recommended for larger drawings as the font can become quite large." & vbNewLine & vbNewLine & _
""

End Sub




Private Sub CommandButton3_Click()
TextBox1.text = ""
TextBox1.text = "Graphing" & vbNewLine & vbNewLine & _
"   Drawing Manager" & vbNewLine & vbNewLine & _
"o   Live Preview" & vbNewLine & vbNewLine & _
"   By default when an object is selected in the Drawing Manager that object will be displayed on the main graph as a selected item color. By deselecting 'Live Preview' the objects will no longer be highlighted when selected inside of the manager." & vbNewLine & vbNewLine & _
"o   Show Graph" & vbNewLine & vbNewLine & _
"   By default Excel Draw will display the generated graph when the manager is opened. If you would like to hide the graph deselect the 'Show Graph' checkbox." & vbNewLine & vbNewLine & _
"o   Delete Object" & vbNewLine & vbNewLine & _
"   Pressing this button (or the delete key) will delete the selected object from the generated graph." & vbNewLine & vbNewLine & _
"o   Delete Range" & vbNewLine & vbNewLine & _
"   Pressing this button will delete the selected object from both the graph and Excel." & vbNewLine & vbNewLine & _
"o   Delete All" & vbNewLine & vbNewLine & _
"   This will clear all named ranges inside of Excel, effectively clearing all data that is graphed or hidden. This is used to clear all objects from all graphs." & vbNewLine & vbNewLine & _
"o Refresh" & vbNewLine & vbNewLine & _
"   This button will refresh your generated graph, resetting all colors and highlights back to default." & vbNewLine & vbNewLine & _
"o Export" & vbNewLine & vbNewLine & _
"   Pressing this button will bring up the export options which can also be found in the Exporting Tab" & vbNewLine & vbNewLine & _
"   Generate Graph" & vbNewLine & vbNewLine & _
"o   Pressing this will generate, refresh or regenerate your graphing objects." & vbNewLine & vbNewLine & _
"   Graph Orientation" & vbNewLine & vbNewLine & _
"The options found in this window will allow the user to Rotate, Pan and Zoom the displayed graph in real time. This window will also allow the user to remove grid lines from the graphed drawing." & vbNewLine & vbNewLine & _
""




End Sub

Private Sub CommandButton4_Click()
TextBox1.text = ""
TextBox1.text = "Exporting" & vbNewLine & vbNewLine & _
"   DXF" & vbNewLine & vbNewLine & _
"o   Exports all data into DXF format." & vbNewLine & vbNewLine & _
"   PNG" & vbNewLine & vbNewLine & _
"o   Exports chart into PNG image format." & vbNewLine & vbNewLine & _
"   PDF" & vbNewLine & vbNewLine & _
"o   Exports Excel Sheet into PDF format (with page breaks)." & vbNewLine & vbNewLine & _
"   TXT" & vbNewLine & vbNewLine & _
"o   Exports all data into a TXT generated drawing format." & vbNewLine & vbNewLine & _
"   HTML" & vbNewLine & vbNewLine & _
"o   Exports a multi-file HTML document." & vbNewLine & vbNewLine & _
"   JPG" & vbNewLine & vbNewLine & _
"o   Exports chart into JPG image format." & vbNewLine & vbNewLine & _
"   XLS" & vbNewLine & vbNewLine & _
"o   Exports Excel Sheet into an XLS file format." & vbNewLine & vbNewLine & _
"   CSV" & vbNewLine & vbNewLine & _
"o   Exports Excel Sheet into a CSV data sheet." & vbNewLine & vbNewLine & _
""


End Sub

Private Sub CommandButton5_Click()
TextBox1.text = ""
TextBox1.text = "General Use" & vbNewLine & vbNewLine & _
"    Excel Draw is used to create, view, manage and draw objects inside of Excel that can then be exported into a DXF, PNG, PDF and other file formats." & vbNewLine & vbNewLine & _
"1.  To begin using Excel Draw simply select your values X1 - Y1 - Z1 - X2 - Y2 - Z2 and then click the corresponding menu button that relates to that object type; Rectangle, Line, Point, Circle or Text.  If Z values (even if they are blank) appear in your object you will need to select the 'Z Values Included', located beside Adding Objects in the Settings Tab. If your values are not in the standard format as listed above you can change the orientation of the data by selected the 'Graph Settings' options also located in the Settings Tab." & vbNewLine & vbNewLine & _
"2.  Once your object(s) are added you can view the graph by selected 'Generate Graph' located in the Graphing Tab.  Once the graph is generated any changes made to the data graphed (in the Excel cells) will be updated in real time. If the graph does not update  when changing values you can simply regenerate the graph. If you ever redraw the same object again Excel Draw will automatically overwrite the existing object." & vbNewLine & vbNewLine & _
"3.  If you would like to manage your objects that are drawn in the graph you can do so with the 'Drawing Manager' located in the Graphing Tab. Inside the Drawing Manager you can select objects, delete ranges and delete objects." & vbNewLine & vbNewLine & _
"4.  When your data is ready to export simply select the export format desired in the Exporting Tab. When the export window appears first select the designation folder, the desired file name and click the 'Export' button." & vbNewLine & vbNewLine & _
"5.  After exporting your file you will be asked if you would like to open your file."

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "UserForm5"
Attribute VB_Base = "0{7446EDD1-3202-412E-99AA-AF1FF843037A}{FE8CDA4E-8AB8-46E9-A082-4C03990739C6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim mdc As Boolean
Dim prex As Single
Dim prey As Single


Private Sub CheckBox2_Click()
CheckAxis

End Sub

Private Sub CheckBox3_Click()
CheckArms

End Sub

Private Sub ComboBox1_Change()
    
    Wgt_O = ComboBox1.text
    UserForm3.save
    graphnr
    
    
End Sub

Private Sub CommandButton1_Click()
TextBox1.text = 0
TextBox2.text = 0
TextBox3.text = ZoomMag / ZoomMag_Var
TextBox4.text = 0
TextBox5.text = 0
TextBox6.text = 0
ComboBox1.SelText = "1"


End Sub







Private Sub CommandButton2_Click()
TextBox1.text = 0
TextBox2.text = 0
TextBox6.text = 0
End Sub

Private Sub CommandButton3_Click()
TextBox1.text = 180
TextBox2.text = 270
TextBox6.text = 180
End Sub

Private Sub CommandButton4_Click()
TextBox1.text = 90
TextBox2.text = 180
TextBox6.text = 90
End Sub

Private Sub CommandButton5_Click()
TextBox1.text = 106
TextBox2.text = 163
TextBox6.text = 82
End Sub

Private Sub CommandButton6_Click()

    ChartSquare

End Sub

Private Sub CommandButton7_Click()
    TextBox1.text = 0
    TextBox2.text = 180
    TextBox6.text = 0
End Sub

Private Sub CommandButton8_Click()
    TextBox1.text = 180
    TextBox2.text = 90
    TextBox6.text = 0
    
End Sub

Private Sub Label11_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    
    'mdc = True
    prex = X
    prey = Y

End Sub



Private Sub Label11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

    If mdc = True Then
    
        If (prex = X) And (prey = Y) Then
        
        Else
            
            Dim lt As Integer
            Dim ll As Integer
            
            lt = Label11.Top
            ll = Label11.Left
            
            
            Label11.Top = (lt - (prey - Y))
            Label11.Left = (ll - (prex - X))

            
            prex = X
            prey = Y
            dragupdate
            
        End If
        
    End If
    

End Sub

Private Sub Label11_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

    mdc = False
    UpdateMoveZoom
    
End Sub

Private Sub UpdateMoveZoom()

End Sub

Private Sub OptionButton1_Click()
    CustomOrigin = False
    graphnr
End Sub

Private Sub OptionButton2_Click()
    Set_Origin 0, 0, 0
    graphnr
End Sub

Private Sub OptionButton3_Click()
    If CustomOrigin = False Then UserForm8.Show
    
End Sub

Private Sub ScrollBar1_Change()


    If ScrollBar1.Value >= 360 Then
        ScrollBar1.Value = 0
    ElseIf ScrollBar1.Value <= -1 Then
        ScrollBar1.Value = 359
    End If
    
    TextBox1.text = ScrollBar1.Value
    
   UpdateRotationsX
    
End Sub

Private Sub ScrollBar2_Change()

    If ScrollBar2.Value >= 360 Then
        ScrollBar2.Value = 0
    ElseIf ScrollBar2.Value <= -1 Then
        ScrollBar2.Value = 359
    End If
    
    TextBox2.text = ScrollBar2.Value
    
    UpdateRotationsY
    
End Sub

Private Sub ScrollBar3_Change()
    On Error Resume Next
    
    TextBox3.text = ScrollBar3.Value / ZoomMag_Var
    selectionlabelupdate
    UpdateRotationsZoom
End Sub

Public Sub selectionlabelupdate()

    Dim mpp As Double
    mpp = (ScrollBar3.Value / ScrollBar3.Max) * 250
    
    
    
    Label11.Width = mpp / 2
    Label11.Height = mpp / 2
    
    Dim mx As Integer
    mx = Label8.Left + (Label8.Width / 2)
    Dim my As Integer
    my = Label8.Top + (Label8.Height / 2)
    
    Label11.Left = (mx - (Label11.Width / 2)) - ((ScrollBar4.Value / ScrollBar4.Max) * (Label8.Width / 2))
    Label11.Top = (my - (Label11.Height / 2)) - ((ScrollBar5.Value / ScrollBar5.Max) * (Label8.Height / 2))
    
    
    
    
End Sub

Public Sub dragupdate()

    Dim resb1 As Double
    resb1 = (((129 + 24) - (Label11.Left + (Label11.Width / 2))) * -ZoomMag_Var) / 138
    
    TextBox4.text = Math.Rnd(resb1)
    
    
    
    

End Sub

Private Sub ScrollBar4_Change()


    TextBox4.text = ScrollBar4.Value
    selectionlabelupdate
    UpdateRotationsXM

End Sub
Private Sub ScrollBar5_Change()


    TextBox5.text = ScrollBar5.Value
    selectionlabelupdate
    UpdateRotationsYM

End Sub


Private Sub ScrollBar6_Change()

    If ScrollBar6.Value >= 360 Then
        ScrollBar6.Value = 0
    ElseIf ScrollBar6.Value <= -1 Then
        ScrollBar6.Value = 359
    End If
    
    TextBox6.text = ScrollBar6.Value
    
   UpdateRotationsZ

End Sub

Private Sub TextBox1_Change()
    
On Error GoTo error1

    
    If TextBox1.Value > 360 Then
        TextBox1.text = 360
    ElseIf TextBox1.text < 0 Then
        TextBox1.text = 0
    End If
    

On Error GoTo 0
    
    ScrollBar1.Value = TextBox1.text
    
    Exit Sub

error1:

    TextBox1.Value = 0
    ScrollBar1.Value = TextBox1.text
On Error GoTo 0


End Sub

Private Sub TextBox2_Change()
    
On Error GoTo error2

    
    If TextBox2.Value > 360 Then
        TextBox2.text = 360
    ElseIf TextBox2.text < 0 Then
        TextBox2.text = 0
    End If
    

On Error GoTo 0
    
    ScrollBar2.Value = TextBox2.text
    
    Exit Sub

error2:

    TextBox2.Value = 0
    ScrollBar2.Value = TextBox2.text
On Error GoTo 0


End Sub

Private Sub TextBox3_Change()
    
On Error GoTo error3

    
    ScrollBar3.Value = (TextBox3.text * ZoomMag_Var)
 
    On Error GoTo 0
    Exit Sub

error3:
'On Error Resume Next

    TextBox3.Value = (ScrollBar3.Max / ZoomMag_Var) - 0.01
    ScrollBar3.Value = (TextBox3.text * ZoomMag_Var)


On Error GoTo 0
End Sub



Private Sub TextBox4_Change()

On Error GoTo error4

    ScrollBar4.Value = TextBox4.Value
    On Error GoTo 0
    Exit Sub
    
error4:
    
    TextBox4.Value = ScrollBar4.Value
On Error GoTo 0


End Sub

Private Sub TextBox5_Change()
On Error GoTo error5

    ScrollBar5.Value = TextBox5.Value
    On Error GoTo 0
    Exit Sub
    
error5:
    
    TextBox5.Value = ScrollBar5.Value
On Error GoTo 0

End Sub







Private Sub TextBox6_Change()
On Error GoTo error6

    
    If TextBox6.Value > 360 Then
        TextBox6.text = 360
    ElseIf TextBox6.text < 0 Then
        TextBox6.text = 0
    End If
    

On Error GoTo 0
    
    ScrollBar6.Value = TextBox6.text
    
    Exit Sub

error6:

    TextBox6.Value = 0
    ScrollBar6.Value = TextBox6.text
On Error GoTo 0
End Sub

Private Sub UserForm_Deactivate()

End Sub

Private Sub UserForm_Initialize()

'CheckLiceNumb


    
    
    With ComboBox1
        For i = 1 To 20
            .AddItem (i)
        Next
    End With

    CreateDefaults
    ComboBox1.text = Wgt_O
    
    'CreateDefaults
    If CustomOrigin = True Then
        If Origin_X = 0 And Origin_Y = 0 And Origin_Z = 0 Then
            Me.OptionButton2.Value = True
        Else
            Me.OptionButton3.Value = True
        End If
    Else
        Me.OptionButton1.Value = True
    End If
    
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

End Sub

Private Sub UserForm_Terminate()

    'Unload UserForm8
    

End Sub
Attribute VB_Name = "UserForm6"
Attribute VB_Base = "0{FE3B7A7C-8295-402E-BEA7-1B178047B56D}{F4F76FEE-85CD-4EA7-A819-AA788736D423}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Dim FileLocation As String
Dim ExportLine As String
Dim Temp As String
Dim FlName As String
Dim VerBegin As Boolean
Dim myfile As String, text As String, textline As String, posx As Double, posy As Double, posz As Double
Dim RecordX As Boolean, RecordY As Boolean, RecordZ As Boolean
Dim PointCounter As Double
Dim RecOrPol As String
Dim vertexcounting As Long
Dim lnc As Long
Dim finalrow As Long
    Dim loopNumbering As Long



Private Sub checkRecorPol()


lnc = 1
finalrow = 1
vertexcounting = 0
Dim FileNum4 As Integer
FileNum4 = FreeFile()

Dim dataline As String

Open myfile For Input As #FileNum4

Do Until EOF(FileNum4)
    Line Input #FileNum4, dataline
    If lnc >= loopNumbering Then
        dataline = Replace(dataline, " ", "")
        
        If dataline = "SEQEND" Then
            'end of vertex need to tally
            finalrow = lnc
        Else
            If finalrow = 1 Then
            
                If dataline = "VERTEX" Then
                    'this is where we start counting the vertexes
                    vertexcounting = vertexcounting + 1
                End If
            End If
            
        End If
        
    End If
    lnc = lnc + 1

Loop

Close #FileNum4

End Sub




Private Sub CommandButton1_Click()

    Dim strFileToOpen As String
    Dim strcount As Integer
    strcount = 0
    
    
    strFileToOpen = Application.GetOpenFilename _
    (Title:="Please choose a source DXF file...", _
    filefilter:="DXF Files *.DXF* (*.dxf*),All Files *.* (*.*),")
    
    If strFileToOpen = "False" Then
        'if no file selected
    Else
        'if file is selected
        FileLocation = strFileToOpen
        
        For i = 1 To Len(FileLocation)
            If Mid(FileLocation, i, 1) = "\" Then
                strcount = i
            End If
        Next

        FlName = Mid(strFileToOpen, strcount + 1, Len(strFileToOpen) - strcount + 1)
        TextBox1.text = FileLocation
        ReadTextFileAndImport
        
    End If
    

End Sub

Private Sub ReadTextFileAndImport()
    
    'sets up the read folder
    VerBegin = False
    VerRBegin = False
    Dim begin As Boolean
    begin = False
    Dim TXTNum As Integer
    TXTNum = 1
    finalrow = 1
    
    
    RecordX1line = False
    RecordY1line = False
    recordZ1line = False
    recordx2line = False
    RecordY2line = False
    recordz2line = False
    Dim previoustext As String
    Dim l1 As String
    Dim l2 As String
    Dim l3 As String
    Dim currenttext As String
    loopNumbering = 1
    
    
    
    currenttext = ""
    previoustext = ""
    l1 = ""
    l2 = ""
    l3 = ""
    
    
    
    
    previous = False
    Dim VertexCount As Integer
    VertexCount = 1
    Dim KeeperStr As String
    'KeeperStr = vbNull
    
    Dim recordVAL As Boolean
    recordVAL = True
    
    
    
    policounter = 0
    PointCounter = 0
    RecCounter = 0
    linecounter = 1
    
    ExportLine = ""
    myfile = ""
    textx = ""
    textline = ""
    'KeeperStr = ""
        
        
    If CheckBox3.Value = True Then
        ExportLine = "Object" & Chr(9) & " X1 " & Chr(9) & "Y1" & Chr(9) & "Z1" & Chr(9) & "X2" & Chr(9) & "Y2" & Chr(9) & "Z2" & vbNewLine
    Else
        ExportLine = "Object" & Chr(9) & "X1" & Chr(9) & "Y1" & Chr(9) & "X2" & Chr(9) & "Y2" & vbNewLine
    End If
    
    
       
    'sets temp folder
    Temp = Environ("temp")
    
    'deletes file if exist in temp
    If Dir(Temp & "\" & FlName) <> "" Then
        Kill Temp & "\" & FlName
    End If
    
    'copies the file
    FileCopy FileLocation, Temp & "\" & FlName
    
    'reads the file and populates it in textbox
    myfile = FileLocation
    

 
    Dim FileNum3 As Integer
    FileNum3 = FreeFile()
    Open myfile For Input As #FileNum3

    Do Until EOF(FileNum3)
        Line Input #FileNum3, textline
        
        If recordx2line = True Then
            If txbegin = True Then
                'textline = Replace(textline, "", "")
            Else
                textline = Replace(textline, " ", "")
            End If
        Else
            textline = Replace(textline, " ", "")
        End If
        
        
        textx = textx & textline & Chr(10)
        
        If (textline = "SECTION") Or (textline = "SEQEND") Or (textline = "ENDSEC") Then
            RecordX1line = False
            RecordY1line = False
            recordZ1line = False
            recordx2line = False
            RecordY2line = False
            recordz2line = False
            VerBegin = False
            VerRBegin = False
            pntbegin = False
            lnbegin = False
            crbeing = False
            txbegin = False
            arcbegin = False
            
            
            If VertexCount = 2 Then
                ExportLine = ExportLine & Chr(10)
                VertexCount = 1
                
            End If
            
        End If

            
        If (RecordX1line = True) Or (RecordY1line = True) Or (recordZ1line = True) Or (recordx2line = True) Or (RecordY2line = True) Or (recordz2line = True) Then
            
            'PointCounter = PointCounter + 1
            KeeperStr = textline
            
            
            If VerRBegin = True Then
            

                
                If RecordX1line = True Then
                    l1 = textline
                ElseIf RecordY1line = True Then
                    l2 = textline
                ElseIf recordZ1line = True Then
                    l3 = textline
                    If previoustext = "" Then
                        previoustext = l1 & Chr(9) & l2 & Chr(9) & l3 & Chr(9)
                    Else
                        currenttext = l1 & Chr(9) & l2 & Chr(9) & l3 & Chr(9)
                        ExportLine = ExportLine & "Poly/Rec" & Chr(9) & previoustext & currenttext
                        'ExportLine = ExportLine & Chr(10)
                        previoustext = currenttext
                        currenttext = ""
                    End If
                End If
                
                
            ElseIf VerBegin = True Then
            
  
                If (VertexCount = 2) Or (VertexCount = 4) Then
                    ExportLine = ExportLine & textline & Chr(9)
                End If
                
                If recordZ1line = True Then
                    VertexCount = VertexCount + 1
                End If
                

                
            Else
                ExportLine = ExportLine & textline & Chr(9)
            End If
            
                 
            If lnbegin = True Then
                If recordz2line = True Then
                    begin = False
                    VerBegin = False
                    VerRBegin = False
                    pntbegin = False
                    lnbegin = False
                    crbeing = False
                    txbegin = False
                    arcbegin = False
                End If
            ElseIf (txbegin = True) Or (crbeing = True) Then
                If recordx2line = True Then
                    'ExportLine = ExportLine & textline & Chr(9)
                    begin = False
                    VerBegin = False
                    VerRBegin = False
                    pntbegin = False
                    lnbegin = False
                    crbeing = False
                    txbegin = False
                End If
            ElseIf arcbegin = True Then
                If recordz2line = True Then
                    begin = False
                    VerBegin = False
                    VerRBegin = False
                    pntbegin = False
                    lnbegin = False
                    crbeing = False
                    txbegin = False
                    arcbeing = False
                End If
            Else
                If recordZ1line = True Then
                    
                    If VerBegin = True Then
                        If VertexCount = 5 Then
                            begin = False
                            VerBegin = False
                            VerRBegin = False
                            pntbegin = False
                            lnbegin = False
                            crbeing = False
                            txbegin = False
                            arcbegin = False
                        End If
                    Else
                    
                        begin = False
                        VerBegin = False
                        VerRBegin = False
                        pntbegin = False
                        lnbegin = False
                        crbeing = False
                        txbegin = False
                        arcbegin = False
                    
                    End If
                    
                    
                End If
            End If
            
            
            RecordX1line = False
            RecordY1line = False
            recordZ1line = False
            recordx2line = False
            RecordY2line = False
            recordz2line = False
            
        
            
        Else
            If begin = False Then
                If textline = "VERTEX" Then
                    
                    VertexCount = 1
                    
                    If loopNumbering >= finalrow Then
                        checkRecorPol
                    End If
                    
                    
                    If vertexcounting = 4 Then
                    
                        ExportLine = ExportLine & vbNewLine & "Rectangle" & Chr(9)
                        VerBegin = True
                        begin = True
                    Else
                    
                        ExportLine = ExportLine & vbNewLine
                        VerRBegin = True
                        begin = True
                    
                    End If
                    
                ElseIf textline = "POINT" Then
                    ExportLine = ExportLine & vbNewLine & "Point" & Chr(9)
                    pntbegin = True
                    begin = True
                ElseIf textline = "LINE" Then
                    ExportLine = ExportLine & vbNewLine & "Line" & Chr(9)
                    lnbegin = True
                    begin = True
                ElseIf textline = "CIRCLE" Then
                    ExportLine = ExportLine & vbNewLine & "Circle" & Chr(9)
                    'txbeing = True
                    crbeing = True
                    begin = True
                ElseIf textline = "ARC" Then
                    ExportLine = ExportLine & vbNewLine & "Arc" & Chr(9)
                    'txbeing = True
                    arcbegin = True
                    begin = True
                ElseIf textline = "TEXT" Then
                    'TXTNum = 1
                    ExportLine = ExportLine & vbNewLine & "Text" & Chr(9)
                    txbegin = True
                    begin = True
                End If
                
            Else

                    If textline = "10" Then
                        RecordX1line = True
                    ElseIf textline = "20" Then
                        RecordY1line = True
                    ElseIf textline = "30" Then
                        recordZ1line = True
                    ElseIf textline = "11" Then
                        recordx2line = True
                    ElseIf textline = "21" Then
                        RecordY2line = True
                    ElseIf textline = "31" Then
                        recordz2line = True
                    ElseIf (txbegin = True) And (RecordX1line = False) And (RecordY1line = False) And (recordZ1line = False) And (recordx2line = False) And (RecordY2line = False) And (recordz2line = False) And textline = "1" Then
                        recordx2line = True
                    ElseIf (crbeing = True) And (RecordX1line = False) And (RecordY1line = False) And (recordZ1line = False) And (recordx2line = False) And (RecordY2line = False) And (recordz2line = False) And textline = "40" Then
                        recordx2line = True
                        txbegin = False
                    ElseIf (arcbegin = True) And (RecordX1line = False) And (RecordY1line = False) And (recordZ1line = False) And (recordx2line = False) And (RecordY2line = False) And (recordz2line = False) And textline = "40" Then
                        recordx2line = True
                        txbegin = False
                    ElseIf (arcbegin = True) And (RecordX1line = False) And (RecordY1line = False) And (recordZ1line = False) And (recordx2line = False) And (RecordY2line = False) And (recordz2line = False) And textline = "50" Then
                        RecordY2line = True
                    ElseIf (arcbegin = True) And (RecordX1line = False) And (RecordY1line = False) And (recordZ1line = False) And (recordx2line = False) And (RecordY2line = False) And (recordz2line = False) And textline = "51" Then
                        recordz2line = True
                        
                        
                    End If
                
                
            End If
            
        End If
        
        
        loopNumbering = loopNumbering + 1
        
    Loop
    
    Close #FileNum3
    
    'deletes file if exist in temp
    If Dir(Temp & "\" & FlName) <> "" Then
        Kill Temp & "\" & FlName
    End If
    
    TextBox2.text = text
    TextBox3.text = ""
    If CheckBox4.Value = True Then
        TextBox3.text = TextBox3.text & "Points from " & FlName & vbNewLine
    Else
        TextBox3.text = TextBox3.text & "Points" & vbNewLine
    End If
    
    If CheckBox5.Value = True Then
        TextBox3.text = TextBox3.text & FORMAT(Now, "mm/dd/yyyy h:mm AM/PM") & " " & vbNewLine & vbNewLine
    End If
    
    TextBox3.text = TextBox3.Value & ExportLine
    TextBox2.text = textx
    
    
    
    
End Sub

Private Sub CommandButton2_Click()

    Dim result As Variant
    result = InputBox("Please enter the title of the new sheet. Once a sheet name is set it can't be renamed without removing all objects and re-linking them to the sheet.", "Import Sheet Title", "Default")
    
    ReadTextFileAndImport
    Sheets.Add After:=ActiveSheet
    
    If Len(result) > 30 Then result = Mid(result, 1, 30)
    If result = "Default" Then
    ElseIf Len(result) > 0 Then
        ActiveSheet.Name = result
    End If
    Dim R As Integer
    
    R = 4
    Dim c As Integer
    c = 1
    
    If CheckBox4.Value = True Then
        Cells(1, 1).Value = "Points from " & FlName
    Else
        Cells(1, 1).Value = "Points"
    End If
    
    If CheckBox5.Value = True Then
        Dim dtn As String
        dtn = FORMAT(Now, "mm/dd/yyyy")
        Cells(2, 1).Value = dtn & " "
        Cells(2, 3).Value = FORMAT(Now, "h:mm AM/PM")
        Columns("A:A").ColumnWidth = 12
    Else
    End If
    
    
    
    Dim RowContents As String
    
    
    For i = 1 To Len(ExportLine)
        If Mid(ExportLine, i, 1) = Chr(10) Then
            Cells(R, c).Value = RowContents
            RowContents = ""
            R = R + 1
            c = 1
            'If r > 46 Then
            '    c = c + 3
            '    r = 2
            'End If
        ElseIf Mid(ExportLine, i, 1) = Chr(9) Then
            Cells(R, c).Value = RowContents
            RowContents = ""
            c = c + 1
        Else
            RowContents = RowContents & Mid(ExportLine, i, 1)
        End If
    Next

    Me.Hide
    AddingValuesWithOpenedDXF
    ShowGraphOri
    
    
    
    
End Sub



Private Sub CommandButton3_Click()
On Error Resume Next

    ReadTextFileAndImport
On Error GoTo 0

End Sub

Private Sub UserForm_Click()
'    Application.DisplayAlerts = False
    
End Sub

Public Sub AddingValuesWithOpenedDXF()
    
    AutoZEnabledON
    Dim xxx As String
    Dim starting As Integer
    Dim previous As String
    Dim active As String
    Dim ending As Integer
    
    Dim LINESC As Collection
    Set LINESC = New Collection
    
    Dim RECC As Collection
    Set RECC = New Collection
    
    Dim PNTC As Collection
    Set PNTC = New Collection
    
    Dim CRLC As Collection
    Set CRLC = New Collection
    
    Dim TXTC As Collection
    Set TXTC = New Collection
    
    Dim ARCC As Collection
    Set ARCC = New Collection
    
    
    Dim countblank As Integer
    countblank = 1
    
    
    
    For i = 5 To 2000000
        If Cells(i, 1).Value = "" Then
            countblank = countblank + 1
            If countblank >= 10 Then
                Exit For
            End If
            
        Else
            countblank = 1
        End If
        Cells(i, 1).Activate
        If Cells(i, 1).Value = "Line" Then
            LINESC.Add (i)
        ElseIf Cells(i, 1).Value = "Rectangle" Then
            RECC.Add (i)
        ElseIf Cells(i, 1).Value = "Poly/Rec" Then
            LINESC.Add (i)
        ElseIf Cells(i, 1).Value = "Point" Then
            PNTC.Add (i)
        ElseIf Cells(i, 1).Value = "Circle" Then
            CRLC.Add (i)
        ElseIf Cells(i, 1).Value = "Text" Then
            TXTC.Add (i)
        ElseIf Cells(i, 1).Value = "Arc" Then
            ARCC.Add (i)
            
        End If
        
        
    Next
       
    With ActiveSheet
        If LINESC.Count = 0 Then
        Else
        
            .Range("B" & LINESC.Item(1) & ":G" & LINESC.Item(LINESC.Count)).Activate
            xxx = "TESTLINE4"
            AddingNames (xxx)
        End If
        
        If RECC.Count = 0 Then
        Else
            .Range("B" & RECC.Item(1) & ":G" & RECC.Item(RECC.Count)).Activate
            xxx = "TESTREC"
            AddingNames (xxx)
        End If
        
        If PNTC.Count = 0 Then
        Else
            .Range("B" & PNTC.Item(1) & ":D" & PNTC.Item(PNTC.Count)).Activate
            xxx = "TESTPT2"
            AddingNames (xxx)
        End If
        
        If CRLC.Count = 0 Then
        Else
            .Range("B" & CRLC.Item(1) & ":E" & CRLC.Item(CRLC.Count)).Activate
            xxx = "TESTCIRR"
            AddingNames (xxx)
        End If
        
        If ARCC.Count = 0 Then
        Else
            .Range("B" & ARCC.Item(1) & ":G" & ARCC.Item(ARCC.Count)).Activate
            xxx = "TESTARCR"
            AddingNames (xxx)
        End If
        
        If TXTC.Count = 0 Then
        Else
            .Range("B" & TXTC.Item(1) & ":E" & TXTC.Item(TXTC.Count)).Activate
            xxx = "TESTTEXT"
            AddingNames (xxx)
        End If
    End With
    
    
    AutoZEnabledOFF
    
    Cells(1, 1).Activate
    
    
    graphnr
    
End Sub

Private Sub UserForm_Initialize()

CheckLiceNumb


End Sub
Attribute VB_Name = "UserForm7"
Attribute VB_Base = "0{6116E5F9-781D-4E6A-A731-F770E9716637}{4DFB92D8-347E-456D-9971-29F091BD5FE4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    ScrollBar1.Value = 255
    ScrollBar2.Value = 0
    ScrollBar3.Value = 0
    
End Sub

Private Sub CommandButton2_Click()
    ScrollBar1.Value = 0
    ScrollBar2.Value = 0
    ScrollBar3.Value = 255

End Sub

Private Sub CommandButton3_Click()
    ScrollBar1.Value = 255
    ScrollBar2.Value = 255
    ScrollBar3.Value = 0

End Sub

Private Sub CommandButton4_Click()
    ScrollBar1.Value = 0
    ScrollBar2.Value = 0
    ScrollBar3.Value = 0

End Sub

Private Sub CommandButton5_Click()
    ScrollBar1.Value = 255
    ScrollBar2.Value = 255
    ScrollBar3.Value = 255

End Sub

Private Sub CommandButton6_Click()
    
    Dim TPC As String
    TPC = UserForm3.ComboBox7.text
    
    If TPC = "Line" Then
        R_L = ScrollBar1.Value
        G_L = ScrollBar2.Value
        B_L = ScrollBar3.Value
    ElseIf TPC = "Rectangle" Then
        R_R = ScrollBar1.Value
        G_R = ScrollBar2.Value
        B_R = ScrollBar3.Value
    ElseIf TPC = "Circle" Then
        R_C = ScrollBar1.Value
        G_C = ScrollBar2.Value
        B_C = ScrollBar3.Value
    ElseIf TPC = "Point" Then
        R_P = ScrollBar1.Value
        G_P = ScrollBar2.Value
        B_P = ScrollBar3.Value
    ElseIf TPC = "Arc" Then
        R_A = ScrollBar1.Value
        G_A = ScrollBar2.Value
        B_A = ScrollBar3.Value
    ElseIf TPC = "Distance" Then
        R_D = ScrollBar1.Value
        G_D = ScrollBar2.Value
        B_D = ScrollBar3.Value
    ElseIf TPC = "Chart Background" Then
        R_CHART = ScrollBar1.Value
        G_CHART = ScrollBar2.Value
        B_CHART = ScrollBar3.Value
    End If
    
    UserForm3.save
    graphnr
    Unload Me
    
    
    
    
End Sub

Private Sub CommandButton7_Click()
    ScrollBar1.Value = 75
    ScrollBar2.Value = 75
    ScrollBar3.Value = 75
End Sub

Private Sub ScrollBar1_Change()
    updateTextBox
    
End Sub

Private Sub ScrollBar2_Change()

    updateTextBox
End Sub

Private Sub ScrollBar3_Change()

    updateTextBox
End Sub

Private Sub TextBox1_Change()
    
    On Error Resume Next

    ScrollBar1.Value = TextBox1.text
    
    On Error GoTo 0
    
    
End Sub


Sub updateTextBox()

   
    TextBox1.text = ScrollBar1.Value
    Label1.BackColor = RGB(ScrollBar1.Value, 0, 0)
    TextBox2.text = ScrollBar2.Value
    Label2.BackColor = RGB(0, ScrollBar2.Value, 0)
    TextBox3.text = ScrollBar3.Value
    Label3.BackColor = RGB(0, 0, ScrollBar3.Value)
    Label7.BackColor = RGB(ScrollBar1.Value, ScrollBar2.Value, ScrollBar3.Value)

    Exit Sub


End Sub

Private Sub UserForm_Initialize()
    Dim TPC As String
    TPC = UserForm3.ComboBox7.text
    
    If TPC = "Line" Then
        ScrollBar1.Value = R_L
        ScrollBar2.Value = G_L
        ScrollBar3.Value = B_L
    ElseIf TPC = "Rectangle" Then
        ScrollBar1.Value = R_R
        ScrollBar2.Value = G_R
        ScrollBar3.Value = B_R
    ElseIf TPC = "Circle" Then
        ScrollBar1.Value = R_C
        ScrollBar2.Value = G_C
        ScrollBar3.Value = B_C
    ElseIf TPC = "Point" Then
        ScrollBar1.Value = R_P
        ScrollBar2.Value = G_P
        ScrollBar3.Value = B_P
    ElseIf TPC = "Arc" Then
        ScrollBar1.Value = R_A
        ScrollBar2.Value = G_A
        ScrollBar3.Value = B_A
    ElseIf TPC = "Distance" Then
        ScrollBar1.Value = R_D
        ScrollBar2.Value = G_D
        ScrollBar3.Value = B_D
    ElseIf TPC = "Chart Background" Then
        ScrollBar1.Value = R_CHART
        ScrollBar2.Value = G_CHART
        ScrollBar3.Value = B_CHART
    End If


    updateTextBox
End Sub

Attribute VB_Name = "UserForm8"
Attribute VB_Base = "0{D2FB6094-C423-4A7E-A2F4-8EB24342AE1A}{1C6806CA-616E-406D-A13A-FA08C42359CA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub CommandButton1_Click()

    On Error GoTo error
    Dim X As Double
    Dim Y As Double
    Dim z As Double
    X = TextBox1.Value
    Y = TextBox2.Value
    z = TextBox3.Value
    Set_Origin X, Y, z
    graphnr
    On Error GoTo 0
    
    Unload Me
    
    
    Exit Sub
    
error:
    MsgBox ("Please only enter only raw values. Do not enter separator values.")
    

End Sub



Private Sub UserForm_Initialize()

    Dim i As Integer
    
    For i = 0 To UserForms.Count
        If UserForms(i).Name = "UserForm5" Then
            Exit Sub
        End If
    Next
    
    Unload Me
    

End Sub

Private Sub UserForm_Terminate()

        
            If CustomOrigin = False Then
                UserForm5.OptionButton1.Value = True
            End If

    
    
End Sub
Attribute VB_Name = "UserForm9"
Attribute VB_Base = "0{3477217B-CAB8-4692-9452-65724795D79D}{74B867B8-6C00-465F-AA9E-D36693F4A579}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

Dim Rx1 As String
Dim Ry1 As String
Dim Rz1 As String
Dim Rx2 As String
Dim Ry2 As String
Dim Rz2 As String

Dim RW As Integer


Dim OB As String

Dim x1 As String
Dim y1 As String
Dim z1 As String

Dim x2 As String
Dim y2 As String
Dim z2 As String

Dim complete_str As String
Dim Current_Command As String

Dim action1 As Boolean
Dim action2 As Boolean
Dim action3 As Boolean
Dim action4 As Boolean
Dim action5 As Boolean
Dim action6 As Boolean


Public Sub SetUpTheInput(R As Integer)

    RW = R

End Sub

Private Sub ClearCommand()

    action1 = False
    action2 = False
    action3 = False
    action4 = False
    action5 = False
    action6 = False
    OB = ""
    Rx1 = ""
    Ry1 = ""
    Rz1 = ""
    Rx2 = ""
    Ry2 = ""
    Rz2 = ""
    
    x1 = ""
    x2 = ""
    y1 = ""
    y2 = ""
    z1 = ""
    z2 = ""
    
    Current_Command = ""
    
    Label1.Caption = "Please enter a command:"
            
End Sub

Private Sub CommandButton1_Click()
    Run_Command
    
End Sub

Sub Run_Command()
    
    On Error Resume Next
    TextBox1.SetFocus
    If action1 = False Then
        'object not yet selected
        If TextBox1.text = "L" Or TextBox1.text = "Line" Then
            action1 = True
            OB = "L"
            Label1.Caption = "Please enter X1 Value for the Line and press enter."
        ElseIf TextBox1.text = "R" Or TextBox1.text = "Rec" Or TextBox1.text = "Rectangle" Then
            action1 = True
            OB = "R"
            Label1.Caption = "Please enter X1 Value for the Rectangle and press enter."
        ElseIf TextBox1.text = "P" Or TextBox1.text = "Point" Then
            action1 = True
            OB = "P"
            Label1.Caption = "Please enter X Value for the Point and press enter."
        ElseIf TextBox1.text = "C" Or TextBox1.text = "Cir" Or TextBox1.text = "Circle" Then
            action1 = True
            OB = "C"
            Label1.Caption = "Please enter center X Value for Circle and press enter."
        ElseIf TextBox1.text = "A" Or TextBox1.text = "Arc" Then
            action1 = True
            OB = "A"
            Label1.Caption = "Please enter center X Value for Arc and press enter."
        ElseIf TextBox1.text = "T" Or TextBox1.text = "Text" Or TextBox1.text = "Txt" Then
            action1 = True
            OB = "T"
            Label1.Caption = "Please enter X Value for Text location and press enter."
        Else
            Label1.Caption = "Command not found. Please try another and hit enter."
        End If
    Else
    TextBox1.SetFocus
        'action1 is true, there must be an object
        If TextBox1.text = "E" Or TextBox1.text = "end" Or TextBox1.text = "undo" Or TextBox1.text = "back" Or TextBox1.text = "clear" Then
            'this is the undo
            ClearCommand
            Exit Sub
        End If
        
        'if not cleared, continue
        If OB = "L" Then
            If action2 = True Then
                If action3 = True Then
                    If action4 = True Then
                        If action5 = True Then
                            If action6 = True Then
                                'this is final step
                                z2 = "0"
                                z2 = CDbl(TextBox1.text)
                                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " X: " & x2 & " Y: " & y2 & " Please enter Z2 value for Line and press enter."
                                
                                'end of object
                                '--------------------------------------
                                ObjectCompletion
                                
                                Exit Sub
                            End If
                            'this is y2
                            y2 = "0"
                            y2 = CDbl(TextBox1.text)
                            action6 = True
                            Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " X2: " & x2 & " Y2: " & y2 & " Please enter Z2 value for Line and press enter."
                            Exit Sub
                        End If
                        'this is x2
                        x2 = "0"
                        x2 = CDbl(TextBox1.text)
                        action5 = True
                        Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " X2: " & x2 & " Please enter Y2 value for Line and press enter."
                        Exit Sub
                    End If
                    'this is z1
                    z1 = "0"
                    z1 = CDbl(TextBox1.text)
                    action4 = True
                    Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " Please enter X2 value for Line and press enter."
                    Exit Sub
                End If
                'this is y1
                y1 = "0"
                y1 = CDbl(TextBox1.text)
                action3 = True
                Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Please enter Z1 value for Line and press enter."
                Exit Sub
            End If
            'this is x1
            x1 = "0"
            x1 = CDbl(TextBox1.text)
            action2 = True
            Label1.Caption = "X1: " & x1 & " Please enter Y1 value for Line and press enter."
            Exit Sub
        ElseIf OB = "R" Then
            If action2 = True Then
                If action3 = True Then
                    If action4 = True Then
                        If action5 = True Then
                            If action6 = True Then
                                'this is final step
                                z2 = "0"
                                z2 = CDbl(TextBox1.text)
                                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " X: " & x2 & " Y: " & y2 & " Please enter Z2 value for Line and press enter."
                                
                                'end of object
                                '--------------------------------------
                                ObjectCompletion
                                Exit Sub
                            End If
                            'this is y2
                            y2 = "0"
                            y2 = CDbl(TextBox1.text)
                            action6 = True
                            Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " X2: " & x2 & " Y2: " & y2 & " Please enter Z2 value for Rectangle and press enter."
                            Exit Sub
                        End If
                        'this is x2
                        x2 = "0"
                        x2 = CDbl(TextBox1.text)
                        action5 = True
                        Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " X2: " & x2 & " Please enter Y2 value for Rectangle and press enter."
                        Exit Sub
                    End If
                    'this is z1
                    z1 = "0"
                    z1 = CDbl(TextBox1.text)
                    action4 = True
                    Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " Please enter X2 value for Rectangle and press enter."
                    Exit Sub
                End If
                'this is y1
                y1 = "0"
                y1 = CDbl(TextBox1.text)
                action3 = True
                Label1.Caption = "X1: " & x1 & " Y1: " & y1 & " Please enter Z1 value for Rectangle and press enter."
                Exit Sub
            End If
            'this is x1
            x1 = "0"
            x1 = CDbl(TextBox1.text)
            action2 = True
            Label1.Caption = "X1: " & x1 & " Please enter Y1 value for Rectangle and press enter."
            Exit Sub
        ElseIf OB = "P" Then
            If action2 = True Then
                If action3 = True Then
                    'this is z1
                    z1 = "0"
                    z1 = CDbl(TextBox1.text)
                    action4 = True
                    Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " Please enter X2 value for Line and press enter."
                    
                    'completed point creation
                    '---------------------------------------
                    ObjectCompletion
                    Exit Sub
                End If
                'this is y1
                y1 = "0"
                y1 = CDbl(TextBox1.text)
                action3 = True
                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Please enter Z value for Point and press enter."
                Exit Sub
            End If
            'this is x1
            x1 = "0"
            x1 = CDbl(TextBox1.text)
            action2 = True
            Label1.Caption = "X: " & x1 & " Please enter Y value for Point and press enter."
            Exit Sub
        ElseIf OB = "C" Then
            If action2 = True Then
                If action3 = True Then
                    If action4 = True Then
                        'this is x2
                        x2 = "0"
                        x2 = CDbl(TextBox1.text)
                        action5 = True
                        Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " X: " & x2 & " Please enter Y2 value for Line and press enter."
                        
                        'object completed
                        '-----------------------------------------
                        ObjectCompletion
                        
                        Exit Sub
                    End If
                    'this is z1
                    z1 = "0"
                    z1 = CDbl(TextBox1.text)
                    action4 = True
                    Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " Please enter Radius value for Circle and press enter."
                    Exit Sub
                End If
                'this is y1
                y1 = "0"
                y1 = CDbl(TextBox1.text)
                action3 = True
                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Please enter Center Z value for Circle and press enter."
                Exit Sub
            End If
            'this is x1
            x1 = "0"
            x1 = CDbl(TextBox1.text)
            action2 = True
            Label1.Caption = "X: " & x1 & " Please enter center Y value for Circle and press enter."
            Exit Sub
        ElseIf OB = "A" Then
            If action2 = True Then
                If action3 = True Then
                    If action4 = True Then
                        If action5 = True Then
                            If action6 = True Then
                                'this is final step
                                z2 = "0"
                                z2 = CDbl(TextBox1.text)
                                If z2 > 360 Then
                                    z2 = 360
                                ElseIf z2 < 0 Then
                                    z2 = 0
                                End If
                                
                                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " X: " & x2 & " Y: " & y2 & " Please enter Z2 value for Line and press enter."
                                
                                'end of object
                                '--------------------------------------
                                ObjectCompletion
                                Exit Sub
                            End If
                            'this is y2
                            y2 = "0"
                            y2 = CDbl(TextBox1.text)
                            If y2 > 360 Then
                                y2 = 360
                            ElseIf y2 < 0 Then
                                y2 = 0
                            End If
                            action6 = True
                            Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " R: " & x2 & " S: " & y2 & " Please enter Ending Angle (0-360) value for Arc and press enter."
                            Exit Sub
                        End If
                        'this is x2
                        x2 = "0"
                        x2 = CDbl(TextBox1.text)
                        action5 = True
                        Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " R: " & x2 & " Please enter Starting Angle (0-360) value for Arc and press enter."
                        Exit Sub
                    End If
                    'this is z1
                    z1 = "0"
                    z1 = CDbl(TextBox1.text)
                    action4 = True
                    Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " Please enter Radius value for Arc and press enter."
                    Exit Sub
                End If
                'this is y1
                y1 = "0"
                y1 = CDbl(TextBox1.text)
                action3 = True
                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Please enter center Z value for Arc and press enter."
                Exit Sub
            End If
            'this is x1
            x1 = "0"
            x1 = CDbl(TextBox1.text)
            action2 = True
            Label1.Caption = "X: " & x1 & " Please enter center Y value for Arc and press enter."
            Exit Sub
        ElseIf OB = "T" Then
            If action2 = True Then
                If action3 = True Then
                    If action4 = True Then

                        'this is x2
                        x2 = "TEXT"
                        x2 = TextBox1.text
                        action5 = True
                        Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " TEXT: " & x2 & " Please enter Y2 value for Line and press enter."
                        
                        'object completed
                        '----------------------------------------
                        ObjectCompletion
                        
                        Exit Sub
                    End If
                    'this is z1
                    z1 = "0"
                    z1 = CDbl(TextBox1.text)
                    action4 = True
                    Label1.Caption = "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " Please enter the TEXT for the Text object and press enter."
                    Exit Sub
                End If
                'this is y1
                y1 = "0"
                y1 = CDbl(TextBox1.text)
                action3 = True
                Label1.Caption = "X: " & x1 & " Y: " & y1 & " Please enter Z value for Text and press enter."
                Exit Sub
            End If
            'this is x1
            x1 = "0"
            x1 = CDbl(TextBox1.text)
            action2 = True
            Label1.Caption = "X: " & x1 & " Please enter Y value for Text and press enter."
            Exit Sub
        End If
    End If
    
TextBox1.SetFocus
    
End Sub

Sub ObjectCompletion()

    Dim str As String
    str = ""
    Dim os As String
    
    If OB = "L" Then
        os = "Line"
        str = "Line: " & "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " X2: " & x2 & " Y2: " & y2 & " Z2: " & z2
    ElseIf OB = "R" Then
        os = "Rectangle"
        str = "Rectangle: " & "X1: " & x1 & " Y1: " & y1 & " Z1: " & z1 & " X2: " & x2 & " Y2: " & y2 & " Z2: " & z2
    ElseIf OB = "P" Then
        os = "Point"
        str = "Point: " & "X: " & x1 & " Y: " & y1 & " Z: " & z1
    ElseIf OB = "C" Then
        os = "Circle"
        str = "Circle: " & "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " Radius: " & x2
    ElseIf OB = "A" Then
        os = "Arc"
        str = "Arc: " & "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " Radius: " & x2 & " Start: " & y2 & " End: " & z2
    ElseIf OB = "T" Then
        os = "Text"
        str = "Text: " & "X: " & x1 & " Y: " & y1 & " Z: " & z1 & " TEXT: " & x2
    End If
    
    
    AutoZEnabledON
    
    TextBox2.text = TextBox2.text & vbNewLine & str
    ActiveSheet.Range("A" & RW).Value = os
    
    ActiveSheet.Range("B" & RW).Value = x1
    ActiveSheet.Range("C" & RW).Value = y1
    ActiveSheet.Range("D" & RW).Value = z1
    
    ActiveSheet.Range("E" & RW).Value = x2
    ActiveSheet.Range("F" & RW).Value = y2
    ActiveSheet.Range("G" & RW).Value = z2
    
    If OB = "L" Or OB = "R" Or OB = "A" Then
        ActiveSheet.Range("B" & RW & ":G" & RW).Activate
    ElseIf OB = "P" Then
        ActiveSheet.Range("B" & RW & ":D" & RW).Activate
    ElseIf OB = "C" Or OB = "T" Then
        ActiveSheet.Range("B" & RW & ":E" & RW).Activate
    End If
    
    If OB = "L" Then
        AddingNames ("TESTLINE4")
    ElseIf OB = "R" Then
        AddingNames ("TESTREC")
    ElseIf OB = "P" Then
        AddingNames ("TESTPT2")
    ElseIf OB = "C" Then
        AddingNames ("TESTCIRR")
    ElseIf OB = "A" Then
        AddingNames ("TESTARCR")
    ElseIf OB = "T" Then
        AddingNames ("TESTTEXT")
    End If
    
    AutoZEnabledOFF
    
    ClearCommand
    
    graphnr
    
    ActiveSheet.Range("A1").Activate
    

End Sub







Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

    If KeyCode = 13 Then
        Run_Command
                    
        TextBox1.text = ""
        TextBox1.SetFocus
        
    End If
    
    TextBox1.SetFocus
End Sub



Private Sub UserForm_Initialize()
    Unload UserForm10
    Label2.Caption = "Avaliable Commands:" & vbNewLine & vbNewLine & _
                        "LINE or L" & vbNewLine & _
                        "RECTANGLE or R or REC"
                        
    Label3.Caption = "CIRCLE or CIR or C" & vbNewLine & _
                        "ARC or A" & vbNewLine & _
                        "TEXT or TXT or T" & vbNewLine & _
                        "POINT or P"

    Label5.Caption = "END or E or UNDO or BACK or CLEAR to cancle creation of object"
                        
    Label4.Caption = "To enter command type in box and then press the ENTER/RETURN key. The prompt above the command line will give input directions."
End Sub
Attribute VB_Name = "Version3"
Public ISWidth As Double
Public ISHeight As Double
Public ISLocationX As Double
Public ISLocationY As Double
Public ISCenterX As Double
Public ISCenterY As Double

Public BOWE As Double
Public BOHE As Double
Public BOWS As Double
Public BOHS As Double


Public Xrot As Double
Public Yrot As Double
Public Zrot As Double

Public ALx As Double
Public ALy As Double

Public ZMag As Double

Public ChartName3 As String

Public X1n As Double
Public X2n As Double
Public Y1n As Double
Public Y2n As Double
Public X3n As Double
Public X4n As Double
Public Y3n As Double
Public Y4n As Double

Dim r1 As Double
Dim x1 As String
Dim y1 As String
Dim x2 As String
Dim y2 As String
Dim z1 As String
Dim z2 As String

Dim lowestx As Double
Dim lowesty As Double
Dim highestx As Double
Dim highesty As Double




Public Xvals As Collection
Public Yvals As Collection
Public Zvals As Collection

'----------------------

Dim ElementNumber As Integer

Public Color_R As Integer
Public Color_G As Integer
Public Color_B As Integer
Public Wgt_O As Integer

Public Circle_Detail As Integer






Public Sub DefineDetails(d As Integer)

    Circle_Detail = d
End Sub

Public Sub v3Generate()
    ClearAllExcelDrawShapes
    PlaceShape
    V3Graphing
    
End Sub

Sub PlaceShape()

    On Error Resume Next
    

    ChartName3 = "EXCEL_DRAW_CADD"
    
    If ActiveSheet.Shapes(ChartName3).Visible = False Then
        If ISWidth = vbNull Or ISWidth = 0 Then
            ISWidth = 500
            ISHeight = 300
            ISLocationX = 100
            ISLocationY = 100
        End If
    Else
        If ISWidth = vbNull Or ISWidth = 0 Then
            ISWidth = 500
            ISHeight = 300
            ISLocationX = 100
            ISLocationY = 100
        Else
            
            ISWidth = ActiveSheet.Shapes(ChartName3).Width
            ISHeight = ActiveSheet.Shapes(ChartName3).Height
            ISLocationX = ActiveSheet.Shapes(ChartName3).Left
            ISLocationY = ActiveSheet.Shapes(ChartName3).Top
        
        End If
        
        ActiveSheet.Shapes(ChartName3).Delete
    End If
    
    On Error GoTo 0
    
    
    ActiveSheet.Shapes.AddShape(msoShapeRectangle, ISLocationX, ISLocationY, ISWidth, ISHeight).Select
    Selection.ShapeRange.ShapeStyle = msoShapeStylePreset1
    Selection.ShapeRange.Name = ChartName3
    Dim ofil As FillFormat
    Set ofil = ActiveSheet.Shapes(ChartName3).Fill
    With ofil
        .TwoColorGradient msoGradientHorizontal, 1
        With .GradientStops(1)
            .Color = RGB(96, 96, 96)
            .Position = 0
            .Transparency = 0
        End With
        With .GradientStops(2)
            .Color = RGB(245, 245, 245)
            .Position = 1
            .Transparency = 0
        End With
        '.GradientStops.Insert RGB:=RGB(128, 122, 201), Position:=0.5, Transparency:=0
        .Visible = msoTrue
    End With



End Sub

Sub ClearAllShapes()
    For Each Shape In ActiveSheet.Shapes
        Shape.Delete
    Next
End Sub

Sub ClearAllExcelDrawShapes()
    Dim NSPE As String
    For Each Shape In ActiveSheet.Shapes
        NSPE = ""
        NSPE = Shape.Name
        If Left(NSPE, 15) = "EXCELDRAW_ITEM_" Then
            Shape.Delete
        End If
    Next
End Sub
Function ReturnEndPoint(LX1 As Double, LY1 As Double, LX2 As Double, LY2 As Double, FirstPointONE_T_orPointTWO_F_ As Boolean)
    If FirstPointONE_T_orPointTWO_F_ = False Then
    
        Dim A As Double
        Dim b As Double
        Dim c As Double
        Dim AA As Double
        Dim BB As Double
        Dim CC As Double
        Dim AB As Double
        Dim BA As Double
        Dim BC As Double
        Dim CD As Double
        
        If LX1 > LX2 Then
            A = LX1 - LX2
        Else
            A = LX2 - LX1
        End If
        
        If LY1 > LY2 Then
            b = LY1 - LY2
        Else
            b = LY2 - LY1
        End If
        
        c = Math.Sqr(((A * A) + (b * b)))
        
        If BOWE > LX1 Then
            BA = BOWE - LX1
        Else
            BA = LX1 - BOWS
        End If
        
        AA = BA - A
        
        If BOHS > LY1 Then
            BB = BOHS - LY1
        Else
            BB = LY1 - BOHE
        End If
        
        BC = BB - b
        
        CC = Math.Sqr(((AA * AA) + (BC * BC)))
        
        ReturnEndPoint = c - CC

        
    Else
    End If
End Function

Sub CreateLinev3(XS As Double, YS As Double, XE As Double, YE As Double, RGB_R As Integer, RGB_G As Integer, RGB_B As Integer, Wgt As Integer)

 
    
    'ISLocationX = ActiveSheet.Shapes("EXCEL_DRAW_CADD").Left
    'ISLocationY = ActiveSheet.Shapes("EXCEL_DRAW_CADD").Top
    ISCenterX = ISLocationX + (ISWidth / 2)
    ISCenterY = ISLocationY + (ISHeight / 2)
    
    

    Dim asnfn As String
    asnfn = ActiveSheet.Name
        

    asnfn = Replace(asnfn, "/", "")
    asnfn = Replace(asnfn, ":", "")
    asnfn = Replace(asnfn, "\", "")
    asnfn = Replace(asnfn, " ", "")
    asnfn = Replace(asnfn, ",", "")
    asnfn = Replace(asnfn, ";", "")
    asnfn = Replace(asnfn, ".", "")
    asnfn = Replace(asnfn, "-", "")
    asnfn = Replace(asnfn, "_", "")
    asnfn = Replace(asnfn, "(", "")
    asnfn = Replace(asnfn, ")", "")
    asnfn = Replace(asnfn, "=", "")
    asnfn = Replace(asnfn, " ", "")
    asnfn = Replace(asnfn, "*", "")
    asnfn = Replace(asnfn, "&", "")
    asnfn = Replace(asnfn, "^", "")
    asnfn = Replace(asnfn, "%", "")
    asnfn = Replace(asnfn, "$", "")
    asnfn = Replace(asnfn, "#", "")
    asnfn = Replace(asnfn, "@", "")
    asnfn = Replace(asnfn, "!", "")
    asnfn = Replace(asnfn, "~", "")
    asnfn = Replace(asnfn, "`", "")
    asnfn = Replace(asnfn, "?", "")
    asnfn = Replace(asnfn, ".", "")
    asnfn = Replace(asnfn, ",", "")
    asnfn = Replace(asnfn, "<", "")
    asnfn = Replace(asnfn, ">", "")
    asnfn = Replace(asnfn, "]", "")
    asnfn = Replace(asnfn, "[", "")
    asnfn = Replace(asnfn, "}", "")
    asnfn = Replace(asnfn, "{", "")
    asnfn = Replace(asnfn, "|", "")
    asnfn = Replace(asnfn, "+", "")

    
    PlaceShape
    zf = ZoomMag
    
    Dim ShapeNum As Integer
    Dim LX1 As Double
    Dim LY1 As Double
    Dim LX2 As Double
    Dim LY2 As Double
    LX1 = (ISCenterX + XS)
    LY1 = (ISCenterY + YS)
    LX2 = (ISCenterX + XE)
    LY2 = (ISCenterY + YE)
    

    BOWE = (ISCenterX + (ISWidth / 2))
    BOWS = (ISCenterX - (ISWidth / 2))
    BOHE = (ISCenterY + (ISHeight / 2))
    BOHS = (ISCenterY - (ISHeight / 2))
    
    Dim Denominator As Double
    
    
    'checks the first point
    If LX1 <= BOWE And LX1 >= BOWS Then
        'X1 is within the range to graph
        If LY1 <= BOHE And LY1 >= BOHS Then
            'Y1 is within the range to graph

            If LX2 >= BOWE Then
                LY2 = LY1 - ((LY2 - LY1) * ((BOWE - LX1) / (LX1 - LX2)))
                LX2 = BOWE
            End If
                
            If LX2 <= BOWS Then
                LY2 = LY1 + ((LY2 - LY1) * ((BOWS - LX1) / (LX2 - LX1)))
                LX2 = BOWS
            End If
            
            If LY2 >= BOHE Then
                LX2 = LX1 - ((LX1 - LX2) * ((BOHE - LY1) / (LY2 - LY1)))
                LY2 = BOHE
            End If
            
            If LY2 <= BOHS Then
                LX2 = LX1 + ((LX1 - LX2) * ((BOHS - LY1) / (LY1 - LY2)))
                LY2 = BOHS
            End If
            
            With ActiveSheet.Shapes.AddLine(Math.Round(LX1), Math.Round((LY1)), Math.Round(LX2), Math.Round((LY2))).Line
            'With ActiveSheet.Shapes.AddLine(LX1 * Math.Cos((XRotation) * 3.141592 / 180) + 0.0001 * Math.Sin((XRotation) * 3.141592 / 180), LX1 * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation * 3.141592 / 180)) + LY1 * Math.Cos(((YRotation) * 3.141592 / 180)) - lz1 * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), LX2 * Math.Cos((XRotation) * 3.141592 / 180) + 0.0001 * Math.Sin((XRotation) * 3.141592 / 180), LX1 * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + LY2 * Math.Cos(((YRotation) * 3.141592 / 180)) - lz2 * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180))).Line
                '.DashStyle = msoLineDashDotDot
                .ForeColor.RGB = RGB(RGB_R, RGB_G, RGB_B)
                .Weight = Wgt
            End With
            ShapeNum = ActiveSheet.Shapes.Count
            
            ActiveSheet.Shapes(ShapeNum).Name = "EXCELDRAW_ITEM_" & ElementNumber
            Exit Sub
            
        End If
    End If
    
   
    'checks the second point
    If LX2 <= BOWE And LX2 >= BOWS Then
        'X12 is within the range to graph
        If LY2 <= BOHE And LY2 >= BOHS Then
            'Y2 is within the range to graph
            If LX1 >= BOWE Then
                LY1 = LY2 - ((LY2 - LY1) * ((BOWE - LX2) / (LX1 - LX2)))
                LX1 = BOWE
            End If
                
            If LX1 <= BOWS Then
                LY1 = LY2 + ((LY2 - LY1) * ((BOWS - LX2) / (LX2 - LX1)))
                LX1 = BOWS
            End If
            
            If LY1 >= BOHE Then
                LX1 = LX2 - ((LX2 - LX1) * ((BOHE - LY2) / (LY1 - LY2)))
                LY1 = BOHE
            End If
            
            If LY1 <= BOHS Then
                LX1 = LX2 + ((LX2 - LX1) * ((BOHS - LY2) / (LY2 - LY1)))
                LY1 = BOHS
            End If
            
            With ActiveSheet.Shapes.AddLine(Math.Round(LX1), Math.Round((LY1)), Math.Round(LX2), (Math.Round(LY2))).Line
                '.DashStyle = msoLineDashDotDot
                .ForeColor.RGB = RGB(RGB_R, RGB_G, RGB_B)
                .Weight = Wgt
            End With
            ShapeNum = ActiveSheet.Shapes.Count
            
            ActiveSheet.Shapes(ShapeNum).Name = "EXCELDRAW_ITEM_" & ElementNumber
        End If
    End If
    
    
    
End Sub

Sub ThreeDCalculations(TypeOfObject As String, X1n As Double, Y1n As Double, z1 As Double, X2n As Double, Y2n As Double, z2 As Double)

    If TypeOfObject = "Line" Then
    ElseIf TypeOfObject = "Polyline" Then
    ElseIf TypeOfObject = "Rectangle" Then
    End If
    
    CreateLine X1n, Y1n, X2n, Y2n
    
End Sub

Public Sub SetOrigin()
    
    

End Sub

Public Sub Create3DXYZarms()
    Dim xo As Double
    Dim xt As Double
    Dim yo As Double
    Dim yt As Double
    Dim LG As Double
    LG = 10
    
    Dim StartPX As Double
    StartPX = ISCenterX - (ISWidth / 2)

    Dim StartPY As Double
    StartPY = ISCenterY - (ISHeight / 2)
    
    'x axis
    xo = StartPX
    yo = StartPY
    xt = Math.Round((xo - 10) * Math.Cos((XRotation) * 3.141592 / 180) + 0.0001 * Math.Sin((XRotation) * 3.141592 / 180), 5)
    yt = Math.Round((xo - 10) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (yo) * Math.Cos(((YRotation) * 3.141592 / 180)) - 0 * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
    
    If xt < ISLocationX Then xt = ISLocationX
    If yt < ISLocationY Then yt = ISLocationY
    
    
    'CreateLine xo, yo, xt, yt, 0, 0, 255
    With ActiveSheet.Shapes.AddLine(xo, yo, xt, yt).Line
        .DashStyle = msoLineDashDotDot
        .ForeColor.RGB = RGB(0, 0, 255)
    End With
    ShapeNum = ActiveSheet.Shapes.Count
    ActiveSheet.Shapes(ShapeNum).Name = "EXCELDRAW_ITEM_XAXIS"
    
    
    'y axis
    xo = StartPX
    yo = StartPY
    xt = Math.Round(xo * Math.Cos((XRotation) * 3.141592 / 180) + 0.0001 * Math.Sin((XRotation) * 3.141592 / 180), 5)
    yt = Math.Round(xo * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (yo + 10) * Math.Cos(((YRotation) * 3.141592 / 180)) - 0 * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
    'CreateLine xo, ISHeight - 20, xt, yt, 0, 0, 255
    With ActiveSheet.Shapes.AddLine(xo + 50, yo + ISHeight - 50, xt + 50, yt + ISHeight - 50).Line
        .DashStyle = msoLineDashDotDot
        .ForeColor.RGB = RGB(255, 0, 0)
    End With
    ShapeNum = ActiveSheet.Shapes.Count
    ActiveSheet.Shapes(ShapeNum).Name = "EXCELDRAW_ITEM_YAXIS"
    

End Sub



Public Sub CheckLowest()
'
' graphnr Macro

    BobMarley
    CreateDefaults
    Exit Sub

'

End Sub

Public Sub V3Graphing()
'
' graphnr Macro
'


    If XRotation = vbNull Then XRotation = 180
    If YRotation = vbNull Then YRotation = 0
    If ZoomMag = 0 Then ZoomMag = 0.25

    lowestx = 1000000000
    lowesty = 1000000000
    highestx = -1000000000
    highesty = -1000000000
    
    CheckLowest

    BobMarley
    CreateDefaults
On Error Resume Next
    ClearAllExcelDrawShapes
    

    
    lines = ""
    rectangles = ""
    circles = ""
    points = ""
    texts = ""
    
    Set Xvals = New Collection
    Set Yvals = New Collection
    Set Zvals = New Collection
    
    Dim X1V As Double
    Dim Y1V As Double
    Dim Z1V As Double
    Dim X2V As Double
    Dim Y2V As Double
    Dim Z2V As Double
    
    
    Dim counter As Double
    counter = Names.Count
    
    
    For i = 1 To Names.Count
        
        X1V = 0
        Y1V = 0
        Z1V = 0
        X2V = 0
        Y2V = 0
        Z2V = 0
        
    
        Dim RNms As String
        RNms = Names(i).Name
        
        Dim Types As String
        Dim RELS As String
        Dim ZEN As String
        
        Dim UnlineDASHUnderlinePlacement As Integer
        UnlineDASHUnderlinePlacement = InStr(RNms, "__")
        
        Dim shnm As String
        shnm = Left(RNms, UnlineDASHUnderlinePlacement - 1)

        Dim UnlinePlacement As Integer
        UnlinePlacement = InStr(RNms, "_")
        Dim fullstring As String
        fullstring = Mid(RNms, UnlineDASHUnderlinePlacement + 2, UnlinePlacement - 1)
        
        Types = Left(fullstring, 1)
        Dim second As String
        second = Left(fullstring, 2)
        
        RELS = Right(second, 1)
        
        Dim third As String
        third = Left(fullstring, 3)
        ZEN = Right(third, 1)
        
        Dim str As String
        str = Types
        
        
        Dim asnfn As String
        asnfn = ActiveSheet.Name
        
        
        asnfn = Replace(asnfn, "/", "")
        asnfn = Replace(asnfn, ":", "")
        asnfn = Replace(asnfn, "\", "")
        asnfn = Replace(asnfn, " ", "")
        asnfn = Replace(asnfn, ",", "")
        asnfn = Replace(asnfn, ";", "")
        asnfn = Replace(asnfn, ".", "")
        asnfn = Replace(asnfn, "-", "")
        asnfn = Replace(asnfn, "_", "")
        asnfn = Replace(asnfn, "(", "")
        asnfn = Replace(asnfn, ")", "")
        asnfn = Replace(asnfn, "=", "")
        asnfn = Replace(asnfn, " ", "")
        asnfn = Replace(asnfn, "*", "")
        asnfn = Replace(asnfn, "&", "")
        asnfn = Replace(asnfn, "^", "")
        asnfn = Replace(asnfn, "%", "")
        asnfn = Replace(asnfn, "$", "")
        asnfn = Replace(asnfn, "#", "")
        asnfn = Replace(asnfn, "@", "")
        asnfn = Replace(asnfn, "!", "")
        asnfn = Replace(asnfn, "~", "")
        asnfn = Replace(asnfn, "`", "")
        asnfn = Replace(asnfn, "?", "")
        asnfn = Replace(asnfn, ".", "")
        asnfn = Replace(asnfn, ",", "")
        asnfn = Replace(asnfn, "<", "")
        asnfn = Replace(asnfn, ">", "")
        asnfn = Replace(asnfn, "]", "")
        asnfn = Replace(asnfn, "[", "")
        asnfn = Replace(asnfn, "}", "")
        asnfn = Replace(asnfn, "{", "")
        asnfn = Replace(asnfn, "|", "")
        asnfn = Replace(asnfn, "+", "")

        
        
If shnm = asnfn Then

        
'---------------------------------------------------
'---------------------------------------------------
'||             graphing rectangle                ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        'this is for rectangle
        If str = "R" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            
            
            
            
            stvar = cb2
            
            LineStar (ZEN)
            
          
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                  
                For R = 1 To rs
                  str2 = RNms
                'this is if it is NOT relivnet data
                If RELS = "A" Then
                
                    sh = ActiveSheet.Name
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                   If ZEN = "N" Then
                   
                        x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                        y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
            
                        x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                        y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                       
                        z1 = "0.0"
                        z2 = "0.0"
                    
                    
                    
                
                   Else
                   
                        x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                        y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
            
                        x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                        y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                       
                        z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                        z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Address
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                    End If
                   
                   
                    X1V = Range(x1).Value
                    Y1V = Range(y1).Value
                    X2V = Range(x2).Value
                    Y2V = Range(y2).Value
                    If (z1 = "0.0") Or (z2 = "0.0") Then
                        Z1V = 0
                        Z2V = 0
                Else
                    Z1V = Range(z1).Value
                    Z2V = Range(z2).Value
                End If
                    
                    
                If (z1 = "0.0") And (z2 = "0.0") Then
                    RecAbsNo
                    RecEnd
                Else
                    RecAbsZ
                    RecEnd
                End If
                   
                    For cl = 1 To Range(Names(i)).Columns.Count
                        If Cells(r1, Range(Names(i)).Columns(cl).Column).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Cells(r1, Range(Names(i)).Columns(cl).Column).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                    Next
                    
                    CheckHighestLowest X1V, X2V, Y1V, Y2V, Z1V, Z2V
                    
                    str2 = RNms
                    
                    'gets dxf format for line
                    'If (Z1 = "0.0") Or (Z2 = "0.0") Then
                    
                    ColorShapeModifier (str)
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    CreateLine X2n, Y2n, X3n, Y3n, Color_R, Color_G, Color_B, Wgt_O
                    CreateLine X3n, Y3n, X4n, Y4n, Color_R, Color_G, Color_B, Wgt_O
                    CreateLine X4n, Y4n, X1n, Y1n, Color_R, Color_G, Color_B, Wgt_O
                
                    
                    
                    'this whole section from here down needs to be an option so people can
                    'change the colors if needed, or omitted if they want to go with the
                    'default colors
                    
                    ElementNumber = ElementNumber + 1
                    
                    
             
             
             Else
             'this is if it is relitive
             
                    sh = ActiveSheet.Name
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                   End If
                   
                    X1V = Range(x1).Value
                    Y1V = Range(y1).Value
                    X2V = Range(x2).Value
                    Y2V = Range(y2).Value
                    If (z1 = "0.0") Or (z2 = "0.0") Then
                        Z1V = z1
                        Z2V = z2
                    Else
                        Z1V = Range(z1).Value
                        Z2V = Range(z2).Value
                    End If
                    
                    If (z1 = "0.0") Or (z2 = "0.0") Then
                        RecRelNo
                        RecEnd
                    Else
                        RecRelZ
                        RecEnd
                    End If
                   
                        If Range(x1).Value + Range(x2).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Range(x1).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                    
                        If Range(y1).Value + Range(y2).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Range(y1).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                  
                    
                  
                    str2 = RNms
                    
                    'If (Z1 = "0.0") Or (Z2 = "0.0") Then
                    
                        lines = lines _
                            & "  0" & vbCrLf _
                            & "LINE" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & X1V & vbCrLf _
                            & " 20" & vbCrLf _
                            & Y1V & vbCrLf _
                            & " 30" & vbCrLf _
                            & Z1V & vbCrLf _
                            & " 11" & vbCrLf _
                            & X2V + X1V & vbCrLf _
                            & " 21" & vbCrLf _
                            & Y2V + Y1V & vbCrLf _
                            & " 31" & vbCrLf _
                            & Z2V + Z1V & vbCrLf
                    
                    
'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
'
'
'   still working on this one as well
'
'
'/////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
                    ColorShapeModifier (str)
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    CreateLine X2n, Y2n, X3n, Y3n, Color_R, Color_G, Color_B, Wgt_O
                    CreateLine X3n, Y3n, X4n, Y4n, Color_R, Color_G, Color_B, Wgt_O
                    CreateLine X4n, Y4n, X1n, Y1n, Color_R, Color_G, Color_B, Wgt_O
                    

                     
                    ElementNumber = ElementNumber + 1
             
             
             End If
             
             
                 
                       
            Next
        

        
           
    
    
'---------------------------------------------------
'---------------------------------------------------
'||             graphing lines                    ||
'---------------------------------------------------
'---------------------------------------------------
    
    
    
    
    
    'line with 4 columns
        ElseIf str = "L" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""
            
            
            
            
            stvar = cb2
            
            LineStar (ZEN)
            
          
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                  
                For R = 1 To rs
                  str2 = RNms
                'this is if it is NOT relivnet data
                If RELS = "A" Then
                
                    sh = ActiveSheet.Name
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                    
                    
                    
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Address
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                    End If
                   
                   
                    X1V = Range(x1).Value
                    Y1V = Range(y1).Value
                    X2V = Range(x2).Value
                    Y2V = Range(y2).Value
                    If (z1 = "0.0") Or (z2 = "0.0") Then
                        Z1V = 0
                        Z2V = 0
                    Else
                        Z1V = Range(z1).Value
                        Z2V = Range(z2).Value
                    End If
                    
                   
                    For cl = 1 To Range(Names(i)).Columns.Count
                        If Cells(r1, Range(Names(i)).Columns(cl).Column).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Cells(r1, Range(Names(i)).Columns(cl).Column).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                    Next
                    
                    CheckHighestLowest X1V, X2V, Y1V, Y2V, Z1V, Z2V
                    
                    
                    str2 = RNms
                    
                    'gets dxf format for line
                    'If (Z1 = "0.0") Or (Z2 = "0.0") Then
                    
                        lines = lines & _
                            "  0" & vbCrLf _
                            & "LINE" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & X1V & vbCrLf _
                            & " 20" & vbCrLf _
                            & Y1V & vbCrLf _
                            & " 30" & vbCrLf _
                            & Z1V & vbCrLf _
                            & " 11" & vbCrLf _
                            & X2V & vbCrLf _
                            & " 21" & vbCrLf _
                            & Y2V & vbCrLf _
                            & " 31" & vbCrLf _
                            & Z2V & vbCrLf
                    
                        X1n = Math.Round((X1V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z1V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                        X2n = Math.Round((X2V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z2V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                        Y1n = Math.Round((X1V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y1V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z1V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y2n = Math.Round((X2V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y2V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z2V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                    

                    
                    'On Error GoTo 0
                    ColorShapeModifier (str)
                    
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    
                    
                    'this whole section from here down needs to be an option so people can
                    'change the colors if needed, or omitted if they want to go with the
                    'default colors
                    
                    ElementNumber = ElementNumber + 1
                    
                    
             
             
             Else
             'this is if it is relitive
             
                    sh = ActiveSheet.Name
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   
                   If ZEN = "N" Then
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                   
                    z1 = "0.0"
                    z2 = "0.0"
                
                   Else
                   
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    y2 = Cells(r1, Range(Names(i)).Columns(ae).Column).Address
                   
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    z2 = Cells(r1, Range(Names(i)).Columns(af).Column).Value
                        
                        If z1 = "" Then
                            z1 = "0.0"
                        End If
                        
                        If z2 = "" Then
                            z2 = "0.0"
                        End If
                        
                   End If
                   
                    X1V = Range(x1).Value
                    Y1V = Range(y1).Value
                    X2V = Range(x2).Value
                    Y2V = Range(y2).Value
                    If (z1 = "0.0") Or (z2 = "0.0") Then
                        Z1V = z1
                        Z2V = z2
                    Else
                        Z1V = Range(z1).Value
                        Z2V = Range(z2).Value
                    End If
                    
                   
                   
                        If Range(x1).Value + Range(x2).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Range(x1).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                    
                        If Range(y1).Value + Range(y2).Value >= Max Then
                            Max = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                        
                        If Range(y1).Value <= Min Then
                            Min = Cells(r1, Range(Names(i)).Columns(cl).Column).Value
                        End If
                  
                    CheckHighestLowest X1V, X2V + X1V, Y1V, Y2V + Y1V, Z1V, Z1V + Z2V
                    
                    str2 = RNms
                    
                    'If (Z1 = "0.0") Or (Z2 = "0.0") Then
                    
                        lines = lines _
                            & "  0" & vbCrLf _
                            & "LINE" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & X1V & vbCrLf _
                            & " 20" & vbCrLf _
                            & Y1V & vbCrLf _
                            & " 30" & vbCrLf _
                            & Z1V & vbCrLf _
                            & " 11" & vbCrLf _
                            & X2V + X1V & vbCrLf _
                            & " 21" & vbCrLf _
                            & Y2V + Y1V & vbCrLf _
                            & " 31" & vbCrLf _
                            & Z2V + Z1V & vbCrLf
                    
                    
                        X1n = Math.Round((X1V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z1V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                        X2n = Math.Round(((X2V + X1V) * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Z2V + Z1V) * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                        Y1n = Math.Round((X1V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y1V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z1V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y2n = Math.Round(((X2V + X1V) * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + ((Y2V + Y1V) * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((Z2V + Z1V) * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                    
                    
                    ColorShapeModifier (str)
                    
                    CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    

                     
                    ElementNumber = ElementNumber + 1
             
             
             End If
             
             
                 
                       
            Next
        

        
        
        
        
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing points 2                   ||
'---------------------------------------------------
'---------------------------------------------------
        
        ElseIf str = "p" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""

    
            stvar = cb1
            
            PointStar (ZEN)
         
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    str2 = RNms
                    sh = ActiveSheet.Name
                    r1 = Range(Names(i)).Rows(R).Row

                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    If ZEN = "N" Then
                        z1 = "0.0"
                    Else
                        z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    
                    End If
                   
                    'check min and max here
                    CheckHighestLowest Range(x1).Value, Range(x1).Value, Range(y1).Value, Range(y1).Value, Range(z1).Value, Range(z1).Value
                  
                    str2 = RNms
                    

                    If z1 = "0.0" Then
                    
                        'adds to the dxf format
                        points = points _
                            & "  0" & vbCrLf _
                            & "POINT" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                    
                        ColorShapeModifier (str)
                        Draw_Inner_Circle_EXD Range(x1).Value, Range(y1).Value, CDbl(z1), str, 12
                        
                    Else
                    
                        'adds to the dxf format
                        points = points _
                            & "  0" & vbCrLf _
                            & "POINT" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z1).Value & vbCrLf

                        
                        ColorShapeModifier (str)
                        Draw_Inner_Circle_EXD Range(x1).Value, Range(y1).Value, Range(z1).Value, str, 2
                        
                    End If
                    ElementNumber = ElementNumber + 1

                       
            Next
                
        
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing points 4                   ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing circles                    ||
'---------------------------------------------------
'---------------------------------------------------
        
         'cricle with r
        ElseIf str = "C" Then
        
            AA = ""
            AB = ""
            ac = ""
            ad = ""
            ae = ""
            af = ""

            
            stvar = cb3
            
            LineStar (ZEN)
            
           
        
        rs = Range(Names(i)).Rows.Count
            cls = Range(Names(i)).Columns.Count
                
                For R = 1 To rs
                    
                    
                    sh = ActiveSheet.Name
                    
                    r1 = Range(Names(i)).Rows(R).Row
                   


                If ZEN = "N" Then
                
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ac).Column).Address
                    z1 = "0.0"
                    
                Else
                    
                    x1 = Cells(r1, Range(Names(i)).Columns(AA).Column).Address
                    y1 = Cells(r1, Range(Names(i)).Columns(AB).Column).Address
        
                    x2 = Cells(r1, Range(Names(i)).Columns(ad).Column).Address
                    z1 = Cells(r1, Range(Names(i)).Columns(ac).Column).Value
                    
                End If
                

                Dim amtofloop As Integer
                amtofloop = 20
                Dim finalLOOP As Boolean
                finalLOOP = False
                
                'check min and max here
                CheckHighestLowest Range(x1).Value, Range(x2).Value, Range(y1).Value, Range(y1).Value, CDbl(z1), CDbl(z1)
                
                
                For ii = 0 To amtofloop
                        

                    rd = ""
                        
                    rd = Range(x2).Value
                    Dim ang As Integer
                    ang = Math.Round((360 / amtofloop) * ii)
                    
                    X1V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + Range(x1).Value, 5)
                    Y1V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - (Range(y1).Value * -1), 5)
                    
                    ii = ii + 1
                    If ii >= amtofloop Then
                        ii = 0
                        finalLOOP = True
                        
                    End If
                    
                    ang = Math.Round((360 / amtofloop) * ii)
                    
                    X2V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + Range(x1).Value, 5)
                    Y2V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - (Range(y1).Value * -1), 5)
 
                    Z1V = CDbl(z1)
                    Z2V = CDbl(z1)
                        
                    X1n = Math.Round((X1V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z1V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                    X2n = Math.Round((X2V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z2V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                    
                    Y1n = Math.Round((X1V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y1V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z1V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                    Y2n = Math.Round((X2V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y2V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z2V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                    

                    
                    ColorShapeModifier (str)
                    'If ii = 2 And finalLOOP = False Then
                    '    CreateLine X1n, Y1n, X2n, Y2n, 255, 255, 255
                    'Else
                        CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    'End If
                    
                    
                    If finalLOOP = True Then
                        finalLOOP = False
                        Exit For
                    End If
                     ii = ii - 1
                Next
                
                Draw_Inner_Circle_EXD Range(x1).Value, Range(y1).Value, CDbl(z1), str, CDbl(rd)
                
                
                    
                    str2 = RNms
                    
                    'draws a box

                    
                        circles = circles _
                        & "  0" & vbCrLf _
                        & "CIRCLE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 10" & vbCrLf _
                        & Range(x1).Value & vbCrLf _
                        & " 20" & vbCrLf _
                        & Range(y1).Value & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 40" & vbCrLf _
                        & Range(x2).Value & vbCrLf
                    
                    
                    
                    
                    
                    'this sets the colors of the lines
                 
                     
                    ElementNumber = ElementNumber + 1
                    
                    
            Next
        
                
        
        
     
        
'---------------------------------------------------
'---------------------------------------------------
'||           graphing TEXT                       ||
'---------------------------------------------------
'---------------------------------------------------
        
        
        
         'cricle with r
       
      End If
      
    End If
    
    Next
    
   On Error GoTo 0
   
    'Create3DXYZarms
    ActiveSheet.Shapes("EXCEL_DRAW_CADD").Select
    'ActiveSheet.Shapes("Block_Help").Select
    Selection.ShapeRange.ZOrder msoSendToBack

    


End Sub


Private Sub Draw_Inner_Circle_EXD(X1dic As Double, Y1dic As Double, Z1dic As Double, str As String, rdIN As Double)



amtofloop = 8


                For ii = 0 To amtofloop
                        

                    rd = ""
                        
                    rd = rdIN / ZoomMag
                    Dim ang As Integer
                    ang = Math.Round((360 / amtofloop) * ii)
                    
                    X1V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + X1dic, 5)
                    Y1V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - (Y1dic * -1), 5)
                    
                    ii = ii + 1
                    If ii >= amtofloop Then
                        ii = 0
                        finalLOOP = True
                        
                    End If
                    
                    ang = Math.Round((360 / amtofloop) * ii)
                    
                    X2V = Math.Round((Math.Sin(ang * (3.141592 / 180)) * rd) + X1dic, 5)
                    Y2V = Math.Round((Math.Cos(ang * (3.141592 / 180)) * rd) - (Y1dic * -1), 5)
 
                    Z1V = CDbl(Z1dic)
                    Z2V = CDbl(Z1dic)
                        
                    X1n = Math.Round((X1V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z1V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                    X2n = Math.Round((X2V * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (Z2V * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180), 5) - lowestx + (XMovement)
                    
                    Y1n = Math.Round((X1V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y1V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z1V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                    Y2n = Math.Round((X2V * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Y2V * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (Z2V * ZoomMag) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                    

                    
                    ColorShapeModifier (str)
                    'If ii = 2 And finalLOOP = False Then
                    '    CreateLine X1n, Y1n, X2n, Y2n, 255, 255, 255
                    'Else
                        CreateLine X1n, Y1n, X2n, Y2n, Color_R, Color_G, Color_B, Wgt_O
                    'End If
                    
                    
                    If finalLOOP = True Then
                        finalLOOP = False
                        Exit For
                    End If
                     ii = ii - 1
                Next



End Sub

Private Sub RecAbsNo()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        

rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 & vbCrLf
                    
                    
                        

                        
                        
                        X1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((z1 * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X2n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((z2 * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                        X3n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((z2 * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((z1 * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                     
                        
                        Y1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((z1 * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y2n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((z2 * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        
                        Y3n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + (Range(y2).Value * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((z2 * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + (Range(y2).Value * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((z1 * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                   
                        
                        
                        '///////////////////////////////////
                        '
                        '       ^   ^   ^   ^   ^
                        '       |   |   |   |   |
                        
                        '       THIS ONE WORKS!!!!!
                        
                        '///////////////////////////////////

End Sub

Private Sub RecAbsZ()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & Range(z1).Value & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        

'creates the dxf format
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z1).Value & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z1).Value & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x2).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z2).Value & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y2).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z2).Value & vbCrLf
                    
                 
                 
                        X1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z1).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X2n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z2).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                        X3n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z2).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z1).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                     
                        
                        Y1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((Range(z1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 15) - lowesty - (ISHeight / 4) - (YMovement)
                        Y2n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((Range(z2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 15) - lowesty - (ISHeight / 4) - (YMovement)
                        
                        Y3n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + (Range(y2).Value * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((Range(z2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 15) - lowesty - (ISHeight / 4) - (YMovement)
                        Y4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + (Range(y2).Value * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((Range(z1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 15) - lowesty - (ISHeight / 4) - (YMovement)
                        
                        
                        
                        '///////////////////////////////////
                        '
                        '       ^   ^   ^   ^   ^
                        '       |   |   |   |   |
                        
                        '       THIS ONE WORKS!!!!!
                        
                        '///////////////////////////////////
                        
                        
                        

End Sub

Private Sub RecRelNo()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & z1 & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        

                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & z1 & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 + z1 & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & z2 + z1 & vbCrLf
                    

                        
                        X1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((z1 * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X2n = Math.Round(((Range(x1).Value + Range(x2).Value) * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (((z2 + z1) * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                        X3n = Math.Round(((Range(x2).Value + Range(x2).Value) * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + (((z2 + z1) * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((z1 * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                     
                        
                        Y1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((z1 * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y2n = Math.Round(((Range(x1).Value + Range(x2).Value) * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - (((z1 + z2) * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        
                        Y3n = Math.Round(((Range(x2).Value + Range(x2).Value) * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + ((Range(y2).Value + Range(y2).Value) * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - (((z1 + z2) * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + ((Range(y2).Value + Range(y2).Value) * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((z1 * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
  
                                    
End Sub

Private Sub RecRelZ()

     rectangles = rectangles _
                        & "  0" & vbCrLf _
                        & "POLYLINE" & vbCrLf _
                        & "  8" & vbCrLf _
                        & "0" & vbCrLf _
                        & " 66" & vbCrLf _
                        & "1" & vbCrLf _
                        & " 10" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 20" & vbCrLf _
                        & "0.0" & vbCrLf _
                        & " 30" & vbCrLf _
                        & Range(z1).Value & vbCrLf _
                        & " 70" & vbCrLf _
                        & "1" & vbCrLf
                        
                        

                 'creates the dxf format
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z1).Value & vbCrLf
                            
                            
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & Range(y1).Value & vbCrLf _
                            & " 30" & vbCrLf _
                            & Range(z1).Value & vbCrLf
                            
                            
                                             
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & (Range(x2).Value + Range(x1).Value) & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & (Range(z2).Value + Range(z1).Value) & vbCrLf
                            
    
                        rectangles = rectangles _
                            & "  0" & vbCrLf _
                            & "VERTEX" & vbCrLf _
                            & "  8" & vbCrLf _
                            & "0" & vbCrLf _
                            & " 10" & vbCrLf _
                            & Range(x1).Value & vbCrLf _
                            & " 20" & vbCrLf _
                            & (Range(y2).Value + Range(y1).Value) & vbCrLf _
                            & " 30" & vbCrLf _
                            & (Range(z2).Value + Range(z1).Value) & vbCrLf
                        
                   
                        '///////////////////////////////////////////////////////////
                        '
                        '   i am still working on this one = they need to be relitive
                        '
                        '///////////////////////////////////////////////////////////
                        

                        X1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z1).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X2n = Math.Round((Range(x1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z2).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                        X3n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z2).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        X4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) + ((Range(z1).Value * ZoomMag) * Math.Sin((XRotation) * 3.141592 / 180)), 5) - lowestx + (XMovement)
                        
                     
                        
                        Y1n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((Range(z1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y2n = Math.Round((Range(x1).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (Range(y1).Value * ZoomMag) * Math.Cos(((YRotation) * 3.141592 / 180)) - ((Range(z2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        
                        Y3n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + (Range(y2).Value * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((Range(z2).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
                        Y4n = Math.Round((Range(x2).Value * ZoomMag) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin((YRotation) * 3.141592 / 180) + (Range(y2).Value * ZoomMag) * Math.Cos((YRotation) * 3.141592 / 180) - ((Range(z1).Value * ZoomMag) * Math.Cos((XRotation) * 3.141592 / 180) * Math.Sin((YRotation) * 3.141592 / 180)), 5) - lowesty - (ISHeight / 4) - (YMovement)
          
End Sub


Private Sub RecEnd()

     rectangles = rectangles _
                        & "0" & vbCrLf _
                        & "SEQEND" & vbCrLf

End Sub

Private Sub ColorShapeModifier(TP As String)
    If TP = "R" Then
        Color_R = R_R
        Color_G = G_R
        Color_B = B_R
    ElseIf TP = "L" Then
        Color_R = R_L
        Color_G = G_L
        Color_B = B_L
    ElseIf TP = "C" Then
        Color_R = R_C
        Color_G = G_C
        Color_B = B_C
    ElseIf TP = "p" Or TP = "P" Then
        Color_R = R_P
        Color_G = G_P
        Color_B = B_P
    ElseIf TP = "A" Then
        Color_R = R_A
        Color_G = G_A
        Color_B = B_A
    ElseIf TP = "D" Then
        Color_R = R_D
        Color_G = G_D
        Color_B = B_D
    End If
    
    
    'Wgt_O = 2
End Sub


Private Sub CheckHighestLowest(x1h As Double, x2h As Double, y1h As Double, y2h As Double, z1h As Double, z2h As Double)


                        x1l = Math.Round(x1h * Math.Cos((XRotation) * 3.141592 / 180) + z1h * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        x2l = Math.Round((x2h) * Math.Cos((XRotation) * 3.141592 / 180) + z2h * Math.Sin((XRotation) * 3.141592 / 180), 5)
                        y1l = Math.Round(x1h * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + y1h * Math.Cos(((YRotation) * 3.141592 / 180)) - z1h * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                        y2l = Math.Round((x2h) * Math.Sin(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)) + (y2h) * Math.Cos(((YRotation) * 3.141592 / 180)) - (z2h) * Math.Cos(((XRotation) * 3.141592 / 180)) * Math.Sin(((YRotation) * 3.141592 / 180)), 5)
                     
                            

                        If x1l < lowestx Then lowestx = x1l
                        If x2l < lowestx Then lowestx = x2l
                        If y1l < lowesty Then lowesty = y1l
                        If y2l < lowesty Then lowesty = y2l
                        

                        If x1l > highestx Then highestx = x1l
                        If x2l > highestx Then highestx = x2l
                        If y1l > highesty Then highesty = y1l
                        If y2l > highesty Then highesty = y2l
                        

End Sub

' InQuest injected base64 decoded content
' Hu'u

INQUEST-PP=macro
