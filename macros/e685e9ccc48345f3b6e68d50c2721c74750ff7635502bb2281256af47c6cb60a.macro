Attribute VB_Name = "AnzeigenBerechnen"
    Public Reihe As Integer
Sub kopierengesund(Reihe)
Attribute kopierengesund.VB_Description = "Makro am 19.12.2000 von Sonja Merten aufgezeichnet"
Attribute kopierengesund.VB_ProcData.VB_Invoke_Func = " \n14"

    Dim GesTable As Object
    Dim DBTable As Object
    Dim VarTable As Object

    Dim Woche, Wocheoben, Gewicht, Gewichtoben, Verlegung, Ambulant, MedKind, MedMutter, Summe As Integer
    
    Set GesTable = Application.Worksheets("DBgesund")
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    
    Summe = 0
    Gewichtunten = 1
    Gewichtoben = 1
    
    ' Verlegung
    If DBTable.Cells(Reihe, "BM").Value = 1 Then
        Verlegung = 0
    Else
        Verlegung = 1
    End If
    
    ' Gestationsalter < 259 Tage
    If DBTable.Cells(Reihe, "DX").Value < 259 Then
        Gestationunten = 1
    Else
        Gestationunten = 0
    End If
        
    ' Gestationsalter > 294 Tage
    If DBTable.Cells(Reihe, "DX").Value > 294 Then
        Gestationoben = 1
    Else
        Gestationoben = 0
    End If
        
    ' Geburtsgewicht < 2500
    If DBTable.Cells(Reihe, "P").Value <> "" Then
        If DBTable.Cells(Reihe, "P").Value < 2500 Then
            Gewichtunten = 1
        Else
            Gewichtunten = 0
        End If
        
        ' Geburtsgewicht > 4500
        If DBTable.Cells(Reihe, "P").Value > 4500 Then
            Gewichtoben = 1
        Else
            Gewichtoben = 0
        End If
    End If
    
    ' manueller Ausschluss
    Manuell = 0
    If ((DBTable.Cells(Reihe, "BA").Value = 1) And (DBTable.Cells(Reihe, "BA").Value >= 2)) Or _
       ((DBTable.Cells(Reihe, "CC").Value = 1) And (DBTable.Cells(Reihe, "CD").Value >= 2)) Then
       'Gesundheit anderes Mutter, Auswirkungen auf Stillen oder dito Kind
       Manuell = 1
    End If
    
    ' Medizinische Indikation Mutter
    MedMutter = DBTable.Cells(Reihe, "AN").Value                'Diabetes
    MedMutter = MedMutter + DBTable.Cells(Reihe, "AO").Value    'Sucht
    MedMutter = MedMutter + DBTable.Cells(Reihe, "AQ").Value    'Epilepsie
    MedMutter = MedMutter + DBTable.Cells(Reihe, "AT").Value    'Brustoperation
    MedMutter = MedMutter + DBTable.Cells(Reihe, "AV").Value    'HELLP
    MedMutter = MedMutter + DBTable.Cells(Reihe, "AX").Value    'grosse Operation / Hysterektomie
    MedMutter = MedMutter + DBTable.Cells(Reihe, "AY").Value    'An|fffd|mie
    MedMutter = MedMutter + DBTable.Cells(Reihe, "BD").Value    'HIV
    MedMutter = MedMutter + DBTable.Cells(Reihe, "BF").Value    'Medikamente
    MedMutter = MedMutter + DBTable.Cells(Reihe, "BG").Value    'Wunsch der Mutter
    
    ' Medizinische Indikation Kind
    MedKind = DBTable.Cells(Reihe, "BP").Value              'Diabetische Fetopathie
    MedKind = MedKind + DBTable.Cells(Reihe, "BQ").Value    'Atemnotsyndrom
    MedKind = MedKind + DBTable.Cells(Reihe, "BR").Value    'Asphyxie
    MedKind = MedKind + DBTable.Cells(Reihe, "BS").Value    'Acidose
    MedKind = MedKind + DBTable.Cells(Reihe, "BT").Value    'Sepsis
    MedKind = MedKind + DBTable.Cells(Reihe, "BU").Value    'H|fffd|molyse
    MedKind = MedKind + DBTable.Cells(Reihe, "BV").Value    'Hypothermie
    MedKind = MedKind + DBTable.Cells(Reihe, "BW").Value    'Hyperbilirubin|fffd|mie
    MedKind = MedKind + DBTable.Cells(Reihe, "BX").Value    'Hypoglyk|fffd|mie
    MedKind = MedKind + DBTable.Cells(Reihe, "BY").Value    'Gewichtsverlust
    MedKind = MedKind + DBTable.Cells(Reihe, "BZ").Value    'Trisomie 21
    MedKind = MedKind + DBTable.Cells(Reihe, "CA").Value    'Lippen-Kiefer-Gaumenspalte
    MedKind = MedKind + DBTable.Cells(Reihe, "CE").Value    'Stoffwechselkrankheiten
    MedKind = MedKind + DBTable.Cells(Reihe, "CF").Value    'Kontra anderes
    
    ' unvollst|fffd|ndiger Fragebogen
    If DBTable.Cells(Reihe, "DC").Value = True Then
        Unvollst = 1
    Else
        Unvollst = 0
    End If
    
    ' ambulante Geburt
    If DBTable.Cells(Reihe, "BL").Value = 1 Then
        Ambulant = 0
    Else
        Ambulant = 1
    End If
    
    Summe = Verlegung + Gestationunten + Gestationoben + Gewichtunten + Gewichtoben + Manuell + MedKind + MedMutter + Unvollst + Ambulant
    
    VarTable.Cells(10, "A").Value = Summe
    VarTable.Cells(11, "A").Value = Gestationunten
    VarTable.Cells(12, "A").Value = Gewichtunten
    VarTable.Cells(13, "A").Value = Gestationoben
    VarTable.Cells(14, "A").Value = Gewichtoben
    VarTable.Cells(15, "A").Value = Verlegung
    VarTable.Cells(16, "A").Value = Ambulant
        
    If Summe = 0 Then
        DBTable.Cells(Reihe, "EL").Value = 1    ' Variable TGesund
        GesTable.Rows(Reihe).Value = DBTable.Rows(Reihe).Value
    Else
        DBTable.Cells(Reihe, "EL").Value = 0    ' Variable TGesund
        GesTable.Rows(Reihe).Value = ""
    End If
    
End Sub

Sub repeat()
    Dim Table As Object
    Dim VarTable As Object
    Dim Row, min, max As Integer
    
    Set Table = Application.Worksheets("Bl|fffd|ttern")
    Set VarTable = Application.Worksheets("VAR")
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    
    For Row = min To max
        Table.Cells(2, "I").Value = Row
        vor
        Korrektur
    Next Row

End Sub
Sub bemerkungen()

    Dim Table As Object
    Dim DBTable As Object
    Dim BemTable As Object
    Dim VarTable As Object
    
    Dim Row As Integer
    Dim bemerkung As Integer
    Dim Hilfsmittel As Variant
    Dim min, max As Integer
      
    Set Table = Application.Worksheets("Bl|fffd|ttern")
    Set DBTable = Application.Worksheets("DB")
    Set BemTable = Application.Worksheets("Anmerkung")
    Set VarTable = Application.Worksheets("VAR")
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    Row = 2
   
    BemTable.Unprotect Password:=glbPasswort
   
    BemTable.Range("A2:Z40000").ClearContents
  
    If min > 1 Then
        For Row = min To max
            bemerkung = CInt(DBTable.Cells(Row, "DZ").Value) + CInt(DBTable.Cells(Row, "EA").Value) _
                + CInt(DBTable.Cells(Row, "EB").Value) + CInt(DBTable.Cells(Row, "EC").Value) + CInt(DBTable.Cells(Row, "ED").Value) _
                + CInt(DBTable.Cells(Row, "EE").Value) + CInt(DBTable.Cells(Row, "EF").Value)

            If bemerkung > 0 Then
                BemTable.Cells(Row, "A").Value = 1

                BemTable.Cells(Row, "B").Value = DBTable.Cells(Row, "K").Value 'Geburtsdatum
                BemTable.Cells(Row, "C").Value = DBTable.Cells(Row, "P").Value 'Geburtsgewicht

                If DBTable.Cells(Row, "DX").Value > 0 Then  'Gestationsalter
                    BemTable.Cells(Row, "D").Value = "'" & CStr(DBTable.Cells(Row, "L").Value) & " " & CStr(DBTable.Cells(Row, "M").Value) & "/7"
                Else
                    BemTable.Cells(Row, "D").Value = ""
                End If

                If DBTable.Cells(Row, "BM").Value = 2 Then  'Verlegung
                    BemTable.Cells(Row, "E").Value = "ja"
                Else
                    BemTable.Cells(Row, "E").Value = ""
                End If
        
                Select Case DBTable.Cells(Row, "BG").Value   'Geburt
                    Case 1
                        BemTable.Cells(Row, "F").Value = "spontan"
                    Case 2
                        BemTable.Cells(Row, "F").Value = "Forceps"
                    Case 3
                        BemTable.Cells(Row, "F").Value = "Vacuum"
                    Case 4
                        BemTable.Cells(Row, "F").Value = "sectio prim|fffd|r"
                    Case 5
                        BemTable.Cells(Row, "F").Value = "sectio sek."
                    Case 6
                        BemTable.Cells(Row, "F").Value = "Notfallsectio"
                    Case Else
                        BemTable.Cells(Row, "F").Value = ""
                End Select
                
                BemTable.Cells(Row, "G").Value = DBTable.Cells(Row, "I").Value 'Medizinische Situation Mutter
                
                BemTable.Cells(Row, "H").Value = DBTable.Cells(Row, "J").Value 'Analgesie
                
                Select Case DBTable.Cells(Row, "CH").Value   '1. Anlegen
                    Case 0
                        BemTable.Cells(Row, "I").Value = ""
                    Case 1
                        BemTable.Cells(Row, "I").Value = "1. 2 Std."
                    Case 2
                        BemTable.Cells(Row, "I").Value = "sp|fffd|ter"
                    Case 3
                        BemTable.Cells(Row, "I").Value = "kein"
                End Select
        
                Select Case DBTable.Cells(Row, "CI").Value   'Rooming-in
                    Case 0
                        BemTable.Cells(Row, "J").Value = ""
                    Case 1
                        BemTable.Cells(Row, "J").Value = "immer bei Mutter"
                    Case 2
                        BemTable.Cells(Row, "J").Value = "mind. einmal 24h"
                    Case 3
                        BemTable.Cells(Row, "J").Value = "tags|fffd|ber"
                    Case 4
                        BemTable.Cells(Row, "J").Value = "anderes"
                End Select
                
                BemTable.Cells(Row, "K").Value = DBTable.Cells(Row, "AB").Value 'Rooming-in anderes
                
                Select Case DBTable.Cells(Row, "CJ").Value   'Muttermilch
                    Case 1
                        BemTable.Cells(Row, "L").Value = "ja"
                    Case 2
                        BemTable.Cells(Row, "L").Value = "nein"
                    Case Else
                        BemTable.Cells(Row, "L").Value = ""
                End Select
                
                Select Case DBTable.Cells(Row, "CK").Value  'Stillen
                    Case 1
                        BemTable.Cells(Row, "M").Value = "ausschliesslich"
                    Case 2
                        BemTable.Cells(Row, "M").Value = "vorwiegend"
                    Case 3
                        BemTable.Cells(Row, "M").Value = "teilweise"
                    Case 4
                        BemTable.Cells(Row, "M").Value = "sek. abgestillt"
                    Case Else
                        BemTable.Cells(Row, "M").Value = ""
                End Select
                
                Select Case DBTable.Cells(Row, "CM").Value  'Grund
                    Case 1
                        BemTable.Cells(Row, "N").Value = "med. Mutt."
                    Case 2
                        BemTable.Cells(Row, "N").Value = "med. Kind"
                    Case 3
                        BemTable.Cells(Row, "N").Value = "Wunsch Mutt."
                    Case Else
                        BemTable.Cells(Row, "N").Value = ""
                End Select
                
                Hilfsmittel = ""
                If DBTable.Cells(Row, "CO").Value = 1 Then  'Hilfsmittel
                    Hilfsmittel = Hilfsmittel & " L|fffd|ffel"
                End If
                If DBTable.Cells(Row, "CP").Value = 1 Then
                    Hilfsmittel = Hilfsmittel & " Milchpumpe"
                End If
                If DBTable.Cells(Row, "CQ").Value = 1 Then
                    Hilfsmittel = Hilfsmittel & " Saugh|fffd|tchen"
                End If
                If DBTable.Cells(Row, "CR").Value = 1 Then
                    Hilfsmittel = Hilfsmittel & " Schoppen"
                End If
                If DBTable.Cells(Row, "CS").Value = 1 Then
                    Hilfsmittel = Hilfsmittel & " Nuggi"
                End If
                If DBTable.Cells(Row, "CT").Value = 1 Then
                    Hilfsmittel = Hilfsmittel & " " & DBTable.Cells(Row, "AE").Value
                End If
                If Hilfsmittel = "" Then
                    BemTable.Cells(Row, "P").Value = ""
                Else
                    BemTable.Cells(Row, "P").Value = Right(Hilfsmittel, Len(Hilfsmittel) - 1)
                End If
                
                BemTable.Cells(Row, "Q").Value = DBTable.Cells(Row, "EG").Value 'Alter der Mutter
                
                BemTable.Cells(Row, "R").Value = DBTable.Cells(Row, "G").Value  'Nationalit|fffd|t
                
                BemTable.Cells(Row, "S").Value = DBTable.Cells(Row, "AF").Value ' Bemerkung
            
            Else
                BemTable.Cells(Row, "A").Value = 0
            End If
        Next Row
    End If

    BemTable.Range("A1").Select
    Columns("A:A").Select
    Selection.AutoFilter Field:=1, Criteria1:="1"
    BemTable.Protect Password:=glbPasswort
End Sub


Sub kopierenWunschmonat()

    Dim DBTable As Object
    Dim VarTable As Object
    Dim DiagramTable As Object
    
    Dim Row, Col As Integer
    
    Dim Summe, SummeGesund As Integer
    Dim Nenner, Reihewert As Integer
    Dim min, max As Integer
    Dim CountAusschl, CountAb1, CountAb2, CountTeilw, CountHaut As Integer
    Dim CountAnleg, CountRoom, CountTags, CountSchoppen, CountNuggi As Integer
    Dim Datum1, Datum2 As Date

    Set DiagramTable = Application.Worksheets("Diagramme")
    Set VarTable = Application.Worksheets("VAR")
  
    Summe = VarTable.Cells(22, "A").Value + 1
    SummeGesund = VarTable.Cells(23, "A").Value + 1

    DiagramTable.Unprotect Password:=glbPasswort
    
    If VarTable.Cells(18, "E").Value Then
        Set DBTable = Application.Worksheets("DBgesund")
    Else
        Set DBTable = Application.Worksheets("DB")
    End If
    
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    Nenner = 0
    Reihewert = 0

    For Reihewert = 10 To 17
        If VarTable.Cells(Reihewert, "E").Value Then
            VarTable.Cells(Reihewert, "F").Value = Reihewert - 8
        Else
            VarTable.Cells(Reihewert, "F").Value = 0
            DiagramTable.Cells((Reihewert - 8), "G").Value = ""
            DiagramTable.Cells((Reihewert - 8), "L").Value = ""
            DiagramTable.Cells((Reihewert - 8), "I").Value = ""
            DiagramTable.Cells((Reihewert - 8), "K").Value = ""
            DiagramTable.Cells((Reihewert - 8), "M").Value = ""
            DiagramTable.Cells((Reihewert - 8), "N").Value = ""
            DiagramTable.Cells((Reihewert - 8), "O").Value = ""
            DiagramTable.Cells((Reihewert - 8), "P").Value = ""
            DiagramTable.Cells((Reihewert - 8), "Q").Value = ""
            DiagramTable.Cells((Reihewert - 8), "R").Value = ""
        End If
    Next Reihewert
    
    For Reihewert = 2 To 9
        Nenner = 0
        CountAusschl = 0
        CountAb1 = 0
        CountAb2 = 0
        CountTeilw = 0
        CountHaut = 0
        CountAnleg = 0
        CountRoom = 0
        CountTags = 0
        CountSchoppen = 0
        CountNuggi = 0
        
        If VarTable.Cells((Reihewert + 8), "F").Value > 0 Then
        
            Datum1 = DiagramTable.Cells(Reihewert, "B").Value
            Datum2 = DiagramTable.Cells(Reihewert, "D").Value
            
            DiagramTable.Cells((Reihewert + 10), "H").Value = Datum1
            DiagramTable.Cells((Reihewert + 10), "I").Value = Datum2
            
            For Row = 2 To Summe
                If (CDate(DBTable.Cells(Row, "K").Value) >= Datum1) And (CDate(DBTable.Cells(Row, "K").Value) <= Datum2) Then
                        ' Geburtsdatum im gew|fffd|hlten Datumsbereich
                    Nenner = Nenner + CInt(DBTable.Cells(Row, "CV").Value)              'Dat_vorh
                    CountAusschl = CountAusschl + CInt(DBTable.Cells(Row, "EI").Value)  'MMsolo
                    If DBTable.Cells(Row, "CJ").Value = 2 Then                          'prim|fffd|r abgestillt
                        CountAb1 = CountAb1 + 1
                    End If
                    Select Case DBTable.Cells(Row, "CK").Value
                        Case 3                                                          'teilgestillt
                            CountTeilw = CountTeilw + 1
                        Case 4                                                          'sekund|fffd|r abgestillt
                            CountAb1 = CountAb1 + 1
                    End Select
                    Select Case DBTable.Cells(Row, "CG").Value
                        Case 1, 2
                            CountHaut = CountHaut + 1                                   'Hautkontakt in 1. Std.
                    End Select
                    If DBTable.Cells(Row, "CH").Value = 1 Then
                        CountAnleg = CountAnleg + 1                                     'Anlegen in 1. 2 Std.
                    End If
                    Select Case DBTable.Cells(Row, "CI").Value
                        Case 1, 2
                            CountRoom = CountRoom + 1                                   'immer im Zimmer
                        Case 3
                            CountTags = CountTags + 1                                   'mind. 24 h im Zimmer
                    End Select
                    CountSchoppen = CountSchoppen + CInt(DBTable.Cells(Row, "CR").Value) 'Schoppen
                    CountNuggi = CountNuggi + CInt(DBTable.Cells(Row, "CS").Value)      'Nuggi
                End If
            Next Row
            
            If Nenner = 0 Then
                DiagramTable.Cells(Reihewert, "G").Value = Nenner
                DiagramTable.Cells(Reihewert, "L").Value = 0
                DiagramTable.Cells(Reihewert, "I").Value = 0
                DiagramTable.Cells(Reihewert, "K").Value = 0
                DiagramTable.Cells(Reihewert, "M").Value = 0
                DiagramTable.Cells(Reihewert, "N").Value = 0
                DiagramTable.Cells(Reihewert, "O").Value = 0
                DiagramTable.Cells(Reihewert, "P").Value = 0
                DiagramTable.Cells(Reihewert, "Q").Value = 0
                DiagramTable.Cells(Reihewert, "R").Value = 0
            Else
                DiagramTable.Cells(Reihewert, "G").Value = Nenner
                DiagramTable.Cells(Reihewert, "L").Value = (CountAb1 + CountAb2) / Nenner
                DiagramTable.Cells(Reihewert, "I").Value = CountAusschl / Nenner
                DiagramTable.Cells(Reihewert, "K").Value = CountTeilw / Nenner
                DiagramTable.Cells(Reihewert, "M").Value = CountHaut / Nenner
                DiagramTable.Cells(Reihewert, "N").Value = CountAnleg / Nenner
                DiagramTable.Cells(Reihewert, "O").Value = CountRoom / Nenner
                DiagramTable.Cells(Reihewert, "P").Value = CountTags / Nenner
                DiagramTable.Cells(Reihewert, "Q").Value = CountSchoppen / Nenner
                DiagramTable.Cells(Reihewert, "R").Value = CountNuggi / Nenner
            End If
        End If
    Next Reihewert
    
    DiagramTable.Protect Password:=glbPasswort

End Sub


Attribute VB_Name = "AnzeigenWaehlen"
Option Explicit

Sub nurnormalbabies()
    Dim Table As Object
    Dim NurTable As Object
    
    Set Table = Application.Worksheets("Auswertung")
    Set NurTable = Application.Worksheets("Auswertung gesunde Termingebore")
    
    Application.ScreenUpdating = False
    ActiveWorkbook.Unprotect Password:=glbPasswort
    Table.Visible = False
    NurTable.Visible = True
    NurTable.Select
    Range("G8").Select
    ActiveWorkbook.Protect Structure:=True, Windows:=False, Password:=glbPasswort
    Application.ScreenUpdating = True

End Sub

Sub allebabies()
    Dim Table As Object
    Dim NurTable As Object
    
    Set Table = Application.Worksheets("Auswertung")
    Set NurTable = Application.Worksheets("Auswertung gesunde Termingebore")
    
    Application.ScreenUpdating = False
    ActiveWorkbook.Unprotect Password:=glbPasswort
    NurTable.Visible = False
    Table.Visible = True
    Table.Select
    Range("G8").Select
    ActiveWorkbook.Protect Structure:=True, Windows:=False, Password:=glbPasswort
    Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "DBsortieren"
Option Explicit

Sub sorthebcode()
    Dim DBTable As Object
    Dim VarTable As Object
    Dim was, min, max As String
    
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    was = min & ":" & max

    DBTable.Activate
    DBTable.Rows(was).Select
    Selection.Sort Key1:=Range("B2"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
End Sub

Sub sortschluessel()
    Dim DBTable As Object
    Dim VarTable As Object
    Dim was, min, max As String
    
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    was = min & ":" & max

    DBTable.Activate
    DBTable.Rows(was).Select
    Selection.Sort Key1:=Range("A2"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
End Sub

Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "EingabeKorrektur"

Public ReiheNr As Integer
Public Reihe As Integer
Public SpalteNr As Variant
Public Eingabe As Variant
Public Stopp As Integer

' Eingabe- und Korrekturmakro
' am 1.07.99 von Sonja Merten aufgezeichnet
' Erg|fffd|nzt und erweitert Dez. 2007 / April 2011 Edi F|fffd|llemann, ef@katta.ch

Sub Eingabe_BeiKlick()
Attribute Eingabe_BeiKlick.VB_Description = "Makro am 1.07.99 von Sonja Merten aufgezeichnetrr rrrr"
Attribute Eingabe_BeiKlick.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim Table As Object
    Dim DBTable As Object
    Dim VarTable As Object
    Dim Row As Integer
    Dim Col As Integer
    
    Set Table = Application.Worksheets("Eingabe")
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    ' n|fffd|chste Reihe ermitteln: Recordnummer + DB-Anfang
    Row = VarTable.Cells(1, "A").Value + VarTable.Cells(2, "A").Value
    Reihe = Row
    Stopp = 1
    Eingabe = "Eingabe"
    
    Application.ScreenUpdating = False
      
    ' Ankreuzfelder AN - CU (35 - 99) in Zahl umwandeln
    For Col = 35 To 99
        If VarTable.Cells(4, Col).Value = True Then
            VarTable.Cells(4, Col).Value = 1
        Else
            If VarTable.Cells(4, Col).Value = False Then
                VarTable.Cells(4, Col).Value = 0
            End If
        End If
    Next Col
    
    ' Felder von Var in DB |fffd|bertragen
    DBTable.Range(DBTable.Cells(Row, "A"), DBTable.Cells(Row, "EL")).Value _
        = VarTable.Range("A4", "EL4").Value
    
    ' Berechnete Felder CV - DM (100 - 117) in Zahl umwandeln
    For Col = 100 To 117
        If DBTable.Cells(Row, Col).Value = True Then
            DBTable.Cells(Row, Col).Value = 1
        Else
            If DBTable.Cells(Row, Col).Value = False Then
                DBTable.Cells(Row, Col).Value = 0
            End If
        End If
    Next Col
    
    ' Z|fffd|hlen der angekreuzten Felder und setzen des Codes f|fffd|r nichtleere Datens|fffd|tze
    If DBTable.Cells(Row, "CV").Value = 0 Then         ' keine Daten vorhanden
        If DBTable.Cells(Row, "B").Value <> "" Then    ' Hebammencode ?
            resultat = MsgBox("Sie haben den Fragebogen nicht gen|fffd|gend ausgef|fffd|llt. Trotzdem erfassen?", vbOKCancel)
            If resultat = "1" Then                     ' Hebammencode vorhanden, sonst keine Daten
                DBTable.Cells(Row, "CV").Value = 1
            Else                                       ' kein Hebammencode, neu erfassen
                Table.Activate
                Cells(3, "I").Activate
                Exit Sub
            End If
        Else                                           ' keine Daten, nicht erfassen
            Table.Activate
            Cells(3, "I").Activate
            Exit Sub
        End If
    End If
    
    ' Kontrolle aufrufen
    If VarTable.Range("A6").Value = False Then         ' Kontrolle eingeschaltet
        Kontrolle (Row)
        If Stopp = 2 Then
            Table.Activate
            Table.Unprotect Password:=glbPasswort
            Application.Goto reference:=Table.Cells(ReiheNr - 2, 1), Scroll:=True
            Table.Protect Password:=glbPasswort
            Cells(ReiheNr, SpalteNr).Activate
            Exit Sub
        End If
    End If
        
    ' nicht relevante Felder zur|fffd|cksetzen
    NichtRelevanteFelder (Row)
        
    ' Maske leeren
    MaskeLeeren (Eingabe)
    
    ' Recordnummer setzen
    Table.Unprotect Password:=glbPasswort
    Table.Cells(2, "E").Value = Row
    Table.Activate
    Application.Goto reference:=Table.Cells(1, "A"), Scroll:=True
    Table.Protect Password:=glbPasswort
    Table.Cells(3, "I").Activate
    
    VarTable.Cells(1, "A").Value = VarTable.Cells(1, "A").Value + 1
    kopierengesund (Reihe)
    Application.ScreenUpdating = True
End Sub
    

' Korrektur Makro
' Makro am 1.07.99 von Sonja Merten aufgezeichnet
' Erg|fffd|nzt und erweitert Dez. 2007 / April 2011 Edi F|fffd|llemann, ef@katta.ch

Sub Korrektur()
Attribute Korrektur.VB_Description = "rr rrrr"
Attribute Korrektur.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim Table As Object
    Dim DBTable As Object
    Dim VarTable As Object
    Dim Row As Integer
    Dim Col As Integer
    
    Set Table = Application.Worksheets("Bl|fffd|ttern")
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    Set fehlendeTable = Application.Worksheets("fehlendeAngaben")
    
    Row = Table.Cells(2, "I").Value + 1
    Eingabe = "Korrektur"
    Stopp = 1
    Reihe = Row
    
    Application.ScreenUpdating = "false"
        
    ' Ankreuzfelder AN - CU (35 - 99) in Zahl umwandeln
    For Col = 35 To 99
        If VarTable.Cells(5, Col).Value = True Then
            VarTable.Cells(5, Col).Value = 1
        Else
            If VarTable.Cells(5, Col).Value = False Then
                VarTable.Cells(5, Col).Value = 0
            End If
        End If
    Next Col
            
    ' Felder von Var in DB |fffd|bertragen ausser Datensatznummer
    DBTable.Range(DBTable.Cells(Row, "B"), DBTable.Cells(Row, "EL")).Value _
        = VarTable.Range("B5", "EL5").Value
    
    ' Textfelder bei Nullwerten leeren
    If DBTable.Cells(Row, "G").Value = 0 Then
        DBTable.Cells(Row, "G").Value = ""
    End If
    If DBTable.Cells(Row, "I").Value = 0 Then
        DBTable.Cells(Row, "I").Value = ""
    End If
    If DBTable.Cells(Row, "J").Value = 0 Then
        DBTable.Cells(Row, "J").Value = ""
    End If
    If DBTable.Cells(Row, "Y").Value = 0 Then
        DBTable.Cells(Row, "Y").Value = ""
    End If
    If DBTable.Cells(Row, "Z").Value = 0 Then
        DBTable.Cells(Row, "Z").Value = ""
    End If
    If DBTable.Cells(Row, "AB").Value = 0 Then
        DBTable.Cells(Row, "AB").Value = ""
    End If
    If DBTable.Cells(Row, "AE").Value = 0 Then
        DBTable.Cells(Row, "AE").Value = ""
    End If
    If DBTable.Cells(Row, "AF").Value = 0 Then
        DBTable.Cells(Row, "AF").Value = ""
    End If
    If DBTable.Cells(Row, "AH").Value = 0 Then
        DBTable.Cells(Row, "AH").Value = ""
    End If
    
    ' Felder CV - DL (100 - 117) in Zahl umwandeln
    For Col = 100 To 117
        If DBTable.Cells(Row, Col).Value = True Then
            DBTable.Cells(Row, Col).Value = 1
        Else
            If DBTable.Cells(Row, Col).Value = False Then
                DBTable.Cells(Row, Col).Value = 0
            End If
        End If
    Next Col
    
    ' Kontrolle aufrufen
    If VarTable.Range("A6").Value = False Then         ' Kontrolle eingeschaltet
        Kontrolle (Row)
        If Stopp = 2 Then
            Table.Activate
            Table.Unprotect Password:=glbPasswort
            Application.Goto reference:=Table.Cells(ReiheNr - 2, 1), Scroll:=True
            Table.Protect Password:=glbPasswort
            Cells(ReiheNr, SpalteNr).Activate
            Exit Sub
        End If
    End If
        
    ' nicht relevante Felder zur|fffd|cksetzen
    NichtRelevanteFelder (Row)
        
    ' Abschluss
    kopierengesund (Reihe)
    Table.Unprotect Password:=glbPasswort
    Table.Activate
    Application.Goto reference:=Table.Cells(1, "A"), Scroll:=True
    Table.Protect Password:=glbPasswort
    Table.Cells(2, "I").Activate
    
    ' Bei Aufruf von Hyperlink aus Tabelle fehlende Angaben dorthin zur|fffd|ckkehren
    If VarTable.Cells(6, "D").Value = 1 Then
        VarTable.Cells(6, "D").Value = 0
        fehlendeTable.Activate
    End If
    
    Application.ScreenUpdating = True
    
End Sub

Sub Kontrolle(Row As Integer)
Attribute Kontrolle.VB_Description = "rr rrrr"
Attribute Kontrolle.VB_ProcData.VB_Invoke_Func = " \n14"
    
    ' Pr|fffd|ft eine Zeile der DB-Tabelle auf fehlende Felder
    ' Betroffene Reihe wird in Variable Row definiert
    ' |fffd|bergibt Info in den globalen Variablen Stopp, ReiheNr und SpalteNr
    
    Dim DBTable As Object
    
    Set DBTable = Application.Worksheets("DB")
    
    'HebCode
    If DBTable.Cells(Row, "B").Value = "" Then
        resultat = MsgBox("Hebammencode fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 3
            SpalteNr = "I"
            Exit Sub
        End If
    Else
        If Not IsNumeric(DBTable.Cells(Row, "B").Value) Then
        resultat = MsgBox("Hebammencode ist keine Zahl. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 3
                SpalteNr = "I"
                Exit Sub
            End If
        End If
    End If
        
    'Spitalcode
    If DBTable.Cells(Row, "C").Value = 0 Then
        resultat = MsgBox("Spitalcode fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 3
            SpalteNr = "L"
            Exit Sub
        End If
    Else
        If Not IsNumeric(DBTable.Cells(Row, "C").Value) Then
            resultat = MsgBox("Spitalcode ist keine Zahl. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 3
                SpalteNr = "L"
                Exit Sub
            End If
        End If
    End If
        
    'Jahr
    If DBTable.Cells(Row, "D").Value = 0 Then
        resultat = MsgBox("Jahrgang fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 4
            SpalteNr = "D"
            Exit Sub
        End If
    Else
        If (Not IsNumeric(DBTable.Cells(Row, "D").Value)) Or (Len(DBTable.Cells(Row, "D").Value) <> 4) Then
            resultat = MsgBox("Format des Jahrgangs ung|fffd|ltig. Bitte vierstellig eingeben. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 4
                SpalteNr = "D"
                Exit Sub
            End If
        End If
    End If

    'Datenerfassung verweigert, perinataler Kindstod, ambulante Geburt: Kontrolle beenden
    If (DBTable.Cells(Row, "BL").Value = 2) Or _
            (DBTable.Cells(Row, "BN").Value = 1) Or _
            (DBTable.Cells(Row, "BO").Value = 1) Then
        Exit Sub
    End If

    'JgMutter
    If DBTable.Cells(Row, "E").Value = 0 Then
        resultat = MsgBox("Geburtsjahr der Mutter fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 9
            SpalteNr = "E"
            Exit Sub
        End If
    Else
        If (Not IsNumeric(DBTable.Cells(Row, "E").Value)) Or (Len(DBTable.Cells(Row, "E").Value) <> "4") Then
            resultat = MsgBox("Format des Geburtsjahrs der Mutter ung|fffd|ltig. Bitte Jahrgang vierstellig eingeben. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 9
                SpalteNr = "E"
                Exit Sub
            End If
        End If
    End If

    'Parit|fffd|t
    If DBTable.Cells(Row, "F").Value = 0 Then
        resultat = MsgBox("Mutter: Parit|fffd|t fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 9
            SpalteNr = "I"
            Exit Sub
        End If
    Else
        If (Not IsNumeric(DBTable.Cells(Row, "F").Value)) Then
            resultat = MsgBox("Mutter: Bitte Parit|fffd|t als Zahl eingeben. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 9
                SpalteNr = "I"
                Exit Sub
            End If
        End If
    End If
        
    'Nationalit|fffd|t Mutter
    If DBTable.Cells(Row, "AI").Value = 0 Then
        resultat = MsgBox("Nationalit|fffd|t der Mutter fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 11
            SpalteNr = "B"
            Exit Sub
        End If
    End If
        
    ' Sprachliche Verst|fffd|ndigung
    If DBTable.Cells(Row, "AJ").Value = 0 Then
        resultat = MsgBox("Sprachliche Verst|fffd|ndigung unklar. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 13
            SpalteNr = "B"
            Exit Sub
        End If
    End If
        
    ' Versicherung Mutter
    If DBTable.Cells(Row, "AK").Value = 0 Then
        resultat = MsgBox("Versicherungsstatus der Mutter unklar. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 15
            SpalteNr = "B"
            Exit Sub
        End If
    End If

    ' Austrittsdatum Mutter
    If DBTable.Cells(Row, "H").Value = 0 Then
        resultat = MsgBox("Austrittsdatum Mutter fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 19
            SpalteNr = "E"
            Exit Sub
        End If
    Else
        If Not IsNumeric(DBTable.Cells(Row, "H").Value) Then
            resultat = MsgBox("Format des Austrittsdatum der Mutter ist ung|fffd|ltig (TT.MM.JJJJ). Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 19
                SpalteNr = "E"
                Exit Sub
            End If
        End If
    End If
    
    ' Nachbetreuung
    If DBTable.Cells(Row, "AM").Value = 0 Then
        resultat = MsgBox("Nachbetreuung unklar. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 21
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Geburtsweg
    If DBTable.Cells(Row, "BH").Value = 0 Then
        resultat = MsgBox("Geburtsweg nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 49
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Analgesie
    If (DBTable.Cells(Row, "BI").Value = 0) Then
        resultat = MsgBox("Analgesie / An|fffd|sthesie nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 54
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Geburtsdatum
    If DBTable.Cells(Row, "K").Value = 0 Then
        resultat = MsgBox("Geburtsdatum fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 63
            SpalteNr = "E"
            Exit Sub
        End If
    Else
        If Not IsNumeric(DBTable.Cells(Row, "K").Value) Then
            resultat = MsgBox("Format des Geburtsdatums ist ung|fffd|ltig (TT.MM.JJJJ). Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 63
                SpalteNr = "E"
                Exit Sub
            End If
        End If
    End If
         
    ' Gestationsalter
    If DBTable.Cells(Row, "L").Value = 0 Then
        resultat = MsgBox("Gestationsalter fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 63
            SpalteNr = "I"
            Exit Sub
        End If
    End If
         
    ' Mehrling
    If DBTable.Cells(Row, "BJ").Value = 0 Then
        resultat = MsgBox("Mehrling nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 66
            SpalteNr = "I"
            Exit Sub
        End If
    End If

    ' Geschlecht
    If DBTable.Cells(Row, "BK").Value = 0 Then
    resultat = MsgBox("M|fffd|dchen oder Junge nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 69
            SpalteNr = "B"
            Exit Sub
        End If
    End If

    ' GebGewicht
    If DBTable.Cells(Row, "P").Value = 0 Then
        resultat = MsgBox("Geburtsgewicht fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 71
            SpalteNr = "E"
            Exit Sub
        End If
    Else
        If Not IsNumeric(DBTable.Cells(Row, "P").Value) Then
            resultat = MsgBox("Format des Geburtsgewichts ung|fffd|ltig. Bitte Zahl in Gramm angeben. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
                Stopp = 2
                ReiheNr = 71
                SpalteNr = "E"
                Exit Sub
            End If
        End If
    End If
   
    ' Ambulant
    If DBTable.Cells(Row, "BL").Value = 0 Then
    resultat = MsgBox("Ambulante Geburt nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 73
            SpalteNr = "B"
            Exit Sub
        End If
    End If

    ' Verlegung
    If DBTable.Cells(Row, "BM").Value = 0 Then
        resultat = MsgBox("Verlegung nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 75
            SpalteNr = "B"
            Exit Sub
        End If
    End If
        
    ' Austrittsdatum < Geburtsdatum
    If (DBTable.Cells(Row, "H").Value < DBTable.Cells(Row, "K").Value) And (DBTable.Cells(Row, "H").Value <> 0) Then
         resultat = MsgBox("Austrittsdatum fr|fffd|her als Geburtsdatum. Nochmals w|fffd|hlen?", vbOKCancel)
            If resultat = 1 Then
            Stopp = 2
            ReiheNr = 19
            SpalteNr = "E"
            Exit Sub
        End If
    End If

    ' Hautkontakt
    If DBTable.Cells(Row, "CG").Value = 0 Then
        resultat = MsgBox("Hautkontakt nach der Geburt fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 108
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Hautkontakt Dauer
    If DBTable.Cells(Row, "AA").Value = 0 Then
        resultat = MsgBox("Dauer des ersten Hautkontakts fehlt. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 111
            SpalteNr = "G"
            Exit Sub
        End If
    End If
    
    ' Ansetzen
    If DBTable.Cells(Row, "CH").Value = 0 Then
        resultat = MsgBox("Erstes Anlegen nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 113
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Rooming In
    If DBTable.Cells(Row, "CI").Value = 0 Then
        resultat = MsgBox("Rooming-in nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 118
            SpalteNr = "B"
            Exit Sub
        End If
    End If

    ' Muttermilch
    If DBTable.Cells(Row, "CJ").Value = 0 Then
        resultat = MsgBox("Muttermilch nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 127
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Stillen
    If (DBTable.Cells(Row, "CJ").Value = 1 And DBTable.Cells(Row, "CK").Value = 0) Then
        resultat = MsgBox("Stillen nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 131
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Fl|fffd|ssigkeit
    If (DBTable.Cells(Row, "CK").Value = 2 And DBTable.Cells(Row, "CL").Value = 0) Then
        resultat = MsgBox("Gabe von Fl|fffd|ssigkeit ist unklar. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 134
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Grund f|fffd|r Zusatzfl|fffd|ssigkeit
    If ((DBTable.Cells(Row, "CK").Value = 2 Or DBTable.Cells(Row, "CK").Value = 3 Or _
            DBTable.Cells(Row, "CK").Value = 4) And DBTable.Cells(Row, "CM").Value = 0) Then
        resultat = MsgBox("Grund f|fffd|r Gabe von Zusatzfl|fffd|ssigkeit / Abstillen ist unklar. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 142
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
    ' Hilfsmittel
    If (DBTable.Cells(Row, "CN").Value + DBTable.Cells(Row, "CO").Value + _
            DBTable.Cells(Row, "CP").Value + DBTable.Cells(Row, "CQ").Value + _
            DBTable.Cells(Row, "CR").Value + DBTable.Cells(Row, "CS").Value + _
            DBTable.Cells(Row, "CT").Value) = 0 Then
        resultat = MsgBox("Hilfsmittel nicht eindeutig. Nochmals w|fffd|hlen?", vbOKCancel)
        If resultat = 1 Then
            Stopp = 2
            ReiheNr = 149
            SpalteNr = "B"
            Exit Sub
        End If
    End If
    
End Sub

Sub NichtRelevanteFelder(Row As Integer)
    
    Dim DBTable As Object
    
    Set DBTable = Application.Worksheets("DB")
        
    If DBTable.Cells(Row, "CV").Value = 1 Then   ' nur wenn g|fffd|ltige Eingabe
    
        'nicht relevante Felder zur|fffd|cksetzen
        'Gesundheit Mutter
        If DBTable.Cells(Row, "BB").Value <> 4 Then
            DBTable.Cells(Row, "BC").Value = 0
            DBTable.Cells(Row, "BE").Value = 0
        End If
        'Stillen
        If DBTable.Cells(Row, "CJ").Value = 2 Then
            DBTable.Cells(Row, "CK").Value = 0
        End If
        If DBTable.Cells(Row, "CK").Value <> 2 Then
            DBTable.Cells(Row, "CL").Value = 0
        End If
        If DBTable.Cells(Row, "CK").Value <> 3 Then
            DBTable.Cells(Row, "CU").Value = 0
        End If
    
    End If     ' Ende nur bei g|fffd|ltiger Eingabe
    
End Sub

Sub MaskeLeeren(Maske As String)

    ' alle Eingabefelder leeren

    Dim Table As Object
    Dim VarTable As Object
    Dim VarZeile As Integer
    
    If Maske = "Eingabe" Then
        Set Table = Application.Worksheets("Eingabe")
        VarZeile = 4
    Else
        Set Table = Application.Worksheets("Bl|fffd|ttern")
        VarZeile = 5
    End If
    
    Set VarTable = Application.Worksheets("VAR")

    For Col = 35 To 99
        VarTable.Cells(VarZeile, Col).Value = 0
        VarTable.Cells(VarZeile, Col).Value = 0
    Next Col
    
    Table.Cells(3, "I").Value = ""
    Table.Cells(9, "E").Value = ""
    Table.Cells(9, "I").Value = ""
    Table.Cells(19, "E").Value = ""
    Table.Cells(23, "F").Value = "'"
    Table.Cells(34, "E").Value = "'"
    Table.Cells(57, "E").Value = ""
    Table.Cells(63, "E").Value = ""
    Table.Cells(63, "I").Value = ""
    Table.Cells(63, "K").Value = ""
    Table.Cells(66, "I").Value = ""
    Table.Cells(66, "K").Value = ""
    Table.Cells(71, "E").Value = ""
    Table.Cells(95, "E").Value = "'"
    Table.Cells(104, "E").Value = "'"
    Table.Cells(111, "G").Value = ""
    Table.Cells(123, "E").Value = "'"
    Table.Cells(145, "E").Value = "'"
    Table.Cells(154, "E").Value = "'"
    Table.Cells(158, "E").Value = "'"

End Sub
Attribute VB_Name = "Maskenmakros"
Sub Eingabe_2b_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "BC").Value = 0
    VarTable.Cells(4, "BE").Value = 0
End Sub

Sub Eingabe_2b_Loeschen()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "BB").Value = 0
    Call Eingabe_2b_BeiKlick
End Sub

Sub Eingabe_4Mehrling_BeiKlick()
    Dim EingabeTable As Object
    
    Set EingabeTable = Application.Worksheets("Eingabe")
    
    EingabeTable.Cells(66, "I").Value = 1
    EingabeTable.Cells(66, "K").Value = 1
End Sub

Sub Eingabe_5b_Loeschen()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CD").Value = 0
End Sub

Sub Eingabe_8b_Loeschen()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CK").Value = 0
    Call Eingabe_8b1_BeiKlick
End Sub
Sub Eingabe_8b1_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CL").Value = 0
    VarTable.Cells(4, "CM").Value = 0
    VarTable.Cells(4, "CU").Value = 0
End Sub

Sub Eingabe_8b2_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CU").Value = 0
End Sub

Sub Eingabe_8b3_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CL").Value = 0
End Sub

Sub Eingabe_8b4_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CL").Value = 0
    VarTable.Cells(4, "CU").Value = 0
End Sub

Sub Eingabe_9keinHilfsmittel_BeiKlick()
    Dim EingabeTable As Object
    Dim VarTable As Object
    
    Set EingabeTable = Application.Worksheets("Eingabe")
    Set VarTable = Application.Worksheets("VAR")
    
    EingabeTable.Cells(154, "E").Value = ""
    VarTable.Cells(4, "CO").Value = 0
    VarTable.Cells(4, "CP").Value = 0
    VarTable.Cells(4, "CQ").Value = 0
    VarTable.Cells(4, "CR").Value = 0
    VarTable.Cells(4, "CS").Value = 0
    VarTable.Cells(4, "CT").Value = 0
End Sub

Sub Eingabe_9Hilfsmittel_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(4, "CN").Value = 0
End Sub

Sub Blaettern_2b_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "BC").Value = 0
    VarTable.Cells(5, "BE").Value = 0
End Sub

Sub Blaettern_2b_Loeschen()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "BB").Value = 0
    Call Blaettern_2b_BeiKlick
End Sub

Sub Blaettern_4Mehrling_BeiKlick()
    Dim BlaetternTable As Object
    
    Set BlaetternTable = Application.Worksheets("Bl|fffd|ttern")
    
    BlaetternTable.Cells(66, "I").Value = 1
    BlaetternTable.Cells(66, "K").Value = 1
End Sub

Sub Blaettern_5b_Loeschen()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CD").Value = 0
End Sub

Sub Blaettern_8b_Loeschen()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CK").Value = 0
    Call Blaettern_8b1_BeiKlick
End Sub
Sub Blaettern_8b1_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CL").Value = 0
    VarTable.Cells(5, "CM").Value = 0
    VarTable.Cells(5, "CU").Value = 0
End Sub

Sub Blaettern_8b2_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CU").Value = 0
End Sub

Sub Blaettern_8b3_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CL").Value = 0
End Sub

Sub Blaettern_8b4_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CL").Value = 0
    VarTable.Cells(5, "CU").Value = 0
End Sub

Sub Blaettern_9keinHilfsmittel_BeiKlick()
    Dim BlaetternTable As Object
    Dim VarTable As Object
    
    Set BlaetternTable = Application.Worksheets("Bl|fffd|ttern")
    Set VarTable = Application.Worksheets("VAR")
    
    BlaetternTable.Cells(154, "E").Value = ""
    VarTable.Cells(5, "CO").Value = 0
    VarTable.Cells(5, "CP").Value = 0
    VarTable.Cells(5, "CQ").Value = 0
    VarTable.Cells(5, "CR").Value = 0
    VarTable.Cells(5, "CS").Value = 0
    VarTable.Cells(5, "CT").Value = 0
End Sub

Sub Blaettern_9Hilfsmittel_BeiKlick()
    Dim VarTable As Object
    
    Set VarTable = Application.Worksheets("VAR")
    
    VarTable.Cells(5, "CN").Value = 0
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_FollowHyperlink(ByVal target As Hyperlink)
    Call GeheZuDatensatz(target.Parent)
End Sub

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Werkzeug"
Public Const glbPasswort As String = "bfhifb17"

Sub zzAlleszuruecksetzen()
    
    ' Fragebogen auf Standardwerte zur|fffd|cksetzen
    
    Dim Table, BlaetternTable As Object
    Dim DBTable, DBgesundTable As Object
    Dim VarTable, DiagrammTable, BemerkTable As Object
    Dim Auswert1Table, Auswert2Table As Object
    Dim fehlendeTable As Object
    
    Set Table = Application.Worksheets("Eingabe")
    Set BlaetternTable = Application.Worksheets("Bl|fffd|ttern")
    Set DBTable = Application.Worksheets("DB")
    Set DBgesundTable = Application.Worksheets("DBGesund")
    Set VarTable = Application.Worksheets("VAR")
    Set DiagrammTable = Application.Worksheets("Diagramme")
    Set BemerkTable = Application.Worksheets("Anmerkung")
    Set Auswert1Table = Application.Worksheets("Auswertung")
    Set Auswert2Table = Application.Worksheets("Auswertung gesunde Termingebore")
    Set fehlendeTable = Application.Worksheets("fehlendeAngaben")

    ActiveWorkbook.Unprotect Password:=glbPasswort
    
    ' Maske leeren
    MaskeLeeren ("Eingabe")
    MaskeLeeren ("Bl|fffd|ttern")

    ' Datenbank leeren
    DBTable.Range("A2:EZ40000").ClearContents
    DBTable.Activate
    DBTable.Cells(2, "A").Activate
    DBgesundTable.Range("A2:EZ40000").ClearContents
    DBgesundTable.Activate
    DBgesundTable.Cells(2, "A").Activate

    ' BUR und Jahr zur|fffd|cksetzen
    Table.Cells(3, "L").Value = ""
    BlaetternTable.Cells(3, "L").Value = ""
    Table.Cells(4, "D").Value = 2019
    BlaetternTable.Cells(4, "D").Value = 2019
    
    ' Recordnummern und Variablen zur|fffd|cksetzen
    Table.Unprotect Password:=glbPasswort
    Table.Cells(2, "E").Value = 1
    BlaetternTable.Cells(2, "I").Value = 1
    VarTable.Cells(1, "A").Value = 1
    VarTable.Cells(2, "A").Value = 1
    VarTable.Cells(10, "A").Value = 1
    VarTable.Cells(11, "A").Value = 1
    VarTable.Cells(12, "A").Value = 1
    VarTable.Cells(13, "A").Value = 1
    VarTable.Cells(14, "A").Value = 1
    
    ' Kontrolle einschalten
    VarTable.Cells(6, "A").Value = False
    
    ' Diagramm zur|fffd|cksetzen
    DiagrammTable.Activate
    kopierenWunschmonat
    
    ' Auswertung zur|fffd|cksetzen
    Auswert1Table.Activate
    allebabies
    ActiveWorkbook.Unprotect Password:=glbPasswort
    
    ' Anmerkung zur|fffd|cksetzen
    BemerkTable.Activate
    bemerkungen
    
    ' fehlende Angaben zur|fffd|cksetzen
    fehlendeTable.Activate
    fehlendeTable.Unprotect Password:=glbPasswort
    fehlendeTable.Select
    If fehlendeTable.FilterMode = True Then
        fehlendeTable.ShowAllData
    End If
    fehlendeTable.Range("A12:M9999").EntireRow.Delete
    
    ' Tabellen ausblenden
    VarTable.Visible = False
    DBTable.Visible = False
    DBgesundTable.Visible = False
    
    ' Cursor an Anfang setzen
    BlaetternTable.Activate
    BlaetternTable.Cells(2, "I").Activate
    
    DiagrammTable.Activate
    DiagrammTable.Cells(2, "B").Activate
    
    VarTable.Activate
    VarTable.Cells(1, "A").Activate
    
    fehlendeTable.Activate
    fehlendeTable.Cells(3, "A").Activate
    
    Table.Activate
    Table.Cells(3, "I").Activate
    
    ' Tabellen sch|fffd|tzen
    Table.Protect Password:=glbPasswort
    BlaetternTable.Protect Password:=glbPasswort
    VarTable.Protect Password:=glbPasswort
    DiagrammTable.Protect Password:=glbPasswort
    fehlendeTable.Protect Password:=glbPasswort
    BemerkTable.Protect Password:=glbPasswort
    Auswert1Table.Protect Password:=glbPasswort
    Auswert2Table.Protect Password:=glbPasswort

    ' Arbeitsmappe sch|fffd|tzen
    ActiveWorkbook.Protect Structure:=True, Windows:=False, Password:=glbPasswort

    Application.ScreenUpdating = True

End Sub

Sub zzDatensatznummerSetzen()
    
    ' N|fffd|chste Datensatznummer neu setzen, wenn Daten manuell eingef|fffd|gt wurden
    ' 1. November 2012 / ef@katta.ch
    
    Dim Table, BlaetternTable As Object
    Dim DBTable, DBgesundTable, VarTable As Object
    
    Set Table = Application.Worksheets("Eingabe")
    Set BlaetternTable = Application.Worksheets("Bl|fffd|ttern")
    Set DBTable = Application.Worksheets("DB")
    Set DBgesundTable = Application.Worksheets("DBgesund")
    Set VarTable = Application.Worksheets("VAR")

    ' BUR und Jahr setzen
    Table.Cells(3, "L").Value = DBTable.Cells(2, "C").Value
    BlaetternTable.Cells(3, "L").Value = DBTable.Cells(2, "C").Value
    Table.Cells(4, "D").Value = 2019
    BlaetternTable.Cells(4, "D").Value = 2019
    
    ' Datensatz setzen
    Table.Unprotect Password:=glbPasswort
    VarTable.Cells(1, "A") = VarTable.Cells(20, "A")
    Table.Cells(2, "E") = VarTable.Cells(20, "A")

    ' Tabelle DBGesund abf|fffd|llen
    VarTable.Cells(6, "A") = True ' Eingabekorrektur ausschalten
    repeat
    VarTable.Cells(6, "A") = False ' Eingabekorrektur einschalten
    
    Table.Activate
    Table.Cells(3, "I").Activate
    
    ' Tabellen sch|fffd|tzen
    VarTable.Protect Password:=glbPasswort
    VarTable.Visible = False
    BlaetternTable.Protect Password:=glbPasswort
    Table.Protect Password:=glbPasswort
    DBTable.Visible = False
    DBgesundTable.Visible = False
    
    ' Arbeitsmappe mit Passwort sch|fffd|tzen
    ActiveWorkbook.Protect Structure:=True, Windows:=False, Password:=glbPasswort
    
End Sub
Attribute VB_Name = "manoevrieren"
Public Reihe As Integer
Sub vor()
    Dim Table As Object
    Dim DBTable As Object
    Dim VarTable As Object
    Dim LeseTable As Object
    Dim Row As Integer
    Dim Col As Integer
    
    Set Table = Application.Worksheets("Eingabe")
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    Set LeseTable = Application.Worksheets("Bl|fffd|ttern")
    If LeseTable.Cells(2, "I").Value = "" Then
         LeseTable.Cells(2, "I").Value = 1
    End If
    Row = LeseTable.Cells(2, "I").Value + 1
    Reihe = Row
    If DBTable.Cells(Row, "A").Value = "" Or DBTable.Cells(Row, "A").Value < 1 Then
         LeseTable.Cells(2, "I").Value = 1
         Row = 2
    End If
    
    ' Textfelder aus DB holen, Datums- und Zahlenfelder bei null auf leer setzen
    LeseTable.Cells(2, "I").Value = DBTable.Cells(Row, "A").Value
    LeseTable.Cells(3, "I").Value = DBTable.Cells(Row, "B").Value
    LeseTable.Cells(3, "L").Value = DBTable.Cells(Row, "C").Value
    LeseTable.Cells(4, "D").Value = DBTable.Cells(Row, "D").Value
    LeseTable.Cells(9, "E").Value = IIf(DBTable.Cells(Row, "E").Value > 0, DBTable.Cells(Row, "E").Value, "")
    LeseTable.Cells(9, "I").Value = IIf(DBTable.Cells(Row, "F").Value > 0, DBTable.Cells(Row, "F").Value, "")
    LeseTable.Cells(19, "E").Value = IIf(DBTable.Cells(Row, "H").Value > 0, DBTable.Cells(Row, "H").Value, "")
    LeseTable.Cells(23, "F").Value = IIf(DBTable.Cells(Row, "AG").Value > 0, DBTable.Cells(Row, "AG").Value, "")
    LeseTable.Cells(34, "E").Value = DBTable.Cells(Row, "I").Value
    LeseTable.Cells(57, "E").Value = DBTable.Cells(Row, "J").Value
    LeseTable.Cells(63, "E").Value = IIf(DBTable.Cells(Row, "K").Value > 0, DBTable.Cells(Row, "K").Value, "")
    LeseTable.Cells(63, "I").Value = IIf(DBTable.Cells(Row, "L").Value > 0, DBTable.Cells(Row, "L").Value, "")
    LeseTable.Cells(63, "K").Value = IIf(DBTable.Cells(Row, "M").Value > 0, DBTable.Cells(Row, "M").Value, "")
    LeseTable.Cells(66, "I").Value = IIf(DBTable.Cells(Row, "N").Value > 0, DBTable.Cells(Row, "N").Value, "")
    LeseTable.Cells(66, "K").Value = IIf(DBTable.Cells(Row, "O").Value > 0, DBTable.Cells(Row, "O").Value, "")
    LeseTable.Cells(71, "E").Value = IIf(DBTable.Cells(Row, "P").Value > 0, DBTable.Cells(Row, "P").Value, "")
    LeseTable.Cells(95, "E").Value = DBTable.Cells(Row, "Y").Value
    LeseTable.Cells(104, "E").Value = DBTable.Cells(Row, "Z").Value
    LeseTable.Cells(111, "G").Value = IIf(DBTable.Cells(Row, "AA").Value > 0, DBTable.Cells(Row, "AA").Value, "")
    LeseTable.Cells(123, "E").Value = DBTable.Cells(Row, "AB").Value
    LeseTable.Cells(145, "E").Value = DBTable.Cells(Row, "AH").Value
    LeseTable.Cells(154, "E").Value = DBTable.Cells(Row, "AE").Value
    LeseTable.Cells(158, "E").Value = DBTable.Cells(Row, "AF").Value
    
    ' Ankreuzfelder aus DB holen
    ' Felder 35 - 99 (AI - CU)
    For Col = 35 To 99
        VarTable.Cells(5, Col).Value = DBTable.Cells(Row, Col).Value
    Next Col

End Sub

Sub eins_weiter()
Attribute eins_weiter.VB_Description = "Makro am 1.7.1999 von Sonja Merten aufgezeichnetrr rrrr"
Attribute eins_weiter.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim LeseTable As Object
    Dim Zahl As Integer
    
    Set LeseTable = Application.Worksheets("Bl|fffd|ttern")
    Zahl = LeseTable.Cells(2, "I").Value
    LeseTable.Cells(2, "I").Value = Zahl + 1
    vor
End Sub
    
Sub eins_zurueck()
Attribute eins_zurueck.VB_Description = "Makro am 1.7.1999 von Sonja Merten aufgezeichnetrr rrrr"
Attribute eins_zurueck.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim LeseTable As Object
    Dim Zahl As Integer
    
    Set LeseTable = Application.Worksheets("Bl|fffd|ttern")
    Zahl = LeseTable.Cells(2, "I").Value
    If Zahl = 1 Then
         Zahl = 2
    End If
    LeseTable.Cells(2, "I").Value = Zahl - 1
    vor
End Sub

Sub dialogweg()
    missing.Hide
End Sub
Attribute VB_Name = "suchen"

Option Explicit
Sub hebcodesuchen()
    Dim Table As Object
    Dim DBTable As Object
    Dim VarTable As Object
    
    Dim Row, gefunden, code, min, max, min1, max1 As Integer
    
    Set Table = Application.Worksheets("Bl|fffd|ttern")
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    gefunden = 0
    code = Table.Cells(3, "I").Value
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    min1 = VarTable.Cells(25, "A").Value
    max1 = VarTable.Cells(26, "A").Value
    
    If (code < min1) Or (code > max1) Then
        MsgBox "Diese Nummer existiert nicht", vbOK
        Table.Cells(3, "I").Value = ""
        Exit Sub
    End If
    
    If min < max Then
        For Row = min To max
            If CInt(DBTable.Cells(Row, "B").Value) = code Then
                ' code gefunden
                Table.Cells(2, "I").Value = DBTable.Cells(Row, "A").Value
                gefunden = 1
                vor
            End If
        Next Row
        If gefunden = 0 Then
            MsgBox "Diese Nummer existiert nicht", vbOK
            Table.Cells(3, "I").Value = ""
        End If
    End If
    
End Sub

Sub fehlendeAngaben()

' fehlende Angaben in Datens|fffd|tzen anzeigen
' 1. November 2012 / ef@katta.ch

    Dim Table, fehlendeTable, DBTable, VarTable As Object
    Dim min As Integer
    Dim max As Integer
    Dim Row As Integer
    Dim code As Integer
    Dim abzug As Integer
    Dim abzahl As Integer
    Dim mal As Integer
    Dim wert As String

    Set Table = Application.Worksheets("Auswertung")
    Set fehlendeTable = Application.Worksheets("fehlendeAngaben")
    Set DBTable = Application.Worksheets("DB")
    Set VarTable = Application.Worksheets("VAR")
    Application.ScreenUpdating = False
    fehlendeTable.Unprotect Password:=glbPasswort
    
    ' Datensatzbereich
    min = VarTable.Cells(19, "A").Value
    max = VarTable.Cells(20, "A").Value
    
    ' erster Hebammencode
    If min > 1 Then code = DBTable.Cells(min, "B").Value
    
    If (min = 1) Or (min = max) Then
        Exit Sub
    End If
    
    ' Tabelle nach Hebammencode sortieren
    sorthebcode
    
    wert = ""
    For Row = min To max
        ' abzug: letzter gefundener Hebammencode
        abzug = DBTable.Cells(Row, "B").Value
        
        ' abzahl: Differenz zwischen letztem Code und aktuellem Code
        ' Ist 1, wenn die Codes aufeinander folgen
        abzahl = abzug - code
        If abzahl <> 1 Then
            ' Fehlende Codes berechnen und zu Ausgabetext hinzuf|fffd|gen
            For mal = 1 To (abzahl - 1)
                If wert <> "" Then wert = wert & ", "
                wert = wert & (code + mal)
            Next mal
        End If

        ' neuen Anfangscode setzen
        code = abzug
    Next Row
    fehlendeTable.Cells(6, "A").Value = wert
    
    ' Tabelle nach Datensatznummer sortieren
    sortschluessel
    
    ' Fehlende Angaben anzeigen
    fehlendeTable.Activate
    fehlendeTable.Select
    If fehlendeTable.FilterMode = True Then
        fehlendeTable.ShowAllData
    End If
    fehlendeTable.Range("A12:M9999").Select
    Selection.ClearContents
    
    fehlendeTable.Range("A11:M11").Select
    Selection.AutoFill Destination:=fehlendeTable.Range(Cells(11, "A"), Cells(max + 9, "M")), Type:=xlFillDefault
    fehlendeTable.Range("A11").Select
    fehlendeTable.Range(Cells(10, "A"), Cells(max + 9, "M")).AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:=Range("O1:AA2"), Unique:=False
        
    fehlendeTable.Protect Password:=glbPasswort
    Application.ScreenUpdating = True

End Sub

Sub GeheZuDatensatz(Ziel As Range)

' Zu Datensatz springen
' 5. November 2012 / ef@katta.ch

    Dim LeseTable, VarTable As Object
    Dim ReiheNr As Integer
    Dim SpalteNr As String
    
    Set LeseTable = Application.Worksheets("Bl|fffd|ttern")
    Set VarTable = Application.Worksheets("VAR")
    
    ' Merkflag setzen f|fffd|r Aufruf durch Hyperlink
    VarTable.Cells(6, "D").Value = 1
    
    LeseTable.Cells(2, "I").Value = Ziel.Row - 10
    vor
    
    ReiheNr = 3
    SpalteNr = "I"
    Select Case Ziel.Column
        Case 3          ' Geburtsgewicht
            ReiheNr = 71
            SpalteNr = "E"
        Case 4          ' Gestationstage
            ReiheNr = 63
            SpalteNr = "I"
        Case 5          ' Verlegung
            ReiheNr = 75
            SpalteNr = "B"
        Case 6          ' ambulant
            ReiheNr = 73
            SpalteNr = "B"
        Case 7          ' Hautkontakt
            ReiheNr = 108
            SpalteNr = "B"
        Case 8          ' erstes Anlegen
            ReiheNr = 113
            SpalteNr = "B"
        Case 9          ' Rooming In
            ReiheNr = 118
            SpalteNr = "B"
        Case 10         ' Muttermilch
            ReiheNr = 127
            SpalteNr = "B"
        Case 11         ' Stillen
            ReiheNr = 131
            SpalteNr = "B"
        Case 12         ' Hilfsmittel
            ReiheNr = 149
            SpalteNr = "B"
    End Select
    
    LeseTable.Unprotect Password:=glbPasswort
    Application.Goto reference:=LeseTable.Cells(ReiheNr - 2, 1), Scroll:=True
    LeseTable.Protect Password:=glbPasswort
    Cells(ReiheNr, SpalteNr).Activate

End Sub



INQUEST-PP=macro
