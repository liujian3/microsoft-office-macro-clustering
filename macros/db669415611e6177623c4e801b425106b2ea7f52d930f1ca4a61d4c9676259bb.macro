Attribute VB_Name = "Module1"
Public password, stop_running As Boolean


Sub GetPassword()
    password = "abbracadabra"
End Sub


Sub ToolCase()
    Sheets("Dialog1").Show
End Sub


Sub ChangeNunberOfLines()
    Sheets("Dialog1").Hide
    curlines = Worksheets("Remarks").Range("AA2").Value
    tit = "Modify number of lines"
    txt = "Insert desired number of lines" & Chr(10) & Chr(10) & "min = 32  / MAX = 680" & Chr(10) & "Current number = " & curlines
    newlines = Val(InputBox(txt, tit, curlines))
    If newlines = 0 Then Exit Sub
    If newlines < 32 Then newlines = 32
    If newlines > 680 Then newlines = 680
    If newlines = curlines Then Exit Sub
    If newlines < curlines Then GoTo 20
    is_running = True
    Application.ScreenUpdating = False
    GetPassword
    ActiveSheet.Unprotect password:=password
    Worksheets("Remarks").Unprotect password:=password
    Worksheets("Remarks").Range("AA2").Value = newlines
    For i = curlines + 1 To newlines
        Rows(i + 13).Insert
        Rows(i + 12).Copy
        Rows(i + 13).PasteSpecial Paste:=xlFormats
        Application.CutCopyMode = False
        Cells(i + 13, 1).Value = "F " & i
        Next i
    GoTo 50
20  curitems = Worksheets("Remarks").Range("AB2").Value
    isclean = True
    For Each mycell In ActiveSheet.Range(Cells(newlines + 13 + 1, 4), Cells(curlines + 13, curitems + 24))
        If Not IsEmpty(mycell) Then
            isclean = False
            Exit For
            End If
        Next mycell
    If Not isclean Then
        tit = "Non-empty lines cancel abort"
        txt = "W A R N I N G !" & Chr(10) & "Non-empty cells found in lines to be cancelled!" & Chr(10) & Chr(10) & "Operation abandoned"
        goahead = MsgBox(txt, vbOKOnly, tit)
        Exit Sub
        End If
    is_running = True
    Application.ScreenUpdating = False
    GetPassword
    ActiveSheet.Unprotect password:=password
    Worksheets("Remarks").Unprotect password:=password
    Worksheets("Remarks").Range("AA2").Value = newlines
    For i = curlines To newlines + 1 Step -1
        Rows(i + 13).Delete
        Next i
50  ActiveSheet.Protect password:=password
    Worksheets("Remarks").Protect password:=password
    is_running = False
End Sub


Sub ChangeNunberOfItems()
    Sheets("Dialog1").Hide
    curitems = Worksheets("Remarks").Range("AB2").Value
    tit = "Modify number of items"
    txt = "Insert desired number of items" & Chr(10) & Chr(10) & "min = 10  / MAX = 32" & Chr(10) & "Current number = " & curitems
    newitems = Val(InputBox(txt, tit, curitems))
    If newitems = 0 Then Exit Sub
    If newitems < 10 Then newitems = 10
    If newitems > 32 Then newitems = 32
    If newitems = curitems Then Exit Sub
    If newitems < curitems Then GoTo 20
    is_running = True
    Application.ScreenUpdating = False
    GetPassword
    ActiveSheet.Unprotect password:=password
    Worksheets("Remarks").Unprotect password:=password
    Worksheets("Remarks").Range("AB2").Value = newitems
    For i = curitems + 1 To newitems
        Columns(i + 3).Insert
        Columns(i + 2).Copy
        Columns(i + 3).PasteSpecial Paste:=xlFormats
        Application.CutCopyMode = False
        Cells(13, i + 3).Value = i
        Next i
    GoTo 50
20  curlines = Worksheets("Remarks").Range("AA2").Value
    isclean = True
    For Each mycell In ActiveSheet.Range(Cells(14, newitems + 1), Cells(curlines + 13, curitems + 3))
        If Not IsEmpty(mycell) Then
            isclean = False
            Exit For
            End If
        Next mycell
    If Not isclean Then
        tit = "Non-empty items cancel abort"
        txt = "W A R N I N G !" & Chr(10) & "Non-empty cells found in item rows to be cancelled!" & Chr(10) & Chr(10) & "Operation abandoned"
        goahead = MsgBox(txt, vbOKOnly, tit)
        Exit Sub
        End If
    is_running = True
    Application.ScreenUpdating = False
    GetPassword
    ActiveSheet.Unprotect password:=password
    Worksheets("Remarks").Unprotect password:=password
    Worksheets("Remarks").Range("AB2").Value = newitems
    For i = curitems To newitems + 1 Step -1
        Columns(i + 3).Delete
        Next i
50  ActiveSheet.Protect password:=password
    Worksheets("Remarks").Protect password:=password
    is_running = False
End Sub


Sub WarnBox(rownum, colnum, cntxt)
    tit = "Warning for non-numeric entry"
    txt = "W A R N I N G !" & Chr(10) & "You entered a non-numeric value!" & Chr(10) & Chr(10) & "Value has been cancelled to avoid misleading calculations"
    go_on = MsgBox(txt, vbOKOnly, tit)
End Sub


Sub TotalCosts()
    curlines = Worksheets("Remarks").Range("AA2").Value
    curitems = Worksheets("Remarks").Range("AB2").Value
    comm = 0
    oper = 0
    cptl = 0
    ttbo = 0
    For rw = 14 To 13 + curlines
        mycomm = 0
        mycptl = 0
    ' Commissioning spares
        If Not IsEmpty(Worksheets("SPIR Form").Cells(rw, 14 + curitems)) Then GoTo 10
        If Not IsEmpty(Worksheets("SPIR Form").Cells(rw, 13 + curitems)) Then
            mycomm = Worksheets("SPIR Form").Cells(rw, 13 + curitems)
            Else
            mycomm = Worksheets("SPIR Form").Cells(rw, 12 + curitems)
            End If
10  ' Operating spares
        If Not IsEmpty(Worksheets("SPIR Form").Cells(rw, 16 + curitems)) Then
            myoper = Worksheets("SPIR Form").Cells(rw, 16 + curitems)
            Else
            myoper = Worksheets("SPIR Form").Cells(rw, 15 + curitems)
            End If
    ' Capital spares
        If Not IsEmpty(Worksheets("SPIR Form").Cells(rw, 19 + curitems)) Then GoTo 20
        If Not IsEmpty(Worksheets("SPIR Form").Cells(rw, 18 + curitems)) Then
            mycptl = Worksheets("SPIR Form").Cells(rw, 18 + curitems)
            Else
            mycptl = Worksheets("SPIR Form").Cells(rw, 17 + curitems)
            End If
    ' Total-To-Be-Ordered spares
20      If IsNumeric(Worksheets("SPIR Form").Cells(rw, 21 + curitems)) Then
            myttbo = Worksheets("SPIR Form").Cells(rw, 21 + curitems)
            Else
            myttbo = mycomm + myoper + mycptl
            End If
    ' Update totals
        myuntprc = Worksheets("SPIR Form").Cells(rw, 22 + curitems)
        If myuntprc = 0 And myttbo > 0 Then
            go_ahead = MsgBox("W A R N I N G !" & Chr(10) & "Missing unit price at line F" & rw - 13 & " !", vbOKOnly)
            comm = "N/A"
            oper = "N/A"
            cptl = "N/A"
            ttbo = "N/A"
            Exit For
            End If
        comm = comm + mycomm * myuntprc
        oper = oper + myoper * myuntprc
        cptl = cptl + mycptl * myuntprc
        ttbo = ttbo + myttbo * myuntprc
        Next rw
    GetPassword
    stop_running = True
    Worksheets("SPIR Form").Unprotect password:=password
    Worksheets("SPIR Form").Cells(14 + curlines, 7 + curitems) = comm
    Worksheets("SPIR Form").Cells(14 + curlines, 11 + curitems) = oper
    Worksheets("SPIR Form").Cells(14 + curlines, 17 + curitems) = cptl
    Worksheets("SPIR Form").Cells(14 + curlines, 23 + curitems) = ttbo
    Worksheets("Remarks").Unprotect password:=password
    Worksheets("Remarks").Range("AC2").Value = True
    Worksheets("Remarks").Protect password:=password
    Worksheets("SPIR Form").Protect password:=password
    stop_running = False
End Sub



Sub ClearTotals()
    curlines = Worksheets("Remarks").Range("AA2").Value
    curitems = Worksheets("Remarks").Range("AB2").Value
    comm = 0
    oper = 0
    cptl = 0
    ttbo = 0
    stop_running = True
    Worksheets("SPIR Form").Unprotect password:=password
    Worksheets("SPIR Form").Cells(14 + curlines, 7 + curitems) = comm
    Worksheets("SPIR Form").Cells(14 + curlines, 11 + curitems) = oper
    Worksheets("SPIR Form").Cells(14 + curlines, 17 + curitems) = cptl
    Worksheets("SPIR Form").Cells(14 + curlines, 23 + curitems) = ttbo
    Worksheets("SPIR Form").Protect password:=password
    stop_running = False
End Sub

Attribute VB_Name = "Module2"
Option Explicit
' MACRO by Luigi Curioni (modified by Mario Ghiringhelli)
'
' This macro opens input file, copy cells and rules,insert values in cells
'
' Please set constants in accordance with excel sheet where to import data from files

Const FIELD_NUM = 18                    'number of field to be read from file
Const SHEET_NAME = "SPIR Form"       'name of sheet in which insert data
' Const input_csv_file = "C:\AMUSE\TEMP\SpareParts.txt" 'file to be imported
Dim input_csv_file As String

Sub auto_open()

On Error GoTo open_err



Dim k_value As Variant
Dim k As Integer

If Worksheets("Remarks").Range("AD2").Value = "USED" Then
   Exit Sub
End If

' s-Protection
GetPassword
Worksheets("SPIR Form").Unprotect password:=password
stop_running = True



input_csv_file = Application.ThisWorkbook.Path & "\SpareParts.txt" 'file to be imported
' MsgBox input_csv_file
Open input_csv_file For Input As #7
   Do While Not EOF(7)
       
       For k = 1 To FIELD_NUM
        Input #7, k_value
        ' JOB
            If k = 1 Then
              Sheets(SHEET_NAME).Range("U2").Value = k_value
              Sheets(SHEET_NAME).Range("U2:X3").Locked = True
              Sheets(SHEET_NAME).Range("U2").Interior.ColorIndex = xlNone
        ' PO
            ElseIf k = 2 Then
              Sheets(SHEET_NAME).Range("O1").Value = k_value
              Sheets(SHEET_NAME).Range("O1:P1").Locked = True
              Sheets(SHEET_NAME).Range("O1").Interior.ColorIndex = xlNone
        ' XTITLE
            ElseIf k = 3 Then
              Sheets(SHEET_NAME).Range("N3").Value = k_value
              Sheets(SHEET_NAME).Range("N3:P3").Locked = True
              Sheets(SHEET_NAME).Range("N3").Interior.ColorIndex = xlNone
        ' Client PO
            ElseIf k = 5 Then
              Sheets(SHEET_NAME).Range("O2").Value = k_value
              Sheets(SHEET_NAME).Range("O2:P2").Locked = True
              Sheets(SHEET_NAME).Range("O2").Interior.ColorIndex = xlNone
        ' XVENDOR
            ElseIf k = 12 Then
              Sheets(SHEET_NAME).Range("N5").Value = k_value
              Sheets(SHEET_NAME).Range("N5:P6").Locked = True
              Sheets(SHEET_NAME).Range("N5").Interior.ColorIndex = xlNone
        ' ADDRESS
            ElseIf k = 13 Then
              Sheets(SHEET_NAME).Range("O7").Value = k_value
              Sheets(SHEET_NAME).Range("O7:T7").Locked = True
              Sheets(SHEET_NAME).Range("O7").Interior.ColorIndex = xlNone
        ' XP
            ElseIf k = 14 Then
              Sheets(SHEET_NAME).Range("U5").Value = k_value
              Sheets(SHEET_NAME).Range("U5:AD6").Locked = True
              Sheets(SHEET_NAME).Range("U5").Interior.ColorIndex = xlNone
        ' XCLIENT
            ElseIf k = 15 Then
              Sheets(SHEET_NAME).Range("Y2").Value = k_value
              Sheets(SHEET_NAME).Range("Y2:AD3").Locked = True
              Sheets(SHEET_NAME).Range("Y2").Interior.ColorIndex = xlNone
        ' XPLOC
            ElseIf k = 16 Then
              Sheets(SHEET_NAME).Range("U8").Value = k_value
              Sheets(SHEET_NAME).Range("U8:AD8").Locked = True
              Sheets(SHEET_NAME).Range("U8").Interior.ColorIndex = xlNone
        ' SPARE
            ElseIf k = 17 Then
              Sheets(SHEET_NAME).Range("Y11").Value = k_value
              Sheets(SHEET_NAME).Range("Y11:Z11").Locked = True
              Sheets(SHEET_NAME).Range("Y11").Interior.ColorIndex = xlNone
              
            End If
                
       Next k
       
   Loop

Close #7

If Len(Dir$(input_csv_file)) > 0 Then
     Kill input_csv_file
End If

'Protection
Worksheets("Remarks").Unprotect password:=password
Worksheets("Remarks").Range("AD2").Value = "USED"
Worksheets("Remarks").Protect password:=password
Worksheets("SPIR Form").Protect password:=password
stop_running = False

ActiveWorkbook.Save

Exit Sub


open_err:
If Err <> 53 And Err <> 68 And Err <> 70 And Err <> 76 Then
MsgBox "MACRO AUTO_OPEN - error: " & Err & "  " & Error() & "   -   MACRO HALTED. IMPORT HALTED", 64, "LC - MACRO"
End If
Reset
FreeHeadings
Exit Sub
End Sub

Sub FreeHeadings()
GetPassword
Worksheets("SPIR Form").Unprotect password:=password
stop_running = True

        ' JOB
              Sheets(SHEET_NAME).Range("U2:X3").Locked = False
              Sheets(SHEET_NAME).Range("U2").Interior.ColorIndex = 35
        ' PO
              Sheets(SHEET_NAME).Range("O1:P1").Locked = False
              Sheets(SHEET_NAME).Range("O1").Interior.ColorIndex = 35
        ' XTITLE
              Sheets(SHEET_NAME).Range("N2:P3").Locked = False
              Sheets(SHEET_NAME).Range("N2").Interior.ColorIndex = 35
        ' XVENDOR
              Sheets(SHEET_NAME).Range("N5:P6").Locked = False
              Sheets(SHEET_NAME).Range("N5").Interior.ColorIndex = 35
        ' ADDRESS
              Sheets(SHEET_NAME).Range("O7:T7").Locked = False
              Sheets(SHEET_NAME).Range("O7").Interior.ColorIndex = 35
        ' XP
              Sheets(SHEET_NAME).Range("U5:AD6").Locked = False
              Sheets(SHEET_NAME).Range("U5").Interior.ColorIndex = 35
        ' XCLIENT
              Sheets(SHEET_NAME).Range("Y2:AD3").Locked = False
              Sheets(SHEET_NAME).Range("Y2").Interior.ColorIndex = 35
        ' XPLOC
              Sheets(SHEET_NAME).Range("U8:AD8").Locked = False
              Sheets(SHEET_NAME).Range("U8").Interior.ColorIndex = 35
        ' SPARE
              Sheets(SHEET_NAME).Range("Y11:Z11").Locked = False
              Sheets(SHEET_NAME).Range("Y11").Interior.ColorIndex = 35

Worksheets("Remarks").Unprotect password:=password
Worksheets("Remarks").Range("AD2").Value = "USED"
Worksheets("Remarks").Protect password:=password
Worksheets("SPIR Form").Protect password:=password
stop_running = False
              
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public is_running As Boolean

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    Cancel = True
    myrow = Target.Row
    mycol = Target.Column
    nlines = Worksheets("Remarks").Range("AA2").Value
    nitems = Worksheets("Remarks").Range("AB2").Value
    If mycol <= 3 Then Exit Sub
    If myrow <= 10 And mycol <= nitems + 3 Then
        myhdg = UCase(ActiveSheet.Cells(myrow, 3))
        For Each mycell In Worksheets("Notes").Range("A2:A27")
            If UCase(Trim(mycell.Value)) = myhdg Then
                topline = "Help on column " & myhdg
                helpline = mycell.Cells(1, 2).Value & Chr(10) & "----------" & Chr(10) & mycell.Cells(1, 3).Value
                goahead = MsgBox(helpline, vbOKOnly, topline)
                Exit For
                End If
            Next mycell
        End If
    If myrow < 14 Then Exit Sub
    myhdg = UCase(Trim(ActiveSheet.Cells(13, mycol)))
    If myhdg = "V" Then GoTo 50
    For Each mycell In Worksheets("Notes").Range("A2:A27")
        If UCase(Trim(mycell.Value)) = myhdg Then
            topline = "Help on column " & myhdg
            helpline = mycell.Cells(1, 2).Value & Chr(10) & "----------" & Chr(10) & mycell.Cells(1, 3).Value
            goahead = MsgBox(helpline, vbOKOnly, topline)
            Exit For
            End If
        Next mycell
    Exit Sub
50  myrem = UCase(Trim(ActiveSheet.Cells(myrow, mycol).Value))
    If myrem = "" Then Exit Sub
    For Each mycell In Worksheets("Remarks").Range("A2:A40")
        If Not IsEmpty(mycell) Then lastrow = mycell.Row
        If UCase(Trim(mycell.Value)) = myrem Then
            topline = "Existing Remark"
            helpline = mycell.Cells(1, 2).Value
            goahead = MsgBox(helpline, vbOKOnly, topline)
            Exit Sub
            End If
        Next mycell
    topline = "New remark ?"
    helpline = "Remark " & myrem & " not found!" & Chr(10)
    helpline = helpline & "Do you want to enter new remark text?"
    goahead = MsgBox(helpline, vbYesNo, topline)
    If goahead <> vbYes Then Exit Sub
    If lastrow = 0 Then lastrow = 1
    Worksheets("Remarks").Cells(lastrow + 1, 1).Value = myrem
    Worksheets("Remarks").Activate
    ActiveSheet.Cells(lastrow + 1, 2).Select
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
'Exit Sub
    If is_running Then Exit Sub
    If stop_running Then Exit Sub
    targtop = Target.Row
    targleft = Target.Column
    myheight = Target.Rows.Count
    mywidth = Target.Columns.Count
    If myheight + mywidth > 4 Then Application.ScreenUpdating = False
    nlines = Worksheets("Remarks").Range("AA2").Value
    nitems = Worksheets("Remarks").Range("AB2").Value
    totals_on = Worksheets("Remarks").Range("AC2").Value
    If totals_on Then
        GetPassword
        ClearTotals
        Worksheets("Remarks").Unprotect password:=password
        Worksheets("Remarks").Range("AC2").Value = False
        Worksheets("Remarks").Protect password:=password
        End If
    If targtop > nlines + 13 Then GoTo 99
    If targtop = 11 And targleft = 15 + nitems Then GoTo 99
    If targtop = 11 And targleft = 22 + nitems Then GoTo 99
    For myrow = targtop To targtop + myheight
        For mycol = targleft To targleft + mywidth
        
            If myrow < 10 Then GoTo 80
            is_running = True
            If (myrow = 11 Or myrow = 12) And mycol <= nitems + 3 Then GoTo 70
            If myrow = 13 Then GoTo 80
            If myrow = 10 And mycol <= nitems + 3 Then                    'Changed pieces of equipoment per item
                If Not IsNumeric(Cells(myrow, mycol)) Then
                    Cells(myrow, mycol) = ""
                    Call WarnBox(myrow, mycol, 1)
                    End If
                i = 14
                While Left(UCase(ActiveSheet.Cells(i, 1)), 1) = "F"
                    If ActiveSheet.Cells(i, mycol) = 0 Then GoTo 5
                    tot_parts = 0
                    For k = 4 To nitems + 3
                        tot_parts = tot_parts + ActiveSheet.Cells(i, k) * ActiveSheet.Cells(10, k)
                        Next k
                    If tot_parts > 0 Then
                        ActiveSheet.Cells(i, nitems + 11) = tot_parts
                        Else
                        ActiveSheet.Cells(i, nitems + 11).ClearContents
                        End If
5                   i = i + 1
                    Wend
                GoTo 70
                End If
            If (mycol >= 4 And mycol <= nitems + 3) Or mycol = nitems + 11 Then  'Parts per individual piece of equipment
                If Not IsNumeric(Cells(myrow, mycol)) Then
                    Cells(myrow, mycol) = ""
                    Call WarnBox(myrow, mycol, 1)
                    End If
                tot_parts = 0
                For k = 4 To nitems + 3
                    tot_parts = tot_parts + ActiveSheet.Cells(myrow, k) * ActiveSheet.Cells(10, k)
                    Next k
                If tot_parts > 0 Then
                    ActiveSheet.Cells(myrow, nitems + 11) = tot_parts
                    Else
                    ActiveSheet.Cells(myrow, nitems + 11).ClearContents
                    End If
                End If
            If mycol = nitems + 13 Or mycol = nitems + 16 Or mycol = nitems + 18 Then    'Recomm by Purchaser
                If Not IsNumeric(Cells(myrow, mycol)) Then
                    Cells(myrow, mycol) = ""
                    Call WarnBox(myrow, mycol, 1)
                    End If
                If Trim(ActiveSheet.Cells(myrow, mycol)) = "" Then
                    ActiveSheet.Cells(myrow, mycol - 1).Font.Strikethrough = False
                    Else
                    ActiveSheet.Cells(myrow, mycol - 1).Font.Strikethrough = True
                    End If
                End If
            If mycol = nitems + 14 Then                 'Commiss included in basic scope
                If Trim(ActiveSheet.Cells(myrow, nitems + 14)) = "" Then
                    ActiveSheet.Cells(myrow, nitems + 14).ClearContents
                    Else
                    ActiveSheet.Cells(myrow, nitems + 14) = "l"
                    End If
                GoTo 20
                End If
            If mycol = nitems + 19 Then                 'Capital included in basic scope
                If Trim(ActiveSheet.Cells(myrow, nitems + 19)) = "" Then
                    ActiveSheet.Cells(myrow, nitems + 19).ClearContents
                    Else
                    ActiveSheet.Cells(myrow, nitems + 19) = "l"
                    End If
                GoTo 20
                End If
15          If (mycol <= nitems + 19 And mycol >= nitems + 12) Or mycol = nitems + 21 Or mycol = nitems + 22 Or mycol = nitems + 23 Then
                If mycol = nitems + 23 Then GoTo 20
                If Not IsNumeric(Cells(myrow, mycol)) Then
                    Cells(myrow, mycol) = ""
                    Call WarnBox(myrow, mycol, 1)
                    End If
20              cur_n_tot = ActiveSheet.Cells(myrow, nitems + 21).Value
                If Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 14)) Then
                    n_comm = 0
                    ElseIf Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 13)) Then
                    n_comm = ActiveSheet.Cells(myrow, nitems + 13)
                    Else
                    n_comm = ActiveSheet.Cells(myrow, nitems + 12)
                    End If
                If Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 16)) Then
                    n_2yrs = ActiveSheet.Cells(myrow, nitems + 16)
                    Else
                    n_2yrs = ActiveSheet.Cells(myrow, nitems + 15)
                    End If
                If Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 19)) Then
                    n_capt = 0
                    ElseIf Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 18)) Then
                    n_capt = ActiveSheet.Cells(myrow, nitems + 18)
                    Else
                    n_capt = ActiveSheet.Cells(myrow, nitems + 17)
                    End If
                n_tot = n_comm + n_2yrs + n_capt
                If IsEmpty(ActiveSheet.Cells(myrow, nitems + 21)) Then GoTo 30
                If Left(cur_n_tot, 1) = "[" Then GoTo 30
                If mycol = nitems + 21 Then GoTo 40
                GoTo 50
30              If n_tot > 0 Then
                    ActiveSheet.Cells(myrow, nitems + 21) = "[" & n_tot & "]"
                    If Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 22)) Then
                        ActiveSheet.Cells(myrow, nitems + 23).Value = ActiveSheet.Cells(myrow, nitems + 22).Value * n_tot
                        Else
                        ActiveSheet.Cells(myrow, nitems + 23).ClearContents
                        End If
                    Else
                    ActiveSheet.Cells(myrow, nitems + 21).ClearContents
                    ActiveSheet.Cells(myrow, nitems + 23).ClearContents
                    End If
                GoTo 50
40              If Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 22)) And Not IsEmpty(ActiveSheet.Cells(myrow, nitems + 21)) Then
                    ActiveSheet.Cells(myrow, nitems + 23).Value = ActiveSheet.Cells(myrow, nitems + 22).Value * ActiveSheet.Cells(myrow, nitems + 21).Value
                    Else
                    ActiveSheet.Cells(myrow, nitems + 23).ClearContents
                    End If
50              End If

70      Next mycol
80  Next myrow
99  is_running = False
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
