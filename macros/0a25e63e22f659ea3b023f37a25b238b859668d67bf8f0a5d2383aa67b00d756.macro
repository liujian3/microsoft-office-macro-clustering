Attribute VB_Name = "Abweichungen_Plot"
Option Explicit

Sub ZeichneAbweichung()
'
Dim k As Integer, pos1 As Integer, pos2 As Integer
Dim temp As Double, faktor As Double, max As Double, min As Double
Dim bereich1 As String, maxstr As String, minstr As String
Static Breite As Integer, Hoehe As Integer
Dim anz As Integer
Dim min1 As Double, max1 As Double
Dim HeaderData As String
Dim line As Integer
'
Call SucheAbweichung(bereich1)
If Bereich = "" Then
Exit Sub
End If

' das folgende, um die grenzen in der graphik sch|fffd|n zu kriegen, und weil bw die
' ordinatenwerte 'vern|fffd|nfig' abgeschnitten haben m|fffd|chte, 31.01.07, cs

Call Plotgrenzen(max, min)
max = max - StaDa(12, plotindex)
min = min - StaDa(12, plotindex)
'Stop

Call ActPlotgrenzen(max, min, max1, min1)

If Sgn(max * min) = 1 Then
 Bereich = bereich1
 End If

 AbwChart.Unprotect Password:="ralf"
 AbwChart.Select
 Call formatieren
 With ActiveChart
    .SizeWithWindow = True
    .Axes(xlValue).MinimumScale = min1
    .Axes(xlValue).MaximumScale = max1
    .Axes(xlValue).CrossesAt = min1
    .Axes(xlCategory).TickLabelSpacing = Int(StaDa(4, plotindex) / 20) + 1
    .Axes(xlCategory).TickMarkSpacing = Int(StaDa(4, plotindex) / 20) + 1
'    .Axes(xlCategory).AxisBetweenCategories = False
'wegmachen, sonst ist der 1. messpunkt auf der Ordinate, 28.01.09,cs
   
    .ChartTitle.Characters.text = Tabelle4.Range(lang_nr & "50").text & " " & Merkmal(plotindex)
    .SetSourceData Source:=Sheets("hilfe").Range(Bereich), PlotBy:=xlColumns
    .SeriesCollection(1).name = Tabelle4.Range(lang_nr & "51").text
    
    If Sgn(max * min) <> 1 Then
    .SeriesCollection(2).name = Tabelle4.Range(lang_nr & "52").text
    End If
    
     .PlotArea.Select
     pos = Selection.top

   .Legend.Select
    If (Tabelle1.neu_abw) Then
    Tabelle1.neu_abw = False
    End If
    ActiveChart.Shapes(1).Select
        Selection.Characters.text = ""
        Selection.Characters.text = Tabelle4.Range(lang_nr & "66").text + " = " + CStr(sigma) + _
                                    Chr(10) + Tabelle4.Range(lang_nr & "70").text + " = " + CStr(cp) _
                                    + Chr(10) + Tabelle4.Range(lang_nr & "71").text + " = " _
                                    + CStr(cpk) + Chr(10) + text
    .Deselect
 line = 110
 HeaderData = ""
 While (Not IsEmpty(Tabelle4.Range("B" & line)))
 HeaderData = HeaderData & Tabelle4.Range(lang_nr & line).text + " " + Tabelle4.Range("C" & line).text + Chr(10)
line = line + 1
Wend
    .Shapes(2).Select
        Selection.Characters.text = ""
        Selection.Characters.text = HeaderData
    .Deselect
    .Protect Password:="ralf"

   End With

End Sub

Sub SucheAbweichung(bereich1)
'
' TEST Makro
' Makro am 01.03.2004 von SCHOENE aufgezeichnet
' sucht die tabelle nach einer bestimmten bezeichnung( merkmal)  08.03.04, cs
Dim start, i, i1, x As Integer
Dim schleife As Boolean
Dim Istwert, Sollwert As Double
'
Sheets("hilfe").Visible = False
Sheets("hilfe").Activate

 Bereich = ""
 Call FindData(i1, 1)
 
' If i1 > 5 Then
    i1 = i1 - 1
    Bereich = "B" & erstezeile & ":B" & i1 & "," & "P" & erstezeile & ":P" & i1
    bereich1 = "B" & erstezeile & ":B" & i1
       If Tabelle4.Range("B11").Value = 1 Then
          If i1 > erstezeile + Tabelle4.Range("B10").Value - 1 Then
             bereich1 = "AB" & i1 + 1 - Tabelle4.Range("B10").Value & ":AB" & i1
             Bereich = "AB" & i1 + 1 - Tabelle4.Range("B10").Value & ":AB" & i1 & "," & _
                       "AP" & i1 + 1 - Tabelle4.Range("B10").Value & ":AP" & i1
          End If
       End If
   
'End If

If i1 - 4 > imax Then
    imax = i1 - 4
End If
    
faehigkeit (plotindex)

End Sub

Attribute VB_Name = "Diagramm2"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public verteilungstart As Integer

Private Sub chart_Activate()
On Error Resume Next
If verteilungstart = 0 Then
With ActiveChart
   .SizeWithWindow = True
   .HasAxis(xlCategory, xlPrimary) = True
    .HasAxis(xlValue, xlPrimary) = True
    .Axes(xlValue, xlPrimary).AxisTitle.Characters.text = Tabelle4.Range(lang_nr & "57").text
End With

ActiveWindow.Zoom = zoomfactor_graphics
verteilungstart = 2
End If
End Sub
Attribute VB_Name = "Diagramm3"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public abweichungstart As Integer

Private Sub chart_Activate()
On Error Resume Next

If abweichungstart = 0 Then
    ActiveChart.SizeWithWindow = True
    ActiveChart.Axes(xlCategory).TickLabelPosition = xlTickLabelPositionLow
    With ActiveChart
        .HasAxis(xlCategory, xlPrimary) = True
            .Axes(xlValue, xlPrimary).AxisTitle.Characters.text = Tabelle4.Range(lang_nr & "51").text
            .Axes(xlCategory).AxisTitle.Select
            Selection.Characters.text = Tabelle4.Range(lang_nr & "53").text
    End With
    
    ActiveWindow.Zoom = zoomfactor_graphics
    abweichungstart = 2
End If
End Sub
Attribute VB_Name = "Diagramm4"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public wertestart As Integer

Private Sub chart_Activate()
On Error Resume Next
If wertestart = 0 Then
ActiveChart.SizeWithWindow = True
    ActiveChart.Axes(xlCategory).TickLabelPosition = xlTickLabelPositionLow
    With ActiveChart
        .HasAxis(xlCategory, xlPrimary) = True
            .Axes(xlValue, xlPrimary).AxisTitle.Characters.text = Tabelle4.Range(lang_nr & "43").text
            .Axes(xlCategory).AxisTitle.Select
            Selection.Characters.text = Tabelle4.Range(lang_nr & "42").text
    End With
    
    wertestart = 2
    ActiveWindow.Zoom = zoomfactor_graphics
 End If
End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

' mal drinlassen...wer wei|fffd|, wof|fffd|r man das braucht 08.01.07,cs

'Private Sub Workbook_BeforeClose(Cancel As Boolean)
 '   If Not CloseAllowed Then
  '      'Nur wenn WinWerth sagt, dass man zumachen kann, so kann man auch zumachen !!! Ansonsten auflassen.
   '     Cancel = True
    'Else
     '   If Tabelle4.Range("B19").Value = 1 Then
      '      MenuesEntfernen
      '  End If
 '   End If
'End Sub


Private Sub Workbook_Open()
Dim cm As Integer
   Stop
Sheets(Protokoll).Activate
Tabelle1.CalcProtocolIntern
'If (Tabelle4.Range("F3") = 0) then      so wars mal, 07.06.10, cs
If ((Tabelle4.Range("F3") = 0) Or ((Tabelle4.Range("F3") = 1) And (Tabelle4.Range("C21") <> 1))) Then
'nur beim ersten aufruf, 04.03.10, cs
    
    
' die menues m|fffd|ssen hier schon mal erstellt werden, wenn n|fffd|mlich ein xls geladen wird,
' dann kommen sie an dieser stelle rein....25.04.07, cs
    MenuesErstellen
    InsertMerkmaleInMenue
'    InsertKavitaetenInMenue
    
    'Ck2006-08-15hier die menues wieder entfernen, wenn nicht freigeschaltet.
    If Tabelle4.Range("B19").Value = 0 Then
        MenuesEntfernen
     End If
End If
'Stop
End Sub

Attribute VB_Name = "Interface"
Option Explicit

Public Sub GetFirstEmptyCell(ByRef AktZeile As Integer)
    'Erste leere Zeile nach dem Header finden (Protokollende)
    AktZeile = Tabelle4.Range("B8").Value
End Sub

Public Sub GetHeaderEnd(ByRef AktZeile, ByRef AktSpalte)
   'Bereich des Headers rausfinden
   AktZeile = Tabelle4.Range("B7").Value
   AktSpalte = Tabelle4.Range("C7").text
End Sub

Sub HeaderValues(c_date As String, c_time As String, c_user As String, var1 As String, var2 As String, var3 As String, var4 As String, var5 As String, var6 As String, var7 As String, var8 As String, var9 As String)
    Dim Zellen As Range
    Dim AktZeile As Integer
    Dim AktSpalte As String
    Dim x As Long
'   Stop
'var1 = "test degudent"
'var2 = "testprodukt"
'var3 = "12345"
'var4 = "1"
'var5 = "67890"
'var6 = "09876"
'var7 = "54321"
'var8 = "schoene"
'var9 = "als nur arbeit"
    blattunprotect
    x = WritePrivateProfileString("Excel", "HWND", CStr(Application.hwnd), Tabelle4.Range("B15").text)
    
    CloseAllowed = False        'Wird |fffd|ber WinWerth aufgerufen -> schliessen von Excel ist nicht erlaubt.
    plotindex = -1
    spc3index = -1
    FirstLoop = True
    anzahlmerkmale = 0
    AnzahlLoops = 0
    Call GetHeaderEnd(AktZeile, AktSpalte)
    
    'Startzeile nach Header finden
    Set Zellen = ProtSheet.Range("A1:" & AktSpalte & AktZeile)
    Zellen.Select
    For Each Zellen In Selection
        If InStr(Zellen, "&d") > 0 Then
             Zellen.Value = c_date
        ElseIf InStr(Zellen, "&t") > 0 Then
            Zellen.Value = c_time
        ElseIf InStr(Zellen, "&u") > 0 Then
            Zellen.Value = c_user
        ElseIf InStr(Zellen, "&v1") > 0 Then
            Zellen.Value = var1
        ElseIf InStr(Zellen, "&v2") > 0 Then
            Zellen.Value = var2
        ElseIf InStr(Zellen, "&v3") > 0 Then
            Zellen.Value = var3
        ElseIf InStr(Zellen, "&v4") > 0 Then
            Zellen.Value = var4
        ElseIf InStr(Zellen, "&v5") > 0 Then
            Zellen.Value = var5
        ElseIf InStr(Zellen, "&v6") > 0 Then
            Zellen.Value = var6
        ElseIf InStr(Zellen, "&v7") > 0 Then
            Zellen.Value = var7
        ElseIf InStr(Zellen, "&v8") > 0 Then
            Zellen.Value = var8
        ElseIf InStr(Zellen, "&v9") > 0 Then
            Zellen.Value = var9
        End If
    Next Zellen
'    ActiveSheet.Range("A1").Select
    
    blattprotect
End Sub


' Funktion wird extern von WinWerth aufgerufen, welches hier seine Messwerte r|fffd|berschiebt. TF 5.10.05
Sub ZeileEinfuegen(Sym As Variant, W1 As Variant, W2 As Variant, W3 As Variant, W4 As Variant, W5 As Variant, _
                   W6 As Variant, Graf As Variant, bez As Variant)
    
Dim AktZeile As Integer
Dim dzeile As Integer
Dim vonSpalte As Integer
Dim bisSpalte As Integer
Dim datum As String     'hei|fffd|t zwar datum, hat aber mit datum nichts zu tun, 13.02.09, cs
Dim komma1 As Integer
Dim komma2 As Integer
Dim dlaenge As Integer
Dim charge As String
Dim inhalt As String
Dim line As Integer
Dim zelle As String
Dim posgrad As Integer


On Error Resume Next

'zun|fffd|chst die sonderzeichen festlegen, da ihr hexcode vom betriebssystem abh|fffd|ngig ist, 01.06.2010, cs
'    blattunprotect
 ProtSheet.Unprotect Password:="werth"
'  Stop
'das folgende geh|fffd|rt hier eigentlich nicht hin, aber wenn es an der richtigen stelle ist
'( merkmale_finden ), dann gehen alle m|fffd|glichen anderen dinge schief, 11.02.09, cs
line = 110
'Stop
While (Not IsEmpty(Sheets(Konfiguration).Range("B" & line)))
    datum = Sheets(Konfiguration).Range("B" & line)
'Stop
    komma1 = InStr(datum, ",")
    If (komma1 > 0) Then                    'gehe nur beim allerersten mal hier rein
        zelle = Left(datum, komma1 - 1)     'spalte
        dlaenge = Len(datum)
        datum = Right(datum, dlaenge - komma1)
        komma1 = InStr(datum, ",")
        If (komma1 > 0) Then
            dlaenge = Len(datum)
            zeile = Left(datum, komma1 - 1)
            komma2 = InStr(Mid(datum, komma1 + 1), ",")
            vonSpalte = Mid(datum, komma1 + 1, komma2 - 1)
            bisSpalte = Right(datum, dlaenge - komma1 - komma2)
'Stop
            inhalt = Mid(Tabelle1.Range(zelle & zeile), vonSpalte, bisSpalte - vonSpalte + 1)
            dlaenge = Len(inhalt)
            While (Right(inhalt, 1) = " ")
                dlaenge = dlaenge - 1
            inhalt = Left(inhalt, dlaenge)
            Wend
            If (inhalt <> "") Then
                Sheets(Konfiguration).Range("C" & line) = inhalt 'Mid(Tabelle1.Range("A" & zeile), vonSpalte, bisSpalte)
            End If
        Else
            Sheets(Konfiguration).Range("C" & line) = Tabelle1.Range(zelle & datum)
        End If
    End If
line = line + 1
Wend
  
  
    Call GetFirstEmptyCell(AktZeile)
    

    If Trim(W1) = "" Then W1 = "0.0"
    If Trim(W2) = "" Then W2 = "0.0"
    If Trim(W3) = "" Then W3 = "0.0"
    If Trim(W4) = "" Then W4 = "0.0"
    If Trim(W5) = "" Then W5 = "0.0"
    If Trim(W6) = "" Then W6 = "0.0"
' Die Abfrage nach ? ist wegen der asiatischen sprachen,
' weil das vb offensichtlich |fffd| in ? umwandelt,19.04.10, cs
' chr(176) ist |fffd|, aber wenn das |fffd|-zeichen im code ist, st|fffd|rzt der code ab, 19.04.10, cs
'Stop
'        posgrad = InStr(W1, strgrad)
'        If (posgrad > 0) Then
'        Call ConvertAngleToDecimal(W1)
'        End If
'
        If ((InStr(W1, strgrad(0)) > 0) Or (InStr(W1, strgrad(1)) > 0)) Then
        Call ConvertAngleToDecimal(W1)
        End If
        If ((InStr(W2, strgrad(0)) > 0) Or (InStr(W2, strgrad(1)) > 0)) Then
        Call ConvertAngleToDecimal(W2)
        End If
        If ((InStr(W3, strgrad(0)) > 0) Or (InStr(W3, strgrad(1)) > 0)) Then
        Call ConvertAngleToDecimal(W3)
        End If
        If ((InStr(W4, strgrad(0)) > 0) Or (InStr(W4, strgrad(1)) > 0)) Then
        Call ConvertAngleToDecimal(W4)
        End If
        If ((InStr(W5, strgrad(0)) > 0) Or (InStr(W5, strgrad(1)) > 0)) Then
        Call ConvertAngleToDecimal(W5)
        End If
        If ((InStr(W6, strgrad(0)) > 0) Or (InStr(W6, strgrad(1)) > 0)) Then
        Call ConvertAngleToDecimal(W6)
        End If
        
  If (IsNumeric(W1)) Then
                   
        Select Case digits
        Case 1:
            ProtSheet.Range("B" & AktZeile, "G" & AktZeile).NumberFormat = "0.0"
        Case 2:
            ProtSheet.Range("B" & AktZeile, "G" & AktZeile).NumberFormat = "0.00"
        Case 3:
            ProtSheet.Range("B" & AktZeile, "G" & AktZeile).NumberFormat = "0.000"
        Case 4:
            ProtSheet.Range("B" & AktZeile, "G" & AktZeile).NumberFormat = "0.0000"
        Case 5:
            ProtSheet.Range("B" & AktZeile, "G" & AktZeile).NumberFormat = "0.00000"
        End Select
        ProtSheet.Range("A" & AktZeile) = Trim(Sym)
        ProtSheet.Range("B" & AktZeile) = Val(W1)
        ProtSheet.Range("C" & AktZeile) = Val(W2)
        ProtSheet.Range("D" & AktZeile) = Val(W3)
        ProtSheet.Range("E" & AktZeile) = Val(W4)
        ProtSheet.Range("F" & AktZeile) = Val(W5)
        ProtSheet.Range("G" & AktZeile) = W6
        ProtSheet.Range("M" & AktZeile).Interior.Color = vbBlack
        ProtSheet.Range("S" & AktZeile) = Trim(bez)
        ProtSheet.Range("T" & AktZeile) = Trim(Graf)
        ProtSheet.Range("T" & AktZeile).Font.ColorIndex = 2
 
 '        Stop
        'die graphik in wei|fffd| darstellen, damit sie niemand sieht
        Call ZeichneBalken(AktZeile, 0)
     
     Else
     
        ProtSheet.Range("A" & AktZeile) = Trim(Sym)
        ProtSheet.Range("B" & AktZeile) = Trim(W1)
        ProtSheet.Range("C" & AktZeile) = Trim(W2)
        ProtSheet.Range("D" & AktZeile) = Trim(W3)
        ProtSheet.Range("E" & AktZeile) = Trim(W4)
        ProtSheet.Range("F" & AktZeile) = Trim(W5)
        ProtSheet.Range("G" & AktZeile) = Trim(W6)
        ProtSheet.Range("H" & AktZeile) = Trim(Graf)
        ProtSheet.Range("S" & AktZeile) = Trim(bez)

    
     End If
     
    
    'Gitternetzlinien eingeschaltet
    Tabelle4.Range("B8").Value = Tabelle4.Range("B8").Value + 1
    
    If Tabelle4.Range("B13").Value = 1 Then
        Call DrawGrid(AktZeile, "K")
    End If
    
    RecalcSheet
'   Stop
    'Scrolling eingeschaltet
    If ProtSheet.Visible = True Then
        If (Tabelle4.Range("B17").Value = 1 And Sheets(Protokoll).Select = True) Then
            ProtSheet.Range("A" & AktZeile).Select
        End If
    End If
'    blattprotect
 ProtSheet.Protect Password:="werth"
End Sub

' Funktion wird extern von WinWerth aufgerufen, welches hier einen Kommentar r|fffd|berschiebt. TF 5.10.05
Sub KommentarEinfuegen(Kommentar As String)
    Dim AktZeile As Integer
    Dim pos As Integer
    Dim laenge As Integer
    Dim x As Integer
    Dim pic As Picture
    Dim xpic As Integer
    Dim ypic As Integer
    Dim y As Integer
    Dim fs As Object
    Dim fehlertext As String
      

    
'Stop
'    blattunprotect
If (Tabelle4.Range("C21") = 1) Then
    Application.Visible = False
End If


ProtSheet.Unprotect Password:="werth"
    
Call GetFirstEmptyCell(AktZeile)
'Stop
If InStr(1, UCase(Kommentar), "BITMAP") Then
    If (ActiveSheet.Shapes.Count = ActiveSheet.Pictures.Count) Then
        
        pos = InStr(1, Kommentar, ":")
        laenge = Len(Kommentar)
        bitmap = Mid(Kommentar, pos + 1, laenge - pos - 1)
        
' das folgende mu|fffd| so sein, damit er den file sucht.....01.03.10, cs
        Set fs = CreateObject("Scripting.FileSystemObject")
        If (fs.fileexists(bitmap)) Then
            
             ProtSheet.Range("A" & AktZeile).Select
             Set pic = ActiveSheet.Pictures.Insert(bitmap)               'noch eine
             pic.top = ProtSheet.Range("A" & AktZeile)
             pic.Left = ProtSheet.Range("A" & AktZeile)
             
             xpic = pic.width
             ypic = pic.height
             x = ProtSheet.Range("T" & 100).Left
             y = ypic / xpic * x
             pic.width = x
             pic.height = y
          
                ' zeile 1 anpassen
             x = pic.height
             Rows(AktZeile).Select
             Selection.RowHeight = x
         Else
             fehlertext = Tabelle4.Range(lang_nr & "122").text
             MsgBox fehlertext & " " & bitmap
         End If
    End If
'End If
'    Stop
'If (InStr(1, UCase(Kommentar), "BITMAP") <> 1) Then
Else
    ProtSheet.Range("A" & AktZeile) = Kommentar
  '  End If
    
    ProtSheet.Range("A" & AktZeile, "K" & AktZeile).Font.Size = 8 * 100 / zoomfactor_tables
    ProtSheet.Range("A" & AktZeile, "K" & AktZeile).Font.name = "Courier"
End If
    
Tabelle4.Range("B8").Value = Tabelle4.Range("B8").Value + 1
 
 ProtSheet.Protect Password:="werth"
End Sub

'Datei unter neuem Namen speichern
Sub SaveFileAs(FileName As String)
    Dim fs
    Set fs = CreateObject("Scripting.FileSystemObject")
    If fs.fileexists(FileName) Then
        fs.deletefile (FileName)
    End If
    
    ActiveWorkbook.SaveAs FileName:=FileName
End Sub

'Datei speichern
Sub SaveFile()
    ActiveWorkbook.Save
End Sub

Sub BlattLeeren()
'Stop
ProtSheet.Unprotect Password:="werth"
    ActiveSheet.Shapes.SelectAll
    Selection.Delete
 ActiveSheet.UsedRange.Select
Selection.ClearContents
Range("A1:S19").Select
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
Tabelle4.Range("B8") = 1
Tabelle4.Range("B7") = 0
End Sub

'Wirft die Berechnung des Protokolls an.
Sub LoopEnd()
    blattunprotect
    
    AnzahlLoops = AnzahlLoops + 1
    'Grafiken neu berechnen
    Tabelle1.CalcProtocolIntern
    If ActiveSheet.index = AutoSPC Then     ' AutoSPC neu berechnen
        CalcAutoSPC
    End If
    
    blattprotect
End Sub

Public Sub CloseExcel()
    'Nur wenn WinWerth sagt, dass man zumachen kann, so kann man auch zumachen !!!
    If ActiveSheet.index <> Protokoll Then
        ProtSheet.Visible = True
        ActiveSheet.Visible = False
        ProtSheet.Activate
        ActiveWorkbook.Save
    End If
    
    CloseAllowed = True
End Sub

Public Sub AutomaticModus(AutoOn As Integer)
    Dim cm As Integer
    Dim x As Boolean

    If AutoOn = 0 Then
        'Iconleisten einblenden
        For cm = 3 To Application.CommandBars.Count
            Application.CommandBars(cm).Enabled = True
        Next cm
        'Men|fffd|s aktivieren
        For cm = 1 To Application.CommandBars(1).Controls.Count - 1
            Application.CommandBars(1).Controls.Item(cm).Enabled = True
        Next cm
        For cm = 1 To Application.CommandBars(2).Controls.Count - 1
            Application.CommandBars(2).Controls.Item(cm).Enabled = True
        Next cm

    Else
        ReDim ComBars(Application.CommandBars.Count)
        'Iconleisten Ausblenden
        For cm = 3 To Application.CommandBars.Count
            ComBars(cm) = Application.CommandBars(cm).Enabled
            Application.CommandBars(cm).Enabled = False
        Next cm
        'Men|fffd|s deaktivieren
        For cm = 1 To Application.CommandBars(1).Controls.Count - 1
            Application.CommandBars(1).Controls.Item(cm).Enabled = False
        Next cm
        For cm = 1 To Application.CommandBars(2).Controls.Count - 1
            Application.CommandBars(2).Controls.Item(cm).Enabled = False
        Next cm
    End If
End Sub

Sub ConvertAngleToDecimal(angle As Variant)
'
' routine wird nur ( h|fffd|chstens angesprungen ) bei online. bei offline wird die konvertierung
' im rufenden programm gemacht. bei online wei|fffd| ich es nicht, deshalb bleibt das hier zun|fffd|chst drin, 19.04.10, cs
'
  Dim grad As Integer
  Dim min As Integer
  Dim sec As Integer
  Dim wg As Integer
  Dim wm As Integer
  Dim ws As Integer
  Dim vorzeichen As Integer
  Dim sg As String
  Dim sm As String
  Dim ss As String
  Dim wert As String
  Dim dmin As Double
  Dim dsec As Double
'  Dim angle As Variant
'  angle = "30|fffd|11'14"
  grad = 0
  min = 0
  sec = 0
'Stop
  wg = InStr(angle, strgrad(0))
  sg = Left(angle, wg - 1)

  wm = InStr(angle, strgrad(1))
  If (wm <= 0) Then
  angle = CVar(sg)
  Else
'  If (wm > 0) Then
  sm = Mid(angle, wg + 1, wm - wg - 1)
  ss = Right(angle, Len(angle) - wm)
  ss = Left(ss, Len(ss) - 1)
      grad = sg
      min = sm
      sec = ss

      vorzeichen = 1
      If (grad < 0) Then
          vorzeichen = -1
      End If

      grad = Abs(grad)
      
      dmin = min
      dmin = dmin / 60
      dsec = sec
      dsec = dsec / 3600
      wert = (grad + dmin + dsec) * vorzeichen
      angle = CVar(wert)
      angle = Replace(angle, ",", ".")
      

End If

End Sub

Attribute VB_Name = "Istwerte_Plot"
Option Explicit

Public Bereich, text As String
Public imax As Integer
Public sigma, cp, cpk As Double
Public br_werte, hoe_werte As Integer

Sub SucheMerkmal()
'
' TEST Makro
' Makro am 01.03.2004 von SCHOENE aufgezeichnet
' sucht die tabelle nach einer bestimmten bezeichnung( merkmal)  08.03.04, cs
Dim start, i, i1, x As Integer
Dim schleife As Boolean

'
Sheets("hilfe").Visible = False
Sheets("hilfe").Activate

Bereich = ""
 
Call FindData(i1, 0)

'If i1 > 5 Then
    i1 = i1 - 1
    Bereich = "B" & erstezeile & ":E" & i1
        If Tabelle4.Range("B11").Value = 1 Then
            If i1 > erstezeile + Tabelle4.Range("B10").Value - 1 Then
                Bereich = "B" & i1 + 1 - Tabelle4.Range("B10").Value & ":E" & i1
            End If
        End If
'End If

If i1 - 4 > imax Then
    imax = i1 - 4
End If

faehigkeit (plotindex)

End Sub

Sub ZeichneIst()
'
' zeichnet die graphik der istwerte und toleranzen, 08.03.04, cs
'
Dim pos1 As Integer, pos2 As Integer
Dim k As Integer, signum As Integer
Dim temp As Double, faktor As Double, max As Double, min As Double
Static Hoehe As Integer, Breite As Integer
Dim anz As Integer
Dim min1 As Double, max1 As Double
Dim maxstr As String, minstr As String
Dim HeaderData As String
Dim line As Integer


SucheMerkmal

If Bereich = "" Then
Exit Sub
End If
Call Plotgrenzen(max, min)
If (Sheets("hilfe").Range("D" & erstezeile) > max) Then
    max = Sheets("hilfe").Range("D" & erstezeile)
End If
If (Sheets("hilfe").Range("E" & erstezeile) < min) Then
    min = Sheets("hilfe").Range("E" & erstezeile)
End If

Call ActPlotgrenzen(max, min, max1, min1)

 WerteChart.Unprotect Password:="ralf"
 WerteChart.Select
 Call formatieren
 With ActiveChart
    .SizeWithWindow = True
    .Axes(xlValue).MinimumScale = min1
    .Axes(xlValue).MaximumScale = max1
    .Axes(xlValue).CrossesAt = min1
    .Axes(xlCategory).TickLabelSpacing = Int(StaDa(4, plotindex) / 20) + 1
    .Axes(xlCategory).TickMarkSpacing = Int(StaDa(4, plotindex) / 20) + 1
'    .Axes(xlCategory).AxisBetweenCategories = False
'wegmachen, sonst ist der 1. messpunkt auf der Ordinate, 28.01.09,cs
    .ChartTitle.Characters.text = Tabelle4.Range(lang_nr & "41").text & " " & Merkmal(plotindex)
    
    .SetSourceData Source:=Sheets("hilfe").Range(Bereich), PlotBy:=xlColumns
        .SeriesCollection(1).name = Tabelle4.Range(lang_nr & "44").text
        .SeriesCollection(2).name = Tabelle4.Range(lang_nr & "45").text
        .SeriesCollection(3).name = Tabelle4.Range(lang_nr & "46").text
        .SeriesCollection(4).name = Tabelle4.Range(lang_nr & "47").text
   
    .SeriesCollection(2).Select
    With Selection
        .MarkerForegroundColorIndex = xlAutomatic
        .MarkerStyle = xlX
        .MarkerSize = 4
    End With
    .SeriesCollection(3).Select
     
     With Selection.Border
          .ColorIndex = 45
     End With
     .PlotArea.Select
     With Selection
     pos = .top
     End With
    .Legend.Select
    If (Tabelle1.neu_werte) Then
    Tabelle1.neu_werte = False
    End If
     
     .Shapes(1).Select
        Selection.Characters.text = ""
        Selection.Characters.text = Tabelle4.Range(lang_nr & "66").text + " = " + CStr(sigma) _
                                    + Chr(10) + Tabelle4.Range(lang_nr & "70").text + _
                                    " = " + CStr(cp) + Chr(10) + Tabelle4.Range(lang_nr & "71").text _
                                    + " = " + CStr(cpk) + Chr(10) + text
    .Deselect
 '   Stop
 
 line = 110
 HeaderData = ""
 While (Not IsEmpty(Tabelle4.Range("B" & line)))
 HeaderData = HeaderData & Tabelle4.Range(lang_nr & line).text + " " + Tabelle4.Range("C" & line).text + Chr(10)
line = line + 1
Wend
    .Shapes(2).Select
        Selection.Characters.text = ""
        Selection.Characters.text = HeaderData
    .Deselect
    .Protect Password:="ralf"
    
   End With
 '  br_werte = Breite
 '  hoe_werte = Hoehe

End Sub

Sub faehigkeit(f_index)

sigma = StaDa(9, f_index)
cp = StaDa(6, f_index)
cpk = StaDa(7, f_index)
If ((cp < cpref) Or (cpk < 1#)) And (cpk < cp) Then
   text = Tabelle4.Range(lang_nr & "68").text
End If
If (cp >= cpref) And (cpk >= 1#) And (cpk <= cpref) And (cpk < cp) Then
   text = Tabelle4.Range(lang_nr & "69").text
End If
If (cp >= cpref) And (cpk >= cpref) And (cpk <= cp) Then
   text = Tabelle4.Range(lang_nr & "67").text
End If
If (cpk > cp) Then
   text = Tabelle4.Range(lang_nr & "68").text
  End If

End Sub
Attribute VB_Name = "Klassen_Plot"
Option Explicit
Public AnzahlZeilen As Integer
Dim bereich1 As String

Sub ZeichneKlassen(index)
'
Dim AnzahlKlassen, anzahlwerte, i1 As Integer
Dim Klassenbreite, maxwert As Double
Dim min_x, max_x As Double
Dim plot_left, plot_width, pos As Integer
Static Breite, Hoehe As Integer
Dim HeaderData As String
Dim line As Integer

If StaDa(4, index) < 25 Then
        text = Tabelle4.Range(lang_nr & "90").text + " " + Merkmal(index)
    MsgBox (text)
    Exit Sub
End If

Sheets("hilfe").Visible = False
Sheets("hilfe").Activate

Bereich = ""
bereich1 = ""
clear_cells
Call faehigkeit(index)
Call FindData(i1, 0)
Call BerechneKlassen(AnzahlKlassen, Klassenbreite, index)
Call Klassenwerte(AnzahlKlassen, Klassenbreite, anzahlwerte)
Call Grenzen(anzahlwerte, index)
Call Verteilungsfunktion(index, i1, maxwert)
Call Zusammenfuehren(maxwert, index)

If Bereich = "" Then
Exit Sub
End If
 
min_x = Round(Sheets("hilfe").Range("G" & erstezeile), 2) - 0.01
max_x = Round(Sheets("hilfe").Range("G" & AnzahlZeilen), 2) + 0.01
 Call formatieren
 VertChart.Select

 With ActiveChart
    .SizeWithWindow = True
    .Axes(xlCategory).MinimumScale = min_x
    .Axes(xlCategory).MaximumScale = max_x
    .Axes(xlCategory).CrossesAt = min_x
   
    .ChartTitle.Characters.text = Tabelle4.Range(lang_nr & "56").text & " " & Merkmal(plotindex)
    .SetSourceData Source:=Sheets("hilfe").Range(Bereich), PlotBy:=xlColumns
        .SeriesCollection(1).name = Tabelle4.Range(lang_nr & "59").text
        .SeriesCollection(2).name = Tabelle4.Range(lang_nr & "57").text
        .SeriesCollection(3).name = Tabelle4.Range(lang_nr & "60").text
        .SeriesCollection(4).name = Tabelle4.Range(lang_nr & "61").text
        .SeriesCollection(5).name = Tabelle4.Range(lang_nr & "63").text
    .SeriesCollection(6).name = "=""- 3s"""
    .SeriesCollection(7).name = "=""+ 3s"""
        .SeriesCollection(8).name = Tabelle4.Range(lang_nr & "62").text
    .Legend.Select
    If (Tabelle1.neu_vert) Then
    Tabelle1.neu_vert = False
    End If
    
    ActiveChart.Shapes(1).Select
    Selection.Characters.text = ""
    Selection.Characters.text = Tabelle4.Range(lang_nr & "66").text + " = " + CStr(sigma) + Chr(10) _
                                + Tabelle4.Range(lang_nr & "70").text + " = " + CStr(cp) _
                                + Chr(10) + Tabelle4.Range(lang_nr & "71").text + _
                                " = " + CStr(cpk) + Chr(10) + text
   
    .Deselect
 line = 110
 HeaderData = ""
 While (Not IsEmpty(Tabelle4.Range("B" & line)))
 HeaderData = HeaderData & Tabelle4.Range(lang_nr & line).text + " " + Tabelle4.Range("C" & line).text + Chr(10)
line = line + 1
Wend
    .Shapes(2).Select
        Selection.Characters.text = ""
        Selection.Characters.text = HeaderData
    .Deselect
    .Protect Password:="ralf"
   End With
 
    
'
End Sub



Sub BerechneKlassen(AnzahlKlassen, Klassenbreite, index)
'
If StaDa(4, index) > 150 Then
   AnzahlKlassen = 30
Else
   AnzahlKlassen = Int(StaDa(4, index) / 5)
End If
If AnzahlKlassen < 3 Then AnzahlKlassen = 3

Klassenbreite = StaDa(3, index) / (AnzahlKlassen - 2)
'
End Sub

Sub Klassenwerte(AnzahlKlassen, Klassenbreite, anzwerte)
'
Dim i, j, i1 As Integer
Dim maxwert, wert() As Double
Dim KlassenFaktor As Double
Dim schleife As Boolean

ReDim wert(AnzahlKlassen - 1)
For i = 0 To AnzahlKlassen - 1
    wert(i) = 0
Next i

i = erstezeile
schleife = True
Do While schleife
    If Not IsEmpty(Sheets("hilfe").Range("B" & i)) Then
        If Sheets("hilfe").Range("B" & i) < Sheets("hilfe").Range("E" & i) Then
        'hier ist "AD" und "AE" wohl nicht!!!! der ogw und ugw   18.01.07, cs
            wert(0) = wert(0) + Abs(Sheets("hilfe").Range("B" & i))
        Else
            If Abs(Sheets("hilfe").Range("B" & i)) > Sheets("hilfe").Range("D" & i) Then
                wert(AnzahlKlassen - 1) = wert(AnzahlKlassen - 1) + Abs(Sheets("hilfe").Range("B" & i))
            Else
                For j = 1 To AnzahlKlassen - 2
                     If ((Sheets("hilfe").Range("B" & i) >= Sheets("hilfe").Range("E" & i) + (j - 1) * Klassenbreite) And _
                        (Sheets("hilfe").Range("B" & i) < Sheets("hilfe").Range("E" & i) + j * Klassenbreite)) Then
                       wert(j) = wert(j) + Abs(Sheets("hilfe").Range("B" & i))
                    End If
                Next j
            End If
        End If
    Else
        schleife = False
    End If
    i = i + 1
 Loop
 
maxwert = wert(0)
For i = 1 To AnzahlKlassen - 1
    If maxwert < wert(i) Then
        maxwert = wert(i)
    End If
Next i
    
KlassenFaktor = 1   ' ist das so richtig?? noch testen!!!

If maxwert <> 0 Then
    KlassenFaktor = 100 / maxwert
End If
    Sheets("hilfe").Range("G" & erstezeile) = Sheets("hilfe").Range("E" & erstezeile) - Klassenbreite
    Sheets("hilfe").Range("G" & erstezeile + 1) = Sheets("hilfe").Range("G" & erstezeile)
    Sheets("hilfe").Range("G" & erstezeile + 2) = Sheets("hilfe").Range("G" & erstezeile + 1) + Klassenbreite
If (wert(0) > 0) Then
    Sheets("hilfe").Range("H" & erstezeile) = 0
    Sheets("hilfe").Range("H" & erstezeile + 1) = wert(0) * KlassenFaktor
    Sheets("hilfe").Range("H" & erstezeile + 2) = wert(0) * KlassenFaktor
End If

i1 = 1
For i = erstezeile + 2 To 2 * (AnzahlKlassen - 1) + erstezeile Step 2
        Sheets("hilfe").Range("G" & i + 1) = Sheets("hilfe").Range("G" & i)
        Sheets("hilfe").Range("G" & i + 2) = Sheets("hilfe").Range("G" & i + 1) + Klassenbreite
    If (i1 < AnzahlKlassen Or wert(i1) > 0) Then
        Sheets("hilfe").Range("H" & i + 1) = wert(i1) * KlassenFaktor
        Sheets("hilfe").Range("H" & i + 2) = wert(i1) * KlassenFaktor
    End If
    i1 = i1 + 1
Next i
Sheets("hilfe").Range("G" & i + 1) = Sheets("hilfe").Range("G" & i)
Sheets("hilfe").Range("H" & i + 1) = 0
i1 = erstezeile + 1 + 2 * AnzahlKlassen
anzwerte = i1                       'letzte zeile f|fffd|r klassen
End Sub

Sub Verteilungsfunktion(index, i1, maxwert)  ' i1 ist wahrscheinlich unn|fffd|tig

Dim Verteilung(), Istwert(), Istw() As Double
Dim minwert, minwert1 As Double

Dim ind, i, j As Integer


ReDim Verteilung(StaDa(4, index) - 1)
ReDim Istwert(StaDa(4, index) - 1)
ReDim Istw(StaDa(4, index) - 1)
i1 = erstezeile
maxwert = StaDa(4, index) + erstezeile - 1
For i = erstezeile To StaDa(4, index) + erstezeile - 1
        
    Istw(i1 - erstezeile) = Sheets("hilfe").Range("A" & i)
    Istwert(i1 - erstezeile) = Sheets("hilfe").Range("B" & i)
    If i > erstezeile Then
        For j = erstezeile To i1 - 1
            If Istw(i1 - erstezeile) = Istw(j - erstezeile) Then
                j = i1 - 1
                i1 = i1 - 1
                maxwert = maxwert - 1
            End If
        Next j
    End If
    Verteilung(i1 - erstezeile) = 0
           If StaDa(9, index) <> 0 Then
               Verteilung(i1 - erstezeile) = 100 * Exp(-(Istw(i1 - erstezeile) - StaDa(1, index)) ^ 2 / (2 * StaDa(9, index) ^ 2))
     Sheets("hilfe").Range("F" & i1) = Verteilung(i1 - erstezeile)
          End If
    i1 = i1 + 1
Next i

i1 = erstezeile
For i = erstezeile To maxwert
    minwert = Istwert(i - erstezeile)
    For j = i + 1 To maxwert
        If Istwert(j - erstezeile) < minwert Then
            minwert = Istwert(j - erstezeile)
            Istwert(j - erstezeile) = Istwert(i - erstezeile)
            Istwert(i - erstezeile) = minwert
            minwert1 = Verteilung(j - erstezeile)
            Verteilung(j - erstezeile) = Verteilung(i - erstezeile)
            Verteilung(i - erstezeile) = minwert1
            minwert1 = Istw(j - erstezeile)
            Istw(j - erstezeile) = Istw(i - erstezeile)
            Istw(i - erstezeile) = minwert1
           ind = j - erstezeile
        End If
    Next j
    Sheets("hilfe").Range("A" & i1) = Istw(i - erstezeile)
    Sheets("hilfe").Range("B" & i1) = Istwert(i - erstezeile)
    Sheets("hilfe").Range("F" & i1) = Verteilung(i - erstezeile)
    i1 = i1 + 1
Next i

If i1 > 1 Then
    i1 = i1 - 1
End If

End Sub


Sub Zusammenfuehren(maxwert, index)
Dim xWert, Vert, minwert As Double
Dim i, imax, i1, i_eins, j As Integer

i = erstezeile
While Not IsEmpty(Sheets("hilfe").Range("G" & i))
    i = i + 1
Wend
 imax = i
 i = erstezeile
 i1 = imax
Sheets("hilfe").Range("B" & i, "B" & maxwert).Copy Destination:=Sheets("hilfe").Range("G" & i1)
Sheets("hilfe").Range("F" & i, "F" & maxwert).Copy Destination:=Sheets("hilfe").Range("I" & i1)

' jetzt mu|fffd| sortiert werden, daten liegen zwischen erstezeile und i1, einschliesslich
i1 = maxwert + imax - erstezeile
For i = erstezeile To i1
If (Sheets("hilfe").Range("G" & i) <> minwert) Then
    minwert = Sheets("hilfe").Range("G" & i)
    i_eins = i
    While (Sheets("hilfe").Range("G" & i + 1) = minwert)
        i = i + 1
    Wend
    For j = i + 1 To i1
        If Sheets("hilfe").Range("G" & j) <= minwert Then
            Sheets("hilfe").Rows(j).Cut
            Sheets("hilfe").Rows(i_eins).Insert
            Application.CutCopyMode = False
            If Sheets("hilfe").Range("G" & i_eins) = minwert Then
                i = i + 1
            Else
                i = i_eins
                minwert = Sheets("hilfe").Range("G" & i)
           End If
        End If
    Next j
    End If
Next i

' leere felder f|fffd|r die klassen auff|fffd|llen
For i = erstezeile To i1
 If IsEmpty(Sheets("hilfe").Range("H" & i)) Then
    If (i = 1) Then
        Sheets("hilfe").Range("H" & i) = 0
    Else
        If Not (IsEmpty(Sheets("hilfe").Range("H" & i - 1))) Then
            Sheets("hilfe").Range("H" & i) = Sheets("hilfe").Range("H" & i - 1)
        End If
    End If
End If
 
 ' leere Felder f|fffd|r die Verteilung auff|fffd|llen
 ' achtung: hier mu|fffd| man mit den vorzeichen von soll und ist vorsichtig sein
 
 If IsEmpty(Sheets("hilfe").Range("I" & i)) Then
 Vert = 0
    If StaDa(9, index) <> 0 Then

        Vert = 100 * Exp(-(Sheets("hilfe").Range("G" & i) - StaDa(1, index)) ^ 2 / (2 * StaDa(9, index) ^ 2))
        If (Vert = 0) Then
            xWert = -Sheets("hilfe").Range("G" & i)  ' wegen vorzeichen von soll und ist
            Vert = 100 * Exp(-(xWert - StaDa(1, index)) ^ 2 / (2 * StaDa(9, index) ^ 2))
        End If
        If (Vert >= 1) Then
            Sheets("hilfe").Range("I" & i) = Vert
        End If
    End If
 End If
Next i
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'For i = erstezeile To i1
' If IsEmpty(Sheets("hilfe").Range("H" & i)) Then
'    If (i = 1) Then
'        Sheets("hilfe").Range("H" & i) = 0
'    Else
'        If Not (IsEmpty(Sheets("hilfe").Range("H" & i - 1))) Then
'            Sheets("hilfe").Range("H" & i) = Sheets("hilfe").Range("H" & i - 1)
'        End If
'    End If
'End If
'Wert = -1
'If Not (IsEmpty(Sheets("hilfe").Range("H" & i))) Then
'Wert = Sheets("hilfe").Range("H" & i)
'End If

' If (Wert = -1) Then
'    If (i = 1) Then
'        Sheets("hilfe").Range("H1") = 0
'    Else
'            Sheets("hilfe").Range("H" & i) = oldwert
'            Wert = oldwert
'    End If
' End If
'     oldwert = Wert
'     If (Wert = -1) Then
'     oldwert = 0
'     End If
 
 ' leere Felder f|fffd|r die Verteilung auff|fffd|llen
 ' achtung: hier mu|fffd| man mit den vorzeichen von soll und ist vorsichtig sein
 
' If IsEmpty(Sheets("hilfe").Range("I" & i)) Then
' Vert = 0
' Wert = Sheets("hilfe").Range("G" & i)
'    If StaDa(9, index) <> 0 Then

'        Vert = 100 * Exp(-(Wert - StaDa(1, index)) ^ 2 / (2 * StaDa(9, index) ^ 2))
'        If (Vert = 0) Then
'            xWert = -Sheets("hilfe").Range("G" & i)  ' wegen vorzeichen von soll und ist
'            Vert = 100 * Exp(-(-Wert - StaDa(1, index)) ^ 2 / (2 * StaDa(9, index) ^ 2))
'        End If
'        If (Vert >= 1) Then
'            Sheets("hilfe").Range("I" & i) = Vert
'        End If
'    End If
' End If
'Next i
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
Bereich = "G" & erstezeile & ":G" & i1 & "," & "H" & erstezeile & ":H" & i1 & "," & _
          "I" & erstezeile & ":I" & i1 & "," & "J" & erstezeile & ":J" & i1 & "," & _
          "K" & erstezeile & ":K" & i1 & "," & "L" & erstezeile & ":L" & i1 & "," & _
          "M" & erstezeile & ":M" & i1 & "," & "N" & erstezeile & ":N" & i1 & "," & _
          "O" & erstezeile & ":O" & i1
imax = i1
AnzahlZeilen = i1
VertChart.Select
End Sub

Sub Grenzen(anzwerte, index)

Dim i As Integer
Dim mittelwert As Double

i = anzwerte + 1
' otol
Sheets("hilfe").Range("G" & i) = Sheets("hilfe").Range("D" & erstezeile)
Sheets("hilfe").Range("J" & i) = 0
Sheets("hilfe").Range("G" & i + 1) = Sheets("hilfe").Range("D" & erstezeile)
Sheets("hilfe").Range("J" & i + 1) = 105
' utol
Sheets("hilfe").Range("G" & i + 2) = Sheets("hilfe").Range("E" & erstezeile)
Sheets("hilfe").Range("K" & i + 2) = 0
Sheets("hilfe").Range("G" & i + 3) = Sheets("hilfe").Range("E" & erstezeile)
Sheets("hilfe").Range("K" & i + 3) = 105
' mittelwert
mittelwert = StaDa(1, index)
If (StaDa(12, index) >= 0 And StaDa(13, index) >= 0 And StaDa(13, index) >= 0) Then
    mittelwert = Abs(mittelwert)
End If
Sheets("hilfe").Range("G" & i + 4) = mittelwert
Sheets("hilfe").Range("L" & i + 4) = 0
Sheets("hilfe").Range("G" & i + 5) = mittelwert
Sheets("hilfe").Range("L" & i + 5) = 105
' -3s
Sheets("hilfe").Range("G" & i + 6) = mittelwert - 3 * sigma
Sheets("hilfe").Range("M" & i + 6) = 0
Sheets("hilfe").Range("G" & i + 7) = mittelwert - 3 * sigma
Sheets("hilfe").Range("M" & i + 7) = 105
' +3s
Sheets("hilfe").Range("G" & i + 8) = mittelwert + 3 * sigma
Sheets("hilfe").Range("N" & i + 8) = 0
Sheets("hilfe").Range("G" & i + 9) = mittelwert + 3 * sigma
Sheets("hilfe").Range("N" & i + 9) = 105
' tolbandmitte
Sheets("hilfe").Range("G" & i + 10) = StaDa(2, index)
Sheets("hilfe").Range("O" & i + 10) = 0
Sheets("hilfe").Range("G" & i + 11) = StaDa(2, index)
Sheets("hilfe").Range("O" & i + 11) = 105

End Sub
Attribute VB_Name = "Merkmale_Finden"
Option Explicit
Public laenge, index_alt, anzahlwerte As Integer
Public anzahlmerkmale As Integer
Public startzeile, erstezeile, endzeile As Integer
Public AnzahlLoops As Integer
Public StaDa() As Variant
Public StadaMax As Integer
Public Merkmal() As String
Public zeile As String
Public No_of_bitmaps, anz_pos_max As Integer

'StaDa(0,) = merkmal
'StaDa(1,) = aufsummierte messwerte, nachher mittelwert
'StaDa(2,) = tolmitte
'StaDa(3,) = tolbreite
'StaDa(4,) = anzahlmesswerte
'StaDa(5,) = summe(messwerte**2)
'StaDa(6,) = cp
'StaDa(7,) = cpk, cmk
'StaDa(8,) = sym
'StaDa(9,) = sigma
'StaDa(10,) = minwert ist
'Stada(11,) = maxwert ist
'stada(12,) = sollwert
'stada(13,) = ogw
'stada(14,) = ugw
'stada(15,) = cpo, cmo
'stada(16,) = cpu, cmu

' cp gibt an, wieviele der messwerte inerhalb von +-3sigma liegen, also innerhalb der verteilung
' cpk gibt die lage er mittelwertes zur mitte der verteilung an

Sub ZeigeMerkmale()
'
' sortiert die merkmale, 08.03.04, cs
' wird ben|fffd|tigt, um im dialog die merkmale anzuzeigen
'
Dim mw, i, k, x, i_ende As Integer
Dim found, schleife, wrong_comment As Boolean
Dim pic As Picture



Dim anz_pos, laenge, pos As Integer
Dim datastr As String, l As String
Dim i100 As Integer
'
' index_alt, damit nicht unn|fffd|tigerweise die tabellenpl|fffd|tze neu belegt werden m|fffd|ssen, 08.06.04, cs
index_alt = -1
anzahlmerkmale = 0
Tabelle1.Unprotect Password:="werth"
'Stop
ProtSheet.Select
If anzahlmerkmale = 0 Then
' merkmale nur beim allerersten mal belegen, sonst gibt es durcheinander, 10.05.04, cs
anzahlwerte = 0
schleife = True
i = 1
If IsEmpty(ProtSheet.Range("A1")) Then
i = 2
    End If

startzeile = -1
'Stop
If Tabelle4.Range("B21") = 0 Then
        'Kopf |fffd|berspringen
        GetHeaderEnd i, l
        startzeile = i
        schleife = True
'        Stop
        ReDim StaDa(16, 0), Merkmal(0)
            
        wrong_comment = False
        If (IsNumeric(ProtSheet.Range("b" & i)) = False) Or (IsNumeric(ProtSheet.Range("c" & i)) = False) Or _
                   (IsNumeric(ProtSheet.Range("d" & i)) = False) Or (IsNumeric(ProtSheet.Range("e" & i)) = False) Or _
                   (IsNumeric(ProtSheet.Range("f" & i)) = False) Then
            i = i + 1
  Stop
            startzeile = i
            wrong_comment = True
        End If
            
        'Kommentare am Seitenanfang |fffd|berlesen!
        While Left(ProtSheet.Range("A" & i), 1) = "#"
            i = i + 1
            startzeile = i
        Wend
'        Stop
        ReDim StaDa(16, 0), Merkmal(0)
        Merkmal(0) = ProtSheet.Range("s" & i)
'        Stop
        StaDa(12, 0) = ProtSheet.Range("C" & i)
        StaDa(13, 0) = StaDa(12, 0) + ProtSheet.Range("D" & i)
        StaDa(14, 0) = StaDa(12, 0) + ProtSheet.Range("E" & i)
        statistik
        'Stop
        InsertMerkmaleInMenue
        Exit Sub
End If
'Stop
Do While schleife
 If IsEmpty(ProtSheet.Range("A" & i)) Then
    schleife = False
    Exit Do
    
    End If
    On Error Resume Next

    zeile = ProtSheet.Range("A" & i)
    If InStr(1, UCase(zeile), "BITMAP") Then
'        If (ActiveSheet.Shapes.Count = ActiveSheet.Pictures.Count) Then

'            pos = InStr(1, zeile, ":")
'            laenge = Len(zeile)
'            bitmap = Mid(zeile, pos + 1, laenge - pos - 1)
'            ProtSheet.Range("A" & i).Select
'            Set pic = ActiveSheet.Pictures.Insert(bitmap)               'noch eine
'            pic.CopyPicture xlScreen
'            x = pic.height
'            Rows(i).Select
'            Selection.RowHeight = x
'            x = ProtSheet.Range("L" & 100).Left
'            pic.width = x
'        End If
        ProtSheet.Range("A" & i).Select
    Else
'    Stop
'kopfzeilen o.|fffd|., 07.09.04, cs
        If InStr(1, Left(zeile, 1), "#") Or InStr(1, Left(zeile, 1), "+") Or InStr(1, Left(zeile, 1), "-") Or _
        InStr(1, Left(zeile, 1), "|") Or _
        InStr(1, zeile, "--------") Or InStr(1, Left(zeile, 1), " ") Then
        
        Else
        If (IsNumeric(ProtSheet.Range("b" & i)) = True) And (IsNumeric(ProtSheet.Range("c" & i)) = True) And _
                   (IsNumeric(ProtSheet.Range("d" & i)) = True) And (IsNumeric(ProtSheet.Range("e" & i)) = True) And _
                   (IsNumeric(ProtSheet.Range("f" & i)) = True) Then
              If startzeile = -1 Then
                    startzeile = i
                    Tabelle4.Range("B7") = startzeile
                    Tabelle4.Range("D7") = startzeile - 1
                 ProtSheet.Range("A" & i).Select
                 schleife = False
                End If
            Else
                ProtSheet.Range("A" & i).Select
            End If
        End If
     End If
     i = i + 1
Loop
schleife = True
'Stop
ReDim StaDa(16, 0), Merkmal(0)          ', Palette(4, 0)
i = startzeile
wrong_comment = False
End If
datastr = Str(ProtSheet.Range("B" & i))
pos = InStr(datastr, ".")
laenge = Len(datastr)
anz_pos_max = laenge - pos
If (anz_pos_max > Tabelle4.Range("B23")) Then
    anz_pos_max = Tabelle4.Range("B23")
End If
'Stop
Merkmal(0) = CStr(ProtSheet.Range("s" & i))
StaDa(12, 0) = ProtSheet.Range("C" & i)
StaDa(13, 0) = StaDa(12, 0) + ProtSheet.Range("D" & i)
StaDa(14, 0) = StaDa(12, 0) + ProtSheet.Range("E" & i)
anzahlmerkmale = 1
laenge = Len(Range("K" & i))
Do While schleife
'zun|fffd|chst kontrollieren, ob 'falsche' kommentarzeilen drin sind, 08.07.05, cs
If (IsNumeric(ProtSheet.Range("b" & i)) = False) Or (IsNumeric(ProtSheet.Range("c" & i)) = False) Or _
   (IsNumeric(ProtSheet.Range("d" & i)) = False) Or (IsNumeric(ProtSheet.Range("e" & i)) = False) Or _
   (IsNumeric(ProtSheet.Range("f" & i)) = False) Then
   i = i + 1
Else

     If (ProtSheet.Range("A" & i) = "") Then
        schleife = False
    Else
        If ((Not IsEmpty(ProtSheet.Range("A" & i)) And IsEmpty(ProtSheet.Range("C" & i))) _
        Or (ProtSheet.Range("A" & i) = "SYM")) Then
           i = i + 1
        Else
   found = False
    For k = 0 To anzahlmerkmale - 1
        If ProtSheet.Range("s" & i) = Merkmal(k) Then
            anzahlwerte = anzahlwerte + 1
            k = anzahlmerkmale - 1
            found = True
        Else
            If (found = False And k = anzahlmerkmale - 1) Then
                ReDim Preserve Merkmal(anzahlmerkmale)
                Merkmal(anzahlmerkmale) = CStr(ProtSheet.Range("s" & i))
'Stop
                If laenge < Len(StaDa(0, anzahlmerkmale)) Then
                    laenge = Len(StaDa(0, anzahlmerkmale))
                End If
                anzahlmerkmale = anzahlmerkmale + 1
                k = anzahlmerkmale - 1
                anzahlwerte = anzahlwerte + 1
            End If
        End If
    Next k
    i = i + 1
    End If
    End If
    End If
Loop
statistik
'Stop
    InsertMerkmaleInMenue
Tabelle1.Protect Password:="werth"

End Sub


Sub ZeichneBalken(zeile As Integer, change As Integer)
'End Sub
'Sub xxx()

Dim i, Actwert, Farbe As Integer
Dim Hoehe, ActLinks, Links, Rechts, Breite, Oben, Unten, ActOben As Long
Dim Abw As String
Dim Balkenbreite As Double, Mitte As Double, DAbw As Double
Dim Zellen As String
Dim Colour1 As Long
Dim Colour2 As Long
Dim Colour3 As Long


Dim TolRange, Diff, oTol As Double
Dim uTol As Double
On Error Resume Next

'Stop
If (zeile = -1) Then
    i = startzeile
    Actwert = 1
Else
    i = zeile
    Actwert = anzahlwerte
End If

oTol = ProtSheet.Range("D" & i)
uTol = ProtSheet.Range("E" & i)
Diff = ProtSheet.Range("F" & i)
TolRange = oTol - uTol
Abw = ProtSheet.Range("T" & i)
If ((change = 1) Or (InStr(Abw, ","))) Then          'bei nachtr|fffd|glichen |fffd|nderungen, wenn schon balken da sind
    Select Case Diff
    Case Is < uTol
        Abw = "<<<<"
    Case uTol To uTol + TolRange / 8
        Abw = "----"
    Case uTol + TolRange / 8 To uTol + 2 * TolRange / 8
        Abw = "---"
    Case uTol + 2 * TolRange / 8 To uTol + 3 * TolRange / 8
        Abw = "--"
    Case uTol + 3 * TolRange / 8 To uTol + 4 * TolRange / 8
        Abw = "-"
    Case uTol + 4 * TolRange / 8 To uTol + 5 * TolRange / 8
        Abw = "+"
    Case uTol + 5 * TolRange / 8 To uTol + 6 * TolRange / 8
        Abw = "++"
    Case uTol + 6 * TolRange / 8 To uTol + 7 * TolRange / 8
        Abw = "+++"
    Case uTol + 7 * TolRange / 8 To uTol + TolRange
        Abw = "++++"
    Case Is > oTol
        Abw = ">>>>"
    End Select
    ProtSheet.Range("T" & i) = Abw
    ProtSheet.Range("H" & zeile & ":L" & zeile).Interior.ColorIndex = xlColorIndexNone
    ProtSheet.Range("N" & zeile & ":R" & zeile).Interior.ColorIndex = xlColorIndexNone
End If

' bestimmung von gr|fffd||fffd|e und lage der balken, 19.07.04, cs
While Actwert <= anzahlwerte

    Abw = ProtSheet.Range("T" & i)
'    DAbw = 99999
    Colour1 = Tabelle4.Range("B32")
    Colour2 = Tabelle4.Range("B33")
    Colour3 = Tabelle4.Range("B34")
    
'Stop
    Select Case Abw
    Case Is = "<<<<"
        Zellen = "H" & zeile & ":L" & zeile
        Call Farben("H" & zeile & ":L" & zeile, Colour3)
    Case Is = "----"
        Zellen = "I" & zeile & ":L" & zeile
        Call Farben("I" & zeile & ":L" & zeile, Colour2)
    Case Is = "---"
        Zellen = "J" & zeile & ":L" & zeile
        Call Farben("J" & zeile & ":L" & zeile, Colour1)
    Case Is = "--"
        Zellen = "K" & zeile & ":L" & zeile
        Call Farben("K" & zeile & ":L" & zeile, Colour1)
    Case Is = "-"
        Zellen = "L" & zeile & ":L" & zeile
        Call Farben("L" & zeile & ":L" & zeile, Colour1)
    Case Is = "+"
        Zellen = "N" & zeile & ":N" & zeile
        Call Farben("N" & zeile & ":N" & zeile, Colour1)
    Case Is = "++"
        Zellen = "N" & zeile & ":O" & zeile
        Call Farben("N" & zeile & ":O" & zeile, Colour1)
    Case Is = "+++"
        Zellen = "N" & zeile & ":P" & zeile
        Call Farben("N" & zeile & ":P" & zeile, Colour1)
    Case Is = "++++"
        Zellen = "N" & zeile & ":Q" & zeile
        Call Farben("N" & zeile & ":Q" & zeile, Colour1)
    Case Is = ">>>>"
        Zellen = "N" & zeile & ":R" & zeile
        Call Farben("N" & zeile & ":R" & zeile, Colour3)
    End Select
    Range("N" & zeile).Borders(xlEdgeLeft).LineStyle = xlNone
    Range("N" & zeile).Borders(xlEdgeLeft).Weight = xlMedium

    ActOben = ActOben + Hoehe
    i = i + 1
    Actwert = Actwert + 1
    If (Actwert <= anzahlwerte) Then
    Do While (IsEmpty(ProtSheet.Range("C" & i)) Or ProtSheet.Range("A" & i) = "SYM")
        i = i + 1
        ActOben = ActOben + Hoehe
    Loop
    End If
    
    
    Wend
 End Sub
 
 Sub statistik()
 
  Dim i, k, anz_pos As Integer
 Dim schleife, found, wrong_comment As Boolean
 Dim datastr As String
 Dim vorz As Integer
' Stop
On Error Resume Next
 i = startzeile
StaDa(0, 0) = Merkmal(0)
StaDa(1, 0) = 0
StaDa(2, 0) = ProtSheet.Range("C" & i) + (ProtSheet.Range("D" & i) + ProtSheet.Range("E" & i)) / 2
StaDa(3, 0) = Abs(ProtSheet.Range("D" & i) - ProtSheet.Range("E" & i))
StaDa(4, 0) = 0
StaDa(5, 0) = 0
StaDa(8, 0) = ProtSheet.Range("A" & i)
StaDa(10, 0) = ProtSheet.Range("B" & i)
StaDa(11, 0) = ProtSheet.Range("B" & i)
'Stop
anzahlmerkmale = 1

schleife = True

Do While schleife
If (IsNumeric(ProtSheet.Range("b" & i)) = False) Or (IsNumeric(ProtSheet.Range("c" & i)) = False) Or _
   (IsNumeric(ProtSheet.Range("d" & i)) = False) Or (IsNumeric(ProtSheet.Range("e" & i)) = False) Or _
   (IsNumeric(ProtSheet.Range("f" & i)) = False) Then
   i = i + 1
Else

     If (ProtSheet.Range("A" & i) = "") Then
        schleife = False
    Else
        If ((Not IsEmpty(ProtSheet.Range("A" & i)) And IsEmpty(ProtSheet.Range("C" & i))) _
        Or (ProtSheet.Range("A" & i) = "SYM")) Then
            i = i + 1
       
        Else
   found = False
    For k = 0 To anzahlmerkmale - 1
  '  Stop
        If (ProtSheet.Range("S" & i) = StaDa(0, k)) Then
            StaDa(1, k) = StaDa(1, k) + ProtSheet.Range("b" & i)
            StaDa(4, k) = StaDa(4, k) + 1
            StaDa(5, k) = StaDa(5, k) + ProtSheet.Range("b" & i) ^ 2
            If ProtSheet.Range("B" & i) < StaDa(10, k) Then
                StaDa(10, k) = ProtSheet.Range("b" & i)
            End If
            If ProtSheet.Range("B" & i) > StaDa(11, k) Then
                StaDa(11, k) = ProtSheet.Range("b" & i)
            End If
 ' zum nachkommastellen festlegen
            datastr = Str(StaDa(10, k))
            pos = InStr(datastr, ".")
            laenge = Len(datastr)
            anz_pos = laenge - pos
            If (anz_pos > anz_pos_max) Then
                anz_pos_max = anz_pos
                If (anz_pos_max > Tabelle4.Range("B23")) Then
                anz_pos_max = Tabelle4.Range("B23")
                End If
            End If
            k = anzahlmerkmale - 1
            found = True
        Else
            If (found = False And k = anzahlmerkmale - 1) Then
            
 '           Stop  'merkmale f|fffd|llen
                ReDim Preserve StaDa(16, anzahlmerkmale), Merkmal(anzahlmerkmale)
                StaDa(0, anzahlmerkmale) = ProtSheet.Range("s" & i)
                StaDa(1, anzahlmerkmale) = ProtSheet.Range("B" & i)
                StaDa(2, anzahlmerkmale) = ProtSheet.Range("C" & i) + (ProtSheet.Range("D" & i) _
                                           + ProtSheet.Range("E" & i)) / 2
                StaDa(3, anzahlmerkmale) = Abs(ProtSheet.Range("D" & i) - ProtSheet.Range("E" & i))
                StaDa(4, anzahlmerkmale) = 1
                StaDa(5, anzahlmerkmale) = ProtSheet.Range("B" & i) ^ 2
                StaDa(8, anzahlmerkmale) = ProtSheet.Range("A" & i)
                StaDa(10, anzahlmerkmale) = ProtSheet.Range("B" & i)
                StaDa(11, anzahlmerkmale) = ProtSheet.Range("B" & i)
                Merkmal(anzahlmerkmale) = CStr(ProtSheet.Range("s" & i))
                StaDa(12, anzahlmerkmale) = ProtSheet.Range("C" & i)
                StaDa(13, anzahlmerkmale) = StaDa(12, anzahlmerkmale) + ProtSheet.Range("D" & i)
                StaDa(14, anzahlmerkmale) = StaDa(12, anzahlmerkmale) + ProtSheet.Range("E" & i)

                If laenge < Len(StaDa(0, anzahlmerkmale)) Then
                    laenge = Len(StaDa(0, anzahlmerkmale))
                End If
                anzahlmerkmale = anzahlmerkmale + 1
                k = anzahlmerkmale - 1
            End If
        End If
    Next k
    i = i + 1
    End If
    End If
    End If
Loop

If (wrong_comment) Then
            MsgBox (Tabelle4.Range(lang_nr & "91").text)
End If
endzeile = i - 1
erstezeile = 1
 i = 0
 While i < anzahlmerkmale
    If StaDa(4, i) = 1 Then
        StaDa(9, i) = 0
    Else
        StaDa(9, i) = Sqr((1 / (StaDa(4, i) - 1)) * (StaDa(5, i) - StaDa(1, i) ^ 2 / StaDa(4, i)))      'sigma
    End If
    If StaDa(9, i) = 0 Then
        StaDa(6, i) = cpref
    Else
        If (StaDa(8, i) = "FT" Or StaDa(8, i) = "LT") Then      'sym
            StaDa(6, i) = StaDa(3, i) / (3 * StaDa(9, i))
        Else
            StaDa(6, i) = StaDa(3, i) / (6 * StaDa(9, i))       'cp
        End If
    End If
    If StaDa(3, i) > 0 Then
        StaDa(7, i) = 1 - 2 * Abs(Abs(StaDa(2, i)) - Abs(StaDa(1, i) / StaDa(4, i))) / StaDa(3, i)
    End If
    vorz = Sgn(StaDa(7, i) * StaDa(6, i))
    If StaDa(4, i) > 0 Then
        StaDa(1, i) = StaDa(1, i) / StaDa(4, i)         'Mittelwert
    End If
'    Stop
    StaDa(15, i) = 0
    StaDa(16, i) = 0
    If StaDa(9, i) > 0 Then
        StaDa(15, i) = Abs(StaDa(13, i) - Abs(StaDa(1, i))) / (3 * StaDa(9, i))
        If (StaDa(13, i) < Abs(StaDa(1, i))) Then
        StaDa(15, i) = 0
        End If
        StaDa(16, i) = Abs(StaDa(14, i) - Abs(StaDa(1, i))) / (3 * StaDa(9, i))
        If (StaDa(14, i) > Abs(StaDa(1, i))) Then
        StaDa(16, i) = 0
        End If
   End If
StaDa(7, i) = StaDa(15, i)
If StaDa(16, i) < StaDa(7, i) Then
StaDa(7, i) = StaDa(16, i)
End If
StaDa(7, i) = vorz * StaDa(7, i)
    If (StaDa(8, i) = "FT" Or StaDa(8, i) = "LT") Then      'sym
        StaDa(7, i) = (StaDa(2, i) + StaDa(3, i) / 2 - StaDa(1, i)) / (3 * StaDa(9, i))
    End If
    
'diese berechnung beruht auf min(abs(otol-xquer),abs(utol-xquer))/3sigma
'sie kann allerdings falsche aussagen |fffd|ber die prozessf|fffd|higkeit geben, wenn die messwerte ausserhalb
'vom tolband liegen. da ist die formel oben ( das ist die alte ) viel besser
'cp(1-2*abs((tolmitte-xquer)/tolbreite
'die kann n|fffd|mlich auch negativ werden
'nehme daher die auch noch dazu, um das vorzeichen festzuhalten   19.01.07, cs

    If StaDa(7, i) < 0.0005 Then
        StaDa(7, i) = 0
    End If
    If StaDa(9, i) = 0 Then
        If (StaDa(1, i) < StaDa(2, i) + StaDa(3, 1) / 2) And _
           (StaDa(1, i) > StaDa(2, i) - StaDa(3, 1) / 2) Then
           StaDa(7, i) = 1.33
        Else
           StaDa(7, i) = 0                              'cpk
        End If
    End If
StaDa(1, i) = Round(StaDa(1, i), anz_pos_max + 1)
StaDa(6, i) = Round(StaDa(6, i), anz_pos_max)
StaDa(7, i) = Round(StaDa(7, i), anz_pos_max)
StaDa(9, i) = Round(StaDa(9, i), anz_pos_max + 1)
StaDa(10, i) = Round(StaDa(10, i), anz_pos_max)
StaDa(11, i) = Round(StaDa(11, i), anz_pos_max)

     i = i + 1
     
 Wend
 
 StadaMax = 0
 For i = 0 To anzahlmerkmale - 1
 If StaDa(4, i) > StadaMax Then
 StadaMax = StaDa(4, i)
 End If
 Next i
'Stop
 End Sub
 
Sub Linie(Hoehe, Breite, ActLinks, ActOben, Farbe, Mitte)

With ProtSheet.Shapes.AddLine(Mitte, ActOben, Mitte, ActOben + Hoehe).line
    .ForeColor.RGB = RGB(0, 0, 254)
End With

End Sub
Attribute VB_Name = "ModAutoSPC"
Option Explicit
 
 Public Sub CalcAutoSPC()

    Dim i As Integer, j As Integer, i1 As Integer, j1 As Integer
    Dim i1ende As Integer, j1ende As Integer, neu As Integer, i_header As Integer, startzeile_1 As Integer
    Dim vonBereich As String, zuBereich As String, filterzeile As String
    Dim zeile As String
    Dim IsHeader As Boolean
    Dim pic As Picture
    Dim AnzahlZeilen_B As Integer
'    Stop
    FindeErsteZeile
    
    Tabelle1.absolutstart = 1
    If (InStr(1, ProtSheet.Range("A1"), "BITMAP")) Then
            i = ProtSheet.Rows(1).RowHeight
            Sheets(AutoSPC).Select
            Rows(1).Select
            Selection.RowHeight = i
        
End If
'Sheets(AutoSPC).Activate
    Sheets(AutoSPC).Shapes.SelectAll
    Selection.Delete
    
    Sheets(AutoSPC).UsedRange.Select
    Selection.ClearContents
    Sheets(Hilfe).Range("A1:AO" & AnzahlZeilen_B + 1).ClearContents

    i_header = 0
    IsHeader = True
    If startzeile = 1 Then
'        protsheet.Rows(1).Insert
'        startzeile = 2
        IsHeader = False
        Tabelle4.Range("D7").Value = 1
    End If
    startzeile_1 = startzeile   ' start daten in auto_spc
    i_header = Tabelle4.Range("D7").Value
    If (IsHeader = True) Then
    vonBereich = "A1:" & Tabelle4.Range("E7").text & Tabelle4.Range("D7").text
    zuBereich = vonBereich
'    Stop
    ProtSheet.Range(vonBereich).Copy
    Sheets(AutoSPC).Range(zuBereich).Select
    ActiveSheet.Paste
'    startzeile_1 = startzeile_1 - 1
    End If
    i1 = Tabelle4.Range("B8")
    Sheets(AutoSPC).Range("A1").Select
    Sheets(AutoSPC).Range("T1", "AA" & i1).Font.Size = 8 * 100 / zoomfactor_tables
    Sheets(AutoSPC).Range("T1", "AA" & i1).Font.name = "Arial"
    
    Sheets(AutoSPC).Range("T" & i_header) = Tabelle4.Range(lang_nr & "66").text
    Sheets(AutoSPC).Range("U" & i_header) = Tabelle4.Range(lang_nr & "72").text
    Sheets(AutoSPC).Range("V" & i_header) = Tabelle4.Range(lang_nr & "74").text
    Sheets(AutoSPC).Range("W" & i_header) = Tabelle4.Range(lang_nr & "75").text
    Sheets(AutoSPC).Range("X" & i_header) = Tabelle4.Range(lang_nr & "73").text
    Sheets(AutoSPC).Range("Y" & i_header) = Tabelle4.Range(lang_nr & "70").text
    Sheets(AutoSPC).Range("Z" & i_header) = Tabelle4.Range(lang_nr & "71").text
' kopf ist fertig, jetzt kommen die daten dran
    i1 = startzeile
    i1ende = Tabelle4.Range("B8")
    j1 = startzeile_1
    If (IsHeader = False) Then
'        i1ende = i1ende + 1
        j1 = j1 + 1
    End If
    j1ende = j1 + StaDa(4, 0)
    vonBereich = "A" & startzeile & ":S" & i1ende
    zuBereich = "A" & startzeile_1 + 1 & ":S" & j1ende
    If (IsHeader = True) Then
     zuBereich = "A" & startzeile_1 & ":S" & j1ende
   End If
    
    filterzeile = startzeile - 1 & ":" & startzeile - 1
    If (startzeile = 1) Then
        filterzeile = "1:1"
    End If
    blattunprotect
    ProtSheet.Rows(filterzeile).AutoFilter
     ProtSheet.Rows(filterzeile).AutoFilter field:=19, Criteria1:="0"
    ' mu|fffd| drin bleiben, weil excel 2007 spinnt...07.04.08, cs
     Application.CutCopyMode = False

    For i = 0 To anzahlmerkmale - 1
'        protsheet.Columns(11).Select
        ProtSheet.Rows(filterzeile).AutoFilter field:=19, Criteria1:=StaDa(0, i)
        ProtSheet.Range(vonBereich).Copy
        Sheets(AutoSPC).Paste Destination:=Sheets(AutoSPC).Range(zuBereich)
        
        Tabelle2.Range("T" & j1) = StaDa(9, i)      'stdev
        Tabelle2.Range("U" & j1) = StaDa(1, i)
        Tabelle2.Range("V" & j1) = StaDa(10, i)
        Tabelle2.Range("W" & j1) = StaDa(11, i)
        Tabelle2.Range("X" & j1) = StaDa(11, i) - StaDa(10, i)
        Tabelle2.Range("Y" & j1) = StaDa(6, i)
        Tabelle2.Range("Z" & j1) = StaDa(7, i)
        faehigkeit (i)
        Tabelle2.Range("AA" & j1) = text
        If i < anzahlmerkmale - 1 Then
            j1 = j1 + StaDa(4, i)
            j1ende = j1 + StaDa(4, i + 1)
            zuBereich = "A" & j1 & ":S" & j1ende - 1
        End If
        If (startzeile = 1) Then
           vonBereich = "A2:S" & i1ende
        End If

    Next i
    
    Application.CutCopyMode = False
    ProtSheet.AutoFilterMode = False
blattprotect
    i1 = 1
    Tabelle1.absolutstart = 2
End Sub

Public Sub CalcAutoSPC2()

    Dim i As Integer, j As Integer, i1 As Integer, j1 As Integer, iLaufEnde As Integer, ActLine As Integer
    Dim i1ende As Integer, j1ende As Integer, neu As Integer, i_header As Integer, startzeile_1 As Integer
    Dim vonBereich As String, zuBereich As String, filterzeile As String
    Dim zeile As String
    Dim IsHeader As Boolean
    Dim pic As Picture
    Dim endspalte As String
    Dim startZ As Integer
    Dim AnzahlZeilen_B As Integer
    Dim AbsActiveCell As Variant
    Dim KopfEndeZeichen As String
    Dim HeadLine As String
    Dim HeadLineNo As Integer
    Dim x As Integer
    
startZ = startzeile
FindeErsteZeile
'  Stop
Tabelle1.absolutstart = 1

Sheets(AutoSPC2).Activate
ActiveSheet.Shapes.SelectAll
Selection.Delete
    
On Error Resume Next
ActiveSheet.UsedRange.Select
Selection.ClearContents
Sheets(Hilfe).Range("A1:AO" & AnzahlZeilen_B + 1).ClearContents
i_header = Tabelle4.Range("D7").Value
    
'    Stop
    ' falls protokollkopf in autospc2 |fffd|bertragen werden soll, 02.03.10, cs
If (Not (IsEmpty(Tabelle4.Range("B28")))) Then
    KopfEndeZeichen = Tabelle4.Range("B28")
    HeadLineNo = i_header
    HeadLine = ProtSheet.Range("a" & HeadLineNo)
    While ((InStr(HeadLine, KopfEndeZeichen) <> 1) And (HeadLineNo > 0))
        HeadLineNo = HeadLineNo - 1
        HeadLine = ProtSheet.Range("a" & HeadLineNo)
    Wend
    If (HeadLineNo > 0) Then
        vonBereich = "A1:" & Tabelle4.Range("E7").text & HeadLineNo
        zuBereich = vonBereich
    '    Stop
        ProtSheet.Range(vonBereich).Copy
        Sheets(AutoSPC2).Range(zuBereich).Select
        ActiveSheet.Paste
        Application.CutCopyMode = False
    ' jetzt die bitmap kopieren, wenn sie denn da ist           03.03.10, cs
        ProtSheet.Shapes(1).Copy
        Auto2Sheet.Select
        Range("A1").Select
        ActiveSheet.Paste
        Application.CutCopyMode = False
        
        Set pic = ActiveSheet.Pictures(1)
        x = pic.height
        If (x > 0) Then
            Rows(1).Select
            Selection.RowHeight = x
        End If
    End If
End If

startzeile_1 = HeadLineNo + 1     ' start daten in auto_spc

Range("A" & startzeile_1).Select
ActiveCell = Tabelle4.Range(lang_nr & "81")
For i = 0 To anzahlmerkmale - 1
    ActiveCell.Next.Select
    ActiveCell = StaDa(0, i)               ' merkmale
        With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

Next i
Range("A" & startzeile_1 + 1).Select
ActiveCell = Tabelle4.Range(lang_nr & "82")
For i = 0 To anzahlmerkmale - 1
 ActiveCell.Next.Select
 ActiveCell = StaDa(12, i)               ' sollwerte
Next i
Call spalte(anzahlmerkmale, endspalte)

Range("A" & startzeile_1 & ":" & endspalte & startzeile_1 + 1).Select
    With Selection.Interior
        .ColorIndex = 8
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With


' kopf ist fertig
       
    i1 = startZ
'   i1ende = erstezeile - 5
    i1ende = Tabelle4.Range("B8")

    If (IsHeader = False) Then
        i1ende = i1ende + 1
    End If
    j1ende = startzeile_1 + StaDa(4, 0) + 2         '+2 testen, 03.03.10, cs
    
    filterzeile = startZ - 1 & ":" & startZ - 1
    If (startZ = 1) Then
        filterzeile = "1:1"
    End If
    blattunprotect
    ProtSheet.Rows(filterzeile).AutoFilter
'Stop
'iLaufEnde = anzahlmerkmale - 1
'If (StadaMax > iLaufEnde) Then
'iLaufEnde = StadaMax
'End If
'
    ProtSheet.Rows(filterzeile).AutoFilter field:=19, Criteria1:="0"
    ' mu|fffd| drin bleiben, weil excel 2007 spinnt...07.04.08, cs

'Stop
    ActiveSheet.Range("A" & startzeile_1 + 1).Select            'messl|fffd|ufe durchnummerieren
    For i = 1 To StadaMax
        ActiveCell.Offset(1, 0).Select
        ActiveCell = i
    Next i
    startzeile_1 = startzeile_1 + 2     ' jetzt die startzeile f|fffd|r die daten, 02.03.10, cs
    
    For i = 0 To anzahlmerkmale - 1
            vonBereich = "B" & startZ & ":B" & i1ende
            Call spalte(i + 1, endspalte)
            ProtSheet.Rows(filterzeile).AutoFilter field:=19, Criteria1:=StaDa(0, i)
            ProtSheet.Range(vonBereich).Copy
            zuBereich = endspalte & startzeile_1 & ":" & endspalte & j1ende + 1
            Sheets(AutoSPC2).Paste Destination:=Sheets(AutoSPC2).Range(zuBereich)
 'werte au|fffd|erhalb der toleranz rot f|fffd|rben, 01.03.10, cs
' Stop
        Sheets(AutoSPC2).Range(endspalte & startzeile_1 - 1).Select
        For j = startzeile_1 To j1ende - 1
            ActiveCell.Offset(1, 0).Select
            AbsActiveCell = ActiveCell
               If (StaDa(12, i) >= 0 And StaDa(13, i) >= 0 And StaDa(14, i) >= 0) Then
                   AbsActiveCell = Abs(AbsActiveCell)
               End If
            If ((AbsActiveCell < StaDa(14, i)) Or (AbsActiveCell > StaDa(13, i))) Then
                With Selection.Font
                    .ColorIndex = 3
                End With
            End If
        Next j
 
'        If (i < StadaMax) Then
'        Sheets(AutoSPC2).Range("A" & i + 3) = i + 1
'        End If
        If (IsHeader = False) Then
        startZ = startZ + 1
        End If

    Next i
     
    Application.CutCopyMode = False
    ProtSheet.AutoFilterMode = False
    
    For i = 0 To StadaMax - 1
     Call spalte(anzahlmerkmale, endspalte)
    With Sheets(AutoSPC2).Range(endspalte & i + 3).Borders(xlEdgeRight)
       .LineStyle = xlNone
    End With
    With Sheets(AutoSPC2).Range("B" & i + 3 & ":" & endspalte & i + 3).Borders(xlEdgeBottom)
        .LineStyle = xlNone
    End With
    With Sheets(AutoSPC2).Range("B" & i + 3 & ":" & endspalte & i + 3).Borders(xlEdgeTop)
        .LineStyle = xlNone
    End With
    With Sheets(AutoSPC2).Range("B" & i + 3).Borders(xlEdgeLeft)
        .LineStyle = xlNone
    End With
    With Sheets(AutoSPC2).Range("B" & i + 3 & ":" & endspalte & i + 3).Borders(xlInsideVertical)
        .LineStyle = xlNone
    End With
Next i
    i1 = 1
    Tabelle1.absolutstart = 2

Sheets(AutoSPC2).Select
ActLine = StadaMax + 4 + HeadLineNo
For j = 0 To 10

Rows(ActLine).Select
 With Selection.Font
    .Size = 8
    .name = "arial"
 End With

Range("a" & ActLine).Select

Select Case j
Case 0:
ActiveCell = Tabelle4.Range(lang_nr & "84")
Case 1:
j1 = ActLine
ActiveCell = Tabelle4.Range(lang_nr & "72")
Case 2:
ActiveCell = Tabelle4.Range(lang_nr & "66")
Case 3:
ActiveCell = Tabelle4.Range(lang_nr & "76")
Case 4:
ActiveCell = Tabelle4.Range(lang_nr & "75")
Case 5:
ActiveCell = Tabelle4.Range(lang_nr & "74")
Case 6:
ActiveCell = Tabelle4.Range(lang_nr & "77")
Case 7:
ActiveCell = Tabelle4.Range(lang_nr & "83")
Case 8:
ActiveCell = Tabelle4.Range(lang_nr & "79")
Case 9:
ActiveCell = Tabelle4.Range(lang_nr & "78")
Case 10:
ActiveCell = Tabelle4.Range(lang_nr & "80")
End Select
'Stop
For i = 0 To anzahlmerkmale - 1
 ActiveCell.Next.Select
 Select Case j:
 Case 0:
 ActiveCell = StaDa(12, i)               ' sollwerte
 Case 1:
 ActiveCell = StaDa(1, i)               ' mittelwerte
 Case 2:
 ActiveCell = StaDa(9, i)               ' sigma
 Case 3:
 ActiveCell = StaDa(13, i)              ' obere tolgrenze
 Case 4:
 ActiveCell = StaDa(11, i)              ' maxwert ist
 Case 5:
 ActiveCell = StaDa(10, i)              ' minwert ist
 Case 6:
 ActiveCell = StaDa(14, i)              ' untere tolgrenze
 Case 7:
 ActiveCell = StaDa(3, i)               ' toleranzbreite
 Case 8:
 ActiveCell = StaDa(15, i)              ' cmo
 Case 9:
 ActiveCell = StaDa(16, i)              ' cmu
 Case 10:
 ActiveCell = StaDa(7, i)               ' cmk
End Select
            
Select Case digits
Case 1:
    Selection.NumberFormat = "0.0"
Case 2:
    Selection.NumberFormat = "0.00"
Case 3:
    Selection.NumberFormat = "0.000"
Case 4:
    Selection.NumberFormat = "0.0000"
Case 5:
    Selection.NumberFormat = "0.00000"
End Select

Next i
Call spalte(anzahlmerkmale, endspalte)
If Tabelle4.Range("B13").Value = 1 Then
Call DrawGrid(ActLine, endspalte)
End If
ActLine = ActLine + 1
Next j

Range("A" & j1 & ":A" & ActLine - 2).Select
    With Selection.Interior
        .ColorIndex = 8
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
Range("A" & HeadLineNo + 1 & ":" & endspalte & ActLine - 1).Select
With Selection
        .HorizontalAlignment = xlRight
End With
Range("A" & ActLine).Select
blattprotect
End Sub

Public Sub CalcAutoSPC3()
    Dim i As Integer, j As Integer, ActLine As Integer
    Dim pos2 As Integer
    Dim endspalte As String
    Dim messmittel As String
    Dim i1ende As Integer, j1ende As Integer, i_header As Integer, startzeile_1 As Integer
    Dim vonBereich As String, zuBereich As String, filterzeile As String
    Dim IsHeader As Boolean
    Dim Bereich As Range
    Dim teil As String
    Dim teilenr As String
    Dim messm As String
    Dim kavitaet As String
    Dim startZ As Integer
    Dim AnzahlZeilen_B As Integer
    Dim iLaufEnde As Integer
    Dim AbsActiveCell As Variant
    
    
On Error Resume Next
 ' erst mal anzahlwerte bestimmen..stada(4,)
 startZ = startzeile
 anzahlwerte = 0
 For i = 0 To anzahlmerkmale - 1
 anzahlwerte = anzahlwerte + StaDa(4, i)
 Next i
 'dann aus kopf auslesen, was ich brauche
 Call ReadHeader(teil, teilenr, messm, kavitaet)
' Stop
    Tabelle1.absolutstart = 1
    Sheets(Hilfe).Range("A1:AO" & AnzahlZeilen_B + 1).ClearContents
    Auto3Sheet.Unprotect Password:="ralf"
    Auto3Sheet.Activate

 '   Sheets(AutoSPC3).Activate
    ActiveSheet.UsedRange.Select
    Selection.ClearContents

'jetzt wieder f|fffd|llen
    Sheets(AutoSPC3).Range("A1") = Tabelle4.Range(lang_nr & "27")
    Sheets(AutoSPC3).Range("D1") = teil
    Sheets(AutoSPC3).Range("H1") = Tabelle4.Range(lang_nr & "107") & " " & kavitaet
    
    Sheets(AutoSPC3).Range("A2") = Tabelle4.Range(lang_nr & "85").text
    Sheets(AutoSPC3).Range("B2") = Tabelle4.Range(lang_nr & "84").text
    Sheets(AutoSPC3).Range("C2") = Tabelle4.Range(lang_nr & "86").text
    Sheets(AutoSPC3).Range("D2") = Tabelle4.Range(lang_nr & "87").text
    Sheets(AutoSPC3).Range("E2") = Tabelle4.Range(lang_nr & "106").text
    Sheets(AutoSPC3).Range("E2").Select
    For i = 1 To anzahlwerte / anzahlmerkmale
        ActiveCell.Next.Select
        ActiveCell.Font.Size = 8 * 100 / zoomfactor_tables
        ActiveCell.Font.name = "Arial"
        ActiveCell = i
    Next i
    
    startzeile_1 = 3      ' start daten in auto_spc
    i_header = Tabelle4.Range("D7").Value
    
'    i1ende = erstezeile - 5
    i1ende = Tabelle4.Range("B8")

    If (IsHeader = False) Then
        i1ende = i1ende + 1
    End If
    j1ende = startzeile_1 + StaDa(4, 0)
    
    filterzeile = startZ - 1 & ":" & startZ - 1
    If (startZ = 1) Then
        filterzeile = "1:1"
    End If
    blattunprotect
    ProtSheet.Rows(filterzeile).AutoFilter

' zun|fffd|chst die sollwerte kopieren
'Stop
j = 3
For i = 0 To anzahlmerkmale - 1
    Sheets(AutoSPC3).Range("a" & j) = StaDa(0, i)
    Sheets(AutoSPC3).Range("b" & j) = StaDa(12, i)
    Sheets(AutoSPC3).Range("c" & j) = StaDa(13, i) - StaDa(12, i)
    Sheets(AutoSPC3).Range("d" & j) = StaDa(14, i) - StaDa(12, i)
    Sheets(AutoSPC3).Range("e" & j) = messm
    
    Select Case digits
    Case 1:
      Sheets(AutoSPC3).Range("a" & j, "d" & j).NumberFormat = "0.0"
    Case 2:
      Sheets(AutoSPC3).Range("a" & j, "d" & j).NumberFormat = "0.00"
    Case 3:
      Sheets(AutoSPC3).Range("a" & j, "d" & j).NumberFormat = "0.000"
    Case 4:
      Sheets(AutoSPC3).Range("a" & j, "d" & j).NumberFormat = "0.0000"
    Case 5:
      Sheets(AutoSPC3).Range("a" & j, "d" & j).NumberFormat = "0.00000"
    End Select

    j = j + 1
Next i
j = 3
iLaufEnde = anzahlmerkmale - 1
If (StadaMax > iLaufEnde) Then
iLaufEnde = StadaMax
End If
    
    ProtSheet.Rows(filterzeile).AutoFilter field:=19, Criteria1:="0"
    ' mu|fffd| drin bleiben, weil excel 2007 spinnt...07.04.08, cs

    For i = 0 To iLaufEnde
    If (i < anzahlmerkmale) Then
        vonBereich = "B" & startZ & ":B" & i1ende
    Call spalte(i + 1, endspalte)


        ProtSheet.Activate
        vonBereich = "B" & startZ & ":B" & i1ende - 2
        ProtSheet.Rows(filterzeile).AutoFilter field:=19, Criteria1:=StaDa(0, i)
        ProtSheet.Range(vonBereich).Copy
        
        Sheets(AutoSPC3).Activate
        zuBereich = "F" & j
        Sheets(AutoSPC3).Range(zuBereich).Select
        Selection.PasteSpecial Paste:=xlPasteAll, Transpose:=True
        Application.CutCopyMode = False
        j = j + 1
        If (IsHeader = False) Then
           startZ = startZ + 1
        End If
    End If
Next i
ProtSheet.AutoFilterMode = False

Call spalte(anzahlmerkmale + 4, endspalte)
'Stop
For i = 0 To anzahlmerkmale - 1                     ' schleife |fffd|ber die zeilen
    Sheets(AutoSPC3).Range("E" & i + 3).Select
    For j = 1 To anzahlwerte / anzahlmerkmale     ' schleife |fffd|ber die spalten
        ActiveCell.Next.Select
            AbsActiveCell = ActiveCell
               If (StaDa(12, i) >= 0 And StaDa(13, i) >= 0 And StaDa(14, i) >= 0) Then
                   AbsActiveCell = Abs(AbsActiveCell)
               End If
        If ((AbsActiveCell < StaDa(14, i)) Or (AbsActiveCell > StaDa(13, i))) Then
            With Selection.Font
             .ColorIndex = 3
            End With
        End If
    Next j
Next i
    
Range("A2:" & endspalte & anzahlmerkmale + 2).Select
    With Selection
        .HorizontalAlignment = xlRight
        .Font.Size = 8 * 100 / zoomfactor_tables
        .Font.name = "Arial"
End With
    
    
    
'protsheet.AutoFilterMode = False
Sheets(AutoSPC3).Range("A" & i + 3).Select
' Auto3Sheet.Protect Password:="ralf"
blattprotect

End Sub

Public Sub CalcAutoSPC4()
    Dim i As Integer, j As Integer, i1 As Integer, j1 As Integer
    Dim i1ende As Integer, j1ende As Integer, neu As Integer, i_header As Integer, startzeile_1 As Integer
    Dim vonBereich As String, zuBereich As String, filterzeile As String
    Dim zeile As String
    Dim IsHeader As Boolean
    Dim pic As Picture
    Dim AnzahlZeilen_B As Integer
    Dim endzeile As Integer
    Dim Ampulle As Integer
    Dim Messebene As Integer
    Dim line As Integer
       

    i_header = 0
    IsHeader = True
    If startzeile = 1 Then
'        protsheet.Rows(1).Insert
'        startzeile = 2
        IsHeader = False
        Tabelle4.Range("D7").Value = 1
    End If
    startzeile_1 = startzeile   ' start daten in auto_spc
    i_header = Tabelle4.Range("D7").Value
    If (IsHeader = True) Then
    vonBereich = "A1:" & Tabelle4.Range("E7").text & Tabelle4.Range("D7").text
    zuBereich = vonBereich
'    Stop
    ProtSheet.Range(vonBereich).Copy
    Sheets(AutoSPC4).Range(zuBereich).Select
    ActiveSheet.Paste
'    startzeile_1 = startzeile_1 - 1
    End If
    Range("A" & startzeile) = "Ampulle"
    Range("B" & startzeile) = "Messebene"
    Range("C" & startzeile) = "Messkriterium"
    Range("D" & startzeile) = "Ist"
    Range("E" & startzeile) = "Soll"
    Range("F" & startzeile) = "Otol"
    Range("G" & startzeile) = "Utol"
    Range("H" & startzeile) = "Abw"
    Range("I" & startzeile) = "Tol|fffd|berschr"
    Range("K" & startzeile) = "Graphik"
    Range("A" & startzeile & ":I" & startzeile).Select
    With Selection
        .HorizontalAlignment = xlCenter
    End With
    Range("A" & startzeile & ":K" & startzeile).Select
    With Selection.Font
        .name = "Arial"
        .FontStyle = "Standard"
        .Size = 8 * 100 / zoomfactor_tables
    End With
    
    endzeile = Tabelle4.Range("B8")
    vonBereich = "A" & startzeile & ":R" & endzeile
    zuBereich = "C" & startzeile + 1 & ":T" & endzeile + 1
    ProtSheet.Range(vonBereich).Copy
    Sheets(AutoSPC4).Range(zuBereich).Select
    ActiveSheet.Paste
    Sheets(AutoSPC4).Range(zuBereich).Select
    With Selection
        .HorizontalAlignment = xlCenter
    End With
    ProtSheet.Range("S" & startzeile & ":S" & endzeile).Copy
    Sheets(AutoSPC4).Range("B" & startzeile + 1 & ":B" & endzeile + 1).Select
    ActiveSheet.Paste
    Sheets(AutoSPC4).Range("A" & startzeile + 1 & ":B" & endzeile + 1).Select
    Selection.NumberFormat = "0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
        .Font.Size = 8 * 100 / zoomfactor_tables
        .Font.name = "Arial"
    End With
    Ampulle = 0
    If (IsNumeric(Range("B" & startzeile + 1))) Then
    Messebene = Range("B" & startzeile + 1)
    For line = startzeile + 1 To endzeile
        If (Range("B" & line) = Messebene) Then
            Messebene = Range("B" & line)
            Ampulle = Ampulle + 1
        End If
        Range("A" & line) = Ampulle
    Next
    End If
    Range("A" & startzeile).Select

End Sub





Attribute VB_Name = "Module1"
Sub Macro1()
Attribute Macro1.VB_Description = "Macro recorded 2010-6-2 by k2000"
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
' Macro recorded 2010-6-2 by k2000
'

'
    Range("F26").Select
    ActiveSheet.Unprotect
    Range("F26").Select
    ActiveCell.FormulaR1C1 = "|fffd||fffd|"
    Range("F27").Select
End Sub
Attribute VB_Name = "Start_Ende"
Option Explicit


Sub auto_open()
'
' auto_open Makro
' Makro am 10.03.2004 von SCHOENE aufgezeichnet
'
 Dim pos As Integer
 Dim text, inhalt As String
Tabelle4.Select
'Tabelle1.Unprotect Password:="werth"
If ((Tabelle4.Range("F3") <> 1) Or IsEmpty(Tabelle4.Range("B30")) Or (Tabelle4.Range("B30") = 1)) Then
    Tabelle1.Select
Else
    Select Case (Tabelle4.Range("B30"))
    Case 2:
        Auto2Sheet.Select
    Case 3:
        AbwChart.Select
    Case 4:
        VertChart.Select
    Case 5:
        AutoSheet.Select
    Case 6:
        Auto2Sheet.Select
    Case 7:
        Auto3Sheet.Select
    Case 8:
        Auto4Sheet.Select
     End Select
     ProtSheet.Visible = False
End If
'
End Sub

Sub auto_close()
'
' auto_close Makro
' Makro am 10.05.2004 von SCHOENE aufgezeichnet
'

Dim i As Integer
Dim allesok As Boolean
Stop
If ActiveWorkbook.Saved = True Then
    allesok = True
End If
ProtSheet.Visible = True
WerteChart.Visible = False
AbwChart.Visible = False
VertChart.Visible = False
AutoSheet.Visible = False
Auto2Sheet.Visible = False
Auto3Sheet.Visible = False
Auto4Sheet.Visible = False

If Tabelle1.anzeigen Then
    Call rueckformat
End If
Tabelle1.Unprotect Password:="werth"
Tabelle4.Activate
If (InStr(ActiveWorkbook.FullName, "template") = 0) Then
ActiveSheet.Range("F2") = ActiveWorkbook.FullName
ActiveSheet.Range("F3") = 1
End If
'Tabelle4.Range("B21") = 0
'For i = 1 To CommandBars.Count
'If KeepSymbol(i) = True Then
'    Application.CommandBars(i).Enabled = True
'End If
'Next i
Stop
MenuesEntfernen

Tabelle4.Visible = True

If allesok = True Then
    ActiveWorkbook.Close savechanges:=True
End If
'
End Sub


Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public absolutstart As Integer
Public neu_werte As Boolean
Public neu_abw As Boolean
Public neu_vert As Boolean
Public anzeigen As Boolean
Public neu_rechnen As Integer
Public akt_end As Integer
Public aktion As Integer
Dim datenzeile As Boolean

Private Sub Worksheet_Activate()
'Stop
If (Tabelle4.Range("B21") = 1) And (absolutstart = 0) Then

CalcProtocolIntern
plotindex = -1
spc3index = -1
DisableControls
InsertMerkmaleInMenue
'InsertKavitaetenInMenue
Select Case (Tabelle4.Range("B30"))
Case 2
    Call mMesswerte
Case 3
    Call mAbweichung
Case 4
    Call mVerteilung
Case 5
    Call mAutoSPC
Case 6
    Call mAutoSPC2
Case 6
    Call mAutoSPC3
Case 7
    Call mAutoSPC4
End Select
End If
End Sub

Public Sub CalcProtocolIntern()

Dim pic As Picture
Dim ind, i_symbol  As Integer
Dim sep As String
Dim text1, text2 As String
'Stop
' !!!!!!!!!!!!!!!!!!!!!!!!!!!ACHTUNG!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
' usesystemseparators funktioniert nur ab excel2002                              07.07.05, cs
' !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
On Error Resume Next

    With Application
        .UseSystemSeparators = True
    End With
'Stop
If absolutstart = 0 Then
neu_werte = True
neu_vert = True
neu_abw = True
End If
If absolutstart = 0 Or absolutstart = 2 Then
    If (absolutstart = 0) Then
    
' zun|fffd|chst unn|fffd|tige/st|fffd|rende symbolleisten ausblenden
       
       Call ClearSymbols
       Call BestimmeDC
       Call BestimmeLaenderCode
        text = Tabelle4.Range("B3").text
        lang_nr = Tabelle4.Range("B5")
'        Select Case lang_nr
'        Case 0:
'        lang_nr = "F"
'        Case 1:
'        lang_nr = "G"
'        Case 2:
'        lang_nr = "H"
'        Case Default:
'        lang_nr = "G"
'        End Select
        
        fontsize = Tabelle4.Range("B24").text
        digits = Tabelle4.Range("B23").text
        zoomfactor_tables = Tabelle4.Range("B25").text
        zoomfactor_graphics = Tabelle4.Range("B26").text
'         Stop
'        sep = Application.International(xlDecimalSeparator)
'dezimaltrennzeichen des betriebssystems, 09.06.05, cs

'pos = InStr(1, text, ".")
'If (pos = 0) Then
'    pos = InStr(1, text, ",")
'End If

'If pos > 0 Then
'   text1 = Mid(text, 1, pos - 1)
'   text2 = Mid(text, pos + 1, 10)
'   text = text1 + sep + text2
'End If
cpr = CDbl(text)
       
       Sheets(1).name = Tabelle4.Range(lang_nr & "31").text
       Set ProtSheet = Sheets(1)
       Sheets(2).name = Tabelle4.Range(lang_nr & "32").text
       Set WerteChart = Sheets(2)
       Sheets(3).name = Tabelle4.Range(lang_nr & "33").text
       Set AbwChart = Sheets(3)
       Sheets(4).name = Tabelle4.Range(lang_nr & "34").text
       Set VertChart = Sheets(4)
       Sheets(5).name = Tabelle4.Range(lang_nr & "35").text
       Set AutoSheet = Sheets(5)
       Sheets(6).name = Tabelle4.Range(lang_nr & "36").text
       Set Auto2Sheet = Sheets(6)
       Sheets(7).name = Tabelle4.Range(lang_nr & "37").text
       Set Auto3Sheet = Sheets(7)
       Sheets(10).name = Tabelle4.Range(lang_nr & "39").text
       Set Auto4Sheet = Sheets(10)
       
       
       ActiveWindow.Zoom = zoomfactor_tables
       ZeigeMerkmale
       ProtSheet.Protect Password:="werth"
      absolutstart = 2
       
      End If
    ProtSheet.Visible = True
    ActiveWindow.LargeScroll ToRight:=-1
    ActiveWindow.ScrollRow = 1
    absolutstart = 2
    neu_rechnen = 1
End If
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Dim i As Integer

i = Target.Row

datenzeile = True
If (IsEmpty(Range("b" & i))) And (IsEmpty(Range("c" & i))) Then
datenzeile = False
End If

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
 Dim i As Integer
 Dim ilauf, Farbe As Integer
 Dim akt_end As Integer
  Dim inhalt As String
 Dim TolRange, Diff, oTol As Double
 Dim uTol As Double
 Dim Hoehe, ActLinks, Links, Rechts, Breite, Oben, Unten, ActOben As Long
 Dim schleife As Boolean
 
 Static sprung_1 As Integer
 
' hier sind einige kr|fffd|cken drin, damit es |fffd|berhaupt funktioniert
' neu_rechnen = 0: das sheet wird gef|fffd|llt, dann darf nichts passieren
' neu_rechnen = 1: bei |fffd|nderungen, dann m|fffd|ssen die daten |fffd|berpr|fffd|ft werden
' neu_rechnen = -1: bei auto-spc, dann darf nichts passieren
' neu_rechnen = 2: bei neuzeichnen von balken...dann darf auch nichts passieren
' man kann nur eine zelle |fffd|berschreiben, weil dann sofort worksheet_change wieder aufgerufen wird
' also laufe ich ein paar mal hier rein und steuere |fffd|ber sprung_1 die einzelnen zellen an
'
' On Error Resume Next
'die routine funktioniert nicht, wenn ganze zeilen gel|fffd|scht werden
'er springt erst hier rein, wenn die zeile gel|fffd|scht ist
''10.08.06, cs

' zun|fffd|chst wird untersucht, was gemacht worden ist: |fffd|ndern, l|fffd|schen oder einf|fffd|gen
' aktion = 0: |fffd|ndern
' aktion = 1: l|fffd|schen
' aktion = 2: einf|fffd|gen... es mu|fffd| immer von links nach rechts aufgef|fffd|llt werden
If (neu_rechnen = -1) Or (neu_rechnen = 0) Or (neu_rechnen = 2) _
Or Tabelle4.Range("B21") = 0 Then Exit Sub
i = Target.Row
If (neu_rechnen = 1) And (sprung_1 = 0) Then
 'erst mal rausfinden, was gemacht wurde --> aktion bestimmen

Select Case aktion
Case 2

' eine zeile ist angef|fffd|gt und mu|fffd| jetzt gef|fffd|llt werden
 If (i < startzeile) Then
    sprung_1 = -1
    aktion = 0

 Else
 
    akt_end = endzeile
    
    If (Not IsEmpty(Range("B" & i))) And (Not IsEmpty(Range("C" & i))) And _
    (Not IsEmpty(Range("D" & i))) And (Not IsEmpty(Range("E" & i))) Then
            sprung_1 = 1
            Range("F" & i) = Abs(Range("B" & i)) - Range("C" & i)
            sprung_1 = 0
    End If
End If

Case Else

' bei 0 mu|fffd| ich erst mal gucken, was ich |fffd|berhaupt gemacht habe
' bei 1 laufe ich nicht mehr in worksheet-change, deshalb mu|fffd| ich an dieser stelle alles erledigen
    ilauf = i
    akt_end = i - 1
    schleife = True
    Do While schleife
    
        If IsEmpty(Range("A" & ilauf)) And IsEmpty(Range("A" & ilauf + 1)) Then
            schleife = False
        Else
            akt_end = akt_end + 1
        End If
        ilauf = ilauf + 1
    Loop
   
    aktion = 0
    
    If akt_end < endzeile Then
        aktion = 1
        endzeile = akt_end
        If (datenzeile = True) Then
        End If
        If (i < startzeile) Then
        startzeile = startzeile - 1
        i = startzeile
        End If
    Else
        If akt_end > endzeile Then
            aktion = 2
            endzeile = akt_end
' erst mal rauskriegen, ob es eine datenzeile oder eine kopfzeile ist
' achtung: eine erste datenzeile kann man nicht inserten, es wird automatisch als kopfzeile erkannt
' mu|fffd| mir noch was gescheites einfallen lassen, wie man unterscheiden k|fffd|nnte
If (i <= startzeile) Then
    Rows(i).Select

    Selection.NumberFormat = "General"
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    startzeile = startzeile + 1
End If
            
        End If
    End If
 'Abweichung darstellen
    If (aktion = 0) Then
        sprung_1 = 1
        Range("F" & i) = Abs(Range("B" & i)) - Range("C" & i)
        sprung_1 = 0
    End If
    End Select
 End If
 
 If (neu_rechnen = 1) And (sprung_1 = 1) Then
 
 'Toleranz|fffd|berschreitung
    sprung_1 = 2
    If Range("F" & i) < Range("E" & i) Then
       Range("G" & i) = Range("F" & i) - Range("E" & i)
       sprung_1 = 0
    Else
    
        If Range("F" & i) > Range("D" & i) Then
            Range("G" & i) = Range("F" & i) - Range("D" & i)
            sprung_1 = 0
        Else
            Range("G" & i).ClearContents
            sprung_1 = 0
        End If
    End If
 End If
  
If (aktion <> 2 And sprung_1 = 2) Or (aktion = 1) Then
statistik
If (Tabelle4.Range("B21") = 1) Then
plotindex = -1
InsertMerkmaleInMenue
'InsertKavitaetenInMenue
End If
End If
 If (neu_rechnen = 1) And (sprung_1 = 2) Then
' Stop
    neu_rechnen = 2
    Call ZeichneBalken(i, 1)
    aktion = 0
    neu_rechnen = 1
 End If

If (neu_rechnen = 1) And (sprung_1 = -1) Then
    sprung_1 = 0
End If
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Change(ByVal Target As Range)
Static i As Integer

'ACHTUNG: auf das konfigurationssheet wird immer nur als Tabelle4 zugegriffen,
'weil das mit dem namen nur probleme bringt wegen der verschiedenen sprachen
'25.04.07, cs


'Stop
' die n|fffd|chsten zeilen m|fffd|ssen drin bleiben, damit die sprache umgestellt wird, 25.09.07, cs
If (i <> 1) Then
MenuesEntfernen

MenuesErstellen
i = 1
End If

Tabelle1.neu_rechnen = 0
Tabelle1.absolutstart = 0
'Stop
Sheets(9).name = Sheets(Konfiguration).Range(lang_nr & "38")

End Sub
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "tools"
Option Explicit
Public cpref As Double
Public cpr As Double
Public hsize, vsize As Long
Public Sprache As Long
Public strgrad(10) As String

Public pos, posx, posy, length, height, fontsize, digits As Integer
Public zoomfactor_tables, zoomfactor_graphics As Integer
Public path, name, bitmap, languagefile As String
Public DialogString() As String
Public RegisterString() As String
Public MesswerteString() As String
Public AbweichungenString() As String
Public VerteilungString() As String
Public StatistikString() As String
Public ErrorString() As String
Public ProtSheet As Worksheet
Public WerteChart As Chart
Public AbwChart As Chart
Public VertChart As Chart
Public AutoSheet As Worksheet
Public Auto2Sheet As Worksheet
Public Auto3Sheet As Worksheet
Public Auto4Sheet As Worksheet
'Public KeepSymbol(170) As Boolean
Public FirstLoop As Boolean
Public CloseAllowed As Boolean


Public lang_nr As String
Public Const Protokoll = 1
Public Const Messwerte = 2
Public Const Abweichungen = 3
Public Const Verteilung = 4
Public Const AutoSPC = 5
Public Const AutoSPC2 = 6
Public Const AutoSPC3 = 7
Public Const Hilfe = 8
Public Const Konfiguration = 9
Public Const AutoSPC4 = 10

Public Const zehn = 10
Public Const fuenfundzwanzig = 25
Public Const fuenfzig = 50
Public Const hundert = 100
Public Const alle = 0

Public plotindex As Integer
Public spc3index As Integer


Dim MBProtokoll As CommandBarControl
Dim MBMesswerte As CommandBarControl
Dim MBAbweichung As CommandBarControl
Dim MBVerteilung As CommandBarControl
Dim MBAutoSPC As CommandBarControl
Dim MBAutoSPC2 As CommandBarControl
Dim MBElemente As CommandBarPopup
Dim LetzteWertePopUp As CommandBarPopup
Dim MBScrolling As CommandBarControl
Dim MBAutoSPC3 As CommandBarControl
Dim MBAutoSPC4 As CommandBarControl
' Das Ganze auch noch einmal f|fffd|r die Charts Men|fffd|leiste.....
Dim MBProtokollChart As CommandBarControl
Dim MBMesswerteChart As CommandBarControl
Dim MBAbweichungChart As CommandBarControl
Dim MBVerteilungChart As CommandBarControl
Dim MBAutoSPCChart As CommandBarControl
Dim MBAutoSPC2Chart As CommandBarControl
Dim MBElementeChart As CommandBarPopup
Dim LetzteWertePopUpChart As CommandBarPopup
Dim MBScrollingChart As CommandBarControl
Dim MBAutoSPC3Chart As CommandBarControl
Dim MBAutoSPC4Chart As CommandBarControl
   


Dim AnzahlZeilen_B As Integer

Declare Function WritePrivateProfileString Lib "kernel32" _
      Alias "WritePrivateProfileStringA" _
      (ByVal Section As String, ByVal Key As String, ByVal Entry As String, _
      ByVal FName As String) As Boolean

Declare Function GetDeviceCaps Lib "gdi32" (ByVal hdc As Long, ByVal nIndex As Long) As Long
Declare Function GetDC Lib "user32" _
(ByVal hwnd As Long) As Long
Declare Function ReleaseDC Lib "user32" _
(ByVal_hwnd As Long, ByVal hdc As Long) As Long
Declare Function SetWindowPos Lib "user32" (ByVal_hwnd As Long, ByVal_hwndInsertAfter As Long, _
                                            ByVal Left As Integer, ByVal top As Integer, ByVal width As Integer, ByVal height As Integer, _
                                            ByVal flags As Integer) As Boolean

Const HORZRES = 8
Const VERTRES = 10

Sub BestimmeDC()
'
'bestimmung der bildschirmgr|fffd||fffd|en aus "EXCEL_VBA", seite 518
'hsize und vsize sind die gr|fffd||fffd|en in pixel, 14.07.04, cs
'
Dim ldc, lrval As Long
hsize = Application.width
vsize = Application.height

Application.Caption = Tabelle4.Range("B2").text

End Sub

Sub BestimmeLaenderCode()

'Stop
Sprache = Application.International(xlCountrySetting)

'anscheinend brauc ich die unterscheidug in die sprachen hier doch nicht.
' lasse sie einfach mal drin, sie schadet ja auch nichts, 04.06.10, cs
Select Case Sprache
Case 49:                    'deutsch
    strgrad(0) = ChrW(176)
    strgrad(1) = Chr(39)
    strgrad(2) = Chr(34)
    strgrad(3) = ChrW(177)
Case 86:                    'chinese
    strgrad(0) = ChrW(176)
    strgrad(1) = ChrW(39)
    strgrad(2) = ChrW(34)
    strgrad(3) = ChrW(177)
default:
    strgrad(0) = ChrW(176)
    strgrad(1) = ChrW(39)
    strgrad(2) = ChrW(34)
    strgrad(3) = ChrW(177)
    
End Select

End Sub

Sub clear_cells()

Dim i As Integer
If AnzahlZeilen_B = 0 Then
    AnzahlZeilen_B = 1
End If
If (AnzahlZeilen > AnzahlZeilen_B) Then
AnzahlZeilen_B = AnzahlZeilen
End If

    Sheets("hilfe").Range("A1:O" & AnzahlZeilen_B + 1).ClearContents
    

End Sub

Sub FindData(i1, was)

Dim schleife As Boolean
Dim i As Integer
Dim minwert, maxwert As Long
minwert = -999999
maxwert = 999999
schleife = True
 i = startzeile
 i1 = erstezeile
Do While schleife

    If Not IsEmpty(ProtSheet.Range("B" & i)) Then
        If ProtSheet.Range("s" & i) = Merkmal(plotindex) Then
                Sheets("hilfe").Range("A" & i1) = ProtSheet.Range("B" & i)                             'istwert
                Sheets("hilfe").Range("B" & i1) = ProtSheet.Range("B" & i)                             'istwert
                Sheets("hilfe").Range("C" & i1) = StaDa(12, plotindex)
                Sheets("hilfe").Range("D" & i1) = StaDa(13, plotindex)
                Sheets("hilfe").Range("E" & i1) = StaDa(14, plotindex)
                 If (StaDa(12, plotindex) >= 0 And StaDa(13, plotindex) >= 0 And StaDa(14, plotindex) >= 0) Then
                Sheets("hilfe").Range("B" & i1) = Abs(Sheets("hilfe").Range("B" & i1))                      'istwert, vorzeichenbereinigt
                End If
               
                If (was = 1) Then
                    Sheets("hilfe").Range("B" & i1) = Sheets("hilfe").Range("B" & i1) - Sheets("hilfe").Range("C" & i1)
                    Sheets("hilfe").Range("P" & i1) = 0
                End If
                
                i1 = i1 + 1
        End If
    Else
        If (IsEmpty(ProtSheet.Range("A" & i))) Then
            schleife = False
        End If
    End If
    i = i + 1
 Loop
 AnzahlZeilen_B = i1
End Sub

Sub ZeigeProtokoll()
ProtSheet.Visible = True
End Sub

Sub Plotgrenzen(max, min)

Dim temp As Double
Dim signum As Integer


max = StaDa(11, plotindex)
min = StaDa(10, plotindex)
If (StaDa(13, plotindex) > 0 And StaDa(14, plotindex) > 0) Then
signum = Sgn(StaDa(13, plotindex))
max = signum * Abs(StaDa(11, plotindex))
min = signum * Abs(StaDa(10, plotindex))
End If
If (max < min) Then
    temp = max
    max = min
    min = temp
End If

End Sub

Sub blattprotect()

 ProtSheet.Protect Password:="werth"
 VertChart.Protect Password:="ralf"
 AbwChart.Protect Password:="ralf"
 WerteChart.Protect Password:="ralf"
 AutoSheet.Protect Password:="ralf"
 Auto2Sheet.Protect Password:="ralf"
 Auto3Sheet.Protect Password:="ralf"
 Auto4Sheet.Protect Password:="ralf"
 'Sheets(Hilfe).Protect Password:="ralf"
End Sub

Sub blattunprotect()
 On Error GoTo errorhandler

 AbwChart.Unprotect Password:="ralf"
 VertChart.Unprotect Password:="ralf"
 WerteChart.Unprotect Password:="ralf"
 AutoSheet.Unprotect Password:="ralf"
 Auto2Sheet.Unprotect Password:="ralf"
 Auto3Sheet.Unprotect Password:="ralf"
 Auto4Sheet.Unprotect Password:="ralf"
 ProtSheet.Unprotect Password:="werth"
 'Sheets(Hilfe).Unprotect Password:="ralf"
 
 Exit Sub
errorhandler:

End Sub
Sub restart()
'
' restart Makro
' Makro am 07.07.2005 von SCHOENE aufgezeichnet
'
Tabelle2.Activate
Tabelle1.Activate

'
End Sub

Sub formatieren()
'
' festlegung der schriftgr|fffd||fffd|en in den graphiken
'
Dim pos As Integer
ActiveChart.PlotArea.Select
'Selection.Left = 50
'Selection.top = 30
'Selection.height = vsize * 0.63
'     pos = Selection.top
    
' x-achse, beschriftung
ActiveChart.Axes(xlCategory).AxisTitle.Select
Selection.AutoScaleFont = True
With Selection.Font
   .Size = fontsize
End With

' x-achse, zahlen
ActiveChart.Axes(xlCategory).Select
Selection.TickLabels.AutoScaleFont = True
With Selection.TickLabels.Font
    .Size = fontsize
End With
     
' y-achse, beschriftung
ActiveChart.Axes(xlValue).AxisTitle.Select
Selection.AutoScaleFont = True
With Selection.Font
   .Size = fontsize
End With

' y-achse, zahlen
ActiveChart.Axes(xlValue).Select
Selection.TickLabels.AutoScaleFont = True
With Selection.TickLabels.Font
    .Size = fontsize
End With
    
' title
ActiveChart.ChartTitle.Select
Selection.AutoScaleFont = True
With Selection.Font
   .Size = fontsize
End With
    
'legende
ActiveChart.Legend.Select
Selection.AutoScaleFont = False

With Selection.Font
   .Size = fontsize
End With
    
' auswerte -zeile
'Stop
ActiveChart.Shapes(1).Select
Selection.AutoScaleFont = False
With Selection.Characters(start:=1, length:=54).Font
   .Size = fontsize
End With
'Selection.ShapeRange.Left = 2 / 3 * hsize

'Selection.ShapeRange.top = pos + 180

End Sub

Sub rueckformat()
 WerteChart.Unprotect Password:="ralf"
 WerteChart.Select

With ActiveChart
.Legend.Select
Selection.width = 90
Selection.height = 26
.Deselect
End With
WerteChart.Protect Password:="ralf"

 AbwChart.Unprotect Password:="ralf"
 AbwChart.Select

With ActiveChart
.Legend.Select
Selection.width = 109
Selection.height = 32
.Deselect
End With
AbwChart.Protect Password:="ralf"

 VertChart.Unprotect Password:="ralf"
 VertChart.Select

With ActiveChart
.Legend.Select
Selection.width = 122
Selection.height = 136
.Deselect
End With
VertChart.Protect Password:="ralf"


End Sub

Sub ClearSymbols()

Dim i As Integer

For i = 1 To CommandBars.Count

'KeepSymbol(i) = False
Select Case CommandBars(i).Type

Case 0

If i >= 5 And Application.CommandBars(i).Visible = True Then
    Application.CommandBars(i).Visible = False
'    KeepSymbol(i) = True
End If

End Select
Next i


End Sub

Public Sub MenuesErstellen()
    Dim menue As CommandBarControl
    Dim menue_Chart As CommandBarControl
'    Stop
    If Application.CommandBars.AdaptiveMenus = True Then
        Application.CommandBars.AdaptiveMenus = False
    End If
    
        Set menue = Application.CommandBars(1).Controls.Add _
               (Type:=msoControlPopup, temporary:=True)
        menue.Caption = "Werth"
   
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set menue_Chart = Application.CommandBars(2).Controls.Add _
               (Type:=msoControlPopup, temporary:=True)
        menue_Chart.Caption = "Werth"
        
'    Stop
        lang_nr = Tabelle4.Range("B5")
   
    
    Set MBElemente = menue.Controls.Add(Type:=msoControlPopup, temporary:=False)
    With MBElemente
        .Caption = Tabelle4.Range(lang_nr & "19").text
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBElementeChart = menue_Chart.Controls.Add(Type:=msoControlPopup, temporary:=False)
        With MBElementeChart
            .Caption = Tabelle4.Range(lang_nr & "19").text
        End With
          
          
    
    Set MBProtokoll = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBProtokoll
        .Caption = Tabelle4.Range(lang_nr & "27").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mMessprotokoll"
        .BeginGroup = True
        .State = msoButtonDown
        .FaceId = 9
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBProtokollChart = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBProtokollChart
            .Caption = Tabelle4.Range(lang_nr & "27").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mMessprotokoll"
            .BeginGroup = True
            .State = msoButtonDown
            .FaceId = 9
        End With

    
    Set MBMesswerte = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBMesswerte
        .Caption = Tabelle4.Range(lang_nr & "20").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mMesswerte"
        .State = msoButtonUp
        .FaceId = 17
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBMesswerteChart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBMesswerteChart
            .Caption = Tabelle4.Range(lang_nr & "20").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mMesswerte"
            .State = msoButtonUp
            .FaceId = 17
        End With

    
    Set MBAbweichung = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBAbweichung
        .Caption = Tabelle4.Range(lang_nr & "21").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mAbweichung"
        .State = msoButtonUp
        .FaceId = 17
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBAbweichungChart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBAbweichungChart
            .Caption = Tabelle4.Range(lang_nr & "21").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mAbweichung"
            .State = msoButtonUp
            .FaceId = 17
        End With
        
    Set MBVerteilung = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBVerteilung
        .Caption = Tabelle4.Range(lang_nr & "22").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mVerteilung"
        .State = msoButtonUp
        .FaceId = 17
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBVerteilungChart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBVerteilungChart
            .Caption = Tabelle4.Range(lang_nr & "22").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mVerteilung"
            .State = msoButtonUp
            .FaceId = 17
        End With
    
    Set MBAutoSPC = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBAutoSPC
        .Caption = Tabelle4.Range(lang_nr & "23").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mAutoSPC"
        .State = msoButtonUp
        .FaceId = 9
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBAutoSPCChart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBAutoSPCChart
            .Caption = Tabelle4.Range(lang_nr & "23").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mAutoSPC"
            .State = msoButtonUp
            .FaceId = 9
        End With

    Set MBAutoSPC2 = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBAutoSPC2
        .Caption = Tabelle4.Range(lang_nr & "24").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mAutoSPC2"
        .State = msoButtonUp
        .FaceId = 9
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBAutoSPC2Chart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBAutoSPC2Chart
            .Caption = Tabelle4.Range(lang_nr & "24").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mAutoSPC2"
            .State = msoButtonUp
            .FaceId = 9
        End With

    Set MBAutoSPC3 = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBAutoSPC3
        .Caption = Tabelle4.Range(lang_nr & "25").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mAutoSPC3"
        .State = msoButtonUp
        .FaceId = 9
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBAutoSPC3Chart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBAutoSPC3Chart
            .Caption = Tabelle4.Range(lang_nr & "25").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mAutoSPC3"
            .State = msoButtonUp
            .FaceId = 9
        End With

    Set MBAutoSPC4 = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBAutoSPC4
        .Caption = Tabelle4.Range(lang_nr & "18").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mAutoSPC4"
        .State = msoButtonUp
        .FaceId = 9
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBAutoSPC4Chart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBAutoSPC4Chart
            .Caption = Tabelle4.Range(lang_nr & "18").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mAutoSPC4"
            .State = msoButtonUp
            .FaceId = 9
        End With

    Set LetzteWertePopUp = menue.Controls.Add(Type:=msoControlPopup, temporary:=False)
    With LetzteWertePopUp
        .Caption = Tabelle4.Range(lang_nr & "94").text
        .BeginGroup = True
        
    End With
        With LetzteWertePopUp.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "95").text
            .OnAction = "ZehnWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUp.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "96").text
            .OnAction = "FuenfundzwanzigWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUp.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "97").text
            .OnAction = "FuenfzigWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUp.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "98").text
            .OnAction = "HundertWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUp.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "99").text
            .OnAction = "AlleWerte"
            .Style = msoButtonCaption
              .State = msoButtonDown
        End With
        
        
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
    Set LetzteWertePopUpChart = menue_Chart.Controls.Add(Type:=msoControlPopup, temporary:=False)
    With LetzteWertePopUpChart
        .Caption = Tabelle4.Range(lang_nr & "94").text
        .BeginGroup = True
    End With
        With LetzteWertePopUpChart.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "95").text
            .OnAction = "ZehnWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUpChart.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "96").text
            .OnAction = "FuenfundzwanzigWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUpChart.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "97").text
            .OnAction = "FuenfzigWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUpChart.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "98").text
            .OnAction = "HundertWerte"
            .Style = msoButtonCaption
              .State = msoButtonUp
        End With
        With LetzteWertePopUpChart.Controls.Add(Type:=msoControlButton, temporary:=False)
            .Caption = Tabelle4.Range(lang_nr & "99").text
            .OnAction = "AlleWerte"
            .Style = msoButtonCaption
              .State = msoButtonDown
        End With
        
    SetLetzteButtons (Tabelle4.Range("B10").Value)
    
    ' Automatisches Scrolling ein/aus
    Set MBScrolling = menue.Controls.Add(Type:=msoControlButton, temporary:=False)
    With MBScrolling
        .Caption = Tabelle4.Range(lang_nr & "101").text
        .Style = msoButtonIconAndCaption
        .OnAction = "mScrolling"
        If Tabelle4.Range("B17").Value = 1 Then
            .State = msoButtonDown
        Else
            .State = msoButtonUp
        End If
        .FaceId = 40
    End With
    
    'Hier muss ich alles doppelt machen, damit die Menues auch in den Diagrammfenstern zu sehen sind.......
        Set MBScrollingChart = menue_Chart.Controls.Add(Type:=msoControlButton, temporary:=False)
        With MBScrollingChart
            .Caption = Tabelle4.Range(lang_nr & "101").text
            .Style = msoButtonIconAndCaption
            .OnAction = "mScrolling"
            If Tabelle4.Range("B17").Value = 1 Then
                .State = msoButtonDown
            Else
                .State = msoButtonUp
            End If
            .FaceId = 40
        End With
        
    plotindex = -1
    spc3index = -1
    cpref = cpr
    
    If (Tabelle4.Range("F2") <> "") Then
    DisableControls
    End If
    
End Sub
Sub mScrolling()
    If Tabelle4.Range("B17").Value = 1 Then
        Tabelle4.Range("B17").Value = 0
        MBScrolling.State = msoButtonUp
        MBScrollingChart.State = msoButtonUp
    Else
        Tabelle4.Range("B17").Value = 1
        MBScrolling.State = msoButtonDown
        MBScrollingChart.State = msoButtonDown
    End If
End Sub
Sub mMesswerte()
'Stop
    SetMBButtons (Messwerte)
    If anzahlmerkmale = 0 Then 'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If
    
    blattunprotect

    If ActiveSheet.index <> Messwerte Then
        Sheets(Messwerte).Visible = True
        ActiveSheet.Visible = False
        Sheets(Messwerte).Activate
    End If
    
    If plotindex >= 0 Then
        ZeichneIst
    End If
    
    blattprotect
End Sub
Sub mAbweichung()
    SetMBButtons (Abweichungen)

    If anzahlmerkmale = 0 Then    'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If
    
    blattunprotect

    If ActiveSheet.index <> Abweichungen Then
        Sheets(Abweichungen).Visible = True
        ActiveSheet.Visible = False
        Sheets(Abweichungen).Activate
    End If
    
    If plotindex >= 0 Then
        ZeichneAbweichung
    End If
    
    blattprotect
End Sub


Private Sub MerkmaleGeklickt()
    Dim i As Integer
    blattunprotect
    plotindex = Application.CommandBars.ActionControl.Parameter
    
    For i = 1 To MBElemente.Controls.Count
        MBElemente.Controls(i).State = msoButtonUp
        MBElementeChart.Controls(i).State = msoButtonUp
    Next i
    MBElemente.Controls(plotindex + 1).State = msoButtonDown
    MBElementeChart.Controls(plotindex + 1).State = msoButtonDown
    
    If ActiveSheet.index = Messwerte Then
        ZeichneIst
    End If
    
    If ActiveSheet.index = Abweichungen Then
        ZeichneAbweichung
    End If
    If ActiveSheet.index = Verteilung Then
        ZeichneKlassen (plotindex)
    End If
    
    blattprotect
End Sub


Sub mMessprotokoll()
    SetMBButtons (Protokoll)

    blattunprotect
    
    If ActiveSheet.index <> Protokoll Then
        ProtSheet.Visible = True
        ActiveSheet.Visible = False
        ProtSheet.Activate
        ProtSheet.Range("A1").Select

    End If
    
    clear_cells
    
    blattprotect
End Sub

Sub mAutoSPC()
    SetMBButtons (AutoSPC)

   If anzahlmerkmale = 0 Then    'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If
    
    blattunprotect
    If ActiveSheet.index <> AutoSPC Then
        Sheets(AutoSPC).Visible = True
        ActiveSheet.Visible = False
        Sheets(AutoSPC).Activate
        
    End If
    CalcAutoSPC
    
    blattprotect
End Sub

Sub mAutoSPC2()
    SetMBButtons (AutoSPC2)
   If anzahlmerkmale = 0 Then    'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If
    
    blattunprotect
    If ActiveSheet.index <> AutoSPC2 Then
        Sheets(AutoSPC2).Visible = True
        ActiveSheet.Visible = False
        Sheets(AutoSPC2).Activate
        
    End If
    CalcAutoSPC2
    
    blattprotect
End Sub

Sub mAutoSPC3()

   SetMBButtons (AutoSPC3)
   If anzahlmerkmale = 0 Then    'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If

    blattunprotect
'    Stop
    If ActiveSheet.index <> AutoSPC3 Then
        Sheets(AutoSPC3).Visible = True
        ActiveSheet.Visible = False
        Sheets(AutoSPC3).Activate

    End If
    CalcAutoSPC3

    blattprotect
End Sub

Sub mAutoSPC4()

   SetMBButtons (AutoSPC4)
   If anzahlmerkmale = 0 Then    'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If

    blattunprotect
'    Stop
    If ActiveSheet.index <> AutoSPC4 Then
        Sheets(AutoSPC4).Visible = True
        ActiveSheet.Visible = False
        Sheets(AutoSPC4).Activate

    End If
    CalcAutoSPC4

    blattprotect
End Sub

Public Sub MenuesEntfernen()
Application.CommandBars(1).Reset
Application.CommandBars(2).Reset
End Sub

Sub mVerteilung()
    SetMBButtons (Verteilung)

   If anzahlmerkmale = 0 Then    'Keine Merkmale -> Keine Diagramme
        Exit Sub
    End If
    
    blattunprotect
    If ActiveSheet.index <> Verteilung Then
        Sheets(Verteilung).Visible = True
        ActiveSheet.Visible = False
        Sheets(Verteilung).Activate
    End If
    
    If plotindex >= 0 Then
        ZeichneKlassen (plotindex)
    End If
    
    blattprotect
End Sub
Public Sub PrintOutSmth()
    ActiveSheet.PrintOut
End Sub
Sub RecalcSheet()
    If ActiveSheet.index = Messwerte Then
        ZeichneIst
    ElseIf ActiveSheet.index = Abweichungen Then
        ZeichneAbweichung
    End If
End Sub

Sub FindeErsteZeile()
    If erstezeile = 0 Then      'Nachtr|fffd|glich gestartet -> erstezeile initialisieren (=Erste Zeile in Sheet Hilfe)
        erstezeile = 1
        While Sheets(Hilfe).Range("A" & erstezeile).text <> ""
            erstezeile = erstezeile + 1
        Wend
    End If
    erstezeile = 1
End Sub
Sub DrawGrid(AktZeile As Integer, LetzteSpalte As String)
    ProtSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlDiagonalDown).LineStyle = xlNone
    ProtSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlDiagonalUp).LineStyle = xlNone
    With ActiveSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ActiveSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ActiveSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ActiveSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ActiveSheet.Range("A" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    If (LetzteSpalte >= "J") Then
    With ActiveSheet.Range("J" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
        With ActiveSheet.Range("J" & AktZeile & ":" & LetzteSpalte & AktZeile).Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    End If
End Sub
Sub AlleWerte()
    SetLetzteButtons (alle)
    blattunprotect
    Tabelle4.Range("B10").Value = 0
    Tabelle4.Range("B11").Value = 0
    RecalcSheet
    blattprotect
End Sub



Private Sub EndeExcel()
    ' Vor dem beenden wieder Protokoll aktivieren!!!
  '  Stop
    If ActiveSheet.index <> Protokoll Then
        ProtSheet.Visible = True
        ActiveSheet.Visible = False
        ProtSheet.Activate
    End If
    
    CloseAllowed = True
    Application.Quit
End Sub

Sub ZehnWerte()
    SetLetzteButtons (zehn)
    blattunprotect
    Tabelle4.Range("B10").Value = 10
    Tabelle4.Range("B11").Value = 1
    RecalcSheet
    blattprotect
End Sub

Sub FuenfundzwanzigWerte()
    SetLetzteButtons (fuenfundzwanzig)
    blattunprotect
    Tabelle4.Range("B10").Value = 25
    Tabelle4.Range("B11").Value = 1
    RecalcSheet
    blattprotect

End Sub

Sub FuenfzigWerte()
    SetLetzteButtons (fuenfzig)
    blattunprotect
    Tabelle4.Range("B10").Value = 50
    Tabelle4.Range("B11").Value = 1
    RecalcSheet
    blattprotect
End Sub

Sub HundertWerte()
    SetLetzteButtons (hundert)
    blattunprotect
    Tabelle4.Range("B10").Value = 100
    Tabelle4.Range("B11").Value = 1
    RecalcSheet
    blattprotect
End Sub
Public Sub InsertMerkmaleInMenue()
    Dim i As Integer
'   Stop
    If anzahlmerkmale = 0 Then
        Exit Sub
    End If
'    Stop
    If plotindex < 0 Then
        If MBElemente.Controls.Count > 0 Then
        For i = 1 To MBElemente.Controls.Count
            MBElemente.Controls(1).Delete
            Next i
        End If
        If MBElementeChart.Controls.Count > 0 Then
        For i = 1 To MBElementeChart.Controls.Count
            MBElementeChart.Controls(1).Delete
            Next i
        End If
        
        For i = 0 To anzahlmerkmale - 1
            With MBElemente.Controls.Add(Type:=msoControlButton, temporary:=False)
                .Caption = Merkmal(i)
                .OnAction = "MerkmaleGeklickt"
                .Parameter = i
                .Style = msoButtonCaption
                .State = msoButtonUp
            End With
            With MBElementeChart.Controls.Add(Type:=msoControlButton, temporary:=False)
                .Caption = Merkmal(i)
                .OnAction = "MerkmaleGeklickt"
                .Parameter = i
                .Style = msoButtonCaption
                .State = msoButtonUp
            End With

        Next i
'        Stop
        plotindex = 0
        MBElemente.Controls(1).State = msoButtonDown
        MBElementeChart.Controls(1).State = msoButtonDown

    End If
    
End Sub



Sub DisableControls()
With LetzteWertePopUp
.Enabled = False
End With

With LetzteWertePopUpChart
.Enabled = False
End With

With MBScrolling
.Enabled = False
End With

With MBScrollingChart
.Enabled = False
End With

' hier mach ich alles doppelt, weil thomas das auch so gemacht hat
' und der wohl schon wei|fffd|, was er tut, 29.01.07, cs
End Sub
Private Sub SetLetzteButtons(clicked As Integer)
    LetzteWertePopUp.Controls(1).State = msoButtonUp
    LetzteWertePopUpChart.Controls(1).State = msoButtonUp
    LetzteWertePopUp.Controls(2).State = msoButtonUp
    LetzteWertePopUpChart.Controls(2).State = msoButtonUp
    LetzteWertePopUp.Controls(3).State = msoButtonUp
    LetzteWertePopUpChart.Controls(3).State = msoButtonUp
    LetzteWertePopUp.Controls(4).State = msoButtonUp
    LetzteWertePopUpChart.Controls(4).State = msoButtonUp
    LetzteWertePopUp.Controls(5).State = msoButtonUp
    LetzteWertePopUpChart.Controls(5).State = msoButtonUp
    
    Select Case clicked
        Case zehn
            LetzteWertePopUp.Controls(1).State = msoButtonDown
            LetzteWertePopUpChart.Controls(1).State = msoButtonDown
        Case fuenfundzwanzig
            LetzteWertePopUp.Controls(2).State = msoButtonDown
            LetzteWertePopUpChart.Controls(2).State = msoButtonDown
        Case fuenfzig
            LetzteWertePopUp.Controls(3).State = msoButtonDown
            LetzteWertePopUpChart.Controls(3).State = msoButtonDown
        Case hundert
            LetzteWertePopUp.Controls(4).State = msoButtonDown
            LetzteWertePopUpChart.Controls(4).State = msoButtonDown
        Case alle
            LetzteWertePopUp.Controls(5).State = msoButtonDown
            LetzteWertePopUpChart.Controls(5).State = msoButtonDown
    End Select
End Sub

Private Sub SetMBButtons(clicked As Integer)
    MBProtokoll.State = msoButtonUp
    MBProtokollChart.State = msoButtonUp
    MBMesswerte.State = msoButtonUp
    MBMesswerteChart.State = msoButtonUp
    MBAbweichung.State = msoButtonUp
    MBAbweichungChart.State = msoButtonUp
    MBVerteilung.State = msoButtonUp
    MBVerteilungChart.State = msoButtonUp
    MBAutoSPC.State = msoButtonUp
    MBAutoSPCChart.State = msoButtonUp
    MBAutoSPC2.State = msoButtonUp
    MBAutoSPC2Chart.State = msoButtonUp
    MBAutoSPC3.State = msoButtonUp
    MBAutoSPC3Chart.State = msoButtonUp
    MBAutoSPC4.State = msoButtonUp
    MBAutoSPC4Chart.State = msoButtonUp
   
    Select Case clicked
        Case Protokoll
            MBProtokoll.State = msoButtonDown
            MBProtokollChart.State = msoButtonDown
        Case Messwerte
            MBMesswerte.State = msoButtonDown
            MBMesswerteChart.State = msoButtonDown
        Case Abweichungen
            MBAbweichung.State = msoButtonDown
            MBAbweichungChart.State = msoButtonDown
        Case Verteilung
            MBVerteilung.State = msoButtonDown
            MBVerteilungChart.State = msoButtonDown
        Case AutoSPC
            MBAutoSPC.State = msoButtonDown
            MBAutoSPCChart.State = msoButtonDown
         Case AutoSPC2
            MBAutoSPC2.State = msoButtonDown
            MBAutoSPC2Chart.State = msoButtonDown
         Case AutoSPC3
            MBAutoSPC3.State = msoButtonDown
            MBAutoSPC3Chart.State = msoButtonDown
         Case AutoSPC4
            MBAutoSPC4.State = msoButtonDown
            MBAutoSPC4Chart.State = msoButtonDown
            
   End Select
End Sub

Sub spalte(i2 As Integer, feld As String)
Dim i_1 As Integer, i_0 As Integer

i_1 = Int(i2 / 26)
If (i_1 = 0) Then
i_0 = i2
Else
i_0 = i2 Mod (i_1 * 26)
End If
If (i_1 = 0) Then
feld = Chr(i_0 + 65)
Else
feld = Chr(i_1 + 64) & Chr(i_0 + 65)
End If

End Sub



Sub ActPlotgrenzen(max As Double, min As Double, max1 As Double, min1 As Double)

Dim pos1 As Integer, pos2 As Integer
Dim k As Integer, i As Integer

Dim fak As Double, faktor As Double
Dim maxstr As String, minstr As String
'Stop
fak = 1
For i = 1 To 10

If (Abs(max * fak - Int(max * fak)) < 0.0001) Then
max = Int(max * fak) / fak
i = 10
Else
If (Abs(max * fak - Fix(max * fak)) < 0.0001) Then
max = Fix(max * fak) / fak
i = 10
End If
If (i = 10) Then
Exit For
End If
End If
If (Abs(min * fak - Int(min * fak)) < 0.0001) Then
min = Int(min * fak) / fak
i = 10
Else
If (Abs(min * fak - Fix(min * fak)) < 0.0001) Then
min = Int(min * fak) / fak
i = 10
End If
If (i = 10) Then
Exit For
End If
End If
fak = fak * 10
Next i

maxstr = CStr(max)
minstr = CStr(min)
pos1 = InStr(maxstr, ",")
pos2 = InStr(minstr, ",")

' suche die stelle hinter dem komma, bei der min verschieden ist von max
' schneide eine stelle vorher ab

faktor = 10
For k = 1 To 3      ' bei 4 gibt es |fffd|berlauf
If Mid(maxstr, pos1 + k, 1) <> Mid(minstr, pos2 + k, 1) Then
k = 4
Else
faktor = faktor * 10
End If
Next k

min1 = Int(min * faktor) / faktor

If (max > 0) Then
max1 = Fix((max + 1 / faktor) * faktor) / faktor
Else
max1 = Fix(max * faktor) / faktor
End If

' manchmal sind die werte dann aber zu dicht am unteren oder am oberen rand
' dann ist die einteilung nicht sch|fffd|n. nehme dann noch eine stelle hinter dem komma dazu

If (Abs(min1 - min) < 5 / faktor) Or (Abs(max1 - max) < 5 / faktor) Then
    faktor = faktor * 10
    min1 = Int(min * faktor) / faktor
    If (max > 0) Then
        max1 = Fix((max + 1 / faktor) * faktor) / faktor
    Else
        max1 = Fix(max * faktor) / faktor
    End If
End If

' wenn die abweichungen |fffd|ber gro|fffd|e distanzen gehen, habe ich die graphik nur in der mitte
' zerre also dann das ganze auseinander

If (Abs(max - min) > 1) Then
faktor = 1
'    faktor = faktor * 10
    min1 = Int(min * faktor) / faktor
    If (max > 0) Then
        max1 = Fix((max + 1 / faktor) * faktor) / faktor
    Else
        max1 = Fix(max * faktor) / faktor
    End If
End If

'wenn die werte zu dicht unten oder oben sind, verschiebe ich die grenzen

If (Abs(min1 - min) < 0.2 / faktor) Then
min1 = min1 - 1 / faktor
End If

If (Abs(max1 - max) < 0.2 / faktor) Then
max1 = max1 + 1 / faktor
End If

'und f|fffd|r gro|fffd|e distanzen noch eine sonderbehandlung
If (faktor = 1) Then
    If (Abs(min1 - min) > 0.5) Then
        min1 = min1 + 0.5
    End If

    If (Abs(max1 - max) > 0.5) Then
        max1 = max1 - 0.5
    End If
End If

End Sub

Sub ReadHeader(teil As String, teilenr As String, messm As String, kav As String)

Dim text As String
Dim text1 As String
Dim text2 As String
Dim text3 As String
Dim text4 As String
Dim iende As Integer
Dim i As Integer
Dim pos As Integer

Dim found As Integer

text1 = Tabelle4.Range(lang_nr & "104")
text2 = Tabelle4.Range(lang_nr & "105")
text3 = Tabelle4.Range(lang_nr & "106")
text4 = Tabelle4.Range(lang_nr & "107")

iende = Tabelle4.Range("B8").Value
found = 0
For i = 1 To iende - 1
  If (found < 4) Then
    text = Tabelle1.Range("a" & i)
    If (InStr(text, text1)) Then
      pos = InStr(text, ":")
      teilenr = Mid(text, pos + 1, 20)
      teilenr = Trim(teilenr)
      pos = InStr(teilenr, "_")
      teilenr = Left(teilenr, pos - 1)
      found = found + 1
    Else
      If (InStr(text, text2)) Then
        pos = InStr(text, ":")
        teil = Mid(text, pos + 1, 20)
        teil = Trim(teil)
        pos = InStr(teil, "_")
        teil = Left(teil, pos - 1)
        found = found + 1
      Else
        If (InStr(text, text3)) Then
          pos = InStr(text, ":")
          messm = Mid(text, pos + 1, 20)
          messm = Trim(messm)
          pos = InStr(messm, "_")
          messm = Left(messm, pos - 1)
          found = found + 1
        Else
          If (InStr(text, text4)) Then
            pos = InStr(text, ":")
            kav = Mid(text, pos + 1, 20)
            kav = Trim(kav)
            pos = InStr(kav, "_")
            kav = Left(kav, pos - 1)
           found = found + 1
          End If
        End If
      End If
    End If
    Else
    i = iende
  End If
Next i


End Sub

Sub Farben(Bereich As String, Farbe As Long)
Dim Zellen As Range
Set Zellen = ProtSheet.Range(Bereich)
    Zellen.Interior.Color = Farbe
    
End Sub

Sub test()

ActiveChart.Shapes.AddTextbox(msoTextOrientationHorizontal, _
    100, 100, 200, 50) _
    .TextFrame.Characters.text = "Test Box"
End Sub





INQUEST-PP=macro
