Attribute VB_Name = "ClssCutCopyPaste"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private WithEvents CopyCtl As CommandBarButton
Attribute CopyCtl.VB_VarHelpID = -1
Private WithEvents CutCtl As CommandBarButton
Attribute CutCtl.VB_VarHelpID = -1
Private WithEvents PasteCtl As CommandBarButton
Attribute PasteCtl.VB_VarHelpID = -1
Public WithEvents TxtBox  As msforms.TextBox
Attribute TxtBox.VB_VarHelpID = -1

Private Sub CopyCtl_Click _
(ByVal Ctrl As Office.CommandBarButton, CancelDefault As Boolean)
    SendKeys ("^{C}")
End Sub

Private Sub CutCtl_Click _
(ByVal Ctrl As Office.CommandBarButton, CancelDefault As Boolean)
    SendKeys ("^{X}")
End Sub

Private Sub PasteCtl_Click _
(ByVal Ctrl As Office.CommandBarButton, CancelDefault As Boolean)
    SendKeys ("^{V}")
End Sub


Private Sub TxtBox_MouseUp _
(ByVal Button As Integer, ByVal Shift As Integer, _
ByVal X As Single, ByVal Y As Single)

    Dim oCmbar As CommandBar
    
    If Button = 2 Then
        Set oCmbar = Application.CommandBars.Add _
        (Position:=msoBarPopup, temporary:=True)
        Set CopyCtl = oCmbar.Controls.Add(msoControlButton)
        Set CutCtl = oCmbar.Controls.Add(msoControlButton)
        Set PasteCtl = oCmbar.Controls.Add(msoControlButton)
        
        With CopyCtl
            .Style = msoButtonIconAndCaption
            .FaceId = 19
            .Caption = "Copy"
        End With
        With CutCtl
            .Style = msoButtonIconAndCaption
            .FaceId = 21
            .Caption = "Cut"
        End With
        With PasteCtl
            .Style = msoButtonIconAndCaption
            .FaceId = 22
            .Caption = "Paste"
        End With
        
        oCmbar.ShowPopup
        oCmbar.Delete
    End If

End Sub

Attribute VB_Name = "Module1"
Sub KillForm()
Unload UserForm2
UserForm1.Show
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
UserForm2.Show
End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{D38025BD-DF4B-4053-81AC-9B24D9D02DE5}{F5315C8C-9248-42EF-AA90-32B18DE1907A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'API function to change the state of a specified window
#If VBA7 Then
Private Declare PtrSafe Function apiShowWindow Lib "user32" _
    Alias "ShowWindow" (ByVal hwnd As Long, _
          ByVal nCmdShow As Long) As Long
#Else
Private Declare Function apiShowWindow Lib "user32" _
    Alias "ShowWindow" (ByVal hwnd As Long, _
          ByVal nCmdShow As Long) As Long
#End If

'constant values to instruct the API how to change the window state
Const SW_HIDE = 0
Const SW_SHOWNORMAL = 1
Const SW_SHOWMINIMIZED = 2
Const SW_SHOWMAXIMIZED = 3
Dim Stopya As String
Dim IntFn As String

Private oCol As Collection

Private Sub UserForm_Initialize()

    Dim oCCPClass As ClssCutCopyPaste
    
    Set oCol = New Collection
    
    Dim oCtl As Control
        For Each oCtl In Me.Controls
            If TypeOf oCtl Is msforms.TextBox Then
                Set oCCPClass = New ClssCutCopyPaste
               Set oCCPClass.TxtBox = oCtl
                oCol.Add oCCPClass
            End If
        Next
    
End Sub

Private Sub CommandButton1_Click()
'Created by Jackass5 - a Forocable.com Member
'Sheet1.Cells.Clear
Stopya = 0
Dim Final As Integer
'Dim Nodo$
'    Nodo = InputBox("Escriba el comienzo del ip address del nodo. Solo se permite un subnet de 255.255.255.0. Escriba por ejemplo: 1.2.3.x ***Escriba hasta la x, sino no funcionara***", "Nodo")
'Dim TheAnsweri$
'    TheAnsweri = InputBox("Escribe el comienzo del rango", "IP Range")
'Dim TheAnswero$
'    TheAnswero = InputBox("Escribe el Final del rango", "IP Range")
'Dim Pass$
'    Pass = InputBox("Password of the day", "Password of the Day")
'On Error GoTo exit_
If Cells(2, 1).Value = "" Then
MsgBox "Error|No data"
Exit Sub
End If
If TextBox5.Value = "" Then
MsgBox "Blank Password"
Exit Sub
End If
Dim URL As Range
'For Rango = TheAnsweri To TheAnswero
    Cells(1, 1).Value = "IP ADDRESS"
    Cells(1, 2).Value = "Download"
    Cells(1, 3).Value = "Upload"
    Cells(1, 4).Value = "Config File"
    Cells(1, 5).Value = "Errores"
'    Cells(TheAnswero - TheAnsweri - TheAnswero + Rango + 2, 1).Value = Left(Nodo, Len(Nodo) - 1) & Rango
'Next Rango
Range("A1:E1").Interior.Color = RGB(200, 160, 35)
For Each URL In Range("A2:A" & Range("A1").End(xlDown).Row)
Dim a As String
    'TextBox6.Value
     Label11.Caption = "Getting Data " & URL & " ..."
    'Sleep 50
    Set IE = CreateObject("InternetExplorer.Application")
    With IE
        .Visible = False
        .navigate URL & "/cgi-bin/adv_pwd_cgi"
        Application.Wait Time + TimeSerial(0, 0, 3)
                
On Error Resume Next
X = 0
For Each mitem In IE.document.all
mitem.Value = "x"
X = X + 1
Next

X = 0
For Each mitem In IE.document.all
If X = "Submit" Then
mitem.Click
Exit For
End If

Next
        .document.all.Item("pwd").Value = TextBox5.Value
        .document.forms(0).submit
        .document.forms(0).submit
        .document.forms(0).submit
        .document.forms(0).submit
        Application.Wait Time + TimeSerial(0, 0, 1)
        .navigate URL & "/cgi-bin/config_params_cgi"
        Application.Wait Time + TimeSerial(0, 0, 2)
        'Dim Doc As HTMLDocument
        Set Doc = IE.document
        Dim uDD As String
        Dim dDD As String
        Dim config As String
        config = Trim(Doc.getElementsByTagName("table")(0).innerText)
        uDD = Trim(Doc.getElementsByTagName("pre")(0).innerText)
        dDD = Trim(Doc.getElementsByTagName("pre")(0).innerText)
        config = Split(config, "tftp://10.229.198.80/")(1)
        config = Split(config, "MTA")(0)
        config = Split(config, Chr(13))(0)
        'uDD = Trim(Doc.getElementsByTagName("pre")(0).innerText)
        uDD = Split(uDD, "UpstreamServiceFlow =")(1)
        uDD = Split(uDD, "SfMaxTrafficRate = ")(1)
        uDD = Split(uDD, "SfMax")(0)
        uDD = Split(uDD, Chr(13))(0)
        'dDD = Trim(Doc.getElementsByTagName("pre")(0).innerText)
        dDD = Split(dDD, "DownstreamServiceFlow =")(1)
        dDD = Split(dDD, "SfMaxTrafficRate = ")(1)
        dDD = Split(dDD, "SfMax")(0)
        dDD = Split(dDD, Chr(13))(0)
        If uDD = "" Then
        Cells(c + 2, 5).Value = "Bad Password/No es un Arris/Not Reachable"
        Else
            Cells(c + 2, 3).Value = Left((uDD / 1048576), 5) & "Mbps"
        End If
        If dDD = "" Then
        Z = 2
        Else
            Cells(c + 2, 2).Value = Left((dDD / 1048576), 5) & "Mbps"
        End If
        If InStr(config, "cm") = 1 Then
        Cells(c + 2, 4).Value = Trim(config)
        Else
            Z = 3
        End If
        dDD = ""
        uDD = ""
        config = ""
        c = c + 1
        .Quit
        Application.StatusBar = False
        End With
        DoEvents
        If Stopya = 1 Then Exit For
Next
exit_:

  ' Inform about error
  If Err.Number <> 13 Then
    GoTo final_
  Else
    ' Clear StatusBar
    Application.StatusBar = False
    MsgBox "No ha ingresado la data correctamente." & Chr(13) & "Intente de Nuevo", , "ERROR"
    Err.Number = 0
    GoTo final2_
    End If
  
final_:
Final = MsgBox("PROCESO COMPLETADO" & Chr(13) & "::Created by Jackass5 || Forocable.com", vbOKOnly, "Finished | Gracias")
final2_:
Unload UserForm1
End Sub
'Created by Jackass5 - a Forocable.com MemberEnd Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
     
    Target.Value = IIf(Target.Value = "", "", IIf(Target.Value = "", "s", Target.Value))
    Cancel = True
    MsgBox "Sorry, Right Click Disabled"
End Sub

Private Sub CommandButton2_Click()
Cells.Clear
ListBox1.Clear
TextBox3.Value = ""
TextBox4.Value = ""
TextBox5.Value = ""
Exit Sub
End Sub

Private Sub CommandButton3_Click()
Dim ArrIPb() As String
Dim ArrIPe() As String
Dim intFirst As Integer
Dim intSecond As Integer
Dim intThird As Integer
Dim intFourth As Integer
Dim IPAddress$, BitMask%, IPSubnetCalc$, IPandMaskInput$
Dim IPOctet1%, IPOctet2%, IPOctet3%, IPOctet4%
Dim MaskOctet1%, MaskOctet2%, MaskOctet3%, MaskOctet4%
Dim Dot1%, Dot2%, Dot3%, Slash1%
Dim IPNetwork1BIN$, IPNetwork2BIN$, IPNetwork3BIN$, IPNetwork4BIN$
IPandMaskInput = TextBox3.Value
If IPandMaskInput = "" Then
MsgBox "No haz ingresado nada"
Exit Sub
End If
IntIPb = Split(IPandMaskInput, "/")(0)
IntIPe = TextBox4.Value
If IntIPe = "" Then
    If InStr(1, IPandMaskInput, "/") Then
    GoTo checkip_
    Else
    MsgBox "End Range Empty"
    End If
Exit Sub
End If
If InStr(1, IPandMaskInput, "/") Then
GoTo checkip_
Else
GoTo skipip_
End If

checkip_:
On Error Resume Next

Dot1 = InStr(1, IPandMaskInput, ".")
Dot2 = InStr(Dot1 + 1, IPandMaskInput, ".")
Dot3 = InStr(Dot2 + 1, IPandMaskInput, ".")
Slash1 = InStr(1, IPandMaskInput, "/")

''Check Basic Format
If Dot1 = 0 Or Dot2 = 0 Or Dot3 = 0 Or Slash1 = 0 Then
    IPSubnetCalc = "Incorrect Format"
    MsgBox IPSubnetCalc
    Exit Sub
End If

''Split IP into 8bit Octets
IPOctet1 = Mid(IPandMaskInput, 1, Dot1 - 1)
IPOctet2 = Mid(IPandMaskInput, Dot1 + 1, Dot2 - Dot1 - 1)
IPOctet3 = Mid(IPandMaskInput, Dot2 + 1, Dot3 - Dot2 - 1)
IPOctet4 = Mid(IPandMaskInput, Dot3 + 1, Slash1 - Dot3 - 1)
BitMask = Right(IPandMaskInput, Len(IPandMaskInput) - Slash1)

If IPOctet1 > 255 Or IPOctet2 > 255 Or IPOctet3 > 255 Or IPOctet4 > 255 Then
    IPSubnetCalc = "Value Error, Octet > 255"
    MsgBox IPSubnetCalc
    Exit Sub
End If
If IPOctet1 < 0 Or IPOctet2 < 0 Or IPOctet3 < 0 Or IPOctet4 < 0 Then
    IPSubnetCalc = "Value Error, Octet < 0"
    Exit Sub
End If
If BitMask < 8 Or BitMask > 32 Or BitMask = 31 Then
    IPSubnetCalc = "Bitmask Error : Range 8 - 32, Excl. 31"
    MsgBox IPSubnetCalc
    Exit Sub
End If

BuildBIN = ""
    For iCounter = 1 To 32
        If iCounter <= BitMask Then
            BuildBIN = BuildBIN & "1"
        Else
            BuildBIN = BuildBIN & "0"
        End If
    Next
    MaskOctet1BIN = Mid(BuildBIN, 1, 8)
    MaskOctet2BIN = Mid(BuildBIN, 9, 8)
    MaskOctet3BIN = Mid(BuildBIN, 17, 8)
    MaskOctet4BIN = Mid(BuildBIN, 25, 8)

    IPOctet1BIN = Application.WorksheetFunction.Dec2Bin(IPOctet1, 8)
    IPOctet2BIN = Application.WorksheetFunction.Dec2Bin(IPOctet2, 8)
    IPOctet3BIN = Application.WorksheetFunction.Dec2Bin(IPOctet3, 8)
    IPOctet4BIN = Application.WorksheetFunction.Dec2Bin(IPOctet4, 8)

''AND Binary Expressions.

    IPNetwork1BIN = ""
    IPNetwork2BIN = ""
    IPNetwork3BIN = ""
    IPNetwork4BIN = ""

    For iCounter = 1 To 8

        If Mid(MaskOctet1BIN, iCounter, 1) And Mid(IPOctet1BIN, iCounter, 1) Then
            IPNetwork1BIN = IPNetwork1BIN & "1"
        Else
            IPNetwork1BIN = IPNetwork1BIN & "0"
        End If

        If Mid(MaskOctet2BIN, iCounter, 1) And Mid(IPOctet2BIN, iCounter, 1) Then
            IPNetwork2BIN = IPNetwork2BIN & "1"
        Else
            IPNetwork2BIN = IPNetwork2BIN & "0"
        End If

        If Mid(MaskOctet3BIN, iCounter, 1) And Mid(IPOctet3BIN, iCounter, 1) Then
            IPNetwork3BIN = IPNetwork3BIN & "1"
        Else
            IPNetwork3BIN = IPNetwork3BIN & "0"
        End If

        If Mid(MaskOctet4BIN, iCounter, 1) And Mid(IPOctet4BIN, iCounter, 1) Then
            IPNetwork4BIN = IPNetwork4BIN & "1"
        Else
            If iCounter = 8 Then
                IPNetwork4BIN = IPNetwork4BIN & "1"
            Else
                IPNetwork4BIN = IPNetwork4BIN & "0"
            End If
        End If

    Next

    MaskOctet1 = Application.WorksheetFunction.Bin2Dec(IPNetwork1BIN)
    MaskOctet2 = Application.WorksheetFunction.Bin2Dec(IPNetwork2BIN)
    MaskOctet3 = Application.WorksheetFunction.Bin2Dec(IPNetwork3BIN)
    MaskOctet4 = Application.WorksheetFunction.Bin2Dec(IPNetwork4BIN)

    IntIPb = MaskOctet1 & "." & MaskOctet2 & "." & MaskOctet3 & "." & MaskOctet4
    

''High IP Dot Dec
    BuildBIN = ""
    For iCounter = 1 To 32
        If iCounter <= BitMask Then
            BuildBIN = BuildBIN & "1"
        Else
            BuildBIN = BuildBIN & "0"
        End If
    Next
    MaskOctet1BIN = Mid(BuildBIN, 1, 8)
    MaskOctet2BIN = Mid(BuildBIN, 9, 8)
    MaskOctet3BIN = Mid(BuildBIN, 17, 8)
    MaskOctet4BIN = Mid(BuildBIN, 25, 8)

    IPOctet1BIN = Application.WorksheetFunction.Dec2Bin(IPOctet1, 8)
    IPOctet2BIN = Application.WorksheetFunction.Dec2Bin(IPOctet2, 8)
    IPOctet3BIN = Application.WorksheetFunction.Dec2Bin(IPOctet3, 8)
    IPOctet4BIN = Application.WorksheetFunction.Dec2Bin(IPOctet4, 8)


''Create Full IP as Binary

    IPFullBIN = IPOctet1BIN & IPOctet2BIN & IPOctet3BIN & IPOctet4BIN

    BuildBIN = ""

    For iCounter = 1 To 32
        If iCounter <= BitMask Then
            BuildBIN = BuildBIN & Mid(IPFullBIN, iCounter, 1)
        Else
            If iCounter = 32 Then
                BuildBIN = BuildBIN & "0"
            Else
                BuildBIN = BuildBIN & "1"
            End If
        End If
    Next


    MaskOctet1 = Application.WorksheetFunction.Bin2Dec(Mid(BuildBIN, 1, 8))
    MaskOctet2 = Application.WorksheetFunction.Bin2Dec(Mid(BuildBIN, 9, 8))
    MaskOctet3 = Application.WorksheetFunction.Bin2Dec(Mid(BuildBIN, 17, 8))
    MaskOctet4 = Application.WorksheetFunction.Bin2Dec(Mid(BuildBIN, 25, 8))

    IntIPe = MaskOctet1 & "." & MaskOctet2 & "." & MaskOctet3 & "." & MaskOctet4
   
skipip_:

ArrIPb = Split(IntIPb, ".")
ArrIPe = Split(IntIPe, ".")

If ArrIPb(2) = ArrIPe(2) Then
Else
    ArrIPe(3) = "255"
End If
If Cells(2, 1).Value = "" Then
    Cells(2, 1).Select
Else
    ActiveCell.Offset(0, 0).Select
End If
For intFirst = ArrIPb(0) To ArrIPe(0)
    For intSecond = ArrIPb(1) To ArrIPe(1)
        If intSecond > ArrIPb(1) Then
            ArrIPb(2) = "0"
            End If
            If intSecond = ArrIPe(1) And intFirst = ArrIPe(0) Then
            ArrIPe = Split(IntIPe, ".")
            Else
            ArrIPe(2) = "255"
            End If
            If ArrIPb(2) = "0" Then
            ArrIPb(3) = "0"
            End If
        For intThird = ArrIPb(2) To ArrIPe(2)
            If intThird > ArrIPb(2) Then
            ArrIPb(3) = "0"
            End If
            If intThird = ArrIPe(2) And intSecond = ArrIPe(1) Then
            ArrIPe = Split(IntIPe, ".")
            Else
            ArrIPe(3) = "255"
            End If
            For intFourth = ArrIPb(3) To ArrIPe(3)
                IPa = intFirst & "." & intSecond & "." & intThird & "." & intFourth
                Selection.Value = IPa
                ActiveCell.Offset(1, 0).Select
            Next intFourth
        Next intThird
    Next intSecond
Next intFirst
If IPa = "" Then
MsgBox "Rango Invalido"
Else
    With ListBox1
    .AddItem IntIPb & "-" & IPa
    End With
End If
End Sub
Private Sub CommandButton4_Click()
If ListBox1.ListIndex < 0 Then
        MsgBox "Please Select a Range First"
        Exit Sub
End If
Borra = Split(ListBox1.Value, "-")(0)
BorraE = Split(ListBox1.Value, "-")(1)
Borra1 = Split(Borra, ".")
BorraE1 = Split(BorraE, ".")

    'THIS DELETES ALL ROWS WHERE THE VALUE IN COLUMN B IS "X"
    Dim FoundCell As Range
    Application.ScreenUpdating = False
For RangoA = Borra1(0) To BorraE1(0)
    For RangoB = Borra1(1) To BorraE1(1)
        For RangoC = Borra1(2) To BorraE1(2)
            For RangoD = Borra1(3) To BorraE1(3)
            Set FoundCell = Range("A:A").Find(what:=RangoA & "." & RangoB & "." & RangoC & "." & RangoD)
            FoundCell.EntireRow.Delete
            Next RangoD
        Next RangoC
    Next RangoB
Next RangoA
Application.Wait Time + TimeSerial(0, 0, 4)
If ListBox1.ListIndex >= 0 Then
        ListBox1.RemoveItem ListBox1.ListIndex
    End If
End Sub

Private Sub CommandButton5_Click()
Stopya = 1
End Sub

'Private Sub UserForm_Activate()
'    'the API returns 'FALSE' if the call fails
'    If Not apiShowWindow(Application.hwnd, SW_HIDE) = False Then Exit Sub
'    MsgBox "Error when hiding application window"
'End Sub
Private Sub UserForm_Deactivate()
    'unhide the application
    Application.DisplayAlerts = False
ActiveWorkbook.SaveAs Filename:=ThisWorkbook.Path & "\Resultados.xlsx", FileFormat:=51
Application.DisplayAlerts = True
Application.Visible = True
Set oCol = Nothing
Application.Quit
If Application.Workbooks.Count = 1 Then
Else
ThisWorkbook.Close
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Application.DisplayAlerts = False
ActiveWorkbook.SaveAs Filename:=ThisWorkbook.Path & "\Resultados.xlsx", FileFormat:=51
Application.DisplayAlerts = True
Application.Visible = True
Set oCol = Nothing
Application.Quit
If Application.Workbooks.Count = 1 Then
Else
ThisWorkbook.Close
End If
End Sub

Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{D2A6BFC9-83BD-42D8-B9DD-97222BC198B4}{6E8D57AE-BC60-446D-8199-B191F8DFB3C4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'API function to change the state of a specified window
#If VBA7 Then
Private Declare PtrSafe Function apiShowWindow Lib "user32" _
    Alias "ShowWindow" (ByVal hwnd As Long, _
          ByVal nCmdShow As Long) As Long
#Else
Private Declare Function apiShowWindow Lib "user32" _
    Alias "ShowWindow" (ByVal hwnd As Long, _
          ByVal nCmdShow As Long) As Long
#End If
'constant values to instruct the API how to change the window state
Const SW_HIDE = 0
Const SW_SHOWNORMAL = 1
Const SW_SHOWMINIMIZED = 2
Const SW_SHOWMAXIMIZED = 3
Private Sub UserForm_Initialize()
Application.OnTime Now + TimeValue("00:00:03"), "KillForm"
If Not apiShowWindow(Application.hwnd, SW_HIDE) = False Then Exit Sub
    MsgBox "Error when hiding application window"
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

        If CloseMode = 0 Then Cancel = True
End Sub


INQUEST-PP=macro
