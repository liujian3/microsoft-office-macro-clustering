Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "Module1"
Sub Clear()
'
' clear Macro
' Macro recorded 5/21/98 by Practitioners Publishing Company
'

'Clears entries on the Summary spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from all of the worksheets?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")

    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    
    Application.ScreenUpdating = False
    Sheet4.Select
    Call Sheet4.ClearInsurance
    Sheet5.Select
    Call Sheet5.ClearInterest
    Sheet6.Select
    Call Sheet6.ClearRent
    Sheet7.Select
    Call Sheet7.ClearTaxes
    Sheet8.Select
    Call Sheet8.ClearAdvertising
    Sheet9.Select
    Call Sheet9.ClearSupplies
    Sheet10.Select
    Call Sheet10.ClearOther
    Sheet2.Select
    Range("Analysis_Sheet").Select
    Sheet1.Select
    Range("Summary_clear").ClearContents
    Range("Summary_Sheet").Select
    Range("year_end").Value = "=PPC_GetBalanceSheetDate()"
    Range("Client").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Application.ScreenUpdating = True
End Sub
Sub Rollforward()
'
' Rollforward Macro
' Macro recorded 6/19/00 by Practitioners Publishing Company
'

'
    Dim Msg, Style, TITLE, Response
    
    Msg = "Prior period amounts will be replaced with the later period amounts " & vbCrLf
      Msg = Msg & "for all of the worksheets. Do you want to continue?"       ' Define message.
    Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
    TITLE = "PPC's Workpapers"  ' Define title.
    Response = MsgBox(Msg, Style, TITLE)
    If Response = vbCancel Then    ' User chose Cancel.
        GoTo Quit
    End If
    Sheet4.Select
    Call Sheet4.RollforwardInsurance
    Sheet5.Select
    Call Sheet5.RollforwardInterest
    Sheet6.Select
    Call Sheet6.RollforwardRent
    Sheet7.Select
    Call Sheet7.RollforwardTaxes
    Sheet8.Select
    Call Sheet8.RollforwardAdvertising
    Sheet9.Select
    Call Sheet9.RollforwardSupplies
    Sheet10.Select
    Call Sheet10.RollforwardOther
    Sheet1.Select
    Range("CurrentAssetsRoll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("CurrentAssetsPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False

    Range("CurrentAssetsCY").ClearContents
    Range("year_end").Value = "=PPC_GetBalanceSheetDate()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Range("Workpaper_Index").ClearContents
    Range("Preparer").ClearContents
    Range("Date_prepared").ClearContents
    Range("Summary_Sheet").Select
    Application.ScreenUpdating = True
Exit Sub
Quit:
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub Worksheet_Activate()
  'Range("A1").Select
'End Sub


Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearOtherQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Other worksheet before
'activating ClearOther Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Other worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet10.ClearOther
End Sub

Sub ClearOther()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Other spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet10.Range("OthInputClear").Select
    Range("OthInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub

Sub RollforwardOther()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet10.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("OthPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("OthPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("OthPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("OthPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("OthCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("OthPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("OthRollClear").Select
    Range("OthRollClear").ClearContents
    Range("A1").Select
End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearInsuranceQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Insurance worksheet before
'activating ClearInsurance Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Insurance worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet4.ClearInsurance
End Sub

Sub ClearInsurance()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Insurance spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet4.Range("InsInputClear").Select
    Range("InsInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub
Sub RollforwardInsurance()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet4.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("InsPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("InsPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("InsPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("InsPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("InsCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("InsPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("InsRollClear").Select
    Range("InsRollClear").ClearContents
    Range("A1").Select
End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearInterestQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Interest worksheet before
'activating ClearInterest Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Interest worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet5.ClearInterest
End Sub

Sub ClearInterest()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Interest spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet5.Range("IntInputClear").Select
    Range("IntInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub

Sub RollforwardInterest()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet5.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("IntPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("IntPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("IntPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("IntPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("IntCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("IntPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("IntRollClear").Select
    Range("IntRollClear").ClearContents
    Range("A1").Select
End Sub


Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearRentQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Rent worksheet before
'activating ClearRent Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Rent worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet6.ClearRent
End Sub

Sub ClearRent()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Rent spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet6.Range("RenInputClear").Select
    Range("RenInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub

Sub RollforwardRent()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet6.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("RenPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("RenPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("RenPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("RenPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("RenCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("RenPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("RenRollClear").Select
    Range("RenRollClear").ClearContents
    Range("A1").Select
End Sub

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearTaxesQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Taxes worksheet before
'activating ClearTaxes Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Taxes worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet7.ClearTaxes
End Sub

Sub ClearTaxes()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Taxes spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet7.Range("TaxInputClear").Select
    Range("TaxInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub

Sub RollforwardTaxes()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet7.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("TaxPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("TaxPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("TaxPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("TaxPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("TaxCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("TaxPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("TaxRollClear").Select
    Range("TaxRollClear").ClearContents
    Range("A1").Select
End Sub

Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearAdvertisingQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Advertising worksheet before
'activating ClearAdvertising Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Advertising worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet8.ClearAdvertising
End Sub

Sub ClearAdvertising()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Advertising spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet8.Range("AdvInputClear").Select
    Range("AdvInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub

Sub RollforwardAdvertising()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet8.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("AdvPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("AdvPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("AdvPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("AdvPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("AdvCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("AdvPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("AdvRollClear").Select
    Range("AdvRollClear").ClearContents
    Range("A1").Select
End Sub

Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearSuppliesQuestion()

'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Warns the user about deleting the Supplies worksheet before
'activating ClearSupplies Macro spreadsheet.

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the Supplies worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    Sheet9.ClearSupplies
End Sub

Sub ClearSupplies()
'
' clear Macro
' Macro recorded 5/1/2008 by Practitioners Publishing Company
'

'Clears entries on the Supplies spreadsheet.
    
    Application.ScreenUpdating = False
    Sheet9.Range("SupInputClear").Select
    Range("SupInputClear").ClearContents
    Range("A1").Select
    Application.ScreenUpdating = True
End Sub

Sub RollforwardSupplies()
'
' Rollforward Macro
' Macro recorded 5/3/08 by Practitioners Publishing Company
'

    Sheet9.Select
    If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    End If
    Range("SupPY2Roll").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("SupPY3").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("SupPY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("SupPY2").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("SupCY").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("SupPY").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Range("SupRollClear").Select
    Range("SupRollClear").ClearContents
    Range("A1").Select
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
