Attribute VB_Name = "Module1"
Option Explicit
#If VBA7 Then
     Private Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
     Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

Sub xWorkbook_Open()
    Dim sExeName As String
    Static sCallerApp As String: If sCallerApp <> "" Then Exit Sub    'To run only one time mainly from WindowActivate event
    Dim sAppVersion As String
    Dim App_hWnd As Long
    Dim sCallerAddIn As String: Stop    'To edit and debug if "Lock project for viewing" option is not selected.

    If Dir(ThisWorkbook.Path & "\OfficeSpellNumber.exe") <> "" Then sExeName = "OfficeSpellNumber.exe"
    If sExeName = "" And Dir(ThisWorkbook.Path & "\ExcelSpellNumber.exe") <> "" Then sExeName = "ExcelSpellNumber.exe"
    If sExeName = "" Then ThisWorkbook.Close False: Exit Sub
    
    sCallerApp = Application.Name
    sAppVersion = Application.Version
    App_hWnd = fGetApp_hWnd
    sCallerAddIn = ThisWorkbook.FullName

    Shell ThisWorkbook.Path & "\" & sExeName & " cmd/load" & _
          " /sCallerApp:=" & sCallerApp & _
          " /sAppVersion:=" & sAppVersion & _
          " /App_hWnd:=" & App_hWnd & _
          " /sCallerAddIn:=" & sCallerAddIn
End Sub

Private Function fGetApp_hWnd() 'As Variable because can be Long or LongPtr in Office 64-bit
    Dim sClassByVer As String
    Dim dHostAppVer As Double

    dHostAppVer = Val(Application.Version)
    sClassByVer = "XLMain"

    On Error Resume Next
    If dHostAppVer > 9 Then fGetApp_hWnd = Application.Hwnd: Exit Function
    If Application.Windows.Count > 0 Then
        fGetApp_hWnd = FindWindow(sClassByVer, Application.Caption & " - " & Application.ActiveWindow.Caption)
        If fGetApp_hWnd = 0 Then fGetApp_hWnd = FindWindow(sClassByVer, Application.ActiveWindow.Caption & " - " & Application.Caption)
    End If
    If fGetApp_hWnd = 0 Then fGetApp_hWnd = FindWindow(sClassByVer, Application.Caption)
    If fGetApp_hWnd = 0 Then fGetApp_hWnd = FindWindow(sClassByVer, vbNullString)
    Err.Clear
End Function

Private Sub Editada()
    Dim AddInTitle As String
    Dim AddInComm As String
    
    AddInTitle = "Orlando's ExcelSpellNumber"
    AddInComm = "Popup SpellNumber for Excel |fffd| 2001-" & Right(Year(Now), 2) & " by Francisco Orlando Magalh|fffd|es Filho"
    
    ThisWorkbook.BuiltinDocumentProperties("Title") = AddInTitle
    ThisWorkbook.BuiltinDocumentProperties("Comments") = AddInComm
    ThisWorkbook.IsAddin = True
    ThisWorkbook.Save
End Sub



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Public WithEvents HostApp As Excel.Application
Attribute HostApp.VB_VarHelpID = -1

Private Sub Workbook_Open()
    Set HostApp = Application
End Sub

Private Sub HostApp_WindowActivate(ByVal Wb As Workbook, ByVal Wn As Window)
    If Wb.Name Like "Instl_ExcelSpellNumber.*" Then On Error Resume Next: ThisWorkbook.Close False: Exit Sub      'If active wb is the insaller, exit but before unloding if was loaded
    xWorkbook_Open
End Sub

Private Sub Workbook_AddinInstall()
    If Not ActiveWorkbook Is Nothing Then If ActiveWorkbook.Name Like "Instl_ExcelSpellNumber.*" Then On Error Resume Next: ThisWorkbook.Close False: Exit Sub      'If active wb is the insaller, exit but before unloding if was loaded
    xWorkbook_Open
End Sub



INQUEST-PP=macro
