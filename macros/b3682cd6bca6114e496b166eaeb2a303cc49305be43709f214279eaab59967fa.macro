Attribute VB_Name = "Module1"
Sub Sign()
Dim tempsig As String

With ActiveDocument.ComboBox1
If .Value = "Daniel F. Murphy, M.D." Then
    tempsig = "DigSig_164.jpg"
    ElseIf .Value = _
        "Robert A. Wainer, M.D." Then tempsig = "DigSig_165.jpg"
        ElseIf .Value = _
        "Anna Voytek, M.D." Then tempsig = "DigSig_162.jpg"
            ElseIf .Value = _
            "James S. Kramer, M.D." Then tempsig = "DigSig_167.jpg"
                ElseIf .Value = _
                "Timothy R. Draper, D.O." Then tempsig = "DigSig_163.jpg"
                      ElseIf .Value = "James M. Owens, PA-C" _
                        Then tempsig = "DigSig_166.jpg"
                            ElseIf .Value = "Kirstin A. Shepperson, PA-C" _
                            Then tempsig = "DigSig_187.jpg"
                                ElseIf .Value = "Joshua Landau, M.D." _
                                Then tempsig = "DigSig_314.jpg"
                                    ElseIf .Value = "Justin C. Chandler, M.D." _
                                    Then tempsig = "DigSig_389.jpg"
                                        ElseIf .Value = "Mark L. Dumonski, M.D." _
                                        Then tempsig = "DigSig_390.jpg"
                                            Else
                                            GoTo a
End If
End With
    
On Error GoTo a
With Selection
    .GoTo What:=wdGoToBookmark, Name:="Sig"
    .InlineShapes.AddPicture fileName:= _
        "\\srsp1\SRSServer\WWW\SRSFreedom\DigSigs\" & tempsig _
        , LinkToFile:=False, SaveWithDocument:=True
'    .InlineShapes.AddPicture fileName:= _
        "\\Srs1\Files\Clients\Southeastern Orthopaedic Specialists, P.A\Murphy Wainer\" & tempsig _
        , LinkToFile:=False, SaveWithDocument:=True
End With
a:
End Sub
Sub DoctorLname()   'Added by Wilson Li for Cardiology Associates - Norwich
Dim DrLname As String

Select Case tempsig
    Case Is = "DigSig_93.jpg"
        DrLname = "Brennan "
    Case Is = "DigSig_11.jpg"
        DrLname = "Foley "
    Case Is = "DigSig_72.jpg"
        DrLname = "Fucci "
    Case Is = "DigSig_84.jpg"
        DrLname = "Hasan "
    Case Is = "DigSig_12.jpg"
        DrLname = "Healy "
    Case Is = "DigSig_62.jpg"
        DrLname = "Li "
    Case Is = "DigSig_85.jpg"
        DrLname = "Niedelman "
    Case Is = "DigSig_8.jpg"
        DrLname = "Seltzer "
    Case Is = "DigSig_38.jpg"
        DrLname = "Stefanski "
    Case Else
        GoTo a
End Select
ActiveDocument.CustomDocumentProperties("Document Name") = DrLname & "Cardiac Event Monitoring"
a:
End Sub
Sub SaveinSRS()
'
    Application.ScreenUpdating = False
    Dim tempdate As String
    Dim TempShared As String
    Dim TempFname As String
    Dim TFilename As String
    Dim TTab, TRecID, TMsg, TMsg1, TMsg2 As String
    Dim TPAth As String
    TTab = ActiveDocument.CustomDocumentProperties("TabID")
    TRecID = ActiveDocument.CustomDocumentProperties("RecipientID")
    TMsg = ActiveDocument.CustomDocumentProperties("Message Body")
    TMsg1 = ActiveDocument.CustomDocumentProperties("Message Subject")
    TMsg2 = ActiveDocument.CustomDocumentProperties("Message Priority")
    TempFname = ActiveDocument.CustomDocumentProperties("Document Name")
    TPAth = ActiveDocument.CustomDocumentProperties("PollingPath w/o Msg")
    
    TempShared = gsSharedID
    If Right(TempShared, 1) = Chr(13) Or Right(TempShared, 1) = Chr(11) Then
           TempShared = Left(TempShared, Len(TempShared) - 1)
           End If
    If TempShared = "" Then
    MsgBox ("Patient needs a valid SharedID to save")
    Exit Sub
    End If
    TFilename = TPAth & TempShared & "_" & TTab & "_" & TempFname & ".doc"
    If TFilename = "" Then
    MsgBox ("Path not found")
    Exit Sub
    End If
    On Error GoTo a
    ActiveDocument.SaveAs fileName:=TFilename, FileFormat:=wdFormatDocument, _
        LockComments:=False, Password:="", AddToRecentFiles:=True, WritePassword _
        :="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
        SaveNativePictureFormat:=False, SaveFormsData:=False, SaveAsAOCELetter:= _
        False
a:
If TPAth = "" Or TPAth = "[Enter polling path w/o Msg]" Then
    MsgBox ("Path has not been defined for this option, please retry")
Exit Sub
End If
Application.ScreenUpdating = True
Application.Quit
End Sub
Sub PrintSave()
'
    Application.ScreenUpdating = False
    Dim tempdate As String
    Dim TempShared As String
    Dim TempFname As String
    Dim TFilename As String
    Dim TTab, TRecID, TMsg, TMsg1, TMsg2 As String
    Dim TPAth As String
    TTab = ActiveDocument.CustomDocumentProperties("TabID")
    TRecID = ActiveDocument.CustomDocumentProperties("RecipientID")
    TMsg = ActiveDocument.CustomDocumentProperties("Message Body")
    TMsg1 = ActiveDocument.CustomDocumentProperties("Message Subject")
    TMsg2 = ActiveDocument.CustomDocumentProperties("Message Priority")
    TempFname = ActiveDocument.CustomDocumentProperties("Document Name")
    TPAth = ActiveDocument.CustomDocumentProperties("PollingPath w/o Msg")
    
    TempShared = gsSharedID ' ActiveDocument.CustomDocumentProperties("SharedID")
    If Right(TempShared, 1) = Chr(13) Or Right(TempShared, 1) = Chr(11) Then
           TempShared = Left(TempShared, Len(TempShared) - 1)
           End If
    If TempShared = "" Then
    MsgBox ("Patient needs a valid SharedID to save")
    Exit Sub
    End If
    TFilename = TPAth & TempShared & "_" & TTab & "_" & TempFname & ".doc"
    If TFilename = "" Then
    MsgBox ("Path not found")
    Exit Sub
    End If
    On Error GoTo a
    ActiveDocument.SaveAs fileName:=TFilename, FileFormat:=wdFormatDocument, _
        LockComments:=False, Password:="", AddToRecentFiles:=True, WritePassword _
        :="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
        SaveNativePictureFormat:=False, SaveFormsData:=False, SaveAsAOCELetter:= _
        False
    ActiveDocument.PrintOut
a:
If TPAth = "" Or TPAth = "[Enter polling path w/o Msg]" Then
    MsgBox ("Path has not been defined for this option, please retry")
Exit Sub
End If
Application.ScreenUpdating = True
Application.Quit
End Sub
'TFname = TPAth & TSharedID & "_" & TTab & "_" & TFilename & "_" & TRecID & "_" & TMsg & "_" & TMsg1 & "_" & TMsg2
Sub SaveandSend()
'
    Application.ScreenUpdating = False
    Dim tempdate As String
    Dim TempShared As String
    Dim TempFname As String
    Dim TFilename As String
    Dim TTab, TRecID, TMsg, TMsg1, TMsg2 As String
    Dim TPAth As String

        
    TTab = ActiveDocument.CustomDocumentProperties("TabID")
    TRecID = ActiveDocument.CustomDocumentProperties("RecipientID")
    TMsg = ActiveDocument.CustomDocumentProperties("Message Body")
    TMsg1 = ActiveDocument.CustomDocumentProperties("Message Subject")
    TMsg2 = ActiveDocument.CustomDocumentProperties("Message Priority")
    TempFname = ActiveDocument.CustomDocumentProperties("Document Name")
    TPAth = ActiveDocument.CustomDocumentProperties("PollingFolderPath")
    
    TempShared = gsSharedID 'ActiveDocument.CustomDocumentProperties("SharedID")
    If Right(TempShared, 1) = Chr(13) Or Right(TempShared, 1) = Chr(11) Then
           TempShared = Left(TempShared, Len(TempShared) - 1)
           End If
    If TempShared = "" Then
    MsgBox ("Patient needs a valid SharedID to save")
    Exit Sub
    End If
    TFilename = TPAth & TempShared & "_" & TTab & "_" & TempFname & "_" & TRecID & "_" & TMsg & "_" & TMsg1 & "_" & TMsg2 & ".doc"
    If TFilename = "" Then
    MsgBox ("Path not found")
    Exit Sub
    End If
    On Error GoTo a
    MsgBox "Saving as:" & vbcflr & TFilename
    ActiveDocument.SaveAs fileName:=TFilename, FileFormat:=wdFormatDocument, _
        LockComments:=False, Password:="", AddToRecentFiles:=True, WritePassword _
        :="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
        SaveNativePictureFormat:=False, SaveFormsData:=False, SaveAsAOCELetter:= _
        False
a:
If TPAth = "" Or TPAth = "[Enter polling path w/msg]" Then
    MsgBox ("Path has not been defined for this option, please retry")
    Exit Sub
End If
    Application.ScreenUpdating = True
    Application.Quit
End Sub

Sub SaveandPrint()
'
    Application.ScreenUpdating = False
    
    Dim TempShared As String
    Dim TempFname As String
    Dim TFilename As String
    Dim TTab, TRecID, TMsg, TMsg1, TMsg2 As String
    Dim TPAth As String
    TTab = ActiveDocument.CustomDocumentProperties("TabID")
    TRecID = ActiveDocument.CustomDocumentProperties("RecipientID")
    TMsg = ActiveDocument.CustomDocumentProperties("Message Body")
    TMsg1 = ActiveDocument.CustomDocumentProperties("Message Subject")
    TMsg2 = ActiveDocument.CustomDocumentProperties("Message Priority")
    TempFname = ActiveDocument.CustomDocumentProperties("Document Name")
    TPAth = ActiveDocument.CustomDocumentProperties("PollingFolderPath")
   
    TempShared = gsSharedID ' ActiveDocument.CustomDocumentProperties("SharedID")
    If Right(TempShared, 1) = Chr(13) Or Right(TempShared, 1) = Chr(11) Then
           TempShared = Left(TempShared, Len(TempShared) - 1)
           End If
    If TempShared = "" Then
    MsgBox ("Patient needs a valid SharedID to save")
    Exit Sub
    End If
    TFilename = TPAth & TempShared & "_" & TTab & "_" & TempFname & "_" & TRecID & "_" & TMsg & "_" & TMsg1 & "_" & TMsg2 & ".doc"
    If TFilename = "" Then
    MsgBox ("Path not found")
    Exit Sub
    End If
    On Error GoTo a
    ActiveDocument.SaveAs fileName:=TFilename, FileFormat:=wdFormatDocument, _
        LockComments:=False, Password:="", AddToRecentFiles:=True, WritePassword _
        :="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
        SaveNativePictureFormat:=False, SaveFormsData:=False, SaveAsAOCELetter:= _
        False
   ActiveDocument.PrintOut Background:=False
a:
If TPAth = "" Or TPAth = "[Enter polling path w/msg]" Then
    MsgBox ("Path has not been defined for this option, please retry")
    Exit Sub
End If
    Application.ScreenUpdating = True
    Application.Quit
End Sub
Sub ExitNoSave()
Application.Quit _
    SaveChanges:=No
End Sub

Sub PrintDoc()
ActiveDocument.PrintOut
End Sub

Sub SaveAndExit()
'Saves and exits document
ActiveDocument.Save
Application.Quit _
    SaveChanges:=Yes

End Sub
Attribute VB_Name = "ReplaceDemographics"
' Author Larry Rosner
' Copyright 2000 SRS Software Inc.

Public gsSharedID As String              ' added by B Probert Jan 22, 2010
Sub ReplaceDemographics()
Attribute ReplaceDemographics.VB_Description = "Macro created 8/4/00 by POC"
Attribute ReplaceDemographics.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.ReplaceDemographics"
On Error GoTo ErrorHandler

'check if this application is Word or Excel and set document path
' to filesdata directory directly under current document
Dim appName As String
Dim docPath As String
appName = Application.Name

docPath = getFilesDataPath

'Variable for array size and file number
Dim lastItem As Variant
Dim fileNum As Integer

'Load demographics array size
fileNum = FreeFile      ' get the next free file number
Close                   ' clear any open files
Open (docPath + "Dsize.txt") For Input As #fileNum
Line Input #fileNum, lastItem
Close

'Create Arrray of text to replace and array of demographic text
ReDim textToReplace(lastItem)
ReDim demographicText(lastItem)

Dim i As Integer
'Load demographics information from file into demographic text array
i = 1
fileNum = FreeFile      ' get the next free file number
Open (docPath & "demographics.txt") For Input As #fileNum

Do While Not EOF(fileNum)
    Line Input #fileNum, demographicText(i)
    i = i + 1
Loop

'Load replacement variables into array
i = 1
fileNum = FreeFile      ' get the next free file number
Open (docPath & "replaceVars.txt") For Input As #fileNum

Do While Not EOF(fileNum)
    Line Input #fileNum, textToReplace(i)
    i = i + 1
Loop

Close

' Loop through text to replace array and replace demographics
' Different versions for Excel and Word
Application.ScreenUpdating = False
If appName = "Microsoft Excel" Then
   DoReplaceForExcel lastItem, textToReplace, demographicText
Else
   DoReplaceForWord lastItem, textToReplace, demographicText
End If
Application.ScreenUpdating = True
'Application.ScreenRefresh


Exit Sub

' handle errors.  Do cleanup and generate error message
ErrorHandler:
    
End Sub

Sub DoReplaceForExcel(lastItem, textToReplace, demographicText)
   For i = 1 To lastItem
     Application.Columns.Replace _
       What:=textToReplace(i), Replacement:=demographicText(i), _
       SearchOrder:=xlByColumns, MatchCase:=False
   Next i
End Sub

Sub DoReplaceForWord(lastItem, textToReplace, demographicText)
    For i = 1 To lastItem
        With ActiveDocument.Content.Find
            .Text = textToReplace(i)
            .Replacement.Text = demographicText(i)
            .Execute Replace:=wdReplaceAll, Forward:=True
            
            If LCase(textToReplace(i)) = "/sharedid" Then
                gsSharedID = demographicText(i)
                ActiveDocument.CustomDocumentProperties("SharedID") = gsSharedID
            End If
        
        End With
    Next i
End Sub

Function getVersion_ReplaceDemographics() As Integer
' Returns the version of this macro file.  Update this number when this file changes.
' Use this fuction to compare version numbers on upgrades.
    getVersion_ReplaceDemographics = 1
End Function
 
 
Sub RemoveBlankAddress2()
'Replaces Blank address field

Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^l^p"
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll

End Sub

Sub PrintToDefault()

Application.PrintOut fileName:="", Range:=wdPrintAllDocument, Item:= _
        wdPrintDocumentContent, Copies:=1, Pages:="", PageType:=wdPrintAllPages, _
        Collate:=True, Background:=False, PrintToFile:=False, PrintZoomColumn:=0, _
        PrintZoomRow:=0, PrintZoomPaperWidth:=0, PrintZoomPaperHeight:=0

End Sub
Sub AutoOpen()
ReplaceDemographics
End Sub

Sub ControlM()
ReplaceDemographics
End Sub

Sub ControlShiftM()
ReplaceDemographics
RemoveBlankAddress2
End Sub

Sub ControlP()
ReplaceDemographics
InsertPictures
RemoveBlankAddress2
PrintToDefault
SaveAndExit
End Sub
Attribute VB_Name = "SrsStart"
' Utility Functions needed by SRS Macros
' Author Larry Rosner
' Copyright 2000 SRS Software Inc.

Function GetLinkedFileName() As String

Dim docName As String
appName = Application.Name
If appName = "Microsoft Excel" Then
    docName = ActiveWorkbook.Name
Else
    docName = ActiveDocument.Name
End If
 docName = docName + ".txt"

GetLinkedFileName = GetDocumentPath + getOneRecFromFile(getFilesDataPath & docName)

End Function

Function getOneRecFromFile(fileName)
'Get first line of information from file in filesdata dir under this file
Dim fileNum As Integer
fileNum = FreeFile      ' get the next free file number

Open (fileName) For Input As #fileNum

' get first linked file name from file and return it
Dim myInput As String

Line Input #fileNum, myInput
Close #fileNum

getOneRecFromFile = myInput

End Function

Function GetDocumentPath() As String

Dim docPath As String
appName = Application.Name
If appName = "Microsoft Excel" Then
    docPath = ActiveWorkbook.Path
Else
    docPath = ActiveDocument.Path
End If
GetDocumentPath = docPath + Application.PathSeparator
End Function

Function getFilesDataPath() As String
    getFilesDataPath = GetDocumentPath + "filesdata" + Application.PathSeparator
End Function
Function getDataPath() As String
    getDataPath = getOneRecFromFile(getFilesDataPath & "srsPath.txt") + Application.PathSeparator + "Data" + Application.PathSeparator
End Function
Function getMacroPath() As String
    getMacroPath = getOneRecFromFile(getFilesDataPath & "srsPath.txt") + Application.PathSeparator + "Macros" + Application.PathSeparator
End Function

Function getSignaturesPath() As String
    getSignaturesPath = getOneRecFromFile(getFilesDataPath & "srsPath.txt") + Application.PathSeparator + "Signatures" + Application.PathSeparator
End Function

Sub replaceMacroFile(fileName)
' Deletes module and replaces it from indicated file.
' Assumes fileName is the name of the module to be replaced and an attribute
' line exists in the macro file to indicate it's name.

' Continue despite errors.  A macro may not exist before loading and can not be removed
' or some Macro files we look for may not exist such as upgrades
'On Error Resume Next
appName = Application.Name
If appName = "Microsoft Excel" Then
    Set myProj = ActiveWorkbook.VBProject
Else
    Set myProj = Application.VBE.ActiveVBProject
End If

myProj.VBComponents.Remove myProj.VBComponents(fileName)
myProj.VBComponents.Import (getMacroPath + fileName + ".bas")
End Sub
Sub upgradeMacroFile(fileName As String)
' save prior version, replace the macro file, perform upgrade logic based on
' comparing the prior version to the new version.
Dim priorVer As Variant
On Error Resume Next

priorVer = Application.Run("getVersion_" + fileName)
replaceMacroFile (fileName)
Application.Run "upgrade_" & fileName, priorVer, fileName
End Sub
Function showErrDesc()
 Dim msg As String
 If Err.Number <> 0 Then
      msg = "Macro Error # " & Str(Err.Number) & " was generated by " _
                & Err.Source & "." & Chr(13) & Err.Description
          MsgBox msg, vbCritical, "Error", Err.HelpFile, Err.HelpContext
 End If
 End Function
Function getVersion_SrsStart() As Integer
' Returns the version of this macro file.  Update this number when this file changes.
' Use this fuction to compare version numbers on upgrades.
    getVersion_SrsStart = 1
End Function
' ------------------- TEST ROUTINES -------------------
Sub doTest()
    upgradeMacroFile ("TestPatch")
    'replaceMacroFile ("TestMacro")
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox1, 0, 0, MSForms, ComboBox"
Private Sub ComboBox1_Change()
Sign
'DoctorLname
End Sub

Private Sub ComboBox1_GotFocus()
With ActiveDocument.ComboBox1
    .Clear   'This removes previous entries. Of course, if you want to keep what's already there, leave out this step
    .AddItem ("Daniel F. Murphy, M.D.")  'This row is assigned key value of 0
    .AddItem ("Robert A. Wainer, M.D.")  'This row is assigned key value of 1
    .AddItem ("Anna Voytek, M.D.")
    .AddItem ("James S. Kramer, M.D.")
    .AddItem ("Timothy R. Draper, D.O.")
    .AddItem ("James M. Owens, PA-C")
    .AddItem ("Kirstin A. Shepperson, PA-C")
    .AddItem ("Joshua Landau, M.D.")
    .AddItem ("Justin C. Chandler, M.D.")
    .AddItem ("Mark L. Dumonski, M.D.")
    
    'You can add however many entries you want.
End With

End Sub


INQUEST-PP=macro
