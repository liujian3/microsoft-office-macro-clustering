Attribute VB_Name = "AcFuncs"

Option Explicit
Option Private Module

' Returns a specified string from the specified customer/supplier record
Public Function GetAcMiscStr(Company$, AcCode$, AcFlag$, WantNo%) As String
On Error GoTo GetAcMiscStr_Error
    Dim RetStr$, IntVal%
    
    AcFlag$ = UCase(AcFlag$)
    
    If ValidCompany(Company) And ValidCustCode(AcCode$, AcFlag$) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            AcCode$ = UCase(AcCode$)
            
            IntVal% = EntServer.GetAcMiscStr(Company$, AcCode$, AcFlag$, WantNo%, RetStr$)
            
            If (IntVal% > 0) Then
                Error IntVal%
            End If
        End If
    End If
       
    GoTo GetAcMiscStr_Exit
    
GetAcMiscStr_Error:
    RetStr = GetErrorStr$
     
GetAcMiscStr_Exit:
    GetAcMiscStr = RetStr
End Function


' Returns a specified integer from the specified customer/supplier account record
Public Function GetAcMiscInt(Company$, AcCode$, AcFlag$, WantNo%) As Variant
On Error GoTo GetAcMiscInt_Error
    Dim IntVal%, RetVal As Long
       
    AcFlag$ = UCase(AcFlag$)
    
    If ValidCompany(Company) And ValidCustCode(AcCode$, AcFlag$) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            AcCode$ = UCase(AcCode$)
            
            IntVal% = EntServer.GetAcMiscInt(Company$, AcCode$, AcFlag$, WantNo%, RetVal&)
            
            If (IntVal% > 0) Then
                Error IntVal%
            End If
        End If
    End If
     
    GetAcMiscInt = RetVal&
    
    GoTo GetAcMiscInt_Exit
     
GetAcMiscInt_Error:
    GetAcMiscInt = GetErrorNumStr
     
GetAcMiscInt_Exit:
     
End Function


' Returns a specified double from the specified customer/supplier record
Public Function GetAcMiscVal(Company$, AcCode$, AcFlag$, WantNo%) As Variant
On Error GoTo GetAcMiscVal_Error
    Dim IntVal%, RetVal#
    
    AcFlag$ = UCase(AcFlag$)
    
    If ValidCompany(Company) And ValidCustCode(AcCode$, AcFlag$) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            AcCode$ = UCase(AcCode$)
            
            IntVal% = EntServer.GetAcMiscVal(Company$, AcCode$, AcFlag$, WantNo%, RetVal#)
            
            If (IntVal% > 0) Then
                Error IntVal%
            End If
        End If
    End If
     
    GetAcMiscVal = RetVal#
     
    GoTo GetAcMiscVal_Exit
    
GetAcMiscVal_Error:
    GetAcMiscVal = GetErrorNumStr
    
GetAcMiscVal_Exit:
     
End Function


' Calculates an Aged Balance for a Customer/Supplier Account
Public Function CalcAccAgedBalance(Company$, AcCode$, AcType$, AgeAsAt$, AgeBy$, PeriodInterval%, WantPeriod%) As Variant
On Error GoTo CalcAccAgedBalance_Error
    Dim DblVal#, IntVal%
    Dim AgeDate As Date, VarAgeDate As Variant
    
    If ValidCompany(Company) And ValidCustCode(AcCode$, AcType$) And ValidDate(AgeAsAt$, AgeDate, 539) Then
        ' Check Ageing Units is specified correctly
        AgeBy$ = UCase$(AgeBy$)
        If (AgeBy$ <> "D") And (AgeBy$ <> "W") And (AgeBy$ <> "M") Then
            ' Invalid Aging Units
            Error 541
        End If
                
        ' Check period is specified correctly
        If (WantPeriod% < 0) Or (WantPeriod% > 4) Then
            ' Invalid Period
            Error 513
        End If
            
        ' Check PeriodInterval% is reasonable
        If (PeriodInterval% < 1) Or (PeriodInterval% > 255) Then
            ' Error months specified wrongly
            Error 542
        End If
        
        If CheckServer() Then
            Company$ = UCase(Company$)
            AcCode$ = UCase(AcCode$)
            VarAgeDate = AgeDate
            
            IntVal% = EntServer.GetCustAging(Company$, AcCode$, AcType$, AgeBy$, VarAgeDate, PeriodInterval%, WantPeriod%, DblVal#)
                      
            If (IntVal% > 0) Then
                Error IntVal%
            End If
        End If
    End If
    
    CalcAccAgedBalance = DblVal#
    
    GoTo CalcAccAgedBalance_Exit
        
CalcAccAgedBalance_Error:
    CalcAccAgedBalance = GetErrorNumStr

CalcAccAgedBalance_Exit:
    
End Function

Attribute VB_Name = "AcHist"

Option Explicit


' Gets a particular customer value
Private Function GetCustValue(ReqVal%, Company$, TheYear%, ThePeriod%, CustCode$) As Variant
On Error GoTo GetCustValue_Error
    Dim CompStr$, Ty%, Tp%, Cust$, Mode%, DblVal#, IntVal%
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCustCode(CustCode, "C") Then
        If CheckServer() Then
            CompStr$ = UCase(Company$)
            Ty% = TheYear%
            Tp% = ThePeriod%
            Cust$ = UCase(CustCode$)
            Mode = ReqVal%
            
            IntVal% = EntServer.GetCustValue(Mode%, CompStr$, Ty%, Tp%, Cust$, DblVal#)
            
            If (IntVal% > 0) Then
                Error IntVal%
            End If
        End If
    End If
    
    GetCustValue = DblVal#
    
    GoTo GetCustValue_Exit
        
GetCustValue_Error:
    GetCustValue = GetErrorNumStr

GetCustValue_Exit:

End Function


' Gets a particular supplier value
Private Function GetSuppValue(ReqVal%, Company$, TheYear%, ThePeriod%, SuppCode$) As Variant
On Error GoTo GetSuppValue_Error
    Dim CompStr$, Ty%, Tp%, Supp$, Mode%, DblVal#, IntVal%
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCustCode(SuppCode, "S") Then
        If CheckServer() Then
            CompStr$ = UCase(Company$)
            Ty% = TheYear%
            Tp% = ThePeriod%
            Supp$ = UCase(SuppCode$)
            Mode = ReqVal%
            
            IntVal% = EntServer.GetSuppValue(Mode%, CompStr$, Ty%, Tp%, Supp$, DblVal#)
            
            If (IntVal% > 0) Then
                Error IntVal%
            End If
        End If
    End If
    
    GetSuppValue = DblVal
    
    GoTo GetSuppValue_Exit
        
GetSuppValue_Error:
    GetSuppValue = GetErrorNumStr

GetSuppValue_Exit:
    
End Function


'*******************************************************************************
' Name:        EntCustBalance
' Description: Gets the customers balance
'*******************************************************************************
Public Function EntCustBalance(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustBalance = GetCustValue(0, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntCustNetSales
' Description: Gets the customers Net Sales value
'*******************************************************************************
Public Function EntCustNetSales(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustNetSales = GetCustValue(1, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntCustCosts
' Description: Gets the customers Costs value
'*******************************************************************************
Public Function EntCustCosts(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustCosts = GetCustValue(2, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntCustMargin
' Description: Gets the customers Margin value
'*******************************************************************************
Public Function EntCustMargin(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustMargin = GetCustValue(3, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntCustDebit
' Description: Gets the customers Debit value
'*******************************************************************************
Public Function EntCustDebit(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustDebit = GetCustValue(4, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntCustCredit
' Description: Gets the customers Credit value
'*******************************************************************************
Public Function EntCustCredit(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustCredit = GetCustValue(5, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntCustBudget
' Description: Gets the customers Budget
'*******************************************************************************
Public Function EntCustBudget(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustBudget = GetCustValue(6, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntSuppBalance
' Description: Gets the Suppliers balance
'*******************************************************************************
Public Function EntSuppBalance(Company As String, TheYear As Integer, ThePeriod As Integer, SuppCode As String) As Variant
    EntSuppBalance = GetSuppValue(0, Company$, TheYear%, ThePeriod%, SuppCode$)
End Function


'*******************************************************************************
' Name:        EntSuppDebit
' Description: Gets the Suppliers Debit value
'*******************************************************************************
Public Function EntSuppDebit(Company As String, TheYear As Integer, ThePeriod As Integer, SuppCode As String) As Variant
    EntSuppDebit = GetSuppValue(4, Company$, TheYear%, ThePeriod%, SuppCode$)
End Function


'*******************************************************************************
' Name:        EntSuppCredit
' Description: Gets the Suppliers Credit value
'*******************************************************************************
Public Function EntSuppCredit(Company As String, TheYear As Integer, ThePeriod As Integer, SuppCode As String) As Variant
    EntSuppCredit = GetSuppValue(5, Company$, TheYear%, ThePeriod%, SuppCode$)
End Function


'*******************************************************************************
' Name:        EntSuppBudget
' Description: Gets the Suppliers Budget
'*******************************************************************************
Public Function EntSuppBudget(Company As String, TheYear As Integer, ThePeriod As Integer, SuppCode As String) As Variant
    EntSuppBudget = GetSuppValue(6, Company$, TheYear%, ThePeriod%, SuppCode$)
End Function


'*******************************************************************************
' Name:        EntCustCommitted
' Description: Gets the Customers Committed value
'*******************************************************************************
Public Function EntCustCommitted(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustCommitted = GetCustValue(7, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntSuppCommitted
' Description: Gets the Suppliers Committed value
'*******************************************************************************
Public Function EntSuppCommitted(Company As String, TheYear As Integer, ThePeriod As Integer, SuppCode As String) As Variant
    EntSuppCommitted = GetSuppValue(7, Company$, TheYear%, ThePeriod%, SuppCode$)
End Function


'*******************************************************************************
' Name:        EntCustBudget2
' Description: Gets the customers Budget
'*******************************************************************************
Public Function EntCustBudget2(Company As String, TheYear As Integer, ThePeriod As Integer, CustCode As String) As Variant
    EntCustBudget2 = GetCustValue(9, Company$, TheYear%, ThePeriod%, CustCode$)
End Function


'*******************************************************************************
' Name:        EntSuppBudget2
' Description: Gets the Suppliers Budget
'*******************************************************************************
Public Function EntSuppBudget2(Company As String, TheYear As Integer, ThePeriod As Integer, SuppCode As String) As Variant
    EntSuppBudget2 = GetSuppValue(9, Company$, TheYear%, ThePeriod%, SuppCode$)
End Function

Attribute VB_Name = "Common"

'*********************************************************************8
'***
'*    Common Module across ALL Workbooks except EntFuncs.Xls
'***
'*********************************************************************8

Option Explicit
Option Private Module

Global EntServer As Object
Global ServerSet As Boolean


' returns True if the passed Nominal Code is valid
Public Function ValidCompany(Company$) As Boolean
    Company$ = Trim(Company$)
    
    If (Len(Company) > 0) And (Len(Company) <= 6) Then
        ValidCompany = True
    Else
        Error 516
        ValidCompany = False
    End If
End Function
 

' returns True if the passed General Ledger Code is valid
Public Function ValidGLCode(GLCode As Long) As Boolean
    If (GLCode <= 0) Then
        If (GLCode < 0) Then
            Error 511
        End If
        
        ValidGLCode = False
    Else
        ValidGLCode = True
    End If
End Function


' returns True if the passed year is valid
Public Function ValidYear(TheYear%) As Boolean
    If ((TheYear > 1900) And (TheYear < 2100)) Or (TheYear = -99) Then
        ' Actual Year or F6 Year
        ValidYear = True
    Else
        Error 512
        ValidYear = False
    End If
End Function


' returns True if the passed period is valid
Public Function ValidPeriod(ThePeriod%) As Boolean
    If ((ThePeriod >= 0) And (ThePeriod <= 99)) Or (ThePeriod = -99) Or (ThePeriod = -98) Or ((ThePeriod >= 101) And (ThePeriod <= 199)) Then
        ' Actual Period or F6 Period or CTD or CTD Period Offset
        ValidPeriod = True
    Else
        Error 513
        ValidPeriod = False
    End If
End Function


' returns True if the passed currency is valid
Public Function ValidCcy(TheCcy%) As Boolean
    If (TheCcy < 0) Or (TheCcy > 90) Then
        Error 514
        ValidCcy = False
    Else
        ValidCcy = True
    End If
End Function


' returns true if the passed customer code is valid
Public Function ValidCustCode(CustCode$, CSType$) As Boolean
    CustCode$ = Trim(UCase(CustCode$))

    If (Len(CustCode) > 0) And (Len(CustCode) <= 6) Then
        ValidCustCode = True
    Else
        ValidCustCode = False
        If (CSType$ = "C") Then
            Error 515
        Else
            Error 526
        End If
    End If
End Function

' returns True if the passed Stock Code is valid
Public Function ValidStockCode(StockCode$) As Boolean
    StockCode$ = Trim(UCase(StockCode$))
    
    ValidStockCode = True
End Function

' returns True if the passed Stock Code is valid
Public Function ValidLocation(LocCode$) As Boolean
    LocCode$ = UCase(Trim(LocCode$))
    
    If (Len(LocCode$) > 0) And (Len(LocCode$) <= 3) Then
        ValidLocation = True
    Else
        ValidLocation = False
        Error 527
    End If
End Function

' returns True if the passed Nominal Code is valid
Public Function ValidCCDep(IsCC%, ByRef CCDep$) As Boolean
    CCDep$ = UCase(Trim(CCDep$))

    If (Len(CCDep$) >= 0) And (Len(CCDep$) <= 3) Then
        ValidCCDep = True
    Else
        If IsCC% = True Then
            Error 519
        Else
            Error 520
        End If
        ValidCCDep = False
    End If
End Function


' Returns True if the passed JC Total Type is valid
Public Function ValidTotType(TType%) As Boolean
    If (TType% = 10) Or (TType% = 20) Or (TType% = 30) Or (TType% = 40) Or (TType% = 50) Or (TType% = 60) Or (TType% = 99) Or (TType% = 160) Or (TType% = 170) Or (TType% = 180) Or (TType% = 190) Then
        ValidTotType = True
    Else
        Error 531
        ValidTotType = False
    End If
End Function


' returns True if the passed Stock Code is valid
Public Function ValidJobCode(JobCode$) As Boolean
    JobCode$ = UCase(Trim(JobCode$))
    
    If (Len(JobCode$) > 0) And (Len(JobCode$) <= 10) Then
        ValidJobCode = True
    Else
        ValidJobCode = False
        Error 521
    End If
End Function


' returns True if the passed date is valid
Public Function ValidDate(TheDate$, ActDate As Date, ErrNo%) As Boolean
On Error GoTo ValidDate_Error

    If IsDate(TheDate) Then
        ValidDate = True
        ActDate = CDate(TheDate$)
    Else
        ValidDate = False
        Error ErrNo%
    End If
    
    GoTo ValidDate_Exit
    
ValidDate_Error:
    Error ErrNo%
    ValidDate = False

ValidDate_Exit:
End Function


' Validates the Posted/Committed parameter used in some JC history functions
Public Function ValidPC(PCStr$) As Boolean
    PCStr$ = UCase(PCStr$)
    
    If (Len(PCStr$) = 1) And ((Left$(PCStr$, 1) = "P") Or (Left$(PCStr$, 1) = "C")) Then
        ' 1 Char long and "P" or "C"
        ValidPC = True
    Else
        Error 533       ' Invalid Posted/Commited Flag
        ValidPC = False
    End If
End Function


' returns a formatted error string
Public Function GetErrorStr() As String
    GetErrorStr = "Error (" + Trim(Str(Err)) + "): " + EntErrorStr(Err)
End Function


' returns a formatted error string for number fields
Public Function GetErrorNumStr() As String
    GetErrorNumStr = "#(" + Trim(Str(Err)) + "): " + EntErrorStr(Err)
End Function


' Checks for the local server, and gets the server from EntFuncs.XLA if necessary
'Public Function LocalCheckServer() As Boolean
'On Error GoTo LocalCheckServer_Error
'
'    If Not ServerSet Then
'        ' Server Not Running - Start server
'        If ZSYS9194(719, EntServer) Then
'            ServerSet = True
'        Else
'            ServerSet = False
'        End If
'    End If
'
'    ' Finish procedure without causing an error
'    LocalCheckServer = ServerSet
'    GoTo LocalCheckServer_Exit
'
'LocalCheckServer_Error:
'    Error 500
'    LocalCheckServer = False
'
'LocalCheckServer_Exit:
'End Function


'*******************************************************************************
' Name:        CheckServer
' Description: Checks to see if the OLE Server has been created, and
'              creates it if not.
'
'              NOTE: Called automatically by the functions.
'*******************************************************************************
Public Function CheckServer() As Boolean
On Error GoTo CheckServer_Error
    If Not ServerSet Then
        ' Server Not Running - Start server
        Set EntServer = GetObject("", "Enterprise.OLEServer")
        ServerSet = True
    End If

    ' Finish procedure without causing an error
    CheckServer = True
    GoTo CheckServer_Exit
    
CheckServer_Error:
    Error 500
    CheckServer = False

CheckServer_Exit:
End Function
Attribute VB_Name = "Currency"

Option Explicit


'*******************************************************************************
' Name:        EntCurrencyName
' Description: Gets the Currency Name
'*****************************************************************************************
Public Function EntCurrencyName(Company$, TheCcy%) As String
On Error GoTo EntCurrencyName_Error
    Dim TheCurr%, RetVal%, CurrName$
    
    RetVal% = 0
    
    If ValidCompany(Company) And ValidCcy(TheCcy%) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            TheCurr% = TheCcy%
            CurrName$ = ""
                        
            RetVal% = EntServer.GetCurrencyName(Company$, TheCurr%, CurrName$)
        
            If (RetVal% <> 0) Then
                Error RetVal%
            End If
        End If
    End If
      
    GoTo EntCurrencyName_Exit
        
EntCurrencyName_Error:
    CurrName$ = GetErrorStr$

EntCurrencyName_Exit:
    EntCurrencyName = CurrName$
End Function


' Gets a System Setup Currency Rate
Private Function GetCurrencyRates(Company$, RateType$, TheCcy%) As Variant
On Error GoTo GetCurrencyRates_Error
    Dim TheCat%, RetVal%, CatName$, DblVal#
    
    RetVal% = 0
    DblVal# = 0#
     
    If ValidCompany(Company) And ValidCcy(TheCcy%) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            RateType$ = UCase(RateType$)
                        
            RetVal% = EntServer.GetCurrencyRate(Company$, RateType$, TheCcy%, DblVal#)
        
            If (RetVal% <> 0) Then
                Error RetVal%
            End If
        End If
    End If
      
    GetCurrencyRates = DblVal#
      
    GoTo GetCurrencyRates_Exit
        
GetCurrencyRates_Error:
    GetCurrencyRates = GetErrorNumStr$

GetCurrencyRates_Exit:
    
End Function


'*******************************************************************************
' Name:        EntCompanyRate
' Description: Gets a System Setup Company Rate
'*******************************************************************************
Public Function EntCompanyRate(Company$, TheCcy%) As Variant
    EntCompanyRate = GetCurrencyRates(Company$, "C", TheCcy%)
End Function


'*******************************************************************************
' Name:        EntDailyRate
' Description: Gets a System Setup Daily Rate
'*******************************************************************************
Public Function EntDailyRate(Company$, TheCcy%) As Variant
    EntDailyRate = GetCurrencyRates(Company$, "D", TheCcy%)
End Function


'**********************************************************************************
' Name:        EntTxLateCcy
' Description: Converts the Amount from FromCcy to ToCcy using the Exchequer
'              Currency Rates. RateType determines whether the system setup flag
'              is used (0), daily rates (1) or company rates (2).
'**********************************************************************************
Public Function EntTxLateCcy(Company$, FromCcy%, ToCcy%, Amount#, RateType%) As Variant
On Error GoTo EntTxLateCcy_Error
    Dim RetVal%, DubVal#
    
    DubVal# = 0#

    If ValidCcy(FromCcy%) And ValidCcy(ToCcy%) And (Amount# <> 0#) Then
        If (RateType% <> 0) And (RateType% <> 1) And (RateType% <> 2) Then
            ' Invalid Rate Type
            Error 532
        End If
        
        If CheckServer() Then
            Company$ = UCase(Company$)
            DubVal# = Amount#
            
            RetVal% = EntServer.ConvertAmount(Company$, FromCcy%, ToCcy%, DubVal#, RateType%)
            
            If (RetVal% <> 0) Then
                Error RetVal%
            End If
        End If
    End If

    EntTxLateCcy = DubVal#

    GoTo EntTxLateCcy_Exit

EntTxLateCcy_Error:
    EntTxLateCcy = GetErrorNumStr

EntTxLateCcy_Exit:

End Function


' Gets a System Setup Currency Rate
Private Function GetCurrBool(Company$, BoolNo%, TheCcy%) As Variant
On Error GoTo GetCurrBool_Error
    Dim TheCat%, RetVal%, CatName$, BoolVal$
    
    RetVal% = 0
    
    If ValidCompany(Company) And ValidCcy(TheCcy%) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
                        
            RetVal% = EntServer.GetCurrTriBools%(Company$, TheCcy%, BoolNo%, BoolVal$)
        
            If (RetVal% = 0) Then
                ' Convert result to readable format
                GetCurrBool = BoolVal$
            Else
                ' Error
                Error RetVal%
            End If
        End If
    End If
      
    GoTo GetCurrBool_Exit
        
GetCurrBool_Error:
    GetCurrBool = GetErrorNumStr$

GetCurrBool_Exit:
    
End Function


'*******************************************************************************
' Name:        EntCurrInvertRate
' Description: Returns 'Yes' if the Currency Rate should be inverted
'*******************************************************************************
Public Function EntCurrInvertRate(Company$, TheCcy%) As Variant
    EntCurrInvertRate = GetCurrBool(Company$, 1, TheCcy%)
End Function


'*******************************************************************************
' Name:        EntCurrFloatRate
' Description: Returns 'Yes' if the Currency Rate is Floating against the Euro
'*******************************************************************************
Public Function EntCurrFloatRate(Company$, TheCcy%) As Variant
    EntCurrFloatRate = GetCurrBool(Company$, 2, TheCcy%)
End Function


'*******************************************************************************
' Name:        EntCurrTriCurr
' Description: Returns the number of the Trangulation Currency
'*******************************************************************************
Public Function EntCurrTriCurr(Company$, TheCcy%) As Variant
On Error GoTo EntCurrTriCurr_Error
    Dim RetVal%, CurrNo%
    
    RetVal% = 0
    
    If ValidCompany(Company) And ValidCcy(TheCcy%) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            CurrNo% = 0
                        
            RetVal% = EntServer.GetCurrTriCurr%(Company$, TheCcy%, CurrNo%)
        
            If (RetVal% = 0) Then
                ' Convert result to readable format
                EntCurrTriCurr = CurrNo%
            Else
                ' Error
                Error RetVal%
            End If
        End If
    End If
      
    GoTo EntCurrTriCurr_Exit
        
EntCurrTriCurr_Error:
    EntCurrTriCurr = GetErrorNumStr$

EntCurrTriCurr_Exit:
    
End Function


'*******************************************************************************
' Name:        EntCurrTriRate
' Description: Returns the Trangulation Rate
'*******************************************************************************
Public Function EntCurrTriRate(Company$, TheCcy%) As Variant
On Error GoTo EntCurrTriRate_Error
    Dim RetVal%, TheRate#
    
    RetVal% = 0
    
    If ValidCompany(Company) And ValidCcy(TheCcy%) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            TheRate# = 0
                        
            RetVal% = EntServer.GetCurrTriRate%(Company$, TheCcy%, TheRate#)
        
            If (RetVal% = 0) Then
                ' Convert result to readable format
                EntCurrTriRate = TheRate#
            Else
                ' Error
                Error RetVal%
            End If
        End If
    End If
      
    GoTo EntCurrTriRate_Exit
        
EntCurrTriRate_Error:
    EntCurrTriRate = GetErrorNumStr$

EntCurrTriRate_Exit:
    
End Function


Attribute VB_Name = "Errors"

Option Explicit

'*******************************************************************************
' Name:        EntErrorStr
' Description: Displays a string description of an error
'*******************************************************************************
Public Function EntErrorStr(ErrorNo%) As String
    Select Case ErrorNo%
        Case 500
            EntErrorStr = "OLE Server Error"
        Case 511
            EntErrorStr = "Invalid GL Code"
        Case 512
            EntErrorStr = "Invalid Year"
        Case 513
            EntErrorStr = "Invalid Period"
        Case 514
            EntErrorStr = "Invalid Currency"
        Case 515
            EntErrorStr = "Invalid Customer"
        Case 516
            EntErrorStr = "Invalid Company or Cancelled Login"
        Case 517
            EntErrorStr = "Invalid General Ledger Code (From)"
        Case 518
            EntErrorStr = "Invalid General Ledger Code (To)"
        Case 519
            EntErrorStr = "Invalid Cost Centre"
        Case 520
            EntErrorStr = "Invalid Department"
        Case 521
            EntErrorStr = "Invalid Job Code"
        Case 522
            EntErrorStr = "Invalid Job Analysis Code"
        Case 523
            EntErrorStr = "Invalid Stock Code"
        Case 524
            EntErrorStr = "Invalid Price Band"
        Case 525
            EntErrorStr = "Invalid Value"
        Case 526
            EntErrorStr = "Invalid Supplier"
        Case 527
            EntErrorStr = "Invalid Location"
        Case 528
            EntErrorStr = "Permission Denied"
        Case 529
            EntErrorStr = "Invalid Document Type"
        Case 530
            EntErrorStr = "Invalid Budget Type"
        Case 531
            EntErrorStr = "Invalid Total Type"
        Case 532
            EntErrorStr = "Invalid Rate Type"
        Case 533
            EntErrorStr = "Invalid Posted/Committed Flag"
        Case 534
            EntErrorStr = "Invalid Start Date"
        Case 535
            EntErrorStr = "Invalid End Date"
        Case 536
            EntErrorStr = "Invalid Account Code"
        Case 537
            EntErrorStr = "Unknown Error"
        Case 538
            EntErrorStr = "Aborted By User"
        Case 539
            EntErrorStr = "Invalid Ageing Date"
        Case 540
            EntErrorStr = "Invalid Quantity"
        Case 541
            EntErrorStr = "Invalid Ageing Units"
        Case 542
            EntErrorStr = "Invalid Ageing Interval"
        Case 543
            EntErrorStr = "Invalid Line Number"
        
        ' EntAddNomTxfrLines errors
        Case 544
            EntErrorStr = "Invalid GL List"
        Case 545
            EntErrorStr = "Invalid Description List"
        Case 546
            EntErrorStr = "Invalid Currency List"
        Case 547
            EntErrorStr = "Invalid Amount"
        Case 548
            EntErrorStr = "Invalid Amount List"
        Case 549
            EntErrorStr = "Total Not Zero"
        Case 550
            EntErrorStr = "Invalid Cost Centre List"
        Case 551
            EntErrorStr = "Invalid Department List"
        Case 552
            EntErrorStr = "Invalid Job Code List"
        Case 553
            EntErrorStr = "Invalid Analysis Code List"
        Case 554
            EntErrorStr = "Invalid Rate"
        Case 555
            EntErrorStr = "Invalid Rate List"
        Case 556
            EntErrorStr = "Invalid Alternate Stock Code"
        Case 557
            EntErrorStr = "No prices stored on Alt Stk Code record"
        ' HM 27/10/99 v4.31
        Case 558
            EntErrorStr = "Invalid Line Type"
        Case 559
            EntErrorStr = "Invalid VAT Code"
        Case 560
            EntErrorStr = "Invalid Revised End Date"
        Case 561
            EntErrorStr = "Stock/Location Field Disabled"
        ' HM 10/12/99
        Case 562
            EntErrorStr = "Save Functions Not Available"
        ' HM 31/07/00
        Case 563
            EntErrorStr = "Job Closed"
        
        ' HM 10/09/01: EntAddTimesheet
        Case 564
            EntErrorStr = "Invalid Employee Code"
        Case 565
            EntErrorStr = "Invalid Time-Rate Code"
        Case 566
            EntErrorStr = "Invalid Time-Rate List"
        Case 567
            EntErrorStr = "Invalid Narrative List"
        Case 568
            EntErrorStr = "Invalid Hours List"
        Case 569
            EntErrorStr = "Invalid Charge Rate List"
        Case 570
            EntErrorStr = "Invalid Hours Amount (<=0)"
        Case 571
            EntErrorStr = "Invalid Cost Currency List"
        Case 572
            EntErrorStr = "Invalid Hourly Cost List"
        Case 573
            EntErrorStr = "Certificate Expired"
        Case 574
            EntErrorStr = "Invalid Deduct CIS Tax Type"
        Case 575
            EntErrorStr = "Invalid Delivery Mode"
        Case 576
            EntErrorStr = "Invalid Date"
        Case 577
            EntErrorStr = "Invalid Header VAT Flag"
        Case 578
            EntErrorStr = "Invalid VAT Amount"
        Case 579
            EntErrorStr = "Invalid VAT Amount List"
        Case 580
            EntErrorStr = "Invalid Line VAT Flag List"
        Case 581
            EntErrorStr = "Invalid Line VAT Code List"
        Case 582
            EntErrorStr = "Invalid Line Inclusive VAT Code List"
        Case 583
            EntErrorStr = "Invalid Line VAT Flag"
                
        ' EntJCAddJob/EntAddTimesheetUDFWithCosts
        Case 584
            EntErrorStr = "Invalid User Fields List"
            
        ' HM 10/03/04: Added Apps & Vals
        Case 585
            EntErrorStr = "Invalid Basis"
        Case 586
            EntErrorStr = "Invalid Contract OurRef"
        
        ' SSK 22/08/2016 R3 ABSEXCH-14589: added to return Invalid Job Type Code
        Case 587
            EntErrorStr = "Invalid Job Type Code"
                
        ' PL 30/08/2016 R3 ABSEXCH-15689 : Added code to check inactive CC / Dept
        Case 588
            EntErrorStr = "Inactive Cost Centre"
        Case 589
            EntErrorStr = "Inactive Department"
            
        'MH 02/01/2018 2018-R1 ABSEXCH-19552: Added check on Employee Status
        Case 590
            EntErrorStr = "Employee Closed"
            
        'HV 20/06/2018 2017R1.1 ABSEXCH-20793: provided support for entry in anonymisation control center if user changes Account Status to from OLE.
        Case 591
            EntErrorStr = "Anonymised account can not be edited"
            
        Case 600
            EntErrorStr = "Record Lock Failed"
        Case 600 To 699
            EntErrorStr = "Btrieve Error: " + Str(ErrorNo% - 600)
        Case Else
            If (Err = 440) Then
                EntErrorStr = Error()
                ServerSet = False
            Else
                EntErrorStr = Error()
            End If
    End Select
End Function
Attribute VB_Name = "GetCust"

Option Explicit

'*******************************************************************************
' Name:        EntCustName
' Description: Gets the name for the specified customer code
'*******************************************************************************
Public Function EntCustName(Company$, CustCode$) As String
    EntCustName = GetAcMiscStr(Company$, CustCode$, "C", 1)
End Function


'*******************************************************************************
' Name:        EntCustAddress
' Description: Gets a specific Address line for the specified customer code
'*******************************************************************************
Public Function EntCustAddress(Company$, CustCode$, LineNo%) As String
    If (LineNo% >= 1) And (LineNo% <= 5) Then
        EntCustAddress = GetAcMiscStr(Company$, CustCode$, "C", 1 + LineNo%)
    Else
        EntCustAddress = EntErrorStr$(543)
    End If
End Function


'*******************************************************************************
' Name:        EntCustContact
' Description: Gets the Contact for the specified customer code
'*******************************************************************************
Public Function EntCustContact(Company$, CustCode$) As String
    EntCustContact = GetAcMiscStr(Company$, CustCode$, "C", 7)
End Function


'*******************************************************************************
' Name:        EntCustPhone
' Description: Gets the Phone Number for the specified customer code
'*******************************************************************************
Public Function EntCustPhone(Company$, CustCode$) As String
    EntCustPhone = GetAcMiscStr(Company$, CustCode$, "C", 8)
End Function


'*******************************************************************************
' Name:        EntCustFax
' Description: Gets the Fax Number for the specified customer code
'*******************************************************************************
Public Function EntCustFax(Company$, CustCode$) As String
    EntCustFax = GetAcMiscStr(Company$, CustCode$, "C", 9)
End Function


'*******************************************************************************
' Name:        EntCustMobile
' Description: Gets the Mobile Phone Number for the specified customer code
'*******************************************************************************
Public Function EntCustMobile(Company$, CustCode$) As String
    EntCustMobile = GetAcMiscStr(Company$, CustCode$, "C", 10)
End Function


'*******************************************************************************
' Name:        EntCustUser1
' Description: Gets the User Defined field 1 for the specified customer code
'*******************************************************************************
Public Function EntCustUser1(Company$, CustCode$) As String
    EntCustUser1 = GetAcMiscStr(Company$, CustCode$, "C", 11)
End Function


'*******************************************************************************
' Name:        EntCustUser2
' Description: Gets the User Defined field 2 for the specified customer code
'*******************************************************************************
Public Function EntCustUser2(Company$, CustCode$) As String
    EntCustUser2 = GetAcMiscStr(Company$, CustCode$, "C", 12)
End Function


'*******************************************************************************
' Name:        EntCustCC
' Description: Gets the Cost Centre for the specified customer code
'*******************************************************************************
Public Function EntCustCC(Company$, CustCode$) As String
    EntCustCC = GetAcMiscStr(Company$, CustCode$, "C", 13)
End Function


'*******************************************************************************
' Name:        EntCustDept
' Description: Gets the Department for the specified customer code
'*******************************************************************************
Public Function EntCustDept(Company$, CustCode$) As String
    EntCustDept = GetAcMiscStr(Company$, CustCode$, "C", 14)
End Function


'*******************************************************************************
' Name:        EntCustArea
' Description: Gets the Area Code for the specified customer code
'*******************************************************************************
Public Function EntCustArea(Company$, CustCode$) As String
    EntCustArea = GetAcMiscStr(Company$, CustCode$, "C", 15)
End Function


'*******************************************************************************
' Name:        EntCustAccType
' Description: Gets the Account Type for the specified customer code
'*******************************************************************************
Public Function EntCustAccType(Company$, CustCode$) As String
    EntCustAccType = GetAcMiscStr(Company$, CustCode$, "C", 16)
End Function


'*******************************************************************************
' Name:        EntCustCurrency
' Description: Gets the Currency for the specified customer
'*******************************************************************************
Public Function EntCustCurrency(Company$, CustCode$) As Variant
    EntCustCurrency = GetAcMiscInt(Company$, CustCode$, "C", 1)
End Function


'*******************************************************************************
' Name:        EntCustSalesGL
' Description: Gets the Sales GL Code for the specified customer
'*******************************************************************************
Public Function EntCustSalesGL(Company$, CustCode$) As Variant
    EntCustSalesGL = GetAcMiscInt(Company$, CustCode$, "C", 2)
End Function


'*******************************************************************************
' Name:        EntCustCostGL
' Description: Gets the Cost Of Sales GL Code for the specified customer
'*******************************************************************************
Public Function EntCustCostGL(Company$, CustCode$) As Variant
    EntCustCostGL = GetAcMiscInt(Company$, CustCode$, "C", 3)
End Function


'*******************************************************************************
' Name:        EntCustControlGL
' Description: Gets the Control GL Code for the specified customer
'*******************************************************************************
Public Function EntCustControlGL(Company$, CustCode$) As Variant
    EntCustControlGL = GetAcMiscInt(Company$, CustCode$, "C", 4)
End Function


'*******************************************************************************
' Name:        EntCustCreditLimit
' Description: Gets the customers Credit Limit
'*******************************************************************************
Public Function EntCustCreditLimit(Company$, CustCode$) As Variant
    EntCustCreditLimit = GetAcMiscVal(Company$, CustCode$, "C", 1)
End Function


'*******************************************************************************
' Name:        EntCustDelAddress
' Description: Gets a specific Delivery Address line for the specified customer code
'*******************************************************************************
Public Function EntCustDelAddress(Company$, CustCode$, LineNo%) As String
    If (LineNo% >= 1) And (LineNo% <= 5) Then
        EntCustDelAddress = GetAcMiscStr(Company$, CustCode$, "C", 16 + LineNo%)
    Else
        EntCustDelAddress = EntErrorStr$(543)
    End If
End Function


'*******************************************************************************
' Name:        EntCustStatementTo
' Description: Gets the Statement To code for the specified customer code
'*******************************************************************************
Public Function EntCustStatementTo(Company$, CustCode$) As String
    EntCustStatementTo = GetAcMiscStr(Company$, CustCode$, "C", 22)
End Function


'*******************************************************************************
' Name:        EntCustVATCode
' Description: Gets the default VAT Code for the specified customer code
'*******************************************************************************
Public Function EntCustVATCode(Company$, CustCode$) As String
    EntCustVATCode = GetAcMiscStr(Company$, CustCode$, "C", 23)
End Function


'*******************************************************************************
' Name:        EntCustECMember
' Description: Gets the EC Member Flag for the specified customer code
'*******************************************************************************
Public Function EntCustECMember(Company$, CustCode$) As String
    EntCustECMember = GetAcMiscStr(Company$, CustCode$, "C", 24)
End Function


'*******************************************************************************
' Name:        EntCustInvoiceTo
' Description: Gets the Invoice To Code for the specified customer code
'*******************************************************************************
Public Function EntCustInvoiceTo(Company$, CustCode$) As String
    EntCustInvoiceTo = GetAcMiscStr(Company$, CustCode$, "C", 25)
End Function


'*******************************************************************************
' Name:        EntCustUser3
' Description: Gets the User Field 3 for the specified customer code
'*******************************************************************************
Public Function EntCustUser3(Company$, CustCode$) As String
    EntCustUser3 = GetAcMiscStr(Company$, CustCode$, "C", 26)
End Function


'*******************************************************************************
' Name:        EntCustUser4
' Description: Gets the User Field 4 for the specified customer code
'*******************************************************************************
Public Function EntCustUser4(Company$, CustCode$) As String
    EntCustUser4 = GetAcMiscStr(Company$, CustCode$, "C", 27)
End Function


'*******************************************************************************
' Name:        EntCustAltCode
' Description: Gets the Alternate Code for the specified customer code
'*******************************************************************************
Public Function EntCustAltCode(Company$, CustCode$) As String
    EntCustAltCode = GetAcMiscStr(Company$, CustCode$, "C", 28)
End Function


'*******************************************************************************
' Name:        EntCustLocation
' Description: Gets the default Location Code for the specified customer code
'*******************************************************************************
Public Function EntCustLocation(Company$, CustCode$) As String
    EntCustLocation = GetAcMiscStr(Company$, CustCode$, "C", 29)
End Function


'*******************************************************************************
' Name:        EntCustPostCode
' Description: Gets the Post Code for the specified customer code
'*******************************************************************************
Public Function EntCustPostCode(Company$, CustCode$) As String
    EntCustPostCode = GetAcMiscStr(Company$, CustCode$, "C", 30)
End Function


'*******************************************************************************
' Name:        EntCustPayTerms
' Description: Gets the Payment Terms for the specified customer
'*******************************************************************************
Public Function EntCustPayTerms(Company$, CustCode$) As Variant
    EntCustPayTerms = GetAcMiscInt(Company$, CustCode$, "C", 5)
End Function


'*******************************************************************************
' Name:        EntCustSettleDays
' Description: Gets the Settlement Days for the specified customer
'*******************************************************************************
Public Function EntCustSettleDays(Company$, CustCode$) As Variant
    EntCustSettleDays = GetAcMiscInt(Company$, CustCode$, "C", 6)
End Function


'*******************************************************************************
' Name:        EntCustFormSet
' Description: Gets the Form Set for the specified customer
'*******************************************************************************
Public Function EntCustFormSet(Company$, CustCode$) As Variant
    EntCustFormSet = GetAcMiscInt(Company$, CustCode$, "C", 7)
End Function


'*******************************************************************************
' Name:        EntCustDiscount
' Description: Gets the customers Discount%
'*******************************************************************************
Public Function EntCustDiscount(Company$, CustCode$) As Variant
    EntCustDiscount = GetAcMiscVal(Company$, CustCode$, "C", 2)
End Function


'*******************************************************************************
' Name:        EntCustAgedBalance
' Description: Calculates the Aged Balance for a Customer
'*******************************************************************************
Public Function EntCustAgedBalance(Company$, CustCode$, AgeAsAt$, AgeBy$, PeriodInterval%, WantPeriod%) As Variant
    EntCustAgedBalance = CalcAccAgedBalance(Company$, CustCode$, "C", AgeAsAt$, AgeBy$, PeriodInterval%, WantPeriod%)
End Function


'*******************************************************************************
' Name:        EntCustEmailAddr
' Description: Gets the Email Address for the specified customer code
'*******************************************************************************
Public Function EntCustEmailAddr(Company$, CustCode$) As String
    EntCustEmailAddr = GetAcMiscStr(Company$, CustCode$, "C", 31)
End Function


'*******************************************************************************
' Name:        EntCustSendReader
' Description: Gets the Send Attachment Reader flag for the specified customer code
'*******************************************************************************
Public Function EntCustSendReader(Company$, CustCode$) As String
    EntCustSendReader = GetAcMiscStr(Company$, CustCode$, "C", 32)
End Function


'*******************************************************************************
' Name:        EntCustZipAttachments
' Description: Gets the Zip Attachments flag for the specified customer code
'*******************************************************************************
Public Function EntCustZipAttachments(Company$, CustCode$) As String
    EntCustZipAttachments = GetAcMiscStr(Company$, CustCode$, "C", 33)
End Function


'*******************************************************************************
' Name:        EntCustSendHTML
' Description: Gets the Send HTML flag for the specified customer code
'*******************************************************************************
Public Function EntCustSendHTML(Company$, CustCode$) As String
    EntCustSendHTML = GetAcMiscStr(Company$, CustCode$, "C", 34)
End Function


'*******************************************************************************
' Name:        EntCustWebCatalogs
' Description: Gets the Web Catalogue details for the specified customer code
'*******************************************************************************
Public Function EntCustWebCatalogs(Company$, CustCode$) As String
    EntCustWebCatalogs = GetAcMiscStr(Company$, CustCode$, "C", 35)
End Function


'*******************************************************************************
' Name:        EntCustSSDDelTerms
' Description: Gets the Intrastat Delivery Terms for the specified customer code
'*******************************************************************************
Public Function EntCustSSDDelTerms(Company$, CustCode$) As String
    EntCustSSDDelTerms = GetAcMiscStr(Company$, CustCode$, "C", 37)
End Function


'*******************************************************************************
' Name:        EntCustSSDTransMode
' Description: Gets the Intrastat Default Mode of Transport for the specified customer
'*******************************************************************************
Public Function EntCustSSDTransMode(Company$, CustCode$) As Variant
    EntCustSSDTransMode = GetAcMiscInt(Company$, CustCode$, "C", 8)
End Function


'*******************************************************************************
' Name:        EntCustLineDiscount
' Description: Gets the default Line Discount for the specified customer code
'*******************************************************************************
Public Function EntCustLineDiscount(Company$, CustCode$) As String
    EntCustLineDiscount = GetAcMiscStr(Company$, CustCode$, "C", 38)
End Function


'*******************************************************************************
' Name:        EntCustVATRegNo
' Description: Gets the Contact for the specified customer code
'*******************************************************************************
Public Function EntCustVATRegNo(Company$, CustCode$) As String
    EntCustVATRegNo = GetAcMiscStr(Company$, CustCode$, "C", 39)
End Function


'*******************************************************************************
' Name:        EntCustTradingTerms
' Description: Gets the Trading Terms messages for the specified customer code
'*******************************************************************************
Public Function EntCustTradingTerms(Company$, CustCode$, LineNo%) As String
    If (LineNo% = 1) Or (LineNo% = 2) Then
        EntCustTradingTerms = GetAcMiscStr(Company$, CustCode$, "C", 39 + LineNo%)
    Else
        ' Invalid Line Number
        EntCustTradingTerms = EntErrorStr$(543)
    End If
End Function


'*******************************************************************************
' Name:        EntCustPayType
' Description: Gets the Payment Type for the specified customer code
'*******************************************************************************
Public Function EntCustPayType(Company$, CustCode$) As String
    EntCustPayType = GetAcMiscStr(Company$, CustCode$, "C", 42)
End Function


'*******************************************************************************
' Name:        EntCustBankAccount
' Description: Gets the Bank Account for the specified customer code
'*******************************************************************************
Public Function EntCustBankAccount(Company$, CustCode$) As String
    EntCustBankAccount = GetAcMiscStr(Company$, CustCode$, "C", 43)
End Function


'*******************************************************************************
' Name:        EntCustBankSortCode
' Description: Gets the Bank Sort Code for the specified customer code
'*******************************************************************************
Public Function EntCustBankSortCode(Company$, CustCode$) As String
    EntCustBankSortCode = GetAcMiscStr(Company$, CustCode$, "C", 44)
End Function


'*******************************************************************************
' Name:        EntCustBankRef
' Description: Gets the Bank Ref for the specified customer code
'*******************************************************************************
Public Function EntCustBankRef(Company$, CustCode$) As String
    EntCustBankRef = GetAcMiscStr(Company$, CustCode$, "C", 45)
End Function


'*******************************************************************************
' Name:        EntCustDirectDebitMode
' Description: Gets the Direct Debit Mode for the specified customer
'*******************************************************************************
Public Function EntCustDirectDebitMode(Company$, CustCode$) As Variant
    EntCustDirectDebitMode = GetAcMiscStr(Company$, CustCode$, "C", 46)
End Function


'*******************************************************************************
' Name:        EntCustInvoiceDeliveryMode
' Description: Gets the mode that Invoices are sent out using
'*******************************************************************************
Public Function EntCustInvoiceDeliveryMode(Company$, CustCode$) As String
    EntCustInvoiceDeliveryMode = GetAcMiscStr(Company$, CustCode$, "C", 48)
End Function

'*******************************************************************************
' Name:        EntCustStatementDeliveryMode
' Description: Gets the mode that Statements are sent out using
'*******************************************************************************
Public Function EntCustStatementDeliveryMode(Company$, CustCode$) As String
    EntCustStatementDeliveryMode = GetAcMiscStr(Company$, CustCode$, "C", 47)
End Function


'*******************************************************************************
' Name:        EntCustStatus
' Description: Gets the Status for the specified customer code
'*******************************************************************************
Public Function EntCustStatus(Company$, CustCode$) As String
    EntCustStatus = GetAcMiscStr(Company$, CustCode$, "C", 49)
End Function


'*******************************************************************************
' Name:        EntCustExtOrderValue
' Description: Gets the customers External Order Value
'*******************************************************************************
Public Function EntCustExtOrderValue(Company$, CustCode$) As Variant
    EntCustExtOrderValue = GetAcMiscVal(Company$, CustCode$, "C", 3)
End Function


'*******************************************************************************
' Name:        EntCustTagNo
' Description: Gets the Tag Number for the specified customer
'*******************************************************************************
Public Function EntCustTagNo(Company$, CustCode$) As Variant
    EntCustTagNo = GetAcMiscInt(Company$, CustCode$, "C", 9)
End Function


'*******************************************************************************
' Name:        EntCustTheirAccount
' Description: Gets the Their A/C for Us field for the specified customer code
'*******************************************************************************
Public Function EntCustTheirAccount(Company$, CustCode$) As String
    EntCustTheirAccount = GetAcMiscStr(Company$, CustCode$, "C", 50)
End Function

'*******************************************************************************
' Name:        EntCustUser5
' Description: Gets the User Defined field 5 for the specified customer code
'*******************************************************************************
Public Function EntCustUser5(Company$, CustCode$) As String
    EntCustUser5 = GetAcMiscStr(Company$, CustCode$, "C", 51)
End Function

'*******************************************************************************
' Name:        EntCustUser6
' Description: Gets the User Defined field 6 for the specified customer code
'*******************************************************************************
Public Function EntCustUser6(Company$, CustCode$) As String
    EntCustUser6 = GetAcMiscStr(Company$, CustCode$, "C", 52)
End Function

'*******************************************************************************
' Name:        EntCustUser7
' Description: Gets the User Defined field 7 for the specified customer code
'*******************************************************************************
Public Function EntCustUser7(Company$, CustCode$) As String
    EntCustUser7 = GetAcMiscStr(Company$, CustCode$, "C", 53)
End Function

'*******************************************************************************
' Name:        EntCustUser8
' Description: Gets the User Defined field 8 for the specified customer code
'*******************************************************************************
Public Function EntCustUser8(Company$, CustCode$) As String
    EntCustUser8 = GetAcMiscStr(Company$, CustCode$, "C", 54)
End Function

'*******************************************************************************
' Name:        EntCustUser9
' Description: Gets the User Defined field 9 for the specified customer code
'*******************************************************************************
Public Function EntCustUser9(Company$, CustCode$) As String
    EntCustUser9 = GetAcMiscStr(Company$, CustCode$, "C", 55)
End Function

'*******************************************************************************
' Name:        EntCustUser10
' Description: Gets the User Defined field 10 for the specified customer code
'*******************************************************************************
Public Function EntCustUser10(Company$, CustCode$) As String
    EntCustUser10 = GetAcMiscStr(Company$, CustCode$, "C", 56)
End Function


'*******************************************************************************
' Name:        EntCustMandateId
' Description: Gets the Mandate Id for the specified customer code
'*******************************************************************************
Public Function EntCustMandateId(Company$, CustCode$) As String
    EntCustMandateId = GetAcMiscStr(Company$, CustCode$, "C", 57)
End Function


'*******************************************************************************
' Name:        EntCustMandateDate
' Description: Gets the Mandate Date for the specified customer code
'*******************************************************************************
Public Function EntCustMandateDate(Company$, CustCode$) As String
    EntCustMandateDate = GetAcMiscStr(Company$, CustCode$, "C", 58)
End Function


'*******************************************************************************
' Name:        EntCustDeliveryPostcode
' Description: Gets the Delivery Postcode for the specified customer code
'*******************************************************************************
Public Function EntCustDeliveryPostcode(Company$, CustCode$) As String
    EntCustDeliveryPostcode = GetAcMiscStr(Company$, CustCode$, "C", 59)
End Function


'*******************************************************************************
' Name:        EntCustAllowOrderPayments
' Description: Gets the Allow Order Payments flag for the specified customer code
'*******************************************************************************
Public Function EntCustAllowOrderPayments(Company$, CustCode$) As String
    EntCustAllowOrderPayments = GetAcMiscStr(Company$, CustCode$, "C", 60)
End Function


'*******************************************************************************
' Name:        EntCustOrderPaymentsGLCode
' Description: Gets the Order Payments GL Code for the specified customer
'*******************************************************************************
Public Function EntCustOrderPaymentsGLCode(Company$, CustCode$) As Variant
    EntCustOrderPaymentsGLCode = GetAcMiscInt(Company$, CustCode$, "C", 10)
End Function


'*******************************************************************************
' Name:        EntCustCountry
' Description: Gets the Address Country for the specified customer code
'*******************************************************************************
Public Function EntCustCountry(Company$, CustCode$) As String
    EntCustCountry = GetAcMiscStr(Company$, CustCode$, "C", 61)
End Function


'*******************************************************************************
' Name:        EntCustDeliveryCountry
' Description: Gets the Delivery Address Country for the specified customer code
'*******************************************************************************
Public Function EntCustDeliveryCountry(Company$, CustCode$) As String
    EntCustDeliveryCountry = GetAcMiscStr(Company$, CustCode$, "C", 62)
End Function


'*******************************************************************************
' Name:        EntCustPPDMode
' Description: Gets the PPD Mode for the specified Customer
'*******************************************************************************
Public Function EntCustPPDMode(Company$, CustCode$) As Variant
    EntCustPPDMode = GetAcMiscStr(Company$, CustCode$, "C", 63)
End Function


'*******************************************************************************
' Name:        EntCustPPDDiscount
' Description: Gets the PPD Discount% for the specified Customer
'*******************************************************************************
Public Function EntCustPPDDiscount(Company$, CustCode$) As Variant
    EntCustPPDDiscount = GetAcMiscVal(Company$, CustCode$, "C", 2)
End Function


'*******************************************************************************
' Name:        EntCustPPDDays
' Description: Gets the PPD Days for the specified Customer
'*******************************************************************************
Public Function EntCustPPDDays(Company$, CustCode$) As Variant
    EntCustPPDDays = GetAcMiscInt(Company$, CustCode$, "C", 6)
End Function


'*******************************************************************************
' Name:        EntCustDefaultToQR
' Description: Gets the Default to QR setting for the specified Customer
'*******************************************************************************
Public Function EntCustDefaultToQR(Company$, CustCode$) As Variant
    EntCustDefaultToQR = GetAcMiscStr(Company$, CustCode$, "C", 64)
End Function



'*******************************************************************************
' Name:        EntCustUser11
' Description: Gets the User Defined field 11 for the specified customer code
'*******************************************************************************
Public Function EntCustUser11(Company$, CustCode$) As String
    EntCustUser11 = GetAcMiscStr(Company$, CustCode$, "C", 65)
End Function
'*******************************************************************************
' Name:        EntCustUser12
' Description: Gets the User Defined field 12 for the specified customer code
'*******************************************************************************
Public Function EntCustUser12(Company$, CustCode$) As String
    EntCustUser12 = GetAcMiscStr(Company$, CustCode$, "C", 66)
End Function
'*******************************************************************************
' Name:        EntCustUser13
' Description: Gets the User Defined field 13 for the specified customer code
'*******************************************************************************
Public Function EntCustUser13(Company$, CustCode$) As String
    EntCustUser13 = GetAcMiscStr(Company$, CustCode$, "C", 67)
End Function
'*******************************************************************************
' Name:        EntCustUser14
' Description: Gets the User Defined field 14 for the specified customer code
'*******************************************************************************
Public Function EntCustUser14(Company$, CustCode$) As String
    EntCustUser14 = GetAcMiscStr(Company$, CustCode$, "C", 68)
End Function
'*******************************************************************************
' Name:        EntCustUser15
' Description: Gets the User Defined field 15 for the specified customer code
'*******************************************************************************
Public Function EntCustUser15(Company$, CustCode$) As String
    EntCustUser15 = GetAcMiscStr(Company$, CustCode$, "C", 69)
End Function



Attribute VB_Name = "GetSupp"

Option Explicit


'*******************************************************************************
' Name:        EntSuppName
' Description: Gets the name for the specified Supplier code
'*******************************************************************************
Public Function EntSuppName(Company As String, SuppCode As String) As String
    EntSuppName = GetAcMiscStr(Company$, SuppCode$, "S", 1)
End Function
 
 
'*******************************************************************************
' Name:        EntSuppAddress
' Description: Gets s specific Address line for the specified Supplier code
'*******************************************************************************
Public Function EntSuppAddress(Company$, SuppCode$, LineNo%) As String
    If (LineNo% >= 1) And (LineNo% <= 5) Then
        EntSuppAddress = GetAcMiscStr(Company$, SuppCode$, "S", 1 + LineNo%)
    Else
        EntSuppAddress = EntErrorStr$(543)
    End If
End Function


'*******************************************************************************
' Name:        EntSuppContact
' Description: Gets the Contact for the specified supplier code
'*******************************************************************************
Public Function EntSuppContact(Company$, SuppCode$) As String
    EntSuppContact = GetAcMiscStr(Company$, SuppCode$, "S", 7)
End Function


'*******************************************************************************
' Name:        EntSuppPhone
' Description: Gets the Phone Number for the specified supplier code
'*******************************************************************************
Public Function EntSuppPhone(Company$, SuppCode$) As String
    EntSuppPhone = GetAcMiscStr(Company$, SuppCode$, "S", 8)
End Function


'*******************************************************************************
' Name:        EntSuppFax
' Description: Gets the Fax Number for the specified supplier code
'*******************************************************************************
Public Function EntSuppFax(Company$, SuppCode$) As String
    EntSuppFax = GetAcMiscStr(Company$, SuppCode$, "S", 9)
End Function


'*******************************************************************************
' Name:        EntSuppMobile
' Description: Gets the Mobile Phone Number for the specified supplier code
'*******************************************************************************
Public Function EntSuppMobile(Company$, SuppCode$) As String
    EntSuppMobile = GetAcMiscStr(Company$, SuppCode$, "S", 10)
End Function


'*******************************************************************************
' Name:        EntSuppUser1
' Description: Gets the User Defined field 1 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser1(Company$, SuppCode$) As String
    EntSuppUser1 = GetAcMiscStr(Company$, SuppCode$, "S", 11)
End Function


'*******************************************************************************
' Name:        EntSuppUser2
' Description: Gets the User Defined field 2 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser2(Company$, SuppCode$) As String
    EntSuppUser2 = GetAcMiscStr(Company$, SuppCode$, "S", 12)
End Function


'*******************************************************************************
' Name:        EntSuppCC
' Description: Gets the Cost Centre for the specified supplier code
'*******************************************************************************
Public Function EntSuppCC(Company$, SuppCode$) As String
    EntSuppCC = GetAcMiscStr(Company$, SuppCode$, "S", 13)
End Function


'*******************************************************************************
' Name:        EntSuppDept
' Description: Gets the Department for the specified supplier code
'*******************************************************************************
Public Function EntSuppDept(Company$, SuppCode$) As String
    EntSuppDept = GetAcMiscStr(Company$, SuppCode$, "S", 14)
End Function


'*******************************************************************************
' Name:        EntSuppArea
' Description: Gets the Area Code for the specified supplier code
'*******************************************************************************
Public Function EntSuppArea(Company$, SuppCode$) As String
    EntSuppArea = GetAcMiscStr(Company$, SuppCode$, "S", 15)
End Function


'*******************************************************************************
' Name:        EntSuppAccType
' Description: Gets the Account Type for the specified supplier code
'*******************************************************************************
Public Function EntSuppAccType(Company$, SuppCode$) As String
    EntSuppAccType = GetAcMiscStr(Company$, SuppCode$, "S", 16)
End Function


'*******************************************************************************
' Name:        EntSuppCurrency
' Description: Gets the Currency for the specified supplier
'*******************************************************************************
Public Function EntSuppCurrency(Company$, SuppCode$) As Variant
    EntSuppCurrency = GetAcMiscInt(Company$, SuppCode$, "S", 1)
End Function


'*******************************************************************************
' Name:        EntSuppSalesGL
' Description: Gets the Sales GL Code for the specified supplier
'*******************************************************************************
Public Function EntSuppSalesGL(Company$, SuppCode$) As Variant
    EntSuppSalesGL = GetAcMiscInt(Company$, SuppCode$, "S", 2)
End Function


'*******************************************************************************
' Name:        EntSuppCostGL
' Description: Gets the Cost Of Sales GL Code for the specified supplier
'*******************************************************************************
Public Function EntSuppCostGL(Company$, SuppCode$) As Variant
' MH 19/04/06: Modified to read Sales GL which is where the Cost GL is stored for Suppliers!
'    EntSuppCostGL = GetAcMiscInt(Company$, SuppCode$, "S", 3)
    EntSuppCostGL = GetAcMiscInt(Company$, SuppCode$, "S", 2)
End Function


'*******************************************************************************
' Name:        EntSuppControlGL
' Description: Gets the Control GL Code for the specified supplier
'*******************************************************************************
Public Function EntSuppControlGL(Company$, SuppCode$) As Variant
    EntSuppControlGL = GetAcMiscInt(Company$, SuppCode$, "S", 4)
End Function


'*******************************************************************************
' Name:        EntSuppCreditLimit
' Description: Gets the suppliers Credit Limit
'*******************************************************************************
Public Function EntSuppCreditLimit(Company$, SuppCode$) As Variant
    EntSuppCreditLimit = GetAcMiscVal(Company$, SuppCode$, "S", 1)
End Function


'*******************************************************************************
' Name:        EntSuppDelAddress
' Description: Gets a specific Delivery Address line for the specified Suppomer code
'*******************************************************************************
Public Function EntSuppDelAddress(Company$, SuppCode$, LineNo%) As String
    If (LineNo% >= 1) And (LineNo% <= 5) Then
        EntSuppDelAddress = GetAcMiscStr(Company$, SuppCode$, "S", 16 + LineNo%)
    Else
        EntSuppDelAddress = EntErrorStr$(543)
    End If
End Function


'*******************************************************************************
' Name:        EntSuppStatementTo
' Description: Gets the Statement To code for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppStatementTo(Company$, SuppCode$) As String
    EntSuppStatementTo = GetAcMiscStr(Company$, SuppCode$, "S", 22)
End Function


'*******************************************************************************
' Name:        EntSuppVATCode
' Description: Gets the default VAT Code for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppVATCode(Company$, SuppCode$) As String
    EntSuppVATCode = GetAcMiscStr(Company$, SuppCode$, "S", 23)
End Function


'*******************************************************************************
' Name:        EntSuppECMember
' Description: Gets the EC Member Flag for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppECMember(Company$, SuppCode$) As String
    EntSuppECMember = GetAcMiscStr(Company$, SuppCode$, "S", 24)
End Function


'*******************************************************************************
' Name:        EntSuppInvoiceTo
' Description: Gets the Invoice To Code for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppInvoiceTo(Company$, SuppCode$) As String
    EntSuppInvoiceTo = GetAcMiscStr(Company$, SuppCode$, "S", 25)
End Function


'*******************************************************************************
' Name:        EntSuppUser3
' Description: Gets the User Field 3 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser3(Company$, SuppCode$) As String
    EntSuppUser3 = GetAcMiscStr(Company$, SuppCode$, "S", 26)
End Function


'*******************************************************************************
' Name:        EntSuppUser4
' Description: Gets the User Field 4 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser4(Company$, SuppCode$) As String
    EntSuppUser4 = GetAcMiscStr(Company$, SuppCode$, "S", 27)
End Function


'*******************************************************************************
' Name:        EntSuppAltCode
' Description: Gets the Alternate Code for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppAltCode(Company$, SuppCode$) As String
    EntSuppAltCode = GetAcMiscStr(Company$, SuppCode$, "S", 28)
End Function


'*******************************************************************************
' Name:        EntSuppLocation
' Description: Gets the default Location Code for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppLocation(Company$, SuppCode$) As String
    EntSuppLocation = GetAcMiscStr(Company$, SuppCode$, "S", 29)
End Function


'*******************************************************************************
' Name:        EntSuppPostCode
' Description: Gets the Post Code for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppPostCode(Company$, SuppCode$) As String
    EntSuppPostCode = GetAcMiscStr(Company$, SuppCode$, "S", 30)
End Function


'*******************************************************************************
' Name:        EntSuppPayTerms
' Description: Gets the Payment Terms for the specified Supplier
'*******************************************************************************
Public Function EntSuppPayTerms(Company$, SuppCode$) As Variant
    EntSuppPayTerms = GetAcMiscInt(Company$, SuppCode$, "S", 5)
End Function


'*******************************************************************************
' Name:        EntSuppSettleDays
' Description: Gets the Settlement Days for the specified Supplier
'*******************************************************************************
Public Function EntSuppSettleDays(Company$, SuppCode$) As Variant
    EntSuppSettleDays = GetAcMiscInt(Company$, SuppCode$, "S", 6)
End Function


'*******************************************************************************
' Name:        EntSuppFormSet
' Description: Gets the Form Set for the specified Supplier
'*******************************************************************************
Public Function EntSuppFormSet(Company$, SuppCode$) As Variant
    EntSuppFormSet = GetAcMiscInt(Company$, SuppCode$, "S", 7)
End Function


'*******************************************************************************
' Name:        EntSuppDiscount
' Description: Gets the Suppliers Discount%
'*******************************************************************************
Public Function EntSuppDiscount(Company$, SuppCode$) As Variant
    EntSuppDiscount = GetAcMiscVal(Company$, SuppCode$, "S", 2)
End Function


'*******************************************************************************
' Name:        EntSuppAgedBalance
' Description: Calculates the Aged Balance for a Supplier
'*******************************************************************************
Public Function EntSuppAgedBalance(Company$, SuppCode$, AgeAsAt$, AgeBy$, PeriodInterval%, WantPeriod%) As Variant
    EntSuppAgedBalance = CalcAccAgedBalance(Company$, SuppCode$, "S", AgeAsAt$, AgeBy$, PeriodInterval%, WantPeriod%)
End Function


'*******************************************************************************
' Name:        EntSuppEmailAddr
' Description: Gets the Email Address for the specified Supplier code
'*******************************************************************************
Public Function EntSuppEmailAddr(Company$, SuppCode$) As String
    EntSuppEmailAddr = GetAcMiscStr(Company$, SuppCode$, "S", 31)
End Function


'*******************************************************************************
' Name:        EntSuppSendReader
' Description: Gets the Send Attachment Reader flag for the specified Supplier code
'*******************************************************************************
Public Function EntSuppSendReader(Company$, SuppCode$) As String
    EntSuppSendReader = GetAcMiscStr(Company$, SuppCode$, "S", 32)
End Function


'*******************************************************************************
' Name:        EntSuppZipAttachments
' Description: Gets the Zip Attachments flag for the specified Supplier code
'*******************************************************************************
Public Function EntSuppZipAttachments(Company$, SuppCode$) As String
    EntSuppZipAttachments = GetAcMiscStr(Company$, SuppCode$, "S", 33)
End Function


'*******************************************************************************
' Name:        EntSuppSendHTML
' Description: Gets the Send HTML flag for the specified Supplier code
'*******************************************************************************
Public Function EntSuppSendHTML(Company$, SuppCode$) As String
    EntSuppSendHTML = GetAcMiscStr(Company$, SuppCode$, "S", 34)
End Function


'*******************************************************************************
' Name:        EntSuppWebCatalogs
' Description: Gets the Web Catalogue details for the specified Supplier code
'*******************************************************************************
Public Function EntSuppWebCatalogs(Company$, SuppCode$) As String
    EntSuppWebCatalogs = GetAcMiscStr(Company$, SuppCode$, "S", 35)
End Function


'*******************************************************************************
' Name:        EntSuppSSDDelTerms
' Description: Gets the Intrastat Delivery Terms for the specified Supplier code
'*******************************************************************************
Public Function EntSuppSSDDelTerms(Company$, SuppCode$) As String
    EntSuppSSDDelTerms = GetAcMiscStr(Company$, SuppCode$, "S", 37)
End Function


'*******************************************************************************
' Name:        EntSuppSSDTransMode
' Description: Gets the Intrastat Default Mode of Transport for the specified Supplier
'*******************************************************************************
Public Function EntSuppSSDTransMode(Company$, SuppCode$) As Variant
    EntSuppSSDTransMode = GetAcMiscInt(Company$, SuppCode$, "S", 8)
End Function


'*******************************************************************************
' Name:        EntSuppLineDiscount
' Description: Gets the default Line Discount for the specified Supplier
'*******************************************************************************
Public Function EntSuppLineDiscount(Company$, SuppCode$) As String
    EntSuppLineDiscount = GetAcMiscStr(Company$, SuppCode$, "S", 38)
End Function


'*******************************************************************************
' Name:        EntSuppVATRegNo
' Description: Gets the Contact for the specified Supplier
'*******************************************************************************
Public Function EntSuppVATRegNo(Company$, SuppCode$) As String
    EntSuppVATRegNo = GetAcMiscStr(Company$, SuppCode$, "S", 39)
End Function


'*******************************************************************************
' Name:        EntSuppTradingTerms
' Description: Gets the Trading Terms messages for the specified Supplier
'*******************************************************************************
Public Function EntSuppTradingTerms(Company$, SuppCode$, LineNo%) As String
    If (LineNo% = 1) Or (LineNo% = 2) Then
        EntSuppTradingTerms = GetAcMiscStr(Company$, SuppCode$, "S", 39 + LineNo%)
    Else
        ' Invalid Line Number
        EntSuppTradingTerms = EntErrorStr$(543)
    End If
End Function


'*******************************************************************************
' Name:        EntSuppPayType
' Description: Gets the Payment Type for the specified Supplier code
'*******************************************************************************
Public Function EntSuppPayType(Company$, SuppCode$) As String
    EntSuppPayType = GetAcMiscStr(Company$, SuppCode$, "S", 42)
End Function


'*******************************************************************************
' Name:        EntSuppBankAccount
' Description: Gets the Bank Account for the specified Supplier code
'*******************************************************************************
Public Function EntSuppBankAccount(Company$, SuppCode$) As String
    EntSuppBankAccount = GetAcMiscStr(Company$, SuppCode$, "S", 43)
End Function


'*******************************************************************************
' Name:        EntSuppBankSortCode
' Description: Gets the Bank Sort Code for the specified Supplier code
'*******************************************************************************
Public Function EntSuppBankSortCode(Company$, SuppCode$) As String
    EntSuppBankSortCode = GetAcMiscStr(Company$, SuppCode$, "S", 44)
End Function


'*******************************************************************************
' Name:        EntSuppBankRef
' Description: Gets the Bank Ref for the specified Supplier code
'*******************************************************************************
Public Function EntSuppBankRef(Company$, SuppCode$) As String
    EntSuppBankRef = GetAcMiscStr(Company$, SuppCode$, "S", 45)
End Function


'*******************************************************************************
' Name:        EntSuppInvoiceDeliveryMode
' Description: Gets the mode that Invoices are sent out using
'*******************************************************************************
Public Function EntSuppInvoiceDeliveryMode(Company$, SuppCode$) As String
    EntSuppInvoiceDeliveryMode = GetAcMiscStr(Company$, SuppCode$, "S", 48)
End Function

'*******************************************************************************
' Name:        EntSuppRemittanceDeliveryMode
' Description: Gets the mode that Remittances are sent out using
'*******************************************************************************
Public Function EntSuppRemittanceDeliveryMode(Company$, SuppCode$) As String
    EntSuppRemittanceDeliveryMode = GetAcMiscStr(Company$, SuppCode$, "S", 47)
End Function


'*******************************************************************************
' Name:        EntSuppStatus
' Description: Gets the Status for the specified Supplier code
'*******************************************************************************
Public Function EntSuppStatus(Company$, SuppCode$) As String
    EntSuppStatus = GetAcMiscStr(Company$, SuppCode$, "S", 49)
End Function


'*******************************************************************************
' Name:        EntSuppExtOrderValue
' Description: Gets the Suppliers External Order Value
'*******************************************************************************
Public Function EntSuppExtOrderValue(Company$, SuppCode$) As Variant
    EntSuppExtOrderValue = GetAcMiscVal(Company$, SuppCode$, "S", 3)
End Function


'*******************************************************************************
' Name:        EntSuppTagNo
' Description: Gets the Tag Number for the specified Supplier
'*******************************************************************************
Public Function EntSuppTagNo(Company$, SuppCode$) As Variant
    EntSuppTagNo = GetAcMiscInt(Company$, SuppCode$, "S", 9)
End Function


'*******************************************************************************
' Name:        EntSuppTheirAccount
' Description: Gets the Their A/C for Us field for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppTheirAccount(Company$, SuppCode$) As String
    EntSuppTheirAccount = GetAcMiscStr(Company$, SuppCode$, "S", 50)
End Function

'*******************************************************************************
' Name:        EntSuppUser5
' Description: Gets the User Field 5 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser5(Company$, SuppCode$) As String
    EntSuppUser5 = GetAcMiscStr(Company$, SuppCode$, "S", 51)
End Function

'*******************************************************************************
' Name:        EntSuppUser6
' Description: Gets the User Field 6 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser6(Company$, SuppCode$) As String
    EntSuppUser6 = GetAcMiscStr(Company$, SuppCode$, "S", 52)
End Function

'*******************************************************************************
' Name:        EntSuppUser7
' Description: Gets the User Field 7 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser7(Company$, SuppCode$) As String
    EntSuppUser7 = GetAcMiscStr(Company$, SuppCode$, "S", 53)
End Function

'*******************************************************************************
' Name:        EntSuppUser8
' Description: Gets the User Field 8 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser8(Company$, SuppCode$) As String
    EntSuppUser8 = GetAcMiscStr(Company$, SuppCode$, "S", 54)
End Function

'*******************************************************************************
' Name:        EntSuppUser9
' Description: Gets the User Field 9 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser9(Company$, SuppCode$) As String
    EntSuppUser9 = GetAcMiscStr(Company$, SuppCode$, "S", 55)
End Function


'*******************************************************************************
' Name:        EntSuppUser10
' Description: Gets the User Field 10 for the specified Supplier Code
'*******************************************************************************
Public Function EntSuppUser10(Company$, SuppCode$) As String
    EntSuppUser10 = GetAcMiscStr(Company$, SuppCode$, "S", 56)
End Function


'*******************************************************************************
' Name:        EntSuppDeliveryPostcode
' Description: Gets the Delivery Postcode for the specified Supplier code
'*******************************************************************************
Public Function EntSuppDeliveryPostcode(Company$, SuppCode$) As String
    EntSuppDeliveryPostcode = GetAcMiscStr(Company$, SuppCode$, "S", 59)
End Function


'*******************************************************************************
' Name:        EntSuppCountry
' Description: Gets the Address Country for the specified Supplier code
'*******************************************************************************
Public Function EntSuppCountry(Company$, SuppCode$) As String
    EntSuppCountry = GetAcMiscStr(Company$, SuppCode$, "S", 61)
End Function


'*******************************************************************************
' Name:        EntSuppDeliveryCountry
' Description: Gets the Delivery Address Country for the specified Supplier code
'*******************************************************************************
Public Function EntSuppDeliveryCountry(Company$, SuppCode$) As String
    EntSuppDeliveryCountry = GetAcMiscStr(Company$, SuppCode$, "S", 62)
End Function


'*******************************************************************************
' Name:        EntSuppPPDMode
' Description: Gets the PPD Mode for the specified Supplier
'*******************************************************************************
Public Function EntSuppPPDMode(Company$, SuppCode$) As Variant
    EntSuppPPDMode = GetAcMiscStr(Company$, SuppCode$, "S", 63)
End Function


'*******************************************************************************
' Name:        EntSuppPPDDiscount
' Description: Gets the PPD Discount% for the specified Supplier
'*******************************************************************************
Public Function EntSuppPPDDiscount(Company$, SuppCode$) As Variant
    EntSuppPPDDiscount = GetAcMiscVal(Company$, SuppCode$, "S", 2)
End Function


'*******************************************************************************
' Name:        EntSuppPPDDays
' Description: Gets the PPD Days for the specified Supplier
'*******************************************************************************
Public Function EntSuppPPDDays(Company$, SuppCode$) As Variant
    EntSuppPPDDays = GetAcMiscInt(Company$, SuppCode$, "S", 6)
End Function


'*******************************************************************************
' Name:        EntSuppUser11
' Description: Gets the User Defined field 11 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser11(Company$, SuppCode$) As String
    EntSuppUser11 = GetAcMiscStr(Company$, SuppCode$, "S", 65)
End Function
'*******************************************************************************
' Name:        EntSuppUser12
' Description: Gets the User Defined field 12 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser12(Company$, SuppCode$) As String
    EntSuppUser12 = GetAcMiscStr(Company$, SuppCode$, "S", 66)
End Function
'*******************************************************************************
' Name:        EntSuppUser13
' Description: Gets the User Defined field 13 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser13(Company$, SuppCode$) As String
    EntSuppUser13 = GetAcMiscStr(Company$, SuppCode$, "S", 67)
End Function
'*******************************************************************************
' Name:        EntSuppUser14
' Description: Gets the User Defined field 14 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser14(Company$, SuppCode$) As String
    EntSuppUser14 = GetAcMiscStr(Company$, SuppCode$, "S", 68)
End Function
'*******************************************************************************
' Name:        EntSuppUser15
' Description: Gets the User Defined field 15 for the specified supplier code
'*******************************************************************************
Public Function EntSuppUser15(Company$, SuppCode$) As String
    EntSuppUser15 = GetAcMiscStr(Company$, SuppCode$, "S", 69)
End Function

Attribute VB_Name = "Misc"

Option Explicit


'*****************************************************************************************
' Name:        ZSYS9194
' Description: Gets a copy of the OLE Server Object
'*****************************************************************************************
Public Function ZSYS9194(ChkNo%, Server As Object) As Boolean
On Error GoTo ZSYS9194_Error

    If (ChkNo% = 719) Then
        If CheckServer Then
            ' Server Not Running - Start server
            Set Server = EntServer
            ZSYS9194 = ServerSet
        Else
            Set Server = Nothing
            ZSYS9194 = False
        End If

        ' Finish procedure without causing an error
        GoTo ZSYS9194_Exit
    Else
        Error 7
    End If
    
ZSYS9194_Error:
    Error 500
    ZSYS9194 = False

ZSYS9194_Exit:
End Function


'*****************************************************************************************
' Name:        EntCompanyName
' Description: Gets the Company Name
'*****************************************************************************************
Public Function EntCompanyName(Company$) As String
On Error GoTo EntCompanyName_Error
    Dim CompName$, RetVal%
    
    RetVal% = 0
    
    If ValidCompany(Company) Then
        If CheckServer() Then
            Company$ = UCase(Company$)
            CompName$ = ""
                        
            RetVal% = EntServer.GetCompanyName(Company$, CompName$)
        
            If (RetVal% <> 0) Then
                Error RetVal%
            End If
        End If
    End If
      
    GoTo EntCompanyName_Exit
        
EntCompanyName_Error:
    CompName$ = GetErrorStr$

EntCompanyName_Exit:
    EntCompanyName = CompName$
End Function


'*****************************************************************************************
' Name:        EntCountryName
' Description: Gets the Country Name for a 2-digit Country Code
'*****************************************************************************************
Public Function EntCountryName(CountryCode$) As String
On Error GoTo EntCountryName_Error
    Dim CountryName$, RetVal%
    
    RetVal% = 0
    
    If CheckServer() Then
        CountryCode$ = UCase(CountryCode$)
        CountryName$ = ""
                        
        RetVal% = EntServer.GetCountryName(CountryCode$, CountryName$)
        
        If (RetVal% <> 0) Then
            Error RetVal%
        End If
    End If
      
    GoTo EntCountryName_Exit
        
EntCountryName_Error:
    CountryName$ = GetErrorStr$

EntCountryName_Exit:
    EntCountryName = CountryName$
End Function



Attribute VB_Name = "ODBC"
Option Explicit


'**********************************************************************************
' Name:        EntDouble
' Description: Converts the Integer _1 and _2 fields returned by ODBC to a double
'**********************************************************************************
Public Function EntDouble(Int_1%, Int_2&) As Variant
On Error GoTo EntDouble_Error
    Dim Int1%, Int2&, DubVal#

    DubVal# = 0#

    If CheckServer() Then
        Int1% = Int_1%
        Int2& = Int_2&

        DubVal# = EntServer.ConvertInts(Int1%, Int2&)
    End If

    EntDouble = DubVal#

    GoTo EntDouble_Exit

EntDouble_Error:
    EntDouble = GetErrorNumStr

EntDouble_Exit:

End Function


'**********************************************************************************
' Name:        EntDocSign
' Description: Returns an integer which can be used to sign document amounts, takes
'              the document type, eg. 'SIN', 'SOR' as a parameter.
'**********************************************************************************
Public Function EntDocSign(DocType$) As Variant
On Error GoTo EntDocSign_Error
    Dim IntVal%
 
    IntVal% = 0

    If CheckServer() Then
        IntVal% = EntServer.DocSign(DocType$)
        
        If IntVal% = 0 Then
            ' Error
            Error 529
        End If
    End If

    EntDocSign = IntVal%

    GoTo EntDocSign_Exit

EntDocSign_Error:
    EntDocSign = GetErrorNumStr
 
EntDocSign_Exit:

End Function


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_AddinInstall()
    Dim ECHM As String
    
    ECHM = "enterole.chm"
    
    If Application.Version >= 9 Then
        ' Add functions to Exchequer Miscellaneous Functions section of Insert Formula
        Application.MacroOptions macro:="ENTADDINVER", Description:="Returns the version of the Excel Add-In for Get account functions that you are using", HelpContextID:=20000, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCOMPANYNAME", Description:="Returns the name of the company identified by Company", HelpContextID:=20087, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCOMPANYRATE", Description:="Returns the Company Rate for the Currency & Company requested", HelpContextID:=20168, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCURRENCYNAME", Description:="Returns the name of the Currency identified by Currency", HelpContextID:=20092, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCURRFLOATRATE", Description:="Returns 'Y' if the Currency Rate is Floating against the EURO", HelpContextID:=20260, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCURRINVERTRATE", Description:="Returns 'Y' if the Currency Rate should be inverted", HelpContextID:=20261, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCURRTRICURR", Description:="Returns the Number of the Triangulation Currency", HelpContextID:=20262, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCURRTRIRATE", Description:="Returns the Triangulation Rate", HelpContextID:=20263, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTDAILYRATE", Description:="Returns the Daily Rate for the Currency & Company requested", HelpContextID:=20757, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTDOCSIGN", Description:="Returns a signed number -1 or +1 which can be used to sign document amounts", HelpContextID:=20129, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTDOUBLE", Description:="Converts the Int_1 and Int_2 fields returned by the Exchequer ODBC Kit into a normal number", HelpContextID:=20128, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTERRORSTR", Description:="Returns a string description of the error indicated by Error Number", HelpContextID:=20011, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSERVERVER", Description:="Returns the version of the Exchequer OLE Server", HelpContextID:=20021, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTTXLATECCY", Description:="Returns translated amount from FromCcy to ToCcy using the Exchequer Currency table and the rate depending on RateType", HelpContextID:=20245, HelpFile:=ECHM
        Application.MacroOptions macro:="ZSYS9194", Description:="Unknown Function"
        
        ' Add functions to Exchequer Customer Gets section of Insert Formula
        Application.MacroOptions macro:="ENTCUSTACCTYPE", Description:="Returns the Customer's Account type", HelpContextID:=20179, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTADDRESS", Description:="Returns the Customer's Address for the line requested", HelpContextID:=20180, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTAGEDBALANCE", Description:="Calculates the Aged Balance for a Customer in the same way as the Object Controller in Exchequer", HelpContextID:=20175, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTALTCODE", Description:="Returns the Customer's Alternate Code", HelpContextID:=20106, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTAREA", Description:="Returns the Customer's Area", HelpContextID:=20181, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTBALANCE", Description:="Returns the balance for the specified Year and Period from the Customer's account history", HelpContextID:=20002, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTBANKACCOUNT", Description:="Returns the Customer's Bank Account", HelpContextID:=20499, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTBANKREF", Description:="Returns the Customer's Bank Ref", HelpContextID:=20500, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTBANKSORTCODE", Description:="Returns the Customer's Bank Sort Code", HelpContextID:=20501, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTBUDGET", Description:="Returns the budget for the specified Year and Period from the Customer's account history", HelpContextID:=20003, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTBUDGET2", Description:="Returns the revised budget for the specified Year and Period from the Customer's account history", HelpContextID:=20690, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCC", Description:="Returns the Customer's Cost Centre", HelpContextID:=20182, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCOMMITTED", Description:="Returns the committed value for the specified Year and Period from the Customer's account history", HelpContextID:=20544, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCONTACT", Description:="Returns the Customer's Contact", HelpContextID:=20183, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCONTROLGL", Description:="Returns the Customer's Control General Ledger Code", HelpContextID:=20184, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCOSTGL", Description:="Returns the Customer's Cost General Ledger Code", HelpContextID:=20185, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCOSTS", Description:="Returns the costs for the specified Year and Period from the Customer's account history", HelpContextID:=20004, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCREDIT", Description:="Returns the credits for the specified Year and Period from the Customer's account history", HelpContextID:=20005, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCREDITLIMIT", Description:="Returns the Customer's Credit Limit", HelpContextID:=20186, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTCURRENCY", Description:="Returns the Customer's default Currency", HelpContextID:=20187, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTDEBIT", Description:="Returns the debits for the specified Year and Period from the Customer's account history", HelpContextID:=20006, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTDELADDRESS", Description:="Returns the delivery address line specified for the Customer", HelpContextID:=20264, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTDEPT", Description:="Returns the Customer's Department", HelpContextID:=20188, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTDIRECTDEBITMODE", Description:="Returns the Customer's Direct Debit Mode", HelpContextID:=20502, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTDISCOUNT", Description:="Returns the Customer's Settlement Discount %", HelpContextID:=20278, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTECMEMBER", Description:="Returns the Customer's EC Member flag", HelpContextID:=20279, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTEMAILADDR", Description:="Returns the Customer's Email Address", HelpContextID:=20280, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTEXTORDERVALUE", Description:="Returns the Customer's Externally set Booked Order Value", HelpContextID:=20576, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTFAX", Description:="Returns the Customer's Fax Number", HelpContextID:=20189, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTFORMSET", Description:="Returns the Customer's Form Set", HelpContextID:=20281, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTINVOICEDELIVERYMODE", Description:="Returns the method the Customer's Invoices are sent out by", HelpContextID:=20528, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTINVOICETO", Description:="Returns the Customer's Invoice To account", HelpContextID:=20282, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTLINEDISCOUNT", Description:="Returns the Customer's Line Discount Band/%", HelpContextID:=20464, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTLOCATION", Description:="Returns the Customer's Default Location Code", HelpContextID:=20283, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTMARGIN", Description:="Returns the margin for the specified Year and Period from the Customer's account history", HelpContextID:=20007, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTMOBILE", Description:="Returns the Customer's Mobile Phone Number", HelpContextID:=20190, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTNAME", Description:="Returns the Customer's name", HelpContextID:=20008, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTNETSALES", Description:="Returns the net sales for the specified Year and Period from the Customer's account history", HelpContextID:=20009, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTPAYTERMS", Description:="Returns the Customer's Pay Terms", HelpContextID:=20284, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTPAYTYPE", Description:="Returns the Customer's Pay Type", HelpContextID:=20503, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTPHONE", Description:="Returns the Customer's Phone Number", HelpContextID:=20191, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTPOSTCODE", Description:="Returns the Customer's PostCode", HelpContextID:=20285, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSALESGL", Description:="Returns the Customer's Sales General Ledger Code", HelpContextID:=20192, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSENDHTML", Description:="Returns the Send HTML Flag from the Customer Record", HelpContextID:=20305, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSENDREADER", Description:="Returns the Send Reader Flag from the Customer Record", HelpContextID:=20306, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSETTLEDAYS", Description:="Returns the Settlement Days from the Customer Record", HelpContextID:=20307, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSSDDELTERMS", Description:="Returns the SSD Delivery Terms from the Customer Record", HelpContextID:=20308, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSSDTRANSMODE", Description:="Returns the SSD Transport Mode from the Customer Record", HelpContextID:=20309, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSTATEMENTDELIVERYMODE", Description:="Returns the method of delivery of the Statement from the Customer Record", HelpContextID:=20529, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSTATEMENTTO", Description:="Returns the Statement To Account from the Customer Record", HelpContextID:=20310, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTSTATUS", Description:="Returns the Status from the Customer Record", HelpContextID:=20547, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTTAGNO", Description:="Returns the Tag Number from the specified Customer's record", HelpContextID:=20682, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTTHEIRACCOUNT", Description:="Returns the Their A/C for us field from the specified Customer's record", HelpContextID:=20667, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTTRADINGTERMS", Description:="Returns the Trading Terms for the line no specified from the Customer's record", HelpContextID:=20467, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER1", Description:="Returns the contents of the Customer's User Defined Field 1", HelpContextID:=20208, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER2", Description:="Returns the contents of the Customer's User Defined Field 2", HelpContextID:=20209, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER3", Description:="Returns the contents of the Customer's User Defined Field 3", HelpContextID:=20311, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER4", Description:="Returns the contents of the Customer's User Defined Field 4", HelpContextID:=20312, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER5", Description:="Returns the contents of the Customer's User Defined Field 5", HelpContextID:=20752, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER6", Description:="Returns the contents of the Customer's User Defined Field 6", HelpContextID:=20753, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER7", Description:="Returns the contents of the Customer's User Defined Field 7", HelpContextID:=20754, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER8", Description:="Returns the contents of the Customer's User Defined Field 8", HelpContextID:=20755, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER9", Description:="Returns the contents of the Customer's User Defined Field 9", HelpContextID:=20756, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER10", Description:="Returns the contents of the Customer's User Defined Field 10", HelpContextID:=20751, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTVATCODE", Description:="Returns the Customer's VAT Code", HelpContextID:=20313, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTVATREGNO", Description:="Returns the Customer's VAT Registration Number", HelpContextID:=20471, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTWEBCATALOGS", Description:="Returns the Customer's Web Catalogue Passwords", HelpContextID:=20314, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTZIPATTACHMENTS", Description:="Returns the Customer's ZipAttachments Flag", HelpContextID:=20315, HelpFile:=ECHM
          
        'PL 31/08/2016 2016 R3 ABSEXCH-15847 : Added functions for UDF 11 to 15 for Customer
        Application.MacroOptions macro:="ENTCUSTUSER11", Description:="Returns the contents of the Customer's User Defined Field 11", HelpContextID:=20907, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER12", Description:="Returns the contents of the Customer's User Defined Field 12", HelpContextID:=20908, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER13", Description:="Returns the contents of the Customer's User Defined Field 13", HelpContextID:=20909, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER14", Description:="Returns the contents of the Customer's User Defined Field 14", HelpContextID:=20910, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTUSER15", Description:="Returns the contents of the Customer's User Defined Field 15", HelpContextID:=20911, HelpFile:=ECHM
        
        ' Add functions to Exchequer Supplier Gets section of Insert Formula
        Application.MacroOptions macro:="ENTSUPPACCTYPE", Description:="Returns the Supplier|fffd|s Account Type", HelpContextID:=20212, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPADDRESS", Description:="Returns the Supplier|fffd|s Address for the specified Line Number", HelpContextID:=20213, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPAGEDBALANCE", Description:="Calculates the Aged Balance for a Supplier in the same way as the Object Controller in Exchequer", HelpContextID:=20176, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPALTCODE", Description:="Returns the Supplier|fffd|s Alternate Code", HelpContextID:=20394, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPAREA", Description:="Returns the Supplier|fffd|s Area", HelpContextID:=20214, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPBALANCE", Description:="Returns the Balance from the Supplier|fffd|s account history for the specified Year and Period", HelpContextID:=20069, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPBANKACCOUNT", Description:="Returns the Supplier's Bank Account", HelpContextID:=20509, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPBANKREF", Description:="Returns the Supplier's Bank Ref", HelpContextID:=20510, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPBANKSORTCODE", Description:="Returns the Supplier's Bank Sort Code", HelpContextID:=20511, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPBUDGET", Description:="Returns the Budget from the Supplier|fffd|s account history for the specified Year and Period", HelpContextID:=20070, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPBUDGET2", Description:="Returns the revised Budget from the Supplier|fffd|s account history for the specified Year and Period", HelpContextID:=20691, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCC", Description:="Returns the Supplier|fffd|s Cost Centre", HelpContextID:=20215, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCOMMITTED", Description:="Returns the committed value for the specified Year and Period from the Supplier's account history", HelpContextID:=20545, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCONTACT", Description:="Returns the Supplier|fffd|s Contact", HelpContextID:=20216, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCONTROLGL", Description:="Returns the Supplier|fffd|s Control General Ledger Code", HelpContextID:=20217, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCOSTGL", Description:="This Function is unavailable in Exchequer use EntSuppSalesGL", HelpContextID:=20218, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCREDIT", Description:="Returns the Credit value from the Supplier|fffd|s account history for the specified Year and Period", HelpContextID:=20071, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCREDITLIMIT", Description:="Returns the Supplier|fffd|s Credit Limit", HelpContextID:=20219, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPCURRENCY", Description:="Returns the Supplier|fffd|s Default Currency", HelpContextID:=20220, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPDEBIT", Description:="Returns the Debit value from the Supplier|fffd|s account history for the specified Year and Period", HelpContextID:=20072, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPDELADDRESS", Description:="Returns the delivery address line specified for the Supplier", HelpContextID:=20267, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPDEPT", Description:="Returns the Supplier|fffd|s Department", HelpContextID:=20221, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPDISCOUNT", Description:="Returns the Supplier|fffd|s Settlement Discount %", HelpContextID:=20395, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPECMEMBER", Description:="Returns the Supplier|fffd|s EC Member Flag", HelpContextID:=20396, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPEMAILADDR", Description:="Returns the Supplier|fffd|s Email Address", HelpContextID:=20397, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPEXTORDERVALUE", Description:="Returns the Supplier's Externally set Booked Order Value", HelpContextID:=20577, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPFAX", Description:="Returns the Supplier|fffd|s Fax", HelpContextID:=20222, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPFORMSET", Description:="Returns the Supplier's Form Set", HelpContextID:=20398, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPINVOICEDELIVERYMODE", Description:="Returns the method the Supplier's Invoices are sent out by", HelpContextID:=20530, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPINVOICETO", Description:="Returns the Supplier|fffd|s Invoice To Account", HelpContextID:=20399, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPLINEDISCOUNT", Description:="Returns the Supplier|fffd|s Discount Band/%", HelpContextID:=20462, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPLOCATION", Description:="Returns the Supplier|fffd|s Location", HelpContextID:=20400, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPMOBILE", Description:="Returns the Supplier|fffd|s Mobile", HelpContextID:=20223, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPNAME", Description:="Returns the Supplier|fffd|s Name", HelpContextID:=20073, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPPAYTERMS", Description:="Returns the Supplier|fffd|s Payment Terms", HelpContextID:=20401, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPPAYTYPE", Description:="Returns the Supplier's Pay Type", HelpContextID:=20512, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPPHONE", Description:="Returns the Supplier|fffd|s Phone Number", HelpContextID:=20224, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPPOSTCODE", Description:="Returns the Supplier|fffd|s Post Code", HelpContextID:=20402, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPREMITTANCEDELIVERYMODE", Description:="Returns the method of delivery of the Statement from the Supplier Record", HelpContextID:=20531, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSALESGL", Description:="Returns the Supplier|fffd|s Cost of Sales General Ledger code", HelpContextID:=20225, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSENDHTML", Description:="Returns the Send HTML Field from the Supplier|fffd|s record", HelpContextID:=20423, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSENDREADER", Description:="Returns the Send Reader Field from the Supplier|fffd|s record", HelpContextID:=20424, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSETTLEDAYS", Description:="Returns the Settlement Days Field from the Supplier|fffd|s record", HelpContextID:=20425, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSSDDELTERMS", Description:="Returns the SSD Delivery Terms Field from the Supplier|fffd|s record", HelpContextID:=20426, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSSDTRANSMODE", Description:="Returns the SSD Transport Mode Field from the Supplier|fffd|s record", HelpContextID:=20427, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSTATEMENTTO", Description:="Returns the Statement To Account from the Supplier|fffd|s record", HelpContextID:=20428, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPSTATUS", Description:="Returns the Status of the Account from the Supplier|fffd|s record", HelpContextID:=20549, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPTAGNO", Description:="Returns the Tag Number from the specified Supplier's record", HelpContextID:=20683, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPTHEIRACCOUNT", Description:="Returns the Their A/C for us field from the specified Supplier's record", HelpContextID:=20668, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPTRADINGTERMS", Description:="Returns the Trading Terms for the line no specified from the Supplier's record", HelpContextID:=20469, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER1", Description:="Returns the User 1 Field from the Supplier|fffd|s record", HelpContextID:=20243, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER2", Description:="Returns the User 2 Field from the Supplier|fffd|s record", HelpContextID:=20244, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER3", Description:="Returns the User 3 Field from the Supplier|fffd|s record", HelpContextID:=20429, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER4", Description:="Returns the User 4 Field from the Supplier|fffd|s record", HelpContextID:=20430, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER5", Description:="Returns the User 5 Field from the Supplier|fffd|s record", HelpContextID:=20875, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER6", Description:="Returns the User 6 Field from the Supplier|fffd|s record", HelpContextID:=20876, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER7", Description:="Returns the User 7 Field from the Supplier|fffd|s record", HelpContextID:=20877, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER8", Description:="Returns the User 8 Field from the Supplier|fffd|s record", HelpContextID:=20878, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER9", Description:="Returns the User 9 Field from the Supplier|fffd|s record", HelpContextID:=20879, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER10", Description:="Returns the User 10 Field from the Supplier|fffd|s record", HelpContextID:=20874, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPVATCODE", Description:="Returns the VAT Code Field from the Supplier|fffd|s record", HelpContextID:=20431, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPVATREGNO", Description:="Returns the Supplier's VAT Registration Number", HelpContextID:=20473, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPWEBCATALOGS", Description:="Returns the Web Catalogs Field from the Supplier|fffd|s record", HelpContextID:=20376, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPZIPATTACHMENTS", Description:="Returns the Zip Attachments Field from the Supplier|fffd|s record", HelpContextID:=20271, HelpFile:=ECHM
        
        'PL 31/08/2016 2016 R3 ABSEXCH-15847 : Added functions for UDF 11 to 15 for supplier
        Application.MacroOptions macro:="ENTSUPPUSER11", Description:="Returns the User 11 Field from the Supplier|fffd|s record", HelpContextID:=20912, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER12", Description:="Returns the User 12 Field from the Supplier|fffd|s record", HelpContextID:=20913, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER13", Description:="Returns the User 13 Field from the Supplier|fffd|s record", HelpContextID:=20914, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER14", Description:="Returns the User 14 Field from the Supplier|fffd|s record", HelpContextID:=20915, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTSUPPUSER15", Description:="Returns the User 15 Field from the Supplier|fffd|s record", HelpContextID:=20916, HelpFile:=ECHM
        
        ' MH 10/09/2013 v7.0.6 ABSEXCH-14598: Added Mandate fields for SEPA/IBAN
        Application.MacroOptions macro:="ENTCUSTMANDATEID", Description:="Gets the Mandate Id for the specified customer code", HelpContextID:=20739, HelpFile:=ECHM
        Application.MacroOptions macro:="ENTCUSTMANDATEDATE", Description:="Gets the Mandate Date for the specified customer code", HelpContextID:=20738, HelpFile:=ECHM
        
        ' MH 18/10/2013 v7.0.7 ABSEXCH-14703: Added Delivery Postcode
        Application.MacroOptions macro:="EntCustDeliveryPostcode", Description:="Gets the Delivery Postcode for the specified Customer code", HelpContextID:=20726, HelpFile:=ECHM
        Application.MacroOptions macro:="EntSuppDeliveryPostcode", Description:="Gets the Delivery Postcode for the specified Supplier code", HelpContextID:=20728, HelpFile:=ECHM
        
        ' MH 20/05/2015 v7.0.14 ABSEXCH-16284: Added PPD OLE Functions
        Application.MacroOptions macro:="EntCustPPDMode", Description:="Returns the PPD Mode for the specified Customer code", HelpContextID:=20880, HelpFile:=ECHM
        Application.MacroOptions macro:="EntCustPPDDiscount", Description:="Returns the PPD Discount% for the specified Customer code", HelpContextID:=20881, HelpFile:=ECHM
        Application.MacroOptions macro:="EntCustPPDDays", Description:="Returns the PPD Days for the specified Customer code", HelpContextID:=20882, HelpFile:=ECHM
        
        Application.MacroOptions macro:="EntSuppPPDMode", Description:="Returns the PPD Mode for the specified Supplier code", HelpContextID:=20883, HelpFile:=ECHM
        Application.MacroOptions macro:="EntSuppPPDDiscount", Description:="Returns the PPD Discount% for the specified Supplier code", HelpContextID:=20884, HelpFile:=ECHM
        Application.MacroOptions macro:="EntSuppPPDDays", Description:="Returns the PPD Days for the specified Supplier code", HelpContextID:=20885, HelpFile:=ECHM
        
        ' MH 22/10/2014: Added Order Payments support
        Application.MacroOptions macro:="EntCustAllowOrderPayments", Description:="Gets the Allow Order Payments flag for the specified customer code", HelpContextID:=20726, HelpFile:=ECHM
        Application.MacroOptions macro:="EntCustOrderPaymentsGLCode", Description:="Gets the Order Payments GL Code for the specified customer", HelpContextID:=20728, HelpFile:=ECHM
        
        ' MH 04/12/2014: Added Country Code support
        Application.MacroOptions macro:="EntCustCountry", Description:="Gets the Address Country for the specified customer code", HelpContextID:=20736, HelpFile:=ECHM
        Application.MacroOptions macro:="EntCustDeliveryCountry", Description:="Gets the Delivery Address Country for the specified customer code", HelpContextID:=20737, HelpFile:=ECHM
        Application.MacroOptions macro:="EntSuppCountry", Description:="Gets the Address Country for the specified Supplier code", HelpContextID:=20864, HelpFile:=ECHM
        Application.MacroOptions macro:="EntSuppDeliveryCountry", Description:="Gets the Delivery Address Country for the specified Supplier code", HelpContextID:=20865, HelpFile:=ECHM
        Application.MacroOptions macro:="EntCountryName", Description:="Gets the Country Name for a 2-digit Country Code", HelpContextID:=20735, HelpFile:=ECHM
        
        ' PKR 25/01/2016. ABSEXCH-17111. Added Default to QR for Intrastat
        Application.MacroOptions macro:="EntCustDefaultToQR", Description:="Gets the Default to QR flag for the specified customer code", HelpContextID:=20880, HelpFile:=ECHM
    End If
End Sub
Attribute VB_Name = "Version"
Option Explicit

' Beta Version Number
'Const AddInVer = "b560.146"
' Release Version Number
Const AddInVer = "Exchequer v12.0.0 Build 217"           ' should be incremented for each build


'*******************************************************************************
' Add-In History
' ==============
'
' Exchequer v12.0.0 Build 217  Updated for v12.0.0 release
'
' 2018-R1.216 HV   20/06/2018  provided support for entry in anonymisation control center if user changes Account Status to from OLE.
'
' 2018-R1.215 MH   02/01/2018  Added check on Employee Status
'
' v2016R3.214 PL   31/08/2016  Added functions for UDF 11 to 15 for customer and supplier
'
' v2016R3.213 SSK  30/08/2016  error code added for invalid job type code
'
' Build 212   PKR  25/01/2016  Added EntCustDefaultToQR
'
' Build 211   MH   28/07/2015  Merged PPD functions from v7.0.14
'
' v7.1.210    WJ   10/12/2014  Corrected duplicate Help Context Ids
'
' v7.1.209    MH   09/12/2014  Merged Order Payments changes into v7.1
'
' OrdPay.208  MH   02/12/2014  ABSEXCH-15836: Added new Customer/Supplier Get functions for Country Codes
'
' OrdPay.207  MH   22/10/2014  Added EntCustAllowOrderPayments and EntCustOrderPaymentsGLCode
'
' v7.0.7.206  MH   18/10/2013  ABSEXCH-14703: Added Delivery PostCode support to Cust/Supp
'
' v7.0.6.205  MH   10/09/2013  ABSEXCH-14598: Added Mandate functions for SEPA/IBAN
'
' v7.0.204    MH   10/09/12    Released for v7.0
'
' v6.9.203    GS   27/10/11    Added read support for UDEFs 6-10
'
' v6.00.202   MH   31/10/07    Rebuilt for v6.00 as getting misc problems with previous build
'
' v6.00.200   MH   16/07/07    Recreated from scratch under XL95 to try and fix help problems in XL2003
'
' v6.00.151   MH   20/06/07    Rebuilt after help stopped working due to an MS Office Update
'
' v6.00.150   MH   14/06/07    Modified to use HTML Help
'
' v5.71.149   MH   06/11/06    Added EntCustTheirAccount and EntSuppTheirAccount for Volac
'
' v5.71.148   MH   19/04/06    Modified EntSuppCostGL to return the Sales GL Code as that is where the Cost GL
'                              is stored on Suppliers.
'
'                              Added EntCustTagNo & EntSuppTagNo
'
'                              Added EntCustBudget2 & EntSuppBudget2
'
' v5.70.147   MH   28/07/05    Rebranded for IRIS Enterprise/Exchequer
'
' v5.61.146   HM   02/02/05    Released for v5.61
'
' v5.60.146   HM   14/10/04    Released for v5.60.001
'
' b560.146    HM   17/06/04    Added EntCustExtOrderValue and EntSuppExtOrderValue for North Yorkshire Timber
'
' v5.60.145   HM   14/05/04    Released for v5.60
'
' b560.145    HM   15/04/04    Changed descriptions for Cust/Supp Line Discount and Settlement Discount functions
'
' b560.144    HM   10/03/04    Extended for Apps & Vals
'
' v5.52.143   HM   18/11/03    Released for v5.52
'
' b552.143    HM   18/08/03    Added EntCustStatus and EntSuppStatus
'
' b552.142    HM   06/08/03    Added new errors for EntAddJob & EntAddJobAnalysisBudgie
'
' v5.51.142   HM   27/06/03    Released for v5.51
'
' b551.141    HM   02/06/03    Added new errors for EntAddNOMVATLines
'
' b551.140    HM   29/05/03    Added Cust/Supp Committed Balance
'
' b551.139    HM    23/05/03    Added entCust & Supp DeliveryMode functions:-
'
'                                 EntCustInvoiceDeliveryMode,
'                                 EntCustStatementDeliveryMode,
'                                 EntSuppInvoiceDeliveryMode
'                                 EntSuppRemittanceDeliveryMode
'
' v5.50.138   HM    24/03/03    Released for v5.50
'
' b550.138    HM    17/01/03    Added error 574
'
' v5.01.137   HM    17/10/02    Context Id's Updated and Released for v5.01
'
' b500.137    HM    15/10/02    Added Cust/Supp Bank Detail functions
'
' v5.00.136   HM    02/07/02    Released for v5.00.002 ???
'
' b500.136    HM    25/06/02    Added new Cust functions
'
' v5.00.135   HM    07/06/02    Added error 573 for EntAddTSH functions
'
' v5.00.134   HM    02/04/02    Released for Enterprise v5.00
'
' b500.134    HM    11/03/02    Added new errors for AddTimeSheetWithCost
'
' b500.133 - Skipped so versions in sync
'
' b500.132    HM    13/09/01    Added combined CC & Dept support into the GL funcs
'
' b500.131    HM    10/09/01    Mods for EntAddTimesheet
'
' b500.130    HM    07/09/01    Ported to v5.00
'
' v4.32.120   HM    17/04/01    Updated Version for v4.32
'
' v4.31.120   HM    07/11/00    Added Customer\Supplier Line Discount functions
'
' v4.31.119   HM    14/08/00    Released
'
' b431.119    HM    31/07/00    Added error 563 - Job Closed
'
' v4.31.118   HM    24/07/00    Changed to Release Version!
'
' b000.117    HM    21/02/00    Added EntGLCOM, EntGLCCCOM, EntGLDPCOM functions
'                               for Committment Accounting.
'
' b000.116    HM    18/02/00    Added entGLAltCode
'
' b000.115    HM    10/12/99    Added error 562 - Save Functions Not Available
' b000.100    HM    01/11/99    Created from v4.31 OLEWBook.Xls
'

'*******************************************************************************
' Name:        EntAddInVer
' Description: Gets the version of this Add-In source code
'*******************************************************************************
Public Function EntAddInVer() As String
    EntAddInVer = "Exchequer Functions - " + AddInVer$
End Function


'*******************************************************************************
' Name:        EntServerVer
' Description: Gets the version of the Exchequer OLE Server
'*******************************************************************************
Public Function EntServerVer() As String
On Error GoTo EntServerVer_Error
    Dim RetStr As String
    
    RetStr = ""
     
    If CheckServer() Then
        RetStr = EntServer.Version
    End If
     
    GoTo EntServerVer_Exit
        
EntServerVer_Error:
    RetStr = GetErrorStr$

EntServerVer_Exit:
    EntServerVer = RetStr
End Function


' InQuest injected base64 decoded content
' TDX0

INQUEST-PP=macro
