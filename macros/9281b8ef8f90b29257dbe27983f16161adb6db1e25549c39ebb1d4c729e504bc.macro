Attribute VB_Name = "aModule"
''''''''''''''''''''''''''''''''''''''
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: excelstore.pro
'E-mail |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|: info@excelstore.pro
''''''''''''''''''''''''''''''''''''''


Option Explicit
Option Private Module

Public apiYandex As String
Public apiGoogle As String



Sub StartMacro()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| XML
Dim GlobalArray, tmpArray, shName As String, iSTR As String, iType As String, iRow As Integer, i As Integer

Application.ScreenUpdating = 0
Application.StatusBar = False

    shName = ActiveSheet.Name
    
    apiYandex = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(2, 2).Value
    apiGoogle = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(3, 2).Value
    
    With Sheets(shName)
        iRow = .UsedRange.Row + .UsedRange.Rows.Count - 1
        .Range(Cells(2, 2), Cells(iRow, 4)).ClearContents
        GlobalArray = .Range(.Cells(1, 1), .Cells(iRow, 4)).Value
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 2 To iRow
        If GlobalArray(i, 1) <> "" Then
            iSTR = EncodeURL(GlobalArray(i, 1))
            
            Select Case shName
                Case "yandex"
                    tmpArray = YandexXML(iSTR)
                Case "google"
                    iType = CheckSymbol(GlobalArray(i, 1))
                    tmpArray = GoogleXML(iSTR, iType)
            End Select
            
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            GlobalArray(i, 2) = tmpArray(3)         '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            GlobalArray(i, 3) = tmpArray(1)         '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            GlobalArray(i, 4) = tmpArray(2)         '|fffd||fffd||fffd||fffd||fffd||fffd|
            
            Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|: " & i - 1 & " |fffd||fffd| " & iRow
            Application.Wait Time:=Now + TimeSerial(0, 0, 0.5)    '|fffd||fffd||fffd||fffd||fffd| 0.5 |fffd||fffd||fffd|.
        End If
    Next i

    '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|
    Sheets(shName).Range(Cells(1, 1), Cells(iRow, 4)).Value = GlobalArray

Application.StatusBar = False
Application.ScreenUpdating = 1

MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", vbInformation

End Sub


Attribute VB_Name = "iFunction"
''''''''''''''''''''''''''''''''''''''
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: excelstore.pro
'E-mail |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|: info@excelstore.pro
''''''''''''''''''''''''''''''''''''''


Option Explicit
Option Private Module



Function EncodeURL(ByVal iTXT As String) As String
    Dim i As Long, x As String, y As String
    iTXT = VBA.Trim(Replace(iTXT, Chr(160), " "))
    For i = 1 To Len(iTXT)
        x = Mid(iTXT, i, 1)
        Select Case AscW(x)
            Case Is > 256: y = "%" & Hex(AscW(x) \ 64 + 192) & "%" & Hex(8 * 16 + AscW(x) Mod 64)
            Case 32: y = "+"
            Case Else: y = x
        End Select
        EncodeURL = EncodeURL & y
    Next i
End Function



Function CheckSymbol(ByVal iSTR As String) As String
    iSTR = VBA.Trim(iSTR)
    iSTR = Replace(iSTR, " ", "")
    iSTR = Replace(iSTR, "-", "")
    iSTR = Replace(iSTR, "+", "")
    iSTR = Replace(iSTR, ".", "")
    iSTR = Replace(iSTR, ",", "")
    CheckSymbol = IIf(IsNumeric(iSTR), "latlng", "address")
End Function
Attribute VB_Name = "xmlGoogle"
''''''''''''''''''''''''''''''''''''''
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: excelstore.pro
'E-mail |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|: info@excelstore.pro
''''''''''''''''''''''''''''''''''''''


Option Explicit
Option Private Module



Function GoogleXML(ByVal iAdress As String, ByVal iType As String)
'https://developers.google.com/maps/documentation/geocoding/intro

    Dim XMLDoc As Object, tmpArray, iURL As String
    On Error Resume Next
    
    ReDim tmpArray(1 To 3): DoEvents
    iURL = "https://maps.googleapis.com/maps/api/geocode/xml?key=" & apiGoogle & "&" & iType & "=" & iAdress & "&region=RU&language=ru"
    
    Set XMLDoc = CreateObject("MSXML2.DOMDocument"): XMLDoc.async = False

    If XMLDoc.Load(iURL) = True Then
        With XMLDoc.DocumentElement
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            tmpArray(1) = .SelectSingleNode("//location/lng").Text
            tmpArray(2) = .SelectSingleNode("//location/lat").Text

            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
            tmpArray(3) = .SelectSingleNode("//GeocodeResponse/result/formatted_address").Text
        End With
    Else
        tmpArray(1) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|": tmpArray(2) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|": tmpArray(3) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Application.Wait Time:=Now + TimeSerial(0, 0, 0.5)    '|fffd||fffd||fffd||fffd||fffd| 0.5 |fffd||fffd||fffd|.
    End If

    GoogleXML = tmpArray
    Set XMLDoc = Nothing: Erase tmpArray
End Function


Attribute VB_Name = "xmlYandex"
''''''''''''''''''''''''''''''''''''''
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: excelstore.pro
'E-mail |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|: info@excelstore.pro
''''''''''''''''''''''''''''''''''''''


Option Explicit
Option Private Module



Function YandexXML(ByVal iAdress As String)
'https://tech.yandex.ru/maps/doc/geocoder/desc/concepts/input_params-docpage/

    Dim XMLDoc As Object, iURL As String, strXML As String, tmpArray, r
    On Error Resume Next

    ReDim tmpArray(1 To 3): DoEvents
    iURL = "http://geocode-maps.yandex.ru/1.x/?apikey=" & apiYandex & "&geocode=" & iAdress & "&format=xml&lang=ru_RU&results=1"
    
    Set XMLDoc = CreateObject("MSXML2.DOMDocument")
    XMLDoc.async = False
    
    If XMLDoc.Load(iURL) = True Then
        With XMLDoc.DocumentElement
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strXML = .SelectSingleNode("//Point/pos").Text
            r = Split(strXML, " ", , vbTextCompare)
            tmpArray(1) = r(0): tmpArray(2) = r(1)
            
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
            tmpArray(3) = .SelectSingleNode("//metaDataProperty/GeocoderMetaData/text").Text
        End With
    Else
        tmpArray(1) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|": tmpArray(2) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|": tmpArray(3) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Application.Wait Time:=Now + TimeSerial(0, 0, 0.5)    '|fffd||fffd||fffd||fffd||fffd| 0.5 |fffd||fffd||fffd|.
    End If
    
    YandexXML = tmpArray
    Set XMLDoc = Nothing: Erase tmpArray
End Function

Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "|fffd||fffd||fffd||fffd|3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
