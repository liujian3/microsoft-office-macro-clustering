Attribute VB_Name = "EventClassModule"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public WithEvents App As Word.Application
Attribute App.VB_VarHelpID = -1

Private Sub app_DocumentBeforeSave(ByVal Doc As Document, SaveAsUI As Boolean, Cancel As Boolean)
'Dim aStory As Range
'Dim aField As Field

'Set aStory = ActiveDocument.StoryRanges(wdPrimaryHeaderStory)
'For Each aField In aStory.NextStoryRange.Fields
'    aField.Update
'Next aField

'Set aStory = Nothing

End Sub


Attribute VB_Name = "NewMacros"
Const PWD As String = "faiadmin"
'Const PWD As String = ""
Const Head As String = "F-S116"
Const DataRowsPerPage = 17
'New 3/24/06
'D. Meier
Dim x As New EventClassModule
Sub Register_Event_Handler()
    Set x.App = Word.Application
End Sub
Sub Add_Doc_Line()

On Error GoTo Add_Doc_Line_Error

Dim intMulti As Integer

intMulti = CInt(InputBox("Enter Number of Lines to Add:", "Add Lines", "1"))
If intMulti < 1 Then Exit Sub
AddALine "Baseline", intMulti

Add_Doc_Line_Error:
    
End Sub
Sub Rmv_Doc_Line()

RemoveALine "Baseline", "LimitLine", 2, False
    
End Sub

Sub AddALine(BMark As String, intMulti As Integer)
'Added to F-S124 01/27/06
'AddALine - BMark is beginning bookmark, intMulti is number of lines to add, obtained from inputbox (not used in this Form)
Dim ffDropDown As DropDown
Dim FieldCount As Integer
Dim intCell1Value As Integer

Application.ScreenUpdating = False

UnprotectDoc
    
For i = 1 To intMulti

    With Selection
        .GoTo What:=wdGoToBookmark, Name:=BMark
        .MoveUp Unit:=wdLine, Count:=1
        .SelectRow
        
        '*********************************************************
        'Added to accommodate AddLineNumber
        'intCell1Value passes line number to AddLineNumber
        .Cells(1).Select
        intCell1Value = CInt(Left(.Text, Len(.Text) - 2))
        '*********************************************************
        .SelectRow
        
        FieldCount = .FormFields.Count
        
        .Copy
        .Collapse Direction:=wdCollapseEnd
        .Paste
        .MoveUp Unit:=wdLine, Count:=1
        
        'The following do loop clears the contents of the copied form fields in the new line
        Do While FieldCount > 0
        .SelectRow
            
            Set ffDropDown = .FormFields(FieldCount).DropDown
        
            If .FormFields(FieldCount).Type = wdFieldFormTextInput Then
                .FormFields(FieldCount).TextInput.Clear
            Else
                ffDropDown.Value = 1
            End If
            
            FieldCount = FieldCount - 1
        Loop
        
    End With
    
    AddLineNumber (intCell1Value)

Next i

'AddLineNumber (intCell1Value)
Call Register_Event_Handler

ProtectDoc
Application.ScreenUpdating = True
Set ffDropDown = Nothing

End Sub
Sub RemoveALine(BMark As String, LimitLine As String, LowerLimit As Integer, DeleteNoConfirm As Boolean)
'Bmark is beginning bookmark, limitline bookmark exists on line to not delete
'LowerLimit is the number of rows to leave in section
'DeleteNoConfirm - set as true to prevent delete-confirm message

'RemoveALine - BMark is beginning bookmark, LimitLine is bookmark that marks the
'line that won't be deleted, LowerLimit is msgbox value
'DeleteNoConfirm - whether or not to confirm deletion of rows, typically False

Dim ffFormField As FormField
Dim intRetval As Integer
Dim strMsg As String
Application.ScreenUpdating = False
UnprotectDoc
        
With Selection
    .GoTo What:=wdGoToBookmark, Name:=BMark
    .MoveUp Unit:=wdLine, Count:=1
    
    .SelectRow
    
    FieldCount = .FormFields.Count
    
    'Lowerlimit parameter accommodates need to leave different number of lines in different sections
    If .Bookmarks.Exists(LimitLine) Then
    
 '       Select Case LowerLimit
  '          Case 1
   '             strMsg = "One row"
    '        Case 2
     '           strMsg = "One row"
      '      Case 3
       '         strMsg = "Three rows"
        '    Case 4
         '       strMsg = "Four rows"
          '  Case 5
           '     strMsg = "Five rows"
            'Case Else
             '   intRetval = MsgBox("LowerLimit value not valid.", vbCritical, Head)
              '  GoTo RemoveALine_Exit
    '    End Select
        
        intRetval = MsgBox("One row must remain in" & Chr(10) & "this section of the form.", vbCritical, Head)
        GoTo RemoveALine_Exit
    End If
    
    If DeleteNoConfirm = False Then
        Do While FieldCount > 0
            .SelectRow
            
            Set ffFormField = .FormFields(FieldCount)
                
            If ffFormField.Type <> wdFieldFormCheckBox And Trim(ffFormField.Result) <> "" Then
                intRetval = MsgBox("This line contains information." & vbCrLf & "Delete the line anyway?", vbYesNo, Head)
            ElseIf ffFormField.Type = wdFieldFormCheckBox Then
                If ffFormField.CheckBox.Value = True Then
                    intRetval = MsgBox("This line contains information." & vbCrLf & "Delete the line anyway?", vbYesNo, Head)
                End If
            End If
            
            If intRetval = 6 Then
                GoTo DeleteTheRow
            Else
                If intRetval = 7 Then GoTo RemoveALine_Exit
            End If
            
            FieldCount = FieldCount - 1
        Loop
    Else
        GoTo DeleteTheRow
    End If
    
    
DeleteTheRow:
        .Rows.Delete
        .GoTo What:=wdGoToBookmark, Name:=BMark
        .MoveUp Unit:=wdLine, Count:=1
        
        'Added for this document
        'Leaves Cursor at leftmost cell of row
        .Move Unit:=wdCell, Count:=-5
        '********************************************
RemoveALine_Exit:
End With
    
'Added for this document
Call Register_Event_Handler
'********************************************
ProtectDoc

Application.PrintPreview = True
Application.PrintPreview = False
Application.ScreenUpdating = True
Set ffFormField = Nothing

End Sub

Sub ProtectDoc()

With ActiveDocument
    If .ProtectionType <> 2 Then
        For Each aSection In .Sections
            aSection.ProtectedForForms = True
        Next
        .Protect Password:=PWD, noreset:=True, Type:=wdAllowOnlyFormFields
    End If
End With


End Sub

Sub UnprotectDoc()

If ActiveDocument.ProtectionType = 2 Then
    ActiveDocument.Unprotect Password:=PWD
End If

End Sub
Sub AddLineNumber(intLineCopyFrom As Integer)
'Receives current line number from calling proc.
'Adds one and puts the new value into cell 5 of
'the new line

With Selection

    .GoTo What:=wdGoToBookmark, Name:="baseline"
    .MoveUp Unit:=wdLine, Count:=1
    .SelectRow
    .Cells(1).Select
    .TypeText (intLineCopyFrom + 1)
    
    'Leaves Cursor at leftmost cell of row
    .Move Unit:=wdCell, Count:=-5
    
End With

End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


INQUEST-PP=macro
