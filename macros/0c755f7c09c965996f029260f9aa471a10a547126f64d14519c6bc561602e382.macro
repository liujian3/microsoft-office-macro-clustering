Attribute VB_Name = "DelRowsInSpr"

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| Kod_Type ~4881
Public Sub ChangeRangeProtect(strRangeName As String)

    Dim r As Range, i As Long

    If Range("Kod_Type").Value <> "SIN" Then

        fUnProtect True, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Index

        ActiveWorkbook.Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Activate
        Set r = Range("Data_PPZ")
        For i = r.Rows.Count To 1 Step -1
            If r.Cells(i, 1) = "05" Or r.Cells(i, 1) = "89" Then r.Rows(i).Delete Shift:=xlUp
        Next i

        fUnProtect False, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Index

    End If
End Sub
Attribute VB_Name = "GetDataFromSvod2"
Option Explicit

Public oTables As clsTables

Public Sub fGoSubXLT()
    Dim i As Integer
    Dim tObj As clsTable
    Dim strTemp As String
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    
    Set oTables = Nothing
    
    Set oTables = New clsTables
    With Range("RefTables")
        For i = 2 To 2
            Set tObj = oTables.Add(CStr(.Cells(i, 1)))
            tObj.Number_ = .Cells(i, 2)
            tObj.Table_ = .Cells(i, 3)
            tObj.FlagRefresh_ = IIf(.Cells(i, 7) = 1, True, False)
            strTemp = Replace(.Cells(i, 4), "OperState", "Operation" & ":" & .Cells(i, 6))
            strTemp = Replace(strTemp, "<RepFile>", .Cells(i, 5))
            tObj.SQL_ = strTemp
        Next
    End With
    
'''   '<Spir> 07092017 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ~4881
  ' ChangeRangeProtect "Data_PPZ"

    Application.Worksheets(1).Activate
End Sub


Public Sub SetCST(ByVal NumRange As String)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer
    
    Application.ScreenUpdating = False
    blnFlagFilling = True
    UnProtectXlt
    Application.ScreenUpdating = False
    
    oTables.Item(CStr(Application.ActiveSheet.name)).Cst_ = ""
    If Range("ListCST" & NumRange) = "|fffd||fffd||fffd|" Then
        oTables.Item(CStr(Application.ActiveSheet.name)).Cst_ = "%%%%%%%"
    Else
        With Range("RefCST" & NumRange)
            For i = 1 To .Rows.Count
                If Range("ListCST" & NumRange) = .Cells(i, 1) Then
                    oTables.Item(CStr(Application.ActiveSheet.name)).Cst_ = .Cells(i, 2)
                    Exit For
                End If
            Next
            If i > .Rows.Count Then
                MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
                oTables.Item(CStr(Application.ActiveSheet.name)).Cst_ = "%%%%%%%"
            End If
        End With
    End If
    
    GetDataFromSvod
    
    ProtectXlt
    blnFlagFilling = False
    Application.ScreenUpdating = True
    
End Sub

Public Sub SetYear(ByVal NumRange As String)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    Dim i As Integer
    
    Application.ScreenUpdating = False
    blnFlagFilling = True
    UnProtectXlt
    Application.ScreenUpdating = False
    
    oTables.Item(CStr(Application.ActiveSheet.name)).Year_ = ""
    
    If Range("ListYears" & NumRange) = "|fffd||fffd||fffd|" Then
        oTables.Item(CStr(Application.ActiveSheet.name)).Year_ = "%"
    Else
        With Range("RefYears" & NumRange)
            For i = 1 To .Rows.Count
                If Range("ListYears" & NumRange) = .Cells(i, 1) Then
                    oTables.Item(CStr(Application.ActiveSheet.name)).Year_ = .Cells(i, 2)
                    Exit For
                End If
            Next
            If i > .Rows.Count Then
                MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|!", vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
                oTables.Item(CStr(Application.ActiveSheet.name)).Year_ = "%"
            End If
        End With
    End If
    
    GetDataFromSvod
    
    ProtectXlt
    
    
    blnFlagFilling = False
    
    Application.ScreenUpdating = True
    
    
End Sub

Public Sub SetTypeOrg(ByVal NumRange As String)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim j As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRowB As Integer    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRowE As Integer    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Application.ScreenUpdating = False
    blnFlagFilling = True
    UnProtectXlt
    Application.ScreenUpdating = False
    
    With Range("RefTypeOrg" & NumRange)
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        For i = 1 To .Rows.Count
            If Trim(.Cells(i, 2)) <> "90" Then
                iRowB = Range("TypeOrg" & .Cells(i, 2) & "_" & NumRange).Row
                iRowE = Range("TypeOrg" & .Cells(i, 2) & "_" & NumRange).Row + Range("TypeOrg" & .Cells(i, 2) & "_" & NumRange).Rows.Count - 1
                Rows(CStr(iRowB) & ":" & CStr(iRowE)).Select
                Selection.EntireRow.Hidden = True
            End If
        Next
        Application.ScreenUpdating = False
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To .Rows.Count
            If .Cells(i, 1) = Range("ListTypeOrg" & NumRange) Then
                If Trim(.Cells(i, 2)) <> "90" Then
                    iRowB = Range("TypeOrg" & .Cells(i, 2) & "_" & NumRange).Row
                    iRowE = Range("TypeOrg" & .Cells(i, 2) & "_" & NumRange).Row + Range("TypeOrg" & .Cells(i, 2) & "_" & NumRange).Rows.Count - 1
                    Rows(CStr(iRowB) & ":" & CStr(iRowE)).Select
                    Selection.EntireRow.Hidden = False
                    Exit For
                Else
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                    For j = 1 To .Rows.Count
                        If Trim(.Cells(j, 2)) <> "90" Then
                            iRowB = Range("TypeOrg" & .Cells(j, 2) & "_" & NumRange).Row
                            iRowE = Range("TypeOrg" & .Cells(j, 2) & "_" & NumRange).Row + Range("TypeOrg" & .Cells(j, 2) & "_" & NumRange).Rows.Count - 1
                            Rows(CStr(iRowB) & ":" & CStr(iRowE)).Select
                            Selection.EntireRow.Hidden = False
                        End If
                    Next
                    Exit For
                End If
            End If
        Next
    End With
    Application.ScreenUpdating = False
    
    ProtectXlt
    blnFlagFilling = False
    Application.ScreenUpdating = False
    ActiveWindow.SmallScroll -150   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Range("ListTypeOrg" & NumRange).Cells(1, 1).Activate
    
    Application.ScreenUpdating = True
    
End Sub

Public Sub SetOrg(ByVal CodeOrg As String)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Application.ScreenUpdating = False
    UnProtectXlt
    Application.ScreenUpdating = False
    blnFlagFilling = True
    
    With Range("SheetData2")
'        For k = 1 To .Rows.Count
            For i = 3 To .Columns.Count
                If Left(.Cells(1, i).Formula, 1) <> "=" Then
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Range(.Cells(1, i), .Cells(.Rows.Count - 1, i)).Select
                    Selection.ClearContents
                End If
            Next
'        Next
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If IsObject(goSvod) Then
        With oTables.Item(CStr(Application.ActiveSheet.name))
            .CodeOrg_ = CodeOrg
            If .ReadyToUse Then
                goSvod.GetArrayToRep .SQLUse
                Beep
            End If
        End With
    End If
    
    UnProtectXlt
    Application.ScreenUpdating = False
    HideRows "SheetData2", 4
    
    Range("ListOrg2").Select
    
    ProtectXlt
    Application.ScreenUpdating = True
    blnFlagFilling = False
    
End Sub

Public Sub HideRows(ByVal NameRange As String, NumCol As Integer)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Dim i As Long
    
    With Range(NameRange)
        For i = 1 To .Rows.Count - 1
            If .Cells(i, NumCol) = "" Then
                Rows(.Row + i - 1).Select
                Selection.EntireRow.Hidden = True
            Else
                Rows(.Row + i - 1).Select
                Selection.EntireRow.Hidden = False
            End If
        Next
    End With
End Sub

Public Sub UpdateDataSheet()
    GetDataFromSvod
End Sub


Private Sub ClearRanges(ByVal NumRange As Integer)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| TypeOrg |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    
    
    For k = 1 To Range("RefTypeOrg" & NumRange).Rows.Count
        With Range("TypeOrg" & Range("RefTypeOrg" & NumRange).Cells(k, 2))
            For i = 6 To .Columns.Count
                If Left(.Cells(1, i).Formula, 1) <> "=" And i <> 24 Then
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Range(.Cells(1, i), .Cells(.Rows.Count - 1, i)).Select
                    Selection.ClearContents
                End If
            Next
            
'            For i = 1 To .Rows.Count
'                For j = 4 To .Columns.Count
'                    If Left(.Cells(i, j).Formula, 1) <> "=" Then
'                        .Cells(i, j) = ""
'                    End If
'                Next
'            Next
        End With
    Next
    
End Sub

Public Sub GetDataFromSvod()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    On Error Resume Next
    
    If IsObject(goSvod) Then
        With oTables.Item(CStr(Application.ActiveSheet.name))
            If .ReadyToUse Then
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                Application.ScreenUpdating = False
                UnProtectXlt
                Application.ScreenUpdating = False
                blnFlagFilling = True
                ClearRanges .Number_
                blnFlagFilling = False
                ProtectXlt
                Application.ScreenUpdating = False
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                goSvod.GetArrayToRep .SQLUse
                Beep
            End If
'            Application.ScreenUpdating = True
        End With
    End If
End Sub

'Public Sub SetData_ForShablon(ByRef arrData As Variant)
'    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| SetDataForShablon
'    Dim i As Long
'
'    If IsArray(arrData) Then
'        For i = LBound(arrData, 1) To UBound(arrData, 1)
'            Range(CStr(arrData(i, 1))) = arrData(i, 2)
'        Next
'    End If
'End Sub



Attribute VB_Name = "ModReg"
Public Declare Function RegOpenKey Lib "advapi32.dll" Alias "RegOpenKeyA" (ByVal hKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long
Public Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, lpType As Long, lpData As Any, lpcbData As Long) As Long         ' Note that if you declare the lpData parameter as String, you must pass it By Value.

Public Function GetRegistrValue() As String
Dim lReturn As Long
Dim shKey As String, sSubKey As String, hKey As Long
Dim hSubKeyHandle As Long
Dim sValue As String
Dim sPar As String
Dim strSetting As String
Dim lngDataLen As Long

hKey = &H80000002   'Case "HKEY_LOCAL_MACHINE"
sSubKey = "SOFTWARE\Rassvet\Aksiok\Vfp9\VSvod"
sPar = "ProgramXls"
    
lReturn = RegOpenKey(hKey, sSubKey, hSubKeyHandle)
If lReturn <> 0 Then Exit Function
strSetting = Space(255)
lngDataLen = Len(strSetting)
lReturn = RegQueryValueEx(hSubKeyHandle, sPar, ByVal 0, REG_EXPAND_SZ, ByVal strSetting, lngDataLen)
If strSetting = Space(255) Then GetRegistrValue = "": Exit Function     '"C:\Aksiok\Prg\VSvod\Xlt\"
If lngDataLen > 1 Then sValue = Left(strSetting, lngDataLen - 1)
GetRegistrValue = sValue
End Function


Attribute VB_Name = "SmetaSD"
'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'RefTypeOrg(N) - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 1 |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'             |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| TypeOrgXX
'             |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd|.|fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| RefTypeOrg2 |fffd| |fffd|.|fffd|. |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'RefTypeOrgNames - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 1 |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'ListTypeOrg(N) - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| (ListTypeOrg2 |fffd| |fffd|.|fffd|.)
'ListOrg(N) - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'RefOrg(N) - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Public CodeTypeOrgSel As String '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public blnFlagFilling As Boolean    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'Public Sub fGoSubXLT()
'    CreateTypesOrg
'    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd|
'    Application.Worksheets(1).Activate
'    Range("ListTypeOrg1").Cells(1, 1) = "|fffd||fffd||fffd|"
'End Sub
'

Public Sub CreateTypesOrg()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ListTypeOrgN
    Dim i As Integer
    
    Application.ScreenUpdating = False
    UnProtectXlt
    blnFlagFilling = True
    
    With Application.ActiveWorkbook.Sheets
        For i = 1 To .Count
            If .Item(i).Visible Then
                .Item(i).Activate
                CreateTypesOrg_ CStr(i)
            End If
        Next
    End With
    
    ProtectXlt
    blnFlagFilling = False
    Application.ScreenUpdating = True

End Sub

Private Sub CreateTypesOrg_(Optional ByVal NumList As String = "")
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    On Error GoTo errHandler
    
    Range(CStr("ListTypeOrg" & NumList)).Select
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=RefTypeOrgNames" & NumList
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "|fffd||fffd||fffd||fffd||fffd||fffd|"
        .InputMessage = ""
        .ErrorMessage = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
        .ShowInput = True
        .ShowError = True
    End With
    Range("ListTypeOrg" & NumList).Cells(1, 1) = Range("RefTypeOrgNames").Cells(1, 1)
    Exit Sub
errHandler:
    Err.Clear
End Sub


Public Sub SelectTypeOrg1()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim j As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRowB As Integer    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRowE As Integer    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Application.ScreenUpdating = False
    blnFlagFilling = True
    UnProtectXlt
    
    With Range("RefTypeOrg1")
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        For i = 1 To .Rows.Count
            If Trim(.Cells(i, 2)) <> "90" Then
                iRowB = Range("TypeOrg" & .Cells(i, 2)).Row
                iRowE = Range("TypeOrg" & .Cells(i, 2)).Row + Range("TypeOrg" & .Cells(i, 2)).Rows.Count - 1
                Rows(CStr(iRowB) & ":" & CStr(iRowE)).Select
                Selection.EntireRow.Hidden = True
            End If
        Next
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To .Rows.Count
            If .Cells(i, 1) = Range("ListTypeOrg1") Then
                If Trim(.Cells(i, 2)) <> "90" Then
                    iRowB = Range("TypeOrg" & .Cells(i, 2)).Row
                    iRowE = Range("TypeOrg" & .Cells(i, 2)).Row + Range("TypeOrg" & .Cells(i, 2)).Rows.Count - 1
                    Rows(CStr(iRowB) & ":" & CStr(iRowE)).Select
                    Selection.EntireRow.Hidden = False
                    Exit For
                Else
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                    For j = 1 To .Rows.Count
                        If Trim(.Cells(j, 2)) <> "90" Then
                            iRowB = Range("TypeOrg" & .Cells(j, 2)).Row
                            iRowE = Range("TypeOrg" & .Cells(j, 2)).Row + Range("TypeOrg" & .Cells(j, 2)).Rows.Count - 1
                            Rows(CStr(iRowB) & ":" & CStr(iRowE)).Select
                            Selection.EntireRow.Hidden = False
                        End If
                    Next
                    Exit For
                End If
            End If
        Next
    End With
    
    ProtectXlt
    blnFlagFilling = False
    
    ActiveWindow.SmallScroll -150   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Range("ListTypeOrg1").Cells(1, 1).Activate
    
    Application.ScreenUpdating = True
    
End Sub

Public Sub SelectTypeOrg2()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRowB As Integer    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRowE As Integer    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iCount As Integer
    Dim iDiff As Integer
    
    Application.ScreenUpdating = False
    blnFlagFilling = True
    UnProtectXlt
    Application.ScreenUpdating = False
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    'Application.Worksheets(2).Activate
    With Range("RefOrg2")
        If .Rows.Count > 2 Then
            For i = 2 To .Rows.Count - 1
                Rows(.Row + 1).Select
                Selection.EntireRow.Delete
            Next
        End If
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = False
    iCount = 0
    With Range("RefTypeOrg2")
        For i = 1 To .Rows.Count
            If .Cells(i, 1) = Range("ListTypeOrg2") Then
                iCount = i
                Exit For
            End If
        Next
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = False
    If iCount > 0 Then
        CodeTypeOrgSel = Range("RefTypeOrg2").Cells(iCount, 2)
        With Range("TypeOrg" & Range("RefTypeOrg2").Cells(iCount, 2))
            If Trim(.Cells(.Rows.Count, 3)) = "" Then
                iDiff = -1
            Else
                iDiff = 0
            End If
            
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            Rows(Range("RefOrg2").Row + 1).Select
            For i = 1 To .Rows.Count - 2 + iDiff
                Selection.EntireRow.Insert
            Next
            
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            For i = 1 To .Rows.Count + iDiff
                Range("RefOrg2").Cells(i, 1) = .Cells(i, 3) & "  " & .Cells(i, 2)
            Next
        End With
    End If
    
    blnFlagFilling = False
    
    Range("ListOrg2") = ""
    Application.ScreenUpdating = False
    Range("ListOrg2").Select
    UnProtectXlt
    Application.ScreenUpdating = False
    
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=RefOrg2"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "|fffd||fffd||fffd||fffd||fffd||fffd|"
        .InputMessage = ""
        .ErrorMessage = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
        .ShowInput = True
        .ShowError = True
    End With
    
    ProtectXlt
    Application.ScreenUpdating = True
    
End Sub


Public Sub SelectOrg2()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strKOrg As String   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strReg As String    '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strCodeType As String   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim j As Integer    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strFormula As String    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim blnFlagNullOrg As Boolean   '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    
    On Error Resume Next
    If Range("ListOrg2") = "" Then blnFlagNullOrg = True Else blnFlagNullOrg = False
    Application.ScreenUpdating = False
    blnFlagFilling = False
    UnProtectXlt
    
    If Not blnFlagNullOrg Then
        strKOrg = Trim(Left(Range("ListOrg2"), 5))
        strReg = FindReg(strKOrg, "TypeOrg" & CodeTypeOrgSel)
    End If
    
    Application.ScreenUpdating = False
    With Range("Data2")
        For i = 1 To .Rows.Count
            For j = 1 To .Columns.Count
                If Not (.Cells(i, j).Comment Is Nothing) Then
                    If Trim(.Cells(i, j).Comment.Text) <> "" Then
                        If Not blnFlagNullOrg Then
                            strFormula = Replace(Trim(.Cells(i, j).Comment.Text), "<KOrg>", strKOrg, , , vbTextCompare)
                            strFormula = Replace(strFormula, "<REG>", strReg, , , vbTextCompare)
                            strFormula = Replace(strFormula, "<Type>", Right(CodeTypeOrgSel, 1), , , vbTextCompare)
                            strCodeType = Range(CStr("ss" & strKOrg))
                            If Len(strCodeType) > 0 Then
                                strFormula = Replace(strFormula, "<STyp>", strCodeType, , , vbTextCompare)
                            End If
                            .Cells(i, j).FormulaLocal = strFormula
                        Else
                            .Cells(i, j).FormulaLocal = ""
                        End If
                        .Cells(i, j).Comment.Visible = False
                    End If
                End If
            Next
        Next
    End With
    
    ProtectXlt
    blnFlagFilling = False
    Application.ScreenUpdating = True
End Sub


Private Function FindReg(ByVal CodeOrg As String, ByVal NameRange As String) As String
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer
    
    With Range(NameRange)
        For i = 1 To .Rows.Count
            If .Cells(i, 3) = CodeOrg Then
                FindReg = Trim(.Cells(i, 4))
                Exit Function
            End If
        Next
    End With
End Function

Attribute VB_Name = "clsTable"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private tCST_ As String     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Private tYear_ As String    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Private tTypeOrg_ As String   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Private tCodeOrg_ As String     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private tNumber_ As Integer   '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Private tTable_ As String      '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Private tDopCode_ As String     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Private tFlagRefresh_ As Boolean '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private tSQL_ As String       '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public SQLUse As String        '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|


Public Property Get ReadyToUse() As Boolean
    Dim strTemp As String
    
    strTemp = Replace(SQLUse, "<Period>", "")
    strTemp = Replace(strTemp, "<RepFile>", "")
    strTemp = Replace(strTemp, "<Operation", "")
    strTemp = Replace(strTemp, "<DopCode>", "")
    If InStr(1, strTemp, "<") > 0 And InStr(1, strTemp, ">") > 0 Then
        ReadyToUse = False
    Else
        ReadyToUse = True
    End If
End Property


Public Property Get Cst_() As String
    Cst_ = tCST_
End Property

Public Property Let Cst_(ByVal NewVal As String)
    tCST_ = NewVal
    CreateQuery
End Property


Public Property Get DopCode_() As String
    DopCode_ = tDopCode_
End Property

Public Property Let DopCode_(ByVal NewVal As String)
    tDopCode_ = NewVal
    CreateQuery
End Property


Public Property Get Year_() As String
    Year_ = tYear_
End Property

Public Property Let Year_(ByVal NewVal As String)
    tYear_ = NewVal
    CreateQuery
End Property


Public Property Get Table_() As String
    Table_ = tTable_
End Property

Public Property Let Table_(ByVal NewVal As String)
    tTable_ = NewVal
    CreateQuery
End Property


Public Property Get FlagRefresh_() As String
    FlagRefresh_ = tFlagRefresh_
End Property

Public Property Let FlagRefresh_(ByVal NewVal As String)
    tFlagRefresh_ = NewVal
End Property


Public Property Get TypeOrg_() As String
    TypeOrg_ = tTypeOrg_
End Property

Public Property Let TypeOrg_(ByVal NewVal As String)
    tTypeOrg_ = NewVal
End Property


Public Property Get CodeOrg_() As String
    CodeOrg_ = tCodeOrg_
End Property

Public Property Let CodeOrg_(ByVal NewVal As String)
    tCodeOrg_ = NewVal
    CreateQuery
End Property


Public Property Get Number_() As Integer
    Number_ = tNumber_
End Property

Public Property Let Number_(ByVal NewVal As Integer)
    tNumber_ = NewVal
    CreateQuery
End Property


Public Property Get SQL_() As String
    SQL_ = tSQL_
End Property

Public Property Let SQL_(ByVal NewVal As String)
    tSQL_ = NewVal
    CreateQuery
End Property

Private Sub CreateQuery()
    Dim strTemp As String
    
    strTemp = Replace(tSQL_, "<Table>", tTable_)
    strTemp = Replace(strTemp, "<CST>", tCST_)
    strTemp = Replace(strTemp, "<Year>", tYear_)
    strTemp = Replace(strTemp, "<CodeOrg>", tCodeOrg_)
    strTemp = Replace(strTemp, "<DopCode>", tDopCode_)
    
    SQLUse = strTemp
End Sub

Private Sub Class_Initialize()
    tFlagRefresh_ = False
End Sub
Attribute VB_Name = "clsTables"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Tables As Collection

Public Function Add(ByVal Index As Variant) As clsTable
    Dim tObj As clsTable
    
    Set tObj = New clsTable
    Tables.Add tObj, Index
    With tObj
        .Table_ = ""
        .Cst_ = ""
        .Year_ = ""
    End With
    Set Add = tObj
    Set tObj = Nothing
End Function

Public Sub Remove(ByVal Index As Variant)
    Tables.Remove Index
End Sub

Public Function Item(ByVal Index As Variant) As clsTable
    Set Item = Tables(Index)
End Function

Public Function Count() As Long
    Count = Tables.Count
End Function

'===========================================
Private Sub Class_Initialize()
    Set Tables = New Collection
End Sub

Private Sub Class_Terminate()
    Set Tables = Nothing
End Sub


Attribute VB_Name = "frmAddRow"
Attribute VB_Base = "0{04001C32-C424-4E3F-8713-982D4B6021E6}{3A173272-831B-42DB-B4A8-CD8DAF3056B1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False










Option Explicit
''''''''''''''''''''''''''''''''''''''''''''
'**** Version 28.07.2005 *******************
''''''''''''''''''''''''''''''''''''''''''''


Public ObjectName As String
Public IsUnload As Boolean


Public Property Set ObjectDataSprav(NewObject As Object)
        
    Dim objData As Object
    Dim i As Long
    Dim ctl As Control
    Dim obj As Object
    Dim objCol As Object
    Dim iLblLeft As Long
    Dim iLblWidth As Integer
    Dim cKodR, cNameR, cDataR As String
    Dim lEmpty As Boolean
    Dim iVal As Long
    
    On Error GoTo errHandler
    
    Me.IsUnload = False
    
    iLblLeft = 5
    iLblWidth = 65
'    cKod = "Kod_"
'    cName = "Name_"
'    cData = "Data_"
    
    Set objData = NewObject
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    For Each ctl In Me.Controls
        If TypeName(ctl) <> "CommandButton" Then
            ctl.Visible = False
        End If
    Next ctl
    
    With objData
        Me.Caption = .cName
        Me.Height = .iHeight
        Me.Width = .iWidth
        
        With .SpravCollection
            If .Count > 0 Then
                For i = 1 To .Count
                    With .Item(Val(i))
                        cDataR = cData & .cSprav
                        cKodR = cKod & .cSprav
                        cNameR = cName & .cSprav
                        
                        Select Case .cControl
                            Case "cmbBSR"
                                lblBSR.Visible = True
                                lblBSR.Caption = Trim(.cName)
                                lblBSR.Height = .iLblHeight
                                lblBSR.Width = .iLblWidth
                                lblBSR.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblBSR.Top = .iTop
                                cmbBSR.Visible = True
                                cmbBSR.Tag = Trim(.cSprav)
                                cmbBSR.Height = .iHeight
                                cmbBSR.Width = .iWidth
                                cmbBSR.Left = Me.Width - .iWidth - iLblLeft
                                cmbBSR.Top = .iTop
                                cmbBSR.RowSource = cDataR
                                cmbBSR.ColumnCount = .iColCount
                                cmbBSR.ColumnWidths = .cColWidths
                                
                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                lEmpty = EmptySpr(cDataR)
                                If lEmpty = True Then
                                    cmbBSR.Enabled = False
                                Else
                                    cmbBSR.Enabled = True
                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        cmbBSR.ListIndex = 0
                                    Else
                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
                                        cmbBSR.ListIndex = iVal
                                    End If
                                End If
                            Case "cmbEI"
                                lblEI.Visible = True
                                lblEI.Caption = Trim(.cName)
                                lblEI.Height = .iLblHeight
                                lblEI.Width = .iLblWidth
                                lblEI.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblEI.Top = .iTop
                                cmbEI.Visible = True
                                cmbEI.Tag = Trim(.cSprav)
                                cmbEI.Height = .iHeight
                                cmbEI.Width = .iWidth
                                cmbEI.Left = Me.Width - .iWidth - iLblLeft
                                cmbEI.Top = .iTop
                                cmbEI.RowSource = cDataR
                                cmbEI.ColumnCount = .iColCount
                                cmbEI.ColumnWidths = .cColWidths
                                
                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                lEmpty = EmptySpr(cDataR)
                                If lEmpty = True Then
                                    cmbEI.Enabled = False
                                Else
                                    cmbEI.Enabled = True
                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        cmbEI.ListIndex = 0
                                    Else
                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
                                        cmbEI.ListIndex = iVal
                                    End If
                                End If
                            Case "listORG"
                                lblORG.Visible = True
                                lblORG.Caption = Trim(.cName)
                                lblORG.Height = .iLblHeight
                                lblORG.Width = .iLblWidth
                                lblORG.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblORG.Top = .iTop
                                listORG.Visible = True
                                listORG.Tag = Trim(.cSprav)
                                listORG.Height = .iHeight
                                listORG.Width = .iWidth
                                listORG.Left = Me.Width - .iWidth - iLblLeft
                                listORG.Top = .iTop
                                listORG.RowSource = cDataR
                                listORG.ColumnCount = .iColCount
                                listORG.ColumnWidths = .cColWidths
                                
                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                lEmpty = EmptySpr(cDataR)
                                If lEmpty = True Then
                                    listORG.Enabled = False
                                Else
                                    listORG.Enabled = True
                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listORG.ListIndex = 0
                                    Else
                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
                                        listORG.ListIndex = iVal
                                    End If
                                End If
                            Case "listFKR"
                                lblFKR.Visible = True
                                lblFKR.Caption = Trim(.cName)
                                lblFKR.Height = .iLblHeight
                                lblFKR.Width = .iLblWidth
                                lblFKR.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblFKR.Top = .iTop
                                listFKR.Visible = True
                                listFKR.Tag = Trim(.cSprav)
                                listFKR.Height = .iHeight
                                listFKR.Width = .iWidth
                                listFKR.Left = Me.Width - .iWidth - iLblLeft
                                listFKR.Top = .iTop
                                listFKR.RowSource = cDataR
                                listFKR.ColumnCount = .iColCount
                                listFKR.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listFKR.Enabled = False
'                                Else
'                                    listFKR.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listFKR.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listFKR.ListIndex = iVal
'                                    End If
'                                End If
                             Case "listPLS"
                                lblPLS.Visible = True
                                lblPLS.Caption = Trim(.cName)
                                lblPLS.Height = .iLblHeight
                                lblPLS.Width = .iLblWidth
                                lblPLS.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblPLS.Top = .iTop
                                listPLS.Visible = True
                                listPLS.Tag = Trim(.cSprav)
                                listPLS.Height = .iHeight
                                listPLS.Width = .iWidth
                                listPLS.Left = Me.Width - .iWidth - iLblLeft
                                listPLS.Top = .iTop
                                listPLS.RowSource = cDataR
                                listPLS.ColumnCount = .iColCount
                                listPLS.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listPLS.Enabled = False
'                                Else
'                                    listPLS.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listPLS.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listPLS.ListIndex = iVal
'                                    End If
'                                End If
                            Case "listSGU"
                                lblSGU.Visible = True
                                lblSGU.Caption = Trim(.cName)
                                lblSGU.Height = .iLblHeight
                                lblSGU.Width = .iLblWidth
                                lblSGU.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblSGU.Top = .iTop
                                listSGU.Visible = True
                                listSGU.Tag = Trim(.cSprav)
                                listSGU.Height = .iHeight
                                listSGU.Width = .iWidth
                                listSGU.Left = Me.Width - .iWidth - iLblLeft
                                listSGU.Top = .iTop
                                listSGU.RowSource = cDataR
                                listSGU.ColumnCount = .iColCount
                                listSGU.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listSGU.Enabled = False
'                                Else
'                                    listSGU.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listSGU.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listSGU.ListIndex = iVal
'                                    End If
'                                End If
                             Case "listKLD"
                                lblKLD.Visible = True
                                lblKLD.Caption = Trim(.cName)
                                lblKLD.Height = .iLblHeight
                                lblKLD.Width = .iLblWidth
                                lblKLD.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblKLD.Top = .iTop
                                listKLD.Visible = True
                                listKLD.Tag = Trim(.cSprav)
                                listKLD.Height = .iHeight
                                listKLD.Width = .iWidth
                                listKLD.Left = Me.Width - .iWidth - iLblLeft
                                listKLD.Top = .iTop
                                listKLD.RowSource = cDataR
                                listKLD.ColumnCount = .iColCount
                                listKLD.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listKLD.Enabled = False
'                                Else
'                                    listKLD.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listKLD.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listKLD.ListIndex = iVal
'                                    End If
'                                End If
                             Case "listIFR"
                                lblIFR.Visible = True
                                lblIFR.Caption = Trim(.cName)
                                lblIFR.Height = .iLblHeight
                                lblIFR.Width = .iLblWidth
                                lblIFR.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblIFR.Top = .iTop
                                listIFR.Visible = True
                                listIFR.Tag = Trim(.cSprav)
                                listIFR.Height = .iHeight
                                listIFR.Width = .iWidth
                                listIFR.Left = Me.Width - .iWidth - iLblLeft
                                listIFR.Top = .iTop
                                listIFR.RowSource = cDataR
                                listIFR.ColumnCount = .iColCount
                                listIFR.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listIFR.Enabled = False
'                                Else
'                                    listIFR.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listIFR.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listIFR.ListIndex = iVal
'                                    End If
'                                End If
                            Case "listIFV"
                                lblIFV.Visible = True
                                lblIFV.Caption = Trim(.cName)
                                lblIFV.Height = .iLblHeight
                                lblIFV.Width = .iLblWidth
                                lblIFV.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblIFV.Top = .iTop
                                listIFV.Visible = True
                                listIFV.Tag = Trim(.cSprav)
                                listIFV.Height = .iHeight
                                listIFV.Width = .iWidth
                                listIFV.Left = Me.Width - .iWidth - iLblLeft
                                listIFV.Top = .iTop
                                listIFV.RowSource = cDataR
                                listIFV.ColumnCount = .iColCount
                                listIFV.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listIFV.Enabled = False
'                                Else
'                                    listIFV.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listIFV.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listIFV.ListIndex = iVal
'                                    End If
'                                End If
                             Case "optD"
                                optD.Visible = True
                                optD.Height = .iHeight
                                optD.Width = .iWidth
                                optD.Left = .iLeft
                                optD.Top = .iTop
                                optD.Tag = .cControl
                              Case "optR"
                                optR.Visible = True
                                optR.Height = .iHeight
                                optR.Width = .iWidth
                                optR.Left = .iLeft
                                optR.Top = .iTop
                                optR.Tag = .cControl
                              Case "optFR"
                                optFR.Visible = True
                                optFR.Height = .iHeight
                                optFR.Width = .iWidth
                                optFR.Left = .iLeft
                                optFR.Top = .iTop
                                optFR.Tag = .cControl
                              Case "optFV"
                                optFV.Visible = True
                                optFV.Height = .iHeight
                                optFV.Width = .iWidth
                                optFV.Left = .iLeft
                                optFV.Top = .iTop
                                optFV.Tag = .cControl
                            Case "butOK"
                                butOK.Visible = True
'                                butOK.Height = .iHeight
'                                butOK.Width = .iWidth
                                butOK.Left = Me.Width - butOK.Width - butCancel.Width - iLblLeft * 2
                                butOK.Top = Me.Height - butOK.Height * 1.5 - iLblLeft * 2
                            Case "butCancel"
                                butCancel.Visible = True
'                                butCancel.Height = .iHeight
'                                butCancel.Width = .iWidth
                                butCancel.Left = Me.Width - butCancel.Width - iLblLeft
                                butCancel.Top = Me.Height - butCancel.Height * 1.5 - iLblLeft * 2
                       End Select
                    End With
                Next i
            End If
        End With
    End With
    
    Exit Property
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (ObjectDataSprav)"
    Resume Next

End Property
Private Sub butCancel_Click()
    Set colValues = New Collection
'   Unload Me
    Me.Hide
End Sub

Private Sub butOK_Click()
    Dim ctl As Control
    Dim i As Long
    Dim cVal As String
    Dim iMax As Integer
    
    On Error GoTo errHandler
    
'    If Not (colValues Is Nothing) Then
'        For i = 1 To colValues.Count
'            colValues.Remove (Val(i))
'        Next i
'    End If
    Set colValues = New Collection
    
    For Each ctl In Me.Controls
        If TypeName(ctl) = "ComboBox" Or TypeName(ctl) = "ListBox" Then
            If ctl.Visible = True Then   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                iMax = Me.Controls(ctl.name).ColumnCount
                For i = 1 To iMax
                    If Me.Controls(ctl.name).Enabled = True Then
                        Me.Controls(ctl.name).BoundColumn = i
                        cVal = Me.Controls(ctl.name).Value
                    Else
                        cVal = ""
                    End If
                    Select Case i
                        Case 1
                            colValues.Add Item:=cVal, key:="Kod_" & ctl.Tag
                        Case 2
                            colValues.Add Item:=cVal, key:="Name_" & ctl.Tag
                        Case 3
                            colValues.Add Item:=cVal, key:="Col3_" & ctl.Tag
                    End Select
                Next i
            End If
        End If
        
        If TypeName(ctl) = "OptionButton" Then
            If ctl.Visible = True Then   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                colValues.Add Item:=Me.Controls(ctl.name).Value, key:=ctl.Tag
            End If
        End If
    Next ctl
    
    Me.Hide
    
    Exit Sub
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (cmdOK_Click)"
    Resume Next
End Sub

Private Sub optFR_Click()

    Me.listKLD.Enabled = False
    Me.listFKR.Enabled = False
    Me.listSGU.Enabled = False
    Me.listIFR.Enabled = True
    Me.listIFV.Enabled = False
    Me.listKLD.ListIndex = -1
    Me.listFKR.ListIndex = -1
    Me.listSGU.ListIndex = -1
    Me.listIFR.ListIndex = 0
    Me.listIFV.ListIndex = -1
    Me.Repaint
    
End Sub

Private Sub optFV_Click()

    Me.listKLD.Enabled = False
    Me.listFKR.Enabled = False
    Me.listSGU.Enabled = False
    Me.listIFR.Enabled = False
    Me.listIFV.Enabled = True
    Me.listKLD.ListIndex = -1
    Me.listFKR.ListIndex = -1
    Me.listSGU.ListIndex = -1
    Me.listIFR.ListIndex = -1
    Me.listIFV.ListIndex = 0
    Me.Repaint

End Sub

Private Sub UserForm_Activate()

    If Me.ObjectName = "KBK129" Then
        Me.optD.Value = True
        Me.listKLD.Enabled = True
        Me.listFKR.Enabled = False
        Me.listSGU.Enabled = False
        Me.listIFR.Enabled = False
        Me.listIFV.Enabled = False
        Me.listKLD.ListIndex = 0
        Me.listFKR.ListIndex = -1
        Me.listSGU.ListIndex = -1
        Me.listIFR.ListIndex = -1
        Me.listIFV.ListIndex = -1
    End If

End Sub

Private Sub optD_Click()
    Me.listKLD.Enabled = True
    Me.listFKR.Enabled = False
    Me.listSGU.Enabled = False
    Me.listIFR.Enabled = False
    Me.listIFV.Enabled = False
    Me.listKLD.ListIndex = 0
    Me.listFKR.ListIndex = -1
    Me.listSGU.ListIndex = -1
    Me.listIFR.ListIndex = -1
    Me.listIFV.ListIndex = -1
    Me.Repaint
    
End Sub

Private Sub optR_Click()
    Me.listKLD.Enabled = False
    Me.listFKR.Enabled = True
    Me.listSGU.Enabled = True
    Me.listIFR.Enabled = False
    Me.listIFV.Enabled = False
    Me.listKLD.ListIndex = -1
    Me.listFKR.ListIndex = 0
    Me.listSGU.ListIndex = 0
    Me.listIFR.ListIndex = -1
    Me.listIFV.ListIndex = -1
    Me.Repaint
    
End Sub

Private Sub UserForm_Initialize()
    Me.IsUnload = False
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If Me.IsUnload = True Then
        Cancel = 0
    Else
        Cancel = 1
        Set colValues = New Collection
        Me.Hide
    End If
End Sub
Attribute VB_Name = "mdActualForma"
Public Sub fAdd1ToCell(Optional nStr As String, Optional kodStr As String)
    Dim tR As Range
    Dim numStr As Integer
    
' vR = 5 / 0

'    Range("ss" & kodStr & "i").Value = 1
    If Application.ActiveSheet.name = "|fffd||fffd||fffd||fffd||fffd||fffd|2" Then
        Range("J" & nStr).Value = 1
        Range("K" & nStr).Value = 1
    End If
    
End Sub
'Public Function InsertRangeToSheet() As Long
'Dim nRowsSpr1 As Long
'Dim nRowsSpr2 As Long
'Dim i As Long
'Dim n As Long
'Dim k As Long
'Dim m As Long
'Dim j As Long
'Dim y As Long
'Dim nNoNullSpr1 As Long
'Dim nNoNullSpr2 As Long
'Dim iVar As Integer
'
'' nColR |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameRange ("Data_Sheet1")
'Dim nColR As Long
'For iVar = 1 To 3
'        Select Case iVar
'            Case 1
'                sNameRange = "Data_Sheet1"
'                sNameSpr = "KLD"
'                sNameSpr1 = "Data_KLD"
'                Application.Sheets(1).Activate
''            Case 2
''                sNameRange = "Data_Sheet2"
''                sNameSpr = "FKR"
''                sNameSpr1 = "Data_FKR"
'             Case 2
'                sNameRange = "Data_Sheet3"
'                sNameSpr = "IFR"
'                sNameSpr1 = "Data_IFR"
'                Application.Sheets(3).Activate
'            Case 3
'                sNameRange = "Data_Sheet4"
'                sNameSpr = "IFV"
'                sNameSpr1 = "Data_IFV"
'                Application.Sheets(3).Activate
'       End Select
'
'    Dim lngCount As Long
'        lngCount = 0
'    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "KLD" |fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'        If Not IsEmpty(Range(sNameSpr1).Cells(1, 1)) Then ' And IsEmpty(Range(sNameSpr1).Cells(2, 1))
'    '            InsertRangeToSheet = -5
'    '            Exit Function
'
'        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameSpr1
'            nRowsSpr1 = Range(sNameSpr1).Rows.Count
'            nNoNullSpr1 = 0
'            For j = 1 To nRowsSpr1
'                    If Len(Trim(Range(sNameSpr1).Cells(j, 1))) <> 0 Then
'                        nNoNullSpr1 = nNoNullSpr1 + 1
'                    End If
'            Next j
'
'        '    nRowsSpr3 = Range(sNameSpr3).Rows.Count
'            m = nNoNullSpr1 ' * nNoNullSpr2 '* nRowsSpr3
'
'        '   |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "KLD" |fffd||fffd||fffd||fffd||fffd||fffd| 60000, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'            If m >= 60000 Then
'                InsertRangeToSheet = -4
'                Exit Function
'            End If
'
'            Debug.Print "1=", Time
'            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| sNameRange |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'            For i = 1 To m - 2
'                Range(sNameRange).Cells(i + 1, 1).EntireRow.Insert Shift:=xlShiftDown
'
'            Next
'
'            Debug.Print "1=", Timer
'
'            Debug.Print "1=", Timer
' '           Range(sNameRange).Cells(lngCount + 1, 1).EntireRow.Delete
'        ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|. |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_BSR"
'        ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Sheet1"
'
'        ' "1,0,0" - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"BSR" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''          l = objSvod.InsertSprToSheet(ActiveWorkbook, sNameRange, sNameSpr, "3,0,0")
'           l = objSvod.InsertSprToSheet(ActiveWorkbook, sNameRange, sNameSpr, "3,1,0")
'            Debug.Print "1=", Timer
'
'
'        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameRange ("Data_Sheet1") |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
'        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameSpr ("RPS")
'        ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| nColR(=2) |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Sheet1" |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "RPS"|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "a"
'            nColR = Range(sNameRange).Columns.Count
'            For i = 4 To nColR
'                objSvod.AddNewNames ActiveWorkbook, sNameSpr, 1, sNameRange, i, Chr(93 + i)
'            Next
'            Debug.Print "1=", Timer
'
'
'          '  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Sheet1" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8
'           objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
'        Select Case iVar
'            Case 1
'                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
'                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 9
'            Case 2
'                 objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
'                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 9
'           Case 3
'                 objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
'                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 9
'      End Select
'
'
'        End If
'
'    Next iVar
'
'    InsertRangeToSheet = -1
'
'End Function
'
Public Function SheetVarForm()

    Dim sprNameRange As String
    Dim MyRange As String
    Dim ColBegin As Long
    Dim vR As Range
    
    
    sprNameRange = "Data_Spr1"
    MyRange = "Data_Sheet2"
    ColBegin = 3

        On Error Resume Next
        Set vR = ActiveWorkbook.Application.Range(sprNameRange)

'    Stop
'    Dim a()
'    Dim b()
'    Dim c()
'    Call CreateArrayTest(a, b)
'    c = fGetDdata(a, b)
'    Stop
         If Not (vR Is Nothing) Then
''            SheetVarForm = AddRowsFromRange(sprNameRange, MyRange, ColBegin)
''
            SheetVarForm = fRasstMain
            
            '''''''''''''''''''''''''''''''''''''''''''''
            '' <Spir> 14/09/2015 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If Range("Data_GOD").Rows.Count <= 2 And Range("Kod_STOPdata").Value <> "" Then
                numRangeName = 1
            
                For i = Range("Data_numGOD").Rows.Count To 1 Step -1
                    For j = Range("Data_numMONTH").Rows.Count To 1 Step -1
                        If CDate(Range("Data_numMONTH").Cells(j, 1) & "." & Range("Data_numGOD").Cells(i, 1)) <= DateAdd("m", -1, Range("Kod_STOPdata").Value) Then
                            Range("Data_GOD").Cells(numRangeName, 1).Value = Range("Data_numMONTH").Cells(j, 1) & "." & Range("Data_numGOD").Cells(i, 1)
                            Range("Data_GOD").Cells(numRangeName, 2).Value = Range("Data_numMONTH").Cells(j, 2) & ", " & Range("Data_numGOD").Cells(i, 2)
                
                            Range("Data_GOD1").Cells(numRangeName, 1).Value = Range("Data_numMONTH").Cells(j, 1) & "." & Range("Data_numGOD").Cells(i, 1)
                            Range("Data_GOD1").Cells(numRangeName, 2).Value = Range("Data_numMONTH").Cells(j, 2) & ", " & Range("Data_numGOD").Cells(i, 2)
                
                            numRangeName = numRangeName + 1
                            
                            If i <> 1 Or (j <> 0 And i = 1) Then
                                 Range("Data_GOD").Cells(numRangeName, 1).EntireRow.Insert Shift:=xlShiftDown
                           
                                Range("Data_GOD1").Cells(numRangeName, 1).EntireRow.Insert Shift:=xlShiftDown
                            End If
                        End If
                    Next j
                Next i
            End If
            ''''''''''''''''''''''''''''''''''''''''
                      
''            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
''            SheetVarForm = HiddenRows()
            Application.Sheets(1).Activate
        Else
            SheetVarForm = 0    ' |fffd||fffd||fffd||fffd||fffd||fffd|
        End If

End Function

'Public Function HiddenRows() As Long
'    Dim iVar As Integer
'    Dim bHidden As Boolean
'
'    On Error GoTo errHandler
'
'    bHidden = False
'    For iVar = 1 To 3
'        Select Case iVar
'            Case 1
'                sNameRange = "Data_Sheet1"
'                Application.Sheets(1).Activate
'             Case 2
'                sNameRange = "Data_Sheet3"
'                Application.Sheets(3).Activate
'            Case 3
'                sNameRange = "Data_Sheet4"
'                Application.Sheets(3).Activate
'       End Select
'
'   'MsgBox Range(sNameRange).Count
'       If Range(sNameRange).Rows.Count = 2 Then
'   'MsgBox Range(sNameRange).Cells(1, 3).Value
'            If Len(Trim(Range(sNameRange).Cells(1, 3).Value)) = 0 Then
'                Range(sNameRange).Select
'                Selection.EntireRow.Hidden = True
'                Select Case iVar
'                    Case 1
'                        Application.ActiveSheet.cmdVisibleNullStr1.Enabled = False
'   'MsgBox "Application.ActiveSheet.cmdVisibleNullStr1.Enabled = False"
'                    Case 2
'                        bHidden = True
'                    Case 3
'                        If bHidden Then
''                            Application.ActiveSheet.cmdVisibleNullStr3.Enabled = False
'                        End If
'                End Select
'            End If
'       End If
'
'    Next iVar
'
'    HiddenRows = -1
'
'    Exit Function
'
'errHandler:
'    MsgBox Err.Number & " - " & Err.Description & ". (HiddenRows)"
'    HiddenRows = -9
'
'End Function
'
'
'Public Function AddRowsFromRange(ByVal sprNameRange As String, ByVal MyRange As String, ByVal ColBegin As Long) As Long
'' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| Range("Data_Sheet1") |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sprNameRange
'    Dim nrows As Integer
'    Dim i As Integer
'    Dim j As Integer
'    Dim n As Integer
'    Dim kod As String
'    Dim nRowsSpr As Integer
'    Dim lNameCell As Integer
'    Dim nColRange As Integer
'    Dim sTemp As String
'    Dim sSheet As String
'    Dim nCountRange As Integer
'    Dim sOldKod  As String
'    Dim nRowRange As Integer
'    Dim cNameCells, cValue As String
'    Dim bYes As Boolean
'    Dim bYesData As Boolean
''SprVavue = "345"
''
'On Error GoTo errHandler
'
'''   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'    Application.Sheets(2).Activate
'    sSheet = Application.ActiveSheet.Name
'' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameSpr2
'    nRowsSpr = Range(sprNameRange).Rows.Count
'
'        lNameCell = Len(Trim(Range(sprNameRange).Cells(1, 1)))
'        nColRange = Range(MyRange).Columns.Count
'
'    If Len(Trim(Range(sprNameRange).Cells(1, 1))) <> 0 Then
'        sOldKod = ""
'        For i = 1 To nRowsSpr
'
'            bYesData = False
'            ''lNameCell = Len(Trim(Range(sprNameRange).Cells(i, 1)))
'            kod = Mid(Range(sprNameRange).Cells(i, 1), 3, lNameCell - 3)
'
'            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'            Dim KodSpr As String, k As Integer
'            KodSpr = Right(kod, 3)
'            For k = 1 To Range("Data_SGU").Rows.Count
'                If Range("Data_SGU").Cells(k, 1).Value = KodSpr Then
' '                    Range(MyRange).Cells(nCountRange, 1).Value = Range("Data_SGU").Cells(k, 2).Value
'                     bYesData = True
'                     Exit For
'                End If
'            Next
'
'            If bYesData Then
'
'                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "Data_Cells"
'                cNameCells = "ss" & kod
'                nRowRange = Range("Data_Cells").Rows.Count
'                bYes = False
'                For j = 1 To nRowRange - 1
'                    cValue = Trim(Range("Data_Cells").Cells(j, 1).Value)
'                    If Left(cValue, Len(cValue) - 1) = cNameCells Then
'                        bYes = True
'                        Exit For
'                    End If
'                Next j
'
'                If kod <> sOldKod And bYes = False Then
'                    If Not (Trim(kod) = "") Then
'                        sOldKod = kod
'                        nCountRange = Range(MyRange).Rows.Count
'
'                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'                        Range(MyRange).Cells(nCountRange, 1).EntireRow.Insert Shift:=xlShiftDown
'                        Range(MyRange).Cells(nCountRange, ColBegin).Value = kod
'                        n = 0
'                        For j = ColBegin + 1 To nColRange
'                            Range(MyRange).Cells(nCountRange, j).Select
'
'                            ' ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'                            Set tRange = Application.Selection
'
'                             ActiveWorkbook.Names.Add Name:="ss" & kod & Chr(97 + n), RefersToR1C1:="=" & sSheet & "!R" & Selection.Row & "C" & Selection.Column
'
'            '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
'            '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
'    '                        nRowRange = Range("Data_Cells").Rows.Count
'                            Range("Data_Cells").Cells(nRowRange, 1).EntireRow.Insert Shift:=xlShiftDown
'                            Range("Data_Cells").Cells(nRowRange, 1).Value = "ss" & kod & Chr(97 + n)
'                            Range("Data_Cells").Cells(nRowRange, 2).Value = "F"
'                            Range("Data_Cells").Cells(nRowRange, 3).Value = "2"
'                            n = n + 1
'
'                        Next j
'
'                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                        Range(MyRange).Cells(nCountRange, 9).FormulaR1C1 = "=SUM(RC[-3]:RC[-1])"
'                        Range(MyRange).Cells(nCountRange, 10).FormulaR1C1 = "=SUM(RC[-6]-RC[-1])"
'                        Range(MyRange).Cells(nCountRange, 11).FormulaR1C1 = "=SUM(RC[-6]-RC[-2])"
'
'    '                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'    '                    Dim KodSpr As String, k As Integer
'    '                    KodSpr = Left(kod, 17)
'    '                    For k = 1 To Range("Data_FKR").Rows.Count
'    '                        If Range("Data_FKR").Cells(k, 1).Value = KodSpr Then
'                                 Range(MyRange).Cells(nCountRange, 1).Value = Range("Data_SGU").Cells(k, 2).Value
'    '                             Exit For
'    '                        End If
'    '                    Next
'                    End If
'                  End If
'              End If
'          Next i
'
'    End If
'
'    AddRowsFromRange = -1
'
'    Exit Function
'errHandler:
'    MsgBox Err.Number & " - " & Err.Description & ". (AddRowsFromRange)"
'    AddRowsFromRange = -8
'End Function
'
'
'
'

Attribute VB_Name = "mdLib"
''''''''''''''''''''''''''''''''''''''''''''
'**** Version 28.07.2005 *******************
''''''''''''''''''''''''''''''''''''''''''''
Option Explicit

Public objSvod As Object
Public objSprForms As Object
Public Const RangeRek As String = "Data_Cells"
Public strNameCell As String
Public colValues As Collection
Public FormSpr As Object
Public Const cKod = "Kod_"
Public Const cName = "Name_"
Public Const cData = "Data_"


Public Function IsSvod() As Boolean
    IsSvod = True
End Function

Public Sub ConstForm()
Attribute ConstForm.VB_Description = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 17.05.2004 (nekrasova)"
Attribute ConstForm.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim tRange As Range
    Dim strTemp As String
    Dim strSheet As String
    Dim i As Long
    Dim j, n As Long
    
'
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 02.06.2004 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (BALANS)
'
'   |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Excel |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|:
'               1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'               2. |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'
'   |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "ss"+|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|+"|fffd|"..."|fffd|"
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'

' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Set tRange = Application.Selection
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    strSheet = Application.ActiveSheet.name
'
'   tRange.Rows.Count- |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   tRange.Columns.Count |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
    For i = 1 To tRange.Rows.Count
        For j = 2 To tRange.Columns.Count
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "ss"+|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|+"a"
            strTemp = Mid$(tRange.Cells(i, j).Address, 2, 1)
            Range(strTemp & (i + tRange.Row - 1) & ":" & strTemp & (i + tRange.Row - 1)).Select
            ActiveWorkbook.Names.Add name:="ss" & tRange.Cells(i, 1) & Chr(95 + j), RefersToR1C1:="=" & strSheet & "!R" & Selection.Row & "C" & Selection.Column
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
                   n = Range("Data_Cells").Rows.Count
                   Range("Data_Cells").Cells(n, 1).EntireRow.Insert Shift:=xlShiftDown
                   Range("Data_Cells").Cells(n, 1).Value = "ss" & tRange.Cells(i, 1) & Chr(95 + j)
                   Range("Data_Cells").Cells(n, 2).Value = "F"
         Next
    Next
    
    
'    Range("G3:G4").Select
'    ActiveWorkbook.Names.Add Name:="ss0630a", RefersToR1C1:="=|fffd||fffd||fffd||fffd|2!R3C7"
End Sub
Public Function VarForm() As Long
'' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 15.07.2005

'    Dim sNameRange As String, sNameSpr As String
'    Dim vR As Range
' vR = 5 / 0
'    sNameRange = "Data_Sheet1"
'    On Error Resume Next
'    Set vR = ActiveWorkbook.Application.Range(sNameRange)
'
'     If vR Is Nothing Then
'        VarForm = -1
'     Else
'        VarForm = InsertRangeToSheet(sNameRange)
'     End If
     VarForm = SheetVarForm()

     SetFormula
'    Application.Calculate
End Function
     
Private Sub SetFormula()
On Error Resume Next
    Range("Naim_STOPdata").FormulaLocal = "=SetStrData(A1;Kod_STOPdata)"
    Range("Naim_STOPdata").Calculate
    
    Range("Naim_MODdata").FormulaLocal = "=SetStrData(A2;Kod_MODdata)"
    Range("Naim_MODdata").Calculate
'    ActiveCell.FormulaLocal = "=SetStrData(B5;Kod_STOPdata)"
End Sub

Public Sub ChangeFormatCells(ByVal NameRange As String, ByVal SpravEI As Integer, ByVal Col As Integer)
 '
    Dim nrows, i As Integer
    Dim strFormat As String
    Dim strNameCell As String
    Dim strNameList As String
    
    Application.ScreenUpdating = False
  
      Select Case Col
          Case 0
            strFormat = "0"
          Case 1
            strFormat = "0.0"
          Case 2
            strFormat = "0.00"
          Case 3
           strFormat = "0.000"
          Case 4
           strFormat = "0.0000"
     End Select
'   nrows - |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
    nrows = Range(NameRange).Rows.Count
'
    For i = 1 To nrows
        strNameCell = Range(NameRange).Cells(i, 1)
        If Range(NameRange).Cells(i, 5) = SpravEI And _
           Left(Range(NameRange).Cells(i, 1).Value, 2) = "ss" Then
           If Range(NameRange).Cells(i, 3) <> Col Then
             Range(NameRange).Cells(i, 3) = Col
              strNameList = ActiveSheet.name
              Sheets(Range(strNameCell).Worksheet.name).Select
              Range(strNameCell).Select
              Selection.NumberFormat = strFormat
'              Range(strNameCell) = Round(Range(strNameCell))
'                Call RoundCells(strNameCell)
              Sheets(strNameList).Activate
           End If
           
       End If
    Next i
        Range("Name_OTD").Activate
        Application.ScreenUpdating = True
End Sub



Public Function SetStrData(ByVal sVoise As Range, ByVal sNameRange As Range) As String

'    Dim objSvod As Object
'    Set objSvod = CreateObject("rasExRng.clsWork")
 '   If Application.ScreenUpdating Then
        SetStrData = objSvod.setdataname(CStr(sVoise), CDate(sNameRange))
 '   End If
'    Set objSvod = Nothing

End Function
 Public Sub ProtectXlt()
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim Sheet As Object
    
'    On Error Resume Next
    Application.ScreenUpdating = False
    
    For Each Sheet In Worksheets
        If Sheet.ProtectContents = False Then
            If Val(Application.Version) > 9 Then
                Sheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
                , AllowFormattingColumns:=True, AllowFormattingRows:=True, password:=objSvod.PasswordName
            Else
                Sheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, password:=objSvod.PasswordName
            End If
        End If
    Next Sheet
    
   If ActiveWorkbook.ProtectStructure = False Then
        ActiveWorkbook.Protect Structure:=True, Windows:=False, password:=objSvod.PasswordName
    End If
    
    Application.ScreenUpdating = True

End Sub
 Public Sub UnProtectXlt()
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim Sheet As Worksheet
    
    On Error Resume Next
    Application.ScreenUpdating = False
    
    ActiveWorkbook.Unprotect password:=objSvod.PasswordName
    
    For Each Sheet In Worksheets
        If Sheet.ProtectContents = True Then
            Sheet.Unprotect password:=objSvod.PasswordName
        End If
    Next Sheet
    
    Application.ScreenUpdating = True
    
End Sub
                               
Public Function OpenWorkbook() As Long

    On Error GoTo errHandler
    
    Set objSvod = CreateObject("rasExRng.clsWork")
    Set objSprForms = CreateObject("rasDS.DataSpravs")
    If objSprForms.iCodeError <> 0 Then
       MsgBox (objSprForms.cErrorTextMessage)
    End If
     
     Set FormSpr = New frmAddRow
     Load FormSpr
    
    If objSvod Is Nothing Or objSprForms.iCodeError <> 0 Then
        OpenWorkbook = 0    ' |fffd||fffd||fffd||fffd||fffd||fffd| OpenWorkbook
    Else
        OpenWorkbook = -1   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    End If
    
    Exit Function
    
errHandler:
    OpenWorkbook = Err.Number
'    Application.Calculate
End Function
Public Sub CloseWorkbook()
On Error Resume Next
    FormSpr.IsUnload = True
    Unload FormSpr
    Set objSvod = Nothing
    Set objSprForms = Nothing
    
End Sub
Public Function EmptySpr(ByVal NameSpr As String) As Boolean
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| NameSpr |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False

    If Range(NameSpr).Rows.Count <= 2 Then
        If IsEmpty(Range(NameSpr).Cells(1, 1)) Then
            EmptySpr = True
        Else
            EmptySpr = False
        End If
    Else
        EmptySpr = False
    End If
    
End Function
Public Function FoundIndex(ByVal NameSpr As String, ByVal cVal As String) As Long
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cVal |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NameSpr,
'   |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0

    Dim i As Long
    
    FoundIndex = 0
    For i = 1 To Range(NameSpr).Rows.Count
        If Trim(Range(NameSpr).Cells(i, 1).Value) = cVal Then
            FoundIndex = i - 1
            Exit For
        End If
    Next i
    
End Function

Public Sub IzmenEI(ByVal Old_izm As String, ByVal New_izm As String, ByVal sCol As String)

'
'  382 - |fffd||fffd||fffd||fffd||fffd|
'  383 - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  384 - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  385 - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

            Select Case Old_izm
                Case 383  '  - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Select Case New_izm
                        Case 382  '  - |fffd||fffd||fffd||fffd||fffd|
                            Call RoundCells("1", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                        Case 384, 385
                            Call RoundCells("1000", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
                Case 382
                    Select Case New_izm
                        Case 383
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                        Case 384, 385
                            Call RoundCells("1000", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
                Case 384
                    Select Case New_izm
                        Case 382, 383, 385
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
                 Case 385
                    Select Case New_izm
                        Case 384
                            Call RoundCells("1", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                        Case 383, 382
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
               Case Else
            End Select
   

End Sub
Public Sub RoundCells(ByVal sDel As String, ByVal sCol As String)
Dim Msg, Response, MyString, Style

    Dim nrows, i As Integer
    Dim strFormat As String
    Dim sNameCell As String
    Dim strNameList As String
    
'   nrows - |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
    nrows = Range(RangeRek).Rows.Count

    Application.ScreenUpdating = False
  
    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ?"
    Style = vbYesNo + vbCritical + vbDefaultButton2

     Response = MsgBox(Msg, Style)
        If Response = vbYes Then
            MyString = "Yes"
    For i = 1 To nrows
            sNameCell = Range(RangeRek).Cells(i, 1)
        If Left(Range(RangeRek).Cells(i, 1).Value, 2) = "ss" Then
              strNameList = ActiveSheet.name
              Sheets(Range(sNameCell).Worksheet.name).Select
              Range(sNameCell).Select
'
            If Left((Range(sNameCell).FormulaR1C1), 1) <> "=" Then
                  Range(sNameCell) = Round(Range(sNameCell) / sDel, sCol)
            End If
'
        End If
    Next i

        Else
            MyString = "No"
        End If
'
        Application.ScreenUpdating = True

End Sub


Public Sub VisibleNullStr(ByVal IsVisible As Boolean, _
                            ByRef objRange As Range, _
                            Optional ByVal lngColBeg As Long, _
                            Optional ByVal lngColEnd As Long)
                            
' |fffd| |fffd||fffd|.|fffd||fffd||fffd|. objRange |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| lngColBeg |fffd||fffd| lngColEnd

    Dim i As Long
    Dim j As Long
    
    Application.ScreenUpdating = False
   
    On Error GoTo errHandler
    
    With objRange
        If IsVisible Then
            For i = 1 To .Rows.Count
                Rows(i + .Row - 1).EntireRow.Hidden = False
'                Selection.
            Next
        Else
            For i = 1 To .Rows.Count
                For j = lngColBeg To lngColEnd
                    If .Cells(i, j) <> 0 Then
                        Exit For
                    End If
                Next
                If j > lngColEnd Then
                    Rows(i + .Row - 1).EntireRow.Hidden = True
              End If
            Next
        End If
    End With
    
    Exit Sub
    
errHandler:
    MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
            "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Number, vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
            
        Application.ScreenUpdating = True
End Sub

Public Sub AddRekv(ByVal ObjRekvs As Object)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Long
    Dim sSprav As String
    Dim cKodR, cNameR, cCol3R As String
    Dim Old_EI, New_EI As String
    
    On Error GoTo errHandler
    
    Old_EI = Application.Range("Kod_EI").Cells(1, 1)
    
'    Set FormSpr = New frmAddRow
'    Load FormSpr
    Set FormSpr.ObjectDataSprav = ObjRekvs
    FormSpr.Repaint

    FormSpr.Show
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If colValues.Count <> 0 Then
       With ObjRekvs.SpravCollection
           If .Count > 0 Then
               For i = 1 To .Count
                   With .Item(Val(i))
                       If Not (.cControl Like "but*") Then
                           cKodR = cKod & .cSprav
                           cNameR = cName & .cSprav
                           Range(cKodR).Value = colValues.Item(cKodR)
                           Range(cNameR).Value = colValues.Item(cNameR)
                        End If
                        If .cSprav = "EI" Then
                            New_EI = Application.Range("Kod_EI").Cells(1, 1)
                            Call IzmenEI(Old_EI, New_EI, colValues.Item("Col3_EI"))
                        End If
                  End With
               Next i
           End If
       End With
     
    End If
 
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRekv)"
    Resume Next

End Sub

Public Sub AddRow(ByVal ObjRekvs As Object)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Long
    Dim sSprav As String
    Dim cKodR, cNameR, cCol3R As String
    Dim Old_EI, New_EI As String
    
    On Error GoTo errHandler
    
    
'    Set FormSpr = New frmAddRow
'    Load FormSpr
    Set FormSpr.ObjectDataSprav = ObjRekvs
    
    FormSpr.Show
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If colValues.Count <> 0 Then
       With ObjRekvs.SpravCollection
           If .Count > 0 Then
               For i = 1 To .Count
                   With .Item(Val(i))
                       If Not (.cControl Like "but*") Then
                           cKodR = cKod & .cSprav
                           cNameR = cName & .cSprav
                           Range(cKodR).Value = colValues.Item(cKodR)
                           Range(cNameR).Value = colValues.Item(cNameR)
                        End If
                  End With
               Next i
           End If
       End With
     
    End If
 
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRekv)"
    Resume Next

End Sub

Public Sub AddRowToRange(ByVal KodRow As String, ByVal MyRange As String, ByVal ColBegin As Long)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ColBegin |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| KodRow
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Cells"

    Dim nrows As Integer
    Dim kod As String
    Dim sSheet As String
    Dim nColRange, nCountRange As Long
    Dim i As Long
    Dim j As Long
    Dim nRowRange As Integer
   
    On Error GoTo errHandler
    
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    sSheet = Application.ActiveSheet.name
    
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange
    nColRange = Range(MyRange).Columns.Count
    nCountRange = Range(MyRange).Rows.Count
    
 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange
    For i = 1 To nCountRange
        If KodRow = Trim(Range(MyRange).Cells(i, ColBegin).Value) Then
            MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| " & KodRow & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            Exit Sub
        End If
    Next i
     
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Range(MyRange).Cells(nCountRange, 1).EntireRow.Insert Shift:=xlShiftDown
    Range(MyRange).Cells(nCountRange, ColBegin).Value = KodRow
    i = 0
    For j = ColBegin + 1 To nColRange
       Range(MyRange).Cells(nCountRange, j).Select
       ActiveWorkbook.Names.Add name:="ss" & KodRow & Chr(97 + i), RefersToR1C1:="=" & sSheet & "!R" & Selection.Row & "C" & Selection.Column
         
'    '  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| j
'       objSvod.AutoFillColumn ActiveWorkbook, MyRange, j
                     
    '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
        nRowRange = Range("Data_Cells").Rows.Count
        Range("Data_Cells").Cells(nRowRange, 1).EntireRow.Insert Shift:=xlShiftDown
        Range("Data_Cells").Cells(nRowRange, 1).Value = "ss" & KodRow & Chr(97 + i)
        Range("Data_Cells").Cells(nRowRange, 2).Value = "F"
        Range("Data_Cells").Cells(nRowRange, 3).Value = "2"
        i = i + 1
    Next j
    
    Range(MyRange).Cells(nCountRange, ColBegin + 1).Select
    
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRowToRange)"
    Resume Next

End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
On Error Resume Next
cmdBarsShow
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
On Error Resume Next
cmdBarsShow
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
On Error Resume Next
s = GetRegistrValue & "lnc2.xla"
Application.VBE.ActiveVBProject.References.AddFromFile s
Application.Run "lnc2.xla!fOpen"
Application.Run "lnc2.xla!cmdBarsShow"

'' <Spir> 29/03/2017
If Range("Data_GOD").Rows.Count > 2 Then
    Range("Data_GOD").Rows("1:" & Range("Data_GOD").Rows.Count - 2).Delete Shift:=xlUp
End If
If Range("Data_GOD1").Rows.Count > 2 Then
    Range("Data_GOD1").Rows("1:" & Range("Data_GOD1").Rows.Count - 2).Delete Shift:=xlUp
End If
If Range("Data_GOD").Rows.Count <= 2 And Range("Kod_STOPdata").Value <> "" Then
    numRangeName = 1

    For i = Range("Data_numGOD").Rows.Count To 1 Step -1
        For j = Range("Data_numMONTH").Rows.Count To 1 Step -1
            If CDate(Range("Data_numMONTH").Cells(j, 1) & "." & Range("Data_numGOD").Cells(i, 1)) <= Range("Kod_STOPdata").Value Then
                Range("Data_GOD").Cells(numRangeName, 1).Value = Range("Data_numMONTH").Cells(j, 1) & "." & Range("Data_numGOD").Cells(i, 1)
                Range("Data_GOD").Cells(numRangeName, 2).Value = Range("Data_numMONTH").Cells(j, 2) & ", " & Range("Data_numGOD").Cells(i, 2)
    
                Range("Data_GOD1").Cells(numRangeName, 1).Value = Range("Data_numMONTH").Cells(j, 1) & "." & Range("Data_numGOD").Cells(i, 1)
                Range("Data_GOD1").Cells(numRangeName, 2).Value = Range("Data_numMONTH").Cells(j, 2) & ", " & Range("Data_numGOD").Cells(i, 2)
    
                numRangeName = numRangeName + 1
                
                If i <> 1 Or (j <> 0 And i = 1) Then
                
                    Range("Data_GOD").Cells(numRangeName, 1).EntireRow.Insert Shift:=xlShiftDown
                
                    Range("Data_GOD1").Cells(numRangeName, 1).EntireRow.Insert Shift:=xlShiftDown
                End If
            End If
        Next j
    Next i
End If

End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Dim i As Long
    
    With Application.VBE.ActiveVBProject.References
        For i = .Count To 1 Step -1
            If Right$(.Item(i).name, 4) = "lnc2" Then
                Application.DisplayAlerts = True
                .Remove .Item(i)
                Exit For
            End If
        Next
    End With
End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    On Error Resume Next
    
    Dim strName As String
    Dim strNameRange As String
    Dim i As Long
    Dim kodRekv As String
    Dim kodFKR As String
    
    Static blnChange As Boolean

    If blnChange Then
        blnChange = False
        Exit Sub
    End If
    strName = Target.name
    If Len(strName) > 0 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strNameRange = Application.Names(, , CStr(strName)).name
        If Len(strNameRange) > 0 Then
            With Range("Data_Cells")
                For i = 1 To .Rows.Count
                    If .Cells(i, 1) = strNameRange Then
                        If .Cells(i, 2) = "F" Then
                            If (Len(CStr(CCur(Target) - Int(CCur(Target)))) - 2) > .Cells(i, 3) Then
                                MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " & .Cells(i, 3) & " |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ", vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
                            End If
                            blnChange = True
                            Target = Round(Target, .Cells(i, 3))
'                            Target.Activate
'                            Beep
                        End If
                        Exit For
                    End If
                Next
            End With
            
            '' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| INN Spir 24/03/2016
''''                If Right(strNameRange, 1) = "e" And (Mid(strNameRange, 3, 2) = "04" Or Mid(strNameRange, 3, 2) = "05" Or Mid(strNameRange, 3, 2) = "06") Then
''''                    If Len(Trim(Range(strNameRange).Cells(1, 1).Value)) = 10 Then
''''                        blnChange1 = True
''''                        Range(Left(strNameRange, Len(strNameRange) - 1) & "i").Value = 0
''''                     End If
''''                    If Len(Trim(Range(strNameRange).Cells(1, 1).Value)) <> 10 Then
''''                        blnChange1 = True
''''                        Range(Left(strNameRange, Len(strNameRange) - 1) & "i").Value = 1
''''                    End If
''''                End If
            
            '' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|.2 "|fffd||fffd||fffd||fffd||fffd|"   Spir 24/03/2016
            If Right(strNameRange, 1) = "b" And (Mid(strNameRange, 3, 2) = "04" Or Mid(strNameRange, 3, 2) = "05" Or Mid(strNameRange, 3, 2) = "06") Then
                If Range(strNameRange).Cells(1, 1).Value <> "0" Then
                    blnChange1 = True
                    Range(Left(strNameRange, Len(strNameRange) - 1) & "i").Value = 0
                 End If
                If Range(strNameRange).Cells(1, 1).Value = "0" Then
                    blnChange1 = True
                    Range(Left(strNameRange, Len(strNameRange) - 1) & "i").Value = 1
                End If
            End If
            
            '' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| Spir 10/09/2015
            If Right(strNameRange, 1) = "d" And (Mid(strNameRange, 3, 2) = "04" Or Mid(strNameRange, 3, 2) = "05" Or Mid(strNameRange, 3, 2) = "06") Then
                If Not IsDate(Target.Value) Then
'                    blnChange1 = True
'                    Range(Left(strNameRange, Len(strNameRange) - 1) & "i").Value = 0
                    MsgBox "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|.|fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|"
                    blnChange = True
                    Target.Value = ""
                    Target.Select
                Else
                    blnChange = True
                    kodFKR = Format(Target.Value, "DD.MM.YYYY")
                    Target.Value = Mid(kodFKR, 4, 7)
                End If
             End If
        End If
        
            '' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 4 (|fffd||fffd||fffd||fffd|) Spir 24/03/2016
            If Right(strNameRange, 1) = "d" And (Mid(strNameRange, 3, 2) = "04" Or Mid(strNameRange, 3, 2) = "05" Or Mid(strNameRange, 3, 2) = "06") Then
                If Len(Trim(Range(strNameRange).Cells(1, 1).Value)) = 7 Then
                    blnChange1 = True
                    Range(Left(strNameRange, Len(strNameRange) - 1) & "j").Value = 0
                 End If
                If Len(Trim(Range(strNameRange).Cells(1, 1).Value)) <> 7 Then
                    blnChange1 = True
                    Range(Left(strNameRange, Len(strNameRange) - 1) & "j").Value = 1
                End If
            End If
            
        ''
    
    End If
End Sub

Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
    Dim lcNameCell As String
    
    On Error Resume Next
    
'    lcNameCell = Target.Name
'    If Len(lcNameCell) > 0 Then
    If IsObject(goSvod) Then
         fStartFox
    End If
'     Else
'         fInitGrid
'     End If
End Sub

'--------------------|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|----------------

Public Sub GetDataToSheet()
    Dim strQuery As String
    Dim strQueryKBK As String
    Dim i As Integer
    Dim strPeriod1 As String
    Dim strNamePrg  As String
    Dim strK_Org As String
    
    On Error Resume Next
    
    blnFilling = True
    If IsObject(goSvod) Then
        strNamePrg = goSvod.cNamePrg
        If strNamePrg = "VSvod" Then strQuery = Replace(Range("QueryDataFox"), "<K_Org>", Range("Kod_OTD").Value, 1)
        If strNamePrg = "SvodQ" Then strQuery = Replace(Range("QueryDataSQL"), "<K_Org>", Range("Kod_OTD").Value, 1)
        If strNamePrg = "VSvod" Then strQuery = Replace(Range("QueryDataFox"), "<IsSvod>", goSvod.lIsSvod, 1)
        If strNamePrg = "SvodQ" Then strQuery = Replace(Range("QueryDataSQL"), "<IsSvod>", goSvod.lIsSvod, 1)
    End If
    
    If IsEmpty(strQuery) = False Then
        strPeriod1 = Left(goSvod.cTagPeriod, 8) & Trim(Str(Val(Right(goSvod.cTagPeriod, 2)) - 1))
        strQuery = Replace(strQuery, "<Period>", strPeriod1, 1)
        strQuery = Replace(strQuery, "<Kod_VZD>", Range("Kod_VZD").Value, 1)
        If Not (Trim(Range("Kod_DK").Value) = "") Then
            strQuery = Replace(strQuery, "<Kod_DK>", "and LIKE('*<DK>" & Range("Kod_DK").Value & "</DK>*',a.tag_rekv) ", 1)
            If strNamePrg = "VSvod" Then strQuery = Replace(strQuery, "<Kod_DK>", "and LIKE('*<DK>" & Range("Kod_DK").Value & "</DK>*',a.tag_rekv) ", 1)
            If strNamePrg = "SvodQ" Then strQuery = Replace(strQuery, "<Kod_DK>", "and a.tag_rekv LIKE '%<DK>" & Range("Kod_DK").Value & "</DK>%' ", 1)
        Else
            strQuery = Replace(strQuery, "<Kod_DK>", "", 1)
        End If
        
        Application.ScreenUpdating = False
    
        bFlagTransDataToSheet = True
        If Trim(Range("Kod_VDE").Value) = "1" Then    '' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            goSvod.GetArrayToRep strQuery
        End If
        
        UnProtectXlt
        blnFilling = True
        Application.ScreenUpdating = False
        Application.ScreenUpdating = True
    
        ProtectXlt
                    
        Application.ScreenUpdating = True
    End If
    blnFilling = False
End Sub

Public Sub SetTransDataToSheet(ByRef arrData As Variant)
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Integer
    Dim tRange As Range
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 1-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    SetDataToCells arrData
    
    blnFilling = False
End Sub


Private Sub SetDataToCells(ByRef arrData As Variant)
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iRow As Integer
    Dim iCol As Integer
    Dim i As Integer
    Dim rngCurRange As Range
    Dim lCount As Integer
    Dim strKod As String
    
    On Error Resume Next
    Set rngCurRange = Range("Data_Sheet10")
    '' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If rngCurRange.Rows.Count > 2 Then
         iRow = rngCurRange.Row '1-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
         i = iRow + rngCurRange.Rows.Count - 1 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
         Rows(iRow + 1 & ":" & i - 1).Delete Shift:=xlUp
    End If
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     For i = 1 To UBound(arrData, 1)    ''- 2
          lCount = rngCurRange.Rows.Count
          rngCurRange.Cells(lCount, 1).EntireRow.Insert Shift:=xlShiftDown
      Next i
      
   strKod = ""
   For i = LBound(arrData, 1) + 1 To UBound(arrData, 1) + 1
        rngCurRange.Cells(i, 1).Value = Mid(arrData(i - 1, 1), 1, 29)
        rngCurRange.Cells(i, 12).Value = arrData(i - 1, 2)
        rngCurRange.Cells(i, 13).Value = arrData(i - 1, 3)
        rngCurRange.Cells(i, 14).Value = arrData(i - 1, 4)
    
'        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'        iCol = rngCurRange.Column
'        iRow = colCodeOrgs(CStr(arrData(i, 1)))
'        If iRow > 0 And iCol > 0 Then
'            Cells(iRow, iCol) = arrData(i, 3)
'        End If
    Next
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| data |fffd| Data_Sheet10
Public Sub SaveDB10()
Dim rs As DAO.Recordset
Dim tb As TableDef
Dim fd As Field
Dim r As Range, Rds As Range, i%, name$, name1$, sql$, j%
Dim nn As name
Dim strName As String

Dim sprefix$
sprefix = "jj"
'On Error GoTo ErrorHandler
If Db Is Nothing Then Set Db = Workspaces(0).OpenDatabase(fDBName())
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| data
'Db.Execute "delete * from data", dbFailOnError
Set rs = Db.OpenRecordset("select * from data")
'Set r = Range("Data_Cells")

'For Each nn In ActiveWorkbook.Names
'    If nn.name Like "Data_Sheet##" Then
    strName = "Data_Sheet10"
    If Range(strName).Worksheet.Index = ActiveSheet.Index Then
    Set Rds = Range(strName)
        For i = 1 To Rds.Rows.Count
            If Rds.Cells(i, 1) <> "" Then
                name = sprefix & Rds.Cells(i, 1)
                rs.AddNew
                rs.Fields("name").Value = name & "a"
                rs.Fields("type").Value = "C"
                rs.Fields("value").Value = Rds.Cells(i, 1)
                rs.Fields("Data_Sheet").Value = strName
                rs.Update
                For j = 1 To 3
                    Select Case j
                        Case 1
                            name1 = "l"
                        Case 2
                            name1 = "m"
                        Case 3
                            name1 = "n"
                    End Select
                    If IsEmpty(Rds.Cells(i, j + 11).Value) = False And Rds.Cells(i, j + 11).Value <> 0 Then
                        rs.AddNew
                        rs.Fields("name").Value = name & name1
                        rs.Fields("type").Value = "F"
                        rs.Fields("value").Value = Rds.Cells(i, j + 11).Value
                        rs.Fields("value_f").Value = Rds.Cells(i, j + 11).Value
                        rs.Fields("Data_Sheet").Value = strName
                        rs.Update
                    End If
                Next j
                
'                If name Like sprefix And InRangeNames(name, strName) Then
'                    rs.AddNew
'                        rs.Fields("name").Value = name
'                    rs.Fields("type").Value = r.Cells(i, 2).Value
'                    If IsEmpty(Range(name)) = False And IsError(Range(name)) = False Then
'                        If Mid(Range(name).Value, 18, 5) = "12101" Then
'                            rs.Fields("value").Value = Left(Range(name).Value, 17) & "121010" & Mid(Range(name).Value, 24, 3)
'                        Else
'                            rs.Fields("value").Value = Range(name).Value
'                        End If
'                        If r.Cells(i, 2).Value = "F" And IsNumeric(Range(name).Value) Then
'                            rs.Fields("value_f").Value = Range(name).Value
'                        End If
'                    End If
'                    rs.Fields("Data_Sheet").Value = nn.name
'                    rs.Update
'               End If
            End If
        Next i
    End If
'    End If
'Next

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Sheet10
'For Each nn In ActiveWorkbook.Names
'If nn.name Like "Data_Sheet##" Then
'If Range(nn.name).Worksheet.Index = ActiveSheet.Index Then
    Db.Execute "delete * from " + strName, dbFailOnError
    sql = Db.TableDefs(strName).Properties("sql")
    Db.Execute sql
'End If
'End If
'Next nn

Set nn = Nothing
Set r = Nothing
Set Rds = Nothing
Set rs = Nothing
Set tb = Nothing
Set fd = Nothing

End Sub




INQUEST-PP=macro
