Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "core"
Public nbligne As Double 'correspond au nb de ligne imprim|fffd| par page
Public Nom_Classeur As String
Public Const Classeur_data = "histo_modif.xls"
Const Hauteur_Graphique = 250

Sub Histo_New()
'
' Histo Macro
' Macro enregistr|fffd|e le 17/03/99 par Jacques
' Am|fffd|lior|fffd|e le 18/10/07, jour de gr|fffd|ve, par Philippe Pires Franco
' Am|fffd|lior|fffd|e le 06/10/08, jour de gr|fffd|ve aussi

Dim nbligne
nbligne = Sheets("data").Range("N1")

Dim Seuil_Max_Vit As Double
Dim Seuil_Min_Vit As Double
Dim Seuil_Max_Eca As Double

Seuil_Max_Vit = Sheets("data").Range("S2")
Seuil_Min_Vit = Sheets("data").Range("S1")
Seuil_Max_Eca = Sheets("data").Range("S3")

' coordonn|fffd|es et activation de la s|fffd|lection initiale
RowBegin = 5
   
    
'on compte le nombre de classes de l'histogramme
Dim Nb_Classes() As Long
Dim Col_Histo As Long 'correspond au num|fffd|ro de la colonne pour l'histogramme
Col_Histo = 1
Do
    Col_Histo = Col_Histo + 1
Loop Until Sheets("data").Cells(5, Col_Histo) = "Vitesses"

    
ReDim Nb_Classes(2)
Nb_Classes(1) = 1
Nb_Classes(2) = 1
Do
    Nb_Classes(1) = Nb_Classes(1) + 1
Loop Until Sheets("data").Cells(5 + Nb_Classes(1), Col_Histo) = ""
Nb_Classes(1) = Nb_Classes(1) - 1
Do
    Nb_Classes(2) = Nb_Classes(2) + 1
Loop Until Sheets("data").Cells(5 + Nb_Classes(2), Col_Histo + 1) = ""
Nb_Classes(2) = Nb_Classes(2) - 1
    
    

    
sheetini = "data"
    
Dim Num_Dim As Long
Num_Dim = -1
rowend = 1

Do
        
    If Num_Dim = -1 Then
        nom = "recap"
                    Else
        nom = Sheets(sheetini).Cells(3, 1) & " - " & Sheets("data").Cells(rowend + 5, 1)
        
    End If
    
    
    Workbooks(Nom_Classeur).Sheets.Add After:=Worksheets(Sheets.Count)
    Dim i As Long
    For i = 1 To Sheets.Count
        If UCase(Sheets(i).Name) = UCase(nom) Then
            Sheets(i).Delete
            i = Sheets.Count + 1
        End If
    Next i
    ActiveSheet.Name = nom
    
    'copie
    If Num_Dim <> -1 Then
        rowend = rowend + 5
        RowBegin = rowend
        
        Rem If Sheets("data").Cells(rowend + 1, 1) <> "" Then
            Do
                rowend = rowend + 1
            Loop Until Sheets("data").Cells(rowend + 1, 1) = ""
        Rem end if
        Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 1), Worksheets(sheetini).Cells(rowend, 2)).Copy (Sheets(nom).Range("A4"))
        Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 1), Worksheets(sheetini).Cells(rowend, 2)).Copy (Sheets(nom).Range("E4"))
        
        'on compte le nombre de groupe
        Dim Nb_Groupe As Integer
        Nb_Groupe = 0
        Do
            Nb_Groupe = Nb_Groupe + 1
        Loop Until Worksheets(sheetini).Cells(RowBegin, 4 + 7 * Nb_Groupe + 2) = ""
        
        Dim buffer_84 As Long
        For buffer_84 = 0 To Nb_Groupe - 1
            'on copie/colle dans la feuille de chaque rep|fffd|re
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 4 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 4 + 7 * buffer_84)).Copy (Sheets(nom).Range("C" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 9 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 9 + 7 * buffer_84)).Copy (Sheets(nom).Range("G" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 4 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 4 + 7 * buffer_84)).Copy (Sheets(nom).Range("U" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 9 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 9 + 7 * buffer_84)).Copy (Sheets(nom).Range("W" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 1), Worksheets(sheetini).Cells(rowend, 2)).Copy (Sheets(nom).Range("A" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 1), Worksheets(sheetini).Cells(rowend, 2)).Copy (Sheets(nom).Range("e" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 3 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 3 + 7 * buffer_84)).Copy (Sheets(nom).Range("d" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 3 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 3 + 7 * buffer_84)).Copy (Sheets(nom).Range("h" & (4 + (-RowBegin + rowend + 1) * buffer_84)))

            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 3 + 7 * buffer_84), Worksheets(sheetini).Cells(rowend, 3 + 7 * buffer_84)).Copy (Sheets(nom).Range("s" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 1), Worksheets(sheetini).Cells(rowend, 1)).Copy (Sheets(nom).Range("t" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 1), Worksheets(sheetini).Cells(rowend, 1)).Copy (Sheets(nom).Range("v" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
            Worksheets(sheetini).Range(Worksheets(sheetini).Cells(RowBegin, 2), Worksheets(sheetini).Cells(rowend, 2)).Copy (Sheets(nom).Range("x" & (4 + (-RowBegin + rowend + 1) * buffer_84)))
        Next buffer_84
                
        Worksheets(nom).Range("A3:H3") = Split("Rep|Code|moy|Groupe|Rep|Code|Ecart|Groupe", "|")
        Worksheets(nom).Range("S3:x3") = Split("Groupe|Rep|Moy|Rep|Ecart|Code", "|")

        Range(Worksheets("data").Cells(5, 1), Worksheets("data").Cells(5, 2)).Copy
        Range(Worksheets(nom).Cells(3, 1), Worksheets(nom).Cells(3, 8)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Range(Worksheets(nom).Cells(3, 19), Worksheets(nom).Cells(3, 24)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False

                
                    Else
        lcds_2
        RowBegin = 1
        rowend = 1
    End If
    
    'on compte le nombre de mesure au total pour le rep|fffd|re en cours
    
    Dim NbStart As Long 'indice du d|fffd|but du repere
    Dim NbStop As Long  'indice de fin   du repere
    
    NbStart = 4
    NbStop = NbStart
    While Sheets(nom).Cells(NbStop + 1, 1).Value <> ""
        NbStop = NbStop + 1   ' Incr|fffd|mente le compteur.
    Wend
'tri
    Sheets(nom).Range(Cells(4, 1), Sheets(nom).Cells(NbStop, 4)).Sort Key1:=Sheets(nom).Range("C4"), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Sheets(nom).Range(Cells(4, 5), Sheets(nom).Cells(NbStop, 8)).Sort Key1:=Sheets(nom).Range("G4"), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
'formate
    Sheets(nom).Range("A:C,E:G,O:R").ColumnWidth = 6
    Sheets(nom).Range("D:D,H:H").ColumnWidth = 6
    Sheets(nom).Range("M:M").ColumnWidth = 28
    Sheets(nom).Range("N:N").ColumnWidth = 7
    
    
    
    Dim first As Boolean
    
    first = True
    i = 0

    Do
    'stat

        If Sheets(nom).Cells(NbStart, 21) <> "" Or first Then
            If Num_Dim = -1 Then
                Sheets(nom).Cells(1 + nbligne * i, 9) = Worksheets(sheetini).Cells(1, 1) & " - rep|fffd|re : " & Sheets(nom).Cells(NbStart, 20) & " - groupe : " & Sheets(nom).Cells(NbStart, 19)
                If first Then Sheets(nom).Cells(1 + nbligne * i, 9) = Worksheets(sheetini).Cells(1, 1) & " - tous les rep|fffd|res - premier groupe"
                            Else
                Sheets(nom).Cells(1 + nbligne * i, 9) = Worksheets(sheetini).Cells(1, 1) & " - rep|fffd|re : " & Sheets(nom).Cells(NbStart, 20) & " - groupe " & Sheets(nom).Cells(NbStart, 19)
                If first Then Sheets(nom).Cells(1 + nbligne * i, 9) = Worksheets(sheetini).Cells(1, 1) & " - rep|fffd|re : " & Sheets(nom).Cells(NbStart, 20) & " - tous les groupes"
            End If
            Sheets(nom).Cells(3 + nbligne * i, 9) = nom
            Sheets(nom).Cells(5 + nbligne * i, 9) = "Moyenne"
            Sheets(nom).Cells(5 + nbligne * i, 10) = Application.WorksheetFunction.Round(Application.WorksheetFunction.Average(Range(Sheets(nom).Cells(NbStart, 21), Sheets(nom).Cells(NbStop, 21))), 0)
            Sheets(nom).Cells(6 + nbligne * i, 9) = "Ecart-type"
            If NbStart <> NbStop Then
                Sheets(nom).Cells(6 + nbligne * i, 10) = Application.WorksheetFunction.Round(Application.WorksheetFunction.StDev(Range(Sheets(nom).Cells(NbStart, 21), Sheets(nom).Cells(NbStop, 21))), 0)
            End If
            Sheets(nom).Cells(8 + nbligne * i, 9) = "Minimum"
            Sheets(nom).Cells(8 + nbligne * i, 10) = Application.WorksheetFunction.min(Range(Sheets(nom).Cells(NbStart, 21), Sheets(nom).Cells(NbStop, 21)))
            Sheets(nom).Cells(9 + nbligne * i, 9) = "Maximum"
            Sheets(nom).Cells(9 + nbligne * i, 10) = Application.WorksheetFunction.max(Range(Sheets(nom).Cells(NbStart, 21), Sheets(nom).Cells(NbStop, 21)))
            Sheets(nom).Cells(10 + nbligne * i, 9) = "Ecart max."
            Sheets(nom).Cells(10 + nbligne * i, 10) = Application.WorksheetFunction.max(Range(Sheets(nom).Cells(NbStart, 23), Sheets(nom).Cells(NbStop, 23)))
            Sheets(nom).Cells(11 + nbligne * i, 9) = "Nombre"
            Sheets(nom).Cells(11 + nbligne * i, 10) = Application.WorksheetFunction.Count(Range(Sheets(nom).Cells(NbStart, 21), Sheets(nom).Cells(NbStop, 21)))
            Sheets(nom).Cells(7 + nbligne * i, 9) = "Etendue"
            Sheets(nom).Cells(7 + nbligne * i, 10) = Sheets(nom).Cells(9 + nbligne * i, 10) - Sheets(nom).Cells(8 + nbligne * i, 10)
    
            Set Recherche = Sheets(nom).Range("U" & NbStart & ":U" & NbStop).Find(Sheets(nom).Range("J" & (8 + nbligne * i)))
            If Not Recherche Is Nothing Then
                'retourne la valeur en colonne B
                valeur = Sheets(nom).Range(Recherche.Address).Offset(0, 3)
                Sheets(nom).Cells(8 + nbligne * i, 12) = valeur
            End If
            Sheets(nom).Cells(8 + nbligne * i, 11) = "pi|fffd|ce n|fffd|"
            '.FormulaLocal = "=RECHERCHEV(J" & (8 + NbLigne * i) & ";U" & NbStart & ":X" & NbStop & ";4;FAUX)"

            Set Recherche = Sheets(nom).Range("U" & NbStart & ":U" & NbStop).Find(Sheets(nom).Range("J" & (9 + nbligne * i)))
            If Not Recherche Is Nothing Then
                'retourne la valeur en colonne B
                valeur = Sheets(nom).Range(Recherche.Address).Offset(0, 3)
                Sheets(nom).Cells(9 + nbligne * i, 12) = valeur
            End If
            Sheets(nom).Cells(9 + nbligne * i, 11) = "pi|fffd|ce n|fffd|"
            
            If Sheets(nom).Range("J" & (10 + nbligne * i)) <> 0 Then
                ' s'il y a un |fffd|cart <> 0 de 0 alors ca a un sens de donner l'|fffd|cart max
                Set Recherche = Sheets(nom).Range("W" & NbStart & ":W" & NbStop).Find(Sheets(nom).Range("J" & (10 + nbligne * i)))
                If Not Recherche Is Nothing Then
                    'retourne la valeur en colonne B
                    valeur = Sheets(nom).Range(Recherche.Address).Offset(0, 1)
                    Sheets(nom).Cells(10 + nbligne * i, 12) = valeur
                End If
                Sheets(nom).Cells(10 + nbligne * i, 11) = "pi|fffd|ce n|fffd|"
                                                                Else
                Sheets(nom).Range("J" & (10 + nbligne * i)) = ""
                Sheets(nom).Range("I" & (10 + nbligne * i)) = ""
            End If
            
            'compte |fffd|carts
            fini = False
            
            Dim NB_Sup_Vit As Double
            Dim NB_Sup_Eca As Double
            
            NB_Sup_Vit = 0
            NB_Sup_Eca = 0
            k = 4 + nbligne * i
    
            For k = NbStart To NbStop
                If ((Sheets(nom).Cells(k, 21) > Seuil_Max_Vit) Or (Sheets(nom).Cells(k, 21) < Seuil_Min_Vit)) Then
                    NB_Sup_Vit = NB_Sup_Vit + 1
                End If
                If Sheets(nom).Cells(k, 23) > Seuil_Max_Eca Then
                        NB_Sup_Eca = NB_Sup_Eca + 1
                End If
            Next
    
            Sheets(nom).Cells(12 + nbligne * i, 9) = "Nb vit. hors seuil"
            Sheets(nom).Cells(12 + nbligne * i, 11) = NB_Sup_Vit
            Sheets(nom).Cells(13 + nbligne * i, 9) = "Nb ecart hors seuil"
            Sheets(nom).Cells(13 + nbligne * i, 11) = NB_Sup_Eca
    
            Set Sel = Sheets(nom).Range("I" & (1 + nbligne * i) & ":J" & (1 + nbligne * i))
            Sel.Font.Bold = True
            Sel.Font.Italic = True
            Sel.Font.Size = 12
    
        
            Set Sel = Sheets(nom).Range("I" & (3 + nbligne * i) & ":N" & (3 + nbligne * i))
            Sel.Interior.ColorIndex = 15
            Sel.Font.Bold = True
            Sel.Font.Italic = True
            Sel.Borders(xlDiagonalDown).LineStyle = xlNone
            Sel.Borders(xlDiagonalUp).LineStyle = xlNone
            Sel.Borders(xlEdgeLeft).LineStyle = xlNone
            With Sel.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Sel.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .ColorIndex = xlAutomatic
            End With
            Sel.Borders(xlEdgeRight).LineStyle = xlNone
            Sel.Borders(xlInsideVertical).LineStyle = xlNone
            Sheets(nom).Columns("I:I").ColumnWidth = 12
            Sheets(nom).Columns("J:J").ColumnWidth = 7

            'histo moyennes

            If NbStart <> NbStop Or NbStop = 5 Then
            
                Application.Run "ATPVBAEN.XLAM!Histogram", Range(Workbooks(Nom_Classeur).Sheets(nom).Cells(NbStart, 21), Workbooks(Nom_Classeur).Sheets(nom).Cells(NbStop, 21)), _
                Workbooks(Nom_Classeur).Sheets(nom).Cells(2 + nbligne * i, 15), Range(Workbooks(Classeur_data).Sheets("data").Cells(6, Col_Histo), Workbooks(Classeur_data).Sheets("data").Cells(5 + Nb_Classes(1), Col_Histo)), False, False, False, False
                'Set Sel = Range(Sheets(nom).Cells(NbStart, 23), Sheets(nom).Cells(NbStop, 23))
                
                Application.Run "ATPVBAEN.XLAM!Histogram", Range(Workbooks(Nom_Classeur).Sheets(nom).Cells(NbStart, 23), Workbooks(Nom_Classeur).Sheets(nom).Cells(NbStop, 23)), _
                Workbooks(Nom_Classeur).Sheets(nom).Cells(2 + nbligne * i, 17), Range(Workbooks(Classeur_data).Sheets("data").Cells(6, Col_Histo + 1), Workbooks(Classeur_data).Sheets("data").Cells(5 + Nb_Classes(2), Col_Histo + 1)), False, False, False, False
                'Set Sel = Range(Sheets(nom).Cells(NbStart, 21), Sheets(nom).Cells(NbStop, 21))
                '[" & Nom_Classeur & "]

                'histographe des moyennes
                Set Feuille = Workbooks(Nom_Classeur).Sheets(nom)
                Charts.Add
    
                ActiveChart.ChartType = xlColumnClustered
                ActiveChart.SetSourceData Source:=Feuille.Range("O" & (3 + nbligne * i) & ":P" & (3 + nbligne * i + Nb_Classes(1))), PlotBy _
                    :=xlColumns
                ActiveChart.Location Where:=xlLocationAsObject, Name:=nom
      
                With ActiveChart
                    .HasTitle = True
                    .ChartTitle.Characters.Text = "Histogramme des moyennes"
                    .Axes(xlCategory, xlPrimary).HasTitle = True
                    .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Vitesse des ultrasons en m/s"
                    .Axes(xlValue, xlPrimary).HasTitle = True
                    .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Nombre de pi|fffd|ces"
                    .Axes(xlCategory).HasMajorGridlines = True
                    .Axes(xlValue).HasMajorGridlines = True
                    .HasLegend = False
                    .PlotArea.Interior.ColorIndex = 2
                    .PlotArea.Top = 10
                    .PlotArea.Height = Hauteur_Graphique
                    .Axes(xlCategory).AxisTitle.Font.Size = 8
                    .Axes(xlValue).AxisTitle.Font.Size = 8
                    .Axes(xlValue).TickLabels.Font.Size = 8
                    .ChartTitle.Font.Size = 10
                    .Axes(xlCategory).TickLabels.Font.Size = 8
                    .Axes(xlCategory).TickLabels.Orientation = xlHorizontal
                    .ChartTitle.Left = .ChartArea.Width
                    .ChartTitle.Left = .ChartTitle.Left / 2
                    decal = .ChartArea.Width / 2 - (.PlotArea.Left + .PlotArea.Width / 2)
                    .ChartTitle.Left = .ChartTitle.Left - decal
                    .Axes(xlCategory).AxisTitle.Top = 265
                    .ChartTitle.Top = 0
                    .ChartGroups(1).GapWidth = 40
                    .ChartArea.Border.LineStyle = 0
                    .SeriesCollection(1).Border.Weight = xlHairline
                    .SeriesCollection(1).Interior.ColorIndex = 25
                End With
    
                'les ordonn|fffd|es sont des entiers !!
    
                With ActiveChart.Axes(xlValue)
                    .MinimumScale = 0
                    .MaximumScale = Application.WorksheetFunction.Round(.MaximumScale, 0)
                    If .MaximumScale < 5 Then .MaximumScale = 5
                    If .MinorUnit < 1 Then .MinorUnit = 1
                    If .MajorUnit < 1 Then .MajorUnit = 1
                End With
    
                With Sheets(nom)
                    a = .ChartObjects.Count
                    .ChartObjects(a).Left = .Columns(9).Left
                    .ChartObjects(a).Top = .Rows(15 + nbligne * i).Top '183 + NbLigne * 12.75 '
                    .ChartObjects(a).Width = 10 * .Columns(10).Width
                    .ChartObjects(a).Height = 20 * .Rows(15).Height
                End With
  
                'histographe des |fffd|carts
                If Workbooks(Nom_Classeur).Sheets(nom).Cells(4, 23) = 0 Then GoTo fin_histo
                ' si l'|fffd|cart est nul, alors il n'y a qu'une mesure par dimension
                ' l'histogramme de l'|fffd|cart n'est donc pas |fffd| faire
                ' a moins que toutes les mesures de la piece soient identiques au m/s pr|fffd|s (hautement improbable)
                Set Feuille = Workbooks(Nom_Classeur).Sheets(nom)
                Charts.Add
    
                ActiveChart.ChartType = xlColumnClustered
                ActiveChart.SetSourceData Source:=Feuille.Range("Q" & (3 + nbligne * i) & ":R" & (nbligne * i + 3 + Nb_Classes(2))), PlotBy _
                    :=xlColumns
                ActiveChart.Location Where:=xlLocationAsObject, Name:=Feuille.Name

                With ActiveChart
                    .HasTitle = True
                    .ChartTitle.Characters.Text = "Histogramme des |fffd|carts"
                    .Axes(xlCategory, xlPrimary).HasTitle = True
                    .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = _
                    "Ecarts individuels en m/s"
                    .Axes(xlValue, xlPrimary).HasTitle = True
                    .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = "Nombre de pi|fffd|ces"
                    .Axes(xlCategory).HasMajorGridlines = True
                    .Axes(xlValue).HasMajorGridlines = True
                    .HasLegend = False
                    .PlotArea.Interior.ColorIndex = 2
                    .PlotArea.Top = 10
                    .PlotArea.Height = Hauteur_Graphique
                    .Axes(xlCategory).AxisTitle.Font.Size = 8
                    .Axes(xlValue).AxisTitle.Font.Size = 8
                    .Axes(xlValue).TickLabels.Font.Size = 8
                    .ChartTitle.Font.Size = 10
                    .Axes(xlCategory).TickLabels.Font.Size = 8
                    .Axes(xlCategory).TickLabels.Orientation = xlHorizontal
                    .ChartTitle.Left = .ChartArea.Width
                    .ChartTitle.Left = .ChartTitle.Left / 2
                    decal = .ChartArea.Width / 2 - (.PlotArea.Left + .PlotArea.Width / 2)
                    .ChartTitle.Left = .ChartTitle.Left - decal
                    .ChartTitle.Top = 0
                    .Axes(xlCategory).AxisTitle.Top = 265
                    .ChartGroups(1).GapWidth = 40
                    .ChartArea.Border.LineStyle = 0
                    .SeriesCollection(1).Border.Weight = xlHairline
                    .SeriesCollection(1).Interior.ColorIndex = 16
                End With

                'les ordonn|fffd|es sont des entiers !!
    
                With ActiveChart.Axes(xlValue)
                    .MinimumScale = 0
                    .MaximumScale = Application.WorksheetFunction.Round(.MaximumScale, 0)
                    If .MaximumScale < 5 Then .MaximumScale = 5
                    If .MinorUnit < 1 Then .MinorUnit = 1
                    If .MajorUnit < 1 Then .MajorUnit = 1
                End With
    
                With ActiveSheet
                    a = .ChartObjects.Count
                    .ChartObjects(a).Left = .Columns(9).Left
                    .ChartObjects(a).Top = .Rows(35 + nbligne * i).Top
                    .ChartObjects(a).Width = 10 * .Columns(10).Width
                    .ChartObjects(a).Height = 20 * .Rows(15).Height
                End With
                
fin_histo:

                Sheets(nom).Range("I1").Select
            End If
            
            Sheets(nom).PageSetup.CenterHorizontally = True
            Worksheets(sheetini).Activate
            i = i + 1
        End If

        Dim Buffer As String

        'le but dans cette condition est de d|fffd|terminer les lignes de d|fffd|but et de fin pour le groupe consid|fffd|r|fffd|
        If first = True Then
            'premier d|fffd|marrage de la boucle, on a d|fffd|ja fait l'histo g|fffd|n|fffd|ral, on va commencer
            ' |fffd| faire un histo par rep|fffd|re
            NbStop = NbStart
            Buffer = Sheets(nom).Cells(NbStart, 19)
            If Buffer <> "" Then
            Do
                NbStop = NbStop + 1
            Loop Until Sheets(nom).Cells(NbStop, 20) <> Buffer
            NbStop = NbStop - 1
            End If
            first = False
                        Else
            NbStart = NbStop + 1
            NbStop = NbStart
        End If
    
        Buffer = Sheets(nom).Cells(NbStart, 19)
        NbStop = NbStart
        If Buffer = "" Then Buffer = "r"
        
        Do
            NbStop = NbStop + 1
        Loop Until Sheets(nom).Cells(NbStop, 19) <> Buffer
        NbStop = NbStop - 1
            'i = i + 1

    Loop Until Sheets(nom).Cells(NbStop, 20) = ""
    
    If i <> 1 Then
        Sheets(nom).Cells(11, 10) = Sheets(nom).Cells(11, 10) / (i - 1)
    End If
    
    If i <> 0 Then
        Sheets(nom).PageSetup.PrintArea = "$I$1:$N$" & i * nbligne
    End If
    Num_Dim = Num_Dim + 1
            
Loop Until Sheets("data").Cells(rowend + 4, 1) = ""

End Sub

Sub Format_new()
' Format Macro
' Macro enregistr|fffd|e le 17/03/99 par Jacques
' Macro modifi|fffd|e le 18/10/07 par Philippe Pires Franco
' Macro modifi|fffd|e le 06/10/08

' Si le nom du four n'y est pas encore
Workbooks(Nom_Classeur).Activate
Sheets("data").Activate
Set Sel = Range("A1")
Sel.Font.Bold = True
Sel.Font.Italic = True
Sel.Font.Size = 12


' coordonn|fffd|es et activation de la s|fffd|lection initiale
rowend = 1

Do

    rowend = rowend + 4
    RowBegin = rowend
    Do
    rowend = rowend + 1
    Loop Until Sheets("data").Cells(rowend + 1, 1) = ""
    
    Range(Cells(RowBegin, 1), Cells(rowend, 1)).Select
        
    'Tri croissant du tableau
        'Range("B6").Select
        'Range("A5:Q45").Sort Key1:=Range("B6"), Order1:=xlAscending, Header:= _
            xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
            DataOption1:=xlSortNormal
        
    ' modification du gris et jaune clairs
    ActiveWorkbook.Colors(15) = RGB(192, 192, 192)
    ActiveWorkbook.Colors(37) = RGB(153, 204, 255)
       
    'largeur des colonnes
    Cells.ColumnWidth = 7
    Dim c
    c = 0
    Do
    c = c + 1
    Loop Until Cells(RowBegin, c + 1) = ""
    ' premi|fffd|re ligne
    Set Sel = Range(Cells(RowBegin, 1), Cells(RowBegin, c))
    Sel.Borders(xlDiagonalDown).LineStyle = xlNone
    Sel.Borders(xlDiagonalUp).LineStyle = xlNone
    With Sel.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Sel.Borders(xlInsideVertical).LineStyle = xlNone
    With Sel.Interior
        .ColorIndex = 15
        .Pattern = xlSolid
    End With
    With Sel.Font
        .Name = "Arial"
        .Size = 10
        .Bold = True
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
 'troisi|fffd|me ligne
    Dim k As Long
    
    Set Sel = Range(Cells(RowBegin, 1), Cells(RowBegin, c))
    With Sel.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Sel.Interior.ColorIndex = 37
    With Sel.Font
        .Name = "Arial"
        .Size = 8
        .Bold = True
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Sel.HorizontalAlignment = xlCenter
    
' lignes de donn|fffd|es
    Set Sel = Range(Cells(RowBegin + 1, 1), Cells(rowend, c))
    Sel.Interior.ColorIndex = 0
    Sel.Borders(xlDiagonalDown).LineStyle = xlNone
    Sel.Borders(xlDiagonalUp).LineStyle = xlNone
    With Sel.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Sel.Font
        .Name = "Arial"
        .Size = 10
        .FontStyle = "Normal"
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    With Sel
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .ShrinkToFit = False
        .MergeCells = False
    End With

'mise en forme du tableau pour l'histogramme
    Dim temp As Long
    temp = 6
    Do
        temp = temp + 1
    Loop Until Cells(temp, c + 2) = "" And Cells(temp, c + 3) = ""
    temp = temp - 1
    Range(Cells(5, 1), Cells(5, 2)).Copy
    Range(Cells(5, c + 2), Cells(5, c + 3)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    'Cells(5, c + 2) = "Vitesses"
    'Cells(5, c + 3) = "Ecarts"
    'Cells(4, c + 2) = "Classes Histo"
    Cells(5, c + 2).Copy
    Range(Cells(4, c + 2), Cells(4, c + 3)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Range(Cells(4, c + 2), Cells(4, c + 3)).Merge

    'compte
    Cells(rowend + 1, 2) = Application.WorksheetFunction.Count(Range(Cells(RowBegin + 3, 4), Cells(rowend, 4)))
    'moyennes
    Cells(rowend + 1, 4) = Application.WorksheetFunction.Average(Range(Cells(RowBegin + 3, 4), Cells(rowend, 4)))
    'If Application.WorksheetFunction.Sum(Range(Cells(RowBegin + 3, 11), Cells(rowend, 11))) > 0 Then
    '    Cells(rowend + 1, 11) = Application.WorksheetFunction.Average(Range(Cells(RowBegin + 3, 11), Cells(rowend, 11)))
    'End If
    'ecart-type
    If Application.WorksheetFunction.Count(Range(Cells(RowBegin + 3, 4), Cells(rowend, 4))) > 1 Then
        Cells(rowend + 2, 4) = Application.WorksheetFunction.StDev(Range(Cells(RowBegin + 3, 4), Cells(rowend, 4)))
    End If
    'If Application.WorksheetFunction.Count(Range(Cells(RowBegin + 3, 11), Cells(rowend, 11))) > 1 Then
    '    Cells(rowend + 2, 11) = Application.WorksheetFunction.StDev(Range(Cells(RowBegin + 3, 11), Cells(rowend, 11)))
    'End If
    'mini
    Cells(rowend + 1, 7) = Application.WorksheetFunction.min(Range(Cells(RowBegin + 3, 7), Cells(rowend, 7)))
    If Application.WorksheetFunction.Sum(Range(Cells(RowBegin + 3, 14), Cells(rowend, 14))) > 0 Then
        Cells(rowend + 1, 14) = Application.WorksheetFunction.min(Range(Cells(RowBegin + 3, 14), Cells(rowend, 14)))
    End If
    'maxi
    Cells(rowend + 1, 8) = Application.WorksheetFunction.max(Range(Cells(RowBegin + 3, 8), Cells(rowend, 8)))
    If Application.WorksheetFunction.Sum(Range(Cells(RowBegin + 3, 15), Cells(rowend, 15))) > 0 Then
        Cells(rowend + 1, 15) = Application.WorksheetFunction.max(Range(Cells(RowBegin + 3, 15), Cells(rowend, 15)))
    End If
    'ecart max
    Cells(rowend + 1, 9) = Application.WorksheetFunction.max(Range(Cells(RowBegin + 3, 9), Cells(rowend, 9)))
    If Application.WorksheetFunction.Sum(Range(Cells(RowBegin + 3, 16), Cells(rowend, 16))) > 0 Then
        Cells(rowend + 1, 16) = Application.WorksheetFunction.max(Range(Cells(RowBegin + 3, 16), Cells(rowend, 16)))
    End If
    Set Sel = Range(Cells(rowend + 1, 1), Cells(rowend + 2, c))
    Sel.NumberFormat = "0"
    With Sel.Font
        .Name = "Arial"
        .FontStyle = "Gras"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    With Sel
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .ShrinkToFit = False
        .MergeCells = False
    End With
    
    If rowend > 0 Then Cells(rowend, 1).Select
    
    
Loop Until Sheets("data").Cells(rowend + 4, 1) = ""

End Sub

Function lcds_2()
' permet de g|fffd|n|fffd|rer la feuille "recap"
' qui fait la moyenne selon toutes les dimensions pour chacune des pi|fffd|ces

'Dim Nb_Dim As Long

Dim k As Long
Dim L As Long
Dim Nb_Ligne As Long

Dim RowBegin As Long
Dim rowend As Long

rowend = 1
Nb_Ligne = 3
Do
    RowBegin = rowend + 5
    rowend = RowBegin
    
    If Worksheets("data").Cells(rowend + 1, 1) <> "" Then
        Do
        rowend = rowend + 1
        Loop Until Worksheets("data").Cells(rowend + 1, 1) = ""
    End If
    'commentaire
    
    For L = RowBegin To rowend
        Nb_Ligne = Nb_Ligne + 1
        Worksheets("recap").Cells(Nb_Ligne, 3) = Worksheets("data").Cells(L, 4) ' moyenne des moyennes
        Worksheets("recap").Cells(Nb_Ligne, 1) = Worksheets("data").Cells(L, 1)
        Worksheets("recap").Cells(Nb_Ligne, 2) = Worksheets("data").Cells(L, 2)
        Worksheets("recap").Cells(Nb_Ligne, 4) = Worksheets("data").Cells(RowBegin - 1, 3)
        Worksheets("recap").Cells(Nb_Ligne, 8) = Worksheets("data").Cells(RowBegin - 1, 3)
        Worksheets("recap").Cells(Nb_Ligne, 19) = Worksheets("data").Cells(RowBegin - 1, 3)
        Worksheets("recap").Cells(Nb_Ligne, 5) = Worksheets("data").Cells(L, 1)
        Worksheets("recap").Cells(Nb_Ligne, 6) = Worksheets("data").Cells(L, 2)
        Worksheets("recap").Cells(Nb_Ligne, 7) = Worksheets("data").Cells(L, 9)
        Worksheets("recap").Cells(Nb_Ligne, 20) = Worksheets("data").Cells(L, 1)
        Worksheets("recap").Cells(Nb_Ligne, 21) = Worksheets("data").Cells(L, 4)
        Worksheets("recap").Cells(Nb_Ligne, 22) = Worksheets("data").Cells(L, 1)
        Worksheets("recap").Cells(Nb_Ligne, 23) = Worksheets("data").Cells(L, 9)
        Worksheets("recap").Cells(Nb_Ligne, 24) = Worksheets("data").Cells(L, 2)
    Next
    
Loop Until Worksheets("data").Cells(rowend + 4, 1) = ""

Sheets("recap").Range("A1") = Sheets("data").Range("A3")
Sheets("recap").Range("E1") = Sheets("data").Range("A3")
Sheets("recap").Range("T1") = Sheets("data").Range("A3")
Sheets("recap").Range("V1") = Sheets("data").Range("A3")

Sheets("recap").Range("A3") = "Rep"
Sheets("recap").Range("B3") = "Code"
Sheets("recap").Range("C3") = "moy"

Sheets("recap").Range("E3") = "Rep"
Sheets("recap").Range("F3") = "Code"
Sheets("recap").Range("G3") = "Ecart"

Sheets("recap").Range("T3") = "Rep"
Sheets("recap").Range("V3") = "Rep"
Sheets("recap").Range("X3") = "Code"

Sheets("recap").Range("U3") = "Moy"
Sheets("recap").Range("W3") = "Ecart"

Sheets("recap").Range("D3") = "Groupe"
Sheets("recap").Range("H3") = "Groupe"
Sheets("recap").Range("S3") = "Groupe"

'application de la charte graphique
Sheets("data").Range("A1").Copy
    Sheets("recap").Range("A1").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
Sheets("data").Range("A3").Copy
    Sheets("recap").Range("e1").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
Sheets("data").Range("A1").Copy
    Sheets("recap").Range("t1").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
Sheets("data").Range("A3").Copy
     Sheets("recap").Range("v1").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
Sheets("data").Range("A5").Copy
     Sheets("recap").Range("A3:H3").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
     Sheets("recap").Range("S3:X3").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
Sheets("data").Range("A6").Copy
     Sheets("recap").Range("A4:H" & Nb_Ligne).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
        Sheets("recap").Range("S4:X" & Nb_Ligne).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
End Function

Function ajout_complement()

'historiquement, l'ajout de la colonne "enregistrement" est arriv|fffd| apr|fffd|s la mise au point de la macro
'd'ou l'insertion de la colonne et le copier/coller de mise en forme

Workbooks(Nom_Classeur).Worksheets("data").Columns("A:A").Insert Shift:=xlToRight
Workbooks(Nom_Classeur).Worksheets("data").Columns("A:A").Insert Shift:=xlToRight
Workbooks(Nom_Classeur).Worksheets("data").Cells(5, 1) = "N|fffd| Enregistrement"
Workbooks(Nom_Classeur).Worksheets("data").Cells(5, 2) = "Forme"
Dim k
k = 6
Do
    Workbooks(Nom_Classeur).Worksheets("data").Cells(k - 1, 1) = "N|fffd| Enregistrement"
    Workbooks(Nom_Classeur).Worksheets("data").Cells(k - 1, 2) = "N|fffd| Etude"
    Do
    Workbooks(Nom_Classeur).Sheets("data").Cells(k, 1) = Workbooks(Classeur_data).Sheets("data2").Cells(k, 1)
    Workbooks(Nom_Classeur).Sheets("data").Cells(k, 2) = Workbooks(Classeur_data).Sheets("data2").Cells(k, 2)
    k = k + 1
    Loop Until Workbooks(Classeur_data).Worksheets("data2").Cells(k, 2) = ""
    k = k + 4
Loop Until Workbooks(Classeur_data).Worksheets("data2").Cells(k, 2) = ""
Range(Workbooks(Nom_Classeur).Worksheets("data").Cells(5, 3), Workbooks(Nom_Classeur).Worksheets("data").Cells(k, 3)).Copy
Range(Workbooks(Nom_Classeur).Worksheets("data").Cells(5, 1), Workbooks(Nom_Classeur).Worksheets("data").Cells(k, 2)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
Application.CutCopyMode = False
'Workbooks(Nom_Classeur).Worksheets("data").Cells(1, 1).Select
End Function

Function Ajout_Liste_Mesure()
Workbooks(Classeur_data).Sheets("mesures").Copy Before:=Workbooks(Nom_Classeur).Sheets(2)

Dim a As Long 'indice de la ligne d'en t|fffd|te
Dim b As Long ' indice de la derniere ligne de mesure
Dim c As Long ' nombre de colonnes
    
a = 6
b = 6

Do
        Do
            b = b + 1
        Loop Until Workbooks(Nom_Classeur).Sheets("mesures").Cells(b, 1) = ""
        b = b - 1
        c = 1
        Do
            c = c + 1
        Loop Until Workbooks(Nom_Classeur).Sheets("mesures").Cells(a, c) = ""
        c = c - 1
        
        Range(Workbooks(Nom_Classeur).Sheets("data").Cells(5, 1), Workbooks(Nom_Classeur).Sheets("data").Cells(5, 2)).Copy
        Range(Workbooks(Nom_Classeur).Sheets("mesures").Cells(a, 1), Workbooks(Nom_Classeur).Sheets("mesures").Cells(a, c)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                SkipBlanks:=False, Transpose:=False
        Range(Workbooks(Nom_Classeur).Sheets("data").Cells(6, 1), Workbooks(Nom_Classeur).Sheets("data").Cells(6, 2)).Copy
        Range(Workbooks(Nom_Classeur).Sheets("mesures").Cells(a + 1, 1), Workbooks(Nom_Classeur).Sheets("mesures").Cells(b, c)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                SkipBlanks:=False, Transpose:=False
                
        a = b + 2
        b = a + 1
Loop Until Workbooks(Nom_Classeur).Sheets("mesures").Cells(b, 1) = ""

Workbooks(Nom_Classeur).Sheets("mesures").Cells(1, 1).Select
Application.CutCopyMode = False
End Function
Attribute VB_Name = "main"
Sub consolidation(nom As String, chemin As String)
'Sheets(152).Activate


Application.DisplayAlerts = False

Nom_Classeur = nom

Application.ScreenUpdating = False
misc.charger_macro_comp
Dim a


a = fermer_classeur(nom)


a = creer_classeur(nom, chemin)
core.Format_new
core.Histo_New
core.ajout_complement
core.Ajout_Liste_Mesure

Application.ScreenUpdating = True
Workbooks(nom).Save
Workbooks(Classeur_data).Close False
Workbooks(nom).Sheets("recap").Activate
Workbooks(nom).Sheets("recap").Select

ActiveWindow.SelectedSheets.PrintPreview

Application.DisplayAlerts = True

End Sub


Sub test()
Application.Visible = True

consolidation "xport.xls", "C:\Users\a25admin-sgr\Desktop\test viewsonic\xport.xls"
'Nom_Classeur = "histo_modif.xls"

End Sub
Attribute VB_Name = "misc"
Sub recaler_nb_ligne()

Dim i As Long
i = 60

Sheets("feuil1").Activate
Do
Sheets("Feuil1").PageSetup.PrintArea = "$A$1:$E$" & i
i = i - 1
Sheets("feuil1").Range("E1") = i
Loop Until Application.ExecuteExcel4Macro("Get.Document(50)") = 1 Or i = 1

End Sub


Function charger_macro_comp()
On Error Resume Next
'Exit Function
'une erreur se produit si le fichier voulu est d|fffd|ja en m|fffd|moire

AddIns("Utilitaire d'analyse - VBA").Installed = False
AddIns("Utilitaire d'analyse - VBA").Installed = True

' ligne ci-dessous non test|fffd|
' |fffd|crites pour permettre de lancer le bon AddIns sur les PCs anglais
AddIns("Analysis ToolPak - VBA").Installed = False
AddIns("Analysis ToolPak - VBA").Installed = True

Application.Workbooks.Open Application.LibraryPath & "\analysis\atpvbaen.xla"
Application.Workbooks("atpvbaen.xla").RunAutoMacros 1

Application.Workbooks.Open Application.LibraryPath & "\analysis\atpvbaen.xlam"
Application.Workbooks("atpvbaen.xlam").RunAutoMacros 1


End Function

Function creer_classeur(New_Name As String, New_Chemin As String)

Workbooks.Add
ActiveWorkbook.SaveAs New_Chemin
Workbooks(Classeur_data).Sheets("data").Copy Before:=Workbooks(New_Name).Sheets(1)
Workbooks(New_Name).Sheets("Feuil1").Delete
Workbooks(New_Name).Sheets("Feuil2").Delete
Workbooks(New_Name).Sheets("Feuil3").Delete
End Function

Function fermer_classeur(nom As String)
On Error Resume Next
Workbooks(nom).Close False
End Function
Function min(n1 As Double, n2 As Double) As Double
If n1 > n2 Then
    min = n2
            Else
    min = n1
End If
End Function
Function max(n1 As Double, n2 As Double) As Double
If n1 < n2 Then
    max = n2
            Else
    max = n1
End If
End Function


INQUEST-PP=macro
