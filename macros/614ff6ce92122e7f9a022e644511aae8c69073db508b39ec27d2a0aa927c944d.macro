Attribute VB_Name = "CodeReset_Macs"
Option Explicit

Sub ResetCode()
Attribute ResetCode.VB_ProcData.VB_Invoke_Func = "r\n14"
    With Application
        .EnableEvents = True
        .Calculation = xlCalculationAutomatic
        .ScreenUpdating = True
    End With
End Sub

Sub StopCode()
    With Application
        .EnableEvents = False
        .Calculation = xlCalculationManual
        .ScreenUpdating = False
    End With
End Sub
    
Attribute VB_Name = "EmailSched_Macs"
Option Explicit

Sub EmailSchedule()
Dim OutApp, OutMail As Object
Dim SchRng As Range
Dim Filename, Email, Subj, Mess As String
With Sheet1
Set SchRng = .Range("D3:J40")
  Filename = ThisWorkbook.Path & "\" & .Range("D3").Value & ".pdf"
     On Error Resume Next
    If Dir(Filename) > 0 Then Kill (Filename)
    On Error GoTo 0
    Email = Sheet3.Range("D" & .Range("B8").Value).Value ' Email dei dottori e dello staff
    Subj = "Your " & .Range("D3").Value & " Schedule"
    Mess = "Hi " & Sheet3.Range("C" & .Range("B8").Value).Value & ", Questo |fffd| Here is your monthly schedule for the upcoming month" & vbCrLf & "Please let us know if you have any questions"
    .PageSetup.PrintArea = SchRng.Address
    .ExportAsFixedFormat Type:=xlTypePDF, Filename:=Filename, Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
                    Set OutApp = CreateObject("Outlook.Application")
                    Set OutMail = OutApp.CreateItem(0)
            
                            With OutMail
                                .To = Email
                                .Subject = Subj
                                .Body = Mess
                                .Attachments.Add Filename
                                .Display  'Use .Send  to send email without displaying first
                            End With
                            On Error GoTo 0
                            Set OutMail = Nothing
End With
End Sub
Attribute VB_Name = "GoogleCalSync_Macs"
Option Explicit

Sub SendToGoogleCalendar()
Dim objHTTP As Object
Dim Json, URL, ApName, WebhookID, ApTime As String
Dim ApStart, ApEnd As Date
Dim StaffRow, SelRow, ApDur  As Long
With Sheet1
    If .Range("B8").Value = Empty Then 'Check for correct Staff
        MsgBox "Please select a correct Staff"
        Exit Sub
    End If
StaffRow = .Range("B8").Value 'Staff Row
WebhookID = Sheet3.Range("F" & StaffRow).Value
If WebhookID = "" Then
    MsgBox "Please assign a Zapier Webhook ID to this staff"
    Sheet3.Activate
    Sheet3.Range("F" & StaffRow).Select
    Exit Sub
End If
SelRow = .Range("B1").Value 'Get Selected Row
ApDur = .Range("P10").Value   'Set Duration
ApStart = .Range("M3").Value + .Range("L" & SelRow).Value 'Combine Date & Time
ApEnd = ApStart + (ApDur * 0.000695)
ApName = .Range("M" & SelRow).Value

Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
URL = "[Add Your Webhook Link Here]" & WebhookID & "/?ApName=" & ApName & "&ApStart=" & ApStart & "&ApEnd=" & ApEnd
objHTTP.Open "PATCH", URL, False
objHTTP.setRequestHeader "Content-type", "application/json"
objHTTP.Send (Json) 'Send Information
End With
End Sub

Attribute VB_Name = "MonthSel_Mac"
Option Explicit


 Sub MonthSel1()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("JanBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 1
LoadMonth
End Sub
 Sub MonthSel2()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("FebBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 2
LoadMonth
End Sub
 Sub MonthSel3()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("MarBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 3
LoadMonth
End Sub

 Sub MonthSel4()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("AprBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 4
LoadMonth
End Sub
 Sub MonthSel5()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("MayBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 5
LoadMonth
End Sub
 Sub MonthSel6()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("JunBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 6
LoadMonth
End Sub

 Sub MonthSel7()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("JulBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 7
LoadMonth
End Sub

 Sub MonthSel8()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("AugBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 8
LoadMonth
End Sub

 Sub MonthSel9()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("SepBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 9
LoadMonth
End Sub

 Sub MonthSel10()
  Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("OctBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 10
LoadMonth
End Sub

 Sub MonthSel11()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("NovBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 11
LoadMonth
End Sub

 Sub MonthSel12()
 Sheet1.Shapes("MonthBtns").ShapeStyle = msoShapeStylePreset41
 Sheet1.Shapes("DecBtn").ShapeStyle = msoShapeStylePreset27
    Sheet1.Range("B4").Value = 12
LoadMonth
End Sub

Attribute VB_Name = "OutlookSync_Macs"
Option Explicit


Sub OutSyncAddCal()
Dim olApp, olfolder As Object 'Dim olApp As Outlook.Application
'Dim olfolder As Outlook.MAPIFolder
'Check to make sure a Staff exists on the Selected Line
With Sheet3
If .Range("C" & ActiveCell.Row).Value = Empty Then
MsgBox "Please select a row containing a staff memeber before assigning a calendar to that staff"
Exit Sub
End If

    Set olApp = CreateObject("Outlook.Application")
    Set olfolder = olApp.GetNamespace("MAPI").PickFolder
    If olfolder Is Nothing Then Exit Sub
    '.Range("E" & ActiveCell.Row).Value = (olfolder.Name) 'This adds the Folder Name to anywhere you want
    .Range("E" & ActiveCell.Row).Value = (olfolder.EntryID) 'This adds the Folder ID
    Set olfolder = Nothing
    Set olApp = Nothing
End With
End Sub

Sub SendToOultook()
    Dim olApp, olApt, olFldr, olObject, olItems, ExistItem, NS As Object 'As Outlook.Application
    Dim StaffRow, SelRow As Long
    Dim ApStart As Date
    Dim ApTime, ApDur, ApName, CalendID, SearchStart As String

With Sheet1
If .Range("B8").Value = Empty Then
    MsgBox "Please select a correct Staff"
    Exit Sub
End If

StaffRow = .Range("B8").Value 'Staff Row
CalendID = Sheet3.Range("E" & StaffRow).Value
If CalendID = "" Then
    MsgBox "Please assign a Calendar to this staff"
    Sheet3.Activate
    Sheet3.Range("E" & StaffRow).Select
    OutSyncAddCal
    Exit Sub
End If

Set olApp = CreateObject("Outlook.Application")
Set NS = olApp.GetNamespace("MAPI")
SelRow = .Range("B1").Value 'Get Selected Row
ApStart = .Range("M3").Value + .Range("L" & SelRow).Value 'Combine Date & Time
ApName = .Range("M" & SelRow).Value
ApDur = .Range("P10").Value     'Set Duration


     Set olFldr = NS.GetFolderFromID(CalendID)
     Set olApt = olApp.CreateItem(olAppointmentItem)
     Set olItems = NS.GetFolderFromID(CalendID).Items
     Set ExistItem = NS.GetFolderFromID(CalendID).Items
    'ApStart = Format(ApStart, "ddddd hh:mm")
    SearchStart = "[Start]='" & Format(ApStart, "ddddd hh:mm") & "'"
    Set ExistItem = olItems.Find(SearchStart)
    If ExistItem Is Nothing Then
                   With olApt
                        .Subject = ApName
                        .Start = ApStart
                        .Duration = ApDur
                        .ReminderSet = False
                        .Categories = "Test Appointment"
                        .Save
                        .Move olFldr
                        .Close olSave
                    End With
             Else:
                With ExistItem
                        .Subject = ApName
                        .Duration = ApDur
                        .ReminderSet = False
                        .Categories = "Test Appointment"
                        .Save
                        .Close olSave
                    End With
     End If
    Set olApp = Nothing
End With
End Sub

Attribute VB_Name = "SchedMacs"
Option Explicit
Dim ShtNm, ScSum As String
Dim LastRow, ScRow, ScCol, StCol, EndCol, DbCol, AddRows As Long
Sub AddNewSheet()
Dim ShtNm As String
ShtNm = Sheet1.Range("ScYear").Value
Sheets.Add
ActiveSheet.Name = ShtNm
Sheets("2018").Range("A1:NB1").Copy
Sheets("" & ShtNm & "").Range("A1:NB1").PasteSpecial xlPasteAll
Sheets("" & ShtNm & "").Range("A1") = "1/1/" & ShtNm
Application.CutCopyMode = False
'Sheets("" & ShtNm & "").Visible = xlHidden
Sheet1.Activate
End Sub

Sub AddSummary()
With Sheet1
AddRows = .Range("B18").Value 'Set Schedule Add Rows For Staff
ShtNm = .Range("ScYear").Value
ScCol = .Range("M42").Value
ScSum = Empty
LastRow = .Range("M41").End(xlUp).Row
For ScRow = 4 To LastRow
If .Range("M" & ScRow).Value <> Empty Then
    ScSum = ScSum & Format(.Range("L" & ScRow).Value, "h:mma/p") & ": " & .Range("M" & ScRow).Value & vbCrLf
End If
Next ScRow
Sheets("" & ShtNm & "").Cells(40 + AddRows, ScCol).Value = ScSum
.Range(.Range("B7").Value).Value = ScSum
End With
End Sub

Sub LoadMonth()
StopCode
With Sheet1
.Calculate
AddRows = .Range("B18").Value 'Set Schedule Add Rows For Staff
If .Range("B5").Value = "" Then AddNewSheet
.Calculate
ShtNm = .Range("ScYear").Value
DbCol = .Range("B5").Value 'First Column
.Range("D6:J10,D12:J16,D18:J22,D24:J28,D30:J34,D36:J40").ClearContents
For ScRow = 6 To 36 Step 6
    For ScCol = 4 To 10
    If .Cells(ScRow - 1, ScCol).Value = Empty Then GoTo NextCol
    .Cells(ScRow, ScCol).Value = Sheets("" & ShtNm & "").Cells(40 + AddRows, DbCol).Value
    DbCol = DbCol + 1
NextCol:
    Next ScCol
Next ScRow
End With
ResetCode
End Sub

Sub LoadDay()
With Sheet1
AddRows = .Range("B18").Value 'Set Schedule Add Rows For Staff
.Range("B2").Value = True
ShtNm = .Range("ScYear")
ScCol = .Range("M42").Value
.Range("M4:M40").ClearContents
.Range("M4:M40").Value = Range(Sheets("" & ShtNm & "").Cells(2 + AddRows, ScCol), Sheets("" & ShtNm & "").Cells(38 + AddRows, ScCol)).Value
.Range("B2").Value = False
End With
End Sub

Sub PrevMonth()
With Sheet1
If .Range("B4").Value = 1 Then
    .Range("B4").Value = 12
    .Range("P7").Value = .Range("P7").Value - 1
Else:
.Range("B4").Value = .Range("B4").Value - 1
End If
End With
LoadMonth
End Sub

Sub NextMonth()
With Sheet1
If .Range("B4").Value = 12 Then
    .Range("B4").Value = 1
    .Range("P7").Value = .Range("P7").Value + 1
Else:
.Range("B4").Value = .Range("B4").Value + 1
End If
End With
LoadMonth
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Dim DbCol As Long
Dim DbSht As String
Private Sub Worksheet_Change(ByVal Target As Range)
If Not Intersect(Target, Range("M4:M40")) Is Nothing And Range("B2").Value = False Then
    If Range("M42").Value = Empty Then AddNewSheet
        DbCol = Range("M42").Value 'Database Column
        DbSht = Range("ScYear").Value
        Sheets("" & DbSht & "").Cells(Target.Row - 2 + Range("B18").Value, DbCol).Value = Target.Value
        Range("B1").Value = Target.Row 'Set Row for Google & Outlook Calendar Sync
        If Range("P8").Value = "Yes" Then SendToOultook 'Send to Outlook when opted in
        If Range("P9").Value = "Yes" Then SendToGoogleCalendar
        AddSummary
End If
If Not Intersect(Target, Range("P4:P7")) Is Nothing Then
    LoadMonth
End If

If Not Intersect(Target, Range("M2")) Is Nothing Then 'Refresh Both Month And Day on Staff Change
    LoadMonth
    LoadDay
End If


End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Count > 6 Then Exit Sub
If Not Intersect(Target, Range("D6:J10,D12:J16,D18:J22,D24:J28,D30:J34,D36:J40")) Is Nothing Then
    If Target.Offset(-1, 0).Value <> Empty Then Range("M3").Value = Target.Offset(-1, 0).Value
    LoadDay
    Range("B7").Value = Target.Address
End If
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Count > 1 Then Exit Sub
If Not Intersect(Target, Range("C3:F53")) Is Nothing Then
    Range("B2").Value = Target.Row
End If

End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
