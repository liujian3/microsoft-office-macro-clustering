Attribute VB_Name = "NewMacros"
Sub Remplir_formulaire()
Attribute Remplir_formulaire.VB_Description = "Macro enregistr|fffd|e le 08/02/2002 par dev"
Attribute Remplir_formulaire.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.Remplir_formulaire"
    Dim oCnc As ADODB.Connection
    Dim oRs As Recordset
    Dim sSQL As String
    Dim i As Integer
    Dim j As Integer
    Dim sID_FO As String
    Dim sValeur As String
    
    'Recuperation de la cle primaire identifiant l'enregistrement selectionn|fffd|
    sID_FO = ActiveDocument.Variables.Item("ID")
    sODBCSource = ActiveDocument.Variables.Item("SOURCE")
    Set oCnc = New Connection
    Set oRs = New Recordset
    'Affectation de la connection
     oCnc.Open sODBCSource
    'Affectation du recordset
     sSQL = "SELECT FO3.*,HABITATION.ID_BATIMENT AS NUM_BATIMENT,HABITATION.ADRESSE AS HABITATION_ADRESSE,HABITATION.Num_voirie,HABITATION.Adresse_complement,COMMUNE.NOM AS C_COMMUNE,HABITATION.SectionCadastre,HABITATION.NumeroCadastre,COMMUNE.CP as C_CP,PROPRIETAIRE.NOM as P_NOM,PROPRIETAIRE.PRENOM AS P_PRENOM,PROPRIETAIRE.ADRESSE AS P_ADRESSE,PROPRIETAIRE.num_voirie as P_Num_voirie,PROPRIETAIRE.Adresse_complement AS P_Adresse_comple,PROPRIETAIRE.VILLE as P_COMMUNE,PROPRIETAIRE.CP AS P_CP,PROPRIETAIRE.ID_PAYS,PROPRIETAIRE.TELEPHONE AS P_TELEPHONE, " & _
    "VISITE.DATE_VISITE AS Date_RDV,AGENT.NOM AS AGENT_NOM,HABITATION.Numero_dossier,refFctImpact1.LIB_FctImpact1,refFctImpact1.Detail As Detail_D,refFctImpact2.LIB_FctImpact2,refFctImpact2.Detail As Detail_F,refFctImpact3.LIB_FctImpact3,refFctImpact3.Detail As Detail_I,refFctImpact4.LIB_FctImpact4,refFctImpact4.Detail As Detail_R FROM (((((((((FO3 INNER JOIN HABITATION ON HABITATION.ID_HABITATION = FO3.ID_HABITATION) INNER JOIN COMMUNE ON COMMUNE.ID_COMMUNE = HABITATION.ID_COMMUNE) INNER JOIN PROPRIETAIRE ON PROPRIETAIRE.ID_PROPRIETAIRE = FO3.ID_PROPRIETAIRE) LEFT JOIN VISITE ON VISITE.ID_HABITATION = HABITATION.ID_HABITATION) LEFT JOIN AGENT ON AGENT.ID_AGENT = VISITE.ID_AGENT) LEFT JOIN refFctImpact1 ON refFctImpact1.ID_FctImpact1 = FO3.ID_FctImpact1) LEFT JOIN refFctImpact2 ON refFctImpact2.ID_FctImpact2 = FO3.ID_FctImpact2)LEFT JOIN refFctImpact3 ON refFctImpact3.ID_FctImpact3 = FO3.ID_FctImpact3)LEFT JOIN refFctImpact4 ON refFctImpact4.ID_FctImpact4 = FO3.ID_FctImpact4) " & _
    "WHERE FO3.ID_FO3 = " & CInt(sID_FO)
    oRs.Open sSQL, oCnc, adOpenDynamic, adLockOptimistic
    'recuperation des valeurs de Word et insertion dans la base de donn|fffd|e
    'rempli toutes les zones textes
    i = 1
    While i <= ActiveDocument.FormFields.Count
        'Pour le type texte
        If ActiveDocument.FormFields(i).Type = wdFieldFormTextInput Then
            If Not IsNull(oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc))) Then
                'Verifie la longueur de la chaine si > 255 alors cre|fffd|r de nouveau signet
                If Len(oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc))) > 255 Then
                    sChaine = oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc))
                    While Len(sChaine) > 255
                        If InStr(1, sChaine, Chr(10)) <> 0 Then
                             sChaine = Left(sChaine, InStr(1, sChaine, Chr(10)) - 1) & Right(sChaine, Len(sChaine) - InStr(1, sChaine, Chr(10)))
                             While InStr(1, sChaine, Chr(10)) <> 0
                                sChaine = Left(sChaine, InStr(1, sChaine, Chr(10)) - 1) & Right(sChaine, Len(sChaine) - InStr(1, sChaine, Chr(10)))
                             Wend
                        End If
                        ActiveDocument.FormFields(i).Result = Left(sChaine, 255)
                        ActiveDocument.FormFields.Add ActiveDocument.Range(ActiveDocument.FormFields(i).Range.End, ActiveDocument.FormFields(i).Range.End), wdFieldFormTextInput
                        If Len(sChaine) > 255 Then
                            sChaine = Right(sChaine, Len(sChaine) - 255)
                        End If
                        i = i + 1
                    Wend
                    ActiveDocument.FormFields(i).Result = sChaine
                Else
                    If InStr(1, oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc)), Chr(10)) <> 0 Then
                             sChaine = oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc))
                             sChaine = Left(sChaine, InStr(1, sChaine, Chr(10)) - 1) & Right(sChaine, Len(sChaine) - InStr(1, sChaine, Chr(10)))
                             While InStr(1, sChaine, Chr(10)) <> 0
                                sChaine = Left(sChaine, InStr(1, sChaine, Chr(10)) - 1) & Right(sChaine, Len(sChaine) - InStr(1, sChaine, Chr(10)))
                             Wend
                             ActiveDocument.FormFields(i).Result = sChaine
                    Else
                        ActiveDocument.FormFields(i).Result = oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc))
                    End If
                End If
            End If
        End If
        
        'Pour le type check box
         If ActiveDocument.FormFields(i).Type = wdFieldFormCheckBox Then
            'regarde la check box qui est point|fffd|
            Select Case Right(ActiveDocument.FormFields(i).Name, 1)
                Case Is = "1"
                     If oRs.Fields(Left(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc), Len(ActiveDocument.FormFields(i).Name) - 1)).Value = 1 Then
                        ActiveDocument.FormFields(i).CheckBox.Value = True
                    Else
                        ActiveDocument.FormFields(i).CheckBox.Value = False
                    End If
                Case Is = "2"
                    If oRs.Fields(Left(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc), Len(ActiveDocument.FormFields(i).Name) - 1)).Value = 0 Then
                        ActiveDocument.FormFields(i).CheckBox.Value = True
                    Else
                        ActiveDocument.FormFields(i).CheckBox.Value = False
                    End If
                 Case Is = "3"
                    If oRs.Fields(Left(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc), Len(ActiveDocument.FormFields(i).Name) - 1)).Value = 3 Then
                        ActiveDocument.FormFields(i).CheckBox.Value = True
                    Else
                        ActiveDocument.FormFields(i).CheckBox.Value = False
                    End If
                Case Else
                    'regarde si la check box est unique
                    If oRs.Fields(RemplaceLettreAccentu|fffd|es(ActiveDocument.FormFields(i).Name, oCnc)).Value Then
                        ActiveDocument.FormFields(i).CheckBox.Value = True
                    Else
                        ActiveDocument.FormFields(i).CheckBox.Value = False
                    End If
             End Select
        End If
        i = i + 1
    Wend
    
    
    oRs.Close
    oCnc.Close
    Set oRs = Nothing
    Set oCnc = Nothing
End Sub

'les champs dans Oracle ne doivent contenir aucun accents donc la comparaison sur
'les champs doit se faire en remplacant les |fffd|ventuelles accents.
Private Function RemplaceLettreAccentu|fffd|es(ByVal asFieldName As String, ByVal oCnc As ADODB.Connection) As String
  Dim sNewField As String
  
  sNewField = LCase(asFieldName)
  If InStr(oCnc.Provider, "MSDAORA") > 0 Or InStr(oCnc.Provider, "OraOLEDB") > 0 Then
    sNewField = Replace(sNewField, "|fffd|", "c")
    sNewField = Replace(sNewField, "|fffd|", "e")
    sNewField = Replace(sNewField, "|fffd|", "e")
    sNewField = Replace(sNewField, "|fffd|", "a")
    sNewField = Replace(sNewField, "|fffd|", "u")
  End If
  RemplaceLettreAccentu|fffd|es = UCase(sNewField)
End Function

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True




INQUEST-PP=macro
