Attribute VB_Name = "Declarations"
Public Const gsHojaTemporal = "ImpoTemp"
Public Const msTituloPPA = "INTERBANK"
Public Const gsMensajeErrorRestrictivo = "Nro. Doc. Identidad diferentes con misma cuenta"
Public Const gsHojaTempExp = "ExpoTemp"
Public Const gsHojaTempImp = "ImpoTemp"
Public gsHojaDetalleREM As String
Public Const gsHojaDetalleVAR = "Detalle Pagos Varios"
Public Const gsPassword = "xls"

Type RegDetalleREM
    CODCTRL     As String * 2
    CODBENEF    As String * 20
    TIPOPERA    As String * 1
    NRODOCUM    As String * 20
    FVCTODOC    As String * 8
    MONOPERA    As String * 2
    IMPOPERA    As String * 15
    INDBANCO    As String * 1
    TIPABONO    As String * 2
    PRODUCTO    As String * 3
    moneda      As String * 2
    OFICINA     As String * 3
    NROCTA      As String * 20
    TIPBENEF    As String * 1
    TIPDOCIDE   As String * 2
    NRODOCIDE   As String * 15
    NOMBENEF    As String * 60
    MONESUELD   As String * 2
    IMPSUELD    As String * 15
    FILLER      As String * 6
    NROCEL      As String * 40  'IQ PROJECT
    CORREO      As String * 140 'IQ PROJECT
End Type

Type RegDetallePRV
    CODCTRL     As String * 2
    CODBENEF    As String * 20
    TIPOPERA    As String * 1
    NRODOCUM    As String * 20
    FVCTODOC    As String * 8
    MONOPERA    As String * 2
    IMPOPERA    As String * 15
    INDBANCO    As String * 1
    TIPABONO    As String * 2
    PRODUCTO    As String * 3
    moneda      As String * 2
    OFICINA     As String * 3
    NROCTA      As String * 20
    TIPBENEF    As String * 1
    TIPDOCIDE   As String * 2
    NRODOCIDE   As String * 15
    NOMBENEF    As String * 60
    RETOPERA    As String * 15
    NROCEL      As String * 40  'IQ PROJECT
    CORREO      As String * 140 'IQ PROJECT
    FILLER      As String * 8
End Type

Type RegDetalleVAR
    CODCTRL     As String * 2
    CODBENEF    As String * 20
    TIPOPERA    As String * 1
    NRODOCUM    As String * 20
    FVCTODOC    As String * 8
    MONOPERA    As String * 2
    IMPOPERA    As String * 15
    INDBANCO    As String * 1
    TIPABONO    As String * 2
    PRODUCTO    As String * 3
    moneda      As String * 2
    OFICINA     As String * 3
    NROCTA      As String * 20
    TIPBENEF    As String * 1
    TIPDOCIDE   As String * 2
    NRODOCIDE   As String * 15
    NOMBENEF    As String * 60
    NROCEL      As String * 40  'IQ PROJECT
    CORREO      As String * 140 'IQ PROJECT
    FILLER      As String * 23
End Type

Public RegDetREM            As RegDetalleREM
Public gsNo_archivo         As String
Public gsNo_archivo_tmp     As String
Public gsErrorRestrictivo   As Boolean
Public gsHojaDetalle        As String
Public RegDetPRV            As RegDetallePRV
Public lsNomArchCol         As String
Public liNumRegTot          As Integer
Public lsArchTemp           As String
Public gsRubro              As String
Public RegDetVAR            As RegDetalleVAR
Public gsNomArchSave        As String
Public totalReg             As String
Public totalSoles           As String
Public totalDolares         As String
Attribute VB_Name = "EsteLibro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()

    

On Error GoTo errorInicio
    Dim valormacro As Integer
    Dim Nombre_Hoja As String
    
    gsHojaDetalle = "Detalle Remuneraciones"
    Nombre_Hoja = gsHojaDetalle
    Worksheets(1).rbtn1.Value = True
    Worksheets(1).Name = Nombre_Hoja

    Worksheets(1).txtTotalRegistros = 0
    Worksheets(1).txtTotalSol = 0
    Worksheets(1).txtTotalDol = 0
    Worksheets(1).Select
        
    Call pInicializarColumnas(valormacro)
        
    Call pFormatearColumnas
    
    Worksheets(1).Range("C8").Select
errorInicio:
    
    Call pInicializarColumnas(valormacro)
    
    editar_caratula.Show
    
    
End Sub

Attribute VB_Name = "Funciones"
Public Sub pInicializarColumnas(ByVal argTipoMacro As Integer)
    '*************************************
    ' Finalidad: Inicializar las columnas
    '*************************************
    Worksheets(1).Select
    
    Worksheets(1).Unprotect gsPassword
    
    If argTipoMacro = 2 Or argTipoMacro = 3 Then
    
        'Tipo de Documento de Identidad
            Range("D7").Select
            Selection.ClearComments
            Range("D7").AddComment
            Range("D7").Comment.Visible = False
            Range("D7").Comment.Text Text:="Doc. Identidad:" & Chr(10) & "01: DNI" & Chr(10) & _
            "02: RUC" & Chr(10) & "03: Carn|fffd| de Extranjer|fffd|a" & Chr(10) & "05: Pasaporte"
            Range("D8:D20000").Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                xlBetween, Formula1:="01,02,03,05"
            End With
        
        'Tipo de Cuenta
            Range("M7").Select
            Selection.ClearComments
            Range("M7").AddComment
            Range("M7").Comment.Visible = False
            Range("M7").Comment.Text Text:="Tipo de Cuenta:" & Chr(10) & "001: Cuenta corriente" & Chr(10) & "002: Cuenta de ahorros"
            Range("M8:M20000").Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                xlBetween, Formula1:="001,002"
                .InputTitle = "Tipo de Cuenta:"
                .InputMessage = "001: Cuenta corriente" & Chr(10) & "002: Cuenta de ahorros"
            End With
        
        'Tipo de Abono
            If argTipoMacro = 2 Then    'proveedores
                Range("L7").Select
                Selection.ClearComments
                Range("L7").AddComment
                Range("L7").Comment.Visible = False
                Range("L7").Comment.Text Text:="Tipo de Abono:" & Chr(10) & "09: Abono en cuenta" & Chr(10) & _
                "11: Cheque de gerencia" & Chr(10) & "99: Interbancario"
                Range("L8:L20000").Select
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="09,11,99"
                    .InputTitle = "Tipo de Abono:"
                    .InputMessage = "09: Abono en cuenta" & Chr(10) & "11: Cheque de gerencia" & Chr(10) & "99: Interbancario"
                End With
                
                Range("I7").Select
                Selection.ClearComments
                Range("I7").AddComment
                Range("I7").Comment.Visible = False
                Range("I7").Comment.Text Text:="Documento de Pago:" & Chr(10) & "F: Factura proveedor" & Chr(10) & _
                "C: Nota de cr|fffd|dito empresa" & Chr(10) & "D: Nota de d|fffd|bito empresa"
                Range("I8:I20000").Select
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="F,C,D"
                    .InputTitle = "Documento de Pago:"
                    .InputMessage = "F: Factura proveedor" & Chr(10) & "C: Nota de cr|fffd|dito empresa" & Chr(10) & "D: Nota de d|fffd|bito empresa"
                End With
                
            ElseIf argTipoMacro = 3 Then    'varios
                Range("L7").Select
                Selection.ClearComments
                Range("L7").AddComment
                Range("L7").Comment.Visible = False
                Range("L7").Comment.Text Text:="Tipo de Abono:" & Chr(10) & "09: Abono en cuenta" & Chr(10) _
                & "11: Cheque de gerencia" & Chr(10) & "00: Orden de Pago"
                Range("L8:L20000").Select
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="09,11,00"
                    .InputTitle = "Tipo de Abono:"
                    .InputMessage = "09: Abono en cuenta" & Chr(10) & "11: Cheque de gerencia" & Chr(10) & "00: Orden de Pago"
                End With
                
                Range("I7").Select
                Selection.ClearComments
                Range("I7").AddComment
                Range("I7").Comment.Visible = False
                Range("I7").Comment.Text Text:="Documento de Pago:" & Chr(10) & "F: Factura proveedor"
                Range("I8:I20000").Select
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="F"
                    .InputTitle = "Documento de Pago:"
                    .InputMessage = "F: Factura proveedor"
                End With
                
            End If
  
    Else
        Range("D7").Select
        Selection.ClearComments
        Range("D7").AddComment
        Range("D7").Comment.Visible = False
        Range("D7").Comment.Text Text:="Documento de Identidad:" & Chr(10) & "01: DNI" & Chr(10) _
        & "03: Carn|fffd| de Extranjer|fffd|a" & Chr(10) & "05: Pasaporte"
    
       'Tipo de Documento de Identidad
        Range("D8:D20000").Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="01,03,05"
        End With
        

        'Tipo de Abono
        If argTipoMacro = 0 Then    'Remuneraciones
        
             Range("L7").Select
             Selection.ClearComments
             Range("L7").AddComment
             Range("L7").Comment.Visible = False
             Range("L7").Comment.Text Text:="Tipo de Abono:" & Chr(10) & "09: Abono en cuenta" _
             & Chr(10) & "99: Interbancario" & Chr(10) & "00: Orden de Pago"
             Range("L8:L20000").Select
             With Selection.Validation
                 .Delete
                 .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                 xlBetween, Formula1:="09,99,00"
                 .InputTitle = "Tipo de Abono:"
                 .InputMessage = "09: Abono en cuenta" & Chr(10) & "99: Interbancario" & Chr(10) & "00: Orden de Pago"
             End With
             
            'Tipo de Cuenta
            Range("M7").Select
            Selection.ClearComments
            Range("M7").AddComment
            Range("M7").Comment.Visible = False
            Range("M7").Comment.Text Text:="Tipo de Cuenta:" & Chr(10) & "002: Cuenta de ahorros"
            Range("M8:M20000").Select
             With Selection.Validation
                 .Delete
                 .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                 xlBetween, Formula1:="002"
                 .InputTitle = "Tipo de Cuenta:"
                 .InputMessage = "002: Cuenta de ahorros"
             End With
        
        ElseIf argTipoMacro = 1 Then    'CTS
        
            Range("L7").Select
            Selection.ClearComments
            Range("L7").AddComment
            Range("L7").Comment.Visible = False
            Range("L7").Comment.Text Text:="Tipo de Abono:" & Chr(10) & "09: Abono en cuenta" & Chr(10) & "99: Interbancario"
            Range("L8:L20000").Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                xlBetween, Formula1:="09,99"
                .InputTitle = "Tipo de Abono:"
                .InputMessage = "09: Abono en cuenta" & Chr(10) & "99: Interbancario"
            End With
            
            'Tipo de Cuenta
            Range("M7").Select
            Selection.ClearComments
            Range("M7").AddComment
            Range("M7").Comment.Visible = False
            Range("M7").Comment.Text Text:="Tipo de Cuenta:" & Chr(10) & "007: Cuenta CTS"
            Range("M8:M20000").Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                xlBetween, Formula1:="007"
                .InputTitle = "Tipo de Cuenta:"
                .InputMessage = "007: Cuenta CTS"
            End With
        
        End If
    End If
    
        With Selection
            .HorizontalAlignment = xlRight
        End With
        
        Range("N8:N20000").Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="01,10"
            .InputTitle = "Moneda de Cuenta:"
            .InputMessage = "01: Soles" & Chr(10) & "10: D|fffd|lares"
        End With
        
        Range("P8:P20000").Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="01,10"
            .InputTitle = "Moneda de Abono:"
            .InputMessage = "01: Soles" & Chr(10) & "10: D|fffd|lares"
        End With
        
        Range("R8:R20000").Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="01,10"
            .InputTitle = "Moneda de Intangible" & Chr(10) & " CTS:"
            .InputMessage = Chr(10) & "01: Soles" & Chr(10) & "10: D|fffd|lares"
        End With
        
        Range("O8:O20000").Select
            Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=O8:O20000=""00"""
            Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
            With Selection.FormatConditions(1).Interior
                .Pattern = xlLightUp
                .PatternColorIndex = xlAutomatic
                .ColorIndex = xlAutomatic
            End With
            Selection.FormatConditions(1).StopIfTrue = False
                   
    Columns("A:A").Select
       Selection.ColumnWidth = 1.5
       
    Columns("B:B").Select
       Selection.ColumnWidth = 0
       
    Columns("C:C").Select
       Selection.ColumnWidth = 20
       
    Columns("D:D").Select
       Selection.ColumnWidth = 10
       
    Columns("E:E").Select
       Selection.ColumnWidth = 15
       
    Columns("F:F").Select
       Selection.ColumnWidth = 30
   
   Columns("G:G").Select
       Selection.ColumnWidth = 30
       
   Columns("H:H").Select
        Selection.ColumnWidth = 25
        
   If argTipoMacro = 2 Or argTipoMacro = 3 Then
         If argTipoMacro = 2 Then
          Range("C7").Select
              ActiveCell.FormulaR1C1 = "C|fffd|digo proveedor*"
         Else
          Range("C7").Select
              ActiveCell.FormulaR1C1 = "C|fffd|digo beneficiario*"
         End If
         Columns("I:I").Select
            Selection.ColumnWidth = 10
        
         Columns("J:J").Select
            Selection.ColumnWidth = 20
         
          Columns("k:k").Select
            Selection.ColumnWidth = 20
        
    Else
        Range("C7").Select
            ActiveCell.FormulaR1C1 = "C|fffd|digo trabajador*"
            
        Columns("I:I").Select
           Selection.ColumnWidth = 0
    
        Columns("J:J").Select
           Selection.ColumnWidth = 0
        
         Columns("k:k").Select
           Selection.ColumnWidth = 0
     End If
     
    Columns("L:L").Select
       Selection.ColumnWidth = 10
       
    Columns("M:M").Select
       Selection.ColumnWidth = 10    'IQPROJECT
       
    Columns("N:N").Select
       Selection.ColumnWidth = 10
       
    Columns("O:O").Select
       Selection.ColumnWidth = 20    'IQPROJECT
       
    Columns("P:P").Select
       Selection.ColumnWidth = 10
       
    Columns("Q:Q").Select
       Selection.ColumnWidth = 15
       
    If argTipoMacro = 1 Then
        Columns("R:R").Select
           Selection.ColumnWidth = 10
        Columns("S:S").Select
           Selection.ColumnWidth = 15
    Else
        Columns("R:R").Select
            Selection.ColumnWidth = 0    'IQPROJECT
        Columns("S:S").Select
           Selection.ColumnWidth = 0
    End If
           
       
    Columns("T:T").Select
       Selection.ColumnWidth = 15
       
    Columns("U:U").EntireColumn.AutoFit
 
    Range("C2").Select
    
    
    ActiveWindow.Zoom = 100
       
    Sheets(1).Protect gsPassword
End Sub

Public Sub pFormatearColumnas()
    '*************************************************************************************
    ' Finalidad: Formatear la celda a texto para que se pueda digitar datos numericos
    '*************************************************************************************
    Sheets(1).Unprotect gsPassword
    
    Sheets(1).Select
    
        Range("C8").Select
    
    Range("CodPropio").Select
        Selection.NumberFormat = "@"  'beneficiario
    
    Range("MonAbono").Select
        Selection.NumberFormat = "00" 'tipo documento identi
    
    Range("ImpAbono").Select
        Selection.NumberFormat = "@"    ' n|fffd|mero de doc ident
    
    Range("MonSueldo").Select
        Selection.NumberFormat = "@"  'NomBeneficiario
    
    Range("SumaSueldo").Select
        Selection.NumberFormat = "0"  'correo
    
    Range("IndBanco").Select
        Selection.NumberFormat = "@"    'celular
    
    Range("TipoAbono").Select
        Selection.NumberFormat = "00"
    
    Range("TipoCuenta").Select
        Selection.NumberFormat = "@"
    
    Range("MonCuenta").Select
        Selection.NumberFormat = "@"
    
    Range("Tienda").Select
        Selection.NumberFormat = "00"   'tipo abono
    
    Range("NumCuenta").Select
        Selection.NumberFormat = "000"  'tipo de cuenta

    Range("TipoPersona").Select
        Selection.NumberFormat = "00"   'moneda de cuenta
    
    Range("TipoDoc").Select
        Selection.NumberFormat = "@"    'n|fffd|mero de cuenta
    
    Range("NroDoc").Select
        Selection.NumberFormat = "00"   'moneda abono
    
    Range("NoCliente").Select
        Selection.NumberFormat = "#,##0.00" 'monto de abono

    Range("DesError").Select
        Selection.NumberFormat = "00"   'MonedaIntangible
        
    Range("MonIntangible").Select
        Selection.NumberFormat = "#,##0.00"   'monto intangible
    
    Range("C8").Select
    Sheets(1).Protect gsPassword
End Sub

Public Function fContarRegistrosREM(ByVal argHoja As String, ByVal argRow As Integer, ByVal argCol As Integer) As Integer
    '****************************************
    ' Finalidad: Cuenta el Total de Registros
    '****************************************
    Dim intCnt As Integer
    
    intCnt = 0
    While Trim(Worksheets(argHoja).Cells(argRow + intCnt, argCol).Value) <> ""
        intCnt = intCnt + 1
    Wend
    
    fContarRegistrosREM = intCnt
    
End Function

Public Function FormatCerosREM(ByVal strField As Variant, ByVal Length As Long) As String
    '***************************************************
    ' Finalidad: Rellena n|fffd|mero con ceros a la izquierda
    '***************************************************
    If IsNumeric(strField) Then
        If Len(Trim(strField)) <= Length Then
           FormatCerosREM = String(Length - Len(Trim(strField)), "0") & Trim(strField)
        Else
            FormatCerosREM = strField
        End If
    Else
        FormatCerosREM = strField
    End If
End Function

Public Function PadL(lsCad As String, liNum As Byte, lsChar As String) As String
    If Len(lsCad) < liNum Then
        PadL = String(liNum - Len(lsCad), lsChar) & lsCad
    Else
        PadL = lsCad
    End If
End Function

Public Function PadR(lsCad As String, liNum As Byte, lsChar As String) As String
    If Len(lsCad) < liNum Then
        PadR = lsCad & String(liNum - Len(lsCad), lsChar)
    Else
        PadR = lsCad
    End If
End Function

Public Function StrTran(lsCad As String, lsIn As String, lsOut As String) As String
    Dim i As Byte
    Dim lsRes As String
    For i = 1 To Len(lsCad)
        lsRes = lsRes & IIf(Mid(lsCad, i, 1) = lsIn, lsOut, Mid(lsCad, i, 1))
    Next i
    StrTran = lsRes
End Function

Public Function fConvNomBenefREM(lsTipPer As String, lsNombre As String, lbComas As Boolean) As String
    '**********************************************************************************
    ' Finalidad: Devuelve el nombre formateado para mostrarlo dependiento del Tipo de Persona
    '**********************************************************************************
    Dim lsCadena     As String * 60
    Dim lsCadena20   As String * 20
    Dim lsCadena40   As String * 40
    Dim i            As Integer
    
    lsCadena = lsNombre
    i = 0
    If Trim(lsCadena) = "" Then
        fConvNomBenefREM = Trim(lsCadena)
        Exit Function
    End If
    If lbComas Then
        Select Case lsTipPer
            Case "C"    'Juridica
                fConvNomBenefREM = Trim(lsCadena)
            Case "P"    'Natural
                fConvNomBenefREM = Trim(Mid(lsCadena, 1, 20)) & "; " & Trim(Mid(lsCadena, 21, 20)) & _
                    IIf(Trim(Mid(lsCadena, 41, 20)) <> "", "; " & Trim(Mid(lsCadena, 41, 20)), "")
            Case Else   'Cualquier valor
                fConvNomBenefREM = Trim(lsCadena)
        End Select
    Else
        Select Case lsTipPer
            Case "C"    'Juridica
                fConvNomBenefREM = fReemplaza(Trim(lsCadena), ";", " ")
            Case "P"    'Natural
                Do While InStr(1, lsCadena, ";") And i < 3
                    i = i + 1
                    If i = 1 Then
                        lsCadena20 = Trim(Mid(lsCadena, 1, InStr(1, lsCadena, ";") - 1))
                        lsCadena = lsCadena20 & Trim(Mid(lsCadena, InStr(1, lsCadena, ";") + 1))
                    End If
                    If i = 2 Then
                        lsCadena40 = Trim(Mid(lsCadena, 1, InStr(1, lsCadena, ";") - 1))
                        lsCadena = lsCadena40 & Trim(Mid(lsCadena, InStr(1, lsCadena, ";") + 1))
                    End If
                Loop
            
                fConvNomBenefREM = fReemplaza(lsCadena, ";", " ")

            Case Else   'Cualquier valor
                fConvNomBenefREM = Trim(lsCadena)
        End Select
    End If
End Function

Public Function fReemplaza(lsCadena As String, lsComparaCon As String, lsReemplazarCon As String) As String
    Dim lsResultado As String
    lsResultado = ""
    If InStr(1, lsCadena, lsComparaCon) > 0 Then
        Do While InStr(1, lsCadena, lsComparaCon) > 0
           If InStr(1, lsCadena, lsComparaCon) > 1 Then
              lsResultado = lsResultado & Mid(lsCadena, 1, InStr(1, lsCadena, lsComparaCon) - 1) & _
                      lsReemplazarCon
           Else
              If InStr(1, lsCadena, lsComparaCon) > 0 Then
                  lsResultado = lsResultado & lsReemplazarCon
              End If
           End If
           lsCadena = Mid(lsCadena, InStr(1, lsCadena, lsComparaCon) + 1)
        Loop
        fReemplaza = lsResultado & lsCadena
    Else
        fReemplaza = lsCadena
    End If
End Function

Public Function fValidaCaracteres(tipo As Integer, lsCadena As String) As Boolean
fValidaCaracteres = False
If tipo = 1 Then
If InStr(1, lsCadena, "#") > 0 Or InStr(1, lsCadena, "!") > 0 Or InStr(1, lsCadena, "|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "$") > 0 Or _
    InStr(1, lsCadena, "%") > 0 Or InStr(1, lsCadena, "&") > 0 Or InStr(1, lsCadena, "/") > 0 Or _
    InStr(1, lsCadena, "'") > 0 Or InStr(1, lsCadena, "?") > 0 Or InStr(1, lsCadena, "(") > 0 Or _
    InStr(1, lsCadena, "\") > 0 Or InStr(1, lsCadena, "=") > 0 Or InStr(1, lsCadena, ")") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "}") > 0 Or _
    InStr(1, lsCadena, "^") > 0 Or InStr(1, lsCadena, "`") > 0 Or InStr(1, lsCadena, "{") > 0 Or _
    InStr(1, lsCadena, ">") > 0 Or InStr(1, lsCadena, "[") > 0 Or InStr(1, lsCadena, "]") > 0 Or _
    InStr(1, lsCadena, "<") > 0 Or InStr(1, lsCadena, ";") > 0 Or InStr(1, lsCadena, ",") > 0 Or _
    InStr(1, lsCadena, ".") > 0 Or InStr(1, lsCadena, ":") > 0 Or InStr(1, lsCadena, "-") > 0 Or _
    InStr(1, lsCadena, "_") > 0 Or InStr(1, lsCadena, "@") > 0 Then
    Exit Function
End If
End If
If tipo = 2 Then
If InStr(1, lsCadena, "#") > 0 Or InStr(1, lsCadena, "!") > 0 Or InStr(1, lsCadena, "|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "$") > 0 Or _
    InStr(1, lsCadena, "%") > 0 Or InStr(1, lsCadena, "&") > 0 Or InStr(1, lsCadena, "/") > 0 Or _
    InStr(1, lsCadena, "'") > 0 Or InStr(1, lsCadena, "?") > 0 Or InStr(1, lsCadena, "(") > 0 Or _
    InStr(1, lsCadena, "\") > 0 Or InStr(1, lsCadena, "=") > 0 Or InStr(1, lsCadena, ")") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "}") > 0 Or _
    InStr(1, lsCadena, "^") > 0 Or InStr(1, lsCadena, "`") > 0 Or InStr(1, lsCadena, "{") > 0 Or _
    InStr(1, lsCadena, ">") > 0 Or InStr(1, lsCadena, "[") > 0 Or InStr(1, lsCadena, "]") > 0 Or _
    InStr(1, lsCadena, "<") > 0 Or InStr(1, lsCadena, ",") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, ".") > 0 Or InStr(1, lsCadena, ":") > 0 Or InStr(1, lsCadena, "-") > 0 Or _
    InStr(1, lsCadena, "_") > 0 Or InStr(1, lsCadena, "@") > 0 Or InStr(1, lsCadena, ",") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") Then
    Exit Function
End If
End If
If tipo = 3 Then
If InStr(1, lsCadena, "#") > 0 Or InStr(1, lsCadena, "!") > 0 Or InStr(1, lsCadena, "|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "$") > 0 Or _
    InStr(1, lsCadena, "%") > 0 Or InStr(1, lsCadena, "&") > 0 Or InStr(1, lsCadena, "/") > 0 Or _
    InStr(1, lsCadena, "'") > 0 Or InStr(1, lsCadena, "?") > 0 Or InStr(1, lsCadena, "(") > 0 Or _
    InStr(1, lsCadena, "\") > 0 Or InStr(1, lsCadena, "=") > 0 Or InStr(1, lsCadena, ")") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "}") > 0 Or _
    InStr(1, lsCadena, "^") > 0 Or InStr(1, lsCadena, "`") > 0 Or InStr(1, lsCadena, "{") > 0 Or _
    InStr(1, lsCadena, ">") > 0 Or InStr(1, lsCadena, "[") > 0 Or InStr(1, lsCadena, "]") > 0 Or _
    InStr(1, lsCadena, "<") > 0 Or InStr(1, lsCadena, ",") > 0 Or _
    InStr(1, lsCadena, ".") > 0 Or InStr(1, lsCadena, ":") > 0 Or InStr(1, lsCadena, "-") > 0 Or _
    InStr(1, lsCadena, "_") > 0 Or InStr(1, lsCadena, "@") > 0 Or InStr(1, lsCadena, ",") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or _
    InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") > 0 Or InStr(1, lsCadena, "|fffd|") Then
    Exit Function
End If
End If
fValidaCaracteres = True
End Function

Function validaEmail(email) As Boolean
 
    Dim RegEx As Object
 
    Set RegEx = CreateObject("vbscript.regexp")
    With RegEx
        .Global = True
        .Pattern = "^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$"
    End With
 
    validaEmail = RegEx.Test(email)
 
    Set RegEx = Nothing
End Function

Function cambio(tipoMac As String) As Boolean
    Dim valormacro As Integer
    Dim Nombre_Hoja As String
    If tipoMac = "04" Then
        Worksheets(1).rbtn1 = True
    ElseIf tipoMac = "06" Then
        Worksheets(1).rbtn2 = True
    ElseIf tipoMac = "03" Then
        Worksheets(1).rbtn3 = True
    ElseIf tipoMac = "05" Then
        Worksheets(1).rbtn4 = True
    Else
        cambio = False
    End If

End Function
Public Sub pBorrarTodo()
    Worksheets(1).Unprotect gsPassword
     Range("B8:U20000").Select
        Selection.ClearContents
    Range("C8").Select
    Worksheets(1).Protect gsPassword
End Sub

Public Sub FormateaRegTexto2(raw As Integer, tipo As Integer, valormacro As Integer)
     If tipo = 1 Then
            Range("N" & raw).Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateInputOnly, AlertStyle:=xlValidAlertStop, Operator _
        :=xlBetween
            End With
           Range("M" & raw).Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateInputOnly, AlertStyle:=xlValidAlertStop, Operator _
        :=xlBetween
            End With
    Else
            Range("N" & raw).Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                xlBetween, Formula1:="01,10"
                .InputTitle = "Moneda de Cuenta:"
                .InputMessage = "01: Soles" & Chr(10) & "10: D|fffd|lares"
            End With
            If valormacro = 0 Then
                Range("M" & raw).Select
                 With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="002"
                    .InputTitle = "Tipo de Cuenta:"
                    .InputMessage = "002: Cuenta de ahorros"
                End With
            ElseIf valormacro = 1 Then
                Range("M" & raw).Select
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="007"
                    .InputTitle = "Tipo de Cuenta:"
                    .InputMessage = "007: Cuenta CTS"
                End With
            ElseIf valormacro = 2 Or valormacro = 3 Then
                Range("M" & raw).Select
                       With Selection.Validation
                            .Delete
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                            xlBetween, Formula1:="001,002"
                            .InputTitle = "Tipo de Cuenta:"
                            .InputMessage = "001: Cuenta corriente" & Chr(10) & "002: Cuenta de ahorros"
                        End With
            End If
    End If
    
End Sub
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 3, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 2, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Dim ruta As String
    'Cambiar la ruta a la que se prefiera
    ruta = "\\Ibdfs\dfs\cpd\Pago CTS IB"
    'ruta = ActiveWorkbook.Path
    guardarhoja ruta


''Dim ruta As String
'Dim nombre As String
''path = "\\Grupoib.local\dfs3\OPT_PROYGTP\Change The Bank\GTP Proy 2018\1. Proy. en Proceso\1. Mayor Plazo\MAP_027 Abonos CTS\6. An|fffd|lisis y Dise|fffd|o\Fomato cts\pruebas_cts"
''ruta = "C:\Users\b31821\CTS\CTS"
'nombre = Range("J2").Value
'
''ActiveWorkbook.SaveAs filename:=ruta & " " & nombre
'
'
'
'
'
''& ".xls", FileFormat:= _
'xlNormal , Password:="", WriteResPassword:="", ReadOnlyRecommended:=False _
', CreateBackup:=False
'
'
'
'Sheets("Caratula Planilla CTS").Select
'Sheets("Caratula Planilla CTS").Copy
'ActiveWorkbook.SaveAs Filename:="C:\Users\b31821\CTS\CTS" & " " & nombre, FileFormat:=xlNormal, Password:="", writerespassword:="", ReadOnlyRecommended:=False, CreateBackup:=False
'ActiveWorkbook.Close
'
'Sheets("Caratula Planilla CTS").Range("a2").Value = ""
'Sheets("Caratula Planilla CTS").Range("B2").Value = ""
'Sheets("Caratula Planilla CTS").Range("C2").Value = ""
'Sheets("Caratula Planilla CTS").Range("D2").Value = ""
'Sheets("Caratula Planilla CTS").Range("E2").Value = ""
'Sheets("Caratula Planilla CTS").Range("F2").Value = ""
'
'
''Range("J2").Select
''Windows("Libro").Activate
''Range("j2").Select



End Sub

Private Sub CommandButton2_Click()
'Guardar libro completo'
    Dim ruta As String
    ruta = "\\ibdfs\dfs\CPD\CAMPA|fffd|A CTS MAYO 2019 DIGITAL\FORMATO PAGO ORIGINAL"
    guardarLibro ruta
End Sub


Sub guardarhoja(ByVal ruta As String)
    Dim FName           As String
    Dim NewBook         As Workbook
 
    Dim ws As Worksheet
    'FPath = ActiveWorkbook.Path
    
    
        arrFecha = Split(Date, "/")
    aaaa = arrFecha(2)
    mm = arrFecha(1)
    dd = arrFecha(0)
    
    If Len(dd) < 2 Then
        dd = "0" & dd
    End If
    
    If Len(mm) < 2 Then
        mm = "0" & mm
    End If
    
    fecha = aaaa & mm & dd
    
    arrHora = Split(Now, " ")
    hora = arrHora(1)
    
    
    
    Dim dummy() As String
    dummy = Split(hora, ":")
    Dim hh As String
    hh = dummy(0)
    
    If pm = "p.m." Then
        hh = hh + 12
    End If
    
    hora = hh & dummy(1) & dummy(2)
    
    FName = Range("J2") & "_" & fecha & "_" & hora & ".xlsx"
 
    Set NewBook = Workbooks.Add
    Application.CopyObjectsWithCells = False
 
    ThisWorkbook.Sheets("Caratula Planilla CTS").Copy Before:=NewBook.Sheets(1)
    Set ws = NewBook.Sheets(1)
    ws.Unprotect gsPassword
    ws.Range("H2").Value = ws.Range("H2").Value
    ws.Range("I2").Value = ws.Range("I2").Value
    ws.Protect gsPassword
    

    Application.DisplayAlerts = False
 
    If Dir(ruta & "\" & FName) <> "" Then
        MsgBox "File " & ruta & "\" & FName & " already exists"
    Else
        NewBook.SaveAs Filename:=ruta & "\" & FName
    End If
    Application.DisplayAlerts = True
End Sub


Sub guardarLibro(ByVal ruta As String)
    Dim nombre As String
    '29/10/2019'
    'Colocarle fecha y hora al nombre del xlsx'
        arrFecha = Split(Date, "/")
    aaaa = arrFecha(2)
    mm = arrFecha(1)
    dd = arrFecha(0)
    
    If Len(dd) < 2 Then
        dd = "0" & dd
    End If
    
    If Len(mm) < 2 Then
        mm = "0" & mm
    End If
    
    fecha = aaaa & mm & dd
    
    arrHora = Split(Now, " ")
    hora = arrHora(1)
    
    Dim pm As String
    
    
    Dim dummy() As String
    dummy = Split(hora, ":")
    Dim hh As String
    hh = dummy(0)
    
    If pm = "p.m." Then
        hh = hh + 12
    End If
    
    hora = hh & dummy(1) & dummy(2)
    
    
    nombre = Range("J2") & "_" & fecha & "_" & hora & ".xls"
    Application.CopyObjectsWithCells = False
    Application.DisplayAlerts = False
    ActiveWorkbook.SaveCopyAs ruta & "\" & nombre & "m"
    Application.DisplayAlerts = True
    
    'ActiveWorkbook.Sheets.Copy
End Sub



Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cboTipoMacroPRV, 15, 0, MSForms, ComboBox"
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cboTipoMacroVAR, 16, 0, MSForms, ComboBox"

Attribute VB_Name = "Hoja5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "M|fffd|dulo1"
Sub CuadroTexto7_Haga_clic_en()
    Abrir_cliente_correo
End Sub

Sub Abrir_cliente_correo()

  Dim ruc As String, razonsocial As String, montoSoles As String, montoDolares As String
  ruc = Sheets("Caratula Planilla CTS").Range("B2").Value
  razonsocial = Sheets("Caratula Planilla CTS").Range("A2").Value
  montoSoles = Sheets("Caratula Planilla CTS").Range("H2").Value
  montoDolares = Sheets("Caratula Planilla CTS").Range("I2").Value
  
  Dim Direccion As String, Asunto As String, Mensaje As String
  Direccion = "pagoctsinterbank@intercorp.com.pe"
  Asunto = ruc & " - " & razonsocial & " - PEN " & montoSoles & " - USD " & montoDolares
  ActiveWorkbook.FollowHyperlink _
    "mailto:" & Direccion & "?subject=" & Asunto & "&body=" & Mensaje
End Sub
Attribute VB_Name = "M|fffd|dulo4"

Sub call2_form()
editar_caratula.Show
End Sub
Attribute VB_Name = "REM_ManejoIO"
Public Function pImportarArchivo() As Boolean

    Dim RutaInput As Variant
    Dim strRuta As String
    Dim intCnt As Integer
    Dim strData As String

    pImportarArchivo = False
    Worksheets(gsHojaTemporal).UsedRange.ClearContents
    RutaInput = Application.GetOpenFilename("Archivos de texto (*.txt), *.txt", 1, "Seleccionar archivo de pagos", False)
    If RutaInput <> False Then
        pBorrarTodo
        
        strRuta = CStr(RutaInput)
        gsNo_archivo_tmp = Dir(RutaInput)
        
        Workbooks.Open Filename:=strRuta, Origin:=xlWindows
        
        ActiveSheet.Name = gsHojaTemporal
        Worksheets(gsHojaTemporal).UsedRange.Copy _
            Destination:=Workbooks(gsNo_archivo).Worksheets(gsHojaTemporal).Range("a1")
        Workbooks(gsNo_archivo_tmp).Close SaveChanges:=False
        Windows(gsNo_archivo).Activate
        
        Sheets(1).Select
        giTotRgst = fContarRegistrosREM(gsHojaTemporal, 1, 1)
        If giTotRgst = 0 Then
            MsgBox "El archivo est|fffd| vac|fffd|o, verifique y reintente.", vbCritical, "Interbank"
        Else
            intCnt = 0
            intCnTemp = 0
            While Trim(Worksheets(gsHojaTemporal).Cells(intCnTemp + 1, 1).Value) <> ""
                strData = Worksheets(gsHojaTemporal).Cells(intCnTemp + 1, 1)
                If Mid(strData, 1, 2) = "01" Then
                  intCnTemp = intCnTemp + 1
                  tipoMacro = Mid(strData, 3, 2)
                  strData = Worksheets(gsHojaTemporal).Cells(intCnTemp + 1, 1)
                  cambio (tipoMacro)
                End If
                
                Range("C" & intCnt + 8) = Mid(strData, 3, 20)
                Range("P" & intCnt + 8) = Mid(strData, 52, 2)
                
                If IsNumeric(Mid(strData, 54, 15)) Then
                    Range("Q" & intCnt + 8) = Mid(strData, 54, 15) / 100
                Else
                    Range("Q" & intCnt + 8) = Mid(strData, 54, 15)
                End If
                
                Range("I" & intCnt + 8) = Mid(strData, 23, 1)
                Range("J" & intCnt + 8) = Mid(strData, 24, 20)
                Range("K" & intCnt + 8) = Mid(strData, 44, 8)
                Range("L" & intCnt + 8) = Mid(strData, 70, 2)
                If Mid(strData, 70, 2) = "09" Then
                    Range("M" & intCnt + 8) = Mid(strData, 72, 3)
                    Range("N" & intCnt + 8) = Mid(strData, 75, 2)
                    Range("O" & intCnt + 8) = Mid(strData, 77, 3) & Mid(strData, 80, 10)
                ElseIf Mid(strData, 70, 2) = "99" Then
                    Range("M" & intCnt + 8) = ""
                    Range("N" & intCnt + 8) = ""
                    Range("O" & intCnt + 8) = Mid(strData, 80, 20)
                Else
                    Range("M" & intCnt + 8) = ""
                    Range("N" & intCnt + 8) = ""
                    Range("O" & intCnt + 8) = ""
                End If
                Range("D" & intCnt + 8) = Mid(strData, 101, 2)
                Range("E" & intCnt + 8) = Mid(strData, 103, 15)
                If Mid(strData, 101, 2) = "02" And Mid(strData, 103, 1) = "2" Then
                    Range("F" & intCnt + 8) = fConvNomBenefPRV("C", Mid(strData, 118, 60), True)
                Else
                    Range("F" & intCnt + 8) = fConvNomBenefPRV("P", Mid(strData, 118, 60), True)
                End If
                Range("G" & intCnt + 8) = Trim(Mid(strData, 241, 140)) 'IQ PROJECT
                Range("H" & intCnt + 8) = Trim(Mid(strData, 201, 40)) 'IQ PROJECT
                Range("R" & intCnt + 8) = Mid(strData, 178, 2)
                
                If IsNumeric(Mid(strData, 180, 15)) Then
                    Range("S" & intCnt + 8) = Mid(strData, 180, 15) / 100
                Else
                    Range("S" & intCnt + 8) = 0
                End If
                intCnt = intCnt + 1
                intCnTemp = intCnTemp + 1
            Wend
            Call pFormatearColumnas
        End If
        pImportarArchivo = True
    Else
        MsgBox "No se seleccion|fffd| un archivo a importar", vbCritical, "Interbank"
    End If
     
End Function

Public Function fExportaTextoREM(ByVal argTipoMacro As Integer, ByVal icontador As Integer, ByVal dTotalSoles As Double, ByVal dTotalDolares As Double) As Boolean
    '************************************************
    'Finalidad: Exporta solicitud a archivo de Texto
    '************************************************
    Dim strData As String
    Dim intCnt As Integer
    Dim tipMacro As String
    If argTipoMacro = "0" Then
        tipMacro = "04"
    ElseIf argTipoMacro = "1" Then
        tipMacro = "06"
    ElseIf argTipoMacro = "2" Then
        tipMacro = "03"
    ElseIf argTipoMacro = "3" Then
        tipMacro = "05"
    End If
    
On Error GoTo Error
    
    fExportaTextoREM = False
    Sheets(1).Select
    intCnt = 0
    
    gsNomArchSave = ""
    
    
    'RutaOutput = Application.GetSaveAsFilename(gsNomArchSave, "Archivos de texto (*.txt), *.txt", 1, "Guardando archivo de pagos")
    'Modificado por MD 11/04/2019 09:04'
    'Datos para el nombre del txt'
    Dim ruc As String, razonsocial As String, montoSoles As String, montoDolares As String
    ruc = Sheets("Caratula Planilla CTS").Range("B2").Value
    razonsocial = Sheets("Caratula Planilla CTS").Range("A2").Value
    montoSoles = Sheets("Caratula Planilla CTS").Range("H2").Value
    montoDolares = Sheets("Caratula Planilla CTS").Range("I2").Value
    
    Dim iFileNumber As Integer
    Dim sFile As String
    RutaOutput = "\\ibdfs\dfs\CPD\CAMPA|fffd|A CTS MAYO 2019 DIGITAL\TXT RECIBIDOS"

    sFile = RutaOutput & "\" & ruc & "-" & razonsocial & "-" & "PEN" & montoSoles & "-" & "USD" & montoDolares & ".txt"
    

    If RutaOutput = False Then
        MsgBox "Operaci|fffd|n cancelada por el usuario.", vbInformation + vbOKOnly, "Interbank"
    Else
        
            iFileNumber = FreeFile
            Open sFile For Output As #iFileNumber
        
           strCabecera = "01" & tipMacro & Space(36) & ObtieneFechaActual & Space(9) & Format(icontador, "000000") & _
            FormatCerosREM(Format(dTotalSoles * 100, "##############0"), 15) & FormatCerosREM(Format(dTotalDolares * 100, "##############0"), 15) & "MC001"
        

        With RegDetREM
        
           
            Print #iFileNumber, strCabecera
            Do While Trim(Worksheets(1).Cells(intCnt + 8, 3).Value) <> "" Or Trim(Worksheets(1).Cells(intCnt + 8, 5).Value) <> ""
                
                .CODCTRL = "02"
                .CODBENEF = Trim(Range("C" & CStr(intCnt + 8)).Value)
                If argTipoMacro = "2" Or argTipoMacro = "3" Then
                    If IsNumeric(Range("I" & CStr(intCnt + 8)).Value) Then
                        .TIPOPERA = ""
                    Else
                        .TIPOPERA = Trim(Range("I" & CStr(intCnt + 8)).Value)
                    End If
                   
                    .NRODOCUM = Trim(Range("J" & CStr(intCnt + 8)).Value)
                Else
                    .TIPOPERA = ""
                    .NRODOCUM = ""
                End If
                .FVCTODOC = Format(Trim(Range("K" & CStr(intCnt + 8)).Value), "00000000")
                .MONOPERA = Format(Trim(Range("P" & CStr(intCnt + 8)).Value), "00")
                If IsNumeric(Range("E" & CStr(intCnt + 8)).Value) Then
                    .IMPOPERA = FormatCerosREM(Format(Range("Q" & CStr(intCnt + 8)).Value * 100, "##############0"), 15)
                Else
                    '.IMPOPERA = Range("Q" & CStr(intCnt + 8)).Value
                    .IMPOPERA = FormatCerosREM(Format(Range("Q" & CStr(intCnt + 8)).Value * 100, "##############0"), 15)
                End If
                .INDBANCO = ""
                .TIPABONO = Format(Trim(Range("L" & CStr(intCnt + 8)).Value), "00")
                
                
                If .TIPABONO = "09" Then
                    .PRODUCTO = Format(Trim(Range("M" & CStr(intCnt + 8)).Value), "000")
                    .moneda = Format(Trim(Range("N" & CStr(intCnt + 8)).Value), "00")
                    .NROCTA = Mid(Trim(Range("O" & CStr(intCnt + 8)).Value), 4, 10)
                    .OFICINA = Mid(Trim(Range("O" & CStr(intCnt + 8)).Value), 1, 3)
                ElseIf .TIPABONO = "99" Then
                    .PRODUCTO = ""
                    .moneda = ""
                    .OFICINA = ""
                    .NROCTA = Trim(Range("O" & CStr(intCnt + 8)).Value)
                Else
                    .PRODUCTO = ""
                    .moneda = ""
                    .OFICINA = ""
                    .NROCTA = ""
                End If
                
                .TIPDOCIDE = Format(Trim(Range("D" & CStr(intCnt + 8)).Value), "00")
                .NRODOCIDE = Trim(Range("E" & CStr(intCnt + 8)).Value)
                If Trim(.TIPDOCIDE) = "02" And Mid(Trim(.NRODOCIDE), 1, 1) = "2" Then
                    .TIPBENEF = "C"
                Else
                    .TIPBENEF = "P"
                End If
                .NOMBENEF = fConvNomBenefREM(.TIPBENEF, Trim(Range("F" & CStr(intCnt + 8)).Value), False)   'NOMBRE BENEFIRIO FUNCION
                .MONESUELD = ""
                If argTipoMacro = 1 Or argTipoMacro = 0 Then
                    If IsNumeric(Range("S" & CStr(intCnt + 8)).Value) Then
                        .IMPSUELD = FormatCerosREM(Format(Range("S" & CStr(intCnt + 8)).Value * 100, "##############0"), 15)
                    End If
                Else
                    .IMPSUELD = ""
                End If
                .MONESUELD = Format(Trim(Range("R" & CStr(intCnt + 8)).Value), "00")
                
                .NROCEL = Trim(Range("H" & CStr(intCnt + 8)).Value) 'IQ PROJECT
                If Right(Trim(.NROCEL), 1) = ";" Then
                    .NROCEL = Left(Trim(.NROCEL), Len(Trim(.NROCEL)) - 1)
                End If
                .CORREO = Trim(Range("G" & CStr(intCnt + 8)).Value) 'IQ PROJECT
                If Right(Trim(.CORREO), 1) = ";" Then
                    .CORREO = Left(Trim(.CORREO), Len(Trim(.CORREO)) - 1)
                End If
                .FILLER = Space(6)
    
                strData = .CODCTRL & .CODBENEF & .TIPOPERA & .NRODOCUM & .FVCTODOC & _
                          .MONOPERA & .IMPOPERA & .INDBANCO & .TIPABONO & .PRODUCTO & .moneda & _
                          .OFICINA & .NROCTA & .TIPBENEF & .TIPDOCIDE & .NRODOCIDE & _
                          .NOMBENEF & .MONESUELD & .IMPSUELD & .FILLER & .NROCEL & .CORREO   'IQ PROJECT
                          
                Print #iFileNumber, strData
                
                intCnt = intCnt + 1
    
            Loop
        End With
        
        Close #iFileNumber
        
        fExportaTextoREM = True
        
    End If
    
    'Modificado por MD 11/04/2019 10:54'
    'Ahora tengo que actualizar el archivo de Tablero de Control VF'
    actualizarTableroControl ruc, razonsocial, montoSoles, montoDolares
    
   
    Exit Function
    
Error:
    MsgBox Err.Number & " " & Err.Description
End Function
 Public Function fVerificarErrores() As Integer
    '******************************************************
    ' Finalidad: Identifica si la solicitud tiene errores
    '0 = inconforme
    '1 = conforme
    '2 = vacio
    '******************************************************
    Dim intCnt As Integer
    Dim intNu_rgst As Integer
        
    fVerificarErrores = 2
    intCnt = 0
    
    Windows(gsNo_archivo).Activate
    Sheets(1).Select
    
    Do While Trim(Worksheets(1).Cells(intCnt + 8, 3).Value) <> ""
        If Trim(Range("T" & Trim(CStr(intCnt + 8))).Value) <> "CONFORME" Then
            fVerificarErrores = 0
            Exit Do
        End If
        intCnt = intCnt + 1
        fVerificarErrores = 1
    Loop
    
 End Function
 
Public Function fConvNomBenefPRV(lsTipPer As String, lsNombre As String, lbComas As Boolean) As String
'**********************************************************************************
'* Devuelve el nombre formateado para mostrarlo dependiento del Tipo de Persona
'**********************************************************************************
    Dim lsCadena     As String * 60
    Dim lsCadena20   As String * 20
    Dim lsCadena40   As String * 40
    Dim i            As Integer
    
    lsCadena = lsNombre
    i = 0
    If Trim(lsCadena) = "" Then
        fConvNomBenefPRV = Trim(lsCadena)
        Exit Function
    End If
    If lbComas Then
        Select Case lsTipPer
            Case "C"    'Juridica
                fConvNomBenefPRV = Trim(lsCadena)
            Case "P"    'Natural
                fConvNomBenefPRV = Trim(Mid(lsCadena, 1, 20)) & "; " & Trim(Mid(lsCadena, 21, 20)) & _
                    IIf(Trim(Mid(lsCadena, 41, 20)) <> "", "; " & Trim(Mid(lsCadena, 41, 20)), "")
            Case Else   'Cualquier valor
                fConvNomBenefPRV = Trim(lsCadena)
        End Select
    Else
        Select Case lsTipPer
            Case "C"    'Juridica
                fConvNomBenefPRV = fReemplaza(Trim(lsCadena), ";", " ")
            Case "P"    'Natural
                Do While InStr(1, lsCadena, ";") And i < 3
                    i = i + 1
                    If i = 1 Then
                        lsCadena20 = Trim(Mid(lsCadena, 1, InStr(1, lsCadena, ";") - 1))
                        lsCadena = lsCadena20 & Trim(Mid(lsCadena, InStr(1, lsCadena, ";") + 1))
                    End If
                    If i = 2 Then
                        lsCadena40 = Trim(Mid(lsCadena, 1, InStr(1, lsCadena, ";") - 1))
                        lsCadena = lsCadena40 & Trim(Mid(lsCadena, InStr(1, lsCadena, ";") + 1))
                    End If
                Loop
            
                fConvNomBenefPRV = fReemplaza(lsCadena, ";", " ")

            Case Else   'Cualquier valor
                fConvNomBenefPRV = Trim(lsCadena)
        End Select
    End If
End Function
Attribute VB_Name = "REM_ValidacionDatos"
Public Function fDatosDetalleOKREM(ByVal argTipoMacro As Integer) As Integer

    '************************************************************************************************************
    '* Validando los registros de detalle de la solicitud especificada
    '************************************************************************************************************
    'Acumuladores de Importes
    Dim liImpTotSol     As Double
    Dim liImpTotDol     As Double
    Dim i               As Long
    Dim bolValidaDuplicidad As Boolean
    Dim o As Long

    fDatosDetalleOKREM = 1
    'Inicializando variables y contadores
    liImpTotSol = 0     ' Imp Total en Soles de la Solicitud
    liImpTotDol = 0     ' Imp Total en Dolares de la Solicitud
    i = 0
    o = 0
        Range("AM:AM").ClearContents
    Range("T8:T20000").ClearContents
    Range("U8:U20000").ClearContents
    With RegDetREM
        
            Do While (Trim(Worksheets(1).Cells(i + 8, 3).Value) <> "" Or _
                Trim(Worksheets(1).Cells(i + 8, 5).Value) <> "")
                
                
                Range("T" & CStr(i + 8)).Select
                Selection.ClearContents
                Range("U" & CStr(i + 8)).Select 'IQPROJECT
                Selection.ClearContents
                Range("C" & CStr(i + 8)).Value = UCase(Trim(Range("C" & CStr(i + 8)).Value))  ' IQPROJECT
                Range("P" & CStr(i + 8)).Value = UCase(Format(Trim(Range("p" & CStr(i + 8)).Value), "00"))
                
                If Trim(Range("Q" & CStr(i + 8)).Value) = "" Or Not IsNumeric(Range("Q" & CStr(i + 8)).Value) Then
                    Range("Q" & CStr(i + 8)).Value = 0
                Else
                    Range("Q" & CStr(i + 8)).Value = Format(UCase(Range("Q" & CStr(i + 8)).Value), "#,###,###,###,###.00")
                End If

                If argTipoMacro = 1 Then
                    If Len(Trim(Range("S" & CStr(i + 8)).Value)) <= 15 Then
                        Range("S" & CStr(i + 8)).Value = Format(UCase(Range("S" & CStr(i + 8)).Value), "#,###,###,###,###.00")
                    ElseIf Trim(Range("S" & CStr(i + 8)).Value) = "" Then
                        pColocarErrror i + 8, "Debes completar el campo 'Monto a Intangible'"
                    Else
                    pColocarErrror i + 8, "Solo puede ingresar 12 digitos ,(02)decimales y un punto decimal para monto de Intangible"
                    End If
                Else
                   Range("S" & CStr(i + 8)).Value = 0
                End If
                
                Range("I" & CStr(i + 8)).Value = Range("I" & CStr(i + 8)).Value
                Range("K" & CStr(i + 8)).Value = UCase(Trim(Range("K" & CStr(i + 8)).Value))
                Range("J" & CStr(i + 8)).Value = Range("J" & CStr(i + 8)).Value
                Range("H" & CStr(i + 8)).Value = Range("H" & CStr(i + 8)).Value
                'Range("L" & CStr(i + 8)).Value = UCase(Format(Trim(Range("L" & CStr(i + 8)).Value), "00"))
                Range("M" & CStr(i + 8)).Value = UCase(Format(Trim(Range("M" & CStr(i + 8)).Value), "000"))
                Range("N" & CStr(i + 8)).Value = LCase(Format(Trim(Range("N" & CStr(i + 8)).Value), "00"))
                Range("O" & CStr(i + 8)).Value = UCase(Trim(Range("O" & CStr(i + 8)).Value))
                Range("D" & CStr(i + 8)).Value = UCase(Format(Trim(Range("D" & CStr(i + 8)).Value), "00"))
                Range("E" & CStr(i + 8)).Value = UCase(Trim(Range("E" & CStr(i + 8)).Value))
                Range("F" & CStr(i + 8)).Value = UCase(Trim(Range("F" & CStr(i + 8)).Value))
                
                If Format(Range("L" & CStr(i + 8)).Value, "00") = "99" Then
                    Range("O" & CStr(i + 8)).Value = Trim(Range("O" & CStr(i + 8)).Value)
                Else
                    If Format(Trim(Range("L" & CStr(i + 8)).Value), "00") = "09" Then
                       Range("O" & CStr(i + 8)).Value = Trim(Range("O" & CStr(i + 8)).Value)
                    End If
                End If
                Range("G" & CStr(i + 8)).Value = Trim(Range("G" & CStr(i + 8)).Value)
                
                If Len(Trim(Range("Q" & CStr(i + 8)).Value) * 100) > 14 Then
                    pColocarErrror i + 8, "Solo puede ingresar 12 digitos ,(02)decimales y un punto decimal para monto de Abono"
                
                End If
                
                'Capturando valores para validaci|fffd|n
                .CODCTRL = "02"
                .CODBENEF = Trim(Range("C" & CStr(i + 8)).Value)
                If argTipoMacro = "2" Or argTipoMacro = "3" Then
                    .TIPOPERA = Range("I" & CStr(i + 8)).Value
                    .NRODOCUM = Trim(Range("J" & CStr(i + 8)).Value)
                Else
                    .TIPOPERA = ""
                    .NRODOCUM = ""
                End If
                Trim (Range("F" & CStr(i + 8)).Value)
                .MONOPERA = Format(Trim(Range("P" & CStr(i + 8)).Value), "00")
                .MONESUELD = Format(Trim(Range("R" & CStr(i + 8)).Value), "00")
                .FVCTODOC = Trim(Range("k" & CStr(i + 8)).Value)
                .TIPABONO = Format(Trim(Range("L" & CStr(i + 8)).Value), "00")
                
                If InStr(1, Range("Q" & CStr(i + 8)).Value, "-") > 0 Then
                    .IMPOPERA = ""
                Else
                    If IsNumeric(Range("Q" & CStr(i + 8)).Value) Then
                        .IMPOPERA = FormatCerosREM(Format(Range("Q" & CStr(i + 8)).Value * 100, "##############0"), 15)
                    ElseIf Trim(Range("Q" & CStr(i + 8)).Value) = "" Then
                        pColocarErrror i + 8, "Debes completar el campo 'Monto a abonar'"
                    Else
                        .IMPOPERA = Range("Q" & CStr(i + 8)).Value
                    End If
                 End If
                If .TIPABONO = "09" Then
                    .NROCTA = Mid(Trim(Range("O" & CStr(i + 8)).Value), 4, 10)
                    .OFICINA = Mid(Trim(Range("O" & CStr(i + 8)).Value), 1, 3)
                ElseIf .TIPABONO = "99" Then
                        .OFICINA = ""
                        .NROCTA = Trim(Range("O" & CStr(i + 8)).Value)
                Else
                    .NROCTA = Trim(Range("O" & CStr(i + 8)).Value)
                End If
                .INDBANCO = ""
                .PRODUCTO = Format(Trim(Range("M" & CStr(i + 8)).Value), "000")
                .moneda = Format(Trim(Range("N" & CStr(i + 8)).Value), "00")
                .TIPBENEF = Mid(Trim(Range("E" & CStr(i + 8)).Value), 1, 1)
                .TIPDOCIDE = Format(Trim(Range("D" & CStr(i + 8)).Value), "00")
                .NRODOCIDE = Trim(Range("E" & CStr(i + 8)).Value)
                .NOMBENEF = UCase(Trim(Range("F" & CStr(i + 8)).Value))
                
                If Trim(Range("S" & CStr(i + 8)).Value) = "" Then
                    .IMPSUELD = ""
                Else
                    If IsNumeric(Range("S" & CStr(i + 8)).Value) Then
                        .IMPSUELD = FormatCerosREM(Format(Range("S" & CStr(i + 8)).Value * 100, "##############0"), 15)
                    ElseIf Trim(Range("S" & CStr(i + 8)).Value) = "" And argTipoMacro = "1" Then
                        pColocarErrror i + 8, "Debes completar el campo 'Monto Intangible'"
                    Else
                        .IMPSUELD = Range("S" & CStr(i + 8)).Value
                    End If
                End If
                .NROCEL = Range("H" & CStr(i + 8)).Value
                .CORREO = Range("G" & CStr(i + 8)).Value
                .FILLER = Space(6)
                
        
                '***********************************************************************************
                '1. Validando Codigo de Beneficiario
                '***********************************************************************************
                If Trim(.CODBENEF) = "" Then
                    pColocarErrror i + 8, "Debes completar el campo 'C|fffd|digo beneficiario'"
                End If

                '***********************************************************************************
                '2. Verificando Tipo de Operacion F,C,D para Proveedores
                '***********************************************************************************
                 If argTipoMacro = "2" Or argTipoMacro = "3" Then
                    If Not fTipOperacOKREM(.TIPOPERA) Then
                        If Trim(.TIPOPERA) = "" Then
                            If Trim(.TIPABONO) = "00" Or Trim(.TIPABONO) = "11" Then
                                pColocarErrror i + 8, "Debe ingresar un tipo de documento de pago"
                            End If
                        Else
                            pColocarErrror i + 8, "debe ingresar un tipo de documento de pago valido"
                        End If
                    ElseIf argTipoMacro = "3" And (Trim(.TIPOPERA) = "D" Or Trim(.TIPOPERA) = "C") Then
                        pColocarErrror i + 8, "el tipo de documento de pago no es valido"
                    End If
                    
                '***********************************************************************************
                '3. Validando n|fffd|mero de Documento (Solo Proveedores)
                '***********************************************************************************
                    If Trim(.NRODOCUM) = "" And argTipoMacro = "3" Then
                        If Trim(.TIPABONO) = "00" Or (.TIPABONO) = "11" Then
                            pColocarErrror i + 8, "Debes completar el campo 'N|fffd|mero de documento de pago'"
                        End If
                    Else
                        If Len(Trim(Range("J" & CStr(i + 8)).Value)) > 20 Then
                            pColocarErrror i + 8, "Solo se puede ingresar hasta 20 caracteres en N|fffd|mero de documento de Pago"
                        Else
                            If Not fValidaCaracteres(2, Trim(.NRODOCUM)) Then
                                pColocarErrror i + 8, "Recuerda solo puedes ingresar letras y n|fffd|meros en n|fffd| documento de pago"
                            End If
                        End If
                    End If
               

                '***********************************************************************************
                '4. Verifica fecha de vencimiento del documento proveedor
                '***********************************************************************************
                    If Trim(.FVCTODOC) <> "" Then
                         If Not IsDate(fInvFechaREM(.FVCTODOC)) Then
                             pColocarErrror i + 8, "Verif. Fec. Vcto. Formato (aaaammdd)"
                         Else
                             If Mid(.FVCTODOC, 5, 2) > 12 Then
                                 pColocarErrror i + 8, "Verif. Fec. Vcto. Formato (aaaammdd)"
                             End If
                         End If
                     End If
                End If
                '***********************************************************************************
                '5. Verificando Importe de Operaci|fffd|n
                '***********************************************************************************
'
'               'valida montos no vengan vacios

                
                If argTipoMacro = 1 Then
'                    End If
                    If Trim(.IMPSUELD) = "" Then
                        pColocarErrror i + 8, "Debes completar el campo 'Monto intangible'"
                    End If
                    
                    If Trim(.MONESUELD) = "" Then
                        pColocarErrror i + 8, " completar el campo 'Moneda intangible CTS'"
                    ElseIf Not fMonedaOKREM(.MONESUELD) Then
                        pColocarErrror i + 8, "Debes ingresar una correcta 'Moneda intangible CTS'"
                    'ElseIf Trim(.MONESUELD) <> Trim(.moneda) And Trim(.TIPABONO) = "09" Then
                     '   pColocarErrror i + 8, "Debes ingresar la misma moneda que la moneda de cuenta"
                    End If
                    If Trim(.IMPOPERA) = "" Then
                        pColocarErrror i + 8, "Debes completar el campo 'Monto a abonar'"
                    End If
                 Else
                    If Trim(.IMPOPERA) = "" Or Trim(.IMPOPERA) <= 0 Then
                        pColocarErrror i + 8, "Debes ingresar un valor a el campo 'Monto a abonar'"
                    End If
                End If
                
                If Not IsNumeric(.IMPOPERA) Then
                    .IMPOPERA = 0
                End If
                
                If Not IsNumeric(.IMPSUELD) Then
                    .IMPSUELD = 0
                End If
                
                If Trim(.MONOPERA) = "" Then
                    pColocarErrror i + 8, " completar el campo 'Moneda de abono'"
                ElseIf Not fMonedaOKREM(.MONOPERA) Then
                    pColocarErrror i + 8, "Debes ingresar una correcta 'moneda de abono'"
                End If
                
                        If fTipAbonoOKREM(.TIPABONO) Then
                            Select Case .TIPABONO
                            Case "09"
                                If Trim(Range("O" & CStr(i + 8)).Value) = "" Then
                                        pColocarErrror i + 8, "Debes completar el campo 'N|fffd|mero de cuenta del beneficiario'"
                                Else
                                    If Not IsNumeric(Trim(Range("O" & CStr(i + 8)).Value)) Or _
                                       Not fValidaCaracteres(2, Trim(Range("O" & CStr(i + 8)).Value)) Then
                                          pColocarErrror i + 8, "solo ingrese valores de '0-9' en  n|fffd|mero de cuenta"
                                    Else
                                    '***********************************************************************************
                                    '6. Verifica Producto - Moneda
                                    '***********************************************************************************
                                        If Len(Trim(Range("O" & CStr(i + 8)).Value)) = 13 Then
                                            If fProductoOKREM(.PRODUCTO) And fMonedaOKREM(.moneda) Then
                                                '***********************************************************************************
                                                '7. n|fffd|mero de Cuenta IB
                                                '***********************************************************************************
                                                If Not fNroCuentaOK("0", .PRODUCTO, .moneda, .OFICINA, .NROCTA) Then
                                                    pColocarErrror i + 8, "Verif. Tipo Cuenta y N|fffd|mero de Cta."
                                                End If
                                            End If
                                        Else
                                            pColocarErrror i + 8, "El n|fffd|mero de cuenta IBK debe tener 13 d|fffd|gitos"
                                        End If
                                     End If
                                     If Trim(Range("O" & CStr(i + 8)).Value) = "" Then
                                        pColocarErrror i + 8, "Debes completar el campo 'N|fffd|mero de cuenta del beneficiario'"
                                     End If
                                End If
                            Case "99"
                                If Trim(Range("O" & CStr(i + 8)).Value) = "" Then
                                        pColocarErrror i + 8, "Debes completar el campo 'N|fffd|mero de cuenta del beneficiario'"
                                Else
                                    If Not IsNumeric(Trim(Range("O" & CStr(i + 8)).Value)) Or _
                                       Not fValidaCaracteres(2, Trim(Range("O" & CStr(i + 8)).Value)) Then
                                          pColocarErrror i + 8, "solo ingrese valores de '0-9' en  n|fffd|mero de cuenta"
                                    Else
                                        If argTipoMacro = 3 Then
                                            pColocarErrror i + 8, "El tipo de Abono no corresponde al tipo de Pago"
                                        End If
                                        
                                         
                                         If Len(Trim(Range("O" & CStr(i + 8)).Value)) = 20 Then
                                            If Not fNroCuentaOK("1", .PRODUCTO, .moneda, .OFICINA, .NROCTA) Then
                                                pColocarErrror i + 8, "Verif. Tipo Cuenta y N|fffd|mero de Cta."
                                            End If
                                         Else
                                            pColocarErrror i + 8, "El n|fffd|mero de cuenta interbancaria debe tener 20 d|fffd|gitos"
                                         End If
                                     End If
                                   End If
                            Case "00", "11"
                                If .TIPABONO = "11" Then
                                    If argTipoMacro = 0 Or argTipoMacro = 1 Then
                                        pColocarErrror i + 8, "El tipo de Abono no corresponde al tipo de Pago"
                                    End If
                                Else
                                    If argTipoMacro = 1 Or argTipoMacro = 2 Then
                                        pColocarErrror i + 8, "El tipo de Abono no corresponde al tipo de Pago"
                                    End If
                                 End If
                                 If Trim(.NROCTA) <> "" And (Trim(.TIPABONO) = "09" Or Trim(.TIPABONO) = "99") Then
                                    pColocarErrror i + 8, "El campo 'N|fffd|mero de cuenta' debe estar vac|fffd|o"
                                 End If
                                 If Trim(.PRODUCTO) <> "" And (Trim(.TIPABONO) = "09" Or Trim(.TIPABONO) = "99") Then
                                    pColocarErrror i + 8, "El campo 'Tipo de cuenta' debe estar vac|fffd|o"
                                 End If
                                 If Trim(.moneda) <> "" And (Trim(.TIPABONO) = "09" Or Trim(.TIPABONO) = "99") Then
                                    pColocarErrror i + 8, "El campo 'Moneda de cuenta' debe estar vac|fffd|o"
                                 End If
                               
                            End Select
                        Else
                            If Trim(.TIPABONO) = "" Then
                                pColocarErrror i + 8, "Debes completar el campo 'Tipo de Abono'"
                            Else
                                pColocarErrror i + 8, "Debes ingresar un valor correcto en el campo 'Tipo de Abono'"
                            End If
                        End If
                        
                If Not fProductoPagoOKREM(.PRODUCTO, argTipoMacro) Then
                    If .TIPABONO = "09" Then
                      If Trim(.PRODUCTO) = "" Then
                          pColocarErrror i + 8, "Debes completar el campo Tipo de Cuenta"
                      Else
                          pColocarErrror i + 8, "Debes ingresar un valor correcto en el campo 'Tipo de Cuenta'"
                      End If
                    End If
                End If
                If Not fMonedaOKREM(.moneda) Then
                    If .TIPABONO = "09" Then
                      If Trim(.moneda) = "" Then
                          pColocarErrror i + 8, "Debes completar el campo Moneda de cuenta"
                      Else
                          pColocarErrror i + 8, "Debes ingresar un valor correcto en el campo 'Moneda de cuenta'"
                      End If
                    End If
                End If
                '***********************************************************************************
                '9. Validando Tipo de Beneficiario
                '***********************************************************************************
                '***********************************************************************************
                '10. Validando Tipo Documento de Identidad
                '***********************************************************************************
                If Trim(.TIPDOCIDE) <> "" Then
                    If Not fTipDocIdeOKREM(.TIPDOCIDE) Then
                        pColocarErrror i + 8, "Debes colocar un correcto tipo de Documento de identidad"
                    Else
                        Select Case Trim(.TIPDOCIDE)
                            Case "01"
                                If IsNumeric(Trim(.NRODOCIDE)) Then
                                If Len(Trim(.NRODOCIDE)) <> 8 Then
                                    pColocarErrror i + 8, "El n|fffd|mero de DNI debe tener 8 d|fffd|gitos"
                                End If
                                Else
                                    pColocarErrror i + 8, "Para DNI solo ingrese n|fffd|meros"
                                End If
                             Case "02"
                                If IsNumeric(Trim(.NRODOCIDE)) Then
                                    If Len(Trim(.NRODOCIDE)) <> 11 Then
                                        pColocarErrror i + 8, "El n|fffd|mero de RUC debe tener 11 d|fffd|gitos"
                                    End If
                                Else
                                    pColocarErrror i + 8, "Para RUC solo ingrese n|fffd|meros"
                                End If
                                If Mid(.NRODOCIDE, 1, 1) <> "1" And Mid(.NRODOCIDE, 1, 1) <> "2" Then
                                    pColocarErrror i + 8, "Ingrese un correcto n|fffd|mero de RUC"
                                End If
                             Case "03"
                                If Not fValidaCaracteres(2, Trim(.NRODOCIDE)) Then
                                    pColocarErrror i + 8, "Solo puede ingresar n|fffd|meros y letras a  nro de carn|fffd| de extranjer|fffd|a"
                                ElseIf Len(Trim(.NRODOCIDE)) < 1 Or Len(Trim(.NRODOCIDE)) > 11 Then
                                    pColocarErrror i + 8, "El n|fffd|mero de carn|fffd| de extranjer|fffd|a debe tener 11 d|fffd|gitos"
                                End If
                             Case "05"
                                If Not fValidaCaracteres(2, Trim(.NRODOCIDE)) Then
                                    pColocarErrror i + 8, "Solo puede ingresar n|fffd|meros y letras a Pasaporte"
                                ElseIf Len(Trim(Range("E" & CStr(i + 8)).Value)) > 15 Then
                                    pColocarErrror i + 8, "El n|fffd|mero de pasaporte puede tener m|fffd|ximo 15 caracteres"
                                End If
                        End Select
                    End If
                Else
                    pColocarErrror i + 8, "Debes completar el campo 'Tipo de documento de identidad'"
                End If
                If Trim(.NRODOCIDE) = "" Then
                     pColocarErrror i + 8, "Debes completar el campo 'N|fffd|mero de documento de identidad'"
                End If
                
                '***********************************************************************************
                '11. Verifica Nombre de Beneficiario
                '***********************************************************************************
                If Trim(.NOMBENEF) <> "" Then
                    If Not fValidaCaracteres(3, Trim(.NOMBENEF)) Then
                                pColocarErrror i + 8, "Solo puede ingresar letras y n|fffd|meros sin tildes a nombre de beneficiario"
                    ElseIf Len(Trim(Range("F" & CStr(i + 8)).Value)) <= 60 Then
                        If .TIPDOCIDE = "02" Then
                            If Trim(.TIPBENEF) = "2" Then
                                 If InStr(1, .NOMBENEF, ";") > 0 Then
                                    pColocarErrror i + 8, "Separar Razon social con espacios"
                                End If
                            End If
                            If Trim(.TIPBENEF) = "1" Then
'                                 If InStr(1, .NOMBENEF, ";") = 0 Then
'                                    pColocarErrror i + 8, "Separar Apellidos y Nombres con ';'"
'                                End If
                            End If
                        Else
'                           If InStr(1, .NOMBENEF, ";") = 0 Then
'                                pColocarErrror i + 8, "Separar Apellidos y Nombres con ';'"
'                            End If
                        End If
                    Else
                        pColocarErrror i + 8, "Recuerda solo puedes ingresar m|fffd|ximo 60 caracteres en Nombre de Beneficiario"
                    End If
                Else
                    pColocarErrror i + 8, "Debes completar el campo 'Nombre del beneficiario'"
                End If
                
                
                '***************************************************************************
                '12. Acumulando Importes Totales
                '***************************************************************************
                'Totalizando importes  Planillas
'                If .MONOPERA = "01" Then liImpTotSol = liImpTotSol + (CDbl(.IMPOPERA) / 100)
'                If .MONOPERA = "10" Then liImpTotDol = liImpTotDol + (CDbl(.IMPOPERA) / 100)
                '***************************************************************************
                '13. Acumulando Importes Totales y Retenciones Totales
                '***************************************************************************
                If IsNumeric(.IMPOPERA) Then
                    'Totalizando importes  Proveedores
                    If .TIPOPERA = "D" Then
                        If .MONOPERA = "01" Then
                            liImpTotSol = liImpTotSol - (CDbl(.IMPOPERA) / 100)
                        End If
                        If .MONOPERA = "10" Then
                            liImpTotDol = liImpTotDol - (CDbl(.IMPOPERA) / 100)
                        End If
                    Else
                        If .MONOPERA = "01" Then
                            liImpTotSol = liImpTotSol + (CDbl(.IMPOPERA) / 100)
                        End If
                        If .MONOPERA = "10" Then
                            liImpTotDol = liImpTotDol + (CDbl(.IMPOPERA) / 100)
                        End If
                    End If
                
                End If
                '***************************************************************************
                '13. Acumula data para validar duplicidad de cuentas con diferentes Doc Identidad
                '***************************************************************************
               Range("V" & CStr(i + 8)).Value = "c" & Trim(.PRODUCTO) & Trim(.moneda) & Trim(.OFICINA) & Trim(.NROCTA)
                
                'correo electronico

                If Len(Trim(.CORREO)) > 140 Then
                     pColocarErrror i + 8, "Recuerda solo puedes ingresar m|fffd|ximo 140 caracteres en correo electronico"
                Else
                     If InStr(1, Trim(.CORREO), " ") > 0 Then
                        pColocarErrror i + 8, "Separar correos con ';'"
                     ElseIf Trim(.CORREO) <> "" Then
                        If Right(Trim(.CORREO), 1) = ";" Then
                            pColocarErrror i + 8, "usar ';' solo para separar correos"
                        ElseIf Not CuentaCaracteres(i + 8) Then
                            pColocarErrror i + 8, "ingrese un correo electronico valido"
                        End If
                     End If
                End If
                     
                'n|fffd|mero DE CELULAR
                If Len(Trim(Range("H" & CStr(i + 8)).Value)) > 40 Then
                      pColocarErrror i + 8, "Recuerda solo puedes ingresar m|fffd|ximo 40 caracteres para n|fffd| celular"
                ElseIf Trim(.NROCEL) <> "" Then '''validar espacios
                                         
                     If Not IsNumeric(Replace(Trim(.NROCEL), ";", "")) Then
                        pColocarErrror i + 8, "Solo puede ingresar n|fffd|meros y ';' para separar los n|fffd|meros de celular"
                    ElseIf Right(Trim(.NROCEL), 1) = ";" Then
                        pColocarErrror i + 8, "usar ';' solo para separar los n|fffd|meros de celular"
                      Else
                        If IsNumeric(Mid(.NROCEL, 10, 1)) Or IsNumeric(Mid(.NROCEL, 20, 1)) Or _
                            IsNumeric(Mid(.NROCEL, 30, 1)) Or IsNumeric(Mid(.NROCEL, 40, 1)) Then
                                pColocarErrror i + 8, "La longitud de n|fffd|mero de celular debe ser de 9"
                        Else
                         For h = 1 To 40
                            If Len(Trim(Mid(.NROCEL, h, 9))) <> 0 Then
                                If Len(Trim(Mid(.NROCEL, h, 9))) < 9 Then
                                    pColocarErrror i + 8, "La longitud de n|fffd|mero de celular debe ser de 9"
                                    h = h + 40
                                Else
                                    Range("AP" & CStr(i + 8)).Value = Mid(.NROCEL, h, 9)
                                    If Mid(Trim(.NROCEL), h, 1) <> "9" Then
                                        pColocarErrror i + 8, "n|fffd|mero de celular debe iniciar en '9'"
                                        h = h + 40
                                    Else
                                        If h = 1 Then
                                            If Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, h + 10, 9) Then
                                                pColocarErrror i + 8, "duplicidad en n|fffd|mero de celular"
                                                h = h + 40
                                            End If
                                        End If
                                         If h = 11 Then
                                            If Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, h + 10, 9) Or _
                                            Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, 1, 9) Then
                                                pColocarErrror i + 8, "duplicidad en n|fffd|mero de celular"
                                                h = h + 40
                                            End If
                                         End If
                                         If h = 21 Then
                                            If Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, h + 10, 9) Or _
                                            Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, 1, 9) Or _
                                            Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, 11, 9) Then
                                                pColocarErrror i + 8, "duplicidad en n|fffd|mero de celular"
                                                h = h + 40
                                            End If
                                         End If
                                         If h = 31 Then
                                            If Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, 21, 9) Or _
                                            Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, 1, 9) Or _
                                            Trim(Range("AP" & CStr(i + 8)).Value) = Mid(.NROCEL, 11, 9) Then
                                                pColocarErrror i + 8, "duplicidad en n|fffd|mero de celular"
                                                h = h + 40
                                            End If
                                         End If
                                    End If
                                End If
                           End If
                            h = h + 9
                         Next h
                        End If
                     End If
                End If
                Range("AP" & CStr(i + 8)).ClearContents
                
               'Valida ok
               If Range("U" & CStr(i + 8)).Value = "" Then
                    pColocarCorrecto i + 8
                    o = o + 1
               End If
               Range("AM" & CStr(i + 8)).ClearContents
               If argTipoMacro = "0" Or argTipoMacro = "1" Then
                    If Trim(.TIPABONO) = "09" Then
                         Range("AM" & CStr(i + 8)).Value = "c" & CStr(Trim(.PRODUCTO)) & CStr(Trim(.moneda)) & Trim(.OFICINA) & Trim(.NROCTA)
                     End If
                     If Trim(.TIPABONO) = "99" Then
                         Range("AM" & CStr(i + 8)).Value = "c" & Trim(.NROCTA)
                     End If
                End If
                i = i + 1
        Loop
    End With
    
    If i > 0 And (argTipoMacro = 0 Or argTipoMacro = 1) Then
       bolValidaDuplicidad = fValidaDuplicidad(i)
    End If
 
    If i = 0 Then
        Sheets(1).Unprotect gsPassword
        totalReg = 0
        totalSoles = Format("0", "#,###,###,###,###.00")
        totalDolares = Format("0", "#,###,###,###,###.00")
        Range("O2").Select
        Sheets(1).Protect gsPassword
        fDatosDetalleOKREM = 2
        Exit Function
    End If
    
       Sheets(1).Select
        totalReg = i
        totalSoles = Format(liImpTotSol, "#,###,###,###,###.00") 'liImpTotSol
        totalDolares = Format(liImpTotDol, "#,###,###,###,###.00") 'liImpTotDol
        Range("O2").Select
    If o <> i Then
        Exit Function
    End If
        fDatosDetalleOKREM = 0

End Function
Function fValidaDuplicidad(argIntNroRegistros As Long) As Boolean
    Dim k As Long
    Dim strFormula As String
    Dim intCantidadCuentasDuplicadas As Long
    Dim numReg As Integer
    k = 0
    intCantidadCuentasDuplicadas = 0
    
    fValidaDuplicidad = False
    gsErrorRestrictivo = False
    With RegDetREM
        Do While k < argIntNroRegistros
            'Colocamos la f|fffd|rmula para el C|fffd|digo Propio de Beneficiario
            If Trim(Range("C" & CStr(k + 8)).Value) <> "" Then
                Range("V" & CStr(k + 8)).Select
                strFormula = ""
                strFormula = "=COUNTIF(R[" & CStr((k) * -1) & "]C[-19]:R["
                strFormula = strFormula & CStr(argIntNroRegistros - k) & "]C[-19],RC[-19])"
                ActiveCell.FormulaR1C1 = strFormula
                numReg = Range("V" & CStr(k + 8)).Value
            Else
                Range("V" & CStr(k + 8)).ClearContents
                
            End If
           
            
'            'Colocamos la f|fffd|rmula para el N|fffd|mero Cuenta
            If (Trim(Range("AM" & CStr(k + 8)).Value) <> "") And _
               (Trim(Range("O" & CStr(k + 8)).Value) <> "") Then
                Range("W" & CStr(k + 8)).Select
                strFormula = ""
                strFormula = "=COUNTIF(R[" & CStr((k) * -1) & "]C[16]:R["
                strFormula = strFormula & CStr(argIntNroRegistros - k) & "]C[16],RC[16])"
                ActiveCell.FormulaR1C1 = strFormula
                numReg = Range("w" & CStr(k + 8)).Value
            Else
                Range("W" & CStr(k + 8)).ClearContents
            End If
            
            'Colocamos la f|fffd|rmula para el Nro Doc. Identidad
            If Trim(Range("E" & CStr(k + 8)).Value) <> "" Then
                Range("X" & CStr(k + 8)).Select
                strFormula = ""
                strFormula = "=COUNTIF(R[" & CStr((k) * -1) & "]C[-19]:R["
                strFormula = strFormula & CStr(argIntNroRegistros - k) & "]C[-19],RC[-19])"
                ActiveCell.FormulaR1C1 = strFormula
                numReg = Range("x" & CStr(k + 8)).Value
             Else
                Range("X" & CStr(k + 8)).ClearContents
            End If
            
            'Colocamos la f|fffd|rmula para validaci|fffd|n de cuentas
'            If (Trim(Range("V" & CStr(k + 8)).Value) <> "") And _
'               (Trim(Range("O" & CStr(k + 8)).Value) <> "") Then
'                Range("Y" & CStr(k + 8)).Select
'                strFormula = ""
'                strFormula = "=COUNTIF(R[" & CStr((k) * -1) & "]C[-4]:R["
'                strFormula = strFormula & CStr(argIntNroRegistros - k) & "]C[-4],RC[-4])"
'                ActiveCell.FormulaR1C1 = strFormula
'                numReg = Range("y" & CStr(k + 8)).Value
'             Else
'                Range("Y" & CStr(k + 8)).ClearContents
'            End If
            
            '************************************************************************************
            'Verificamos la duplicidad de los campos
            '************************************************************************************
            If Val(Trim(Range("V" & CStr(k + 8)).Value)) > 1 Then
               pColocarErrror k + 8, "Duplicidad de C|fffd|digo Propio Benef."
            End If
            If Val(Trim(Range("W" & CStr(k + 8)).Value)) > 1 Then
               pColocarErrror k + 8, "Duplicidad en el Nro. Cuenta"
               '******************************************************************************
               ' Copiamos en la tabla temporal aquella cuentas duplicadas para luego validar
               ' las cuentas con diferentes beneficiarios
               '******************************************************************************
               'Celda de Cuenta
               Range("AA" & CStr(intCantidadCuentasDuplicadas + 8)).Value = "c" & Trim(Range("M" & CStr(k + 8)).Value) & Trim(Range("N" & CStr(k + 8)).Value) & Trim(Range("O" & CStr(k + 8)).Value)
               'Celda de Tipo+Nro Doc Identidad
               Range("AB" & CStr(intCantidadCuentasDuplicadas + 8)).Value = Trim(Range("D" & CStr(k + 8)).Value) & Trim(Range("E" & CStr(k + 8)).Value)
               'Colocamos vac|fffd|o a las siguientes celdas
               Range("AA" & CStr(intCantidadCuentasDuplicadas + 9)).Value = ""
               Range("AB" & CStr(intCantidadCuentasDuplicadas + 9)).Value = ""
               intCantidadCuentasDuplicadas = intCantidadCuentasDuplicadas + 1
            End If
            If Val(Trim(Range("X" & CStr(k + 8)).Value)) > 1 Then
               pColocarErrror k + 8, "Duplicidad en Nro. Doc. Identidad"
            End If
            k = k + 1
        Loop
    End With
    
    '***************************************************************************************************
    'Si existe cuentas duplicadas verificamos que diferentes beneficiarios no tengan la misma cuenta
    '***************************************************************************************************
    If intCantidadCuentasDuplicadas > 0 Then
        Call ValidaCuentaConDiferenteBeneficiario(intCantidadCuentasDuplicadas, argIntNroRegistros)
    End If
    
    fValidaDuplicidad = True
End Function
Private Sub ValidaCuentaConDiferenteBeneficiario(argIntNroCantidadCuentasDuplicadas As Long, argIntNroRegistros As Long)
'***************************************************************************************************
'Se valida que las cuentas no est|fffd|n asociadas a diferentes beneficiarios
'***************************************************************************************************
Dim j As Long
Dim m As Long
Dim strCuentaActual As String
Dim strCuentaAnt As String
Dim strCodBeneficiarioActual As String
Dim strCodBeneficiarioAnt As String
Dim bolDiferentesBenefConMismaCuenta As Boolean
Dim bolEsMismaCuentaConDiferenteBeneficiario As Boolean
Dim strCuentaValidar As String
j = 0
m = 0
strCuentaActual = ""
strCuentaAnt = ""
strCodBeneficiarioActual = ""
strCodBeneficiarioAnt = ""
bolDiferentesBenefConMismaCuenta = False

    'Ordenamos las cuentas duplicadas de la Hoja Temporal
    Range("AA8:AB" & CStr(argIntNroCantidadCuentasDuplicadas + 7)).Select
    Selection.Sort Key1:=Range("AA8"), Order1:=xlAscending, Header:=xlNo, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
    DataOption1:=xlSortNormal
    '***************************************************************************************************
    'Agregamos el Flag de BenefDiferentesConMismaCuenta en la columna AC[XX]
    '***************************************************************************************************
    strCuentaActual = Trim(Range("AA8").Value)
    strCuentaAnt = Trim(Range("AA8").Value)
    strCodBeneficiarioActual = Trim(Range("AB8").Value)
    strCodBeneficiarioAnt = Trim(Range("AB8").Value)
    Do While j < argIntNroCantidadCuentasDuplicadas
        strCuentaActual = Trim(Range("AA" & CStr(j + 8)).Value)
        strCodBeneficiarioActual = Trim(Range("AB" & CStr(j + 8)).Value)
        Range("AC" & CStr(j + 8)).Value = ""
        
        If strCuentaActual = strCuentaAnt Then
           If strCodBeneficiarioActual <> strCodBeneficiarioAnt Then
              'Actualizanos el flag de Beneficiarios Diferentes con misma cuenta
              Range("AC" & CStr(j + 8)).Value = "S"
              bolDiferentesBenefConMismaCuenta = True
           End If
        End If
       
        strCuentaAnt = Trim(Range("AA" & CStr(j + 8)).Value)
        strCodBeneficiarioAnt = Trim(Range("AB" & CStr(j + 8)).Value)
        j = j + 1
    Loop
    
    '***************************************************************************************************
    'Colocamos el mensaje de error en las cuentas que tengan beneficiarios diferentes
    '***************************************************************************************************
    If bolDiferentesBenefConMismaCuenta Then
        m = 0
        Do While m < argIntNroRegistros
             If Val(Trim(Range("W" & CStr(m + 8)).Value)) > 1 Then
                strCuentaValidar = Trim(Range("AM" & CStr(m + 8)).Value)
                bolEsMismaCuentaConDiferenteBeneficiario = fDiferentesBenefConMismaCuenta(strCuentaValidar, argIntNroCantidadCuentasDuplicadas)
                If bolEsMismaCuentaConDiferenteBeneficiario Then
                   gsErrorRestrictivo = True
                   pColocarErrorInicio m + 8, gsMensajeErrorRestrictivo
                End If
             End If
           m = m + 1
        Loop
    End If

End Sub
Function fDiferentesBenefConMismaCuenta(argStrCuentaValidar As String, argIntNroCantidadCuentasDuplicadas As Long) As Boolean
'**********************************************************************************************
'Devuelve si la cuenta a validar se ha registrado para diferentes beneficiarios
'Se valida con el campo FlagBeneficiario con misma cuenta Columna: "AC[NroFila]"
'**********************************************************************************************
Dim n As Long
Dim strCuentaAux As String
Dim strFlagBenefDiferenteMismaCuenta As String
n = 0
fDiferentesBenefConMismaCuenta = False

For n = 0 To argIntNroCantidadCuentasDuplicadas - 1
   strCuentaAux = Trim(Range("AA" & CStr(n + 8)).Value)
   If strCuentaAux = argStrCuentaValidar Then
      strFlagBenefDiferenteMismaCuenta = Trim(Range("AC" & CStr(n + 8)).Value)
      If strFlagBenefDiferenteMismaCuenta = "S" Then
         fDiferentesBenefConMismaCuenta = True
         Exit For
      End If
   End If
Next

End Function

Function fInvFechaREM(dFecha As String) As String
    '************************************************************************
    '* Funcion que invierte y da formato a la fecha de AAAAMMDD a DD/MM/AAAA*
    '* y de DD/MM/AAAA a AAAAMMDD dependiendo del formato actual de la fecha*
    '* Par|fffd|metro : Campo Fecha tipo string
    '************************************************************************
    If Mid(dFecha, 3, 1) = "/" Or Mid(dFecha, 3, 1) = "-" Then
        fInvFechaREM = Mid(dFecha, 7, 4) & Mid(dFecha, 4, 2) & Mid(dFecha, 1, 2)
    Else
        fInvFechaREM = Mid(dFecha, 7, 2) & "/" & Mid(dFecha, 5, 2) & "/" & Mid(dFecha, 1, 4)
    End If
End Function

Private Sub pColocarErrror(ByVal argRow As Double, ByVal argError As String)
    Range("T" & Trim(CStr(argRow))).Select
        Selection.Font.ColorIndex = 3
        Selection.Font.Bold = True
        
    Range("U" & Trim(CStr(argRow))).Select
        Selection.Font.ColorIndex = 3
        
    Range("T" & Trim(CStr(argRow))).Value = "NO CONFORME"
    
    If Trim(Range("u" & Trim(CStr(argRow))).Value) = "" Then
        Range("U" & Trim(CStr(argRow))).Value = Trim(argError)
    Else
        Range("U" & Trim(CStr(argRow))).Value = Trim(Range("U" & Trim(CStr(argRow))).Value) & ", " & Trim(argError)
    End If
    Columns("U:U").EntireColumn.AutoFit
End Sub
Private Sub pColocarCorrecto(ByVal argRow As Double)
    Range("T" & Trim(CStr(argRow))).Select
        Selection.Font.Color = RGB(0, 155, 58)
        Selection.Font.Bold = True
         
    Range("T" & Trim(CStr(argRow))).Value = "CONFORME"
    
End Sub
Private Sub pColocarErrorInicio(ByVal argRow As Double, ByVal argError As String)
'Procedimiento que coloca el Error al Inicio. Esto se deber|fffd| utilizar para los errores cr|fffd|ticos
    Range("T8:T" & Trim(CStr(argRow))).Select
        Selection.Font.ColorIndex = 3
        Selection.Font.Bold = True
    Range("T" & Trim(CStr(argRow))).Value = "NO CONFORME"
    Range("U8:U" & Trim(CStr(i + 8))).Select
        Selection.Font.ColorIndex = 3
    If Trim(Range("U" & Trim(CStr(argRow))).Value) = "" Then
        Range("U" & Trim(CStr(argRow))).Value = Trim(argError)
    Else 'Se coloca el error al inicio del campo Error
        Range("U" & Trim(CStr(argRow))).Value = Trim(argError) & ", " & Trim(Range("U" & Trim(CStr(argRow))).Value)
    End If
End Sub
Function fCodCtrlOKREM(lsTipInfo As String, lsCodCtrl As String) As Boolean
    '****************************************************************************
    '* Valida si el codigo de control corresponde la la cabecera o detalle
    '* lsTipInfo :  C (Control)
    '*              D (Detalle)
    '****************************************************************************
    fCodCtrlOKREM = False
    Select Case lsTipInfo
        Case "C"
            If lsCodCtrl <> "01" Then Exit Function
        Case "D"
            If lsCodCtrl <> "02" Then Exit Function
        Case Else
            Exit Function
    End Select
    fCodCtrlOKREM = True
End Function

Function fModProcesOKREM(lsModProcess As String, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo de moneda existe
    '* lsModProces :   1 (OnLine)
    '*                 2 (Diferido)
    '********************************************************************
    fModProcesOKREM = False
    Select Case lsModProcess
        Case "1"
            lsDescrip = "OnLine"
        Case "2"
            lsDescrip = "Diferido"
        Case Else
            lsDescrip = lsModProcess
            Exit Function
    End Select
    fModProcesOKREM = True
End Function

Function fTipPersonaOKREM(lsTipPersona As String, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo persona
    '* lsTipPersona :   P (Natural)
    '*                  C (Juridica)
    '********************************************************************
    fTipPersonaOKREM = False
    Select Case lsTipPersona
        Case "C"
            lsDescrip = "Juridica"
        Case "P"
            lsDescrip = "Natural"
        Case Else
            lsDescrip = lsTipPersona
            Exit Function
    End Select
    fTipPersonaOKREM = True
End Function

Function fTipAbonoOKREM(lsTipAbono As String, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo de moneda existe
    '* lsTipAbono  :   00 (Efectivo)
    '*                 09 (Abono en Cuenta)
    '*                 11 (Cheque de Gerencia)
    '*                 99 (Interbancario)
    '********************************************************************
    fTipAbonoOKREM = False
    Select Case lsTipAbono
        Case "00"
            lsDescrip = "Efectivo"
        Case "09"
            lsDescrip = "Abon.Cta."
        Case "11"
            lsDescrip = "Chq.Ger."
        Case "99"
            lsDescrip = "Interb."
        Case Else
            lsDescrip = lsTipAbono
            Exit Function
    End Select
    fTipAbonoOKREM = True
End Function
Function fTipOperacOKREM(lsTipOperac As String, Optional ByRef lsDescrip As String) As Boolean
'********************************************************************
'* Valida si el tipo de moneda existe
'* lsTipOperac  :   C (Nota de Credito)
'*                  D (Nota de Debito)
'*                  F (Factura)
'********************************************************************
    fTipOperacOKREM = False
    Select Case Trim(lsTipOperac)
        Case "C"
            lsDescrip = "Nota Credito"
        Case "D"
            lsDescrip = "Nota Debito"
        Case "F"
            lsDescrip = "Factura"
        Case Else
            lsDescrip = lsTipOperac
            Exit Function
    End Select
    fTipOperacOKREM = True
End Function

Function fTipDocIdeOKREM(lsTipDocIde As String, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo de moneda existe
    '* lsTipDocument  : 01 (DNI)
    '*                  02 (RUC)
    '*                  03 (Carnet de Extranjeria)
    '*                  04 (Carnet de Identidad)
    '*                  05 (Pasaporte)
    '********************************************************************
    fTipDocIdeOKREM = False
    Select Case lsTipDocIde
        Case "01"
            lsDescrip = "DN"
        Case "02"
            lsDescrip = "RU"
        Case "03"
            lsDescrip = "CE"
        Case "04"
            lsDescrip = "CI"
        Case "05"
            lsDescrip = "PS"
        Case Else
            lsDescrip = lsTipDocIde
            Exit Function
    End Select
    fTipDocIdeOKREM = True
End Function

Function fProductoOKREM(lsProducto As String, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo de moneda existe
    '* lsProducto :   001 (Cta.Cte.)
    '*                002 (Cta. Ahorros)
    '********************************************************************
    fProductoOKREM = False
    Select Case lsProducto
        Case "001"
            lsDescrip = "Cta.Cte."
        Case "002"
            lsDescrip = "Cta.Aho."
        Case "007"
            lsDescrip = "Cta.CTS."
        Case Else
            lsDescrip = lsProducto
            Exit Function
    End Select
    
    fProductoOKREM = True
End Function
Function fProductoPagoOKREM(lsProducto As String, lsPago As Integer, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo de moneda existe
    '* lsProducto :   001 (Cta.Cte.)
    '*                002 (Cta. Ahorros)
    '*                007 (Cuenta CTS)
    '********************************************************************
    fProductoPagoOKREM = False
    Select Case lsProducto
        Case "001"      ''23
            If lsPago = 2 Or lsPago = 3 Then
            lsDescrip = "Cta.Cte."
            Else
            lsDescrip = lsProducto
            Exit Function
            End If
        Case "002"
            If lsPago = 2 Or lsPago = 3 Or lsPago = 0 Then
            lsDescrip = "Cta.Aho.."
            Else
            lsDescrip = lsProducto
            Exit Function
            End If
        Case "007"      ''01
            If lsPago = 1 Then
            lsDescrip = "Cta.CTS."
            Else
            lsDescrip = lsProducto
            Exit Function
            End If
        Case Else
            lsDescrip = lsProducto
            Exit Function
    End Select
    
    fProductoPagoOKREM = True
End Function

Function fMonedaOKREM(lsMoneda As String, Optional ByRef lsDescrip As String) As Boolean
    '********************************************************************
    '* Valida si el tipo de moneda existe
    '* lsMoneda :   01 (Soles)
    '*              10 (Dolares)
    '********************************************************************
    fMonedaOKREM = False
    Select Case lsMoneda
        Case "01"
            lsDescrip = "S/. "
        Case "10"
            lsDescrip = "US$."
        Case Else
            lsDescrip = lsMoneda
            Exit Function
    End Select
    fMonedaOKREM = True
End Function

Function fNroCuentaOK(ByVal lsIndBco As String, ByVal lsProducto As String, ByVal lsMoneda As String, ByVal lsOficina As String, ByRef lsCuenta As String)
'*****************************************************************************************
'* Valida el n|fffd|mero de producto-moneda-ofi-cuenta
'* lsIndBanco : 0     (Cta Interbank)
'*              1     (Cta CCI)
'* lsProducto : 001   (Cta. Cte.)
'*              002   (Cta. Ahorros) ...
'* lsMoneda   : 01    (Soles)
'*              10    (Dolares)
'* lsOficina  : Tienda IB - Agencia
'* lsCuenta   : n|fffd|mero de cuenta
'********************************************************************************************
If lsProducto = "" Then
    lsProducto = "000"
End If
    If lsIndBco = "1" Then
        fNroCuentaOK = fCuentaCCIOk(lsCuenta)
    Else
        fNroCuentaOK = fCuentaIBOK(lsProducto, lsMoneda, lsOficina & lsCuenta)
    End If
End Function
Function fCuentaCCIOk(ByRef lsCuenta As String) As Boolean
'*****************************************************************************************
'* Valida el Nro Cuenta CCI Interbancario EEE OOO CCCCCCCCCCCC DN
'* Longitud Maxima de la  cuenta CCI = 20
'* EEE              : Codigo entidad
'* OOO              : Codigo de Oficina
'* CCCCCCCCCCCC     : n|fffd|mero de Cuenta (debe de incluir producto y moneda)
'* D                : D|fffd|gito de control Entidad - Oficina
'* N                : Digito de control nro de cuenta
'*****************************************************************************************
    Dim lsEntOfic       As String
    Dim lsOficina       As String
    Dim lsNroCuenta     As String
    Dim lsCtrlEntOfi    As String
    Dim lsCtrlNroCta    As String
    Dim lsPesos         As String
    Dim liSuma1         As Integer
    Dim liSuma2         As Integer
    Dim liProducto      As Integer
    Dim i               As Integer
    
    fCuentaCCIOk = False
    
    If IsNumeric(lsCuenta) Then
        lsPesos = "121212121212121212"
        If Len(Trim((lsCuenta))) = 20 Then
            lsEntOfic = Mid(lsCuenta, 1, 6)
            lsNroCuenta = Format(Mid(lsCuenta, 7, Len(Trim((lsCuenta))) - 8), "000000000000")
            
            '***Calcula el Digito verificador para Entidad-Oficina y Nro de Cuenta *************
            liSuma1 = 0
            liSuma2 = 0
            For i = 1 To 18
                If i <= 6 Then
                    '*** Total para Entidad-Oficina
                    liProducto = CDbl(Mid(lsEntOfic & lsNroCuenta, i, 1)) * CDbl(Mid(lsPesos, i, 1))
                    If liProducto > 9 Then
                         liSuma1 = liSuma1 + CInt(Mid(Format(liProducto, "00"), 1, 1))
                         liSuma1 = liSuma1 + CInt(Mid(Format(liProducto, "00"), 2, 1))
                    Else
                         liSuma1 = liSuma1 + liProducto
                    End If
                Else
                    '*** Total para Nro de cuenta
                    liProducto = CInt(Mid(lsEntOfic & lsNroCuenta, i, 1)) * CInt(Mid(lsPesos, i, 1))
                    If liProducto > 9 Then
                         liSuma2 = liSuma2 + CInt(Mid(Format(liProducto, "00"), 1, 1))
                         liSuma2 = liSuma2 + CInt(Mid(Format(liProducto, "00"), 2, 1))
                    Else
                         liSuma2 = liSuma2 + liProducto
                    End If
                
                End If
            Next i
            
            '**** Calcula el Digito verificador para Entidad-Oficina ************
            If Mid(Format(liSuma1, "00"), 2, 1) = "0" Then
                lsCtrlEntOfi = "0"
            Else
                lsCtrlEntOfi = Str((CInt(Mid(Format(liSuma1, "00"), 1, 1)) + 1) * 10 - liSuma1)
            End If
            
            '**** Calcula el Digito verificador para Nro  Cuenta ************
            If Mid(Format(liSuma2, "00"), 2, 1) = "0" Then
                lsCtrlNroCta = "0"
            Else
                lsCtrlNroCta = Str((CInt(Mid(Format(liSuma2, "00"), 1, 1)) + 1) * 10 - liSuma2)
            End If
            
            If CInt(lsCtrlEntOfi) <> CInt(Mid(lsCuenta, Len(Trim((lsCuenta))) - 1, 1)) Or _
                CInt(lsCtrlNroCta) <> CInt(Mid(lsCuenta, Len(Trim((lsCuenta))), 1)) Then
                Exit Function
            End If
            
        Else
            Exit Function
        End If
    Else
        Exit Function
    End If
    lsCuenta = lsEntOfic & lsNroCuenta & lsCtrlEntOfi & lsCtrlNroCta
    fCuentaCCIOk = True

End Function

Function fCuentaIBOK(cProd As String, cMon As String, ByRef wcOfiCta As String) As Boolean
'*-------------------------------------------------------------------
'*  Funcion que calida cuentas Interbank
'*  cProd           Producto   (001, 002, 007)
'*  cMon            Moneda     (01 ,10)
'*  wOfiCta         Oficina(3)-Cuenta(10)
'*-------------------------------------------------------------------
    Dim cOficta     As String
    Dim lsMsg       As String
    Dim lsn|fffd|mero    As String
    Dim liOpcMod    As Byte

    cOficta = Trim(wcOfiCta)    'Almacena Oficina(3) + Cuenta(10)
    If Len(cOficta) = 13 And IsNumeric(cOficta) Then
       If (CInt(cProd) = 1 And CDbl(Right(cOficta, 10)) >= 10000000) Or _
            (CInt(cProd) = 2 And CDbl(Right(cOficta, 10)) >= 100000000) Or _
            (CInt(cProd) = 7) Then
          If Trim(Systemat(cMon, cProd, cOficta)) <> Trim(Right(cOficta, 1)) Then
             Exit Function
          End If
       Else
         lsn|fffd|mero = IIf(Left(cOficta, 3) = "100", "000", Left(cOficta, 3)) & _
                    IIf(CInt(cProd) = 2, Trim(Mid(cOficta, 6, 7)), Trim(Mid(cOficta, 7, 6)))
         Select Case CInt(cProd)
            Case 1
                liOpcMod = 8
            Case 2
                liOpcMod = 9
            Case Else
                Exit Function
         End Select
         
         If Trim(Modulo11(lsn|fffd|mero, liOpcMod, 1, False)) = Mid(Right(cOficta, 2), 1, 1) Then
             If Trim(Systemat(cMon, cProd, cOficta)) <> Right(cOficta, 1) Then
                Exit Function
             End If
          Else
            Exit Function
          End If
       End If
    Else
        Exit Function
    End If
    fCuentaIBOK = True
End Function
Function Modulo11(cn|fffd|mero As String, nOpcMod As Byte, nTipEval As Byte, lNumCtrl As Boolean)
'//---------------------------------------------------------------------------
'//FUNCION Modulo11
'//Parametros:
'//         cn|fffd|mero -> Nro. a Evaluar en Caracteres.
'//         nOpcMod -> 16 - CheckSum
'//                     9 - Ahorros
'//                     8 - Cta.Corriente
'//         nTipEval->  0 - Generar Digito de Control
'//                     1 - Comparar Digito de Control
'//         lNroCtrl-> Si desea que se envie un n|fffd|mero de control de modulo 11
'//---------------------------------------------------------------------------
    Dim aCadVeri As String
    Dim nTotLong As Integer
    Dim lRes As Boolean
    Dim nAcumDig As Integer
    Dim cNumAux As String
    Dim nAcum As Integer
    Dim IDig As Integer
    Dim nResto As Byte
    
    lRes = False
    nAcumDig = 0
    Select Case nOpcMod
       Case 16
            aCadVeri = "7654376543765432"
       Case 9
            aCadVeri = "432765432"
       Case 8
            aCadVeri = "32765432"
    End Select
    
    nTotLong = Len(aCadVeri)
    cn|fffd|mero = IIf(nTipEval = 1, Trim(cn|fffd|mero), cn|fffd|mero)
    cn|fffd|mero = PadL(StrTran(PadL(cn|fffd|mero, IIf(nTipEval = 0, nTotLong, nTotLong + 1), " "), ".", ""), IIf(nTipEval = 0, nTotLong, nTotLong + 1), " ")
    cNumAux = ""
    
    For nAcum = 1 To nTotLong
       cNumAux = cNumAux + IIf(IsNumeric(Mid(cn|fffd|mero, nAcum, 1)), Mid(cn|fffd|mero, nAcum, 1), "0")
    Next
    
    For IDig = 1 To nTotLong
        nAcumDig = nAcumDig + CInt(Mid(aCadVeri, IDig, 1)) * CInt(Mid(cNumAux, IDig, 1))
    Next
    
    nResto = nAcumDig Mod 11
    If lNumCtrl Then
       nResto = IIf(nResto = 0, 11, nResto)
    Else
       nResto = IIf(nResto = 1, 11, nResto)
       nResto = IIf(nResto <> 0, Abs(nResto - 11), nResto)
    End If
    Modulo11 = IIf(lNumCtrl, (nAcumDig * nResto), nResto)
End Function
Function Systemat(cMon As String, cProd As String, cOficta As String) As String
'//-------------------------------------------------------------------
'// Funcion que calcula el digito verificador de las cuentas  Systematics
'//-------------------------------------------------------------------
    Dim wcBanco As String
    Dim wcMoneda As String
    Dim wcProduc As String
    Dim wcCuenta As String
    Dim wcOficin As String
    Dim wcDigit As String
    Dim wcNum As String
    Dim wcPesos As String
    Dim wnSuma As Integer
    Dim wnResid As Integer
    Dim wnDifer As Integer
    Dim wnDigit As Integer

    wcBanco = "0003"
    wcMoneda = PadL(Trim(cMon), 4, "0")
    wcOficin = PadL(Left(Trim(cOficta), 3), 4, "0")
    wcProduc = PadL(Right(Trim(cProd), 10), 4, "0")
    wcCuenta = PadL(Trim(Mid(cOficta, 4, Len(cOficta) - 4)), 13, "0")
    wcNum = wcBanco & wcMoneda & wcOficin & wcProduc & wcCuenta
    wcPesos = "65432765432765432765432765432"
    wnSuma = CInt(SumaProd(wcNum, wcPesos))
    wnResid = wnSuma Mod 11
    wnDifer = 11 - wnResid
    wnDigit = IIf(wnDifer < 10, wnDifer, 0)
    wcDigit = Trim(Str(Int(wnDigit)))
    Systemat = wcDigit
End Function
Function PadL(lsCad As String, liNum As Byte, lsChar As String) As String
    If Len(lsCad) < liNum Then
        PadL = String(liNum - Len(lsCad), lsChar) & lsCad
    Else
        PadL = lsCad
    End If
End Function
Function PadR(lsCad As String, liNum As Byte, lsChar As String) As String
    If Len(lsCad) < liNum Then
        PadR = lsCad & String(liNum - Len(lsCad), lsChar)
    Else
        PadR = lsCad
    End If
End Function
Function StrTran(lsCad As String, lsIn As String, lsOut As String) As String
    Dim i As Byte
    Dim lsRes As String
    For i = 1 To Len(lsCad)
        lsRes = lsRes & IIf(Mid(lsCad, i, 1) = lsIn, lsOut, Mid(lsCad, i, 1))
    Next i
    StrTran = lsRes
End Function
Function SumaProd(cCadCta As String, cPesos As String) As String
'********************************************************
'//-------------------------------------------------------------------
'//Se utiliza para calcular los digitos verificadores de las
'//cuentas tanto antiguas como cuentas Systematics
'//-------------------------------------------------------------------
    Dim nProd, nSuma As Integer
    Dim wcCadCta As String
    Dim i As Byte
    
    nProd = 0
    nSuma = 0
    wcCadCta = PadL(cCadCta, Len(cPesos), "0")
    For i = 1 To Len(cPesos)
      nProd = CInt(Mid(wcCadCta, i, 1)) * CInt(Mid(cPesos, i, 1))
      nSuma = nSuma + nProd
    Next
    SumaProd = nSuma
End Function

 Function ObtieneFechaActual() As String
    '//-------------------------------------------------------------------
    '//Se utiliza para calcular los digitos verificadores de las
    '//cuentas tanto antiguas como cuentas Systematics
    '//-------------------------------------------------------------------
a|fffd|o = Year(Now)
mes = Format(Month(Now), "00")
dia = Format(Day(Now), "00")
hora = Format(Hour(Now), "00")
minu = Format(Minute(Now), "00")
segu = Format(Second(Now), "00")

ObtieneFechaActual = a|fffd|o & mes & dia & hora & minu & segu
End Function
 Function CuentaCaracteres(argRow As Double) As Boolean
CuentaCaracteres = True

columna = 30
Range("G" & Trim(CStr(argRow))).Select
    Selection.TextToColumns Destination:=Range("AD" & Trim(CStr(argRow))), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :=";", TrailingMinusNumbers:=True
 Do While Trim(Cells(argRow, columna).Value) <> ""
    If Not validaEmail(LCase(Trim(Cells(argRow, columna).Value))) Then
        CuentaCaracteres = False
    End If
    Cells(argRow, columna).Value = ""
    columna = columna + 1
 Loop
End Function
Function sumaTotal()
                If IsNumeric(.IMPOPERA) Then
                    'Totalizando importes  Proveedores
                    If .TIPOPERA = "D" Then
                        If .MONOPERA = "01" Then
                            liImpTotSol = liImpTotSol - (CDbl(.IMPOPERA) / 100)
                        End If
                        If .MONOPERA = "10" Then
                            liImpTotDol = liImpTotDol - (CDbl(.IMPOPERA) / 100)
                        End If
                    Else
                        If .MONOPERA = "01" Then
                            liImpTotSol = liImpTotSol + (CDbl(.IMPOPERA) / 100)
                        End If
                        If .MONOPERA = "10" Then
                            liImpTotDol = liImpTotDol + (CDbl(.IMPOPERA) / 100)
                        End If
                    End If
                
                End If
End Function
Attribute VB_Name = "UpdateControlChart"
Sub actualizarTableroControl(ByVal ruc As String, ByVal razonsocial As String, ByVal montoSoles As String, ByVal montoDolares As String)
    Dim libroDestino As Workbook
    Dim hojaDestino As Worksheet
    Dim lastUsedRow As Integer
    Dim freeRow As Integer
    Dim lastItemNumber As Integer
    Dim fechaActual As String, horaActual As String
    
    Dim rutaNueva As String
        rutaNueva = "\\ibdfs\dfs\CPD\CAMPA|fffd|A CTS MAYO 2019 DIGITAL\CUADRO DE CONTROL"
    
    Set libroDestino = Workbooks.Open(rutaNueva & "\Cuadro de Control.xlsm")
    
    Set hojaDestino = libroDestino.Worksheets("Email recepcionados")
    
    
    lastUsedRow = hojaDestino.Cells(hojaDestino.Rows.Count, "A").End(xlUp).Row
    freeRow = lastUsedRow + 1
    lastItemNumber = hojaDestino.Range("A" & lastUsedRow)
    
    a|fffd|o = Year(Now)
    mes = Format(Month(Now), "00")
    dia = Format(Day(Now), "00")
    hora = Format(Hour(Now), "00")
    minu = Format(Minute(Now), "00")
    segu = Format(Second(Now), "00")
    fechaActual = dia & "/" & mes & "/" & a|fffd|o
    horaActual = hora & ":" & minu & ":" & segu
    
    
    With hojaDestino
        .Range("A" & freeRow).Value = lastItemNumber + 1
        .Range("B" & freeRow).Value = ruc
        .Range("C" & freeRow).Value = razonsocial
        .Range("D" & freeRow).Value = "soles"
        .Range("E" & freeRow).Value = montoSoles
        .Range("F" & freeRow).Value = "d|fffd|lares"
        .Range("G" & freeRow).Value = montoDolares
        .Range("H" & freeRow).Value = fechaActual
        .Range("I" & freeRow).Value = horaActual
    End With
    
    libroDestino.Close SaveChanges:=True
End Sub

Attribute VB_Name = "editar_caratula"
Attribute VB_Base = "0{8E08CE8F-3E2A-4875-948B-32C54E1D5371}{57F70C94-63F8-4683-9DA7-445444628822}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub boton2_Click()

Dim luz, rs, r, pc, tc, ec, c, posicion As String

luz = 0

rs = razonsocial
r = ruc
pc = personacontacto
tc = telefonocontacto
ec = emailcontacto
'pr = personarecojo
'dr = dnirecojo

If conforme = True Then
c = "dio conforme"
Else
c = "no dio conforme"
End If

If rs = "" Or r = "" Or pc = "" Or tc = "" Or ec = "" Or c = "no dio conforme" Then
luz = luz + 1
End If


If luz > 0 Then

Mensaje1 = MsgBox("Por favor es obligatorio que complete todos los datos solicitados para continuar", vbInformation, "FALTAN DATOS")

ElseIf Len(Me.ruc) <> 11 Then
    MsgBox "El RUC ingresado no es v|fffd|lido", vbInformation, "RUC ERRADO"
ElseIf Left(Me.ruc, 1) <> "1" And Left(Me.ruc, 1) <> "2" Then
    MsgBox "El RUC ingresado no es v|fffd|lido", vbInformation, "RUC ERRADO"
ElseIf Len(Me.personacontacto) < 3 Then
    MsgBox "Ingrese el nombre de la persona de contacto", vbInformation, "PERSONA DE CONTACTO ERRADA"
ElseIf InStr(1, Me.emailcontacto, "@") <= 0 Then
    MsgBox "El email ingresado no es v|fffd|lido", vbInformation, "EMAIL DE CONTACTO ERRADO"
ElseIf InStr(1, Me.emailcontacto, ".") <= 0 Then
    MsgBox "El email ingresado no es v|fffd|lido", vbInformation, "EMAIL DE CONTACTO ERRADO"

Else

 Sheets("Caratula Planilla CTS").Visible = True
 Sheets("Caratula Planilla CTS").Select
 
 posicion = 2


    Range("A" & (posicion)).Value = rs
    Range("B" & (posicion)).Value = r
    Range("C" & (posicion)).Value = pc
    Range("D" & (posicion)).Value = tc
    Range("E" & (posicion)).Value = ec
    'Range("F" & (posicion)).Value = pr
   ' Range("G" & (posicion)).Value = dr
    Range("F" & (posicion)).Value = c

    
 Unload editar_caratula
 
 Worksheets(1).rbtn2.Value = True
 Sheets("Detalle CTS").Select
 Sheets("Caratula Planilla CTS").Visible = False

 Mensaje1 = MsgBox("Datos de Caratula actualizados. Continue con los siguientes pasos", vbInformation, "Actualizaci|fffd|n Exitosa")

End If

End Sub

Private Sub boton3_Click()

Dim rs, r, pc, tc, ec, pr, dr, totalSoles, totalDolares, c, posicion As String

'rs = razonsocial
'r = ruc
'pc = personacontacto
'tc = telefonocontacto
'ec = emailcontacto
'pr = personarecojo
'dr = dnirecojo

'Sheets("Detalle CTS").Select
'totalSoles = Worksheets(1).txtTotalSol.Value
'totalDolares = Worksheets(1).txtTotalDol.Value


 Sheets("Caratula Planilla CTS").Visible = True
 Sheets("Caratula Planilla CTS").Select
 
    'Range("A2:H2").Select
    'Selection.ClearContents
 
 posicion = 2
 
    editar_caratula.razonsocial = Range("A" & (posicion)).Value
    editar_caratula.ruc = Range("B" & (posicion)).Value
    editar_caratula.personacontacto = Range("C" & (posicion)).Value
    editar_caratula.telefonocontacto = Range("D" & (posicion)).Value
    editar_caratula.emailcontacto = Range("E" & (posicion)).Value
    'editar_caratula.personarecojo = Range("F" & (posicion)).Value
    'editar_caratula.dnirecojo = Range("G" & (posicion)).Value
    
If Range("F" & (posicion)).Value = "dio conforme" Then
editar_caratula.conforme = True
Else
editar_caratula.conforme = False
End If

    'Range("A" & (posicion)).Value = rs
    'Range("B" & (posicion)).Value = r
    'Range("C" & (posicion)).Value = pc
    'Range("D" & (posicion)).Value = tc
    'Range("E" & (posicion)).Value = ec
    'Range("F" & (posicion)).Value = pr
    'Range("G" & (posicion)).Value = dr
    'Range("H" & (posicion)).Value = c
    'Range("I" & (posicion)).Value = totalSoles
    'Range("J" & (posicion)).Value = totalDolares
    'Range("k" & (posicion)).Value = Format(fechadeobs3, "mm/dd/yyyy")
    
 'Unload caratula_planilla
 
 Worksheets(1).rbtn2.Value = True
 
 Sheets("Caratula Planilla CTS").Visible = False
 Sheets("Detalle CTS").Select

 'Mensaje1 = MsgBox("Ahora por favor registre el Detalle.", vbInformation, "Continuar con PASO 2")

End Sub

Private Sub CommandButton2_Click()
 Unload editar_caratula
End Sub

Private Sub CommandButton1_Click()
ActiveWorkbook.Close False
End Sub

Private Sub conforme_Click()

End Sub

Private Sub emailcontacto_Change()

End Sub

Private Sub personacontacto_Change()

End Sub

Private Sub personacontacto_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If KeyAscii <> 32 And (KeyAscii < 65 Or KeyAscii > 90) And (KeyAscii < 97 Or KeyAscii > 122) Then KeyAscii = 0
End Sub

Private Sub ruc_Change()

End Sub

Private Sub ruc_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    Select Case KeyAscii
        Case Asc("0") To Asc("9")
        Case Else
            KeyAscii = 0
    End Select

    If Len(Me.ruc) = 12 Then KeyAscii = 0
End Sub

Private Sub UserForm_queryclose(cancel As Integer, closemode As Integer)
    If closemode = 0 Then
 Mensaje1 = MsgBox("Comando inv|fffd|lido, debe usar el bot|fffd|n verde: Actualizar y Continuar", vbInformation, "Acci|fffd|n Inv|fffd|lida")
 cancel = 1
 closemode = 1
 End If
End Sub
    

' InQuest injected base64 decoded content
' {Bj{bu
' ~'"j
' 'Zt+
' ~'"j

INQUEST-PP=macro
