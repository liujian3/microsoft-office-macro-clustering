Attribute VB_Name = "InsertRowBox"
Attribute VB_Base = "0{7BD083B1-9143-4EFF-9CCA-1B23A6B6194E}{AE3CDB66-3F5C-45AD-90A3-E79657751CFD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Userform_Initialize()
SpinRC.Value = 0: SpinRE.Value = 0: SpinPC.Value = 0: SpinCO.Value = 0
SpinIN.Value = 0: SpinPF.Value = 0: SpinMK.Value = 0: SpinOT.Value = 0
End Sub
Private Sub ComButIUCancel_Click(): Unload InsertRowBox: End Sub
Private Sub ComButIUProceed_Click()

Dim NewRow As Integer
    
    NewRow = 0
    Do
    If SpinRC.Value > 0 Then Call AddRow_RC Else NewRow = -1
    NewRow = NewRow + 1: TxBxRCpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinRC.Value

    NewRow = 0
    Do
    If SpinRE.Value > 0 Then Call AddRow_RE Else NewRow = -1
    NewRow = NewRow + 1: TxBxREpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinRE.Value
    
    NewRow = 0
    Do
    If SpinPC.Value > 0 Then Call AddRow_PC Else NewRow = -1
    NewRow = NewRow + 1: TxBxPCpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinPC.Value
    
    NewRow = 0
    Do
    If SpinCO.Value > 0 Then Call AddRow_CO Else NewRow = -1
    NewRow = NewRow + 1: TxBxCOpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinCO.Value
    
    NewRow = 0
    Do
    If SpinIN.Value > 0 Then Call AddRow_IN Else NewRow = -1
    NewRow = NewRow + 1: TxBxINpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinIN.Value
    
    NewRow = 0
    Do
    If SpinPF.Value > 0 Then Call AddRow_PF Else NewRow = -1
    NewRow = NewRow + 1: TxBxPFpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinPF.Value
    
    NewRow = 0
    Do
    If SpinMK.Value > 0 Then Call AddRow_MK Else NewRow = -1
    NewRow = NewRow + 1: TxBxMKpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinMK.Value
    
    NewRow = 0
    Do
    If SpinOT.Value > 0 Then Call AddRow_OT Else NewRow = -1
    NewRow = NewRow + 1: TxBxOTpro = NewRow: Me.Repaint
    Loop Until NewRow = SpinOT.Value
    
Me.Repaint
Application.Wait Now + TimeValue("00:00:2")
Range("A6").Select
Unload InsertRowBox
MsgBox "Row Insertion complete."

End Sub

Private Sub SpinRC_Change(): TxBxRCnum = SpinRC.Value: End Sub
Private Sub SpinRE_Change(): TxBxREnum = SpinRE.Value: End Sub
Private Sub SpinPC_Change(): TxBxPCnum = SpinPC.Value: End Sub
Private Sub SpinCO_Change(): TxBxCOnum = SpinCO.Value: End Sub
Private Sub SpinIN_Change(): TxBxINnum = SpinIN.Value: End Sub
Private Sub SpinPF_Change(): TxBxPFnum = SpinPF.Value: End Sub
Private Sub SpinMK_Change(): TxBxMknum = SpinMK.Value: End Sub
Private Sub SpinOT_Change(): TxBxOTnum = SpinOT.Value: End Sub



Attribute VB_Name = "Module1"
Sub REEFGoalSeekResidual()
' copyright REFSL REEF Macro V02 13/01/2008 by John Tauwhare
' will work with LV solution > +/-0.1 currency unit
' the final Loop Until test comparator determines accuracy

Dim LVlow As Double, LVdiff As Double, LVsign As Integer, Count As Integer
LVlow = 0: LVsign = 1
Range("LVperU01").Value = 0
With Application: .ScreenUpdating = False: .StatusBar = "Calculating RLV": End With

    If (Range("Profit01").Value) < 0 Then LVsign = -1
    Range("LVperU01").Value = 0.01 * LVsign

    Do
    LVlow = Range("LVperU01").Value
    Range("LVperU01").Value = Range("LVperU01").Value * 10
    Loop Until Range("Profit01").Value * LVsign < 0
    
    Do
    Count = 0
    LVdiff = Range("LVperU01").Value - LVlow
        Do
        LVdiff = LVdiff / 2
        Range("LVperU01").Value = LVlow + LVdiff
            Count = Count + 1
            If Count = 40 Then LVsign = LVsign * -1
        Loop Until Range("Profit01").Value * LVsign > 0
    LVlow = Range("LVperU01").Value
    Range("LVperU01").Value = LVlow + LVdiff
    Application.StatusBar = LVlow
    Loop Until Abs(Range("Profit01").Value) < 1
        
    Range("LVperU01").Value = LVlow
    Application.ScreenUpdating = True
    Application.StatusBar = "RLV Calculated"
    
End Sub
Sub ShowResizeSCurveBox()

    ResizeSCurveBox.Show

End Sub
Sub Toolpacks()

    AddIns("Analysis ToolPak").Installed = True
    AddIns("Analysis ToolPak - VBA").Installed = True

End Sub
Sub BMStopWatch()

    Application.CutCopyMode = False
    Range("BMTimeStart").Value = Timer
    Range("BMLoop") = 0
    Call UnProtectALL
    For l = 1 To 3: Call BMTests: Range("BMLoop") = l: Next l
    'MsgBox "Benchmark Complete."
        
End Sub
Sub BMTests()

    Range("TestNum") = 0
        Sheets("Sensitivity").Select: Call SenTable
    Range("TestNum") = 1
        For n = 1 To 2: Call DataTableSet: Next n: Call DataTableClear
    Range("TestNum") = 2
    Sheets("InpP").Select: Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        For n = 1 To 10: Call XLGoalSeekResidual: Next n
    Range("TestNum") = 3
    Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        For n = 1 To 4: Call SetPal01: Next n
    Range("TestNum") = 4
    Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        Call SetupSCV
    Range("TestNum") = 5
    Sheets("InpP").Select: Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        For n = 1 To 5: Call REEFGoalSeekResidual: Next n
    Range("TestNum") = 6
    Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        For n = 1 To 3: Call XLGoalSeekResidual: Next n
    Range("TestNum") = 7
    Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        For n = 1 To 3: Call ResizeCsh: Next n
    Application.CutCopyMode = False
    Range("TestNum") = 8
    Sheets("InpP").Select: Range("BMElapsed").Value = Timer - Range("BMTimeStart")
        
End Sub
Sub XLGoalSeekResidual()
    'BENCHMARKversion
    Range("LVperU01").Value = 0
    Application.ScreenUpdating = False
    Application.StatusBar = "Calculating RLV"
    Range("Profit01").GoalSeek Goal:=0, ChangingCell:=Range("LVperU01")
    Application.ScreenUpdating = True
    Application.StatusBar = "RLV Calculated"
End Sub
Sub SetupSCV()
    Application.ScreenUpdating = False
    Sheets("Cash").Activate: ActiveSheet.UnProtect
    Range("SCVdata").ClearContents
    For n = 1 To Range("SCVrqd") + 126
        Range("SCVdurn") = n: Range("SCVorig").Select: Selection.Copy
        ActiveCell.Offset(n, 0).PasteSpecial Paste:=xlPasteValues
    Next n
    If Range("SwProt") = "Enable" Then ActiveSheet.Protect
    Sheets("InpP").Select
    Application.ScreenUpdating = True
End Sub
Sub ResizeCsh()
    Sheets("Cash").Activate: ActiveSheet.UnProtect
    Range("CshXtra").ClearContents: Range("CshColRef").Copy:
    Range("CshXtraCol1").Resize(1, 110).Select: ActiveSheet.Paste
End Sub

Attribute VB_Name = "Module2"
Sub AddRow_RC() 'Revenue Commercial

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_RC01").Offset(-1).EntireRow.Insert
    Range("Inp_RC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Inp_CC01").Offset(-1).EntireRow.Insert
    Range("Inp_CC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Inp_CV01").Offset(-1).EntireRow.Insert
    Range("Inp_CV01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Inp_LF01").Offset(-1).EntireRow.Insert
    Range("Inp_LF01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Inp_CS01").Offset(-1).EntireRow.Insert
    Range("Inp_CS01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_RC01").Offset(-1).EntireRow.Insert
    Range("Csh_RC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_RR01").Offset(-1).EntireRow.Insert
    Range("Csh_RR01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_CC01").Offset(-1).EntireRow.Insert
    Range("Csh_CC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_CV01").Offset(-1).EntireRow.Insert
    Range("Csh_CV01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_LF01").Offset(-1).EntireRow.Insert
    Range("Csh_LF01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_CS01").Offset(-1).EntireRow.Insert
    Range("Csh_CS01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("Work").Select
    Range("Det_RC01").Offset(-1).EntireRow.Insert
    Range("Det_RC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("InpP").Select
    Range("Inp_RC01").Offset(-2, 1).Select
    ActiveCell = "New Commercial Use"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
    
End Sub
Sub AddRow_RE() 'Revenue Residential

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_RE01").Offset(-1).EntireRow.Insert
    Range("Inp_RE01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Inp_CR01").Offset(-1).EntireRow.Insert
    Range("Inp_CR01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Inp_RS01").Offset(-1).EntireRow.Insert
    Range("Inp_RS01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_RE01").Offset(-1).EntireRow.Insert
    Range("Csh_RE01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_CR01").Offset(-1).EntireRow.Insert
    Range("Csh_CR01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    Range("Csh_RS01").Offset(-1).EntireRow.Insert
    Range("Csh_RS01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("Work").Select
    Range("Det_RE01").Offset(-1).EntireRow.Insert
    Range("Det_RE01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("InpP").Select
    Range("Inp_RE01").Offset(-2, 1).Select
    ActiveCell = "New Residential Use"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
    
End Sub
Sub AddRow_PC() 'Pre-Construction

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_PC01").Offset(-1).EntireRow.Insert
    Range("Inp_PC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_PC01").Offset(-1).EntireRow.Insert
    Range("Csh_PC01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("InpP").Select
    Range("Inp_PC01").Offset(-2, 1).Select
    ActiveCell = "New Pre-Construction"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
    
End Sub
Sub AddRow_CO() 'Construction Overall

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_CO01").Offset(-1).EntireRow.Insert
    Range("Inp_CO01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_CO01").Offset(-1).EntireRow.Insert
    Range("Csh_CO01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("InpP").Select
    Range("Inp_CO01").Offset(-2, 1).Select
    ActiveCell = "New Construction"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
    
End Sub
Sub AddRow_IN() 'Infrastructure

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_IN01").Offset(-1).EntireRow.Insert
    Range("Inp_IN01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_IN01").Offset(-1).EntireRow.Insert
    Range("Csh_IN01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("InpP").Select
    Range("Inp_CO01").Offset(-2, 1).Select
    ActiveCell = "New Construction"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
    
End Sub
Sub AddRow_PF() 'Professional Fees

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_PF01").Offset(-1).EntireRow.Insert
    Range("Inp_PF01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_PF01").Offset(-1).EntireRow.Insert
    Range("Csh_PF01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("InpP").Select
    Range("Inp_PF01").Offset(-2, 1).Select
    ActiveCell = "New Fees"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
    
End Sub
Sub AddRow_MK() 'Marketing

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_MK01").Offset(-1).EntireRow.Insert
    Range("Inp_MK01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_MK01").Offset(-1).EntireRow.Insert
    Range("Csh_MK01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("InpP").Select
    Range("Inp_MK01").Offset(-2, 1).Select
    ActiveCell = "New Marketing"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
   
End Sub
Sub AddRow_OT() 'Other Costs

    Application.ScreenUpdating = False
    Application.StatusBar = "Inserting Rows"
    Call UnProtect3
    Range("Inp_OT01").Offset(-1).EntireRow.Insert
    Range("Inp_OT01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)

    Sheets("Cash").Select
    Range("Csh_OT01").Offset(-1).EntireRow.Insert
    Range("Csh_OT01").Offset(-1).EntireRow.Select
    Selection.Copy ActiveCell(Up)
    
    Sheets("InpP").Select
    Range("Inp_OT01").Offset(-2, 1).Select
    ActiveCell = "New Other"
    Call Protect3
    Application.StatusBar = "Insertion Completed"
    Application.ScreenUpdating = True
   
End Sub
Sub ShowInsertRowBox()

    InsertRowBox.Show

End Sub
Sub ShowResizeCashBox()

    ResizeCashBox.Show

End Sub
Sub ProtectALL()

    If Range("SwProt") = "Enable" Then
    Application.ScreenUpdating = False
    Sheets("Appraisal").Activate: ActiveSheet.Protect
    Sheets("Annual").Activate: ActiveSheet.Protect
    Sheets("Sensitivity").Activate: ActiveSheet.Protect
    Sheets("InpG").Activate: ActiveSheet.Protect
    Sheets("InpP").Activate: ActiveSheet.Protect
    Sheets("Cash").Activate: ActiveSheet.Protect
    Sheets("Work").Activate: ActiveSheet.Protect
    Sheets("InpP").Activate
    Application.ScreenUpdating = True
    MsgBox "All sheets are protected."
    Else: MsgBox "Protection is disabled."
    End If

End Sub
Sub Protect3()

    If Range("SwProt") = "Enable" Then _
    Sheets("Work").Activate: ActiveSheet.Protect: Sheets("Cash").Activate: ActiveSheet.Protect: Sheets("InpP").Activate: ActiveSheet.Protect

End Sub
Sub UnProtectALL()

    If Range("SwProt") = "Enable" Then
    Application.ScreenUpdating = False
    Sheets("Appraisal").Activate: ActiveSheet.UnProtect
    Sheets("Annual").Activate: ActiveSheet.UnProtect
    Sheets("Sensitivity").Activate: ActiveSheet.UnProtect
    Sheets("InpG").Activate: ActiveSheet.UnProtect
    Sheets("InpP").Activate: ActiveSheet.UnProtect
    Sheets("Cash").Activate: ActiveSheet.UnProtect
    Sheets("Work").Activate: ActiveSheet.UnProtect
    Sheets("InpP").Activate
    Application.ScreenUpdating = True
'    MsgBox "All sheets are unprotected."
'    Else: MsgBox "Unprotection is disabled."
    End If

End Sub
Sub UnProtect3()

    If Range("SwProt") = "Enable" Then _
    Sheets("Work").Activate: ActiveSheet.UnProtect: Sheets("Cash").Activate: ActiveSheet.UnProtect: Sheets("InpP").Activate: ActiveSheet.UnProtect

End Sub
Attribute VB_Name = "Module3"
Sub SenTable()
    
Dim n As Integer, LV As Double
Range("Sen_Index") = 0: Range("RLV_Flag") = 0
If Range("Sen_Err").Value > 0 Then End
If Range("DatTabClear") = 1 Then Call DataTableClear

If Range("SwProt") = "Enable" Then ActiveSheet.UnProtect
Range("Sen_Tab").ClearContents
Application.ScreenUpdating = False
Range("Sen_Base").Select: Selection.Copy
ActiveCell.Offset(0, -11).PasteSpecial Paste:=xlPasteValues

For n = -2 To 2: Range("Sen_Index") = n
    Range("Sen_Out").Select: Selection.Copy
    ActiveCell.Offset(0, n - 4).PasteSpecial Paste:=xlPasteValues
    LV = Range("LVperU01").Value
    Call REEFGoalSeekResidual
    Range("Sen_RLV01").Select: Selection.Copy
    ActiveCell.Offset(0, n - 4).PasteSpecial Paste:=xlPasteValues
    Range("LVperU01").Value = LV
    With Application: .ScreenUpdating = True: .ScreenUpdating = False: End With
Next n

If Range("DatTabReset") = 1 Then Call DataTableSet
Range("Sen_Index") = 0: Range("A27").Select
With Application: .ScreenUpdating = True: .CutCopyMode = False: End With
' MsgBox "Results Table Updated."
If Range("SwProt") = "Enable" Then ActiveSheet.Protect

End Sub
Sub DataTableSet()
    
Dim r As Integer, c As Integer
Range("Sen_Index") = 0: Range("RLV_Flag") = 0
r = Range("DatRowIndex") + 6: c = Range("DatColIndex") + 6
If r = c Then End
    
If Range("SwProt") = "Enable" Then ActiveSheet.UnProtect
Application.ScreenUpdating = False
Range("DatTab").Table Range("J" & r), Range("J" & c)
Call DataTableFormat
Range("A37").Select
With Application: .ScreenUpdating = True: .CutCopyMode = False: End With
' MsgBox "Data Table Reset."
If Range("SwProt") = "Enable" Then ActiveSheet.Protect
    
End Sub
Sub DataTableFormat()
    
Dim n As Integer
n = Range("SenRsltFmt").Value: Range("FmtA" & n).Copy
Range("DatTabVout").PasteSpecial Paste:=xlPasteFormats
n = Range("DatRowGBP").Value: Range("FmtB" & n).Copy
Range("DatTabRow").PasteSpecial Paste:=xlPasteFormats
n = Range("DatColGBP").Value: Range("FmtB" & n).Copy
Range("DatTabCol").PasteSpecial Paste:=xlPasteFormats
        
End Sub
Sub DataTableClear()
    
If Range("SwProt") = "Enable" Then ActiveSheet.UnProtect
Range("DatTabVals").ClearContents: Range("A31").Select
If Range("SwProt") = "Enable" Then ActiveSheet.Protect
    
End Sub
Sub RLVTable()
    
Dim r As Integer, c As Integer, LV As Double
Range("Sen_Index") = 0: Range("RLV_Flag") = 0
If Range("RLV_Err") = 1 Then End
Call RLVTableClear
If Range("DatTabClear") = 1 Then DataTableClear

If Range("SwProt") = "Enable" Then ActiveSheet.UnProtect
Call RLVTableFormat
Application.ScreenUpdating = False
Range("Sen_Base").Select: Selection.Copy
ActiveCell.Offset(0, -11).PasteSpecial Paste:=xlPasteValues
Range("RLV_Flag") = 1: LV = Range("LVperU01").Value

For c = -2 To 2: Range("RLV_IndxC") = c
    For r = -2 To 2: Range("RLV_IndxR") = r
        Call REEFGoalSeekResidual
        Range("RLV_Out").Select: Selection.Copy
        ActiveCell.Offset(c + 0, r - 4).PasteSpecial Paste:=xlPasteValues
        With Application: .ScreenUpdating = True: .ScreenUpdating = False: End With
    Next r
Next c

Range("LVperU01") = LV: Range("RLV_Flag") = 0
If Range("DatTabReset") = 1 Then Call DataTableSet
Range("A41").Select
With Application: .ScreenUpdating = True: .CutCopyMode = False: End With
MsgBox "RLV Table Reset."
If Range("SwProt") = "Enable" Then ActiveSheet.Protect

End Sub
Sub RLVTableFormat()
    
Dim n As Integer
    Range("RLV_Row").Select
    If Range("RLVRowGBP") = 0 Then Selection.NumberFormat = "0.0000%" Else Selection.NumberFormat = "0.00"
    Range("RLV_Col").Select
    If Range("RLVColGBP") = 0 Then Selection.NumberFormat = "0.0000%" Else Selection.NumberFormat = "0.00"
    
End Sub
Sub RLVTableClear()
    
    If Range("SwProt") = "Enable" Then ActiveSheet.UnProtect
    Range("RLV_Tab").ClearContents: Range("A41").Select
    If Range("SwProt") = "Enable" Then ActiveSheet.Protect
    
End Sub
Sub RecalcAuto()
Application.Calculation = 1
End Sub
Sub RecalcSemiAuto()
Application.Calculation = 2
End Sub
Sub RecalcManual()
Application.Calculation = 3
End Sub
Sub CalculateFull()
Application.CalculateFullRebuild
End Sub
Sub FixFile()
' use after crashing out of a macro
Application.StatusBar = "Sensitivity Sheet Fixed"
Range("Sen_Index") = 0
Range("Sen_Change").ClearContents
Range("Sen_Tab").ClearContents
Range("DatTabVals").ClearContents
Range("RLV_Flag") = 0
Range("RLV_Tab").ClearContents
Range("A1").Select
With Application: .ScreenUpdating = True: .CutCopyMode = False: End With
If Range("SwProt") = "Enable" Then ActiveSheet.Protect
MsgBox "You may need to reinstate Main Site cost input."

End Sub



Attribute VB_Name = "Module4"
Sub SetPal01()

 With ActiveWorkbook
    .Colors(1) = RGB(0, 0, 0)
    .Colors(2) = RGB(255, 255, 255)
    .Colors(3) = RGB(0, 100, 225)
    .Colors(4) = RGB(200, 255, 170)
    .Colors(5) = RGB(25, 25, 255)
    .Colors(6) = RGB(221, 221, 221)
    .Colors(7) = RGB(102, 0, 255)
    .Colors(8) = RGB(180, 230, 255)
    .Colors(9) = RGB(128, 0, 0)
    .Colors(10) = RGB(0, 0, 200)
    .Colors(11) = RGB(0, 0, 150)
    .Colors(12) = RGB(0, 255, 0)
    .Colors(13) = RGB(255, 255, 205)
    .Colors(14) = RGB(0, 175, 140)
    .Colors(15) = RGB(150, 200, 55)
    .Colors(16) = RGB(40, 110, 150)
    .Colors(33) = RGB(200, 255, 150)
    .Colors(34) = RGB(205, 235, 255)
    .Colors(35) = RGB(220, 255, 150)
    .Colors(36) = RGB(220, 255, 150)
    .Colors(37) = RGB(190, 250, 240)
    .Colors(38) = RGB(255, 153, 204)
    .Colors(39) = RGB(230, 240, 235)
    .Colors(40) = RGB(255, 255, 0)
    .Colors(41) = RGB(150, 255, 140)
    .Colors(42) = RGB(100, 255, 255)
    .Colors(43) = RGB(220, 255, 150)
    .Colors(44) = RGB(255, 204, 102)
    .Colors(45) = RGB(255, 153, 0)
    .Colors(46) = RGB(255, 0, 0)
    .Colors(47) = RGB(240, 0, 100)
    .Colors(48) = RGB(65, 135, 55)
    .Colors(49) = RGB(190, 190, 190)
    .Colors(50) = RGB(221, 221, 221)
    .Colors(51) = RGB(0, 50, 100)
    .Colors(52) = RGB(25, 120, 200)
    .Colors(53) = RGB(153, 51, 0)
    .Colors(54) = RGB(180, 230, 255)
    .Colors(55) = RGB(255, 235, 0)
    .Colors(56) = RGB(110, 200, 220)
End With
'MsgBox "The colour palette for CREEK is set to DEFAULT."
    
End Sub
Attribute VB_Name = "Module5"
Sub PrintInpP()
Attribute PrintInpP.VB_Description = "Macro recorded 17/09/2009 by John"
Attribute PrintInpP.VB_ProcData.VB_Invoke_Func = " \n14"

    ActiveSheet.PageSetup.PrintArea = "PrtInpP"
    With ActiveSheet.PageSetup
        .Orientation = xlLandscape
        .FitToPagesWide = 1
        .FitToPagesTall = False
    End With
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True
End Sub


Attribute VB_Name = "ResizeCashBox"
Attribute VB_Base = "0{15CACF08-5236-41DC-B291-90669220663B}{BD64FC78-A89E-4CD2-BE14-5A71FFD0DDE7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub TxBxColsNow_Click()

End Sub

Private Sub Userform_Initialize()

TxBxColsRqdnum = Range("CshColsRqd")
TxBxColsNownum = Range("CshCols")
TxBxResizenum = WorksheetFunction.Max(36, Range("CshColsRqd"))
SpinResize = TxBxResizenum
SpinResize.Min = TxBxResizenum

End Sub

Private Sub SpinResize_Change(): TxBxResizenum = SpinResize.Value: End Sub

Private Sub ComButIUCancel_Click(): Unload ResizeCashBox: End Sub

Private Sub ComButIUProceed_Click()

    Sheets("Cash").Select
    If Range("SwProt") = "Enable" Then Sheets("Cash").Activate: ActiveSheet.UnProtect
    Range("CshXtra").ClearContents
    If TxBxResizenum > 36 Then
        Range("CshColRef").Copy
        Range("CshXtraCol1").Resize(1, TxBxResizenum - 36).Select
        ActiveSheet.Paste
    End If
    If Range("SwProt") = "Enable" Then Sheets("Cash").Activate: ActiveSheet.Protect
    Application.CutCopyMode = False: Unload ResizeCashBox
    MsgBox "Cash columns are reset.": Range("A1").Select: Sheets("InpP").Select
           
End Sub

Attribute VB_Name = "ResizeSCurveBox"
Attribute VB_Base = "0{53BE2878-1193-418B-AEFC-AFCB672664B8}{F69A24D4-DC2E-4A05-BCDE-FE1B70738413}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub TxBxColsNow_Click()

End Sub

Private Sub TxBxMinMax_Click()

End Sub

Private Sub Userform_Initialize()

TxBxColsRqdnum = Range("SCVrqd")
TxBxColsNownum = Range("SCVset")
TxBxResizenum = Range("SCVrqd")
SpinResize = TxBxResizenum
SpinResize.Min = TxBxResizenum

End Sub

Private Sub SpinResize_Change(): TxBxResizenum = SpinResize.Value: End Sub

Private Sub ComButIUCancel_Click(): Unload ResizeSCurveBox: End Sub

Private Sub ComButIUProceed_Click()
    
Application.ScreenUpdating = False: Sheets("Cash").Select
If Range("SwProt") = "Enable" Then ActiveSheet.UnProtect
Range("SCVdata").ClearContents
For n = 1 To TxBxResizenum
    Range("SCVdurn") = n
    Range("SCVorig").Select: Selection.Copy
    ActiveCell.Offset(n, 0).PasteSpecial Paste:=xlPasteValues
Next n
Application.CutCopyMode = False: Range("A1").Select
If Range("SwProt") = "Enable" Then ActiveSheet.Protect
Unload ResizeSCurveBox: Sheets("InpP").Select
Application.ScreenUpdating = True: MsgBox "S-Curve data has been reset."

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "SplashScreen"
Attribute VB_Base = "0{BE74B1F8-E967-463F-A177-0EF143DE5CA5}{65548FE2-BC28-4643-9522-9E7A99C6A2B2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub Label1_Click()

End Sub

Private Sub Label2_Click()

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

SplashScreen.Show vbModeless
If Application.Version < 12 Then Call Toolpacks
Application.Wait Now + TimeValue("00:00:2")
Unload SplashScreen

End Sub


INQUEST-PP=macro
