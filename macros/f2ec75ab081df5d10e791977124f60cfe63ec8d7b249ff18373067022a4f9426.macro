Attribute VB_Name = "Module1"
Sub StartFromBeginning()
Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:="ebrd1"
Call HideAll
Call PrepareIntroForStart
Call PrepareEvCriteriaForStart
ActiveWorkbook.Protect Password:="ebrd1"
Application.ScreenUpdating = True
End Sub
Private Sub CallTheFirstPartOfTheProcess()
Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:="ebrd1"
Call HideAll
Call IntroTabCheck
If Worksheets("Intro").Cells(9, 2) = "" Then GoTo Abort
If Worksheets("Intro").Cells(7, 1) = "" Or Worksheets("Intro").Cells(7, 8) = "" Then GoTo Abort
If Worksheets("Intro").Cells(7, 1).Value < 0 Or Worksheets("Intro").Cells(7, 1).Value > 1 Then GoTo Abort
If Worksheets("Intro").Cells(43, 3) <> "1" Then GoTo Abort
If Worksheets("Intro").Cells(50, 2) <> 55 Or Worksheets("Intro").Cells(50, 5) <> 66 Or Worksheets("Intro").Cells(50, 8) <> 77 Then GoTo Abort
Call AfterIntroTab
Abort:
ActiveWorkbook.Protect Password:="ebrd1"
Application.ScreenUpdating = True
End Sub
Sub CallTheSecondPartOfTheProcess()
Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:="ebrd1"
Call EvaluationCriteriaStep
If Worksheets("Evaluation criteria").Cells(21, 5) <> "" And Worksheets("Evaluation criteria").Cells(41, 2) <> 100 Then MsgBox ("Please either delete the weight of criterion (a) (cell B5) or apply the threshold to criterion (a) in the Additional Information table (cell E21)")
If Worksheets("Evaluation criteria").Cells(22, 5) <> "" And Worksheets("Evaluation criteria").Cells(42, 5) <> 100 Then MsgBox ("Please either delete the weight of criterion (d) (cell E12) or apply the threshold to criterion (d) in the Additional Information table (cell E22)")
If Worksheets("Evaluation criteria").Cells(40, 2) <> 100 Or Worksheets("Evaluation criteria").Cells(41, 2) <> 100 Or Worksheets("Evaluation criteria").Cells(42, 2) <> 100 Or Worksheets("Evaluation criteria").Cells(41, 5) <> 100 Or Worksheets("Evaluation criteria").Cells(42, 5) <> 100 Or Worksheets("Evaluation criteria").Cells(15, 15) <> 789 Then GoTo ExitAllPath
Call LockCellsInEvCriteriaTab
Call DeleteFirmsExpertsAndTabs
Call ClearRows
Call MacroToPopulateRows
Call FillExpertsFirmsAndEvaluators
Call UpdateThresholdsTab
Call UpdateSummaryTab
Worksheets("Ev 1").Activate
ExitAllPath:
ActiveWorkbook.Protect Password:="ebrd1"
Application.ScreenUpdating = True
End Sub
Sub HideAll()
Application.ScreenUpdating = False
NumberOfTabs = ActiveWorkbook.Worksheets.Count
For I = 2 To NumberOfTabs
Worksheets(I).Visible = False
Next I
Application.ScreenUpdating = True
End Sub
Sub PrepareIntroForStart()
Application.ScreenUpdating = False
Set Intro = Worksheets("Intro")
Set EvCriteria = Worksheets("Evaluation criteria")
Intro.Unprotect Password:="ebrd1"

Intro.Range(Intro.Cells(13, 2), Intro.Cells(42, 3)).Locked = False
    With Intro.Range(Intro.Cells(13, 2), Intro.Cells(42, 3)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

Intro.Range(Intro.Cells(13, 6), Intro.Cells(42, 6)).Locked = False
    With Intro.Range(Intro.Cells(13, 6), Intro.Cells(42, 6)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

Intro.Range(Intro.Cells(13, 9), Intro.Cells(42, 9)).Locked = False
    With Intro.Range(Intro.Cells(13, 9), Intro.Cells(42, 9)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

For I = 1 To 9
If I = 2 Or I = 6 Or I = 9 Then
Intro.Cells(4, I).Locked = False
    With Intro.Cells(4, I).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End If
Next I

Intro.Cells(7, 1).Locked = False
    With Intro.Cells(7, 1).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Intro.Cells(7, 8).Locked = False
    With Intro.Cells(7, 8).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

Intro.Range(Intro.Cells(9, 2), Intro.Cells(9, 10)).Locked = False
    With Intro.Range(Intro.Cells(9, 2), Intro.Cells(9, 10)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

Intro.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub PrepareEvCriteriaForStart()
Application.ScreenUpdating = False
Set EvCriteria = Worksheets("Evaluation criteria")
EvCriteria.Unprotect Password:="ebrd1"

EvCriteria.Range(EvCriteria.Cells(6, 1), EvCriteria.Cells(9, 2)).Locked = False
    With EvCriteria.Range(EvCriteria.Cells(6, 1), EvCriteria.Cells(9, 2)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
   
EvCriteria.Range(EvCriteria.Cells(6, 4), EvCriteria.Cells(9, 5)).Locked = False
    With EvCriteria.Range(EvCriteria.Cells(6, 4), EvCriteria.Cells(9, 5)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
EvCriteria.Range(EvCriteria.Cells(13, 1), EvCriteria.Cells(17, 2)).Locked = False
    With EvCriteria.Range(EvCriteria.Cells(13, 1), EvCriteria.Cells(17, 2)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
   
EvCriteria.Range(EvCriteria.Cells(13, 4), EvCriteria.Cells(16, 5)).Locked = False
    With EvCriteria.Range(EvCriteria.Cells(13, 4), EvCriteria.Cells(16, 5)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
EvCriteria.Range(EvCriteria.Cells(21, 5), EvCriteria.Cells(22, 5)).Locked = False
    With EvCriteria.Range(EvCriteria.Cells(21, 5), EvCriteria.Cells(22, 5)).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
EvCriteria.Cells(5, 2).Locked = False
EvCriteria.Cells(5, 5).Locked = False
EvCriteria.Cells(12, 2).Locked = False
EvCriteria.Cells(12, 5).Locked = False
    With EvCriteria.Cells(5, 2).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    With EvCriteria.Cells(5, 5).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    With EvCriteria.Cells(12, 2).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    With EvCriteria.Cells(12, 5).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

EvCriteria.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub IntroTabCheck()
Application.ScreenUpdating = False
Set Intro = Worksheets("Intro")
Set EvTab = Worksheets("Ev 1")

Intro.Unprotect Password:="ebrd1"

Intro.Cells(50, 2) = ""
Intro.Cells(50, 5) = ""
Intro.Cells(50, 8) = ""

Experts = Intro.Range("B4")
Firms = Intro.Range("F4")
Evaluators = Intro.Range("I4")

If Experts = "" Then
    MsgBox ("Fill in the number of experts")
    GoTo ExitSubPath
End If

If Firms = "" Then
    MsgBox ("Fill in the number of firms/consortiums")
    GoTo ExitSubPath
End If

If Evaluators = "" Then
    MsgBox ("Fill in the number of evaluators")
    GoTo ExitSubPath
End If

If Intro.Cells(9, 2) = "" Then
    MsgBox ("Please enter the project title")
    GoTo ExitSubPath
End If

ExpertWeights = Intro.Cells(43, 3).Value
If ExpertWeights <> "1" Then
    MsgBox ("Sum of expert weights should equal 100%")
    GoTo ExitSubPath
End If

TechPropWeight = Intro.Cells(7, 1).Value
TholdValue = Intro.Cells(7, 8).Value
If TechPropWeight = "" Then
    MsgBox ("Please fill in the weight of technical properties")
    GoTo ExitSubPath
End If

If TechPropWeight < 0 Or TechPropWeight > 1 Then
    MsgBox ("The weight of technical properties should be between 0% and 100%")
    GoTo ExitSubPath
End If

If TholdValue = "" Then
    MsgBox ("Please fill in the threshold value")
    GoTo ExitSubPath
End If

LastRowOfExpertsTable = 12 + Experts
LastRowOfExpertNames = Intro.Cells(12, 2).End(xlDown).Row
LastRowOfExpertWeights = Intro.Cells(12, 3).End(xlDown).Row
If LastRowOfExpertsTable <> LastRowOfExpertNames Or LastRowOfExpertsTable <> LastRowOfExpertWeights Or LastRowOfExpertNames <> LastRowOfExpertWeights Then
    MsgBox ("Please make sure that the number of experts matches the number of expert names in the table")
    GoTo ExitSubPath
End If
For I = 12 To LastRowOfExpertsTable
If Intro.Cells(I, 2) = "" Or Intro.Cells(I, 3) = "" Then
MsgBox ("Fill in the highlighted cells in the Intro tab")
GoTo ExitSubPath
End If
Next I

Intro.Cells(50, 2) = 55

LastRowOfFirmsTable = 12 + Firms
LastRowOfFirmNames = Intro.Cells(12, 6).End(xlDown).Row
If LastRowOfFirmsTable <> LastRowOfFirmNames Then
    MsgBox ("Please make sure that the number of firms matches the number of firm names in the table")
    GoTo ExitSubPath
End If
For I = 12 To LastRowOfFirmsTable
If Intro.Cells(I, 6) = "" Then
MsgBox ("Fill in the highlighted cells in the Intro tab")
GoTo ExitSubPath
End If
Next I

Intro.Cells(50, 5) = 66

LastRowOfEvaluatorsTable = 12 + Evaluators
LastRowOfEvaluatorNames = Intro.Cells(12, 9).End(xlDown).Row
If LastRowOfEvaluatorsTable <> LastRowOfEvaluatorNames Then
    MsgBox ("Please make sure that the number of evaluators matches the number of evaluator names in the table")
    GoTo ExitSubPath
End If
For I = 12 To LastRowOfEvaluatorsTable
If Intro.Cells(I, 9) = "" Then
MsgBox ("Fill in the highlighted cells in the Intro tab")
GoTo ExitSubPath
End If
Next I

Intro.Cells(50, 8) = 77
ExitSubPath:
Intro.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub AfterIntroTab()
Application.ScreenUpdating = False
Set Intro = Worksheets("Intro")
Set EvCriteria = Worksheets("Evaluation criteria")
Intro.Unprotect Password:="ebrd1"

Intro.Range(Intro.Cells(13, 2), Intro.Cells(42, 3)).Locked = True
    With Intro.Range(Intro.Cells(13, 2), Intro.Cells(42, 3)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With

Intro.Range(Intro.Cells(13, 6), Intro.Cells(42, 6)).Locked = True
    With Intro.Range(Intro.Cells(13, 6), Intro.Cells(42, 6)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With

Intro.Range(Intro.Cells(13, 9), Intro.Cells(42, 9)).Locked = True
    With Intro.Range(Intro.Cells(13, 9), Intro.Cells(42, 9)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With

For I = 1 To 9
If I = 2 Or I = 6 Or I = 9 Then
Intro.Cells(4, I).Locked = True
    With Intro.Cells(4, I).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
End If
Next I

Intro.Cells(7, 1).Locked = True
    With Intro.Cells(7, 1).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With

Intro.Cells(7, 8).Locked = True
    With Intro.Cells(7, 8).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With

Intro.Range(Intro.Cells(9, 2), Intro.Cells(9, 10)).Locked = True
    With Intro.Range(Intro.Cells(9, 2), Intro.Cells(9, 10)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With

EvCriteria.Visible = True
EvCriteria.Activate
EvCriteria.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False

Intro.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub EvaluationCriteriaStep()
Application.ScreenUpdating = False
Set EvCriteria = Worksheets("Evaluation criteria")
EvCriteria.Visible = True
EvCriteria.Unprotect Password:="ebrd1"

EvCriteria.Cells(15, 15) = ""

SumOfCriteria = EvCriteria.Cells(5, 2).Value + EvCriteria.Cells(5, 5).Value + EvCriteria.Cells(12, 2).Value + EvCriteria.Cells(12, 5).Value
If SumOfCriteria <> "1" Then
    MsgBox ("Total weight of the assessment criteria should equal 100%")
    GoTo ExitSubPath
End If

CheckCat1 = EvCriteria.Cells(10, 2).Value
If CheckCat1 <> "1" And CheckCat1 <> "" Then
    MsgBox ("Total weight of the subcriteria of the criterion (a) should equal 100%")
    GoTo ExitSubPath
End If

CheckCat2 = EvCriteria.Cells(10, 5).Value
If CheckCat2 <> "1" Then
    MsgBox ("Total weight of the subcriteria of the criterion (b) should equal 100%")
    GoTo ExitSubPath
End If

CheckCat3 = EvCriteria.Cells(18, 2).Value
If CheckCat3 <> "1" Then
    MsgBox ("Total weight of the subcriteria of the criterion (c) should equal 100%")
    GoTo ExitSubPath
End If

CheckCat4 = EvCriteria.Cells(17, 5).Value
If CheckCat4 <> "1" And CheckCat4 <> "" Then
    MsgBox ("Total weight of the subcriteria of the criterion (d) should equal 100%")
    GoTo ExitSubPath
End If

For I = 6 To 9
If EvCriteria.Cells(I, 1) <> "" And EvCriteria.Cells(I, 2) = "" Then
    MsgBox ("Please fill in the weight in the highlighted cell of the criterion (a) table")
    GoTo ExitSubPath
End If
If EvCriteria.Cells(I, 1) = "" And EvCriteria.Cells(I, 2) <> "" Then
    MsgBox ("Please fill in the subcriteria in the highlighted cell of the criterion (a) table")
    GoTo ExitSubPath
End If
Next I

If EvCriteria.Cells(5, 2) <> "" And EvCriteria.Cells(6, 1) = "" And EvCriteria.Cells(6, 2) = "" Then
    MsgBox ("Please add at least one subcriterion for criterion (a)")
    GoTo ExitSubPath
End If

If EvCriteria.Cells(12, 5) <> "" And EvCriteria.Cells(13, 4) = "" And EvCriteria.Cells(13, 5) = "" Then
    MsgBox ("Please add at least one subcriterion for criterion (d)")
    GoTo ExitSubPath
End If

For I = 5 To 9
If EvCriteria.Cells(I, 4) <> "" And EvCriteria.Cells(I, 5) = "" Then
    MsgBox ("Please fill in the weight in the highlighted cell of the criterion (b) table")
    GoTo ExitSubPath
End If
If EvCriteria.Cells(I, 4) = "" And EvCriteria.Cells(I, 5) <> "" Then
    MsgBox ("Please fill in the subcriteria in the highlighted cell of the criterion (b) table")
    GoTo ExitSubPath
End If
Next I


For I = 12 To 16
If EvCriteria.Cells(I, 1) <> "" And EvCriteria.Cells(I, 2) = "" Then
    MsgBox ("Please fill in the weight in the highlighted cell of the criterion (c) table")
    GoTo ExitSubPath
End If
If EvCriteria.Cells(I, 1) = "" And EvCriteria.Cells(I, 2) <> "" Then
    MsgBox ("Please fill in the subcriteria in the highlighted cell of the criterion (c) table")
    GoTo ExitSubPath
End If
Next I

For I = 13 To 16
If EvCriteria.Cells(I, 4) <> "" And EvCriteria.Cells(I, 5) = "" Then
    MsgBox ("Please fill in the weight in the highlighted cell of the criterion (d) table")
    GoTo ExitSubPath
End If
If EvCriteria.Cells(I, 4) = "" And EvCriteria.Cells(I, 5) <> "" Then
    MsgBox ("Please fill in the subcriteria in the highlighted cell of the criterion (d) table")
    GoTo ExitSubPath
End If
Next I

If EvCriteria.Cells(17, 1) <> "" And EvCriteria.Cells(17, 2) = "" Then
    MsgBox ("Please fill in the weight in the highlighted cell of the criterion (c) table")
    GoTo ExitSubPath
End If
If EvCriteria.Cells(17, 1) = "" And EvCriteria.Cells(17, 2) <> "" Then
    MsgBox ("Please fill in the subcriteria in the highlighted cell of the criterion (c) table")
    GoTo ExitSubPath
End If

If EvCriteria.Cells(21, 5) = "" Or EvCriteria.Cells(22, 5) = "" Then
    MsgBox ("Please choose a value in the dropdown menu of the highlighted cell of the additional information table")
    GoTo ExitSubPath
End If

EvCriteria.Cells(15, 15) = 789
ExitSubPath:
EvCriteria.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub LockCellsInEvCriteriaTab()
Application.ScreenUpdating = False
Set EvCriteria = Worksheets("Evaluation criteria")
EvCriteria.Unprotect Password:="ebrd1"

EvCriteria.Range(EvCriteria.Cells(5, 1), EvCriteria.Cells(9, 2)).Locked = True
    With EvCriteria.Range(EvCriteria.Cells(5, 1), EvCriteria.Cells(9, 2)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
   
EvCriteria.Range(EvCriteria.Cells(5, 4), EvCriteria.Cells(9, 5)).Locked = True
    With EvCriteria.Range(EvCriteria.Cells(5, 4), EvCriteria.Cells(9, 5)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    
EvCriteria.Range(EvCriteria.Cells(12, 1), EvCriteria.Cells(17, 2)).Locked = True
    With EvCriteria.Range(EvCriteria.Cells(12, 1), EvCriteria.Cells(17, 2)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
   
EvCriteria.Range(EvCriteria.Cells(12, 4), EvCriteria.Cells(16, 5)).Locked = True
    With EvCriteria.Range(EvCriteria.Cells(12, 4), EvCriteria.Cells(16, 5)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
 
EvCriteria.Range(EvCriteria.Cells(21, 5), EvCriteria.Cells(22, 5)).Locked = True
    With EvCriteria.Range(EvCriteria.Cells(21, 5), EvCriteria.Cells(22, 5)).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
 
EvCriteria.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub DeleteFirmsExpertsAndTabs()
Application.ScreenUpdating = False
NumberOfTabs = Worksheets.Count
Application.DisplayAlerts = False
For I = 1 To NumberOfTabs
NumberOfTabs = ActiveWorkbook.Worksheets.Count
abc = Worksheets(4).Name
If Worksheets(4).Name <> "Thresholds" And Worksheets(4).Name <> "SUMMARY" And Worksheets(4).Name <> "Intro" And Worksheets(4).Name <> "Ev 1" And Worksheets(4).Name <> "Evaluation criteria" Then Worksheets(4).Delete

Next I
Application.DisplayAlerts = True

Set Intro = Worksheets("Intro")
Set EvTab = Worksheets("Ev 1")
EvTab.Visible = True
EvTab.Unprotect "ebrd1"

Experts = Intro.Range("B4")
Firms = Intro.Range("F4")
Evaluators = Intro.Range("I4")

For I = 15 To 40
If EvTab.Cells(I, 1).Value = 2 Then
HeaderRowForExpert1 = I
GoTo ProceedToDeletingRows
End If
Next I

ProceedToDeletingRows:
FirstBlank = EvTab.Range("D" & HeaderRowForExpert1).End(xlDown).Row
For I = 15 To FirstBlank
If EvTab.Cells(I, 1) <> 3 Then GoTo NextI
If EvTab.Cells(I, 1) = 3 Then
    RowThatINeed = I
    GoTo NextStep1
NextI:
End If
Next I

On Error GoTo TryToDeleteColumns
NextStep1:
EvTab.Range(EvTab.Cells(RowThatINeed, 1), EvTab.Cells(FirstBlank, 10)).EntireRow.Delete

TryToDeleteColumns:
FirstBlank = EvTab.Cells(10, Columns.Count).End(xlToLeft).Column
If FirstBlank = 7 Then GoTo FinishSub
For I = 5 To FirstBlank
If EvTab.Cells(1, I) <> 2 Then GoTo NextI1
If EvTab.Cells(1, I) = 2 Then
    ColumnThatINeed = I
    GoTo NextStep2
NextI1:
End If
Next I

NextStep2:
EvTab.Range(EvTab.Cells(1, ColumnThatINeed), EvTab.Cells(1, FirstBlank)).EntireColumn.Delete
FinishSub:
Application.ScreenUpdating = True
End Sub
Sub ClearRows()
Application.ScreenUpdating = False
Set EvTab = Worksheets("Ev 1")
Set EvCriteria = Worksheets("Evaluation Criteria")

LastFullRowCat1 = EvTab.Cells(9, 2).End(xlDown).Row
If LastFullRowCat1 < 11 Then GoTo NextStep1
EvTab.Rows("11:" & LastFullRowCat1).EntireRow.Delete

NextStep1:
LastFullRowCat2 = EvTab.Cells(12, 2).End(xlDown).Row
If LastFullRowCat2 < 14 Then GoTo NextStep2
EvTab.Rows("14:" & LastFullRowCat2).EntireRow.Delete

NextStep2:
LastFullRowCat3 = EvTab.Cells(16, 1).End(xlDown).Row
If LastFullRowCat3 < 19 Then GoTo NextStep3
EvTab.Rows("18:" & LastFullRowCat3 - 1).EntireRow.Delete

NextStep3:
LastHeaderCat3 = EvTab.Cells(Rows.Count, 1).End(xlUp).Row
LastRowCat3 = EvTab.Cells(LastHeaderCat3, 4).End(xlDown).Row
x = EvTab.Cells(LastHeaderCat3, 1).Value

If x = 2 And LastRowCat3 >= 20 Then
    EvTab.Rows(LastHeaderCat3 + 2 & ":" & LastRowCat3).EntireRow.Delete
End If
If x > 2 Then
OneHeaderUpRow = EvTab.Cells(LastHeaderCat3, 1).End(xlUp).Row
For I = x To 2 Step -1
If EvTab.Cells(OneHeaderUpRow, 1).Value > 3 Then GoTo NextI
If EvTab.Cells(OneHeaderUpRow, 1).Value = 3 Then
    StartRowToDelete = OneHeaderUpRow
    GoTo StopFor

NextI:
OneHeaderUpRow = EvTab.Cells(OneHeaderUpRow, 1).End(xlUp).Row
End If
Next I
StopFor:
If StartRowToDelete = 20 Then StartRowToDelete = 21
EvTab.Rows("20:" & StartRowToDelete - 1).EntireRow.Delete
LastHeaderCat3 = EvTab.Cells(Rows.Count, 1).End(xlUp).Row
LastRowCat3 = EvTab.Cells(LastHeaderCat3, 4).End(xlDown).Row
EvTab.Rows("20:" & LastRowCat3).EntireRow.Delete
End If

LastRowCat4 = EvTab.Cells(21, 2).End(xlDown).Row
If LastRowCat4 < 23 Then GoTo EndAll
EvTab.Rows("23:" & LastRowCat4).EntireRow.Delete
EndAll:
EvTab.Range(EvTab.Cells(9, 6), EvTab.Cells(22, 6)).Cells.ClearContents
Application.ScreenUpdating = True
End Sub
Sub MacroToPopulateRows()
Application.ScreenUpdating = False
Set EvTab = Worksheets("Ev 1")
Set EvCriteria = Worksheets("Evaluation Criteria")

LastRowCr1 = EvCriteria.Cells(6, 1).End(xlDown).Row
If LastRowCr1 > 10 And EvCriteria.Cells(7, 1) = "" Then LastRowCr1 = 6
FirstEmptyRow1 = EvTab.Cells(9, 2).End(xlDown).Row + 1
For I = 6 To LastRowCr1 - 1
FirstEmptyRow1 = EvTab.Cells(9, 2).End(xlDown).Row + 1
EvTab.Rows(FirstEmptyRow1 - 1).EntireRow.Copy
EvTab.Rows(FirstEmptyRow1).Insert Shift:=xlDown
Next I

LastRowCr2 = EvCriteria.Cells(6, 4).End(xlDown).Row
If LastRowCr2 > 10 And EvCriteria.Cells(7, 4) = "" Then LastRowCr2 = 6
If LastRowCr2 > 6 And LastRowCr1 > 6 Then FirstEmptyRow2 = FirstEmptyRow1 + 3
If LastRowCr2 > 6 And LastRowCr1 = 6 Then FirstEmptyRow2 = FirstEmptyRow1 + 2
If LastRowCr2 = 6 Or LastRowCr2 > 10 Then FirstEmptyRow2 = FirstEmptyRow1 + 4
For I = 6 To LastRowCr2 - 1
FirstEmptyRow2 = FirstEmptyRow2 + 1
EvTab.Rows(FirstEmptyRow2 - 1).EntireRow.Copy
EvTab.Rows(FirstEmptyRow2).Insert Shift:=xlDown
Next I

LastRowCr3 = EvCriteria.Cells(13, 1).End(xlDown).Row
If LastRowCr3 > 19 And EvCriteria.Cells(14, 1) = "" Then LastRowCr3 = 13
FirstEmptyRow3 = EvTab.Cells(4, 1).End(xlDown).Row
For I = 13 To LastRowCr3 - 1
FirstEmptyRow3 = FirstEmptyRow3 + 1
EvTab.Rows(FirstEmptyRow3).EntireRow.Copy
EvTab.Rows(FirstEmptyRow3 + 1).Insert Shift:=xlDown
Next I
For I = 13 To 32
If EvTab.Cells(I, 1) = 1 Then FirstRowForSum = I + 1
If EvTab.Cells(I, 1) = 2 Then LastRowForSum = I - 1
Next I
EvTab.Cells(FirstRowForSum - 1, 7).Formula = "=SUM(G" & FirstRowForSum & ":G" & LastRowForSum & ")"

FirstEmptyRow4 = EvTab.Cells(FirstEmptyRow3, 1).End(xlDown).Row
For I = 13 To LastRowCr3 - 1
FirstEmptyRow4 = FirstEmptyRow4 + 1
EvTab.Rows(FirstEmptyRow4).EntireRow.Copy
EvTab.Rows(FirstEmptyRow4 + 1).Insert Shift:=xlDown
Next I
FirstRowForSum = LastRowForSum + 2
LastRowForSum = FirstEmptyRow4 + 1
EvTab.Cells(FirstRowForSum - 1, 7).Formula = "=SUM(G" & FirstRowForSum & ":G" & LastRowForSum & ")"

LastRowCr4 = EvCriteria.Cells(13, 4).End(xlDown).Row
If LastRowCr4 > 18 And EvCriteria.Cells(14, 4) = "" Then LastRowCr4 = 13
FirstEmptyRow5 = FirstEmptyRow4 + 3
For I = 13 To LastRowCr4 - 1
FirstEmptyRow5 = FirstEmptyRow5 + 1
EvTab.Rows(FirstEmptyRow5).EntireRow.Copy
EvTab.Rows(FirstEmptyRow5 + 1).Insert Shift:=xlDown
Next I
Application.CutCopyMode = False
Application.ScreenUpdating = True
End Sub
Sub FillExpertsFirmsAndEvaluators()
Application.ScreenUpdating = False

Set Intro = Worksheets("Intro")
Set EvTab = Worksheets("Ev 1")

EvTab.Unprotect "ebrd1"

Experts = Intro.Range("B4")
Firms = Intro.Range("F4")
Evaluators = Intro.Range("I4")

EvTab.Cells(1, 1).Value = Worksheets("Ev 1").Index - 1


For I = 3 To Experts

FirstBlank = EvTab.Cells(EvTab.Range("A10").End(xlDown).Row, 4).End(xlDown).Row
LastPopulated = EvTab.Cells(Rows.Count, 1).End(xlUp).Row
 
    EvTab.Rows(LastPopulated & ":" & FirstBlank).Copy
    EvTab.Rows(FirstBlank + 1).Insert Shift:=xlDown

Next I
    Application.CutCopyMode = False
    
Cat3LastRow = EvTab.Cells(EvTab.Range("A10").End(xlDown).Row, 4).End(xlDown).Row

For I = 15 To Cat3LastRow
If EvTab.Cells(I, 1) = 1 Then
KeyPersonnelStartRow = I
GoTo exitfor
End If
Next I

exitfor:
EvTab.Cells(Cat3LastRow + 1, 7).Formula = "=SUM(G" & KeyPersonnelStartRow & ":G" & Cat3LastRow & ")/2"

FirstRow = EvTab.Cells(Rows.Count, 1).End(xlUp).Row
LastRow = EvTab.Cells(Rows.Count, 2).End(xlUp).Row
For I = FirstRow + 1 To LastRow
If EvTab.Cells(I, 2) = "RANKING" Then
RanksRow = I
TotalRow = RanksRow - 1
GoTo ExitFunction
End If
NextI7:
Next I

ExitFunction:

For I = 2 To Firms
FirstBlank = EvTab.Cells(10, Columns.Count).End(xlToLeft).Column

    EvTab.Columns("F:G").Copy
    EvTab.Columns(FirstBlank + 1).Insert Shift:=xlToRight
    
Next I
Application.CutCopyMode = False

Number1 = EvTab.Cells(10, 1).End(xlDown).Row
Number2 = EvTab.Cells(Number1, 1).End(xlDown).Row
LastRowWithANumber = EvTab.Cells(Rows.Count, 1).End(xlUp).Row

If Number2 = LastRowWithANumber Then GoTo NextPart
For I = Number2 To LastRowWithANumber
If EvTab.Cells(I, 1) <> "" Then
    RowX = I
    LastRowOfThisExpert = EvTab.Cells(RowX, 1).End(xlDown).Row - 1
    If LastRowOfThisExpert > 200 Then LastRowOfThisExpert = Cat3LastRow
        For p = RowX + 1 To LastRowOfThisExpert
        EvTab.Cells(p, 4).Formula = "=C" & p & "*$D$" & RowX
        Next p
End If
Next I


NextPart:
FirstBlankColumnNumber = EvTab.Cells(1, Columns.Count).End(xlToLeft).Column
FirstBlankColumnLetter = Split(Cells(1, FirstBlankColumnNumber + 1).Address, "$")(1)
Cat2LastRow = EvTab.Cells(EvTab.Cells(EvTab.Cells(10, 2).End(xlDown).Row, 2).End(xlDown).Row, 2).End(xlDown).Row
Cat4FirstRow = EvTab.Cells(Cat3LastRow, 2).End(xlDown).Row + 1
Cat4LastRow = EvTab.Cells(Cat4FirstRow, 2).End(xlDown).Row
If Cat4LastRow = TotalRow Then Cat4LastRow = Cat4FirstRow
For I = 7 To FirstBlankColumnNumber + 1
ColumnLetter = Split(Cells(1, I).Address, "$")(1)
If I Mod 2 = 1 Then EvTab.Cells(TotalRow, I).Formula = "=SUM(" & ColumnLetter & "10:" & ColumnLetter & Cat2LastRow & ")+" & ColumnLetter & Cat3LastRow + 1 & "+SUM(" & ColumnLetter & Cat4FirstRow & ":" & ColumnLetter & Cat4LastRow & ")"
If I Mod 2 = 1 Then EvTab.Cells(RanksRow, I).Formula = "=RANK(" & ColumnLetter & "$" & TotalRow & "," & "$F$" & TotalRow & ":$" & FirstBlankColumnLetter & "$" & TotalRow & ")"
Next I





For I = 2 To Evaluators
EvTab.Copy After:=Sheets(I + 1)
Worksheets(I + 2).Name = "Ev " & I
Worksheets(I + 2).Cells(1, 1) = Worksheets(I + 2).Index - 1
Worksheets(I + 2).Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Next I


ExitSubPath:
EvTab.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingColumns:=False, AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows:=False
Application.ScreenUpdating = True
End Sub
Sub UpdateThresholdsTab()
Application.ScreenUpdating = False
Set Intro = Worksheets("Intro")
Set EvTab = Worksheets("Ev 1")
Set Thold = Worksheets("Thresholds")
Thold.Visible = True

Thold.Unprotect Password:="ebrd1"

Experts = Intro.Range("B4")
Firms = Intro.Range("F4")
Evaluators = Intro.Range("I4")

LastTholdRow = Thold.Cells(5, 1).End(xlDown).Row
Thold.Range(Thold.Cells(6, 5), Thold.Cells(LastTholdRow, 5)).ClearContents

FirstRowOfSecondCategory = EvTab.Cells(9, 2).End(xlDown).Row + 3
LastRowOfSecondCategory = EvTab.Range("D" & FirstRowOfSecondCategory - 1).End(xlDown).Row
FirstRowOfThirdCategory = EvTab.Range("D" & LastRowOfSecondCategory).End(xlDown).Row + 1
LastRowOfThirdCategory = EvTab.Range("G" & FirstRowOfThirdCategory).End(xlDown).Row
FirstRowOfFourthCategory = EvTab.Range("G" & LastRowOfThirdCategory).End(xlDown).Row
LastRowOfFourthCategory = EvTab.Range("D" & EvTab.Range("D" & LastRowOfThirdCategory).End(xlDown).Row).End(xlDown).Row


LastColumnInEvTab = EvTab.Cells(1, Columns.Count).End(xlToLeft).Column
TholdLastColumn = Thold.Cells(1, Columns.Count).End(xlToLeft).Column
If TholdLastColumn <= 6 Then GoTo NextSteps
Thold.Range(Thold.Cells(1, 6), Thold.Cells(1, TholdLastColumn)).EntireColumn.Delete
NextSteps:
ColumnNeeded = Thold.Cells(5, Columns.Count).End(xlToLeft).Column + 1
For I = 2 To Firms
Thold.Range("E:E").Copy
Thold.Columns(ColumnNeeded).Insert Shift:=xlToLeft
ColumnNeeded = Thold.Cells(5, Columns.Count).End(xlToLeft).Column + 1
Next I

LastRowOfFirstCategory = EvTab.Range("B9").End(xlDown).Row

For y = 5 To ColumnNeeded - 1
WeightedAverageOfFirstCategory = 0
WeightedAverageOfSecondCategory = 0
WeightedAverageOfThirdCategory = 0
WeightedAverageOfFourthCategory = 0

    For I = 1 To Worksheets("Thresholds").Index
        If Worksheets(I).Name = "Thresholds" Then GoTo exitfor
        If Worksheets(I).Name = "Intro" Or Worksheets(I).Name = "Thresholds" Or Worksheets(I).Name = "Evaluation criteria" Then
        Else:
            For r = 4 To LastColumnInEvTab
            If EvTab.Cells(1, r).Value = Thold.Cells(1, y).Value Then
            ColumnLetter = Split(EvTab.Cells(1, r + 1).Address, "$")(1)
            GoTo GoBack
            End If
            Next r
GoBack:
        WeightedAverageOfFirstCategory = WeightedAverageOfFirstCategory & "+SUM('Ev " & I - 2 & "'!" & ColumnLetter & "10:" & ColumnLetter & LastRowOfFirstCategory & ")"
        WeightedAverageOfSecondCategory = WeightedAverageOfSecondCategory & "+SUM('Ev " & I - 2 & "'!" & ColumnLetter & FirstRowOfSecondCategory & ":" & ColumnLetter & LastRowOfSecondCategory & ")"
        WeightedAverageOfThirdCategory = WeightedAverageOfThirdCategory & "+'Ev " & I - 2 & "'!" & ColumnLetter & LastRowOfThirdCategory
        WeightedAverageOfFourthCategory = WeightedAverageOfFourthCategory & "+SUM('Ev " & I - 2 & "'!" & ColumnLetter & FirstRowOfFourthCategory & ":" & ColumnLetter & LastRowOfFourthCategory & ")"
        End If
        Next I

exitfor:
Thold.Cells(6, y).Formula = "=(" & WeightedAverageOfFirstCategory & ")/Intro!$I$4"
Thold.Cells(7, y).Formula = "=(" & WeightedAverageOfSecondCategory & ")/Intro!$I$4"
Thold.Cells(8, y).Formula = "=(" & WeightedAverageOfThirdCategory & ")/Intro!$I$4"
Thold.Cells(9, y).Formula = "=(" & WeightedAverageOfFourthCategory & ")/Intro!$I$4"
Next y

Thold.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Sub UpdateSummaryTab()
Application.ScreenUpdating = False
Set Intro = Worksheets("Intro")
Set EvTab = Worksheets("Ev 1")
Set Thold = Worksheets("Thresholds")
Set SummaryTab = Worksheets("SUMMARY")

SummaryTab.Visible = True

SummaryTab.Unprotect Password:="ebrd1"

Experts = Intro.Range("B4")
Firms = Intro.Range("F4")
Evaluators = Intro.Range("I4")

LastColumnInSummaryTab = SummaryTab.Cells(1, Columns.Count).End(xlToLeft).Column
If LastColumnInSummaryTab < 5 Then GoTo NextStuff1
SummaryTab.Range(SummaryTab.Cells(1, 5), SummaryTab.Cells(1, LastColumnInSummaryTab)).EntireColumn.Delete

NextStuff1:

LastRowColumnA = SummaryTab.Cells(Rows.Count, 1).End(xlUp).Row
If LastRowColumnA < 10 Then GoTo NextStuff2
SummaryTab.Range(SummaryTab.Cells(10, 1), SummaryTab.Cells(LastRowColumnA, 5)).EntireRow.Delete
NextStuff2:
SummaryTab.Cells(15, 4).ClearContents

For I = 4 To Evaluators
LastRowColumnA = SummaryTab.Cells(Rows.Count, 1).End(xlUp).Row
 
    SummaryTab.Rows(LastRowColumnA & ":" & LastRowColumnA).Copy
    SummaryTab.Rows(LastRowColumnA + 1).Insert Shift:=xlDown
Next I

For I = 2 To Firms
LastColumnInSummaryTab = SummaryTab.Cells(1, Columns.Count).End(xlToLeft).Column
SummaryTab.Columns(LastColumnInSummaryTab).Copy Destination:=SummaryTab.Columns(LastColumnInSummaryTab + 1)
Next I

FirstBlankColumnNumber = SummaryTab.Cells(1, Columns.Count).End(xlToLeft).Column
FirstBlankColumnLetter = Split(Cells(1, FirstBlankColumnNumber).Address, "$")(1)
LastRowColumnA = SummaryTab.Cells(Rows.Count, 1).End(xlUp).Row
FirstRowColumnA = SummaryTab.Cells(1, 1).End(xlDown).Row

For I = 4 To FirstBlankColumnNumber
ColumnLetter = Split(SummaryTab.Cells(1, I).Address, "$")(1)

SummaryTab.Cells(LastRowColumnA + 1, I).Formula = "=SUM(" & ColumnLetter & FirstRowColumnA & ":" & ColumnLetter & LastRowColumnA & ")"
SummaryTab.Cells(LastRowColumnA + 3, I).Formula = "=RANK(" & ColumnLetter & "$" & LastRowColumnA + 2 & "," & "$D$" & LastRowColumnA + 2 & ":$" & FirstBlankColumnLetter & "$" & LastRowColumnA + 2 & ")"
SummaryTab.Cells(LastRowColumnA + 7, I).Formula = "=MIN($D$" & LastRowColumnA + 6 & ":$" & FirstBlankColumnLetter & LastRowColumnA + 6 & ")"
SummaryTab.Cells(LastRowColumnA + 10, I).Formula = "=IFERROR(RANK(" & ColumnLetter & "$" & LastRowColumnA + 9 & "," & "$D$" & LastRowColumnA + 9 & ":$" & FirstBlankColumnLetter & "$" & LastRowColumnA + 9 & ")," & Chr(34) & Chr(34) & ")"
Next I
On Error GoTo EndStuff
SummaryTab.Range(Cells(LastRowColumnA + 6, 3), Cells(LastRowColumnA + 6, FirstBlankColumnLetter)).ClearContents
EndStuff:
SummaryTab.Protect Password:="ebrd1", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, AllowInsertingColumns:=False, AllowInsertingRows _
        :=False
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' |Liz
' Vz(!

INQUEST-PP=macro
