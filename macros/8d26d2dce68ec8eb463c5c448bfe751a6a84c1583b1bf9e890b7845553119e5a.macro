Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim abschnitt As Integer
Dim ueberschreib As Integer
Dim luecken As Integer
Dim loesch As Integer
Dim n As Integer
Dim einfueg As Integer
Dim einfzeile As Integer
Dim zeile As Integer
Dim zeileDruck As Integer

'Speichern
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

' Speicherdatum nur beim ersten Mal Speichern setzen, danach nicht mehr ver|fffd|ndern

If ActiveSheet.Range("B53").Value = "" Then

Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B53").Value = Date
    
    End If
    
' Wenn Zelle leer, speichern und speichern unter wird verhindert
Sheets("Auftragserfassung").Select

'##### tempor|fffd|r entfernt ####### Ren|fffd|
    'If ActiveSheet.Range("AB19").Value = "" And Not ActiveSheet.Range("L19").Value Like "*LWL*" Then
    'MsgBox ("Bitte das |fffd|bertragungsverfahren zum Produkt vollst|fffd|ndig ausw|fffd|hlen!")
    'Cancel = True
    'Exit Sub
    'End If


End Sub

Private Sub Workbook_Open()

End Sub
Attribute VB_Name = "Formeln_umwandeln"
Option Explicit

Sub FormelnInTextUmsetzen()
    Dim Zelle As Range
    
    On Error Resume Next
    For Each Zelle In ActiveSheet.UsedRange
        If Left(Zelle.Formula, 1) = "=" Then
            Zelle.Formula = Zelle.Value
        End If
    Next
End Sub

Public Sub TesteEs()
    SchreibeTextInDieZwischenablage
    MsgBox HoleTextVonZwischenablage
    RausMitZwischenAblage
    MsgBox HoleTextVonZwischenablage
End Sub
    
Public Sub SchreibeTextInDieZwischenablage()
    Dim oData As New DataObject
    Dim sText As String
    sText = "Hallo Leute" & vbCrLf & "Neues von Online Excel"
    With oData
        .SetText sText
        .PutInClipboard
    End With
End Sub
    
Public Function HoleTextVonZwischenablage() As String
    Dim oData As New DataObject
    On Error Resume Next ' Brutal um falsche Formate abzuw|fffd|rgen, gibt dann einen Leerstring
    oData.GetFromClipboard
    HoleTextVonZwischenablage = oData.GetText
End Function
    
Public Sub RausMitZwischenAblage()
    Dim oData As New DataObject
    oData.SetText ""
    oData.PutInClipboard
End Sub

Attribute VB_Name = "Modul1"
Option Explicit

Dim jahr As String
Dim sap As String
Public region As String
Dim projekt As String
Public zusatz As String
Dim aart As String
Dim pfad As String
Dim Dname As String
Dim PfadL As String
Dim VbdgID As String
Dim znad As String
Public msgbxcbxn As Boolean

Public Sub Aktualisieren()

    ' Aktualisierung der Variablen f|fffd|r den e-Mail-Versand
    strAdrBO = Worksheets("Auftragserfassung").Cells(51, 7).Value
    strAdrAG = Worksheets("Auftragserfassung").Cells(10, 12).Value
    strAdrAV = Worksheets("Auftragserfassung").Cells(53, 7).Value
    strAdrSB = "" 'Worksheets("Auftragserfassung").Cells(53, 7).Value
    strAdrZNAD = Worksheets("Auftragserfassung").Cells(55, 55).Value
    strAdrLLM = Worksheets("Auftragserfassung").Cells(64, 55).Value
    strAdrNAD = Worksheets("Auftragserfassung").Cells(55, 7).Value
    strAdrCapri = "DB.KT.Dokumentationsservice-Berlin@deutschebahn.com"

    
    ' Festlegung des zust|fffd|ndigen NOCs Region W_ESB nur NOC FFM, alle anderen Regionen an NOC Berlin
    If Worksheets("Technische Abwicklung").Cells(97, 4).Value = "W_ESB" Then strAdrNOC = Worksheets("Technische Abwicklung").Cells(124, 39).Value Else strAdrNOC = Worksheets("Technische Abwicklung").Cells(123, 39).Value
   
   ' Aktualisierung der Variablen f|fffd|r das Betreff-Feld der e-mail
   strArt = Worksheets("Auftragserfassung").Cells(17, 12).Value ' Auftragsart in Feld L17
   strFile = Worksheets("Auftragserfassung").Cells(11, 12).Value ' Eintrag Projektbezeichnung oder Bestellnr AG aus L11
   strProd = Worksheets("Auftragserfassung").Cells(19, 12).Value ' Art Produkt oder |fffd|bertragungsweg
  
End Sub

' Ersetzen von Sonderzeichen durch Leerzeichen in Feld L11
Public Sub Raus_damit()
Dim i As Long
Dim Temp As String
Dim erlaubt As String
Dim c As Object
erlaubt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ|fffd||fffd||fffd|=1234567890(),-_ "
' <- hier werden die Zeichen definiert, die erlaubt sind
' Gro|fffd|-/Kleinschreibung wird ignoriert
Application.ScreenUpdating = False ' Bildschirm-Aktualisierung wird hier deaktiviert;
' Ansonsten dauert der Vorgang noch ein wenig l|fffd|nger, da er sonst jede |fffd|nderung sofort anzeigt
ActiveSheet.Range("L11").Select
ActiveCell.Value = ActiveCell.Offset(0, 1).Range("A1").Value '20180801 See/Dieb In versteckte Zelle in auftragserfassung "AJ11" wird Formel f|fffd|r Bestellnummer ausgelagert, da sie in L11 mit der Zeichenbereinigung wieder |fffd|berschrieben werden w|fffd|rde
    For Each c In Selection
        With c
            Temp = ""
            For i = 1 To Len(.Text)
                If InStr(1, erlaubt, Mid(.Text, i, 1), vbTextCompare) > 0 Then Temp = Temp & Mid(.Text, i, 1) Else Temp = Temp & " "
            Next i
            .Value = Temp
        End With
        Next c
' Eingabe durch Zellwechsel |fffd|bernehmen (beliebige Zelle)
ActiveSheet.Range("L13").Select
Application.ScreenUpdating = True ' Jetzt wird die Anzeige wieder aktualisiert
End Sub

Public Sub Leerstand_pr|fffd|fen()
' Hier wird vor dem Mailversand gepr|fffd|ft, ob die Felder Region, Produkt, Bestell-Nr und Auftragsart gef|fffd|llt wurden
' R|fffd|cksetzen des Fehlerz|fffd|hlers 0= kein Fehler
fehler = "0"

' Leere Region und somit leere e-Mail-Adressen abfangen
'region = Worksheets("Auftragserfassung").Cells(47, 2).Value
'    If region = "" Then
'        fehler = "1"
'        MsgBox "Eingabe vervollst|fffd|ndigen: Bitte im Blatt Auftragserfassung das DBS-Produktionsgebiet ausw|fffd|hlen!"
'        Sheets("Auftragserfassung").Select
'        ActiveSheet.Range("B47").Select
'        Exit Sub
'    End If

' Leeres Produkt abfangen
    If strProd = "" Then
        fehler = "1"
        MsgBox "Bitte gew|fffd|nschtes Produkt bzw. gew|fffd|nschten |fffd|bertragungswegtyp ausw|fffd|hlen!"
        ActiveSheet.Range("L19").Select
        Exit Sub
    End If
    ' Leere Bestellnummer oder Projektbezeichnung in L11 abfangen
    If strFile = "" Or strFile = "0-0" Then
        fehler = "1"
        MsgBox "Bestell-Nr des Produktes bzw. Projektbezeichnung fehlt!"
        ActiveSheet.Range("L11").Select
        Exit Sub
    End If
    
    ' Leere Auftragsart abfangen
    If strArt = "0" Then
        fehler = "1"
        MsgBox "Auftragsart fehlt!"
        ActiveSheet.Range("L17").Select
        Exit Sub
    End If
End Sub

Public Sub AutoSaveO()
Dim ofso As Object
' Datei nach festen Vorgaben zu Name und Pfad abspeichern/aktualisieren
jahr = Worksheets("Auftragserfassung").Cells(3, 40).Value 'Versteckte Zelle mit Jahresextraktion AN3
region = Worksheets("Auftragserfassung").Cells(51, 2).Value
sap = Worksheets("Auftragserfassung").Cells(55, 19).Value    'ok
znad = Worksheets("Technische Abwicklung").Cells(104, 8).Value ' ZNAD-SA-Nummer (bereinigt ohne /)

' Ersetzen von Sonderzeichen durch Leerzeichen in Feld L11
Call Raus_damit

zusatz = Worksheets("Auftragserfassung").Cells(11, 12).Value ' Dateinamenszusatz (z.B. Bestell-Nr. AG bei Produkten - |fffd|bernahme aus bereinigter Zelle BC7
aart = Worksheets("Auftragserfassung").Cells(14, 55).Value ' K|fffd|rzel f|fffd|r Auftragsart 3-stellig z.B. Neu f|fffd|r Neuschaltung aus versteckter Zelle BC11
' Hinweis die folgenden projekt-Werte werden nicht aus den Originalzellen entnommen, sondern aus bereinigten Zellen (ohne / und *)
projekt = Worksheets("Auftragserfassung").Cells(19, 37).Value 'Produktauswahl
' Hinweis die folgenden VbdgID-Werte werden nicht aus den Originalzellen entnommen, sondern aus bereinigten Zellen (ohne /)
VbdgID = Worksheets("Technische Abwicklung").Cells(131, 12).Value ' Erst Verbindungsnummer (bereinigt ohne /)
If VbdgID = "" Then VbdgID = Worksheets("Technische Abwicklung").Cells(132, 12).Value ' oder Systemnummer (bereinigt ohne /)
If InStr(VbdgID, "/") Then VbdgID = Replace(VbdgID, "/", "")

' Leere gemeinsame Werte abfangen
' Leere Bestellnummer oder Projektbezeichnung in L11 abfangen
If zusatz = "" Or strFile = "0-0" Then
MsgBox "Bestell-Nr des Produktes bzw. Projektbezeichnung fehlt!"
Sheets("Auftragserfassung").Select
ActiveSheet.Range("L11").Select
Exit Sub
End If

' Leere Auftragsart (K|fffd|rzel) abfangen
If aart = "" Then
MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Auftragserfassung die Auftragsart ausw|fffd|hlen!"
Sheets("Auftragserfassung").Select
ActiveSheet.Range("L17").Select
Exit Sub
End If

' Leeres Eingangsdatum abfangen
If jahr = "1900" Then
MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Auftragserfassung das Datum Eingang AV erg|fffd|nzen!"
Sheets("Auftragserfassung").Select
ActiveSheet.Range("B53").Select
Exit Sub
End If

' Leere Region abfangen
If region = "" Then
MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Auftragserfassung das DBS-Produktionsgebiet ausw|fffd|hlen!"
Sheets("Auftragserfassung").Select
ActiveSheet.Range("B51").Select
Exit Sub
End If

' Leere Region abfangen
If region = "0" Then
MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Auftragserfassung das DBS-Produktionsgebiet ausw|fffd|hlen!"
Sheets("Auftragserfassung").Select
ActiveSheet.Range("B51").Select
Exit Sub
End If

' Leere Produkt- oder |fffd|bertragungswegfestlegung abfangen
If projekt = "" Then
MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Auftragserfassung den gew|fffd|nschten Typ ausw|fffd|hlen!"
Sheets("Auftragserfassung").Select
ActiveSheet.Range("L19").Select
Exit Sub
End If

' Leere Verbindungs- oder Systemnummer abfangen
'If VbdgID = "" Then
'MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Technische Abwicklung die Verbindungsnummer oder Systembezeichnung eintragen!"
'Sheets("Technische Abwicklung").Select
'ActiveSheet.Range("L131").Select
'Exit Sub
'End If



'************************************************************************************************************
' Speichereinstellung f|fffd|r alle ZNAD-Auftr|fffd|ge (Button Beteiligung ZNAD Ja)
If Worksheets("Technische Abwicklung").OptionButton1.Value = True Then
    If znad = "" Then
    MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Technische Abwicklung die Interne Auftragsnummer FM eintragen!"
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("H104").Select
    Exit Sub
    End If
    ' Definition des Dateinamens und des Speicherpfads
    Dname = znad & "_" & zusatz & "_" & projekt & "_" & VbdgID & ".xls"
    PfadL = ("\\BKU.DB.DE\DB\DB_004\GlW_21\Schaltauftrag\") & region
    pfad = PfadL & ("\") & Dname
    ' Eintragung des kompletten Pfads in die Zelle AM89 - Weitere Verwendung bei e-mail-Benachrichtigungen
    Worksheets("Technische Abwicklung").Cells(89, 39).Value = pfad
    ' |fffd|berspringen der folgenden Zeilen f|fffd|r Speichereinstellungen non-ZNAD
    GoTo Save
End If
'***************************************************************************************************************
' Speichereinstellung f|fffd|r alle non-ZNAD-Auftr|fffd|ge
If sap = "" Then
    MsgBox "Speichern nicht m|fffd|glich! Bitte im Blatt Auftragserfassung die korrekte SAP-Nummer erg|fffd|nzen!"
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("S51").Select
    Exit Sub
    End If

    ' Definition des Dateinamens und des Speicherpfads
    Dname = jahr & "_" & aart & "_" & sap & "_" & zusatz & "_" & projekt & "_" & VbdgID & ".xls"
    PfadL = ("\\BKU.DB.DE\DB\DB_004\GlW_21\Schaltauftrag\") & region
    pfad = PfadL & ("\") & Dname
    ' Eintragung des kompletten Pfads in die Zelle AM89 - Weitere Verwendung bei e-mail-Benachrichtigungen
    Worksheets("Technische Abwicklung").Cells(89, 39).Value = pfad


Save:
' Hier wird nun f|fffd|r beide F|fffd|lle gespeichert
Set ofso = CreateObject("scripting.filesystemobject")
If ofso.FolderExists(PfadL) Then
'oFso.CreateFolder (PfadL) Funktion wird hier nicht ben|fffd|tigt
' Fehlerbehandlung, wenn bei Speichern unter.. Nein oder Abrechen gedr|fffd|ckt wird
On Error GoTo NoSaveMes
    
    Dim ExcelVersion As String
    ExcelVersion = Application.Version
    If ExcelVersion = "14.0" Or ExcelVersion = "16.0" Then
    ActiveWorkbook.SaveAs Filename:=pfad, FileFormat:=xlExcel8
    Else
    ActiveWorkbook.SaveAs Filename:=pfad
    End If

On Error GoTo 0
MsgBox "Automatische Speicherung unter:  " & pfad & " erfolgt!"

Else
MsgBox "Achtung: Kein Zugriff auf " & PfadL & " vorhanden. Bitte Zugriff freischalten oder pr|fffd|fen!"
End If
Exit Sub
' Mitteilung der Fehlerbehandlung bei Nein oder Abbrechen
NoSaveMes:
    MsgBox "Keine Speicherung erfolgt! Bitte pr|fffd|fen Sie Ihren Zugriff auf das Zentrallaufwerk oder ob Sonderzeichen verwendet wurden!"
End Sub
' SAP LAngtext zusammenbauen
Public Sub Langtext_zusammenbauen()
Dim capri_id As String
Dim capri_id_suchtxt As String
Dim capri_id_pos As Integer
Dim oData As New DataObject
Dim varszwsp As String
Dim produkt As String

' neue Tabelle anlegen
Sheets.Add After:=Sheets(Sheets.Count)
ActiveSheet.Name = "SAPLANGTEXT"

' Feldbeschriftungen anlegen

' Fall DB systel ADB Nummer

If Worksheets("Import").Cells(4, 1).Value Like "*Systel*" Then
Range("A3").Select
    ActiveCell.FormulaR1C1 = "ADB:"
End If

    'Leerzeile
Range("A4").Select
    ActiveCell.FormulaR1C1 = "Auftraggeber:"
Range("A6").Select
    ActiveCell.FormulaR1C1 = "Kunde:"
Range("A8").Select
    ActiveCell.FormulaR1C1 = "Auftargsart:"
Range("A10").Select
    ActiveCell.FormulaR1C1 = "Art der |fffd|nderung:"
Range("A12").Select
    ActiveCell.FormulaR1C1 = "Produkt:"
Range("A14").Select
    ActiveCell.FormulaR1C1 = "|fffd|bertragungsverfahren:"
Range("A16").Select
    ActiveCell.FormulaR1C1 = "Kundenreferenz:"
Range("A18").Select
    ActiveCell.FormulaR1C1 = "Capri-ID:"
Range("A20").Select
    ActiveCell.FormulaR1C1 = "NeDocs-Verbindungsnr.:"
Range("A23").Select
    ActiveCell.FormulaR1C1 = "Wunschtermin:"
Range("A26").Select
    ActiveCell.FormulaR1C1 = "Terminkoordination mit Kunde, AP:"
    'Leerzeile
Range("A29").Select
    ActiveCell.FormulaR1C1 = "Bemerkung Auftraggeber:"
Range("A32").Select
    ActiveCell.FormulaR1C1 = "Standort A:"
Range("A34").Select
    ActiveCell.FormulaR1C1 = "Standortname:"
Range("A36").Select
    ActiveCell.FormulaR1C1 = "Strasse:"
Range("A38").Select
    ActiveCell.FormulaR1C1 = "PLZ/Ort:"
Range("A40").Select
    ActiveCell.FormulaR1C1 = "Strecke/km:"
Range("A42").Select
    ActiveCell.FormulaR1C1 = "Geb|fffd|ude:"
Range("A44").Select
    ActiveCell.FormulaR1C1 = "Etage/Raum:"
Range("A46").Select
    ActiveCell.FormulaR1C1 = "Schrank/Verteiler:"
Range("A48").Select
    ActiveCell.FormulaR1C1 = "Bucht/Leiste:"
Range("A50").Select
    ActiveCell.FormulaR1C1 = "Schnittstelle:"
Range("A52").Select
    ActiveCell.FormulaR1C1 = "Kabel-Nr., DA/ Faser:"
Range("A54").Select
    ActiveCell.FormulaR1C1 = "Netzelement und Port:"
Range("A56").Select
    ActiveCell.FormulaR1C1 = "Ansprechpartner:"
Range("A58").Select
    ActiveCell.FormulaR1C1 = "Telefon:"
'Leerzeile
Range("A61").Select
    ActiveCell.FormulaR1C1 = "Standort B:"
Range("A63").Select
    ActiveCell.FormulaR1C1 = "Standortname:"
Range("A65").Select
    ActiveCell.FormulaR1C1 = "Strasse:"
Range("A67").Select
    ActiveCell.FormulaR1C1 = "PLZ/Ort:"
Range("A69").Select
    ActiveCell.FormulaR1C1 = "Strecke/km:"
Range("A71").Select
    ActiveCell.FormulaR1C1 = "Geb|fffd|ude:"
Range("A73").Select
    ActiveCell.FormulaR1C1 = "Etage/Raum:"
Range("A75").Select
    ActiveCell.FormulaR1C1 = "Schrank/Verteiler:"
Range("A77").Select
    ActiveCell.FormulaR1C1 = "Bucht/Leiste:"
Range("A79").Select
    ActiveCell.FormulaR1C1 = "Schnittstelle:"
Range("A81").Select
    ActiveCell.FormulaR1C1 = "Kabel-Nr., DA/ Faser:"
Range("A83").Select
    ActiveCell.FormulaR1C1 = "Netzelement und Port:"
Range("A85").Select
    ActiveCell.FormulaR1C1 = "Ansprechpartner:"
Range("A87").Select
    ActiveCell.FormulaR1C1 = "Telefon:"
'Leerzeile
Range("A90").Select
    ActiveCell.FormulaR1C1 = "Schaltweg(DS):"
Range("A91").Select
    ActiveCell.FormulaR1C1 = "Genauer Schaltweg ist im Schaltauftragsformular beschrieben!"
'Leerzeile
Range("A94").Select
    ActiveCell.FormulaR1C1 = "XDSL-Checkliste beachten!"
Range("A95").Select
  ActiveCell.FormulaR1C1 = "Schaltweg ist im Schaltauftrag zu dokumentieren und sofort an DS (Kopie an Dispo/ SPOC)"
Range("A96").Select
    ActiveCell.FormulaR1C1 = "senden!"
Range("A97").Select
    ActiveCell.FormulaR1C1 = "Bei Nichtrealisierung, Alternative oder realistischen Mehraufwand (Erkundung neuer"
Range("A98").Select
    ActiveCell.FormulaR1C1 = "Kabelweg, Kabelverlegung, evtl. Brandschottungen) + evtl. Genehmigungen und"
Range("A99").Select
    ActiveCell.FormulaR1C1 = "zus|fffd|tzlichen Bestimmungen im jeweiligen Feld -Bemerkungen- im Schaltauftragsformular"
Range("A100").Select
    ActiveCell.FormulaR1C1 = "beschreiben. Zu jedem Schaltabschnitt gibt es ein Bemerkungsfeld."
'Leerzeile
Range("A103").Select
    ActiveCell.FormulaR1C1 = "Realisierung Schaltweg sowie Dokumentation Schaltweg werden auf verschiedene Vorg|fffd|nge gebucht."
Range("A104").Select
    ActiveCell.FormulaR1C1 = "Die finale R|fffd|ckmeldung  -R|fffd|CK-  darf erst erfolgen, wenn alle geforderten Dokumente an DS gesendet wurden."
'Leerzeile
Range("A107").Select
    ActiveCell.FormulaR1C1 = "Auszuf|fffd|llen durch Dokumentationsservices:"
Range("A109").Select
    ActiveCell.FormulaR1C1 = "AP DS + Tel-Nr.:"
Range("A111").Select
    ActiveCell.FormulaR1C1 = "Per Mail:"
Range("A113").Select
    ActiveCell.FormulaR1C1 = "Per Fax:"
'Leerzeile
Range("A116").Select
    ActiveCell.FormulaR1C1 = "Auszuf|fffd|llen durch Disposition:"
Range("A118").Select
    ActiveCell.FormulaR1C1 = "Kopie: AP Dispo/SPOC + Tel-Nr.:"
Range("A120").Select
    ActiveCell.FormulaR1C1 = "Per CC Mail:"
Range("A122").Select
    ActiveCell.FormulaR1C1 = "Per Fax:"
'Leerzeile
Range("A125").Select
   ActiveCell.FormulaR1C1 = "<V003, 2017-03-20>"
    
' Zellen aus Import bef|fffd|llen
Range("A1").Select
ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(17, 12).Value & " " & Worksheets("Auftragserfassung").Cells(19, 12).Value & " " & Worksheets("Import").Cells(4, 10).Value
'Fall DB Systel ADB Nummer

' Fall DB systel ADB Nummer

If Worksheets("Import").Cells(4, 1).Value Like "*Systel*" Then
Range("B3").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 54).Value 'ADB Nummer/BB4
    End If

Range("B4").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 1).Value 'Auftraggeber_Import/A1
Range("B6").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 53).Value 'Kunde_Import/BA4
Range("B8").Select

If Worksheets("Auftragserfassung").Cells(17, 12).Value = "" Then
    MsgBox ("Bitte w|fffd|hlen Sie eine Auftragsart aus.")
    Application.CutCopyMode = False
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    Sheets("Auftragserfassung").Select
    Exit Sub
    
End If
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(17, 12).Value 'Auftragsart_Auftragserfassung/L17
Range("B10").Select
    ActiveCell.FormulaR1C1 = "" 'Worksheets("Auftragserfassung").Cells(18, 12).Value ' Art der |fffd|nderung_Auftragserfassung/L18 / bleibt vorerst leer
Range("B14").Select

If Worksheets("Auftragserfassung").Cells(19, 12).Value = "" Then
    MsgBox ("Bitte w|fffd|hlen Sie das zum Produkt passende |fffd|bertragungsverfahre aus.")
    Application.CutCopyMode = False
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    Sheets("Auftragserfassung").Select
    Exit Sub
    
End If


ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(19, 28).Value ' |fffd|bertragungsverfahren/AB19/Auftragserfassung
Range("B12").Select
produkt = Worksheets("Import").Cells(4, 11).Value

' auskommentiert / Joao / 20180803
'If Not produkt Like "*LWL*" Then
'
'    If Worksheets("Import").Cells(4, 7).Value = "" And Worksheets("Import").Cells(4, 8).Value = "" And Worksheets("Import").Cells(4, 9).Value = "" Then
'    MsgBox ("Bitte w|fffd|hlen Sie ein |fffd|bertragungsverfahren aus.")
'    Application.CutCopyMode = False
'    Application.DisplayAlerts = False
'    ActiveWindow.SelectedSheets.Delete
'    Sheets("Import").Select
'    Exit Sub
'
'    End If
'    If Worksheets("Import").Cells(4, 7).Value <> "" Then
'    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 7).Value '|fffd|bertragungsverfahren_Import/G4
'    End If
'    If Worksheets("Import").Cells(4, 8).Value <> "" Then
'    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 8).Value '|fffd|bertragungsverfahren_Import/H4
'    End If
'    If Worksheets("Import").Cells(4, 9).Value <> "" Then
'    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 9).Value '|fffd|bertragungsverfahren_Import/I4
'    End If
'
'End If

Range("B12").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(19, 16).Value

Range("B16").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(11, 12).Value ' Kundenreferenz_Auftragserfassung/L11
Range("B18").Select
    ActiveCell.FormulaR1C1 = Worksheets("Technische Abwicklung").Cells(106, 8).Value ' Capri ID

    'ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(11, 12).Value ' Capri ID
    'capri_id_suchtxt = Worksheets("Import").Cells(4, 40).Value ' CAPRI ID_Import/AN4/wird aus Bemerkungstext ausgelesen
    'capri_id_pos = InStr(1, capri_id_suchtxt, "ID ")
    'capri_id = Mid(capri_id_suchtxt, capri_id_pos + 3, 5)
    'ActiveCell.FormulaR1C1 = capri_id
    
    ' Capri ID auch in Tabelle Technische Abwicklung |fffd|bernehemen
'Sheets("Technische Abwicklung").Select
    'ActiveSheet.Range("H106").Value = capri_id
    
    'SAPLANGTEXT wieder aktivieren
    Sheets("SAPLANGTEXT").Select
    
Range("B20").Select
    ActiveCell.FormulaR1C1 = "" ' NeDocS-verbindungsnummer/-manuell von DS erfasst-
Range("B23").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 10).Value ' Termin_Import/J4
Range("B26").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 35).Value & ", Telefon: " _
                           & Worksheets("Import").Cells(4, 36).Value & " / " _
                           & Worksheets("Import").Cells(4, 16).Value
                           
                           ' Terminkoordination mit Kunde, AP:/Import/AG4,AH4/P4
Range("B30").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 40).Value ' Bemerkung_Import/AN
    
'Satndort A
Range("B34").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 19).Value ' Standortname A_Import/S4
Range("B36").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 20).Value ' Strasse A_Import/T4
Range("B38").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(28, 9).Value & " / " & Worksheets("Auftragserfassung").Cells(29, 9).Value ' PLZ/Ort Auftragserfassung I28/I29
Range("B40").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(30, 9).Value & " / " & Worksheets("Auftragserfassung").Cells(30, 15).Value ' Strecke/km_Auftragserfassung/I30+O30
Range("B42").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 23).Value ' Geb|fffd|ude_Import/W4
Range("B44").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 24).Value ' Etage/Raum_Import/X4
Range("B46").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(35, 9).Value ' Schrank/Verteiler_Auftragserfassung/I35
Range("B48").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(36, 9).Value ' Bucht/Leiste_Auftragserfassung/I36
Range("B50").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(37, 9).Value ' Schnittstelle_Auftragserfassung/I38
Range("B52").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(38, 9).Value ' Kabel-Nr., DA/ Faser_Auftragserfassung/I38
Range("B54").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(39, 9).Value ' Netzelement/Port_Auftragserfassung/I39
Range("B56").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 33).Value ' Ansprechpartner A/Import/AG4
Range("B58").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 34).Value & " / " _
                           & Worksheets("Import").Cells(4, 16).Value ' Telefon A Import/AH4 / P4

'Satndort B

Range("B63").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 26).Value ' Standortname A_Import/S4
Range("B65").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 27).Value ' Strasse A_Import/T4
Range("B67").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(28, 26).Value & " / " & Worksheets("Auftragserfassung").Cells(29, 26).Value ' PLZ/Ort Auftragserfassung Z28/Z29
Range("B69").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(30, 26).Value & " / " & Worksheets("Auftragserfassung").Cells(30, 32).Value ' Strecke/km_Auftragserfassung/Z30+AF30
Range("B71").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 30).Value ' Geb|fffd|ude_Import/AD
Range("B73").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 31).Value ' Etage/Raum_Import/AE
Range("B75").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(35, 26).Value ' Schrank/Verteiler_Auftragserfassung/I35
Range("B77").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(36, 9).Value ' Bucht/Leiste_Auftragserfassung/I36
Range("B79").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(37, 9).Value ' Schnittstelle_Auftragserfassung/I38
Range("B81").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(38, 9).Value ' Kabel-Nr., DA/ Faser_Auftragserfassung/I38
Range("B83").Select
    ActiveCell.FormulaR1C1 = Worksheets("Auftragserfassung").Cells(39, 9).Value ' Netzelement/Port_Auftragserfassung/I39
Range("B85").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 35).Value ' Ansprechpartner B_Import/AI4
Range("B87").Select
    ActiveCell.FormulaR1C1 = Worksheets("Import").Cells(4, 36).Value & " / " _
                           & Worksheets("Import").Cells(4, 16).Value ' Telefon B_Import/AJ4
Sheets("SAPLANGTEXT").Select
    Cells.Select
    Selection.Copy
    
   '|fffd|bergabe Inhalt Tabellenblatt in Clipboard
    oData.GetFromClipboard
   
   '|fffd|bergabe Inhalt Clipboard in Variable
    varszwsp = oData.GetText
   'Debug.Print (varszwsp)
   ' tabs aus Variable (Clipboard) entfernen
    varszwsp = Replace(varszwsp, vbTab, " ")
        
    ' Clipboard mit bereinigtenm Inhalt aus Variablen f|fffd|llen
    With oData
        .SetText varszwsp
        .PutInClipboard
    End With
    
    
    'Debug.Print (varszwsp)
    MsgBox ("Den Zwischenspeicher jetzt in den SAP langtext einf|fffd|gen und dann diese Meldung mit o.k. best|fffd|tigen.")
    
    Application.CutCopyMode = False
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    Sheets("Auftragserfassung").Select
End Sub

Attribute VB_Name = "Speichern_Admin"
Option Explicit

Public Sub Speichern_Als_Admin()
 Dim ab19 As String
 Dim saa As Boolean
 
 ab19 = "nicht leer"
 saa = True
 
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton3, 149, 1, MSForms, CommandButton"
Attribute VB_Control = "CheckBox1, 120, 2, MSForms, CheckBox"
Attribute VB_Control = "OptionButton3, 29, 3, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 28, 4, MSForms, OptionButton"
Attribute VB_Control = "OptionButton1, 27, 5, MSForms, OptionButton"
Attribute VB_Control = "CommandButton1, 158, 6, MSForms, CommandButton"
Dim prodaus As String


Private Sub CheckBox1_Click()
' Budgetblatt ein- und ausblenden
If CheckBox1 = True Then
Application.ScreenUpdating = True
Sheets("Budgetblatt Projekt").Visible = True
Sheets("Budgetblatt Projekt").Select
ActiveSheet.Range("H5").Select
        Else
        Application.ScreenUpdating = True
        Sheets("Budgetblatt Projekt").Visible = False
End If
End Sub
'SAP Langetext erzeugen
Private Sub CommandButton1_Click()

If Not Worksheets("Import").Cells(4, 11).Value Like "*LWL*" Then

Sheets("Auftragserfassung").Select
    If ActiveSheet.Range("AB19").Value = "" Then
    MsgBox ("Bitte w|fffd|hlen Sie das geplante |fffd|bertragungsverfahren zur Produktauswahl aus!")
    Cancel = True
    Exit Sub
    End If
End If

Call Langtext_zusammenbauen
End Sub

Private Sub CommandButton3_Click()
' Funktion e-Mail Auftragsweiterleitung Projekte an NAD
Call BeauftragungBOProjekte_an_AV_senden
End Sub
'Radiobutton
Private Sub OptionButton1_Click()
'   Voreinstellung f|fffd|r Button Produktauftrag
'   Listenfeld B11 gezielt mit Bestell-Nr. Auftraggeber ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B11:K11").Value = "Bestell-Nr. /Pos. Auftraggeber"
'   Zeile 13 und 14 einblenden
    ActiveSheet.Rows("13:14").Select
    Selection.EntireRow.Hidden = False
'   Listenfeld B19 gezielt mit Produktauswahl ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B19:K19").Value = "Produktauswahl"
'   Listenfeld AB21 gezielt mit Dienst = Produkt ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("AB21:AI21").Value = "Produkt"
'   Budgetzeile 15 ausblenden (da Standardbudget)
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = True
    
    Worksheets("Budgetblatt Projekt").Visible = False
    
'   Bestell-Nr. /Pos. Auftraggeber gezielt zum Zusatz in Dateibezeichnung (keine Sonderzeichen) machen
    'ActiveSheet.Range("AB53:AI53").Value = ActiveSheet.Range("BC11:BC11")
    
    ActiveSheet.Range("L6").Select
End Sub
'Radiobutton
Private Sub OptionButton2_Click()
'   Voreinstellung f|fffd|r Button Projektauftrag
'   Listenfeld B11 gezielt mit Projektbezeichnung ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B11:K11").Value = "Projektbezeichnung"
'   Zeile 13 und 14 ausblenden
    ActiveSheet.Rows("13:14").Select
    Selection.EntireRow.Hidden = True
'   Listenfeld B19 gezielt mit |fffd|bertragungsweg ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B19:K19").Value = "|fffd|bertragungsweg"
'   Budgetzeile 15 einblenden
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = False
    
    Worksheets("Budgetblatt Projekt").Visible = True
    'Sheets("Budgetblatt Projekt").Hidden = False
    
    ActiveSheet.Range("L6").Select
End Sub
'Radiobutton
Private Sub OptionButton3_Click()
'   Voreinstellung f|fffd|r Button Auftrag DB Netz
'   Listenfeld B11 gezielt mit Bestell-Nr. Auftraggeber ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B11:K11").Value = "Bestell-Nr. /Pos. Auftraggeber"
'   Zeile 13 und 14 einblenden
    ActiveSheet.Rows("13:14").Select
    Selection.EntireRow.Hidden = False
'   Listenfeld B19 gezielt mit |fffd|bertragungsweg ausw|fffd|hlen
    Sheets("Auftragserfassung").Select
    ActiveSheet.Range("B19:K19").Value = "|fffd|bertragungsweg"
'   Budgetzeile 15 ausblenden
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = True
    
    Worksheets("Budgetblatt Projekt").Visible = False
    
    ActiveSheet.Range("L6").Select
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

' Bildschirmflackern
Application.ScreenUpdating = False

' Rekursion f|fffd|r die nachfolgenden Aktionen vermeiden
If ((Target.Address = "$AB$19") Or (Target.Address = "$AB$17") Or (Target.Address = "$G$47") Or (Target.Address = "$S$52") Or (Target.Address = "$B$49")) Then Exit Sub

Sheets("Auftragserfassung").Select

' L|fffd|schung des "0-0"-Leereintrages im Speicherzusatz
If Range("AB53") = "0-0" Then
    ActiveSheet.Range("S53:AI53").Value = ""
    End If

' Sonderverhalten bei "Reservierung (nur Projekt und Dark Fiber)"
    If Range("L17") = "Reservierung (nur Projekt und Dark Fiber)" Then
    ActiveSheet.Range("AB17:AI17").Value = "Reservierung bis"
    Else
    ActiveSheet.Range("AB17:AI17").Value = "Wunschtermin"
    End If

' Auswahl der regionsabh|fffd|ngig passenden Send-In-Adressen AV, BO und NAD, Abteilungsbezeichnung und Fax-Nr NAD
    If Range("B51") = "N_HAN" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Hannover@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-N-HAN"
    ActiveSheet.Range("G51").Value = "Backoffice-Berlin@deutschebahn.com"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57345"
    End If
    
    If Range("B51") = "N_HBG" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Hannover@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-N-HBG"
    ActiveSheet.Range("G51").Value = "Backoffice-Berlin@deutschebahn.com"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57345"
    End If
    
    If Range("B51") = "O_BLN" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Berlin@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-O-BLN"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57823"
    ActiveSheet.Range("G51").Value = "Backoffice-Berlin@deutschebahn.com"
    End If
    
    If Range("B51") = "O_DRE" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Berlin@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-O-DRE"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57805"
    ActiveSheet.Range("G51").Value = "Backoffice-Berlin@deutschebahn.com"

    End If
    
    If Range("B51") = "W_ESN" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Essen@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-W-ESN"
    ActiveSheet.Range("G51").Value = "Backoffice-Essen@deutschebahn.com"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57811"
    End If
    
    If Range("B51") = "W_ESB" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Essen@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-W-ESB"
    ActiveSheet.Range("G51").Value = "Backoffice-Essen@deutschebahn.com"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57812"
    End If
    
    If Range("B51") = "S_STG" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Muenchen@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-S-STG"
    ActiveSheet.Range("G51").Value = "Backoffice-Essen@deutschebahn.com"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 39063"
    End If
    
    If Range("B51") = "S_MCH" Then
    ActiveSheet.Range("G53").Value = "auftragsservice.dbkt@deutschebahn.com"
    ActiveSheet.Range("G55").Value = "DB.KT.Dokumentationsservice-Muenchen@deutschebahn.com"
    'ActiveSheet.Range("B53:F53").Value = "T.ST-S-MCH"
    ActiveSheet.Range("G51").Value = "Backoffice-Essen@deutschebahn.com"
    Worksheets("Technische Abwicklung").Cells(98, 28).Value = "069 265 57855"
    End If
    
    ' Zuordnung des produktspezifischen CuDA-|fffd|bertragungsverfahrens
    If Range("L19") = "CuDA-2Dr-(hoch)-LRE" Then
    ActiveSheet.Range("AB19:AI19").Value = "LRE (Cisco)"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
    ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "LRE (Cisco)"
    Sheets("Auftragserfassung").Select
    End If
    
    If Range("L19") = "CuDA-2Dr-(hoch)-VDSL" Then
    ActiveSheet.Range("AB19:AI19").Value = "VDSL (Enterasys)"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "VDSL (Enterasys)"
    Sheets("Auftragserfassung").Select
    End If
    
    If Range("L19") = "CuDA-2Dr-(hoch)-ADSL" Then
    ActiveSheet.Range("AB19:AI19").Value = "ADSL"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "ADSL"
    Sheets("Auftragserfassung").Select
    End If
    
    If Range("L19") = "CuDA-2Dr-(hoch)-ADSL2+" Then
    ActiveSheet.Range("AB19:AI19").Value = "ADSL2+"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "ADSL2+"
    Sheets("Auftragserfassung").Select
    End If
    
    If Range("L19") = "EKuAL-2Dr-(hoch)-ADSL" Then
    ActiveSheet.Range("AB19:AI19").Value = "ADSL"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "ADSL"
    Sheets("Auftragserfassung").Select
    End If
    
    If Range("L19") = "EKuAL-2Dr-(hoch)-ADSL2+" Then
    ActiveSheet.Range("AB19:AI19").Value = "ADSL2+"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "ADSL2+"
    Sheets("Auftragserfassung").Select
    End If
    
    If ((Range("L19") = "CuDA-2Dr-(hoch)-SHDSL") Or (Range("L19") = "CuDA-4Dr-(hoch)-SHDSL") Or (Range("L19") = "CuDA-6Dr-(hoch)-SHDSL")) Then
    ActiveSheet.Range("AB19:AI19").Value = "SHDSL"
    ' Blatt Checkliste einblenden
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "Nur FB:"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "SHDSL"
    Sheets("Auftragserfassung").Select
    End If
    
    If ((Range("L19") = "BASA-Asl analog") Or (Range("L19") = "CuDA-2Dr-POTS") Or (Range("L19") = "EKuAL-2dr-POTS")) Then
    ActiveSheet.Range("AB19:AI19").Value = "POTS"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "POTS"
    Sheets("Auftragserfassung").Select
    End If
    
    If ((Range("L19") = "CuDA-2Dr-NF") Or (Range("L19") = "CuDA-4Dr-NF")) Then
    ActiveSheet.Range("AB19:AI19").Value = "NF"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "NF"
    Sheets("Auftragserfassung").Select
    End If
    
    If ((Range("L19") = "CuDA-2Dr-BB") Or (Range("L19") = "CuDA-4Dr-BB")) Then
    ActiveSheet.Range("AB19:AI19").Value = "BB"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "BB"
    Sheets("Auftragserfassung").Select
    End If
    
    If ((Range("L19") = "BASA-Asl ISDN") Or (Range("L19") = "CuDA-2Dr-ISDN-Uk0") Or (Range("L19") = "EKuAL-2dr-ISDN-Uk0")) Then
    ActiveSheet.Range("AB19:AI19").Value = "Uk0/Up0 (4B3T/2B1Q)"
     ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "Uk0/Up0 (4B3T/2B1Q)"
    Sheets("Auftragserfassung").Select
    End If
    
    ' Zuordnung des produktspezifischen CuDA-|fffd|bertragungsverfahrens
    If ((Range("L19") = "CuDA-2Dr-(hoch)-HDSL (2B1Q)") Or (Range("L19") = "CuDA-4Dr-(hoch)-HDSL (2B1Q)")) Then
    ActiveSheet.Range("AB19:AI19").Value = "HDSL (2B1Q)"
    ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "HDSL (2B1Q)"
    Sheets("Auftragserfassung").Select
    End If
    
    ' Zuordnung des produktspezifischen CuDA-|fffd|bertragungsverfahrens
    If ((Range("L19") = "CuDA-2Dr-(hoch)-HDSL (CAP)") Or (Range("L19") = "CuDA-4Dr-(hoch)-HDSL (CAP)")) Then
    ActiveSheet.Range("AB19:AI19").Value = "HDSL (CAP)"
    ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "HDSL (CAP)"
    Sheets("Auftragserfassung").Select
    End If
    
    ' Zuordnung des produktspezifischen CuDA-|fffd|bertragungsverfahrens
    If Range("L19") = "CuDA-4Dr-(hoch)-E1" Then
    ActiveSheet.Range("AB19:AI19").Value = "E1 (HDB3)"
    ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "E1 (HDB3)"
    Sheets("Auftragserfassung").Select
    End If
    
    ' Zuordnung des produktspezifischen CuDA-|fffd|bertragungsverfahrens
    If ((Range("L19") = "CuDA-4Dr-(hoch)-ISDN-S2M") Or (Range("L19") = "EKuAL-4dr-(hoch)-ISDN-S2M")) Then
    ActiveSheet.Range("AB19:AI19").Value = "S2M (HDB3)"
    ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "S2M (HDB3)"
    Sheets("Auftragserfassung").Select
    End If
    
    ' DB AccessPartyline: Zuordnung des produktspezifischen CuDA-|fffd|bertragungsverfahrens und Zusatzblatt Checkliste und Standorterfassung
    If Range("L19") = "DBA PartyLINE" Then
    ActiveSheet.Range("AB19:AI19").Value = "SHDSL"
    ' Blatt Checkliste einblenden
    Sheets("Checkliste").Visible = True
    Sheets("Checkliste").Select
    ' Produktspezifische Zeilen ein- und ausblenden und spezifische Werte setzen
    ActiveSheet.Rows("54:56").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Rows("52:53").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Rows("57:59").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Range("B49:AE49").Value = "Pr|fffd|fung f|fffd|r SHDSL auf F und FB  (F-Kabel-Nutzung nur f|fffd|r DB Access PartyLINE zul|fffd|ssig)"
    ActiveSheet.Range("D50").Value = "FB / F:"
    ActiveSheet.Range("B19").Select
    ' Einblenden des Sonderblatts DB Access PartyLINE
    Sheets("Erfassung AccessPartyline").Visible = True
    ' Mustervorlage "Schaltweg Kupferkabel mit |fffd|V vorbelegen
    Sheets("Technische Abwicklung").Select
    ActiveSheet.Range("AB7:AI7").Value = "SHDSL"
    ' CuDA-Anteile f|fffd|r SHDSL-Pr|fffd|fung im Blatt AM Bereitstellungsanzeige einblenden
    ' Einblenden der Bereitstellungsterminzeile in Zeile 13
    Sheets("AM Bereitstellungsanzeige").Select
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Range("B40").Value = "Bemerkungen zu den Installationsorten:"
    ActiveSheet.Rows("45:51").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Range("B5").Select
    Sheets("Auftragserfassung").Select
    Else: Sheets("Erfassung AccessPartyline").Visible = False
    End If
    
    ' DB AccessPartyline: Kennzeichnung der Ringbildung bei entsprechendem Servicelevel
    If Range("L19") = "DBA PartyLINE" And ((Range("L20") = "Express (8h)") Or (Range("L20") = "Express Plus (4h)")) Then
    Sheets("Erfassung AccessPartyline").Select
    ActiveSheet.Range("AK7").Value = "Servicelevel erfordert Ringbildung"
    Sheets("Auftragserfassung").Select
    End If
    If Range("L19") = "DBA PartyLINE" And ((Range("L20") <> "Express (8h)") And (Range("L20") <> "Express Plus (4h)")) Then
    Sheets("Erfassung AccessPartyline").Select
    ActiveSheet.Range("AK7").Value = ""
    Sheets("Auftragserfassung").Select
    End If
    
    ' Einblenden des Zusatzblattes zur Angebotserstellung "DBFV-Tarifierung"
    ' sucht in einer bestimmten Zelle nach dem Wert 1. Dieser erscheint, wenn die Produktauswahl mit DBFV beginnt (Suchen-Funktion in Tabellenblatt)
    If ActiveSheet.Range("AK17:AK17").Value = 1 Then
    Sheets("DBFV-Tarifierung").Visible = True
    Else
    Sheets("DBFV-Tarifierung").Visible = False
    End If
    
    ' Einblenden der ZNAD-Zeilen im Blatt Technische Abwicklung
    If ((Range("L17") = "LwL-Beschaltung") Or (Range("L17") = "LwL-Spleissung") Or (Range("L17") = "LwL-Umschaltung") Or (Range("L17") = "LwL-Reservierung")) Then Worksheets("Technische Abwicklung").OptionButton1.Value = True
    
    
    ' Aktualisierung der Variablen f|fffd|r den e-Mail-Versand
    strAdrBO = Worksheets("Auftragserfassung").Cells(47, 7).Value
    strAdrAG = Worksheets("Auftragserfassung").Cells(10, 12).Value
    strAdrAV = Worksheets("Auftragserfassung").Cells(49, 7).Value
    strAdrSB = Worksheets("Auftragserfassung").Cells(53, 7).Value
    strAdrZNAD = Worksheets("Auftragserfassung").Cells(51, 55).Value
    strAdrLLM = Worksheets("Auftragserfassung").Cells(60, 55).Value
    strAdrNAD = Worksheets("Auftragserfassung").Cells(51, 7).Value
    
    ' Festlegung des zust|fffd|ndigen Configuration Managments von NOC 1 bzw 2 Region N, NO und O an CM NOC1, alle anderen Regionen an CM NOC2
    If ((Worksheets("Technische Abwicklung").Cells(97, 4).Value = "O_DRE") Or (Worksheets("Technische Abwicklung").Cells(97, 4).Value = "O_BLN") Or (Worksheets("Technische Abwicklung").Cells(97, 4).Value = "N_HBG") Or (Worksheets("Technische Abwicklung").Cells(97, 4).Value = "N_HAN")) Then strAdrNOC = Worksheets("Technische Abwicklung").Cells(123, 39).Value Else strAdrNOC = Worksheets("Technische Abwicklung").Cells(124, 39).Value
   
   ' Aktualisierung der Variablen f|fffd|r das Betreff-Feld der e-mail
   strArt = Worksheets("Auftragserfassung").Cells(17, 12).Value ' Auftragsart in Feld L17
   strFile = Worksheets("Auftragserfassung").Cells(11, 12).Value ' Eintrag Projektbezeichnung oder Bestellnr AG aus L11
   strProd = Worksheets("Auftragserfassung").Cells(19, 12).Value ' Art Produkt oder |fffd|bertragungsweg
   
   If msgbxcbxn = True Then
   
   If Worksheets("Auftragserfassung").OptionButton1.Value = False And Worksheets("Auftragserfassung").OptionButton2.Value = False And Worksheets("Auftragserfassung").OptionButton3.Value = False Then MsgBox "Bitte ausw|fffd|hlen, ob der Auftrag f|fffd|r ein Produkt, Projekt oder direkt f|fffd|r DB Netz (SV04) ist!"
   
   End If
   msgbxcbxn = True
' Bildschirmflackern
Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton16, 181, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton14, 180, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 179, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 178, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandButton13, 174, 8, MSForms, CommandButton"
Attribute VB_Control = "CheckBox5, 134, 9, MSForms, CheckBox"
Attribute VB_Control = "CommandButton20, 133, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton19, 132, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton18, 131, 12, MSForms, CommandButton"
Attribute VB_Control = "CheckBox4, 121, 13, MSForms, CheckBox"
Attribute VB_Control = "CommandButton15, 118, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 112, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 111, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 110, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 109, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 107, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 106, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 105, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 104, 22, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 96, 23, MSForms, CommandButton"
Attribute VB_Control = "OptionButton4, 91, 24, MSForms, OptionButton"
Attribute VB_Control = "OptionButton3, 90, 25, MSForms, OptionButton"
Attribute VB_Control = "OptionButton8, 63, 26, MSForms, OptionButton"
Attribute VB_Control = "OptionButton7, 62, 27, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 48, 28, MSForms, OptionButton"
Attribute VB_Control = "OptionButton1, 47, 29, MSForms, OptionButton"
Attribute VB_Control = "OptionButton5, 182, 30, MSForms, OptionButton"
Attribute VB_Control = "CommandButtonTechnDS, 183, 31, MSForms, CommandButton"


Private Sub CheckBox2_Click()
ActiveSheet.Range("AE128").Select
End Sub


Private Sub CheckBox4_Click()
ActiveSheet.Range("H136").Select
End Sub

Private Sub CheckBox5_Click()
' Arcor-Beteiligungszeile ein- und ausblenden
If CheckBox5 = True Then
Application.ScreenUpdating = True
ActiveSheet.Rows("137:137").Select
Selection.EntireRow.Hidden = False
ActiveSheet.Range("H102").Select
        Else
        Application.ScreenUpdating = True
        ActiveSheet.Rows("137:137").Select
        Selection.EntireRow.Hidden = True
        ActiveSheet.Range("H102").Select
End If
End Sub

Private Sub CommandButton1_Click()
Call Subauftrag_senden
End Sub

Private Sub CommandButton10_Click()
' Kopieren und Einf|fffd|gen eines Muffenblatts
'
    Sheets("Muffenblatt").Visible = True
    Sheets("Muffenblatt").Copy Before:=Sheets(1)
    Sheets("Muffenblatt").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Technische Abwicklung").Select
End Sub

Private Sub CommandButton11_Click()
' Einblendung des Formulares Schlussmeldung LwL
'
    Sheets("Schlussmeldung LwL").Visible = True
    Sheets("Technische Abwicklung").Select
End Sub

Private Sub CommandButton12_Click()
Call Status_senden
End Sub

Private Sub CommandButton13_Click()
' Koordinate des Abschnittsz|fffd|hlers
abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' Bearbeitungshinweis-Abschnitt
    Range("B61:AI70").Select
' Kopieren des versteckten Bereiches (Vorlage Bearbeitungshinweis-Abschnitt)
    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
zeile = abschnitt * 10 + 152 '148
spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
abschnitt = abschnitt + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
Range(Cells(zeile, 2), Cells(zeile, 2)).Select
ActiveSheet.Paste

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnittsanzeige im Kopf
    Cells(129, 12) = abschnitt
    
' Erste Eingabefeld anspringen
ActiveSheet.Cells(zeile + 2, 9).Select
End Sub



Private Sub CommandButton14_Click()
Call Subauftrag_senden
End Sub

Private Sub CommandButton15_Click()
' Funktion Automatisches Speichern auf Laufwerk O aufrufen
Call Modul1.AutoSaveO
End Sub

Private Sub CommandButton16_Click()
Call Status_senden
End Sub

Private Sub CommandButton17_Click()
' Statusaustausch zwischen NAD und AV, bzw. zwischen ZNAD und NAD
'Call StatusNAD_sendenAV
End Sub

Private Sub CommandButton18_Click()
' Schaltabschnitt einf|fffd|gen

abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt
' Position des einzuf|fffd|genden Schaltabschnitts festlegen
einfueg = Application.InputBox(prompt:="Nach welcher Abschnittsnummer soll ein neuer Schaltabschnitt eingef|fffd|gt werden?", Title:="Schaltabschnitt einf|fffd|gen", Type:=1)
If (einfueg = 0) Or (einfueg > abschnitt) Then MsgBox ("Bitte nur g|fffd|ltige Abschnittsnummer eingeben!"): Exit Sub
' Neue Abschnittsart festlegen
absart = Application.InputBox(prompt:=("Bitte die neue Abschnittsart ausw|fffd|hlen:" & vbLf & "1 f|fffd|r Cu-Abschnitt" & vbTab & "2 f|fffd|r |fffd|T-Abschnitt" & vbLf & "3 f|fffd|r LwL-Abschnitt" & vbTab & "4 f|fffd|r Umschaltung LwL" & vbLf & "5 f|fffd|r Kapazit|fffd|tsl|fffd|cke" & vbTab & "7 f|fffd|r Bearbeitungshinweis"), Title:="Neuen Typ des Schaltabschnitts w|fffd|hlen", Type:=1)
If (absart = 0) Or (absart > 7) Then MsgBox ("Bitte eine g|fffd|ltige Abschnittsart ausw|fffd|hlen!"): Exit Sub

' Bildschirmflackern
Application.ScreenUpdating = False

'  Kopieren des versteckten Bereiches (Vorlage Cu-Kabelabschnitt)
    If absart = 1 Then Range("B1:AI10").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage |fffd|bertragungsabschnitt)
    If absart = 2 Then Range("B11:AI20").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage LwL-Abschnitt)
    If absart = 3 Then Range("B21:AI30").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Umschaltung LwL)
    If absart = 4 Then Range("B31:AI40").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Kapazit|fffd|tsl|fffd|cke)
    If absart = 5 Then Range("B41:AI50").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Leased Line)
    If absart = 6 Then Range("B51:AI60").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Bearbeitungshinweis-Abschnitt)
    If absart = 7 Then Range("B61:AI70").Select: Selection.Copy

' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
    einfzeile = einfueg * 10 + 152 '148
' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
    Range(Cells(einfzeile, 2), Cells(einfzeile + 9, 35)).Select
    Selection.Insert Shift:=xlDown
    
' Bildschirmflackern
Application.ScreenUpdating = True

' Anzahl Schaltabschnitte um 1 erh|fffd|hen
    abschnitt = abschnitt + 1
    Cells(129, 12) = abschnitt

' Aktualisierung der Abschnittsanzeige in allen Abschnitten
For n = 1 To abschnitt
    einfzeile = (n - 1) * 10 + 152 '148
    Cells(einfzeile + 1, 9) = n
Next n
  
' Zelle B148 ausw|fffd|hlen
    ActiveSheet.Cells(147, 2).Select

End Sub

Private Sub CommandButton19_Click()
' Schaltabschnitt l|fffd|schen

abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt

' Zu l|fffd|schenden Schaltabschnitt festlegen
loesch = Application.InputBox(prompt:="Bitte Nummer des zu l|fffd|schenden Abschnitts eingeben:", Title:="Schaltabschnitt l|fffd|schen", Type:=1)
If (loesch = 0) Or (loesch > abschnitt) Then MsgBox ("Bitte nur g|fffd|ltige Abschnittsnummer eingeben!"): Exit Sub


' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
    einfzeile = (loesch - 1) * 10 + 152 '148
' L|fffd|schen des ausgew|fffd|hlten Abschnitts
    Range(Cells(einfzeile, 2), Cells(einfzeile + 9, 35)).Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlUp
' Anzahl Schaltabschnitte um 1 verringern
    abschnitt = abschnitt - 1
    Cells(129, 12) = abschnitt

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
For n = 1 To abschnitt
    einfzeile = (n - 1) * 10 + 152 '148
    Cells(einfzeile + 1, 9) = n
Next n
  
' Zelle B147 ausw|fffd|hlen
    ActiveSheet.Cells(147, 2).Select
    
End Sub

Private Sub CommandButton2_Click()
' Koordinate des Abschnittsz|fffd|hlers
abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' |fffd|bertragungstechnik-Abschnitt
    Range("B11:AI20").Select
' Kopieren des versteckten Bereiches (Vorlage |fffd|bertragungstechnik-Abschnitt)
    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
zeile = abschnitt * 10 + 152 '148
spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
abschnitt = abschnitt + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
Range(Cells(zeile, 2), Cells(zeile, 2)).Select
ActiveSheet.Paste

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnittsanzeige im Kopf
    Cells(129, 12) = abschnitt
    
' Erste Eingabefeld anspringen
ActiveSheet.Cells(zeile + 2, 9).Select

End Sub

Private Sub CommandButton20_Click()
' Schaltabschnitt |fffd|berschreiben

abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt
' Zu |fffd|berschreibenden Schaltabschnitt festlegen
ueberschreib = Application.InputBox(prompt:="Bitte Nummer des zu |fffd|berschreibenden Abschnitts eingeben:", Title:="Schaltabschnitt |fffd|berschreiben", Type:=1)
If (ueberschreib = 0) Or (ueberschreib > abschnitt) Then MsgBox ("Bitte nur g|fffd|ltige Abschnittsnummer eingeben!"): Exit Sub
' Neue Abschnittsart festlegen
absart = Application.InputBox(prompt:=("Bitte die neue Abschnittsart ausw|fffd|hlen:" & vbLf & "1 f|fffd|r Cu-Abschnitt" & vbTab & "2 f|fffd|r |fffd|T-Abschnitt" & vbLf & "3 f|fffd|r LwL-Abschnitt" & vbTab & "4 f|fffd|r Umschaltung LwL" & vbLf & "5 f|fffd|r Kapazit|fffd|tsl|fffd|cke" & vbTab & "6 f|fffd|r Leased Line" & vbLf & "7 f|fffd|r Bearbeitungshinweis"), Title:="Neuen Typ des Schaltabschnitts w|fffd|hlen", Type:=1)
If (absart = 0) Or (absart > 7) Then MsgBox ("Bitte eine g|fffd|ltige Abschnittsart ausw|fffd|hlen!"): Exit Sub

' Bildschirmflackern
Application.ScreenUpdating = False

'  Kopieren des versteckten Bereiches (Vorlage Cu-Kabelabschnitt)
    If absart = 1 Then Range("B1:AI10").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage |fffd|bertragungsabschnitt)
    If absart = 2 Then Range("B11:AI20").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage LwL-Abschnitt)
    If absart = 3 Then Range("B21:AI30").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Umschaltung LwL)
    If absart = 4 Then Range("B31:AI40").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Kapazit|fffd|tsl|fffd|cke)
    If absart = 5 Then Range("B41:AI50").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Leased Line)
    If absart = 6 Then Range("B51:AI60").Select: Selection.Copy
' Kopieren des versteckten Bereiches (Vorlage Bearbeitungshinweis-Abschnitt)
    If absart = 7 Then Range("B61:AI70").Select: Selection.Copy


' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
    einfzeile = (ueberschreib - 1) * 10 + 152 '148
' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
    Range(Cells(einfzeile, 2), Cells(einfzeile + 9, 35)).Select
    ActiveSheet.Paste

' Bildschirmflackern
Application.ScreenUpdating = True

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(einfzeile + 1, 9) = ueberschreib
    ActiveSheet.Cells(einfzeile, 2).Select

End Sub



Private Sub CommandButton3_Click()
' Koordinate des Abschnittsz|fffd|hlers
abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt

' Bildschirmflackern
Application.ScreenUpdating = False

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' Kupferabschnitt
    Range("B1:AI10").Select
' Kopieren des versteckten Bereiches (Vorlage Cu-Kabelabschnitt)
    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
zeile = abschnitt * 10 + 152 '148
spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
abschnitt = abschnitt + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
Range(Cells(zeile, 2), Cells(zeile, 2)).Select
ActiveSheet.Paste

' Bildschirmflackern
Application.ScreenUpdating = True

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnittsanzeige im Kopf
    Cells(129, 12) = abschnitt

' Erste Eingabefeld anspringen
ActiveSheet.Cells(zeile + 2, 9).Select

End Sub

Private Sub CommandButton4_Click()
' Koordinate des Abschnittsz|fffd|hlers
abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt

' Bildschirmflackern
Application.ScreenUpdating = False

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' LwL-Abschnitt
    Range("B21:AI30").Select
' Kopieren des versteckten Bereiches (Vorlage LwL-Kabelabschnitt)
    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
zeile = abschnitt * 10 + 152 '148
spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
abschnitt = abschnitt + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
Range(Cells(zeile, 2), Cells(zeile, 2)).Select
ActiveSheet.Paste

' Bildschirmflackern
Application.ScreenUpdating = True

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnittsanzeige im Kopf
    Cells(129, 12) = abschnitt

' Erste Eingabefeld anspringen
ActiveSheet.Cells(zeile + 2, 9).Select

End Sub

Private Sub CommandButton5_Click()
' Koordinate des Abschnittsz|fffd|hlers
abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt

' Bildschirmflackern
Application.ScreenUpdating = False

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' Umschaltung LwL
    Range("B31:AI40").Select
' Kopieren des versteckten Bereiches (Vorlage Umschaltung LwL)
    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
zeile = abschnitt * 10 + 152 '148
spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
abschnitt = abschnitt + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
Range(Cells(zeile, 2), Cells(zeile, 2)).Select
ActiveSheet.Paste

' Bildschirmflackern
Application.ScreenUpdating = True

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnittsanzeige im Kopf
    Cells(129, 12) = abschnitt

' Erste Eingabefeld anspringen
ActiveSheet.Cells(zeile + 2, 8).Select

End Sub

Private Sub CommandButton6_Click()
' Koordinate des Abschnittsz|fffd|hlers
abschnitt = Cells(129, 12)
Cells(129, 12) = abschnitt
' Koordinate des Kapazit|fffd|tsl|fffd|ckenz|fffd|hlers
luecken = Cells(133, 14)
Cells(133, 14) = luecken

' Bildschirmflackern
Application.ScreenUpdating = False

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' Kapazit|fffd|tsl|fffd|cke
    Range("B41:AI50").Select
' Kopieren des versteckten Bereiches (Vorlage Kapazit|fffd|tsl|fffd|cke)
    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
zeile = abschnitt * 10 + 152 '148
spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
abschnitt = abschnitt + 1
' Erh|fffd|hung Kapazit|fffd|tsl|fffd|ckenz|fffd|hler
luecken = luecken + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
Range(Cells(zeile, 2), Cells(zeile, 2)).Select
ActiveSheet.Paste

' Bildschirmflackern
Application.ScreenUpdating = True

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnitts- und L|fffd|ckenanzeige im Kopf
    Cells(129, 12) = abschnitt
    Cells(133, 14) = luecken

' Erste Eingabefeld anspringen
ActiveSheet.Cells(zeile + 2, 7).Select

End Sub


'Private Sub CommandButton7_Click()
' Koordinate des Abschnittsz|fffd|hlers
'abschnitt = Cells(129, 12)
'Cells(129, 12) = abschnitt

' Bildschirmflackern
'Application.ScreenUpdating = False

' Festlegung des zu kopierendes Bereiches (versteckte Zeilen)
' Leased Line-Abschnitt
'    Range("B51:AI60").Select
' Kopieren des versteckten Bereiches (Vorlage Leased Line-Abschnitt)
'    Selection.Copy
    
' Festlegung des Zielbereiches (z|fffd|hlerabh|fffd|ngig)
'zeile = abschnitt * 10 + 152 '148
'spalte = abschnitt * 10 + 152 '148
' Erh|fffd|hung Abschnittsz|fffd|hler
'abschnitt = abschnitt + 1

' Einf|fffd|gen des kopierten Abschnitts in Zielbereich
'Range(Cells(zeile, 2), Cells(zeile, 2)).Select
'ActiveSheet.Paste

' Bildschirmflackern
'Application.ScreenUpdating = True

' Aktualisierung der Abschnittsanzeige im einkopierten Abschnitt
'    Cells(zeile + 1, 9) = abschnitt
    
' Aktualisierung der Abschnittsanzeige im Kopf
'    Cells(129, 12) = abschnitt

' Erste Eingabefeld anspringen
'ActiveSheet.Cells(zeile + 2, 7).Select

'End Sub

Private Sub CommandButton8_Click()
' Kopieren und Einf|fffd|gen eines Technischen Datenblatts ohne Muffe
    Sheets("Technisches Datenblatt o. M.").Visible = True
    Sheets("Technisches Datenblatt o. M.").Copy Before:=Sheets(1)
    Sheets("Technisches Datenblatt o. M.").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Technische Abwicklung").Select
End Sub

Private Sub CommandButton9_Click()
' Kopieren und Einf|fffd|gen eines Technischen Datenblatts mit Muffe
'
    Sheets("Technisches Datenblatt m. M.").Visible = True
    Sheets("Technisches Datenblatt m. M.").Copy Before:=Sheets(1)
    Sheets("Technisches Datenblatt m. M.").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Technische Abwicklung").Select

End Sub

Private Sub CommandButtonTechnDS_Click()
Call RueckmeldungTechnikeranDS
End Sub

Sub RueckmeldungTechnikeranDS()
    'Call Raus_damit     ' Beseitigung der Sonderzeichen in L11
    Call Aktualisieren  ' Aktualisieren der e-Mail-Adressen
    
    strEmpfaenger = strAdrNAD   ' E-Mail-Empf|fffd|nger holen
     If strEmpfaenger = "" Then
        MsgBox "E-mail-Adresse fehlt! Bitte das zust|fffd|ndige Produktionsgebiet ausw|fffd|hlen!"
        Exit Sub
    End If
    Dim SAPNr As String
    If Worksheets("Auftragserfassung").Cells(55, 19).Value <> "" Then
        SAPNr = Worksheets("Auftragserfassung").Cells(55, 19).Value
    Else
        SAPNr = ""
    End If

    ' Betreffzeile bilden
    strBetreff = "Techniker an DS / SAP: " & SAPNr 'strArt & " " & strFile & "  " & strProd
    strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & Chr$(13) & "Bitte den Auftrag umgehend in Bearbeitung nehmen!" & Chr$(13) & Chr$(13)

    ' neue Mappe speichern, damit das Anh|fffd|ngen an die Mail erfolgen kann
    strFile = constTEMP & SAPNr & "_" & Now.Date 'strFile
    Application.DisplayAlerts = False ' Sicherheitsabfrage ausschalten - Datei vorhanden
    
    Dim ExcelVersion As String
    ExcelVersion = Application.Version
    If ExcelVersion = "14.0" Or ExcelVersion = "16.0" Then
    ActiveWorkbook.SaveAs Filename:=CStr(strFile), FileFormat:=xlExcel8
    Else
    ActiveWorkbook.SaveAs Filename:=CStr(strFile)
    End If
    
    
    strFile = strFile & ".xls"
    Application.DisplayAlerts = True ' Sicherheitsabfrage wieder einschalten
    

    ' Abfrage ob Mail gesendet werden soll
    If strEmpfaenger = "" Then
        MsgBox "Bitte E-Mail-Adresse angeben!"
        Exit Sub
    Else
        i = MsgBox("Die " & strArt & " an folgenden Adressaten versenden?" & vbLf & _
            strEmpfaenger, vbYesNo, "Beauftragung AS")
        If i = vbNo Then
            ' neue Mappe schlie|fffd|en
            ' ActiveWorkbook.Close False
            Exit Sub
        End If
    End If
    
' E-Mail senden
    NotesMailSend strEmpfaenger, strBetreff, strText, strcc, strbcc, strFile
    MsgBox "Die E-Mail wurde erfolgreich versendet!"
    ' neue Mappe schlie|fffd|en
     ' ActiveWorkbook.Close False
Exit Sub
Abbruch:
    MsgBox "Keine tempor|fffd|re Speicherung erfolgt! Sendevorgang abgebrochen"
     
End Sub 'BeauftragungBOProjekte_an_AV_senden()



Private Sub OptionButton1_Click()
'   Zeilen f|fffd|r ZNAD einblenden
        ActiveSheet.Rows("101:104").Select
        Selection.EntireRow.Hidden = False
        ActiveSheet.Rows("135:136").Select
        Selection.EntireRow.Hidden = False
        ActiveSheet.Range("H98").Select
End Sub

Private Sub OptionButton11_Click()
ActiveSheet.Range("I137").Select
End Sub

Private Sub OptionButton2_Click()
'   Zeilen f|fffd|r ZNAD ausblenden
        ActiveSheet.Rows("101:104").Select
        Selection.EntireRow.Hidden = True
        ActiveSheet.Rows("135:136").Select
        Selection.EntireRow.Hidden = True
        ActiveSheet.Range("H98").Select
End Sub

Private Sub OptionButton3_Click()
ActiveSheet.Range("AE132").Select
End Sub

Private Sub OptionButton4_Click()
ActiveSheet.Range("AE133").Select
End Sub

Private Sub OptionButton5_Click()
ActiveSheet.Range("AE134").Select
End Sub

Private Sub OptionButton7_Click()
'   Zeilen f|fffd|r Kapazit|fffd|tsl|fffd|cken in Abschnitten ausblenden
        ActiveSheet.Rows("133:133").Select
        Selection.EntireRow.Hidden = True
        ActiveSheet.Range("X132").Select
End Sub

Private Sub OptionButton8_Click()
'   Zeilen f|fffd|r keine Kapazit|fffd|t ausblenden
        ActiveSheet.Rows("132:132").Select
        Selection.EntireRow.Hidden = True
        ActiveSheet.Range("X133").Select
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

' Rekursion f|fffd|r die nachfolgenden Aktionen vermeiden
If ((Target.Address = "$N$133") Or (Target.Address = "$AB$7") Or (Target.Address = "$AB$98")) Then Exit Sub

' Automatische Z|fffd|hlung der Kapazit|fffd|tsl|fffd|cken

' Koordinate des Abschnittz|fffd|hlers
Sheets("Technische Abwicklung").Select
abschnitt = Cells(129, 12)

' Alle Z|fffd|hler vor jedem Durchlauf reseten
ActiveSheet.Cells(133, 14) = 0

' Alle erzeugten Abschnitte durchlaufen
For M = 1 To abschnitt
    luecken = ActiveSheet.Cells(133, 14)
    zeile = (M - 1) * 10 + 148
    ' Z|fffd|hlung der Abschnitte "Kapazit|fffd|tsl|fffd|cke im Netz"
    If (Cells(zeile + 1, 20) = "Kapazit|fffd|tsl|fffd|cke im Netz") Then luecken = luecken + 1
    '  Aktualisierung der L|fffd|ckenanzeige
    ActiveSheet.Cells(133, 14) = luecken
Next M

' Einf|fffd|gen des dynamischen Seitenumbruchs Erster Umbruch nach Hauptblock. Alle Schaltabschnitte werden zu sechst pro Blatt im folgenden gruppiert (deshalb Modulo 6)
abschnitt = ActiveSheet.Cells(129, 12)
If abschnitt Mod 6 = 0 Then
zeile = abschnitt * 10 + 148
ActiveSheet.Rows(zeile).PageBreak = xlPageBreakManual
End If

' Druckbereich dynamisch festlegen - Der Druckbereich wird mit jedem Mangel weiter nach unten vergr|fffd||fffd|ert
abschnitt = ActiveSheet.Cells(129, 12)
zeileDruck = abschnitt * 10 + 147
' + 147, damit nicht bei genau nx6 Abschnitten bereits ein neues Blatt ohne Inhalt angebrochen wird
ActiveSheet.PageSetup.PrintArea = Range("A83:AJ" & zeileDruck).Address


End Sub
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton8, 56, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 43, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 42, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 31, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 15, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 14, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 13, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 10, 7, MSForms, CommandButton"
Private Sub CommandButton1_Click()
' Schaltknopf Cu-DA
    ' Einblenden der Bereitstellungsterminzeile in Zeile 13
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = False
            ' Ausblenden der Zeilen 44
    ActiveSheet.Rows("44:44").Select
    Selection.EntireRow.Hidden = True
    
    ActiveSheet.Range("B40").Value = "Bemerkungen zu den Installationsorten:"
    ActiveSheet.Rows("45:51").Select
    Selection.EntireRow.Hidden = False
    ActiveSheet.Range("B5").Select

End Sub

Private Sub CommandButton2_Click()
' Schaltknopf K|fffd|ndigung
'
    ActiveSheet.Range("B1").Value = "K|fffd|ndigungsbest|fffd|tigung"

' Einblenden der Zeilen 10-16 (insbesondere 12)
    ActiveSheet.Rows("10:16").Select
    Selection.EntireRow.Hidden = False
' Ausblenden Zeile 15
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = True
    
            ' Ausblenden der Zeilen 44
    ActiveSheet.Rows("44:44").Select
    Selection.EntireRow.Hidden = True
    

' Einblenden der Bereitstellungsterminzeile in Zeile 13 - hier nun Ende Entgeltpflicht
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = False

' Ersatz Bereitstellungstermin mit "Ende Entgeltpflicht"
    ActiveSheet.Range("B13").Value = "Ende Entgeltpflicht"
    
' Austausch von Standardwerten
    ActiveSheet.Range("F23").Value = "Abgabe K|fffd|ndigungsbest|fffd|tigung"
    
    ActiveSheet.Range("B5").Select
  
End Sub

Private Sub CommandButton3_Click()
' Schaltknopf |fffd|nderung
    ' Ausblenden der Zeile 12 "Aufhebung erfolgt zum"
    ActiveSheet.Rows("12:12").Select
    Selection.EntireRow.Hidden = True
    
    ' Einblenden der Entfernungszeile in Zeile 15
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = False
    
            ' Ausblenden der Zeilen 44
    ActiveSheet.Rows("44:44").Select
    Selection.EntireRow.Hidden = True
    
    ' Einblenden der Bereitstellungsterminzeile in Zeile 13
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = False
    
    ' Austauschen der Standardwerte in bestimmten Zellen
    ActiveSheet.Range("B1").Value = "|fffd|nderungsanzeige"
    ActiveSheet.Range("B13").Value = "Bereitstellungstermin"
    ActiveSheet.Range("F23").Value = "Abgabe |fffd|nderungsanzeige"
    
    ActiveSheet.Range("B5").Select

End Sub

Private Sub CommandButton4_Click()
' Schaltknopf Ursprungszustand Herstellung des Zustands Bereitstellungsanzeige
' Einblenden "Bereitstellunganzeige" in Zelle B1
    ActiveSheet.Range("B1").Value = "Bereitstellungsanzeige"
' Ausblenden der Zeile 12 "Aufhebung erfolgt zum"
    ActiveSheet.Rows("12:12").Select
    Selection.EntireRow.Hidden = True
' Einblenden der Entfernungszeile in Zeile 15
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = False
            ' Ausblenden der Zeilen 44
    ActiveSheet.Rows("44:44").Select
    Selection.EntireRow.Hidden = True
' Einblenden der Bereitstellungsterminzeile in Zeile 13
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = False
' Austauschen der Standardwerte in bestimmten Zellen
    ActiveSheet.Range("F23").Value = "Abgabe Bereitstellungsanzeige"
    ActiveSheet.Range("B13").Value = "Bereitstellungstermin"
    ActiveSheet.Range("B40").Value = "Bemerkungen zu den Installationsorten:"
    
    ActiveSheet.Range("B5").Select
    
End Sub

Private Sub CommandButton5_Click()
Call Auftragsbestaetigung_senden
End Sub

Private Sub CommandButton6_Click()
' Schaltknopf Auftragsbest|fffd|tigung
' Austauschen der Standardwerte in bestimmten Zellen
    ActiveSheet.Range("B1").Value = "Auftragsbest|fffd|tigung"
    ' Ausblenden der Bereitstellungsterminzeile in Zeile 13
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = True
    
        ' Ausblenden der Zeilen 44
    ActiveSheet.Rows("44:44").Select
    Selection.EntireRow.Hidden = True
    
    ' Ausblenden der Entfernungszeile in Zeile 15
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = True
    
    ActiveSheet.Range("B13").Value = "Bereitstellungstermin"
    ActiveSheet.Range("F23").Value = "Abgabe Auftragsbest|fffd|tigung"
    ActiveSheet.Range("B5").Select
End Sub

Private Sub CommandButton7_Click()
' Funktion Automatisches Speichern auf Laufwerk O aufrufen
Call Modul1.AutoSaveO
End Sub

Private Sub CommandButton8_Click()
' Schaltknopf "Keine Bereitstellung"
' Einblenden "Keine Bereitstellungsm|fffd|glichkeit" in Zelle B1
    ActiveSheet.Range("B1").Value = "Keine Bereitstellungsm|fffd|glichkeit"
    
    ' Einblenden der Zeilen 44
    ActiveSheet.Rows("44:44").Select
    Selection.EntireRow.Hidden = False
    
' Ausblenden der Zeile 12 "Aufhebung erfolgt zum"
    ActiveSheet.Rows("12:12").Select
    Selection.EntireRow.Hidden = True
' Ausblenden der Entfernungszeile in Zeile 15
    ActiveSheet.Rows("15:15").Select
    Selection.EntireRow.Hidden = True
' Austauschen der Standardwerte in bestimmten Zellen
    ActiveSheet.Range("F23").Value = "Abgabe Absage"
' Ausblenden der Zeile 13 "Bereitstellungstermin"
    ActiveSheet.Rows("13:13").Select
    Selection.EntireRow.Hidden = True
' Ausblenden des CuDA-spezifischen Teils
    ActiveSheet.Rows("45:51").Select
    Selection.EntireRow.Hidden = True
    ActiveSheet.Range("B40").Value = "Bemerkungen zu den Installationsorten:"
    
    ActiveSheet.Range("B5").Select
    
End Sub
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Sub Worksheet_Deactivate()
' Sofern ein LwL-Auftrag f|fffd|r die ZNAD vorliegt, wird die SAP-Nr der ZNAD in das Blatt Auftragserfassung |fffd|bernommen (zentrale SAP-Nr unter der auch abgespeichert werden soll)
If (Worksheets("Auftragserfassung").Cells(17, 12).Value = "LwL-Beschaltung") Or (Worksheets("Auftragserfassung").Cells(17, 12).Value = "LwL-Spleissung") Or (Worksheets("Auftragserfassung").Cells(17, 12).Value = "LwL-Umschaltung") Or (Worksheets("Auftragserfassung").Cells(17, 12).Value = "LwL-Reservierung") Then Worksheets("Auftragserfassung").Cells(55, 19).Value = Worksheets("Budgetblatt Projekt").Cells(6, 28).Value Else: Worksheets("Auftragserfassung").Cells(55, 19).Value = Worksheets("Budgetblatt Projekt").Cells(5, 28).Value
' Andernfalls wird unter der SAP-Nr der regionalen NAD gespeichert

End Sub

Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Deactivate()
msgbxcbxn = False
Call Raus_damit
End Sub

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptionButton2, 56, 2, MSForms, OptionButton"
Attribute VB_Control = "OptionButton1, 55, 3, MSForms, OptionButton"
Attribute VB_Control = "OptionButton56, 54, 4, MSForms, OptionButton"
Attribute VB_Control = "OptionButton55, 53, 5, MSForms, OptionButton"
Attribute VB_Control = "OptionButton54, 52, 6, MSForms, OptionButton"
Attribute VB_Control = "OptionButton53, 51, 7, MSForms, OptionButton"
Attribute VB_Control = "OptionButton52, 50, 8, MSForms, OptionButton"
Attribute VB_Control = "OptionButton51, 49, 9, MSForms, OptionButton"
Attribute VB_Control = "OptionButton50, 48, 10, MSForms, OptionButton"
Attribute VB_Control = "OptionButton49, 47, 11, MSForms, OptionButton"
Attribute VB_Control = "OptionButton48, 46, 12, MSForms, OptionButton"
Attribute VB_Control = "OptionButton47, 45, 13, MSForms, OptionButton"
Attribute VB_Control = "OptionButton46, 44, 14, MSForms, OptionButton"
Attribute VB_Control = "OptionButton45, 43, 15, MSForms, OptionButton"
Attribute VB_Control = "OptionButton44, 42, 16, MSForms, OptionButton"
Attribute VB_Control = "OptionButton43, 41, 17, MSForms, OptionButton"
Attribute VB_Control = "OptionButton42, 40, 18, MSForms, OptionButton"
Attribute VB_Control = "OptionButton41, 39, 19, MSForms, OptionButton"
Attribute VB_Control = "OptionButton40, 38, 20, MSForms, OptionButton"
Attribute VB_Control = "OptionButton39, 37, 21, MSForms, OptionButton"
Attribute VB_Control = "OptionButton38, 36, 22, MSForms, OptionButton"
Attribute VB_Control = "OptionButton37, 35, 23, MSForms, OptionButton"
Attribute VB_Control = "OptionButton36, 34, 24, MSForms, OptionButton"
Attribute VB_Control = "OptionButton35, 33, 25, MSForms, OptionButton"
Attribute VB_Control = "OptionButton34, 32, 26, MSForms, OptionButton"
Attribute VB_Control = "OptionButton33, 31, 27, MSForms, OptionButton"
Attribute VB_Control = "OptionButton32, 30, 28, MSForms, OptionButton"
Attribute VB_Control = "OptionButton31, 29, 29, MSForms, OptionButton"
Attribute VB_Control = "OptionButton28, 26, 30, MSForms, OptionButton"
Attribute VB_Control = "OptionButton27, 25, 31, MSForms, OptionButton"
Attribute VB_Control = "OptionButton26, 24, 32, MSForms, OptionButton"
Attribute VB_Control = "OptionButton25, 23, 33, MSForms, OptionButton"
Attribute VB_Control = "OptionButton24, 22, 34, MSForms, OptionButton"
Attribute VB_Control = "OptionButton23, 21, 35, MSForms, OptionButton"
Attribute VB_Control = "OptionButton22, 20, 36, MSForms, OptionButton"
Attribute VB_Control = "OptionButton21, 19, 37, MSForms, OptionButton"
Attribute VB_Control = "OptionButton20, 18, 38, MSForms, OptionButton"
Attribute VB_Control = "OptionButton19, 17, 39, MSForms, OptionButton"
Attribute VB_Control = "OptionButton18, 16, 40, MSForms, OptionButton"
Attribute VB_Control = "OptionButton17, 15, 41, MSForms, OptionButton"
Attribute VB_Control = "OptionButton16, 14, 42, MSForms, OptionButton"
Attribute VB_Control = "OptionButton15, 13, 43, MSForms, OptionButton"
Attribute VB_Control = "OptionButton14, 12, 44, MSForms, OptionButton"
Attribute VB_Control = "OptionButton13, 11, 45, MSForms, OptionButton"
Attribute VB_Control = "OptionButton12, 10, 46, MSForms, OptionButton"
Attribute VB_Control = "OptionButton11, 9, 47, MSForms, OptionButton"
Attribute VB_Control = "OptionButton10, 8, 48, MSForms, OptionButton"
Attribute VB_Control = "OptionButton9, 7, 49, MSForms, OptionButton"
Attribute VB_Control = "OptionButton8, 6, 50, MSForms, OptionButton"
Attribute VB_Control = "OptionButton7, 5, 51, MSForms, OptionButton"
Attribute VB_Control = "OptionButton6, 4, 52, MSForms, OptionButton"
Attribute VB_Control = "OptionButton5, 3, 53, MSForms, OptionButton"
Attribute VB_Control = "OptionButton4, 2, 54, MSForms, OptionButton"
Attribute VB_Control = "OptionButton3, 1, 55, MSForms, OptionButton"
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox46, 107, 6, MSForms, CheckBox"
Attribute VB_Control = "OptionButton10, 106, 7, MSForms, OptionButton"
Attribute VB_Control = "OptionButton9, 105, 8, MSForms, OptionButton"
Attribute VB_Control = "CheckBox45, 104, 9, MSForms, CheckBox"
Attribute VB_Control = "CheckBox44, 103, 10, MSForms, CheckBox"
Attribute VB_Control = "CheckBox43, 102, 11, MSForms, CheckBox"
Attribute VB_Control = "CheckBox42, 101, 12, MSForms, CheckBox"
Attribute VB_Control = "CheckBox41, 100, 13, MSForms, CheckBox"
Attribute VB_Control = "CheckBox40, 99, 14, MSForms, CheckBox"
Attribute VB_Control = "CheckBox39, 98, 15, MSForms, CheckBox"
Attribute VB_Control = "CheckBox38, 97, 16, MSForms, CheckBox"
Attribute VB_Control = "CheckBox37, 96, 17, MSForms, CheckBox"
Attribute VB_Control = "CheckBox36, 95, 18, MSForms, CheckBox"
Attribute VB_Control = "CheckBox35, 88, 19, MSForms, CheckBox"
Attribute VB_Control = "CheckBox34, 87, 20, MSForms, CheckBox"
Attribute VB_Control = "CheckBox33, 86, 21, MSForms, CheckBox"
Attribute VB_Control = "CheckBox32, 85, 22, MSForms, CheckBox"
Attribute VB_Control = "CheckBox30, 84, 23, MSForms, CheckBox"
Attribute VB_Control = "CheckBox31, 83, 24, MSForms, CheckBox"
Attribute VB_Control = "CheckBox29, 81, 25, MSForms, CheckBox"
Attribute VB_Control = "CheckBox28, 80, 26, MSForms, CheckBox"
Attribute VB_Control = "CommandButton1, 79, 27, MSForms, CommandButton"
Attribute VB_Control = "CheckBox27, 78, 28, MSForms, CheckBox"
Attribute VB_Control = "CheckBox26, 77, 29, MSForms, CheckBox"
Attribute VB_Control = "CheckBox25, 76, 30, MSForms, CheckBox"
Attribute VB_Control = "CheckBox24, 75, 31, MSForms, CheckBox"
Attribute VB_Control = "CheckBox23, 74, 32, MSForms, CheckBox"
Attribute VB_Control = "CheckBox22, 73, 33, MSForms, CheckBox"
Attribute VB_Control = "CheckBox21, 72, 34, MSForms, CheckBox"
Attribute VB_Control = "CheckBox20, 70, 35, MSForms, CheckBox"
Attribute VB_Control = "CheckBox19, 69, 36, MSForms, CheckBox"
Attribute VB_Control = "CheckBox18, 68, 37, MSForms, CheckBox"
Attribute VB_Control = "CheckBox17, 67, 38, MSForms, CheckBox"
Attribute VB_Control = "CheckBox16, 66, 39, MSForms, CheckBox"
Attribute VB_Control = "CheckBox15, 65, 40, MSForms, CheckBox"
Attribute VB_Control = "CheckBox12, 64, 41, MSForms, CheckBox"
Attribute VB_Control = "CheckBox14, 63, 42, MSForms, CheckBox"
Attribute VB_Control = "CheckBox13, 62, 43, MSForms, CheckBox"
Attribute VB_Control = "CheckBox11, 60, 44, MSForms, CheckBox"
Attribute VB_Control = "CheckBox10, 59, 45, MSForms, CheckBox"
Attribute VB_Control = "CheckBox9, 58, 46, MSForms, CheckBox"
Attribute VB_Control = "CheckBox8, 57, 47, MSForms, CheckBox"
Attribute VB_Control = "CheckBox7, 56, 48, MSForms, CheckBox"
Attribute VB_Control = "CheckBox6, 55, 49, MSForms, CheckBox"
Attribute VB_Control = "CheckBox4, 53, 50, MSForms, CheckBox"
Attribute VB_Control = "CheckBox3, 52, 51, MSForms, CheckBox"
Attribute VB_Control = "CheckBox2, 51, 52, MSForms, CheckBox"
Attribute VB_Control = "CheckBox1, 49, 53, MSForms, CheckBox"
Attribute VB_Control = "OptionButton8, 47, 54, MSForms, OptionButton"
Attribute VB_Control = "OptionButton7, 46, 55, MSForms, OptionButton"
Attribute VB_Control = "OptionButton6, 45, 56, MSForms, OptionButton"
Attribute VB_Control = "OptionButton5, 44, 57, MSForms, OptionButton"
Attribute VB_Control = "OptionButton4, 43, 58, MSForms, OptionButton"
Attribute VB_Control = "OptionButton3, 42, 59, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 41, 60, MSForms, OptionButton"
Attribute VB_Control = "OptionButton1, 40, 61, MSForms, OptionButton"
Attribute VB_Control = "CheckBox5, 54, 62, MSForms, CheckBox"
Private Sub CheckBox1_Click()

End Sub

Private Sub CheckBox12_Click()
' LRE nicht zul|fffd|ssig
If CheckBox12 = True Then OptionButton4 = True
End Sub

Private Sub CheckBox13_Click()
' LRE nicht zul|fffd|ssig
If CheckBox13 = True Then OptionButton4 = True
End Sub

Private Sub CheckBox14_Click()
' LRE nicht zul|fffd|ssig
If CheckBox14 = True Then OptionButton4 = True
End Sub

Private Sub CheckBox15_Click()

End Sub

Private Sub CheckBox17_Click()
' SHDSL nicht zul|fffd|ssig
If CheckBox17 = True Then OptionButton8 = True
End Sub

Private Sub CheckBox18_Click()
' SHDSL nicht zul|fffd|ssig
If CheckBox18 = True Then OptionButton8 = True
End Sub

Private Sub CheckBox2_Click()
' ADSL/ADSL2+ nicht zul|fffd|ssig
If CheckBox2 = True Then OptionButton10 = True
End Sub

Private Sub CheckBox20_Click()
' E1 im Kabel
' Checkbox im Resultat synchron aktivieren
If CheckBox20 = True Then CheckBox24 = True

' Sonderverhalten bei ADSL-Produkten mit E1 im Kabel - Schalten ADSL(2+) nicht m|fffd|glich
If CheckBox20 = True Then
OptionButton10 = True
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B48:D48").Value = "Schalten ADSL(2+) nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

' Hinweis E1 im Kabel in Bereitstellungsanzeige schreiben
If CheckBox20 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("G49:H49").Value = "E1 im beschalteten Kabel"
    With ActiveCell.Characters(Start:=1, Length:=24).Font
        .Name = "Arial"
        .FontStyle = "Standard"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 3
    End With
End If
' Zur|fffd|ck zur Checkliste
    Sheets("Checkliste").Select
    Range("U65").Select
End Sub

Private Sub CheckBox21_Click()
'CuDA VDSL ist eingerichtet
If CheckBox21 = True Then
CheckBox22 = False
CheckBox23 = False
CheckBox46 = False
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("F46:H46").Value = "CuDA VDSL ist eingerichtet"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

' Warnmeldung bei widerspr|fffd|chlichen Eintr|fffd|gen
If CheckBox21 = True And OptionButton2 = True Then MsgBox ("Die VDSL-Einrichtung steht im Widerspruch zu den Erkundungsergebnissen! Bitte pr|fffd|fen!")

End Sub

Private Sub CheckBox22_Click()
'CuDA LRE ist eingerichtet
If CheckBox22 = True Then
CheckBox21 = False
CheckBox23 = False
CheckBox46 = False
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("F46:H46").Value = "CuDA LRE ist eingerichtet"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

' Warnmeldung bei widerspr|fffd|chlichen Eintr|fffd|gen
If CheckBox22 = True And OptionButton4 = True Then MsgBox ("Die LRE-Einrichtung steht im Widerspruch zu den Erkundungsergebnissen! Bitte pr|fffd|fen!")


End Sub

Private Sub CheckBox23_Click()
'CuDA SHDSL ist eingerichtet
If CheckBox23 = True Then
CheckBox21 = False
CheckBox22 = False
CheckBox46 = False
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("F46:H46").Value = "CuDA SHDSL ist eingerichtet"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

' Warnmeldung bei widerspr|fffd|chlichen Eintr|fffd|gen
If CheckBox23 = True And OptionButton8 = True Then MsgBox ("Die SHDSL-Einrichtung steht im Widerspruch zu den Erkundungsergebnissen! Bitte pr|fffd|fen!")


End Sub

Private Sub CheckBox24_Click()
' E1 im Kabel
' Checkbox im Resultat synchron aktivieren
If CheckBox24 = True Then CheckBox20 = True
' Hinweis E1 im Kabel in Bereitstellungsanzeige schreiben
If CheckBox24 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("G49:H49").Value = "E1 im beschalteten Kabel"
    With ActiveCell.Characters(Start:=1, Length:=24).Font
        .Name = "Arial"
        .FontStyle = "Standard"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 3
    End With
End If
' Zur|fffd|ck zur Checkliste
    Sheets("Checkliste").Select
    Range("U65").Select
End Sub

Private Sub CheckBox25_Click()
'Einrichtung zum Wunschtermin
If CheckBox25 = True Then
CheckBox26 = False
ActiveSheet.Range("U65").Value = ActiveSheet.Range("Z5").Value
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("F48:G48").Value = "Schaltung zum Wunschtermin"
ActiveSheet.Range("H48").Value = ActiveSheet.Range("D11:F11").Value

' Schaltdatum in Technische Abwicklung eintragen
Sheets("Technische Abwicklung").Select
ActiveSheet.Range("AE129:AI129").Value = ActiveSheet.Range("AE91").Value

Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub CheckBox26_Click()
'Schaltung erfolgt zum:
If CheckBox26 = True Then
CheckBox25 = False
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("F48:G48").Value = "Schaltung erfolgt zum:"
ActiveSheet.Range("H48").Value = ActiveSheet.Range("G63").Value

' Schaltdatum in Technische Abwicklung eintragen
Sheets("Technische Abwicklung").Select
ActiveSheet.Range("AE129:AI129").Value = ActiveSheet.Range("AM91").Value

Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub CheckBox27_Click()
' Kein Leitungsweg vorhanden - Keine Variante m|fffd|glich
If CheckBox27 = True Then
OptionButton2 = True
OptionButton4 = True
OptionButton6 = True
OptionButton8 = True
OptionButton10 = True
End If
End Sub

Private Sub CheckBox30_Click()
' SHDSL nicht zul|fffd|ssig
If CheckBox30 = True Then OptionButton8 = True
End Sub

Private Sub CheckBox31_Click()
' SHDSL nicht zul|fffd|ssig
If CheckBox31 = True Then OptionButton8 = True
End Sub

Private Sub CheckBox33_Click()
' ADSL/ADSL2+ nicht zul|fffd|ssig
If CheckBox33 = True Then OptionButton10 = True
End Sub

Private Sub CheckBox35_Click()
' LRE nicht zul|fffd|ssig
If CheckBox35 = True Then OptionButton4 = True
End Sub

Private Sub CheckBox38_Click()
' VDSL nicht zul|fffd|ssig
If CheckBox38 = True Then OptionButton2 = True
End Sub

Private Sub CheckBox4_Click()

End Sub

Private Sub CheckBox40_Click()
' VDSL nicht zul|fffd|ssig
If CheckBox40 = True Then OptionButton2 = True
End Sub

Private Sub CheckBox41_Click()
' VDSL nicht zul|fffd|ssig
If CheckBox41 = True Then OptionButton2 = True
End Sub

Private Sub CheckBox44_Click()
' VDSL nicht zul|fffd|ssig
If CheckBox44 = True Then OptionButton2 = True
End Sub

Private Sub CheckBox45_Click()
' VDSL nicht zul|fffd|ssig
If CheckBox45 = True Then OptionButton2 = True
End Sub

Private Sub CheckBox46_Click()
'ADSL(2+) ist eingerichtet
If CheckBox46 = True Then
CheckBox21 = False
CheckBox22 = False
CheckBox23 = False
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("F46:H46").Value = "ADSL(2+) ist eingerichtet"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

' Warnmeldung bei widerspr|fffd|chlichen Eintr|fffd|gen
If CheckBox46 = True And OptionButton10 = True Then MsgBox ("Die ADSL-Einrichtung steht im Widerspruch zu den Erkundungsergebnissen! Bitte pr|fffd|fen!")


End Sub

Private Sub CheckBox6_Click()
' ADSL/ADSL2+ nicht zul|fffd|ssig
If CheckBox6 = True Then OptionButton10 = True
End Sub

Private Sub CheckBox7_Click()
' ADSL/ADSL2+ nicht zul|fffd|ssig
If CheckBox7 = True Then OptionButton10 = True
End Sub

Private Sub CheckBox8_Click()
' ADSL/ADSL2+ nicht zul|fffd|ssig
If CheckBox8 = True Then OptionButton10 = True
End Sub

Private Sub CommandButton1_Click()
' Funktion Automatisches Speichern auf Laufwerk O aufrufen
Call Modul1.AutoSaveO
End Sub

Private Sub OptionButton1_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten CuDA VDSL m|fffd|glich
If OptionButton1 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B46:D46").Value = "Schalten CuDA VDSL m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton10_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten ADSL(2+) nicht m|fffd|glich
If OptionButton10 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B48:D48").Value = "Schalten ADSL(2+) nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton2_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten CuDA VDSL nicht m|fffd|glich
If OptionButton2 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B46:D46").Value = "Schalten CuDA VDSL nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton3_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten CuDA LRE m|fffd|glich
If OptionButton3 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B47:D47").Value = "Schalten CuDA LRE m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton4_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten CuDA LRE nicht m|fffd|glich
If OptionButton4 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B47:D47").Value = "Schalten CuDA LRE nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton5_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' DB Access Campus m|fffd|glich
If OptionButton5 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B51:D51").Value = "DB Access Campus m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton6_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' DB Access Campus nicht m|fffd|glich
If OptionButton6 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B51:D51").Value = "DB Access Campus nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub

Private Sub OptionButton7_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten DBA PartyLINE m|fffd|glich
If OptionButton7 = True And Range("L7") = "DBA PartyLINE" Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B49:D49").Value = "DB Access PartyLINE m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

' Schalten CuDA SHDSL m|fffd|glich
If OptionButton7 = True And ((Range("L7") = "CuDA-2Dr-(hoch)-SHDSL") Or (Range("L7") = "CuDA-4Dr-(hoch)-SHDSL") Or (Range("L7") = "CuDA-6Dr-(hoch)-SHDSL")) Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B49:D49").Value = "Schalten CuDA SHDSL m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If


End Sub

Private Sub OptionButton8_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten DBA PartyLINE nicht m|fffd|glich
If OptionButton8 = True And Range("L7") = "DBA PartyLINE" Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B49:D49").Value = "DB Access PartyLINE nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
' Schalten CuDA SHDSL nicht m|fffd|glich
If OptionButton8 = True And ((Range("L7") = "CuDA-2Dr-(hoch)-SHDSL") Or (Range("L7") = "CuDA-4Dr-(hoch)-SHDSL") Or (Range("L7") = "CuDA-6Dr-(hoch)-SHDSL")) Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B49:D49").Value = "Schalten CuDA SHDSL nicht m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If

End Sub


Private Sub OptionButton9_Click()
' R|fffd|ckmeldung der jeweiligen Option in die Bereitstellungsanzeige
' Schalten ADSL(2+) m|fffd|glich
If OptionButton9 = True Then
Sheets("AM Bereitstellungsanzeige").Select
ActiveSheet.Range("B48:D48").Value = "Schalten ADSL(2+) m|fffd|glich"
Sheets("Checkliste").Select
ActiveSheet.Range("B59:AE59").Select
End If
End Sub
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptionButton52, 113, 7, MSForms, OptionButton"
Attribute VB_Control = "OptionButton51, 112, 8, MSForms, OptionButton"
Attribute VB_Control = "OptionButton50, 111, 9, MSForms, OptionButton"
Attribute VB_Control = "OptionButton49, 110, 10, MSForms, OptionButton"
Attribute VB_Control = "OptionButton100, 109, 11, MSForms, OptionButton"
Attribute VB_Control = "OptionButton99, 108, 12, MSForms, OptionButton"
Attribute VB_Control = "OptionButton98, 107, 13, MSForms, OptionButton"
Attribute VB_Control = "OptionButton97, 106, 14, MSForms, OptionButton"
Attribute VB_Control = "OptionButton96, 105, 15, MSForms, OptionButton"
Attribute VB_Control = "OptionButton95, 104, 16, MSForms, OptionButton"
Attribute VB_Control = "OptionButton94, 103, 17, MSForms, OptionButton"
Attribute VB_Control = "OptionButton93, 102, 18, MSForms, OptionButton"
Attribute VB_Control = "OptionButton92, 101, 19, MSForms, OptionButton"
Attribute VB_Control = "OptionButton91, 100, 20, MSForms, OptionButton"
Attribute VB_Control = "OptionButton90, 99, 21, MSForms, OptionButton"
Attribute VB_Control = "OptionButton89, 98, 22, MSForms, OptionButton"
Attribute VB_Control = "OptionButton88, 97, 23, MSForms, OptionButton"
Attribute VB_Control = "OptionButton87, 96, 24, MSForms, OptionButton"
Attribute VB_Control = "OptionButton86, 95, 25, MSForms, OptionButton"
Attribute VB_Control = "OptionButton85, 94, 26, MSForms, OptionButton"
Attribute VB_Control = "OptionButton84, 93, 27, MSForms, OptionButton"
Attribute VB_Control = "OptionButton83, 92, 28, MSForms, OptionButton"
Attribute VB_Control = "OptionButton82, 91, 29, MSForms, OptionButton"
Attribute VB_Control = "OptionButton81, 90, 30, MSForms, OptionButton"
Attribute VB_Control = "OptionButton80, 89, 31, MSForms, OptionButton"
Attribute VB_Control = "OptionButton79, 88, 32, MSForms, OptionButton"
Attribute VB_Control = "OptionButton78, 87, 33, MSForms, OptionButton"
Attribute VB_Control = "OptionButton77, 86, 34, MSForms, OptionButton"
Attribute VB_Control = "OptionButton76, 85, 35, MSForms, OptionButton"
Attribute VB_Control = "OptionButton75, 84, 36, MSForms, OptionButton"
Attribute VB_Control = "OptionButton74, 83, 37, MSForms, OptionButton"
Attribute VB_Control = "OptionButton73, 82, 38, MSForms, OptionButton"
Attribute VB_Control = "OptionButton72, 81, 39, MSForms, OptionButton"
Attribute VB_Control = "OptionButton71, 80, 40, MSForms, OptionButton"
Attribute VB_Control = "OptionButton70, 79, 41, MSForms, OptionButton"
Attribute VB_Control = "OptionButton69, 78, 42, MSForms, OptionButton"
Attribute VB_Control = "OptionButton68, 77, 43, MSForms, OptionButton"
Attribute VB_Control = "OptionButton67, 76, 44, MSForms, OptionButton"
Attribute VB_Control = "OptionButton66, 75, 45, MSForms, OptionButton"
Attribute VB_Control = "OptionButton65, 74, 46, MSForms, OptionButton"
Attribute VB_Control = "OptionButton64, 73, 47, MSForms, OptionButton"
Attribute VB_Control = "OptionButton63, 72, 48, MSForms, OptionButton"
Attribute VB_Control = "OptionButton62, 71, 49, MSForms, OptionButton"
Attribute VB_Control = "OptionButton61, 70, 50, MSForms, OptionButton"
Attribute VB_Control = "OptionButton60, 69, 51, MSForms, OptionButton"
Attribute VB_Control = "OptionButton59, 68, 52, MSForms, OptionButton"
Attribute VB_Control = "OptionButton58, 67, 53, MSForms, OptionButton"
Attribute VB_Control = "OptionButton57, 66, 54, MSForms, OptionButton"
Attribute VB_Control = "OptionButton56, 65, 55, MSForms, OptionButton"
Attribute VB_Control = "OptionButton55, 64, 56, MSForms, OptionButton"
Attribute VB_Control = "OptionButton54, 63, 57, MSForms, OptionButton"
Attribute VB_Control = "OptionButton53, 62, 58, MSForms, OptionButton"
Attribute VB_Control = "OptionButton48, 57, 59, MSForms, OptionButton"
Attribute VB_Control = "OptionButton47, 56, 60, MSForms, OptionButton"
Attribute VB_Control = "OptionButton46, 55, 61, MSForms, OptionButton"
Attribute VB_Control = "OptionButton45, 54, 62, MSForms, OptionButton"
Attribute VB_Control = "OptionButton44, 53, 63, MSForms, OptionButton"
Attribute VB_Control = "OptionButton43, 52, 64, MSForms, OptionButton"
Attribute VB_Control = "OptionButton42, 51, 65, MSForms, OptionButton"
Attribute VB_Control = "OptionButton41, 50, 66, MSForms, OptionButton"
Attribute VB_Control = "OptionButton40, 49, 67, MSForms, OptionButton"
Attribute VB_Control = "OptionButton39, 48, 68, MSForms, OptionButton"
Attribute VB_Control = "OptionButton38, 47, 69, MSForms, OptionButton"
Attribute VB_Control = "OptionButton37, 46, 70, MSForms, OptionButton"
Attribute VB_Control = "OptionButton36, 45, 71, MSForms, OptionButton"
Attribute VB_Control = "OptionButton35, 44, 72, MSForms, OptionButton"
Attribute VB_Control = "OptionButton34, 43, 73, MSForms, OptionButton"
Attribute VB_Control = "OptionButton33, 42, 74, MSForms, OptionButton"
Attribute VB_Control = "OptionButton32, 41, 75, MSForms, OptionButton"
Attribute VB_Control = "OptionButton31, 40, 76, MSForms, OptionButton"
Attribute VB_Control = "OptionButton30, 39, 77, MSForms, OptionButton"
Attribute VB_Control = "OptionButton29, 38, 78, MSForms, OptionButton"
Attribute VB_Control = "OptionButton28, 37, 79, MSForms, OptionButton"
Attribute VB_Control = "OptionButton27, 36, 80, MSForms, OptionButton"
Attribute VB_Control = "OptionButton26, 35, 81, MSForms, OptionButton"
Attribute VB_Control = "OptionButton25, 34, 82, MSForms, OptionButton"
Attribute VB_Control = "OptionButton24, 33, 83, MSForms, OptionButton"
Attribute VB_Control = "OptionButton23, 32, 84, MSForms, OptionButton"
Attribute VB_Control = "OptionButton22, 31, 85, MSForms, OptionButton"
Attribute VB_Control = "OptionButton21, 30, 86, MSForms, OptionButton"
Attribute VB_Control = "OptionButton20, 29, 87, MSForms, OptionButton"
Attribute VB_Control = "OptionButton19, 28, 88, MSForms, OptionButton"
Attribute VB_Control = "OptionButton18, 27, 89, MSForms, OptionButton"
Attribute VB_Control = "OptionButton17, 26, 90, MSForms, OptionButton"
Attribute VB_Control = "OptionButton16, 25, 91, MSForms, OptionButton"
Attribute VB_Control = "OptionButton15, 24, 92, MSForms, OptionButton"
Attribute VB_Control = "OptionButton14, 23, 93, MSForms, OptionButton"
Attribute VB_Control = "OptionButton13, 22, 94, MSForms, OptionButton"
Attribute VB_Control = "OptionButton12, 21, 95, MSForms, OptionButton"
Attribute VB_Control = "OptionButton11, 20, 96, MSForms, OptionButton"
Attribute VB_Control = "OptionButton10, 19, 97, MSForms, OptionButton"
Attribute VB_Control = "OptionButton9, 18, 98, MSForms, OptionButton"
Attribute VB_Control = "OptionButton8, 17, 99, MSForms, OptionButton"
Attribute VB_Control = "OptionButton7, 16, 100, MSForms, OptionButton"
Attribute VB_Control = "OptionButton6, 15, 101, MSForms, OptionButton"
Attribute VB_Control = "OptionButton5, 14, 102, MSForms, OptionButton"
Attribute VB_Control = "OptionButton4, 13, 103, MSForms, OptionButton"
Attribute VB_Control = "OptionButton3, 12, 104, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 11, 105, MSForms, OptionButton"
Attribute VB_Control = "OptionButton1, 6, 106, MSForms, OptionButton"
Private Sub OptionButton12_Click()

End Sub
Attribute VB_Name = "email_senden"
Public strAdrBO As String 'e-mail-Adresse des g|fffd|ltigen Backoffice (abh|fffd|ngig von Regionsauswahl)
Public strAdrAG As String 'e-mail-Adresse des Auftraggebers (fix in Auftragserfassung eingegeben
Public strAdrAV As String 'e-mail-Adresse der g|fffd|ltigen Auftragsvorbereitung (abh|fffd|ngig von Regionsauswahl)
Public strAdrSB As String 'e-mail-Adresse des g|fffd|ltigen Servicebezirks (abh|fffd|ngig von manueller Auswahl)
Public strAdrZNAD As String 'e-mail-Adresse der Zentralen Netzadministration (fix)
Public strAdrNOC As String 'e-mail-Adresse des g|fffd|ltigen NOC (abh|fffd|ngig von Regionsauswahl)
Public strAdrLLM As String 'e-mail-Adresse der Zentralen Netzadministration (fix)
Public strAdrNAD As String 'e-mail-Adresse der g|fffd|ltigen Netzadministration (abh|fffd|ngig von Regionsauswahl)
Public strAdrCapri As String 'e-mail der DS Capri-Stelle
Public strSAP As String ' SAP-Auftragsnummer aus S51
Public strVarB As String ' Variabler Anteil im Betreff der E-Mail (abh|fffd|ngig von Gesch|fffd|ftsvorfall
Public strPfad As String ' Pfad auf Laufwerk zur gespeicherten Datei (f|fffd|r Link in e-Mail)
Public strEmpfaenger As String
Public strBetreff, strText, strbcc As String
Public strFile As String ' Bestell-Nr AG bei Produkten oder Projektbezeichnung
Public strArt As String  ' Auftragsart Neuanschaltung, K|fffd|ndigung, |fffd|nderung
Public strProd As String ' Betroffenes Produkt / betroffener |fffd|bertragungsweg
Public fehler As Integer



Public Const constTEMP = "D:\TEMP\"
' Public Const constBlindkopie = "@db-telematik.de"


Function NotesMailSend(strEmpfaenger As Variant, strBetreff As Variant, _
strText As Variant, strcc As Variant, strbcc As Variant, strFileName As _
String)
    ' Dimensionierung der Objektvariablen
    Dim objNotes As Object, objNotesDB As Object, objNotesMailDoc As Object
    Dim SendItem, NCopyItem, BlindCopyToItem, i As Integer, rtitem
    Dim msg As String
    Dim Dateiname As Variant
    
    ExcelVersion = Application.Version

    If Not ExcelVersion = "16.0" Then
    
    
    '
    ' Zuweisung der Objektvariablen
    'On Error GoTo ExitF
    Set objNotes = GetObject("", "Notes.Notessession")
    Set objNotesDB = objNotes.GETDATABASE("", "")
    
    ' |fffd|ffnen der Standard-Maildatenbank / Erstellen neues Maildokument
    Call objNotesDB.OPENMAIL
    Set objNotesMailDoc = objNotesDB.CREATEDOCUMENT
    objNotesMailDoc.Form = "Memo"
    Call objNotesMailDoc.Save(True, False)
    Set SendItem = objNotesMailDoc.APPENDITEMVALUE("SendTo", "")
    'Set NCopyItem = objNotesMailDoc.APPENDITEMVALUE("CopyTo", "")
    Set BlindCopyToItem = objNotesMailDoc.APPENDITEMVALUE("BlindCopyTo", "")
    objNotesMailDoc.sendto = strEmpfaenger
    ' Die folgende Zeile wurde wieder aktiv geschaltet f|fffd|r strcc
    objNotesMailDoc.copyto = strcc
    Call objNotesMailDoc.ReplaceItemValue("CopyTo", strcc)
    objNotesMailDoc.blindcopyto = strbcc
    objNotesMailDoc.Subject = strBetreff
    Set rtitem = objNotesMailDoc.CREATERICHTEXTITEM("Body")
    objNotesMailDoc.Body = strText & Chr(10)
    
    rtitem.ADDNEWLINE (1)
    If strFileName <> "" Then
       Call rtitem.EMBEDOBJECT(1454, "", strFileName)
    End If
    
    
    ' Mail zustellen
    Call objNotesMailDoc.Save(True, False)
    Call objNotesMailDoc.Send(False)
    objNotesMailDoc.RemoveItem ("DeliveredDate")
    Call objNotesMailDoc.Save(True, False)
    
    ' Objektvariablen zur|fffd|cksetzen
    Call objNotes.Close
    ' Leider funktioniert der Quit-Befehl aus irgend einem Grund nicht.
    'objNotes.Quit
    Set objNotes = Nothing
ExitF:


'''''''''''''''''''''''''''''''''''''''''''''Versand |fffd|ber O365 Outlook'''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Else

 ' SET Outlook APPLICATION OBJECT.
    Dim objOutlook As Object
    Set objOutlook = CreateObject("Outlook.Application")
    
    ' CREATE EMAIL OBJECT.
    Dim objEmail As Object
    Set objEmail = objOutlook.CreateItem(olMailItem)
 
    With objEmail
        .To = strEmpfaenger
        .Subject = strBetreff
        .Body = strText
                

'        .Display
         .Attachments.Add (strFileName)
        .Send
    End With
    
    ' CLEAR.
    Set objEmail = Nothing:    Set objOutlook = Nothing

End If

End Function
Sub BeauftragungBOProjekte_an_AV_senden()
' Dieses Sub erstellt die Beauftragung der AV/AM durch Backoffice oder Projekte

    ' Beseitigung der Sonderzeichen in L11
    Call Raus_damit
    
    ' Aktualisieren der e-Mail-Adressen
    Call Aktualisieren
    
    ' Hier wird vor dem Mailversand gepr|fffd|ft, ob die Felder Region, Produkt, Bestell-Nr und Auftragsart gef|fffd|llt wurden
    Call Leerstand_pr|fffd|fen
    If fehler = "1" Then Exit Sub
    
    ' Leere Auftraggeber-E-Mail-Adresse nur bei Auftr|fffd|gen aus Projekten abfangen
    If strAdrAG = "" And Worksheets("Auftragserfassung").OptionButton2.Value = True Then
        MsgBox "Bitte e-mail-Adresse des Auftraggebers f|fffd|r R|fffd|ckantwort eintragen!"
        ActiveSheet.Range("L10").Select
        Exit Sub
    End If
    
    
    ' E-Mail-Empf|fffd|nger holen
    strEmpfaenger = Application.InputBox(prompt:="Bitte E-Mail-Adresse des AS eintragen:", Title:="Weiterleitung AS", Default:=strAdrAV)
     If strEmpfaenger = "" Then
        MsgBox "E-mail-Adresse fehlt! Bitte das zust|fffd|ndige Produktionsgebiet ausw|fffd|hlen!"
        ActiveSheet.Range("B47").Select
        Exit Sub
    End If
    
    ' Datum des e-Mail-Versands in das Feld "Eingang AV/AM" eintragen
    Worksheets("Auftragserfassung").Cells(49, 2).Value = Date
    
    ' Betreffzeile bilden
    strBetreff = strArt & " " & strFile & "  " & strProd

    ' Text
    strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & Chr$(13) & "Bitte den Auftrag umgehend in Bearbeitung nehmen!" & Chr$(13) & Chr$(13)

    ' neue Mappe speichern, damit das Anh|fffd|ngen an die Mail erfolgen kann
    strFile = constTEMP & strFile
    Application.DisplayAlerts = False ' Sicherheitsabfrage ausschalten - Datei vorhanden
    
    Dim ExcelVersion As String
    ExcelVersion = Application.Version
    If ExcelVersion = "14.0" Or ExcelVersion = "16.0" Then
    ActiveWorkbook.SaveAs Filename:=CStr(strFile), FileFormat:=xlExcel8
    Else
    ActiveWorkbook.SaveAs Filename:=CStr(strFile)
    End If
    
    
    strFile = strFile & ".xls"
    Application.DisplayAlerts = True ' Sicherheitsabfrage wieder einschalten
    

    ' Abfrage ob Mail gesendet werden soll
    If strEmpfaenger = "" Then
        MsgBox "Bitte E-Mail-Adresse angeben!"
        Exit Sub
    Else
        i = MsgBox("Die " & strArt & " an folgenden Adressaten versenden?" & vbLf & _
            strEmpfaenger, vbYesNo, "Beauftragung AS")
        If i = vbNo Then
            ' neue Mappe schlie|fffd|en
            ' ActiveWorkbook.Close False
            Exit Sub
        End If
    End If
    
' E-Mail senden
    NotesMailSend strEmpfaenger, strBetreff, strText, strcc, strbcc, strFile
    MsgBox "Die E-Mail wurde erfolgreich versendet!"
    ' neue Mappe schlie|fffd|en
     ' ActiveWorkbook.Close False
Exit Sub
Abbruch:
    MsgBox "Keine tempor|fffd|re Speicherung erfolgt! Sendevorgang abgebrochen"
     
End Sub 'BeauftragungBOProjekte_an_AV_senden()
Sub BeauftragungAV_an_NAD_senden()
' Dieses Sub erstellt die Beauftragung der NAD bzw. ZNAD durch die AV/AM
    
    ' Beseitigung der Sonderzeichen in L11
    Call Raus_damit
    
    ' Aktualisieren der e-Mail-Adressen
    Call Aktualisieren
    
    ' Hier wird vor dem Mailversand gepr|fffd|ft, ob die Felder Region, Produkt, Bestell-Nr und Auftragsart gef|fffd|llt wurden
    Call Leerstand_pr|fffd|fen
    If fehler = "1" Then Exit Sub
    
    
    ' Umleitung der e-Mail-Beauftragung zur ZNAD bei LwL-Schaltauftr|fffd|gen
    If ((Range("L17") = "LwL-Beschaltung") Or (Range("L17") = "LwL-Spleissung") Or (Range("L17") = "LwL-Umschaltung") Or (Range("L17") = "LwL-Reservierung")) Then
        ' Hinweis zur Umleitung ZNAD
        MsgBox "Es wurde ein Auftrag zur LwL-Beschaltung erstellt. Somit wird der Auftrag an das DS Fasermanagement geleitet (Kopie DS)"
        ' E-Mail-Empf|fffd|nger holen
        strEmpfaenger = Application.InputBox(prompt:="Bitte E-Mail-Adresse des Fasermanagement eintragen:", Title:="Weiterleitung Faserm.", Default:=strAdrZNAD)
            If strEmpfaenger = "" Then
            MsgBox "E-Mail-Adresse fehlt!"
            Exit Sub
            End If
        ' Regionale NAD zur Info auf Kopie nehmen
        strcc = strAdrNAD
        ' Betreffzeile ZNAD bilden
        strBetreff = "Fasermanagement-Auftrag: " & strArt & " " & strFile & "  " & strProd
        ' Eingangsdatum ZNAD setzen (Versanddatum der Mail)
        Worksheets("Technische Abwicklung").Cells(104, 21).Value = Date
        ' Text
        strText = "Diese E-mail ist automatisch generiert!" & Chr$(13) & Chr$(13) & "Bitte den LwL-Auftrag umgehend in Bearbeitung nehmen und auf dem Zentrallaufwerk abspeichern!" & Chr$(13) & Chr$(13) & Chr$(13) & "Hinweis an DS: Nach Fertigstellung des Auftrags durch das Fasermanagement wird der Auftrag an den zust.DS zur weiteren Koordination zur|fffd|ckgemeldet"
        ' Die produktorientierten n|fffd|chsten Zeilen |fffd|berspringen/auslassen
        GoTo Sprung
    End If
   
' Bis Marke Srung: nur f|fffd|r non-LwL-Schaltauftr|fffd|ge

    ' E-Mail-Empf|fffd|nger holen
    strEmpfaenger = Application.InputBox(prompt:="Bitte E-Mail-Adresse des Dokumentationsservices eintragen:", Title:="Weiterleitung DS", Default:=strAdrNAD)
    If strEmpfaenger = "" Then
        MsgBox "E-Mail-Adresse fehlt!"
        Exit Sub
    End If
    
    ' Send-In Auftragsabwicklung IuK/HQ/DBT bei Produkten zwecks Archivierung auf Kopie nehmen
    'If Worksheets("Auftragserfassung").OptionButton1.Value = True Then strcc = "Send-In Auftragsabwicklung IuK/HQ/DBT"
    
    ' SAP-Nummer einlesen
    strSAP = Worksheets("Auftragserfassung").Cells(51, 19).Value
    
    ' Leere SAP-Nummer abfangen
    If strSAP = "" Then
        MsgBox "SAP-Auftragsnummer fehlt!"
        ActiveSheet.Range("S51").Select
        Exit Sub
    End If
    
    ' Betreffzeile bilden
    strBetreff = strArt & " " & strFile & "  " & "SAP: " & strSAP & "  " & strProd
    
    ' Text
    strText = "Diese E-mail ist automatisch generiert!" & Chr$(13) & Chr$(13) & "Bitte den Auftrag umgehend in Bearbeitung nehmen und auf dem Zentrallaufwerk abspeichern!" & Chr$(13) & Chr$(13)

Sprung:
    
     ' Datum des e-Mail-Versands in das Feld "Weiterleitung NAD" eintragen
    Worksheets("Auftragserfassung").Cells(51, 28).Value = Date

     ' tempor|fffd|r bcc setzen
    'strbcc = constBlindkopie
    
    
    ' neue Mappe speichern
    strFile = constTEMP & strFile
    Application.DisplayAlerts = False ' Sicherheitsabfrage ausschalten - Datei vorhanden
    
    Dim ExcelVersion As String
    ExcelVersion = Application.Version
    If ExcelVersion = "14.0" Or ExcelVersion = "16.0" Then
    ActiveWorkbook.SaveAs Filename:=CStr(strFile), FileFormat:=xlExcel8
    Else
    ActiveWorkbook.SaveAs Filename:=CStr(strFile)
    End If
   
    strFile = strFile & ".xls"
    Application.DisplayAlerts = True ' Sicherheitsabfrage wieder einschalten
    
    ' Abfrage ob Mail gesendet werden soll
    If strEmpfaenger = "" Then
        MsgBox "Bitte e-mail-Adresse angeben!"
        Exit Sub
    Else
        i = MsgBox("Die " & strArt & " an folgenden Adressaten versenden?" & vbLf & _
            strEmpfaenger, vbYesNo, "Beauftragung des DokuServices")
        If i = vbNo Then
            ' neue Mappe schlie|fffd|en
            ' ActiveWorkbook.Close False
            Exit Sub
        End If
    End If
    
' E-Mail senden
    NotesMailSend strEmpfaenger, strBetreff, strText, strcc, strbcc, strFile
    MsgBox "Die E-Mail wurde erfolgreich versendet!"
    ' neue Mappe schlie|fffd|en
     ' ActiveWorkbook.Close False
Exit Sub
Abbruch:
    MsgBox "Keine tempor|fffd|re Speicherung erfolgt! Sendevorgang abgebrochen"
     
End Sub 'BeauftragungAV_an_NAD_senden

Sub Subauftrag_senden()
Dim auftrag As Integer

    ' Aktualisieren der e-Mail-Adressen
    Call Aktualisieren
    
    ' Einlesen des Dateipfads auf Gruppen-Laufwerk
    strPfad = Worksheets("Technische Abwicklung").Cells(89, 39).Value
    ' Pr|fffd|fen ob vorher auf Laufwerk O gespeichert wurde und somit ein g|fffd|ltiger Pfad vorhanden ist
    If UCase(Left(Range("AM89"), 42)) <> "\\BKU.DB.DE\DB\DB_004\GLW_21\SCHALTAUFTRAG" Then
    MsgBox "Bitte zun|fffd|chst die Datei auf dem Zentrallaufwerk speichern - siehe Button"
    Exit Sub
    End If

    ' Art der Subbeauftragung abfragen / festlegen
    'auftrag = Application.InputBox(prompt:=("Bitte die Nummer des Auftragstyps ausw|fffd|hlen:" & vbLf & "1 DS an NOC" & vbLf & "2 DS an LLM" & vbLf & "3 DS an LLM (nur DBFV)" & vbLf & "4 AS an SB"), Title:="Subbauftragung per e-Mail erstellen", Type:=1)
    auftrag = Application.InputBox(prompt:=("Bitte die Nummer des Auftragstyps ausw|fffd|hlen:" & vbLf & "1 DS an NOC" & vbLf & "2 DS an LLM" & vbLf & "3 DS an LLM (nur DBFV)"), Title:="Subbauftragung per e-Mail erstellen", Type:=1)
    
    If (auftrag = 0) Or (auftrag > 4) Then MsgBox ("Bitte einen g|fffd|ltigen Auftragstyp ausw|fffd|hlen!"): Exit Sub
    
    
    '=====================================
    '1  ok
    '2  kl|fffd|ren
    '3  kl|fffd|ren
    '4  entf|fffd|llt
    '=====================================
    
    
    
    ' Beauftragung des NOC durch die NAD
    If auftrag = 1 Then
        ' Festlegung des zust|fffd|ndigen Configuration Managements von NOC 1 bzw 2 Region N, NO und O an CM NOC1, alle anderen Regionen an CM NOC2
        If ((Worksheets("Technische Abwicklung").Cells(97, 4).Value = "O_DRE") Or (Worksheets("Technische Abwicklung").Cells(97, 4).Value = "O_BLN") Or (Worksheets("Technische Abwicklung").Cells(97, 4).Value = "N_HBG") Or (Worksheets("Technische Abwicklung").Cells(97, 4).Value = "N_HAN")) Then strAdrNOC = Worksheets("Technische Abwicklung").Cells(123, 39).Value Else strAdrNOC = Worksheets("Technische Abwicklung").Cells(124, 39).Value
   
        strEmpfaenger = strAdrNOC
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrNAD
        
        strVarB = "Schaltauftrag |fffd|T: "
        strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Es liegt ein Arbeitsauftrag mit |fffd|T-Beschaltungen auf dem Zentrallaufwerk bereit: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte den Schaltauftrag in Bearbeitung nehmen und nach Erledigung an den DokuService zur|fffd|ckmelden!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If
    
    ' Beauftragung des LLM durch die NAD - Meldung Kapazit|fffd|tsl|fffd|cke oder K|fffd|ndigung Leased Line
    If auftrag = 2 Then
        strEmpfaenger = strAdrLLM
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrNAD
        strVarB = "Auftrag Leased Line: "
        strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Bei der Bearbeitung des folgenden Auftrags auf dem Zentrallaufwerk wurde eine Kapazit|fffd|tsl|fffd|cke festgestellt, bzw. wird die |fffd|nderung/K|fffd|ndigung einer Leased Line erforderlich (siehe Auftrag): " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte die Beseitigung der Kapazit|fffd|tsl|fffd|cke bzw. die K|fffd|ndigung/|fffd|nderung der Leased Line in Bearbeitung nehmen und nach Erledigung an den DokuService zur|fffd|ckmelden!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If
    
    ' Beauftragung des LLM durch die NAD - Kostenermittlung bei DBFV
    If auftrag = 3 Then
        strEmpfaenger = strAdrLLM
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrNAD
        strVarB = "Auftrag zur Kostenermittlung FT (DB FV): "
        strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Zur Bearbeitung des folgenden DBFV-Auftrags auf dem Zentrallaufwerk wird eine Kostenermittlung FT ben|fffd|tigt: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte die FT-Kosten ermitteln, in das zus|fffd|tzliche Tabellenblatt DBFV-Tarifierung eintragen und an den DokuService zur|fffd|ckmelden!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If

    ' Beauftragung des SB durch die AS
    If auftrag = 4 Then
        strEmpfaenger = strAdrSB
        If strEmpfaenger = "" Then MsgBox "Die e-Mail-Adresse des Servicebezirks fehlt!": Exit Sub
        strcc = strAdrNAD
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrAV
        strVarB = "Schaltauftrag: "
        strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Es liegt ein Schaltauftrag auf dem Zentrallaufwerk zur Ausf|fffd|hrung bereit: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte den Auftrag technisch durchf|fffd|hren und nach Erledigung an den AS (per e-Mail-Button) zur|fffd|ckmelden!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If

    
    'Betreffzeile bilden
    strBetreff = strVarB & strArt & " " & strFile & "  " & "  " & strProd
    
    ' E-Mail-Empf|fffd|nger holen
    strEmpfaenger = Application.InputBox(prompt:="Bitte e-Mail-Adresse eintragen:", Title:="Subauftrag per e-Mail versenden", Default:=strEmpfaenger)
    If strEmpfaenger = "" Then
    MsgBox "Die e-Mail-Adresse fehlt!"
    Exit Sub
    End If

  
    i = MsgBox("Die Subbeauftragung " & " an folgenden Adressaten versenden?" & vbLf & _
        strEmpfaenger, vbYesNo, "Subauftrag versenden")
        If i = vbNo Then
        MsgBox "Der Subauftrag wurde nicht versendet!"
        Exit Sub
        End If

    ' E-Mail senden
    NotesMailSendoA strEmpfaenger, strBetreff, strText, strcc, strbcc

    MsgBox "Die E-Mail wurde erfolgreich versendet!"

End Sub

Sub Status_senden()
Dim status As Integer
Dim ziel As Integer
Dim ergebnis As String
    
    ' Aktualisieren der e-Mail-Adressen
    Call Aktualisieren

    ' Einlesen des Dateipfads auf Laufwerk O
    strPfad = Worksheets("Technische Abwicklung").Cells(89, 39).Value
    ' Pr|fffd|fen ob vorher auf Laufwerk O gespeichert wurde und somit ein g|fffd|ltiger Pfad vorhanden ist
    If UCase(Left(Range("AM89"), 42)) <> "\\BKU.DB.DE\DB\DB_004\GLW_21\SCHALTAUFTRAG" Then
    MsgBox "Bitte zun|fffd|chst die Datei auf dem Zentrallaufwerk speichern - siehe Button"
    Exit Sub
    End If

    ' Art der Statusmeldung abfragen / festlegen (Positiv- oder Negativmeldung)
    status = Application.InputBox(prompt:=("Bitte die Kennziffer f|fffd|r die Statusmeldung ausw|fffd|hlen:" & vbLf & "1 Schaltauftrag erstellt" & "    " & vbLf & "2 Verbindungsnummer erstellt" & "    " & vbLf & "3 Bearbeitung erfolgt" & vbLf & "4 Auftrag vollst|fffd|ndig abgeschlossen (DS / AS)" & vbLf & "5 Auftragsdurchf|fffd|hrung nicht m|fffd|glich (DS / AS)"), Title:="Statustyp festlegen", Type:=1)
    If (status = 0) Or (status > 5) Then MsgBox ("Bitte einen g|fffd|ltigen Statustyp ausw|fffd|hlen!"): Exit Sub
    If status = 1 Then ergebnis = "Schaltauftrag erstellt "
    If status = 2 Then ergebnis = "Verbindungsnummer angelegt"          'alt 5
    If status = 3 Then ergebnis = "Bearbeitung erfolgt "                'alt 2
    If status = 4 Then ergebnis = "Auftrag vollst|fffd|ndig abgeschlossen "  'alt 3
    If status = 5 Then ergebnis = "Auftragsdurchf|fffd|hrung nicht m|fffd|glich " 'alt 4
    
    ' Art der Meldeschnittstelle festlegen
    'ziel = Application.InputBox(prompt:=("Bitte die Kennziffer des R|fffd|ckmeldeweges ausw|fffd|hlen:" & vbLf & "1 FM an DS" & vbTab & "2 NOC an DS" & vbLf & "3 LLM an DS" & vbTab & "4 LLM an DS (nur DBFV)" & vbLf & "5 DS an AS" & vbTab & "6 SB an AS" & "   " & "7 AS an KM"), Title:="Statusmeldung per e-Mail erstellen", Type:=1)
    ziel = Application.InputBox(prompt:=("Bitte die Kennziffer des R|fffd|ckmeldeweges ausw|fffd|hlen:" & vbLf & "1 DS an DS Capri" & vbLf & "2 NOC an DS" & vbLf & "3 LLM an DS" & vbLf & "4 LLM an DS (nur DBFV)" & vbLf & "5 DS an AS" & vbLf & "6 SB an DS" & "   " & "7 AS an KM"), Title:="Statusmeldung per e-Mail erstellen", Type:=1)
    
    If (ziel = 0) Or (ziel > 7) Then MsgBox ("Bitte einen g|fffd|ltigen Schnittstellentyp ausw|fffd|hlen!"): Exit Sub
   
    
    ' Meldung DS an DS Capri
    If ziel = 1 Then
       If Worksheets("Technische Abwicklung").Cells(131, 12).Value <> "" And Worksheets("Technische Abwicklung").Cells(106, 8).Value <> "" Then
        strEmpfaenger = strAdrCapri
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrNAD
        strVarB = "Meldung Capri - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & Chr$(13) & _
        "Die Verbindungsnummer: " & Worksheets("Technische Abwicklung").Cells(131, 12).Value & " wurde angelegt." & Chr$(13) & _
        "Die CapriID lautet: " & Worksheets("Technische Abwicklung").Cells(106, 8).Value & Chr$(13) & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die weitere Abwicklung mit dem Auftraggeber!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
        Else
        MsgBox "Die CapriID und/oder die Verbindungsnummer m|fffd|ssen gepflegt werden !", vbCritical, "Fehler"
        Exit Sub
        End If
    End If
     
    ' R|fffd|ckmeldung NOC an NAD - Schaltauftrag |fffd|T
    If ziel = 2 Then
        strEmpfaenger = strAdrNAD
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrNOC
        strVarB = "Subauftrag |fffd|T - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die weitere Abwicklung!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    
    End If
    
    ' R|fffd|ckmeldung LLM an NAD - Kapazit|fffd|tsl|fffd|cke / Leased Line
    If ziel = 3 Then
        strEmpfaenger = strAdrNAD
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrLLM
        strVarB = "Subauftrag NP / LLM - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die weitere Abwicklung!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If
    
    
    ' R|fffd|ckmeldung LLM an NAD - Kostenermittlung bei DBFV
    If ziel = 4 Then
        strEmpfaenger = strAdrNAD
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrLLM
        strVarB = "Kostenermittlung FT (DB FV) - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung (Blatt DBFV) stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die weitere Abwicklung!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If

    ' R|fffd|ckmeldung NAD an AV
    If ziel = 5 Then
        strEmpfaenger = strAdrAV
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrNAD
        strVarB = "Meldung DS - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die weitere Abwicklung!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If

     ' R|fffd|ckmeldung SB an DS (DS und ggf. FM auf Kopie)
    If ziel = 6 Then
        strEmpfaenger = strAdrNAD 'strAdrAV
        ' Kopie zus|fffd|tzlich zur NAD die ZNAD bei ZNAD-Auftr|fffd|gen
        If Worksheets("Technische Abwicklung").OptionButton1.Value = True Then
            strcc = strAdrZNAD
            'strbcc = strAdrNAD
            'Else: strcc = strAdrNAD
        End If
        
        strVarB = "Bearbeitung Servicebezirk - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die weitere Abwicklung!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If

    ' R|fffd|ckmeldung AS an KM bzw. Projekte
    If ziel = 7 Then
        ' E-Mail-Empf|fffd|nger BO oder Auftraggeber Projekt in Abh|fffd|ngigkeit von Auftragsvariante holen
        If Worksheets("Auftragserfassung").OptionButton2.Value = True Then strEmpfaenger = strAdrAG Else strEmpfaenger = strAdrBO
        If strEmpfaenger = "" Then MsgBox "Die e-Mail-Adresse f|fffd|r R|fffd|ckmeldung fehlt!": Exit Sub
        ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrAV
        strVarB = "R|fffd|ckmeldung - " & ergebnis
        strText = ergebnis & Chr$(13) & "Diese E-Mail ist automatisch generiert!" & Chr$(13) & _
        "Die Details der Auftragsdurchf|fffd|hrung stehen im Zentrallaufwerk zur Verf|fffd|gung: " & _
        Chr$(13) & Chr$(13) & strPfad & Chr$(13) & Chr$(13) & _
        "Bitte koordinieren Sie die ggf. weiter erforderlichen Ma|fffd|nahmen!" & Chr$(13) & _
        "Bitte die weitere Bearbeitung des Auftrags nur digital im angegebenen Pfad dokumentieren!" & Chr$(13)
    End If
    
    'Betreffzeile bilden
    strBetreff = strVarB & ": " & strArt & " " & strFile & "   " & strProd
    
    ' E-Mail-Empf|fffd|nger holen
    strEmpfaenger = Application.InputBox(prompt:="Bitte e-Mail-Adresse eintragen:", Title:="R|fffd|ckmeldung per e-Mail versenden", Default:=strEmpfaenger)
    If strEmpfaenger = "" Then
    MsgBox "Die e-Mail-Adresse fehlt!"
    Exit Sub
    End If
  
    i = MsgBox("Die R|fffd|ckmeldung an folgenden Adressaten versenden?" & vbLf & _
        strEmpfaenger, vbYesNo, "R|fffd|ckmeldung versenden")
        If i = vbNo Then
        MsgBox "Die R|fffd|ckmeldung wurde nicht versendet!"
        Exit Sub
        End If

    ' E-Mail senden
    NotesMailSendoA strEmpfaenger, strBetreff, strText, strcc, strbcc

    MsgBox "Die E-Mail wurde erfolgreich versendet!"

End Sub


Sub Auftragsbestaetigung_senden() ' Dieses Sub erstellt die Auftragsbest|fffd|tigung/Bereitstellungs- ,|fffd|nderungs- oder K|fffd|ndigungsanzeige (Auswahl |fffd|ber B2)
    ' Aktualisieren der e-Mail-Adressen
    Call Aktualisieren
    
    ' E-Mail-Empf|fffd|nger AG holen
    strEmpfaenger = Application.InputBox(prompt:="Bitte e-Mail-Adresse des Auftraggebers eintragen/pr|fffd|fen:", Title:="R|fffd|ckmeldung an Auftraggeber per e-Mail versenden", Default:=strAdrAG)
    If strEmpfaenger = "" Then MsgBox "Die e-Mail-Adresse des Auftraggebers fehlt!": Exit Sub
    
    ' Send-In Auftragsabwicklung IuK/HQ/DBT bei Produkten zwecks Archivierung auf Kopie nehmen
    'If Worksheets("Auftragserfassung").OptionButton1.Value = True Then strcc = "Send-In Auftragsabwicklung IuK/HQ/DBT" Else strcc = ""
   
    ' eigenes Send-In auf Blindkopie (Archivierung)
        strbcc = strAdrAV
    ' Betreff holen
    strFile = Worksheets("AM Bereitstellungsanzeige").Cells(6, 4).Value
    strArt = Worksheets("AM Bereitstellungsanzeige").Cells(1, 2).Value
    strProd = Worksheets("AM Bereitstellungsanzeige").Cells(14, 4).Value
    ' Leeres Produkt abfangen
    If strProd = "" Then
        MsgBox "Produkt des Kunden fehlt!"
        Exit Sub
    End If
    ' Leere Bestellnummer abfangen
    If strFile = "" Then
        MsgBox "Bestellnummer des Kunden fehlt!"
        Exit Sub
    End If
    strBetreff = strArt & " " & "Auftrag: " & strFile & "  " & strProd

    ' Text
    strText = "Diese E-Mail ist automatisch generiert!" & Chr$(13) & Chr$(13) & "Wir bedanken uns f|fffd|r Ihren Auftrag und stehen Ihnen bei R|fffd|ckfragen jederzeit gerne zur Verf|fffd|gung!"
  
    ' Tabellenbl|fffd|tter in neue Mappe kopieren
    Sheets(Array("AM Bereitstellungsanzeige")).Copy
    
    'Alle Formeln durch die Werte ersetzen
    FormelnInTextUmsetzen
  
    ' neue Mappe speichern unter Produktbezeichnung
    strFile = constTEMP & strProd
    
    Dim ExcelVersion As String
    ExcelVersion = Application.Version
    If ExcelVersion = "14.0" Or ExcelVersion = "16.0" Then
    ActiveWorkbook.SaveAs Filename:=CStr(strFile), FileFormat:=xlExcel8
    Else
    ActiveWorkbook.SaveAs Filename:=CStr(strFile)
    End If

    strFile = strFile & ".xls"
    
    ' neue Mappe schlie|fffd|en
    ActiveWorkbook.Close False
    
    ' Abfrage
    If strEmpfaenger = "" Then
        MsgBox "Bitte E-Mail-Adresse angeben!"
        Exit Sub
    Else
        i = MsgBox("Die " & strArt & " an folgenden Adressaten versenden?" & vbLf & _
            strEmpfaenger, vbYesNo, "Leistungsvereinbarung (LV)")
        If i = vbNo Then
            ' Datei l|fffd|schen
            Kill (strFile)
            Exit Sub
        End If
    End If
    
    ' E-Mail senden
    NotesMailSend strEmpfaenger, strBetreff, strText, _
        strcc, strbcc, strFile

    MsgBox "Die E-Mail wurde erfolgreich versendet! " 'Zum Zwecke der Archivierung wurde bei Produkten zugleich eine Kopie in das Send-In Auftragsabwicklung IuK/HQ/DBT gesendet"

    ' Datei l|fffd|schen
    Kill (strFile)
End Sub 'Auftragsbest|fffd|tigung_senden

Function NotesMailSendoA(strEmpfaenger As Variant, strBetreff As Variant, strText As Variant, strcc As Variant, strbcc As Variant)
    ' Mail versenden mit Verkn|fffd|pfung statt Datei
    
    ' Dimensionierung der Objektvariablen
    Dim objNotes As Object, objNotesDB As Object, objNotesMailDoc As Object
    Dim SendItem, NCopyItem, BlindCopyToItem, i As Integer
    Dim msg As String
    Dim Dateiname As Variant
    
    ExcelVersion = Application.Version

    If Not ExcelVersion = "16.0" Then
    
    '
    ' Zuweisung der Objektvariablen
    'On Error GoTo ExitF
    Set objNotes = GetObject("", "Notes.Notessession")
    Set objNotesDB = objNotes.GETDATABASE("", "")
    
    ' |fffd|ffnen der Standard-Maildatenbank / Erstellen neues Maildokument
    Call objNotesDB.OPENMAIL
    Set objNotesMailDoc = objNotesDB.CREATEDOCUMENT
    objNotesMailDoc.Form = "Memo"
    Call objNotesMailDoc.Save(True, False)
    Set SendItem = objNotesMailDoc.APPENDITEMVALUE("SendTo", "")
    'Set NCopyItem = objNotesMailDoc.APPENDITEMVALUE("CopyTo", "")
    Set BlindCopyToItem = objNotesMailDoc.APPENDITEMVALUE("BlindCopyTo", "")
    objNotesMailDoc.sendto = strEmpfaenger
    'objNotesMailDoc.copyto = strcc
    Call objNotesMailDoc.ReplaceItemValue("CopyTo", strcc)
    objNotesMailDoc.blindcopyto = strbcc
    objNotesMailDoc.Subject = strBetreff
    ' Set rtitem = objNotesMailDoc.CREATERICHTEXTITEM("Body")
    objNotesMailDoc.Body = strText & Chr(10)
    
    ' Mail zustellen
    Call objNotesMailDoc.Save(True, False)
    Call objNotesMailDoc.Send(False)
    objNotesMailDoc.RemoveItem ("DeliveredDate")
    Call objNotesMailDoc.Save(True, False)
    
    ' Objektvariablen zur|fffd|cksetzen
    Call objNotes.Close
    ' Leider funktioniert der Quit-Befehl aus irgend einem Grund nicht.
    'objNotes.Quit
    Set objNotes = Nothing
ExitF:

'''''''''''''''''''''''''''''''''''''''''''''Versand |fffd|ber O365 Outlook'''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Else

 ' SET Outlook APPLICATION OBJECT.
    Dim objOutlook As Object
    Set objOutlook = CreateObject("Outlook.Application")
    
    ' CREATE EMAIL OBJECT.
    Dim objEmail As Object
    Set objEmail = objOutlook.CreateItem(olMailItem)
 
    With objEmail
        .To = strEmpfaenger
        .Subject = strBetreff
        .Body = strText
                

'        .Display
         '.Attachments.Add (strFileName) 'wird in diesem Modul ohne Anhang versendet
        .Send
    End With
    
    ' CLEAR.
    Set objEmail = Nothing:    Set objOutlook = Nothing

End If

End Function

Attribute VB_Name = "radiobutton_zuruecksetzen"
Option Explicit

Public Sub Reset_OptionBottons_als_ExcelControls()
 
Worksheets("Auftragserfassung").OptionButton1.Value = False
Worksheets("Auftragserfassung").OptionButton2.Value = False
Worksheets("Auftragserfassung").OptionButton3.Value = False
Worksheets("Technische Abwicklung").OptionButton2.Value = False
End Sub




' InQuest injected base64 decoded content
' -zYn
' -zYn

INQUEST-PP=macro
