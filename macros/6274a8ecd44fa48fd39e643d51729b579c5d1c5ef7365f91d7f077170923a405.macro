Attribute VB_Name = "Backup"
Option Explicit
'source  https://www.exceltip.com/files-workbook-and-worksheets-in-vba/save-a-workbook-backup-using-vba-in-microsoft-excel.html
Sub SaveWorkbookBackup()

Dim AWB As Workbook, BackupFileName As String, i As Integer, Ok As Boolean

On Error GoTo NotAbleToSave
    
Set AWB = ActiveWorkbook

'Assign full path of file along file name to variable BackupFileName
BackupFileName = AWB.FullName

'Checking whether file is saved
'If file is not saved then saving the file
If AWB.Path = "" Then
    'Displaying Save as dialog box for file saving
    Application.Dialogs(xlDialogSaveAs).Show
Else
    
    'Removing file extension from file name
    i = 0
    While InStr(i + 1, BackupFileName, ".") > 0
    'Find the extension of file
        i = InStr(i + 1, BackupFileName, ".")
    Wend
    
    If i > 0 Then BackupFileName = Left(BackupFileName, i - 1)
    
    'Adding back up extension ".bak" with file name
    BackupFileName = BackupFileName & "_" & Replace(Date, ".", "") & ".bak"
    Ok = False
    
    With AWB
        .Save
        'Creating Backup of file
        .SaveCopyAs BackupFileName
        Ok = True
    End With
End If

NotAbleToSave:
'Code for error handling
    Set AWB = Nothing
    If Not Ok Then
        MsgBox "Backup Copy Not Saved!", vbExclamation, ThisWorkbook.Name
    End If
End Sub
Attribute VB_Name = "CollectData"
Option Explicit ' Force explicit variable declaration.

Const techStart = 60
Const summaryStartRow = 63
Const summaryStartCol = 2

Sub CollectData()
Dim BazaWb As Workbook '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|)
Dim BazaSht As Worksheet
Dim BazaSv As Worksheet
Dim BazaTSv As Worksheet
Dim BazaTitle As Worksheet
Dim BazaGraph As Worksheet
Dim iTempFileName As String '|fffd||fffd||fffd| |fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim iTempFileName_short As String
Dim iPath As String '|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim iLastColBaza As Long '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim i, j, k, l, m, t, s As Long
Dim pctdone As Single
Dim CurTSVHeaderRow As Integer, totTasks As Long
Dim f As String
Dim iLastRowTempWb As Long '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim iNumFiles As Long '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|



    With Application
        .ScreenUpdating = False
        .DisplayAlerts = False
        .Calculation = xlManual
        .EnableEvents = False
        Set BazaWb = ThisWorkbook
        Set BazaTitle = BazaWb.Sheets("|fffd||fffd||fffd||fffd||fffd|")
        Set BazaSht = BazaWb.Sheets("Tech")
        Set BazaSv = BazaWb.Sheets("3. C|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|")
        Set BazaTSv = BazaWb.Sheets("2. C|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
        Set BazaGraph = BazaWb.Sheets("1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|")
        iPath = BazaWb.Path & "\"
        'iTempFileName = Dir(iPath & "*.xlsx")
        iTempFileName = Dir(iPath & "*.xlsm")
        j = 5
        t = 5 'counter for C|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        s = 64 'counter for  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        BazaSht.Range("A5:B9999,F5:N9999").ClearContents
        BazaSv.Range("A6:K9999").ClearContents
        BazaSv.Range("A5:K9999").Interior.ColorIndex = xlNone
        BazaTSv.Range("A5:K9999").ClearContents
        BazaTSv.Range("A5:K9999").Interior.ColorIndex = xlNone
        BazaTSv.Range("A5:K9999").ClearOutline
        'RemoveGrouping (BazaTSv.Range("A5:K9999"))
        
        BazaGraph.Range("B65:H100").ClearContents
        BazaGraph.Range("B65:H100").Interior.ColorIndex = xlNone
        BazaGraph.Range("B65:H100").Borders.LineStyle = xlNone
        
        'Display your Progress Bar
        ufProgress.LabelProgress.Width = 0
        ufProgress.LabelCaptionHead.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
        ufProgress.Show
        DoEvents
        
        Do While iTempFileName <> ""
            If iTempFileName <> BazaWb.Name Then
                With .Workbooks.Open _
                     (Filename:=iPath & iTempFileName, UpdateLinks:=False, ReadOnly:=True)
                     iNumFiles = iNumFiles + 1
                     m = 101 * (iNumFiles - 1) + 6
                     Calculate
                     iTempFileName_short = Left(iTempFileName, Len(iTempFileName) - 5)
                     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                     With .Worksheets(1).UsedRange
                          
                          ufProgress.LabelCaptionHead.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " & iTempFileName
                          ufProgress.LabelProgress.Width = 0
                          DoEvents
                          
                          'create headers for groups I, II,III,.... on report sheets
                          ' 1.
                          BazaGraph.Cells(s, 2).Value = iTempFileName_short
                          If iNumFiles > 1 Then
                              'also copy formatting and formulas from above
                              BazaGraph.Range(BazaGraph.Cells(s - 1, 2), BazaGraph.Cells(s - 1, 27)).Copy
                              BazaGraph.Range(BazaGraph.Cells(s, 2), BazaGraph.Cells(s, 27)).PasteSpecial Paste:=xlPasteFormats
                              BazaGraph.Range(BazaGraph.Cells(s - 1, 3), BazaGraph.Cells(s - 1, 27)).Copy
                              BazaGraph.Range(BazaGraph.Cells(s, 3), BazaGraph.Cells(s, 27)).PasteSpecial Paste:=xlPasteFormulas
                          End If
                          s = s + 1
                          ' 3.
                          BazaSv.Cells(m - 1, 1).Value = iTempFileName_short
                          BazaSv.Cells(m - 1, 5).Value = Replace(Replace(.Cells(1, 1).Value, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| """, ""), """", "")
                          BazaSv.Rows(m - 1).Font.Bold = True
                          BazaSv.Range(BazaSv.Cells(m - 1, 1), BazaSv.Cells(m - 1, 11)).Interior.ColorIndex = 15
                          
                          ' 2.
                          BazaTSv.Cells(t, 1).Value = iTempFileName_short
                          BazaTSv.Cells(t, 2).Value = BazaSv.Cells(m - 1, 5).Value
                          BazaTSv.Rows(t).Font.Bold = True
                          BazaTSv.Range(BazaTSv.Cells(t, 1), BazaTSv.Cells(t, 11)).Interior.ColorIndex = 15
                          CurTSVHeaderRow = t
                          t = t + 1
                          totTasks = 0
                          
                          '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                          iLastRowTempWb = .Range("A" & Rows.Count).End(xlUp).row
                          
                          For i = 1 To iLastRowTempWb
                            'Periodically update progress bar
                            pctdone = i / iLastRowTempWb
                            ufProgress.LabelCaption.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " & i & " |fffd||fffd| " & iLastRowTempWb
                            ufProgress.LabelProgress.Width = pctdone * (ufProgress.FrameProgress.Width)
                            DoEvents
                          
                            If .Cells(i, 5).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
                                .Range(Cells(i, 1), Cells(i, 1)).Copy
                               BazaSht.Cells(j, 2).PasteSpecial xlValues
                                .Range(Cells(i, 5), Cells(i, 6)).Copy
                                BazaSht.Cells(j, 6).PasteSpecial xlValues
                                .Range(Cells(i, 8), Cells(i, 14)).Copy
                                BazaSht.Cells(j, 8).PasteSpecial xlValues
                               BazaSht.Cells(j, 1).Value = iTempFileName_short
                            j = j + 1
                            End If
                          
                            k = i
                            If .Cells(k, 5).Value = "|fffd||fffd||fffd||fffd||fffd||fffd|" Or .Cells(k, 5).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Or .Cells(k, 5).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
                                .Range(Cells(k, 1), Cells(k, 4)).Copy
                                BazaSv.Cells(m, 1).PasteSpecial xlValues
                                .Range(Cells(k, 6), Cells(k, 6)).Copy
                                BazaSv.Cells(m, 5).PasteSpecial xlValues
                                .Range(Cells(k, 8), Cells(k, 10)).Copy
                                BazaSv.Cells(m, 6).PasteSpecial xlValues
                                .Range(Cells(k, 12), Cells(k, 14)).Copy
                                BazaSv.Cells(m, 9).PasteSpecial xlValues
                                m = m + 1
                                
                                If .Cells(k, 5).Value = "|fffd||fffd||fffd||fffd||fffd||fffd|" Then
                                    BazaTSv.Cells(t, 1).Value = .Cells(k, 1)
                                    BazaTSv.Cells(t, 2).Value = .Cells(k, 6)
                                    .Range(Cells(k, 8), Cells(k, 9)).Copy
                                    BazaTSv.Cells(t, 3).PasteSpecial xlPasteValues
                                    .Range(Cells(k, 12), Cells(k, 14)).Copy
                                    BazaTSv.Cells(t, 5).PasteSpecial xlPasteValues
                                    .Range(Cells(k, 15), Cells(k, 16)).Copy
                                    BazaTSv.Cells(t, 10).PasteSpecial xlPasteValues
                                    BazaTSv.Rows(t).Font.Bold = False
                                    BazaTSv.Rows(t).Group
                                    
                                    If t <> CurTSVHeaderRow Then
                                        Call Percentage(CurTSVHeaderRow, BazaTSv.Cells(t, 8), True)
                                        Call Percentage(CurTSVHeaderRow, BazaTSv.Cells(t, 9), False)
                                    End If

                                    totTasks = totTasks + 1
                                    t = t + 1
                                End If
                            End If
                            
                          Next i
                          
                          Call DirPercentage(BazaTSv.Cells(CurTSVHeaderRow, 8), True)
                          Call DirPercentage(BazaTSv.Cells(CurTSVHeaderRow, 9), False)
                          
                          
                          f = "=MAX(OFFSET(" & BazaTSv.Cells(CurTSVHeaderRow, 3).Address(0, 0)
                          f = f & ",1,0," & totTasks & ", 1))"
                          BazaTSv.Range(BazaTSv.Cells(CurTSVHeaderRow, 3), BazaTSv.Cells(CurTSVHeaderRow, 7)).Formula = f
                          BazaTSv.Cells(CurTSVHeaderRow, 3).Formula = Replace(BazaTSv.Cells(CurTSVHeaderRow, 3).Formula, "MAX", "MIN")
                          
                     End With
                     .Close saveChanges:=False
                End With
            End If
            iTempFileName = Dir
        Loop
        
        'Call AutofitSheet(BazaSv)
        'Call AutofitSheet(BazaTSv)
        BazaTSv.Outline.ShowLevels ColumnLevels:=1
        
        '.Calculation = xlAutomatic
        .DisplayAlerts = True
        '.ScreenUpdating = True
        .EnableEvents = True
        
    End With
    
    Application.ScreenUpdating = False
    ufProgress.LabelCaptionHead.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
    ufProgress.LabelCaption.Caption = ""
    DoEvents
    
    'Update summary table
    Call AddTotalRow(iNumFiles, s, BazaGraph)
    
    'Calculate
    BazaWb.Sheets("3. C|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|").Activate
    Range("A4").Select
    Selection.AutoFilter
    Range("$A$4:$AS$1330").AutoFilter Field:=1, Criteria1:="<>"
    
    BazaWb.Sheets("1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|").Activate
    'BazaWb.Sheets("1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|").Calculate
    
    If BazaTitle.Cells(1, 27) = True Then
    ufProgress.LabelCaptionHead.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| backup |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
    DoEvents
    Call SaveWorkbookBackup
    End If
    
    Application.ScreenUpdating = True
    Application.CalculateFull
    
    'Close the progress bar when you're done
    Unload ufProgress

End Sub


Sub AutofitSheet(sht As Worksheet)

With sht
.Columns("A:K").AutoFit
End With

End Sub


Sub Percentage(headerRowN As Integer, targetCell As Range, isPlan As Boolean)

Dim doneCell As Range
Dim totCell As Range
Dim f, f1, f2, f3, f_tot, f_done As String
Dim curRowN, tempCol As Integer
Dim sheet_name As String

curRowN = targetCell.row
'sheet_name = "'" & "2. C|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & "'!"


f = "=COUNTIFS(a1,a2,a3)"

f1 = "Tech!$C:$C," & "$Athis"
f2 = "Tech!$A:$A," & "$A$header"
If isPlan Then
tempCol = techStart
f3 = "Tech!$I:$I,""<=""&" & "$J$2"
Else
tempCol = techStart + 2
f3 = "Tech!$J:$J,""<=""&" & "$J$2"
End If


f = Replace(f, "a1", f1)
f = Replace(f, "a2", f2)
f = Replace(f, "header", headerRowN)
f = Replace(f, "this", curRowN)

f_tot = Replace(f, ",a3", "")
f_done = Replace(f, "a3", f3)


Set doneCell = targetCell.Offset(0, tempCol)
Set totCell = targetCell.Offset(0, tempCol + 1)
doneCell.Formula = f_done
totCell.Formula = f_tot


targetCell.Formula = "=" & doneCell.Address(0, 0) & "/" & totCell.Address(0, 0)
End Sub


Sub DirPercentage(targetCell As Range, isPlan As Boolean)
'''
'Aggregate "done" percentages using planed or real end dates
'''

Dim doneCell As Range
Dim totCell As Range
Dim f, f1, f2, f3, f_tot, f_done As String
Dim curRowN, tempCol As Integer
Dim sheet_name As String

curRowN = targetCell.row

f = "=COUNTIFS(a1,a2)"

f1 = "Tech!$A:$A," & "$A$header"
If isPlan Then
tempCol = techStart
f2 = "Tech!$I:$I,""<=""&" & "$J$2"
Else
tempCol = techStart + 2
f2 = "Tech!$J:$J,""<=""&" & "$J$2"
End If

f = Replace(f, "a1", f1)
f = Replace(f, "header", curRowN)

f_tot = Replace(f, ",a2", "")
f_done = Replace(f, "a2", f2)

Set doneCell = targetCell.Offset(0, tempCol)
Set totCell = targetCell.Offset(0, tempCol + 1)
doneCell.Formula = f_done
totCell.Formula = f_tot

targetCell.Formula = "=" & doneCell.Address(0, 0) & "/" & totCell.Address(0, 0)
End Sub


Sub AddTotalRow(iNumFiles As Long, position As Long, BazaGraph As Worksheet)
    Dim cell0 As Range
    Set cell0 = BazaGraph.Cells(position, 3)
    'MsgBox (cell0.Address(0, 0))
    cell0.Value = "|fffd||fffd||fffd||fffd||fffd|"
    
    Set BazaGraph = ThisWorkbook.Sheets("1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|")
    
    With cell0.Offset(0, 1)
    .Formula = "=MAX(" & Range(.Offset(-iNumFiles, 0), .Offset(-1, 0)).Address(0, 0) & ")"
    
    .Copy
    .Offset(0, 1).PasteSpecial Paste:=xlPasteFormulas
    .Offset(0, 2).PasteSpecial Paste:=xlPasteFormulas
    
    .Offset(0, 3).Formula = "=IFERROR(COUNTIFS(Tech!$F:$F,""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"",Tech!$I:$I,""<=""&$H$2)/COUNTIFS(Tech!$F:$F,""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|""),0)"
    .Offset(0, 4).Formula = "=IFERROR(COUNTIFS(Tech!$F:$F,""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"",Tech!$J:$J,""<=""&$H$2)/COUNTIFS(Tech!$F:$F,""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|""),0)"
    .Offset(0, 3).NumberFormat = "0%"
    .Offset(0, 4).NumberFormat = "0%"
    
    End With
    
    With BazaGraph
    .Rows(position).Font.Bold = True
    .Range(.Cells(position, 2), .Cells(position, 8)).Interior.ColorIndex = 15
    
    End With
End Sub
Attribute VB_Name = "HideTitleBar"
Option Explicit
Option Private Module

Public Const GWL_STYLE = -16
Public Const WS_CAPTION = &HC00000
#If VBA7 Then
    Public Declare PtrSafe Function GetWindowLong _
                           Lib "user32" Alias "GetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long) As Long
    Public Declare PtrSafe Function SetWindowLong _
                           Lib "user32" Alias "SetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long, _
                           ByVal dwNewLong As Long) As Long
    Public Declare PtrSafe Function DrawMenuBar _
                           Lib "user32" ( _
                           ByVal hWnd As Long) As Long
    Public Declare PtrSafe Function FindWindowA _
                           Lib "user32" (ByVal lpClassName As String, _
                           ByVal lpWindowName As String) As Long
#Else
    Public Declare Function GetWindowLong _
                           Lib "user32" Alias "GetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long) As Long
    Public Declare Function SetWindowLong _
                           Lib "user32" Alias "SetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long, _
                           ByVal dwNewLong As Long) As Long
    Public Declare Function DrawMenuBar _
                           Lib "user32" ( _
                           ByVal hWnd As Long) As Long
    Public Declare Function FindWindowA _
                           Lib "user32" (ByVal lpClassName As String, _
                           ByVal lpWindowName As String) As Long
#End If
Sub HideTitleBar(frm As Object)
    Dim lngWindow As Long
    Dim lFrmHdl As Long
    lFrmHdl = FindWindowA(vbNullString, frm.Caption)
    lngWindow = GetWindowLong(lFrmHdl, GWL_STYLE)
    lngWindow = lngWindow And (Not WS_CAPTION)
    Call SetWindowLong(lFrmHdl, GWL_STYLE, lngWindow)
    Call DrawMenuBar(lFrmHdl)
End Sub
Attribute VB_Name = "Module1"
Sub Macro()
Set BazaWb = ThisWorkbook
Set BazaSht = BazaWb.Sheets("Tech")
Set BazaSv = BazaWb.Sheets("3. C|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|")
    BazaSht.Range("A5:A9999,F5:N9999").ClearContents
    BazaSv.Range("A6:K105,A107:K206,A208:K307,A309:K408,A410:K509,A509:K999").ClearContents
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub CheckBox1_Click()

End Sub

Sub ChangeShapeSize()
Dim Ht As Single, Wd As Single

    Ht = 1.75
    Wd = 2.75

    With Worksheets(1).Shapes("CheckBox1")
        .ScaleHeight Ht, msoFalse, msoScaleFromTopLeft
        .ScaleWidth Wd, msoFalse, msoScaleFromTopLeft
    End With

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ufProgress"
Attribute VB_Base = "0{D266DED8-6668-40E0-B6FD-EC3FEE4DD362}{9B99C5AB-27A6-49BC-AF59-CC9AD623BEEE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Label1_Click()

End Sub

Private Sub LabelCaptionHead_Click()

End Sub

Private Sub UserForm_Initialize()
#If IsMac = False Then
    'hide the title bar if you're working on a windows machine. Otherwise, just display it as you normally would
    Me.Height = Me.Height - 10
    HideTitleBar.HideTitleBar Me
#End If
End Sub


INQUEST-PP=macro
