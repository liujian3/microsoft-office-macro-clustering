Attribute VB_Name = "AddJob"

Option Explicit

'----------------------------------------------------------------------------------------------------------------------------------

'*******************************************************************************
' Name:        EntJCAddContract
' Description: Adds a new Contract into the Job Tree
'*******************************************************************************
Public Function EntJCAddContract(Company$, ParentJobCode$, JobCode$, JobDesc$, UserFieldsList As Variant) As String
Attribute EntJCAddContract.VB_Description = "Adds a new Contract into the Job Tree. The status is set as Active and the type of job as Time and Materials price quoted as base Currency value 0.00"
Attribute EntJCAddContract.VB_HelpID = 20466
Attribute EntJCAddContract.VB_ProcData.VB_Invoke_Func = " \n14"
                                             
On Error GoTo EntJCAddContract_Error

    Dim StrVal$, IntVal%, ErrStr$
    Dim lUserFieldsList As Variant
    
    StrVal = "Error"

    If ValidCompany(Company) And ValidJobCode(JobCode$) Then
        If LocalCheckServer() Then
            ' Convert Excel arrays to versions compatible with the OLE Server
            lUserFieldsList = ProcessUserFieldsList(UserFieldsList)
            
            IntVal = EntServer.AddJob(Company, "C", ParentJobCode$, JobCode$, JobDesc$, "", "", _
                                      "", "", "", "", "T", 0#, 1, "", "A", lUserFieldsList, ErrStr$)
            
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                If (IntVal = 599) Then
                    StrVal = ErrStr$
                Else
                    Error IntVal
                End If
            End If
        End If
    End If
     
    GoTo EntJCAddContract_Exit
          
EntJCAddContract_Error:
    StrVal = GetErrorStr$

EntJCAddContract_Exit:
    EntJCAddContract = StrVal
End Function

'----------------------------------------------------------------------------------------------------------------------------------

'*******************************************************************************
' Name:        EntJCAddJob
' Description: Adds a new Job
'*******************************************************************************
Public Function EntJCAddJob(Company$, ParentJobCode$, JobCode$, JobDesc$, JobType$, JobManager$, _
                          StartDate$, EndDate$, CustomerCode$, ContactName$, ChargeType$, _
                          PriceQuoted#, PriceCurrency%, SORReference$, JobStatus$, _
                          UserFieldsList As Variant) As String
Attribute EntJCAddJob.VB_Description = "Creates a job record for the parameters specified"
Attribute EntJCAddJob.VB_HelpID = 20551
Attribute EntJCAddJob.VB_ProcData.VB_Invoke_Func = " \n14"
                                             
On Error GoTo EntJCAddJob_Error

    Dim StrVal$, IntVal%, ErrStr$
    Dim lUserFieldsList As Variant
    
    StrVal = "Error"

    If ValidCompany(Company) And ValidJobCode(JobCode$) And ValidCustCode(CustomerCode$, "C") Then
        If LocalCheckServer() Then
            ' Convert Excel arrays to versions compatible with the OLE Server
            lUserFieldsList = ProcessUserFieldsList(UserFieldsList)
            
            IntVal = EntServer.AddJob(Company, "J", ParentJobCode$, JobCode$, JobDesc$, JobManager$, JobType$, _
                                      StartDate, EndDate, CustomerCode, ContactName, ChargeType, _
                                      PriceQuoted, PriceCurrency, SORReference, JobStatus, lUserFieldsList, _
                                      ErrStr$)
            
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                If (IntVal = 599) Then
                    StrVal = ErrStr$
                Else
                    Error IntVal
                End If
            End If
        End If
    End If
     
    GoTo EntJCAddJob_Exit
          
EntJCAddJob_Error:
    StrVal = GetErrorStr$

EntJCAddJob_Exit:
    EntJCAddJob = StrVal
End Function

'----------------------------------------------------------------------------------------------------------------------------------

Private Function ProcessUserFieldsList(StrList As Variant) As Variant
    Dim lUserFieldsList() As String
    Dim ArrElem As Variant, arrCnt%
    
    ' Initialise all four fields
    ReDim Preserve lUserFieldsList(1 To 10) As String
    For arrCnt% = LBound(lUserFieldsList) To UBound(lUserFieldsList)
        lUserFieldsList(arrCnt%) = ""
    Next arrCnt%
    
    ' Check to see if a range was passed in
    If IsArray(StrList) Then
        ' Range - run through array copying up to 10 fields into the User Fields array
        arrCnt% = 0
        For Each ArrElem In StrList
            ' move to next user field
            arrCnt% = arrCnt% + 1
            
            ' check user hasn't specified too many cells
            If (arrCnt% > 10) Then
                Error 584
            End If
            
            ' Copy text into next available user field
            lUserFieldsList(arrCnt%) = Trim(CStr(ArrElem))
        Next ArrElem
    Else
        ' Single cell only - Copy into UF1
        lUserFieldsList(1) = Trim(CStr(StrList))
    End If

    ProcessUserFieldsList = lUserFieldsList
End Function ' MiscStrListToArray

'----------------------------------------------------------------------------------------------------------------------------------

' MH 08/08/07: Commented out 4 years late
''*******************************************************************************
'' Name:        EntJCAddJobAnalysisBudgets
'' Description: Adds a new Analysis Budgets to an existing Job
''*******************************************************************************
'Public Function EntJCAddJobAnalysisBudgets(Company$, JobCode$, AnalysisCode$, BudgetAmount#, BudgetQty#) As String
'On Error GoTo EntJCAddJobAnalysisBudgets_Error
'
'    Dim StrVal$, IntVal%, ErrStr$
'    Dim lUserFieldsList As Variant
'
'    StrVal = "Error"
'
'    If ValidCompany(Company) And ValidJobCode(JobCode$) And ValidJobAnalCode(AnalysisCode$) Then
'        If LocalCheckServer() Then
'            IntVal = EntServer.AddJobAnalBudgie(Company, JobCode$, AnalysisCode$, BudgetAmount#, BudgetQty#, ErrStr$)
'
'            If (IntVal = 0) Then
'                StrVal = "Saved"
'            Else
'                If (IntVal = 599) Then
'                    StrVal = ErrStr$
'                Else
'                    Error IntVal
'                End If
'            End If
'        End If
'    End If
'
'    GoTo EntJCAddJobAnalysisBudgets_Exit
'
'EntJCAddJobAnalysisBudgets_Error:
'    StrVal = GetErrorStr$
'
'EntJCAddJobAnalysisBudgets_Exit:
'    EntJCAddJobAnalysisBudgets = StrVal
'End Function


Attribute VB_Name = "AddTSH"

Option Explicit

Private Const MaxTransHeaderUserFields = 10
Private Const MaxTransLineUserFields = 10

Public Enum LineUserFieldsLayout
    lufNotSupplied = 0
    lufHorizontal = 1
    lufVertical = 2
End Enum ' LineUserFieldsLayout


Private Function AddTimesheetWithUDF(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                     TransDate$, ThePeriod%, TheYear%, WeekMonth%, _
                                     TSHUDFList As Variant, _
                                     JobCodeList As Variant, RateCodeList As Variant, AnalCodeList As Variant, _
                                     CostCentreList As Variant, DeptList As Variant, _
                                     HoursList As Variant, NarrativeList As Variant, _
                                     ChargeRateList As Variant, CostCurrencyList As Variant, _
                                     HourlyCostList As Variant, _
                                     LineUDF1List As Variant, LineUDF2List As Variant, LineUDF3List As Variant, _
                                     LineUDF4List As Variant, LineUDF5List As Variant, LineUDF6List As Variant, _
                                     LineUDF7List As Variant, LineUDF8List As Variant, LineUDF9List As Variant, _
                                     LineUDF10List As Variant) As Variant

On Error GoTo AddTimesheetWithUDF_Error
                                         
    Dim lJobList As Variant, lRateList As Variant, lAnalList As Variant
    Dim lCCList As Variant, lDeptList As Variant, lNarrList As Variant
    Dim lCostCcyList As Variant, lHourlyCostList As Variant
    Dim lHoursList As Variant, lChargeList As Variant
    Dim CompStr$, StrVal$, lEmployee$, lTSHDesc$, sErrorDesc$
    Dim lYear%, lPeriod%, IntVal%, CntJob%, lWeekNo%
    Dim arrLineUDF1 As Variant, arrLineUDF2 As Variant, arrLineUDF3 As Variant, arrLineUDF4 As Variant
    Dim arrLineUDF5 As Variant, arrLineUDF6 As Variant, arrLineUDF7 As Variant
    Dim arrLineUDF8 As Variant, arrLineUDF9 As Variant, arrLineUDF10 As Variant
    
    ' HM 29/11/04: Added fake fields for calling EntAddTimesheetUDFWithCosts
    Dim I%, lTSHUDFields As Variant, lLineUD1 As Variant, lLineUD2 As Variant

    StrVal = "Error"
    
    ' Check that the function should be added
    If (UCase(Trim(Enabled$)) = "YES") Then
        If ValidCompany(Company) And ValidEmployeeCode(EmplCode$) And ValidYear(TheYear) And ValidTransactionPeriod(ThePeriod) Then
            If LocalCheckServer() Then
                CompStr$ = UCase(Company$)
                lEmployee$ = UCase(EmplCode$)
                lYear% = TheYear%
                lPeriod% = ThePeriod%
                lTSHDesc$ = TSHDesc$
                lWeekNo% = WeekMonth%
                                
                ' Create Delphi compatible arrays for lines
                CntJob% = 0
                lJobList = JobListToArray(JobCodeList, CntJob%)
                lRateList = RateListToArray(RateCodeList, CntJob%)
                lAnalList = MiscStrListToArray(AnalCodeList, CntJob%, 553)
                lCCList = MiscStrListToArray(CostCentreList, CntJob%, 550)
                lDeptList = MiscStrListToArray(DeptList, CntJob%, 551)
                lHoursList = MiscAmtListToArray(HoursList, CntJob%, 568)
                lNarrList = MiscStrListToArray(NarrativeList, CntJob%, 567)
                lChargeList = MiscAmtListToArray(ChargeRateList, CntJob%, 569)
                lCostCcyList = CurrListToArray(CostCurrencyList, CntJob%)
                lHourlyCostList = MiscAmtListToArray(HourlyCostList, CntJob%, 572)
                
                ' MH 28/10/2011 v6.9: Extended to support 10 udef fields on header
                lTSHUDFields = MiscStrListToArrayMax(TSHUDFList, 10, True, 584)
                
                ' MH 02/11/2011 v6.9: Extended to support 10 udef fields on line
                If Not IsNull(LineUDF1List) Then
                    arrLineUDF1 = MiscStrListToArray(LineUDF1List, CntJob%, 584)
                Else
                    arrLineUDF1 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF2List) Then
                    arrLineUDF2 = MiscStrListToArray(LineUDF2List, CntJob%, 584)
                Else
                    arrLineUDF2 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF3List) Then
                    arrLineUDF3 = MiscStrListToArray(LineUDF3List, CntJob%, 584)
                Else
                    arrLineUDF3 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF4List) Then
                    arrLineUDF4 = MiscStrListToArray(LineUDF4List, CntJob%, 584)
                Else
                    arrLineUDF4 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF5List) Then
                    arrLineUDF5 = MiscStrListToArray(LineUDF5List, CntJob%, 584)
                Else
                    arrLineUDF5 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF6List) Then
                    arrLineUDF6 = MiscStrListToArray(LineUDF6List, CntJob%, 584)
                Else
                    arrLineUDF6 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF7List) Then
                    arrLineUDF7 = MiscStrListToArray(LineUDF7List, CntJob%, 584)
                Else
                    arrLineUDF7 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF8List) Then
                    arrLineUDF8 = MiscStrListToArray(LineUDF8List, CntJob%, 584)
                Else
                    arrLineUDF8 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF9List) Then
                    arrLineUDF9 = MiscStrListToArray(LineUDF9List, CntJob%, 584)
                Else
                    arrLineUDF9 = BuildStrArray(CntJob%, "")
                End If
                If Not IsNull(LineUDF10List) Then
                    arrLineUDF10 = MiscStrListToArray(LineUDF10List, CntJob%, 584)
                Else
                    arrLineUDF10 = BuildStrArray(CntJob%, "")
                End If
                
                sErrorDesc$ = ""
                IntVal = EntServer.AddTSHLinesErrorDesc(CompStr$, lEmployee$, lTSHDesc$, TransDate$, lYear%, lPeriod%, _
                                                 lWeekNo%, lTSHUDFields, lJobList, lRateList, lAnalList, lCCList, _
                                                 lDeptList, lHoursList, lNarrList, lChargeList, lCostCcyList, _
                                                 lHourlyCostList, _
                                                 arrLineUDF1, arrLineUDF2, arrLineUDF3, arrLineUDF4, arrLineUDF5, _
                                                 arrLineUDF6, arrLineUDF7, arrLineUDF8, arrLineUDF9, arrLineUDF10, _
                                                 0, sErrorDesc)
                   
                If (IntVal = 0) Then
                    StrVal = "Saved"
                Else
                    If (sErrorDesc$ <> "") Then
                        StrVal = sErrorDesc$
                    Else
                        Error IntVal%
                    End If
                End If
            End If
        End If
    Else
        StrVal = "Disabled"
    End If
                                         
    GoTo AddTimesheetWithUDF_Exit
                                         
AddTimesheetWithUDF_Error:
    StrVal = GetErrorStr$
    
AddTimesheetWithUDF_Exit:
    AddTimesheetWithUDF = StrVal
                                         
End Function ' AddTimesheetWithUDF


'*******************************************************************************
' Name:        EntAddTimesheetWithUDF
' Description: Adds a multi-line Timesheet transaction into the specified
'              Company Data Set with trans date, cost information and full user
'              defined fields support
'*******************************************************************************
Public Function EntAddTimesheetWithUDF(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                       TransDate$, ThePeriod%, TheYear%, WeekMonth%, _
                                       TSHUDFList As Variant, _
                                       JobCodeList As Variant, RateCodeList As Variant, AnalCodeList As Variant, _
                                       CostCentreList As Variant, DeptList As Variant, _
                                       HoursList As Variant, NarrativeList As Variant, _
                                       ChargeRateList As Variant, CostCurrencyList As Variant, _
                                       HourlyCostList As Variant, _
                                       LineUDFLayout As LineUserFieldsLayout, _
                                       LineUDFields As Variant) As String
Attribute EntAddTimesheetWithUDF.VB_Description = "Creates a multi line timesheet record for the employee in the company data set for the date, period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet"
Attribute EntAddTimesheetWithUDF.VB_HelpID = 20671
Attribute EntAddTimesheetWithUDF.VB_ProcData.VB_Invoke_Func = " \n14"
On Error GoTo EntAddTimesheetWithUDF_Error

    Dim arrJobCodes As Variant, iJobCount As Integer
    Dim arrLineUserFields(1 To 10) As Variant
    Dim ReturnVal As Long
                
    ' Check to see if the function is enabled before processing the UD Field Array
    If (UCase(Trim(Enabled$)) = "YES") Then
        ' Look at the list of Job Codes to determine how many lines have been supplied by the user
        arrJobCodes = JobListToArray(JobCodeList, iJobCount)
        
        ' Setup an array to hold the 10 arrays of User Defined Fields
        ReturnVal = Process2DUserFieldsArray(iJobCount, arrLineUserFields, LineUDFLayout, LineUDFields)
        If (ReturnVal = 0) Then
            EntAddTimesheetWithUDF = AddTimesheetWithUDF(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                                         TransDate$, ThePeriod%, TheYear%, WeekMonth%, _
                                                         TSHUDFList, _
                                                         JobCodeList, RateCodeList, AnalCodeList, CostCentreList, DeptList, _
                                                         HoursList, NarrativeList, ChargeRateList, CostCurrencyList, _
                                                         HourlyCostList, _
                                                         arrLineUserFields(1), arrLineUserFields(2), _
                                                         arrLineUserFields(3), arrLineUserFields(4), _
                                                         arrLineUserFields(5), arrLineUserFields(6), _
                                                         arrLineUserFields(7), arrLineUserFields(8), _
                                                         arrLineUserFields(9), arrLineUserFields(10))
        Else
            Error ReturnVal
        End If ' (ReturnVal = 0)
    Else
        EntAddTimesheetWithUDF = "Disabled"
    End If ' (UCase(Trim(Enabled$)) = "YES")
    
    Exit Function
           
EntAddTimesheetWithUDF_Error:
    EntAddTimesheetWithUDF = GetErrorStr$
    
End Function ' EntAddTimesheetWithUDF


'*******************************************************************************
' Name:        EntAddTSHDateUDFWithCosts
' Description: Adds a multi-line Timesheet transaction into the specified
'              Company Data Set with trans date, cost information and user defined fields
'*******************************************************************************
'Public Function EntAddTimesheetDateUDFWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$,
Public Function EntAddTSHDateUDFWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                            TransDate$, ThePeriod%, TheYear%, WeekMonth%, _
                                            TSHUDFList As Variant, JobCodeList As Variant, _
                                            RateCodeList As Variant, AnalCodeList As Variant, _
                                            CostCentreList As Variant, DeptList As Variant, _
                                            HoursList As Variant, NarrativeList As Variant, _
                                            ChargeRateList As Variant, CostCurrencyList As Variant, _
                                            HourlyCostList As Variant, LineUDF1List As Variant) As Variant
Attribute EntAddTSHDateUDFWithCosts.VB_Description = "Creates a multi line timesheet record for the employee in the company data set for the date, period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet"
Attribute EntAddTSHDateUDFWithCosts.VB_HelpID = 20671
Attribute EntAddTSHDateUDFWithCosts.VB_ProcData.VB_Invoke_Func = " \n14"
                                            
    EntAddTSHDateUDFWithCosts = AddTimesheetWithUDF(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                                    TransDate$, ThePeriod%, TheYear%, WeekMonth%, _
                                                    TSHUDFList, JobCodeList, _
                                                    RateCodeList, AnalCodeList, _
                                                    CostCentreList, DeptList, _
                                                    HoursList, NarrativeList, _
                                                    ChargeRateList, CostCurrencyList, HourlyCostList, _
                                                    LineUDF1List, Null, Null, Null, Null, Null, Null, Null, Null, Null)
End Function ' EntAddTSHDateUDFWithCosts


'*******************************************************************************
' Name:        EntAddTimesheetUDFWithCosts
' Description: Adds a multi-line Timesheet transaction into the specified
'              Company Data Set with cost information and user defined fields
'*******************************************************************************
Public Function EntAddTimesheetUDFWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                            ThePeriod%, TheYear%, WeekMonth%, _
                                            TSHUDFList As Variant, JobCodeList As Variant, _
                                            RateCodeList As Variant, AnalCodeList As Variant, _
                                            CostCentreList As Variant, DeptList As Variant, _
                                            HoursList As Variant, NarrativeList As Variant, _
                                            ChargeRateList As Variant, CostCurrencyList As Variant, _
                                            HourlyCostList As Variant, LineUDF1List As Variant) As Variant
Attribute EntAddTimesheetUDFWithCosts.VB_Description = "Creates a multi line timesheet record for the employee in the company data set for the period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet"
Attribute EntAddTimesheetUDFWithCosts.VB_HelpID = 20583
Attribute EntAddTimesheetUDFWithCosts.VB_ProcData.VB_Invoke_Func = " \n14"
    
    EntAddTimesheetUDFWithCosts = EntAddTSHDateUDFWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$, "", _
                                                ThePeriod%, TheYear%, WeekMonth%, TSHUDFList, JobCodeList, RateCodeList, _
                                                AnalCodeList, CostCentreList, DeptList, HoursList, NarrativeList, _
                                                ChargeRateList, CostCurrencyList, HourlyCostList, LineUDF1List)
End Function ' EntAddTimesheetUDFWithCosts



'*******************************************************************************
' Name:        EntAddTimesheetWithCosts
' Description: Adds a multi-line Timesheet transaction into the specified
'              Company Data Set with cost information
'*******************************************************************************
Public Function EntAddTimesheetWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                         ThePeriod%, TheYear%, WeekMonth%, _
                                         JobCodeList As Variant, _
                                         RateCodeList As Variant, AnalCodeList As Variant, _
                                         CostCentreList As Variant, DeptList As Variant, _
                                         HoursList As Variant, _
                                         NarrativeList As Variant, _
                                         ChargeRateList As Variant, _
                                         CostCurrencyList As Variant, HourlyCostList As Variant) As Variant
Attribute EntAddTimesheetWithCosts.VB_Description = "Creates a multi line timesheet record for the employee in the company data set for the period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet"
Attribute EntAddTimesheetWithCosts.VB_HelpID = 20447
Attribute EntAddTimesheetWithCosts.VB_ProcData.VB_Invoke_Func = " \n14"

    ' HM 29/11/04: Added fake fields for calling EntAddTimesheetUDFWithCosts
    Dim I%, lTSHUDFields() As String
        
    ' MH 28/10/2011 v6.9: Extended to support 10 udef fields on header
    ReDim lTSHUDFields(1 To 10) As String
    For I% = LBound(lTSHUDFields) To UBound(lTSHUDFields)
        lTSHUDFields(I%) = ""
    Next I%
    
    EntAddTimesheetWithCosts = EntAddTimesheetUDFWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$, ThePeriod%, TheYear%, _
                                                           WeekMonth%, lTSHUDFields, JobCodeList, RateCodeList, AnalCodeList, _
                                                           CostCentreList, DeptList, HoursList, NarrativeList, ChargeRateList, _
                                                           CostCurrencyList, HourlyCostList, Null)
   
End Function ' EntAddTimesheetWithCosts



'*******************************************************************************
' Name:        EntAddTimesheet
' Description: Adds a multi-line Timesheet transaction into the specified company
'*******************************************************************************
Public Function EntAddTimesheet(Enabled$, Company$, EmplCode$, TSHDesc$, ThePeriod%, TheYear%, WeekMonth%, _
                                JobCodeList As Variant, _
                                RateCodeList As Variant, _
                                AnalCodeList As Variant, _
                                CostCentreList As Variant, _
                                DeptList As Variant, _
                                HoursList As Variant, _
                                NarrativeList As Variant, _
                                ChargeRateList As Variant) As Variant
Attribute EntAddTimesheet.VB_Description = "Creates a multi line timesheet record for the employee in the company data set for the period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet"
Attribute EntAddTimesheet.VB_HelpID = 20444
Attribute EntAddTimesheet.VB_ProcData.VB_Invoke_Func = " \n14"

    Dim lJobList As Variant, lCostCcyList() As Integer, lHourlyCostList() As Double
    Dim CntJob%, I%
     
    ' Create fake Cost Currency and Hourly Cost lists with correct number of elements
    CntJob% = 0
    lJobList = JobListToArray(JobCodeList, CntJob%)
    ReDim lCostCcyList(1 To CntJob%) As Integer
    ReDim lHourlyCostList(1 To CntJob%) As Double
    
    ' Set value to -1 to cause the Cost information to be defaulted from the Time Rate record
    For I% = 1 To CntJob%
        lCostCcyList(I%) = -1
        lHourlyCostList(I%) = -1#
    Next I%
         
    ' run it through standard function
    EntAddTimesheet = EntAddTimesheetWithCosts(Enabled$, Company$, EmplCode$, TSHDesc$, _
                                               ThePeriod%, TheYear%, WeekMonth%, _
                                               JobCodeList, RateCodeList, AnalCodeList, _
                                               CostCentreList, DeptList, HoursList, _
                                               NarrativeList, ChargeRateList, _
                                               lCostCcyList, lHourlyCostList)
End Function ' EntAddTimesheet

'-----------------------------------------------------------------------------------------------------

Private Function JobListToArray(JobList As Variant, ByRef CntJob%) As Variant
    Dim arrJob() As String, ArrElem As Variant, JobCode$
    
    CntJob% = 0
    
    ' Check to see if we have an array or a single entry
    If IsArray(JobList) Then
        ' Array - extract data and convert to a D5 compatible array
        For Each ArrElem In JobList
            ' Process Arrays
            JobCode$ = CStr(ArrElem)
            If ValidJobCode(JobCode$) Then
                CntJob% = CntJob% + 1
                ReDim Preserve arrJob(1 To CntJob%) As String
                arrJob(CntJob%) = JobCode$
            End If
        Next ArrElem
    Else
        ' Single Entry
        CntJob% = CntJob% + 1
        ReDim Preserve arrJob(1 To CntJob%) As String
        arrJob(CntJob%) = CStr(JobList)
    End If
 
    If (CntJob% = 0) Then
        ' Invalid Job Code List
        Error 552
    End If

    JobListToArray = arrJob
End Function ' JobListToArray

'-----------------------------------------------------------------------------------------------------

Private Function RateListToArray(RateList As Variant, CntJob%) As Variant
    Dim arrRate() As String, ArrElem As Variant, arrCnt%, TmpStr$
    
    If IsArray(RateList) Then
        arrCnt% = 0
        
        For Each ArrElem In RateList
            ' Process Arrays
            TmpStr$ = Trim(CStr(ArrElem))
            If ValidTimeRateCode(TmpStr$) Then
                arrCnt% = arrCnt% + 1
                ReDim Preserve arrRate(1 To arrCnt%) As String
                arrRate(arrCnt%) = TmpStr$
            End If ' ValidTimeRateCode(TmpStr$)
        Next ArrElem

        ' check all elements have been specified
        If (arrCnt% <> CntJob%) Then
            ' Invalid Time-Rate List
            Error 566
        End If
    Else
        ' Single Item - Copy into all elements
        TmpStr$ = Trim(CStr(RateList))
        If ValidTimeRateCode(TmpStr$) Then
            ReDim arrRate(1 To CntJob%) As String
    
            For arrCnt% = LBound(arrRate) To UBound(arrRate)
                arrRate(arrCnt%) = TmpStr$
            Next arrCnt%
        End If ' ValidTimeRateCode(TmpStr$)
    End If

    RateListToArray = arrRate
End Function ' RateListToArray

'-----------------------------------------------------------------------------------------------------

Private Function MiscStrListToArrayMax(StrList As Variant, CntJob%, CntIsMax As Boolean, ErrNo%) As Variant
    Dim arrMisc() As String, ArrElem As Variant, arrCnt%
    
    If IsArray(StrList) Then
        arrCnt% = 0
        
        For Each ArrElem In StrList
            ' Process Arrays
            arrCnt% = arrCnt% + 1
            ReDim Preserve arrMisc(1 To arrCnt%) As String
            arrMisc(arrCnt%) = Trim(CStr(ArrElem))
        Next ArrElem

        ' check all elements have been specified
        If (CntIsMax And (arrCnt% > CntJob%)) Or ((Not CntIsMax) And (arrCnt% <> CntJob%)) Then
            ' Invalid List
            Error ErrNo%
        End If
    Else
        ' Single Item - Copy into all elements
        ReDim arrMisc(1 To CntJob%) As String
    
        For arrCnt% = LBound(arrMisc) To UBound(arrMisc)
            arrMisc(arrCnt%) = Trim(CStr(StrList))
        Next arrCnt%
    End If

    MiscStrListToArrayMax = arrMisc
End Function ' MiscStrListToArrayMax

Private Function MiscStrListToArray(StrList As Variant, CntJob%, ErrNo%) As Variant
    MiscStrListToArray = MiscStrListToArrayMax(StrList, CntJob%, False, ErrNo%)
End Function ' MiscStrListToArray

'-----------------------------------------------------------------------------------------------------

Private Function MiscAmtListToArray(AmtList As Variant, CntJob%, ErrNo%) As Variant
    Dim arrMisc() As Double, ArrElem As Variant, arrCnt%
    
    If IsArray(AmtList) Then
        arrCnt% = 0
        
        For Each ArrElem In AmtList
            ' Process Arrays
            arrCnt% = arrCnt% + 1
            ReDim Preserve arrMisc(1 To arrCnt%) As Double
            arrMisc(arrCnt%) = CDbl(ArrElem)
        Next ArrElem

        ' check all elements have been specified
        If (arrCnt% <> CntJob%) Then
            ' Invalid List
            Error ErrNo%
        End If
    Else
        ' Single Item - Copy into all elements
        ReDim arrMisc(1 To CntJob%) As Double
    
        For arrCnt% = LBound(arrMisc) To UBound(arrMisc)
            arrMisc(arrCnt%) = CDbl(AmtList)
        Next arrCnt%
    End If

    MiscAmtListToArray = arrMisc
End Function ' MiscAmtListToArray

'-----------------------------------------------------------------------------------------------------

' Converts the Variant Array passed in for the Currencies into an Array of Integer and
' returns it as a Variant because the OLE passed the initial Variant Array as an
' OLE Object not a Variant Array (Thank you Bill!)
Private Function CurrListToArray(CurrList As Variant, CntJob%) As Variant
    Dim arrCurr() As Integer, ArrElem As Variant, arrCnt%, tmpInt%
    
    ReDim arrCurr(1 To CntJob%) As Integer
    
    If IsArray(CurrList) Then
        arrCnt% = 0
        
        For Each ArrElem In CurrList
            ' Process Arrays
            If IsNumeric(ArrElem) Then
                tmpInt% = CInt(ArrElem)
                If (tmpInt% >= -1) And (tmpInt% <= 90) Then
                    arrCnt% = arrCnt% + 1
                    arrCurr(arrCnt%) = tmpInt%
                Else
                    ' Invalid Currency
                    Error 514
                End If
            Else
                ' Invalid Currency
                Error 514
            End If
        Next ArrElem

        ' check all elements have been specified
        If (arrCnt% <> CntJob%) Then
            ' Invalid Currency List
            Error 571
        End If
    Else
        If IsNumeric(CurrList) Then
            ' Single Item - Copy into all elements
            tmpInt% = CInt(CurrList)
        
            For arrCnt% = LBound(arrCurr) To UBound(arrCurr)
                arrCurr(arrCnt%) = tmpInt%
            Next arrCnt%
        Else
            ' Invalid Currency List
            Error 571
        End If
    End If

    CurrListToArray = arrCurr
End Function ' CurrListToArray


Private Function Process2DUserFieldsArray(LineCount%, ByRef arrLineUserFields() As Variant, LineUDFLayout As LineUserFieldsLayout, ByRef LineUDFields As Variant) As Long
    Dim LocalUDFieldsVar As Variant
    Dim iField As Integer, iLine As Integer, iNoCols As Integer, iNoRows As Integer, ReturnVal As Long

    ReturnVal = 0

    ' Initialise the destination array for the line UD Fields
    For iField = LBound(arrLineUserFields) To UBound(arrLineUserFields)
        arrLineUserFields(iField) = Null
    Next iField

    ' Check whether user has specified support for User Defined Fields
    If (LineUDFLayout = lufHorizontal) Or (LineUDFLayout = lufVertical) Then
        ' Need to copy Variant into a local variable otherwise the VBA functions crash - class!
        LocalUDFieldsVar = LineUDFields

        If IsArray(LocalUDFieldsVar) Then
            ' Get dimensions of array
            iNoCols = UBound(LocalUDFieldsVar, 2)
            iNoRows = UBound(LocalUDFieldsVar, 1)
'MsgBox "NoCols: " + Str(iNoCols) + "  -  NoRows: " + Str(iNoRows)
                      
            ' Check that the correct number of rows have been supplied
            If (LineUDFLayout = lufHorizontal) And ((LineCount% = iNoRows) Or (iNoRows = 1)) And (iNoCols > 0) And (iNoCols <= MaxTransLineUserFields) Then
                ' User Defined Fields run horizontally across the range with each row representing a timesheet line
                For iField = 1 To iNoCols
                    ' Create the array for the current User Defined Field with 1 entry per row supplied
                    arrLineUserFields(iField) = BuildStrArray(LineCount%, "")
                    
                    ' Run through the supplied rows copying the current user defined field value out to the array
                    ' for the current User Defined Field
                    For iLine = 1 To iNoRows
                        arrLineUserFields(iField)(iLine) = CStr(LocalUDFieldsVar(iLine, iField))
                    Next iLine
                Next iField
                
                If (iNoRows = 1) And (LineCount > 1) Then
                    ' Copy the only row of User Defined Fields supplied into all transaction lines
                    For iField = LBound(arrLineUserFields) To iNoCols
                        ' Create the array for the User Defined Fields
                        For iLine = 2 To LineCount
                            arrLineUserFields(iField)(iLine) = arrLineUserFields(iField)(1)
                        Next iLine
                    Next iField
                End If ' (iNoRows = 1) And (LineCount > 1)
            ElseIf (LineUDFLayout = lufVertical) And ((LineCount% = iNoCols) Or (iNoCols = 1)) And (iNoRows > 0) And (iNoRows <= MaxTransLineUserFields) Then
                ' User Defined Fields run vertically down the range with each column representing a timesheet line
                For iField = 1 To iNoRows
                    ' Create the array for the current User Defined Field with 1 entry per row supplied
                    arrLineUserFields(iField) = BuildStrArray(LineCount%, "")
                    
                    ' Run through the supplied columns copying the current user defined field value out to the array
                    ' for the current User Defined Field
                    For iLine = 1 To iNoCols
                        arrLineUserFields(iField)(iLine) = CStr(LocalUDFieldsVar(iField, iLine))
                    Next iLine
                Next iField
                
                If (iNoCols = 1) And (LineCount > 1) Then
                    ' Copy the only column of User Defined Fields supplied into all transaction lines
                    For iField = LBound(arrLineUserFields) To iNoRows
                        ' Create the array for the User Defined Fields
                        For iLine = 2 To LineCount
                            arrLineUserFields(iField)(iLine) = arrLineUserFields(iField)(1)
                        Next iLine
                    Next iField
                End If ' (iNoRows = 1) And (LineCount > 1)
            Else
                ReturnVal = 584 ' Invalid User Fields List
            End If ' (LineCount% = VBounds%)
        Else
            ReturnVal = 584 ' Invalid User Fields List
        End If ' IsArray(LocalUDFieldsVar)
    End If ' (LineUDFLayout = lufHorizontal) Or (LineUDFLayout = lufVertical)

    Process2DUserFieldsArray = ReturnVal
End Function


' Builds and returns a Variant String Array
Private Function BuildStrArray(ArrCount%, DefVal$) As Variant
    Dim arrStrings() As String, I%

    ReDim arrStrings(1 To ArrCount%) As String

    For I% = LBound(arrStrings) To UBound(arrStrings)
        arrStrings(ArrCount%) = DefVal$
    Next I%

    BuildStrArray = arrStrings
End Function ' BuildStrArray

Attribute VB_Name = "AltStk"

Option Explicit


Private Function SaveAltStkField(Company$, StockCode$, AltCode$, AccCode$, WantNo%, NewFld As Variant) As String
On Error GoTo SaveAltStkField_Error
    Dim RetStr$, CompStr$, Stock$, IntVal%, SetStr$, SetInt%, SetDub#
    
    If ValidCompany(Company) And ValidStockCode(StockCode) Then
        If LocalCheckServer() Then
            CompStr = UCase(Company$)
            Stock = UCase(StockCode$)
            AltCode$ = UCase(AltCode$)
            SetStr$ = ""
            SetInt% = 0
            SetDub# = 0#
            
            Select Case WantNo%
                Case 1  ' Description
                    SetStr$ = CStr(NewFld)
                Case 2  ' R/O Currency
                    SetInt% = CInt(NewFld)
                Case 3  ' R/O Price
                    SetDub# = CDbl(NewFld)
            End Select
            
            IntVal% = EntServer.SaveAltStkFld(CompStr, Stock, AltCode$, AccCode$, WantNo%, SetStr$, SetInt%, SetDub#)
            
            If (IntVal = 0) Then
                RetStr$ = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
       
    GoTo SaveAltStkField_Exit
    
SaveAltStkField_Error:
    RetStr$ = GetErrorStr$
     
SaveAltStkField_Exit:
    SaveAltStkField = RetStr$
End Function



'*******************************************************************************
' Name:        EntAltStkSaveDescr
' Description: Saves the description for the Alternate Stock Code
'*******************************************************************************
Public Function EntAltStkSaveDescr(Company As String, StockCode As String, AltCode As String, AccCode As String, NewDescr As String) As String
Attribute EntAltStkSaveDescr.VB_Description = "Save the description in NewDescr to the Alternate Stock Code Description"
Attribute EntAltStkSaveDescr.VB_HelpID = 20275
Attribute EntAltStkSaveDescr.VB_ProcData.VB_Invoke_Func = " \n14"
    EntAltStkSaveDescr = SaveAltStkField(Company$, StockCode$, AltCode$, AccCode$, 1, NewDescr$)
End Function


'*******************************************************************************
' Name:        EntAltStkSaveROCurrency
' Description: Saves the Re-Order Currency for the Alternate Stock Code
'*******************************************************************************
Public Function EntAltStkSaveROCurrency(Company As String, StockCode As String, AltCode As String, AccCode As String, NewCurrency As Integer) As String
Attribute EntAltStkSaveROCurrency.VB_Description = "Save the reorder Currency in NewCurrency to the Alternate Stock Code Reorder Currency"
Attribute EntAltStkSaveROCurrency.VB_HelpID = 20276
Attribute EntAltStkSaveROCurrency.VB_ProcData.VB_Invoke_Func = " \n14"
On Error GoTo EntAltStkSaveROCurrency_Error
    
    If ValidCcy(NewCurrency%) Then
        EntAltStkSaveROCurrency = SaveAltStkField(Company$, StockCode$, AltCode$, AccCode$, 2, NewCurrency%)
    End If
    
    GoTo EntAltStkSaveROCurrency_Exit
    
EntAltStkSaveROCurrency_Error:
    EntAltStkSaveROCurrency = GetErrorStr$
     
EntAltStkSaveROCurrency_Exit:
    
End Function


'*******************************************************************************
' Name:        EntAltStkSaveROPrice
' Description: Saves the Re-Order Price for the Alternate Stock Code
'*******************************************************************************
Public Function EntAltStkSaveROPrice(Company As String, StockCode As String, AltCode As String, AccCode As String, NewPrice As Double) As String
Attribute EntAltStkSaveROPrice.VB_Description = "Save the reorder Price in NewPrice to the Alternate Stock Code Reorder Price"
Attribute EntAltStkSaveROPrice.VB_HelpID = 20277
Attribute EntAltStkSaveROPrice.VB_ProcData.VB_Invoke_Func = " \n14"
On Error GoTo EntAltStkSaveROPrice_Error
    
    If (NewPrice# >= 0#) Then
        EntAltStkSaveROPrice = SaveAltStkField(Company$, StockCode$, AltCode$, AccCode$, 3, NewPrice#)
    Else
        Error 525   ' Invalid Value
    End If
    
    GoTo EntAltStkSaveROPrice_Exit
    
EntAltStkSaveROPrice_Error:
    EntAltStkSaveROPrice = GetErrorStr$
     
EntAltStkSaveROPrice_Exit:
    
End Function

Attribute VB_Name = "Common"

'*********************************************************************8
'***
'*    Common Module across ALL Workbooks except EntFuncs.Xls
'***
'*********************************************************************8

Option Explicit
Option Private Module

Global EntServer As Object
Global ServerSet As Boolean


' returns True if the passed Nominal Code is valid
Public Function ValidCompany(Company$) As Boolean
    Company$ = Trim(Company$)
    
    If (Len(Company) > 0) And (Len(Company) <= 6) Then
        ValidCompany = True
    Else
        Error 516
        ValidCompany = False
    End If
End Function
 

' returns True if the passed General Ledger Code is valid
Public Function ValidGLCode(GLCode As Long) As Boolean
    If (GLCode <= 0) Then
        If (GLCode < 0) Then
            Error 511
        End If
        
        ValidGLCode = False
    Else
        ValidGLCode = True
    End If
End Function


' returns True if the passed year is valid
Public Function ValidYear(TheYear%) As Boolean
    If ((TheYear > 1900) And (TheYear < 2100)) Or (TheYear = -99) Then
        ' Actual Year or F6 Year
        ValidYear = True
    Else
        Error 512
        ValidYear = False
    End If
End Function


' returns True if the passed period is valid
Public Function ValidPeriod(ThePeriod%) As Boolean
    If ((ThePeriod >= 0) And (ThePeriod <= 99)) Or (ThePeriod = -99) Or (ThePeriod = -98) Or ((ThePeriod >= 101) And (ThePeriod <= 199)) Then
        ' Actual Period or F6 Period or CTD or CTD Period Offset
        ValidPeriod = True
    Else
        Error 513
        ValidPeriod = False
    End If
End Function

Public Function ValidTransactionPeriod(ThePeriod%) As Boolean
    If (ThePeriod >= 1) And (ThePeriod <= 99) Then
        ' Actual Period or F6 Period or CTD or CTD Period Offset
        ValidTransactionPeriod = True
    Else
        Error 513
        ValidTransactionPeriod = False
    End If
End Function

' returns True if the passed currency is valid
Public Function ValidCcy(TheCcy%) As Boolean
    If (TheCcy < 0) Or (TheCcy > 90) Then
        Error 514
        ValidCcy = False
    Else
        ValidCcy = True
    End If
End Function


' returns true if the passed customer code is valid
Public Function ValidCustCode(CustCode$, CSType$) As Boolean
    CustCode$ = UCase(Trim(CustCode$))

    If (Len(CustCode) > 0) And (Len(CustCode) <= 6) Then
        ValidCustCode = True
    Else
        ValidCustCode = False
        If (CSType$ = "C") Then
            Error 515
        Else
            Error 526
        End If
    End If
End Function

' returns True if the passed Stock Code is valid
Public Function ValidStockCode(StockCode$) As Boolean
    StockCode$ = UCase(Trim(StockCode$))
    
    ValidStockCode = True
End Function

' returns True if the passed Stock Code is valid
Public Function ValidLocation(LocCode$) As Boolean
    LocCode$ = UCase(Trim(LocCode$))
    
    If (Len(LocCode$) > 0) And (Len(LocCode$) <= 3) Then
        ValidLocation = True
    Else
        ValidLocation = False
        Error 527
    End If
End Function

' returns True if the passed Nominal Code is valid
Public Function ValidCCDep(IsCC%, ByRef CCDep$) As Boolean
    CCDep$ = UCase(Trim(CCDep$))

    If (Len(CCDep$) >= 0) And (Len(CCDep$) <= 3) Then
        ValidCCDep = True
    Else
        If IsCC% = True Then
            Error 519
        Else
            Error 520
        End If
        ValidCCDep = False
    End If
End Function


' Returns True if the passed JC Total Type is valid
Public Function ValidTotType(TType%) As Boolean
    If (TType% = 10) Or (TType% = 20) Or (TType% = 30) Or (TType% = 40) Or (TType% = 50) Or (TType% = 60) Or _
       (TType% = 99) Or (TType% = 160) Or (TType% = 170) Or (TType% = 180) Or (TType% = 190) Or _
       (TType% = 5) Or (TType% = 14) Or (TType% = 23) Or (TType% = 53) Or (TType% = 63) Or (TType% = 67) Or (TType% = 173) Then
        ValidTotType = True
    Else
        Error 531
        ValidTotType = False
    End If
End Function


' returns True if the passed Job Code is valid
Public Function ValidJobCode(JobCode$) As Boolean
    JobCode$ = UCase(Trim(JobCode$))
    
    If (Len(JobCode$) > 0) And (Len(JobCode$) <= 10) Then
        ValidJobCode = True
    Else
        ValidJobCode = False
        Error 521
    End If
End Function


' returns True if the passed Job Analysis Code is valid
Public Function ValidJobAnalCode(JobAnalCode$) As Boolean
    JobAnalCode$ = UCase(Trim(JobAnalCode$))
    
    If (Len(JobAnalCode$) > 0) And (Len(JobAnalCode$) <= 10) Then
        ValidJobAnalCode = True
    Else
        ValidJobAnalCode = False
        Error 522
    End If
End Function


' returns True if the passed date is valid
Public Function ValidDate(TheDate$, ActDate As Date, ErrNo%) As Boolean
On Error GoTo ValidDate_Error

    If IsDate(TheDate) Then
        ValidDate = True
        ActDate = CDate(TheDate$)
    Else
        ValidDate = False
        Error ErrNo%
    End If
    
    GoTo ValidDate_Exit
    
ValidDate_Error:
    Error ErrNo%
    ValidDate = False

ValidDate_Exit:
End Function


' Validates the Posted/Committed parameter used in some JC history functions
Public Function ValidPC(PCStr$) As Boolean
    PCStr$ = UCase(PCStr$)
    
    If (Len(PCStr$) = 1) And ((Left$(PCStr$, 1) = "P") Or (Left$(PCStr$, 1) = "C")) Then
        ' 1 Char long and "P" or "C"
        ValidPC = True
    Else
        Error 533       ' Invalid Posted/Commited Flag
        ValidPC = False
    End If
End Function

' returns true if the passed Employee Code is valid
Public Function ValidEmployeeCode(EmplCode$) As Boolean
    EmplCode$ = UCase(Trim(EmplCode$))

    If (Len(EmplCode$) > 0) And (Len(EmplCode$) <= 6) Then
        ValidEmployeeCode = True
    Else
        ValidEmployeeCode = False
        Error 564
    End If
End Function

' returns true if the passed Time-Rate Code is valid
Public Function ValidTimeRateCode(RateCode$) As Boolean
    RateCode$ = UCase(Trim(RateCode$))

    If (Len(RateCode$) > 0) And (Len(RateCode$) <= 10) Then
        ValidTimeRateCode = True
    Else
        ValidTimeRateCode = False
        Error 565
    End If
End Function

' returns a formatted error string
Public Function GetErrorStr() As String
    GetErrorStr = "Error (" + Trim(Str(Err)) + "): " + EntErrorStr(Err)
End Function


' returns a formatted error string for number fields
Public Function GetErrorNumStr() As String
    GetErrorNumStr = "#(" + Trim(Str(Err)) + "): " + EntErrorStr(Err)
End Function


' Checks for the local server, and gets the server from EntFuncs.XLA if necessary
Public Function LocalCheckServer() As Boolean
On Error GoTo LocalCheckServer_Error

    If Not ServerSet Then
        ' Server Not Running - Start server
        If ZSYS9194(719, EntServer) Then
            ServerSet = True
        Else
            ServerSet = False
        End If
    End If

    ' Finish procedure without causing an error
    LocalCheckServer = ServerSet
    GoTo LocalCheckServer_Exit
    
LocalCheckServer_Error:
    Error 500
    LocalCheckServer = False

LocalCheckServer_Exit:
End Function
' PL 30/08/2016 R3 ABSEXCH-16676 : Supplier Validation
' returns true if the passed Supplier code is valid
Public Function ValidSuppCode(SuppCode$, CSType$) As Boolean
    SuppCode$ = UCase(Trim(SuppCode$))

    If (Len(SuppCode) > 0) And (Len(SuppCode) <= 6) Then
        ValidSuppCode = True
    Else
        ValidSuppCode = False
        If (CSType$ = "S") Then
            Error 526
        Else
            Error 515
        End If
    End If
End Function

Attribute VB_Name = "SaveJob"

Option Explicit


' Saves a string to the customer/supplier record
Private Function SaveJobMiscStr(Company$, JobCode$, SaveNo%, NewVal$) As String
On Error GoTo SaveJobMiscStr_Error
    Dim StrVal$, IntVal%, JCode$
       
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidJobCode(JobCode$) Then
        If LocalCheckServer() Then
            Company$ = UCase(Company$)
            JCode$ = UCase(JobCode$)
                     
            IntVal = EntServer.SaveJobMiscStr(Company$, JCode$, SaveNo%, NewVal$)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveJobMiscStr_Exit
           
SaveJobMiscStr_Error:
    StrVal = GetErrorStr$

SaveJobMiscStr_Exit:
    SaveJobMiscStr = StrVal
End Function


' Save a Date String
Private Function SaveJobMiscDateStr(Company$, JobCode$, SaveNo%, NewDate$, ErrNo%) As String
On Error GoTo SaveJobMiscDateStr_Error
        
    Dim ActDate As Date, NewField$
    
    ' Validate Date and convert to Exchequer Date Format
    If ValidDate(NewDate$, ActDate, ErrNo%) Then
        ' OK - reformat into YYYYMMDD
        NewField$ = Format(ActDate, "yyyymmdd")
    End If
       
    SaveJobMiscDateStr = SaveJobMiscStr(Company$, JobCode$, SaveNo%, NewField$)
    
    GoTo SaveJobMiscDateStr_Exit
    
SaveJobMiscDateStr_Error:
    SaveJobMiscDateStr = GetErrorStr$

SaveJobMiscDateStr_Exit:

End Function


'*******************************************************************************
' Name:        EntJCJobSaveName
' Description: Save the Job Name/Description
'*****************************************************************************************
Public Function EntJCJobSaveName(Company$, JobCode$, NewName$) As String
Attribute EntJCJobSaveName.VB_Description = "Sets the Job Name/Description to NewName"
Attribute EntJCJobSaveName.VB_HelpID = 20326
Attribute EntJCJobSaveName.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveName = SaveJobMiscStr(Company$, JobCode$, 1, NewName$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveStartDate
' Description: Save the Job Start Date
'*****************************************************************************************
Public Function EntJCJobSaveStartDate(Company$, JobCode$, NewDate$) As String
Attribute EntJCJobSaveStartDate.VB_Description = "Sets the Job Start Date to NewStartDate"
Attribute EntJCJobSaveStartDate.VB_HelpID = 20328
Attribute EntJCJobSaveStartDate.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveStartDate = SaveJobMiscDateStr(Company$, JobCode$, 7, NewDate$, 534)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveEndDate
' Description: Save the Job End Date
'*****************************************************************************************
Public Function EntJCJobSaveEndDate(Company$, JobCode$, NewDate$) As String
Attribute EntJCJobSaveEndDate.VB_Description = "Sets the Job End Date to NewEndDate"
Attribute EntJCJobSaveEndDate.VB_HelpID = 20325
Attribute EntJCJobSaveEndDate.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveEndDate = SaveJobMiscDateStr(Company$, JobCode$, 8, NewDate$, 535)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveRevEndDate
' Description: Save the Job Revised End Date
'*****************************************************************************************
Public Function EntJCJobSaveRevEndDate(Company$, JobCode$, NewDate$) As String
Attribute EntJCJobSaveRevEndDate.VB_Description = "Sets the Job Revised End Date to NewRevEndDate"
Attribute EntJCJobSaveRevEndDate.VB_HelpID = 20327
Attribute EntJCJobSaveRevEndDate.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveRevEndDate = SaveJobMiscDateStr(Company$, JobCode$, 9, NewDate$, 560)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser1
' Description: Save the Job User Field 1
'*****************************************************************************************
Public Function EntJCJobSaveUser1(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser1.VB_Description = "Sets the Job User Defined Field 1 to NewUser1"
Attribute EntJCJobSaveUser1.VB_HelpID = 20329
Attribute EntJCJobSaveUser1.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser1 = SaveJobMiscStr(Company$, JobCode$, 11, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser2
' Description: Save the Job User Field 2
'*****************************************************************************************
Public Function EntJCJobSaveUser2(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser2.VB_Description = "Sets the Job User Defined Field 2 to NewUser2"
Attribute EntJCJobSaveUser2.VB_HelpID = 20330
Attribute EntJCJobSaveUser2.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser2 = SaveJobMiscStr(Company$, JobCode$, 12, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser3
' Description: Save the Job User Field 3
'*****************************************************************************************
Public Function EntJCJobSaveUser3(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser3.VB_Description = "Sets the Job User Defined Field 3 to NewUser3"
Attribute EntJCJobSaveUser3.VB_HelpID = 20331
Attribute EntJCJobSaveUser3.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser3 = SaveJobMiscStr(Company$, JobCode$, 13, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser4
' Description: Save the Job User Field 4
'*****************************************************************************************
Public Function EntJCJobSaveUser4(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser4.VB_Description = "Sets the Job User Defined Field 4 to NewUser4"
Attribute EntJCJobSaveUser4.VB_HelpID = 20332
Attribute EntJCJobSaveUser4.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser4 = SaveJobMiscStr(Company$, JobCode$, 14, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveManager
' Description: Save the Jobs Manager Name
'*****************************************************************************************
Public Function EntJCJobSaveManager(Company$, JobCode$, NewManager$) As String
Attribute EntJCJobSaveManager.VB_Description = "Sets the Job Manager to NewManager"
Attribute EntJCJobSaveManager.VB_HelpID = 20536
Attribute EntJCJobSaveManager.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveManager = SaveJobMiscStr(Company$, JobCode$, 6, NewManager$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveQSCode
' Description: Save the Job's Quantity Surveyor Code
'*****************************************************************************************
Public Function EntJCJobSaveQSCode(Company$, JobCode$, NewQSCode$) As String
Attribute EntJCJobSaveQSCode.VB_Description = "Sets the Job Quantity Surveyor code to NewQSCode"
Attribute EntJCJobSaveQSCode.VB_HelpID = 20689
Attribute EntJCJobSaveQSCode.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveQSCode = SaveJobMiscStr(Company$, JobCode$, 15, NewQSCode$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser5
' Description: Save the Job User Field 5
'*****************************************************************************************
Public Function EntJCJobSaveUser5(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser5.VB_Description = "Sets the Job User Defined Field 5 to NewUser3"
Attribute EntJCJobSaveUser5.VB_HelpID = 20331
Attribute EntJCJobSaveUser5.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser5 = SaveJobMiscStr(Company$, JobCode$, 16, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser6
' Description: Save the Job User Field 6
'*****************************************************************************************
Public Function EntJCJobSaveUser6(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser6.VB_Description = "Sets the Job User Defined Field 6 to NewUser4"
Attribute EntJCJobSaveUser6.VB_HelpID = 20332
Attribute EntJCJobSaveUser6.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser6 = SaveJobMiscStr(Company$, JobCode$, 17, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser7
' Description: Save the Job User Field 7
'*****************************************************************************************
Public Function EntJCJobSaveUser7(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser7.VB_Description = "Sets the Job User Defined Field 7 to NewUser3"
Attribute EntJCJobSaveUser7.VB_HelpID = 20331
Attribute EntJCJobSaveUser7.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser7 = SaveJobMiscStr(Company$, JobCode$, 18, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser8
' Description: Save the Job User Field 8
'*****************************************************************************************
Public Function EntJCJobSaveUser8(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser8.VB_Description = "Sets the Job User Defined Field 8 to NewUser4"
Attribute EntJCJobSaveUser8.VB_HelpID = 20332
Attribute EntJCJobSaveUser8.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser8 = SaveJobMiscStr(Company$, JobCode$, 19, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser9
' Description: Save the Job User Field 9
'*****************************************************************************************
Public Function EntJCJobSaveUser9(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser9.VB_Description = "Sets the Job User Defined Field 9 to NewUser3"
Attribute EntJCJobSaveUser9.VB_HelpID = 20331
Attribute EntJCJobSaveUser9.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser9 = SaveJobMiscStr(Company$, JobCode$, 20, NewField$)
End Function


'*******************************************************************************
' Name:        EntJCJobSaveUser10
' Description: Save the Job User Field 10
'*****************************************************************************************
Public Function EntJCJobSaveUser10(Company$, JobCode$, NewField$) As String
Attribute EntJCJobSaveUser10.VB_Description = "Sets the Job User Defined Field 10 to NewUser4"
Attribute EntJCJobSaveUser10.VB_HelpID = 20332
Attribute EntJCJobSaveUser10.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCJobSaveUser10 = SaveJobMiscStr(Company$, JobCode$, 21, NewField$)
End Function
Attribute VB_Name = "SaveJobAnal"

Option Explicit

'--------------------------------------------------------------------------------------------

' Saves a string to the Analysis code record
Private Function SaveAnalMiscStr(Company$, AnalCode$, SaveNo%, NewVal$) As String
On Error GoTo SaveAnalMiscStr_Error
    Dim IntVal%, ACode$
       
    If ValidCompany(Company) And ValidJobAnalCode(AnalCode$) Then
        If LocalCheckServer() Then
            Company$ = UCase(Company$)
            ACode$ = UCase(AnalCode$)
                     
            IntVal = EntServer.SaveAnalMiscStr(Company$, ACode$, SaveNo%, NewVal$)
        
            If (IntVal = 0) Then
                SaveAnalMiscStr = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveAnalMiscStr_Exit
           
SaveAnalMiscStr_Error:
    SaveAnalMiscStr = GetErrorStr$

SaveAnalMiscStr_Exit:
    
End Function

'--------------------------------------------------------------------------------------------

' Saves a double to the Analysis code record
Private Function SaveAnalMiscInt(Company$, AnalCode$, SaveNo%, NewVal&) As String
On Error GoTo SaveAnalMiscInt_Error
    Dim IntVal&, ACode$
       
    If ValidCompany(Company) And ValidJobAnalCode(AnalCode$) Then
        If LocalCheckServer() Then
            Company$ = UCase(Company$)
            ACode$ = UCase(AnalCode$)
                     
            IntVal = EntServer.SaveAnalMiscInt(Company$, ACode$, SaveNo%, NewVal&)
        
            If (IntVal = 0) Then
                SaveAnalMiscInt = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveAnalMiscInt_Exit
           
SaveAnalMiscInt_Error:
    SaveAnalMiscInt = GetErrorStr$

SaveAnalMiscInt_Exit:
    
End Function

'--------------------------------------------------------------------------------------------

' Saves a double to the Analysis code record
Private Function SaveAnalMiscDbl(Company$, AnalCode$, SaveNo%, NewVal#) As String
On Error GoTo SaveAnalMiscDbl_Error
    Dim IntVal&, ACode$
       
    If ValidCompany(Company) And ValidJobAnalCode(AnalCode$) Then
        If LocalCheckServer() Then
            Company$ = UCase(Company$)
            ACode$ = UCase(AnalCode$)
                     
            IntVal = EntServer.SaveAnalMiscDbl(Company$, ACode$, SaveNo%, NewVal#)
        
            If (IntVal = 0) Then
                SaveAnalMiscDbl = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveAnalMiscDbl_Exit
           
SaveAnalMiscDbl_Error:
    SaveAnalMiscDbl = GetErrorStr$

SaveAnalMiscDbl_Exit:
    
End Function

'--------------------------------------------------------------------------------------------

' Name:        EntJCAnalSaveDeductCIS
' Description: Save the Analysis Code Deduct CIS Tax flag
Public Function EntJCAnalSaveDeductCIS(Company$, AnalCode$, NewStr$) As String
Attribute EntJCAnalSaveDeductCIS.VB_Description = "Sets the Deduct CIS Flag to NewStr for the Company and AnalysisCode requested"
Attribute EntJCAnalSaveDeductCIS.VB_HelpID = 20525
Attribute EntJCAnalSaveDeductCIS.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveDeductCIS = SaveAnalMiscStr(Company$, AnalCode$, 1, NewStr$)
End Function

'--------------------------------------------------------------------------------------------

' Name:        EntJCAnalSaveUpliftPercent
' Description: Save the Analysis Code Uplift%
Public Function EntJCAnalSaveUpliftPercent(Company$, AnalCode$, NewPerc#) As String
Attribute EntJCAnalSaveUpliftPercent.VB_Description = "Sets the Uplift Percent to NewPerc for the Company and AnalysisCode requested"
Attribute EntJCAnalSaveUpliftPercent.VB_HelpID = 20527
Attribute EntJCAnalSaveUpliftPercent.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveUpliftPercent = SaveAnalMiscDbl(Company$, AnalCode$, 1, NewPerc#)
End Function

'--------------------------------------------------------------------------------------------

' Name:        EntJCAnalSaveUpliftGLCode
' Description: Save the Analysis Code Uplift Control GL Code
Public Function EntJCAnalSaveUpliftGLCode(Company$, AnalCode$, NewGLCode&) As String
Attribute EntJCAnalSaveUpliftGLCode.VB_Description = "Sets the Uplift General Ledger Code to NewGLCode for the Company and AnalysisCode requested"
Attribute EntJCAnalSaveUpliftGLCode.VB_HelpID = 20526
Attribute EntJCAnalSaveUpliftGLCode.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveUpliftGLCode = SaveAnalMiscInt(Company$, AnalCode$, 1, NewGLCode&)
End Function

'--------------------------------------------------------------------------------------------


Attribute VB_Name = "SaveJobHist"

Option Explicit


' Saves a budget back to the Job History
Private Function SaveJBudgetValue(Mode%, BT$, TType%, PCChar$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#) As String
On Error GoTo SaveJBudgetValue_Error
    Dim StrVal$, IntVal%, Mo%, CompStr$, NewBudg#
    Dim Ty%, Tp%, TC%, BudgType$, TotType%, Commit%, JCode$, SCode$
    
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy) And ValidTotType(TType%) And ValidJobCode(JobCode$) And ValidStockCode(StockCode$) Then
        If LocalCheckServer() Then
            Mo% = Mode%
            CompStr$ = UCase(Company$)
            BudgType$ = BT$
            TotType% = TType%
            If (UCase(Trim(PCChar$)) = "P") Then
                Commit% = 0
            Else
                Commit% = 1
            End If
            Ty% = TheYear%
            Tp% = ThePeriod%
            TC% = TheCcy%
            JCode$ = UCase$(JobCode$)
            SCode$ = UCase$(StockCode$)
            NewBudg# = NewBudget#
            
            IntVal% = EntServer.SaveJCBudgetValue(Mo%, CompStr$, BudgType$, TotType%, Commit%, Ty%, Tp%, TC%, JCode$, SCode$, NewBudg#)
         
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal%
            End If
        End If
    End If
     
    GoTo SaveJBudgetValue_Exit
           
SaveJBudgetValue_Error:
    StrVal = GetErrorStr$

SaveJBudgetValue_Exit:
    SaveJBudgetValue = StrVal
End Function


'*******************************************************************************
' Name:        EntJCTotSaveBudgetQty
' Description: Saves the Job Totals Budget Quantity
'*******************************************************************************
Public Function EntJCTotSaveBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, Category%, JobCode$, NewBudget#) As Variant
Attribute EntJCTotSaveBudgetQty.VB_Description = "Sets the Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code"
Attribute EntJCTotSaveBudgetQty.VB_HelpID = 20159
Attribute EntJCTotSaveBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCTotSaveBudgetQty = SaveJBudgetValue(1, "M", Category%, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, "1", NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCTotSaveBudget
' Description: Saves the Job Totals Budget
'*******************************************************************************
Public Function EntJCTotSaveBudget(Company$, TheYear%, ThePeriod%, TheCcy%, Category%, JobCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCTotSaveBudget.VB_Description = "Sets the Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code and Posting Type"
Attribute EntJCTotSaveBudget.VB_HelpID = 20158
Attribute EntJCTotSaveBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCTotSaveBudget = SaveJBudgetValue(2, "M", Category%, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, "1", NewBudget#)
End Function

 
'*******************************************************************************
' Name:        EntJCTotSaveRevBudgetQty
' Description: Saves the Job Totals Revised Budget Quantity
'*******************************************************************************
Public Function EntJCTotSaveRevBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, Category%, JobCode$, NewBudget#) As Variant
Attribute EntJCTotSaveRevBudgetQty.VB_Description = "Sets the Revised Budget Quantity to NewBudget for the specified Company, Year, Period, Currency and Job Code"
Attribute EntJCTotSaveRevBudgetQty.VB_HelpID = 20161
Attribute EntJCTotSaveRevBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCTotSaveRevBudgetQty = SaveJBudgetValue(3, "M", Category%, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, "1", NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCTotSaveRevBudget
' Description: Saves the Job Totals Revised Budget
'*******************************************************************************
Public Function EntJCTotSaveRevBudget(Company$, TheYear%, ThePeriod%, TheCcy%, Category%, JobCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCTotSaveRevBudget.VB_Description = "Sets the Revised Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, and Posting Type"
Attribute EntJCTotSaveRevBudget.VB_HelpID = 20160
Attribute EntJCTotSaveRevBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCTotSaveRevBudget = SaveJBudgetValue(4, "M", Category%, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, "1", NewBudget#)
End Function


'*******************************************************************************
' Name:        EntJCAnalSaveBudgetQty
' Description: Saves the Job Analysis Budget Quantity
'*******************************************************************************
Public Function EntJCAnalSaveBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, NewBudget#) As Variant
Attribute EntJCAnalSaveBudgetQty.VB_Description = "Sets the Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, JobCode and AnalysisCode"
Attribute EntJCAnalSaveBudgetQty.VB_HelpID = 20137
Attribute EntJCAnalSaveBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveBudgetQty = SaveJBudgetValue(1, "B", 10, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCAnalSaveBudget
' Description: Saves the Job Analysis Budget
'*******************************************************************************
Public Function EntJCAnalSaveBudget(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCAnalSaveBudget.VB_Description = "Sets the Budget Amount to NewBudget for the specified Company, Year, Period, Currency, JobCode, AnalysisCode and Posting Type"
Attribute EntJCAnalSaveBudget.VB_HelpID = 20136
Attribute EntJCAnalSaveBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveBudget = SaveJBudgetValue(2, "B", 10, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, NewBudget#)
End Function

 
'*******************************************************************************
' Name:        EntJCAnalSaveRevBudgetQty
' Description: Saves the Job Analysis Revised Budget Quantity
'*******************************************************************************
Public Function EntJCAnalSaveRevBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, NewBudget#) As Variant
Attribute EntJCAnalSaveRevBudgetQty.VB_Description = "Sets the Revised Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, JobCode and AnalysisCode"
Attribute EntJCAnalSaveRevBudgetQty.VB_HelpID = 20139
Attribute EntJCAnalSaveRevBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveRevBudgetQty = SaveJBudgetValue(3, "B", 10, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCAnalSaveRevBudget
' Description: Saves the Job Analysis Revised Budget
'*******************************************************************************
Public Function EntJCAnalSaveRevBudget(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCAnalSaveRevBudget.VB_Description = "Sets the Revised Budget Amount to NewBudget for the specified Company, Year, Period, Currency, JobCode, AnalysisCode and Posting Type"
Attribute EntJCAnalSaveRevBudget.VB_HelpID = 20138
Attribute EntJCAnalSaveRevBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveRevBudget = SaveJBudgetValue(4, "B", 10, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, AnalysisCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCAnalSaveBudgetCurr
' Description: Saves the Job Analysis Budget Currency
'*******************************************************************************
Public Function EntJCAnalSaveBudgetCurr(Company$, JobCode$, AnalysisCode$, NewCurrency%) As Variant
Attribute EntJCAnalSaveBudgetCurr.VB_Description = "Sets the Budget Currency to NewCurrency for the specified Company, JobCode and Analysis Code"
Attribute EntJCAnalSaveBudgetCurr.VB_HelpID = 20712
Attribute EntJCAnalSaveBudgetCurr.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim NewCurrencyDbl#
    NewCurrencyDbl# = NewCurrency%
    EntJCAnalSaveBudgetCurr = SaveJBudgetValue(9, "B", 10, "P", Company$, 2000, 1, 1, JobCode$, AnalysisCode$, NewCurrencyDbl#)
End Function
 
 
'*******************************************************************************
' Name:        EntJCStkSaveBudgetQty
' Description: Saves the Job Stock Budget Quantity
'*******************************************************************************
Public Function EntJCStkSaveBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#) As Variant
Attribute EntJCStkSaveBudgetQty.VB_Description = "Sets the Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code"
Attribute EntJCStkSaveBudgetQty.VB_HelpID = 20149
Attribute EntJCStkSaveBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCStkSaveBudgetQty = SaveJBudgetValue(1, "S", 10, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCStkSaveBudget
' Description: Saves the Job Analysis Budget
'*******************************************************************************
Public Function EntJCStkSaveBudget(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCStkSaveBudget.VB_Description = "Sets the Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, Stock Code and Posting Type"
Attribute EntJCStkSaveBudget.VB_HelpID = 20148
Attribute EntJCStkSaveBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCStkSaveBudget = SaveJBudgetValue(2, "S", 10, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCStkSaveRevBudgetQty
' Description: Saves the Job Stock Budget Quantity
'*******************************************************************************
Public Function EntJCStkSaveRevBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#) As Variant
Attribute EntJCStkSaveRevBudgetQty.VB_Description = "Sets the Revised Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code"
Attribute EntJCStkSaveRevBudgetQty.VB_HelpID = 20151
Attribute EntJCStkSaveRevBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCStkSaveRevBudgetQty = SaveJBudgetValue(3, "S", 10, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function


'*******************************************************************************
' Name:        EntJCStkSaveRevBudget
' Description: Saves the Job Analysis Budget
'*******************************************************************************
Public Function EntJCStkSaveRevBudget(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCStkSaveRevBudget.VB_Description = "Sets the Revised Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, Stock Code and Posting Type"
Attribute EntJCStkSaveRevBudget.VB_HelpID = 20150
Attribute EntJCStkSaveRevBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCStkSaveRevBudget = SaveJBudgetValue(4, "S", 10, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function
 
 
'*******************************************************************************
' Name:        EntJCPaySaveBudgetQty
' Description: Saves the Job Pay-Rate Budget Quantity
'*******************************************************************************
Public Function EntJCPaySaveBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#) As Variant
Attribute EntJCPaySaveBudgetQty.VB_Description = "Sets the Pay Rate Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code"
Attribute EntJCPaySaveBudgetQty.VB_HelpID = 20459
Attribute EntJCPaySaveBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCPaySaveBudgetQty = SaveJBudgetValue(1, "P", 10, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCPaySaveBudget
' Description: Saves the Job Pay-Rate Budget
'*******************************************************************************
Public Function EntJCPaySaveBudget(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCPaySaveBudget.VB_Description = "Sets the Pay Rate Budget Amount to NewBudget for the specified Company, Year, Period, Currency, JobCode, StockCode and Posting Type"
Attribute EntJCPaySaveBudget.VB_HelpID = 20706
Attribute EntJCPaySaveBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCPaySaveBudget = SaveJBudgetValue(2, "P", 10, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function
 

'*******************************************************************************
' Name:        EntJCPaySaveRevBudgetQty
' Description: Saves the Job Pay-Rate Revised Budget Quantity
'*******************************************************************************
Public Function EntJCPaySaveRevBudgetQty(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#) As Variant
Attribute EntJCPaySaveRevBudgetQty.VB_Description = "Sets the Revised Pay Rate Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code"
Attribute EntJCPaySaveRevBudgetQty.VB_HelpID = 20461
Attribute EntJCPaySaveRevBudgetQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCPaySaveRevBudgetQty = SaveJBudgetValue(3, "P", 10, "P", Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function


'*******************************************************************************
' Name:        EntJCPaySaveRevBudget
' Description: Saves the Job Pay-Rate Revised Budget
'*******************************************************************************
Public Function EntJCPaySaveRevBudget(Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, PostComm$, NewBudget#) As Variant
Attribute EntJCPaySaveRevBudget.VB_Description = "Sets the Revised Pay Rate Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, Stock Code and Posting Type"
Attribute EntJCPaySaveRevBudget.VB_HelpID = 20460
Attribute EntJCPaySaveRevBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCPaySaveRevBudget = SaveJBudgetValue(4, "P", 10, PostComm$, Company$, TheYear%, ThePeriod%, TheCcy%, JobCode$, StockCode$, NewBudget#)
End Function

 
'*******************************************************************************
' Name:        EntJCAnalSaveBudgetOverheadChargePercent
' Description: Saves the Job Analysis Budget Overhead Charge Percentage
'*******************************************************************************
Public Function EntJCAnalSaveBudgetOverheadChargePercent(Company$, JobCode$, AnalysisCode$, NewBudget#) As Variant
Attribute EntJCAnalSaveBudgetOverheadChargePercent.VB_Description = "Saves the Job Analysis Budget Overhead Charge Percentage for the specified Company, JobCode and AnalysisCode (Range 0.00 - 99.99, 2dp)"
Attribute EntJCAnalSaveBudgetOverheadChargePercent.VB_HelpID = 20703
Attribute EntJCAnalSaveBudgetOverheadChargePercent.VB_ProcData.VB_Invoke_Func = " \n14"
    EntJCAnalSaveBudgetOverheadChargePercent = SaveJBudgetValue(8, "B", 10, "P", Company$, 2000, 1, 1, JobCode$, AnalysisCode$, NewBudget#)
End Function

 
'*******************************************************************************
' Name:        EntJCAnalSaveBudgetRecharge
' Description: Saves the Job Analysis Budget Overhead Charge Percentage
'*******************************************************************************
Public Function EntJCAnalSaveBudgetRecharge(Company$, JobCode$, AnalysisCode$, NewFlag$) As Variant
Attribute EntJCAnalSaveBudgetRecharge.VB_Description = "Sets the Job Analysis Budget Recharge Flag (Y or N)"
Attribute EntJCAnalSaveBudgetRecharge.VB_HelpID = 20704
Attribute EntJCAnalSaveBudgetRecharge.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim Val#
        
    If (Mid$(UCase$(NewFlag$) + "N", 1, 1) = "Y") Then Val# = 100# Else Val# = 0#
    EntJCAnalSaveBudgetRecharge = SaveJBudgetValue(7, "B", 10, "P", Company$, 2000, 1, 1, JobCode$, AnalysisCode$, Val#)
End Function

Attribute VB_Name = "SaveLoc"
Option Explicit


' Saves a string to the Location record
Private Function SaveLocMiscStr(Company$, LocCode$, SaveNo%, NewVal$) As String
On Error GoTo SaveLocMiscStr_Error
    Dim CompStr$, Loc$, StrVal$, IntVal%
       
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidLocation(LocCode$) Then
        If LocalCheckServer() Then
            CompStr$ = UCase(Company$)
            Loc$ = UCase(LocCode$)
            
            IntVal = EntServer.SaveLocationMiscStr(CompStr$, Loc$, SaveNo%, NewVal$)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveLocMiscStr_Exit
          
SaveLocMiscStr_Error:
    StrVal = GetErrorStr$

SaveLocMiscStr_Exit:
    SaveLocMiscStr = StrVal
End Function


' Saves a string to the Location record
Private Function SaveLocMiscInt(Company$, LocCode$, SaveNo%, NewVal&) As String
On Error GoTo SaveLocMiscInt_Error
    Dim CompStr$, Loc$, StrVal$, IntVal%
       
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidLocation(LocCode$) Then
        If LocalCheckServer() Then
            CompStr$ = UCase(Company$)
            Loc$ = UCase(LocCode$)
            
            IntVal = EntServer.SaveLocationMiscInt(CompStr$, Loc$, SaveNo%, NewVal&)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveLocMiscInt_Exit
          
SaveLocMiscInt_Error:
    StrVal = GetErrorStr$

SaveLocMiscInt_Exit:
    SaveLocMiscInt = StrVal
End Function


'*******************************************************************************
' Name:        EntLocationSaveName
' Description: Saves the Name for the specified Location
'*******************************************************************************
Public Function EntLocationSaveName(Company$, LocCode$, NewName$) As String
Attribute EntLocationSaveName.VB_Description = "Sets the Name for the specified Location to NewName"
Attribute EntLocationSaveName.VB_HelpID = 20627
Attribute EntLocationSaveName.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveName = SaveLocMiscStr(Company$, LocCode$, 1, NewName$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveAddress
' Description: Saves a specified Address Line for the specified Location
'*******************************************************************************
Public Function EntLocationSaveAddress(Company$, LocCode$, LineNo%, NewAddress$) As String
Attribute EntLocationSaveAddress.VB_Description = "Updates a Location's Address with NewAddress for the specified Line No"
Attribute EntLocationSaveAddress.VB_HelpID = 20617
Attribute EntLocationSaveAddress.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveAddress = SaveLocMiscStr(Company$, LocCode$, LineNo% + 1, NewAddress$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveContact
' Description: Saves the Contact for the specified Location
'*******************************************************************************
Public Function EntLocationSaveContact(Company$, LocCode$, NewContact$) As String
Attribute EntLocationSaveContact.VB_Description = "Sets the Contact for the specified Location to NewContact"
Attribute EntLocationSaveContact.VB_HelpID = 20620
Attribute EntLocationSaveContact.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveContact = SaveLocMiscStr(Company$, LocCode$, 7, NewContact$)
End Function


'*******************************************************************************
' Name:        EntLocationSavePhone
' Description: Saves the Phone Number for the specified Location
'*******************************************************************************
Public Function EntLocationSavePhone(Company$, LocCode$, NewPhoneNo$) As String
Attribute EntLocationSavePhone.VB_Description = "Sets the Phone Number for the specified Location to NewPhoneNo"
Attribute EntLocationSavePhone.VB_HelpID = 20634
Attribute EntLocationSavePhone.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSavePhone = SaveLocMiscStr(Company$, LocCode$, 8, NewPhoneNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveFax
' Description: Saves the Fax Number for the specified Location
'*******************************************************************************
Public Function EntLocationSaveFax(Company$, LocCode$, NewFaxNo$) As String
Attribute EntLocationSaveFax.VB_Description = "Sets the Fax Number for the specified Location to NewFaxNo"
Attribute EntLocationSaveFax.VB_HelpID = 20625
Attribute EntLocationSaveFax.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveFax = SaveLocMiscStr(Company$, LocCode$, 9, NewFaxNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveModem
' Description: Saves the Modem Number for the specified Location
'*******************************************************************************
Public Function EntLocationSaveModem(Company$, LocCode$, NewModemNo$) As String
Attribute EntLocationSaveModem.VB_Description = "Sets the Modem Number for the specified Location to NewModemNo"
Attribute EntLocationSaveModem.VB_HelpID = 20626
Attribute EntLocationSaveModem.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveModem = SaveLocMiscStr(Company$, LocCode$, 10, NewModemNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveEmail
' Description: Saves the Email Address for the specified Location
'*******************************************************************************
Public Function EntLocationSaveEmail(Company$, LocCode$, NewEmailAddr$) As String
Attribute EntLocationSaveEmail.VB_Description = "Sets the Email Address for the specified Location to NewEmailAddr"
Attribute EntLocationSaveEmail.VB_HelpID = 20624
Attribute EntLocationSaveEmail.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveEmail = SaveLocMiscStr(Company$, LocCode$, 11, NewEmailAddr$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveCostCentre
' Description: Saves the Cost Centre Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveCostCentre(Company$, LocCode$, NewCode$) As String
Attribute EntLocationSaveCostCentre.VB_Description = "Sets the Cost Centre Code for the specified Location to NewCode"
Attribute EntLocationSaveCostCentre.VB_HelpID = 20621
Attribute EntLocationSaveCostCentre.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveCostCentre = SaveLocMiscStr(Company$, LocCode$, 12, NewCode$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveDepartment
' Description: Saves the Department Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveDepartment(Company$, LocCode$, NewCode$) As String
Attribute EntLocationSaveDepartment.VB_Description = "Sets the Department Code for the specified Location to NewCode"
Attribute EntLocationSaveDepartment.VB_HelpID = 20623
Attribute EntLocationSaveDepartment.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveDepartment = SaveLocMiscStr(Company$, LocCode$, 13, NewCode$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveOverrideSalesPrices
' Description: Saves the 'Override Sales Prices' flag for the specified Location
'*******************************************************************************
Public Function EntLocationSaveOverrideSalesPrices(Company$, LocCode$, NewYesNo$) As String
Attribute EntLocationSaveOverrideSalesPrices.VB_Description = "Updates the OverrideSalesPrices flag for the specified Location to NewSalesPricesFlag (Y or N)"
Attribute EntLocationSaveOverrideSalesPrices.VB_HelpID = 20632
Attribute EntLocationSaveOverrideSalesPrices.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveOverrideSalesPrices = SaveLocMiscStr(Company$, LocCode$, 14, NewYesNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveOverrideCostPrice
' Description: Saves the 'Override Cost Price' flag for the specified Location
'*******************************************************************************
Public Function EntLocationSaveOverrideCostPrice(Company$, LocCode$, NewYesNo$) As String
Attribute EntLocationSaveOverrideCostPrice.VB_Description = "Updates the OverrideCostPrice flag for the specified Location to NewCostPriceFlag (Y or N)"
Attribute EntLocationSaveOverrideCostPrice.VB_HelpID = 20629
Attribute EntLocationSaveOverrideCostPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveOverrideCostPrice = SaveLocMiscStr(Company$, LocCode$, 15, NewYesNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveOverrideReorderPrice
' Description: Saves the 'Override Re-Order Price' flag for the specified Location
'*******************************************************************************
Public Function EntLocationSaveOverrideReorderPrice(Company$, LocCode$, NewYesNo$) As String
Attribute EntLocationSaveOverrideReorderPrice.VB_Description = "Updates the OverrideReorderPrice flag for the specified Location to NewReorderPriceFlag (Y or N)"
Attribute EntLocationSaveOverrideReorderPrice.VB_HelpID = 20631
Attribute EntLocationSaveOverrideReorderPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveOverrideReorderPrice = SaveLocMiscStr(Company$, LocCode$, 16, NewYesNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveOverrideCCDept
' Description: Saves the 'Override CC/Dept' flag for the specified Location
'*******************************************************************************
Public Function EntLocationSaveOverrideCCDept(Company$, LocCode$, NewYesNo$) As String
Attribute EntLocationSaveOverrideCCDept.VB_Description = "Updates the OverrideCC/Dept flag for the specified Location to NewCC/DeptFlagFlag (Y or N)"
Attribute EntLocationSaveOverrideCCDept.VB_HelpID = 20628
Attribute EntLocationSaveOverrideCCDept.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveOverrideCCDept = SaveLocMiscStr(Company$, LocCode$, 17, NewYesNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveOverrideSupplier
' Description: Saves the 'Override Supplier' flag for the specified Location
'*******************************************************************************
Public Function EntLocationSaveOverrideSupplier(Company$, LocCode$, NewYesNo$) As String
Attribute EntLocationSaveOverrideSupplier.VB_Description = "Updates the OverrideSupplier flag for the specified Location to NewSupplierFlag (Y or N)"
Attribute EntLocationSaveOverrideSupplier.VB_HelpID = 20633
Attribute EntLocationSaveOverrideSupplier.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveOverrideSupplier = SaveLocMiscStr(Company$, LocCode$, 18, NewYesNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveOverrideGLCodes
' Description: Saves the 'Override GL Codes' flag for the specified Location
'*******************************************************************************
Public Function EntLocationSaveOverrideGLCodes(Company$, LocCode$, NewYesNo$) As String
Attribute EntLocationSaveOverrideGLCodes.VB_Description = "Updates the OverrideGLCodes flag for the specified Location to NewGLCodesFlag (Y or N)"
Attribute EntLocationSaveOverrideGLCodes.VB_HelpID = 20630
Attribute EntLocationSaveOverrideGLCodes.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveOverrideGLCodes = SaveLocMiscStr(Company$, LocCode$, 19, NewYesNo$)
End Function


'*******************************************************************************
' Name:        EntLocationSaveSalesGL
' Description: Saves the Sales GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveSalesGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveSalesGL.VB_Description = "Sets the Sales General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveSalesGL.VB_HelpID = 20636
Attribute EntLocationSaveSalesGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveSalesGL = SaveLocMiscInt(Company$, LocCode$, 1, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSaveCostOfSalesGL
' Description: Saves the Cost Of Sales GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveCostOfSalesGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveCostOfSalesGL.VB_Description = "Sets the Cost Of Sales General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveCostOfSalesGL.VB_HelpID = 20622
Attribute EntLocationSaveCostOfSalesGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveCostOfSalesGL = SaveLocMiscInt(Company$, LocCode$, 2, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSaveClosingStkGL
' Description: Saves the Closing Stk / Write Offs GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveClosingStkGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveClosingStkGL.VB_Description = "Sets the Closing Stk / Write Offs General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveClosingStkGL.VB_HelpID = 20619
Attribute EntLocationSaveClosingStkGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveClosingStkGL = SaveLocMiscInt(Company$, LocCode$, 3, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSaveStockValueGL
' Description: Saves the Stock Value GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveStockValueGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveStockValueGL.VB_Description = "Sets the Stock Value General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveStockValueGL.VB_HelpID = 20638
Attribute EntLocationSaveStockValueGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveStockValueGL = SaveLocMiscInt(Company$, LocCode$, 4, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSaveBOMFinishedGoodsGL
' Description: Saves the BOM/Finished Goods GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveBOMFinishedGoodsGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveBOMFinishedGoodsGL.VB_Description = "Sets the BOM/Finished Goods General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveBOMFinishedGoodsGL.VB_HelpID = 20618
Attribute EntLocationSaveBOMFinishedGoodsGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveBOMFinishedGoodsGL = SaveLocMiscInt(Company$, LocCode$, 5, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSaveWOPWIPGL
' Description: Saves the WOP WIP GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveWOPWIPGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveWOPWIPGL.VB_Description = "Sets the WOP WIP General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveWOPWIPGL.VB_HelpID = 20639
Attribute EntLocationSaveWOPWIPGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveWOPWIPGL = SaveLocMiscInt(Company$, LocCode$, 6, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSavePurchaseReturnGL
' Description: Saves the Purchase Return GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSavePurchaseReturnGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSavePurchaseReturnGL.VB_Description = "Sets the Purchase Return General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSavePurchaseReturnGL.VB_HelpID = 20635
Attribute EntLocationSavePurchaseReturnGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSavePurchaseReturnGL = SaveLocMiscInt(Company$, LocCode$, 7, NewGLCode&)
End Function


'*******************************************************************************
' Name:        EntLocationSaveSalesReturnGL
' Description: Saves the Sales Return GL Code for the specified Location
'*******************************************************************************
Public Function EntLocationSaveSalesReturnGL(Company$, LocCode$, NewGLCode&) As String
Attribute EntLocationSaveSalesReturnGL.VB_Description = "Sets the Sales Return General Ledger Code for the specified Location to NewGLCode"
Attribute EntLocationSaveSalesReturnGL.VB_HelpID = 20637
Attribute EntLocationSaveSalesReturnGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntLocationSaveSalesReturnGL = SaveLocMiscInt(Company$, LocCode$, 8, NewGLCode&)
End Function
Attribute VB_Name = "SaveStock"

Option Explicit


' Saves a string to the Stock or Stock/Location record
Private Function SaveStkLocMiscStr(Company$, StockCode$, LocCode$, SaveNo%, NewVal$) As String
On Error GoTo SaveStkLocMiscStr_Error
    Dim CompStr As String, Stock As String, Loc$
    Dim StrVal$, IntVal%
       
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidStockCode(StockCode) Then
        If LocalCheckServer() Then
            CompStr$ = UCase(Company$)
            Stock = UCase(StockCode$)
            Loc$ = UCase(LocCode$)
            
            IntVal = EntServer.SaveStockMiscStr(CompStr$, Stock, Loc$, SaveNo%, NewVal$)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveStkLocMiscStr_Exit
          
SaveStkLocMiscStr_Error:
    StrVal = GetErrorStr$

SaveStkLocMiscStr_Exit:
    SaveStkLocMiscStr = StrVal
End Function


Private Function SaveStkMiscStr(Company$, StockCode$, SaveNo%, NewVal$) As String
    SaveStkMiscStr = SaveStkLocMiscStr(Company$, StockCode$, "", SaveNo%, NewVal$)
End Function


' Saves an integer to the stock record
Private Function SaveStkMiscInt(Company$, StockCode$, LocCode$, SaveNo%, PriceBand$, NewVal As Long) As String
On Error GoTo SaveStkMiscInt_Error
    Dim CompStr As String, Stock$, Location$
    Dim StrVal$, IntVal%
    
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidStockCode(StockCode) Then
        If LocalCheckServer() Then
            CompStr$ = UCase(Company$)
            Stock = UCase(StockCode$)
            Location$ = UCase(LocCode$)
            
            IntVal = EntServer.SaveStockMiscInt(CompStr$, Stock, Location$, SaveNo%, PriceBand$, NewVal)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveStkMiscInt_Exit
          
SaveStkMiscInt_Error:
    StrVal = GetErrorStr$

SaveStkMiscInt_Exit:
    SaveStkMiscInt = StrVal
End Function


' Saves a double to the stock record
Private Function SaveStkMiscVal(Company$, StockCode$, LocCode$, SaveNo%, PriceBand$, NewVal As Double) As String
On Error GoTo SaveStkMiscVal_Error
    Dim CompStr As String, Stock$, Location$
    Dim StrVal$, IntVal%
    
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidStockCode(StockCode) Then
        If LocalCheckServer() Then
            CompStr$ = UCase(Company$)
            Stock = UCase(StockCode$)
            Location$ = UCase(LocCode$)
            
            IntVal = EntServer.SaveStockMiscVal(CompStr$, Stock, Location$, SaveNo%, PriceBand$, NewVal)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
      
    GoTo SaveStkMiscVal_Exit
          
SaveStkMiscVal_Error:
    StrVal = GetErrorStr$

SaveStkMiscVal_Exit:
    SaveStkMiscVal = StrVal
End Function


'*******************************************************************************
' Name:        EntStkSaveDescr
' Description: Saves the Description for the specified stock item
'*******************************************************************************
Public Function EntStkSaveDescr(Company$, StockCode$, LineNo%, NewDescr$) As String
Attribute EntStkSaveDescr.VB_Description = "Sets a stock description line to NewDescr, LineNo indicates which of the description lines will be changed (1 to 6)"
Attribute EntStkSaveDescr.VB_HelpID = 20045
Attribute EntStkSaveDescr.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveDescr = SaveStkMiscStr(Company$, StockCode$, LineNo%, NewDescr$)
End Function


'*******************************************************************************
' Name:        EntStkSaveAltCode
' Description: Saves the Alternate Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveAltCode(Company$, StockCode$, NewAltCode$) As String
Attribute EntStkSaveAltCode.VB_Description = "Sets the Alternate Stock Code for the specified Stock Item to NewAltCode"
Attribute EntStkSaveAltCode.VB_HelpID = 20040
Attribute EntStkSaveAltCode.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveAltCode = SaveStkMiscStr(Company$, StockCode$, 7, NewAltCode$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUnitStock
' Description: Saves the Unit Of Stock for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUnitStock(Company$, StockCode$, NewUnitOfStock$) As String
Attribute EntStkSaveUnitStock.VB_Description = "Sets the stock|fffd|s Unit Of Stock to NewUnitOfStock"
Attribute EntStkSaveUnitStock.VB_HelpID = 20056
Attribute EntStkSaveUnitStock.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUnitStock = SaveStkMiscStr(Company$, StockCode$, 8, NewUnitOfStock$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUnitSale
' Description: Saves the Unit Of Sale for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUnitSale(Company$, StockCode$, NewUnitOfSale$) As String
Attribute EntStkSaveUnitSale.VB_Description = "Sets the stock|fffd|s Unit Of Sale to NewUnitOfSale"
Attribute EntStkSaveUnitSale.VB_HelpID = 20055
Attribute EntStkSaveUnitSale.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUnitSale = SaveStkMiscStr(Company$, StockCode$, 9, NewUnitOfSale$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUnitPurch
' Description: Saves the Unit Of Purchase for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUnitPurch(Company$, StockCode$, NewUnitOfPurch$) As String
Attribute EntStkSaveUnitPurch.VB_Description = "Sets the stock|fffd|s Unit Of Purchase to NewUnitOfPurch"
Attribute EntStkSaveUnitPurch.VB_HelpID = 20054
Attribute EntStkSaveUnitPurch.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUnitPurch = SaveStkMiscStr(Company$, StockCode$, 10, NewUnitOfPurch$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUserField1
' Description: Saves the User Field 1 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField1(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField1.VB_Description = "Sets the stock|fffd|s User definable field 1 to NewField"
Attribute EntStkSaveUserField1.VB_HelpID = 20057
Attribute EntStkSaveUserField1.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField1 = SaveStkMiscStr(Company$, StockCode$, 11, NewField$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUserField2
' Description: Saves the User Field 2 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField2(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField2.VB_Description = "Sets the stock|fffd|s User definable field 2 to NewField"
Attribute EntStkSaveUserField2.VB_HelpID = 20058
Attribute EntStkSaveUserField2.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField2 = SaveStkMiscStr(Company$, StockCode$, 12, NewField$)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveSalesGL
' Description: Saves the Sales GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveSalesGL.VB_Description = "Sets the stock|fffd|s Sales General Ledger Code to NewGLCode"
Attribute EntStkSaveSalesGL.VB_HelpID = 20051
Attribute EntStkSaveSalesGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesGL = SaveStkMiscInt(Company$, StockCode$, "", 1, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveCOSGL
' Description: Saves the Cost Of Sales GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveCOSGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveCOSGL.VB_Description = "Sets the stock|fffd|s Cost Of Sales General Ledger Code to NewGLCode"
Attribute EntStkSaveCOSGL.VB_HelpID = 20042
Attribute EntStkSaveCOSGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveCOSGL = SaveStkMiscInt(Company$, StockCode$, "", 2, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveWOGL
' Description: Saves the Write Off's GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveWOGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveWOGL.VB_Description = "Sets the stock|fffd|s Write Off|fffd|s General Ledger code to NewGLCode"
Attribute EntStkSaveWOGL.VB_HelpID = 20060
Attribute EntStkSaveWOGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveWOGL = SaveStkMiscInt(Company$, StockCode$, "", 3, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveStkValGL
' Description: Saves the Stock Value GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveStkValGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveStkValGL.VB_Description = "Sets the stock|fffd|s Stock Value General Ledger code to NewGLCode"
Attribute EntStkSaveStkValGL.VB_HelpID = 20053
Attribute EntStkSaveStkValGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveStkValGL = SaveStkMiscInt(Company$, StockCode$, "", 4, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveWIPGL
' Description: Saves the Work In Progress GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveWIPGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveWIPGL.VB_Description = "Sets the stock|fffd|s Work In Progress General Ledger code to NewGLCode"
Attribute EntStkSaveWIPGL.VB_HelpID = 20059
Attribute EntStkSaveWIPGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveWIPGL = SaveStkMiscInt(Company$, StockCode$, "", 5, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveSalesCur
' Description: Saves the Sales Price Band Currency for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesCur(Company$, StockCode$, PriceBand$, NewCurrency As Long) As String
Attribute EntStkSaveSalesCur.VB_Description = "Sets the stock|fffd|s Sales Currency for PriceBand to NewCurrency"
Attribute EntStkSaveSalesCur.VB_HelpID = 20050
Attribute EntStkSaveSalesCur.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesCur = SaveStkMiscInt(Company$, StockCode$, "", 6, PriceBand$, NewCurrency)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveCostCur
' Description: Saves the Cost Currency for the specified stock item
'*******************************************************************************
Public Function EntStkSaveCostCur(Company$, StockCode$, NewCurrency As Long) As String
Attribute EntStkSaveCostCur.VB_Description = "Sets the stock|fffd|s Cost Currency to NewCurrency"
Attribute EntStkSaveCostCur.VB_HelpID = 20043
Attribute EntStkSaveCostCur.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveCostCur = SaveStkMiscInt(Company$, StockCode$, "", 7, " ", NewCurrency)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveReOrderCur
' Description: Saves the Re-Order Currency for the specified stock item
'*******************************************************************************
Public Function EntStkSaveReOrderCur(Company$, StockCode$, NewCurrency As Long) As String
Attribute EntStkSaveReOrderCur.VB_Description = "Sets the stock|fffd|s Re-Order Currency to NewCurrency"
Attribute EntStkSaveReOrderCur.VB_HelpID = 20048
Attribute EntStkSaveReOrderCur.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveReOrderCur = SaveStkMiscInt(Company$, StockCode$, "", 8, " ", NewCurrency)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveMinStock
' Description: Saves the minimum stock level for the specified stock item
'*******************************************************************************
Public Function EntStkSaveMinStock(Company$, StockCode$, StockLevel As Double) As String
Attribute EntStkSaveMinStock.VB_Description = "Sets the stock|fffd|s Minimum Stock value to StockLevel"
Attribute EntStkSaveMinStock.VB_HelpID = 20047
Attribute EntStkSaveMinStock.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveMinStock = SaveStkMiscVal(Company$, StockCode$, "", 1, " ", StockLevel)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveMaxStock
' Description: Saves the maximum stock level for the specified stock item
'*******************************************************************************
Public Function EntStkSaveMaxStock(Company$, StockCode$, StockLevel As Double) As String
Attribute EntStkSaveMaxStock.VB_Description = "Sets the stock|fffd|s Maximum Stock value to StockLevel"
Attribute EntStkSaveMaxStock.VB_HelpID = 20046
Attribute EntStkSaveMaxStock.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveMaxStock = SaveStkMiscVal(Company$, StockCode$, "", 2, " ", StockLevel)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveSalesPrice
' Description: Saves the Sales Price Band Price for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesPrice(Company$, StockCode$, PriceBand$, NewPrice As Double) As String
Attribute EntStkSaveSalesPrice.VB_Description = "Sets the stock|fffd|s Sales Price for PriceBand to NewPrice. NewPrice should be specified in the Currency for that price band"
Attribute EntStkSaveSalesPrice.VB_HelpID = 20052
Attribute EntStkSaveSalesPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesPrice = SaveStkMiscVal(Company$, StockCode$, "", 3, PriceBand$, NewPrice)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveCostPrice
' Description: Saves the Cost Price for the specified stock item
'*******************************************************************************
Public Function EntStkSaveCostPrice(Company$, StockCode$, NewPrice As Double) As String
Attribute EntStkSaveCostPrice.VB_Description = "Sets the stock|fffd|s Cost Price to NewPrice which should be specified in the stock|fffd|s Cost Currency"
Attribute EntStkSaveCostPrice.VB_HelpID = 20044
Attribute EntStkSaveCostPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveCostPrice = SaveStkMiscVal(Company$, StockCode$, "", 4, " ", NewPrice)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveReOrderPrice
' Description: Saves the Re-Order Price for the specified stock item
'*******************************************************************************
Public Function EntStkSaveReOrderPrice(Company$, StockCode$, NewPrice As Double) As String
Attribute EntStkSaveReOrderPrice.VB_Description = "Sets the stock|fffd|s Re-Order Price to NewPrice. NewPrice should be specified in the Re-Order Currency"
Attribute EntStkSaveReOrderPrice.VB_HelpID = 20049
Attribute EntStkSaveReOrderPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveReOrderPrice = SaveStkMiscVal(Company$, StockCode$, "", 5, " ", NewPrice)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveSalesGL
' Description: Saves the Sales GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveSalesGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveSalesGL.VB_Description = "Sets the stock location|fffd|s Sales General Ledger Code to NewGLCode"
Attribute EntStkLocSaveSalesGL.VB_HelpID = 20120
Attribute EntStkLocSaveSalesGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveSalesGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 1, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveCOSGL
' Description: Saves the Cost Of Sales GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveCOSGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveCOSGL.VB_Description = "Sets the stock location|fffd|s Cost Of Sales General Ledger Code to NewGLCode"
Attribute EntStkLocSaveCOSGL.VB_HelpID = 20111
Attribute EntStkLocSaveCOSGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveCOSGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 2, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveWOGL
' Description: Saves the Write Off's GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveWOGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveWOGL.VB_Description = "Sets the stock location|fffd|s Write Off|fffd|s General Ledger code to NewGLCode"
Attribute EntStkLocSaveWOGL.VB_HelpID = 20124
Attribute EntStkLocSaveWOGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveWOGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 3, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveStkValGL
' Description: Saves the Stock Value GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveStkValGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveStkValGL.VB_Description = "Sets the stock location|fffd|s Stock Value General Ledger code to NewGLCode"
Attribute EntStkLocSaveStkValGL.VB_HelpID = 20122
Attribute EntStkLocSaveStkValGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveStkValGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 4, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveWIPGL
' Description: Saves the Work In Progress GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveWIPGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveWIPGL.VB_Description = "Sets the stock location|fffd|s Work In Progress General Ledger code to NewGLCode"
Attribute EntStkLocSaveWIPGL.VB_HelpID = 20123
Attribute EntStkLocSaveWIPGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveWIPGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 5, " ", NewGLCode)
End Function


'*****************************************************************************************
' Name:        EntStkLocSaveSalesCur
' Description: Saves the Sales Price Band Currency for the specified stock and location
'*****************************************************************************************
Public Function EntStkLocSaveSalesCur(Company$, StockCode$, LocCode$, PriceBand$, NewCurrency As Long) As String
Attribute EntStkLocSaveSalesCur.VB_Description = "Sets the stock location|fffd|s Sales Currency for PriceBand to NewCurrency"
Attribute EntStkLocSaveSalesCur.VB_HelpID = 20119
Attribute EntStkLocSaveSalesCur.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveSalesCur = SaveStkMiscInt(Company$, StockCode$, LocCode$, 6, PriceBand$, NewCurrency)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveCostCur
' Description: Saves the Cost Currency for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveCostCur(Company$, StockCode$, LocCode$, NewCurrency As Long) As String
Attribute EntStkLocSaveCostCur.VB_Description = "Sets the stock location|fffd|s Cost Currency to NewCurrency"
Attribute EntStkLocSaveCostCur.VB_HelpID = 20112
Attribute EntStkLocSaveCostCur.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveCostCur = SaveStkMiscInt(Company$, StockCode$, LocCode$, 7, " ", NewCurrency)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveReOrderCur
' Description: Saves the Re-Order Currency for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveReOrderCur(Company$, StockCode$, LocCode$, NewCurrency As Long) As String
Attribute EntStkLocSaveReOrderCur.VB_Description = "Sets the stock location|fffd|s Re-Order Currency to NewCurrency"
Attribute EntStkLocSaveReOrderCur.VB_HelpID = 20117
Attribute EntStkLocSaveReOrderCur.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveReOrderCur = SaveStkMiscInt(Company$, StockCode$, LocCode$, 8, " ", NewCurrency)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveMinStock
' Description: Saves the minimum stock level for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveMinStock(Company$, StockCode$, LocCode$, StockLevel As Double) As String
Attribute EntStkLocSaveMinStock.VB_Description = "Sets the stock|fffd|s Minimum Stock level to StockLevel"
Attribute EntStkLocSaveMinStock.VB_HelpID = 20116
Attribute EntStkLocSaveMinStock.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveMinStock = SaveStkMiscVal(Company$, StockCode$, LocCode$, 1, " ", StockLevel)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveMaxStock
' Description: Saves the maximum stock level for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveMaxStock(Company$, StockCode$, LocCode$, StockLevel As Double) As String
Attribute EntStkLocSaveMaxStock.VB_Description = "Sets the stock location|fffd|s Maximum Stock level to StockLevel"
Attribute EntStkLocSaveMaxStock.VB_HelpID = 20115
Attribute EntStkLocSaveMaxStock.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveMaxStock = SaveStkMiscVal(Company$, StockCode$, LocCode$, 2, " ", StockLevel)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveSalesPrice
' Description: Saves the Sales Price Band Price for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveSalesPrice(Company$, StockCode$, LocCode$, PriceBand$, NewPrice As Double) As String
Attribute EntStkLocSaveSalesPrice.VB_Description = "Sets the stock location|fffd|s Sales Price for Price Band PriceBand to NewPrice. NewPrice should be specified in the Currency for that price band"
Attribute EntStkLocSaveSalesPrice.VB_HelpID = 20121
Attribute EntStkLocSaveSalesPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveSalesPrice = SaveStkMiscVal(Company$, StockCode$, LocCode$, 3, PriceBand$, NewPrice)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveCostPrice
' Description: Saves the Cost Price for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveCostPrice(Company$, StockCode$, LocCode$, NewPrice As Double) As String
Attribute EntStkLocSaveCostPrice.VB_Description = "Sets the stock location|fffd|s Cost Price to NewPrice which should be specified in the stock location|fffd|s Cost Currency"
Attribute EntStkLocSaveCostPrice.VB_HelpID = 20113
Attribute EntStkLocSaveCostPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveCostPrice = SaveStkMiscVal(Company$, StockCode$, LocCode$, 4, " ", NewPrice)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveReOrderPrice
' Description: Saves the Re-Order Price for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveReOrderPrice(Company$, StockCode$, LocCode$, NewPrice As Double) As String
Attribute EntStkLocSaveReOrderPrice.VB_Description = "Sets the stock location|fffd|s Re-Order Price to NewPrice. NewPrice should be specified in the Re-Order Currency"
Attribute EntStkLocSaveReOrderPrice.VB_HelpID = 20118
Attribute EntStkLocSaveReOrderPrice.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveReOrderPrice = SaveStkMiscVal(Company$, StockCode$, LocCode$, 5, " ", NewPrice)
End Function


'*******************************************************************************
' Name:        EntStkSaveTakeQty
' Description: Saves the minimum stock level for the specified stock item
'*******************************************************************************
Public Function EntStkSaveTakeQty(Company$, StockCode$, StockLevel As Double) As String
Attribute EntStkSaveTakeQty.VB_Description = "Sets the Stock Take Quantity to StockLevel for the specified Company and StockCode"
Attribute EntStkSaveTakeQty.VB_HelpID = 20166
Attribute EntStkSaveTakeQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveTakeQty = SaveStkMiscVal(Company$, StockCode$, "", 9, " ", StockLevel)
End Function
     

'*******************************************************************************
' Name:        EntStkLocSaveTakeQty
' Description: Saves the minimum stock level for the specified stock/location
'*******************************************************************************
Public Function EntStkLocSaveTakeQty(Company$, StockCode$, LocCode$, StockLevel As Double) As String
Attribute EntStkLocSaveTakeQty.VB_Description = "Sets the Stock Take Quantity  to the StockLevel for the specified Company, StockCode and Location"
Attribute EntStkLocSaveTakeQty.VB_HelpID = 20164
Attribute EntStkLocSaveTakeQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveTakeQty = SaveStkMiscVal(Company$, StockCode$, LocCode$, 9, " ", StockLevel)
End Function


'*******************************************************************************
' Name:        EntStkSaveSupplier
' Description: Saves the Supplier Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSupplier(Company$, StockCode$, NewSupplier$) As String
Attribute EntStkSaveSupplier.VB_Description = "Sets the stock supplier code to NewSupplier"
Attribute EntStkSaveSupplier.VB_HelpID = 20174
Attribute EntStkSaveSupplier.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSupplier = SaveStkMiscStr(Company$, StockCode$, 13, NewSupplier$)
End Function


'*******************************************************************************
' Name:        EntStkSaveBarCode
' Description: Saves the Barcode for the specified stock item
'*******************************************************************************
Public Function EntStkSaveBarCode(Company$, StockCode$, NewBarCode$) As String
Attribute EntStkSaveBarCode.VB_Description = "Sets the Bar Code for the specified Stock Item to NewBarCode"
Attribute EntStkSaveBarCode.VB_HelpID = 20443
Attribute EntStkSaveBarCode.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveBarCode = SaveStkMiscStr(Company$, StockCode$, 14, NewBarCode$)
End Function


'*******************************************************************************
' Name:        EntStkSaveCommodity
' Description: Saves the Commodity Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveCommodity(Company$, StockCode$, NewCommodity$) As String
Attribute EntStkSaveCommodity.VB_Description = "Sets the stock|fffd|s Commodity Code to NewCommodity"
Attribute EntStkSaveCommodity.VB_HelpID = 20364
Attribute EntStkSaveCommodity.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveCommodity = SaveStkMiscStr(Company$, StockCode$, 15, NewCommodity$)
End Function


'*******************************************************************************
' Name:        EntStkSaveSSDDesc
' Description: Saves the SSD Unit Description for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSSDDesc(Company$, StockCode$, NewDesc$) As String
Attribute EntStkSaveSSDDesc.VB_Description = "Sets the Unit Description for the specified Stock Item to NewDesc"
Attribute EntStkSaveSSDDesc.VB_HelpID = 20375
Attribute EntStkSaveSSDDesc.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSSDDesc = SaveStkMiscStr(Company$, StockCode$, 16, NewDesc$)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveUnitsPerSSD
' Description: Saves the Stock Units Per SSD Unit ratio for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUnitsPerSSD(Company$, StockCode$, Units As Double) As String
Attribute EntStkSaveUnitsPerSSD.VB_Description = "Sets the stock|fffd|s Units per SSD Ratio to NewUnits"
Attribute EntStkSaveUnitsPerSSD.VB_HelpID = 20377
Attribute EntStkSaveUnitsPerSSD.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUnitsPerSSD = SaveStkMiscVal(Company$, StockCode$, "", 13, " ", Units)
End Function
 

'*******************************************************************************
' Name:        EntStkSavePurchWeight
' Description: Saves the Purchase Weight for the specified stock item
'*******************************************************************************
Public Function EntStkSavePurchWeight(Company$, StockCode$, Weight As Double) As String
Attribute EntStkSavePurchWeight.VB_Description = "Sets the Purchase Weight for the specified Stock Item to NewWeight"
Attribute EntStkSavePurchWeight.VB_HelpID = 20371
Attribute EntStkSavePurchWeight.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSavePurchWeight = SaveStkMiscVal(Company$, StockCode$, "", 15, " ", Weight)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveSalesWeight
' Description: Saves the Purchase Weight for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesWeight(Company$, StockCode$, Weight As Double) As String
Attribute EntStkSaveSalesWeight.VB_Description = "Sets the Sales Weight for the specified Stock Item to NewWeight"
Attribute EntStkSaveSalesWeight.VB_HelpID = 20373
Attribute EntStkSaveSalesWeight.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesWeight = SaveStkMiscVal(Company$, StockCode$, "", 14, " ", Weight)
End Function


'*******************************************************************************
' Name:        EntStkSaveUserField3
' Description: Saves the User 3 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField3(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField3.VB_Description = "Sets the stock|fffd|s User definable field 3 to NewField"
Attribute EntStkSaveUserField3.VB_HelpID = 20378
Attribute EntStkSaveUserField3.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField3 = SaveStkMiscStr(Company$, StockCode$, 17, NewField$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUserField4
' Description: Saves the User 4 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField4(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField4.VB_Description = "Sets the stock|fffd|s User definable field 4 to NewField"
Attribute EntStkSaveUserField4.VB_HelpID = 20379
Attribute EntStkSaveUserField4.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField4 = SaveStkMiscStr(Company$, StockCode$, 18, NewField$)
End Function


'*******************************************************************************
' Name:        EntStkSaveAnalysis
' Description: Saves the Job Analysis Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveAnalysis(Company$, StockCode$, NewAnalysis$) As String
Attribute EntStkSaveAnalysis.VB_Description = "Sets the Default Job Analysis for the specified Stock Item to NewAnalysis"
Attribute EntStkSaveAnalysis.VB_HelpID = 20362
Attribute EntStkSaveAnalysis.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveAnalysis = SaveStkMiscStr(Company$, StockCode$, 19, NewAnalysis$)
End Function


'*******************************************************************************
' Name:        EntStkSaveVATCode
' Description: Saves the VAT Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveVATCode(Company$, StockCode$, NewCode$) As String
Attribute EntStkSaveVATCode.VB_Description = "Sets the stock|fffd|s VATCode to NewVATCode"
Attribute EntStkSaveVATCode.VB_HelpID = 20380
Attribute EntStkSaveVATCode.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveVATCode = SaveStkMiscStr(Company$, StockCode$, 20, NewCode$)
End Function


'*******************************************************************************
' Name:        EntStkSaveLocation
' Description: Saves the Default Location Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveLocation(Company$, StockCode$, NewLocation$) As String
Attribute EntStkSaveLocation.VB_Description = "Sets a stock Location to NewLocation"
Attribute EntStkSaveLocation.VB_HelpID = 20369
Attribute EntStkSaveLocation.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveLocation = SaveStkMiscStr(Company$, StockCode$, 21, NewLocation$)
End Function


'*******************************************************************************
' Name:        EntStkSaveBinLocation
' Description: Saves the Bin Location for the specified stock item
'*******************************************************************************
Public Function EntStkSaveBinLocation(Company$, StockCode$, NewBin$) As String
Attribute EntStkSaveBinLocation.VB_Description = "Sets the Bin Location for the specified Stock Item to NewBinLocation"
Attribute EntStkSaveBinLocation.VB_HelpID = 20363
Attribute EntStkSaveBinLocation.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveBinLocation = SaveStkMiscStr(Company$, StockCode$, 22, NewBin$)
End Function


'*******************************************************************************
' Name:        EntStkSaveDepartment
' Description: Saves the Department for the specified stock item
'*******************************************************************************
Public Function EntStkSaveDepartment(Company$, StockCode$, NewDept$) As String
Attribute EntStkSaveDepartment.VB_Description = "Sets a stock Department to NewDepartment"
Attribute EntStkSaveDepartment.VB_HelpID = 20366
Attribute EntStkSaveDepartment.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveDepartment = SaveStkMiscStr(Company$, StockCode$, 23, NewDept$)
End Function


'*******************************************************************************
' Name:        EntStkSaveCostCentre
' Description: Saves the Cost Centre for the specified stock item
'*******************************************************************************
Public Function EntStkSaveCostCentre(Company$, StockCode$, NewCC$) As String
Attribute EntStkSaveCostCentre.VB_Description = "Sets the stock|fffd|s Cost Centre to NewCostCentre"
Attribute EntStkSaveCostCentre.VB_HelpID = 20365
Attribute EntStkSaveCostCentre.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveCostCentre = SaveStkMiscStr(Company$, StockCode$, 24, NewCC$)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveSupplier
' Description: Saves the Supplier Code for the specified stock/location item
'*******************************************************************************
Public Function EntStkLocSaveSupplier(Company$, StockCode$, LocCode$, NewSupplier$) As String
Attribute EntStkLocSaveSupplier.VB_Description = "Sets the stock location|fffd|s Supplier to NewSupplier"
Attribute EntStkLocSaveSupplier.VB_HelpID = 20356
Attribute EntStkLocSaveSupplier.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveSupplier = SaveStkLocMiscStr(Company$, StockCode$, LocCode$, 13, NewSupplier$)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveBinLocation
' Description: Saves the Bin Location for the specified stock/location item
'*******************************************************************************
Public Function EntStkLocSaveBinLocation(Company$, StockCode$, LocCode$, NewLocation$) As String
Attribute EntStkLocSaveBinLocation.VB_Description = "Sets the stock location|fffd|s Bin Location to NewBinLocation"
Attribute EntStkLocSaveBinLocation.VB_HelpID = 20353
Attribute EntStkLocSaveBinLocation.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveBinLocation = SaveStkLocMiscStr(Company$, StockCode$, LocCode$, 22, NewLocation$)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveDepartment
' Description: Saves the Department for the specified stock/location item
'*******************************************************************************
Public Function EntStkLocSaveDepartment(Company$, StockCode$, LocCode$, NewDept$) As String
Attribute EntStkLocSaveDepartment.VB_Description = "Sets the stock location|fffd|s Department to NewDepartment"
Attribute EntStkLocSaveDepartment.VB_HelpID = 20355
Attribute EntStkLocSaveDepartment.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveDepartment = SaveStkLocMiscStr(Company$, StockCode$, LocCode$, 23, NewDept$)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveCostCentre
' Description: Saves the Cost Centre for the specified stock/location item
'*******************************************************************************
Public Function EntStkLocSaveCostCentre(Company$, StockCode$, LocCode$, NewCC$) As String
Attribute EntStkLocSaveCostCentre.VB_Description = "Sets the stock location|fffd|s CostCentre to NewCostCentre"
Attribute EntStkLocSaveCostCentre.VB_HelpID = 20354
Attribute EntStkLocSaveCostCentre.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveCostCentre = SaveStkLocMiscStr(Company$, StockCode$, LocCode$, 24, NewCC$)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveLineType
' Description: Saves the Default Line Type for the specified stock item
'*******************************************************************************
Public Function EntStkSaveLineType(Company$, StockCode$, NewLineType As Long) As String
Attribute EntStkSaveLineType.VB_Description = "Sets a stock LineType to NewLineType, Values 1 to 4"
Attribute EntStkSaveLineType.VB_HelpID = 20368
Attribute EntStkSaveLineType.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveLineType = SaveStkMiscInt(Company$, StockCode$, "", 9, " ", NewLineType)
End Function


'*******************************************************************************
' Name:        EntStkSaveSalesUnits
' Description: Saves the Sales Units/Stock for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesUnits(Company$, StockCode$, Units As Double) As String
Attribute EntStkSaveSalesUnits.VB_Description = "Sets the Sales Units for the specified Stock Item to NewUnits"
Attribute EntStkSaveSalesUnits.VB_HelpID = 20372
Attribute EntStkSaveSalesUnits.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesUnits = SaveStkMiscVal(Company$, StockCode$, "", 16, " ", Units)
End Function
 

'*******************************************************************************
' Name:        EntStkSavePurchaseUnits
' Description: Saves the Purchase Units/Stock for the specified stock item
'*******************************************************************************
Public Function EntStkSavePurchaseUnits(Company$, StockCode$, Units As Double) As String
Attribute EntStkSavePurchaseUnits.VB_Description = "Sets the Purchase Units for the specified Stock Item to NewUnits"
Attribute EntStkSavePurchaseUnits.VB_HelpID = 20370
Attribute EntStkSavePurchaseUnits.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSavePurchaseUnits = SaveStkMiscVal(Company$, StockCode$, "", 17, " ", Units)
End Function


'*******************************************************************************
' Name:        EntStkSaveIncludeOnWeb
' Description: Saves the Include On Web flag for the specified stock item
'*******************************************************************************
Public Function EntStkSaveIncludeOnWeb(Company$, StockCode$, NewYN$) As String
Attribute EntStkSaveIncludeOnWeb.VB_Description = "Sets a stock Include On Web to NewIncludeOnWeb"
Attribute EntStkSaveIncludeOnWeb.VB_HelpID = 20367
Attribute EntStkSaveIncludeOnWeb.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveIncludeOnWeb = SaveStkMiscStr(Company$, StockCode$, 25, NewYN$)
End Function


'*******************************************************************************
' Name:        EntStkSaveWebCatalogs
' Description: Saves the Web Catalogue details for the specified stock item
'*******************************************************************************
Public Function EntStkSaveWebCatalogs(Company$, StockCode$, NewCatalogs$) As String
Attribute EntStkSaveWebCatalogs.VB_Description = "Sets the stock|fffd|s WebCatalogs to NewWebCatalogs"
Attribute EntStkSaveWebCatalogs.VB_HelpID = 20381
Attribute EntStkSaveWebCatalogs.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveWebCatalogs = SaveStkMiscStr(Company$, StockCode$, 26, NewCatalogs$)
End Function


'*******************************************************************************
' Name:        EntStkSaveSSDCountry
' Description: Saves the Web Catalogue details for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSSDCountry(Company$, StockCode$, NewCountry$) As String
Attribute EntStkSaveSSDCountry.VB_Description = "Sets the Country for the specified Stock Item to NewCountry"
Attribute EntStkSaveSSDCountry.VB_HelpID = 20374
Attribute EntStkSaveSSDCountry.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSSDCountry = SaveStkMiscStr(Company$, StockCode$, 27, NewCountry$)
End Function


'*******************************************************************************
' Name:        EntStkSaveWebImage
' Description: Saves the Web Image Path for the specified stock item
'*******************************************************************************
Public Function EntStkSaveWebImage(Company$, StockCode$, NewPath$) As String
Attribute EntStkSaveWebImage.VB_Description = "Sets the stock|fffd|s WebImage to NewWebImage"
Attribute EntStkSaveWebImage.VB_HelpID = 20382
Attribute EntStkSaveWebImage.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveWebImage = SaveStkMiscStr(Company$, StockCode$, 28, NewPath$)
End Function


'*******************************************************************************
' Name:        EntStkSaveUpliftDispatch
' Description: Saves the Intrastat Uplift Dispatch% for the specified stock item
'*******************************************************************************
'Public Function EntStkSaveUpliftDispatch(Company$, StockCode$, NewPerc As Double) As String
'    EntStkSaveUpliftDispatch = SaveStkMiscVal(Company$, StockCode$, "", 18, " ", NewPerc#)
'End Function


'*******************************************************************************
' Name:        EntStkSaveUpliftArrivals
' Description: Saves the Intrastat Uplift Arrivals% for the specified stock item
'*******************************************************************************
'Public Function EntStkSaveUpliftArrivals(Company$, StockCode$, NewPerc As Double) As String
'    EntStkSaveUpliftArrivals = SaveStkMiscVal(Company$, StockCode$, "", 19, " ", NewPerc#)
'End Function


'*******************************************************************************
' Name:        EntStkSaveAutoCalcProdTime
' Description: Saves the Automatically Calculate Product Time for the specified stock item
'*******************************************************************************
Public Function EntStkSaveAutoCalcProdTime(Company$, StockCode$, AutoCalcTime$) As String
Attribute EntStkSaveAutoCalcProdTime.VB_Description = "Sets the Flag to Calc to the selection (Y/N) for the specified Stock Item to AutoCalcTime"
Attribute EntStkSaveAutoCalcProdTime.VB_HelpID = 20483
Attribute EntStkSaveAutoCalcProdTime.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveAutoCalcProdTime = SaveStkMiscStr(Company$, StockCode$, 29, AutoCalcTime$)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveWOPWIPGL
' Description: Saves the WOP WIP GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveWOPWIPGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveWOPWIPGL.VB_Description = "Sets the stock|fffd|s WOP Work in Progress General Ledger code to NewGLCode"
Attribute EntStkSaveWOPWIPGL.VB_HelpID = 20489
Attribute EntStkSaveWOPWIPGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveWOPWIPGL = SaveStkMiscInt(Company$, StockCode$, "", 10, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveWOPWIPGL
' Description: Saves the WOP WIP GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveWOPWIPGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveWOPWIPGL.VB_Description = "Sets the stock location|fffd|s WOP Work in Progress General Ledger code to NewGLCode"
Attribute EntStkLocSaveWOPWIPGL.VB_HelpID = 20477
Attribute EntStkLocSaveWOPWIPGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveWOPWIPGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 10, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveProdAssDays
' Description: Saves the number of Days from the Assembly Time for the specified stock item
'*******************************************************************************
Public Function EntStkSaveProdAssDays(Company$, StockCode$, NewDays As Long) As String
Attribute EntStkSaveProdAssDays.VB_Description = "Sets the stock|fffd|s Production Assembly Days to NewDays"
Attribute EntStkSaveProdAssDays.VB_HelpID = 20486
Attribute EntStkSaveProdAssDays.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveProdAssDays = SaveStkMiscInt(Company$, StockCode$, "", 11, " ", NewDays)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveProdAssHours
' Description: Saves the number of Hours from the Assembly Time for the specified stock item
'*******************************************************************************
Public Function EntStkSaveProdAssHours(Company$, StockCode$, NewHours As Long) As String
Attribute EntStkSaveProdAssHours.VB_Description = "Sets the stock|fffd|s Production Assembly Hours to NewHours"
Attribute EntStkSaveProdAssHours.VB_HelpID = 20487
Attribute EntStkSaveProdAssHours.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveProdAssHours = SaveStkMiscInt(Company$, StockCode$, "", 12, " ", NewHours)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveProdAssMins
' Description: Saves the number of Minutes from the Assembly Time for the specified stock item
'*******************************************************************************
Public Function EntStkSaveProdAssMins(Company$, StockCode$, NewMins As Long) As String
Attribute EntStkSaveProdAssMins.VB_Description = "Sets the stock|fffd|s Production Assembly Minutes to NewMins"
Attribute EntStkSaveProdAssMins.VB_HelpID = 20488
Attribute EntStkSaveProdAssMins.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveProdAssMins = SaveStkMiscInt(Company$, StockCode$, "", 13, " ", NewMins)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveLeadTime
' Description: Saves the Lead Time (in Days) for the specified stock item
'*******************************************************************************
Public Function EntStkSaveLeadTime(Company$, StockCode$, NewLeadTime As Long) As String
Attribute EntStkSaveLeadTime.VB_Description = "Sets the stock Lead Time to NewLeadTime"
Attribute EntStkSaveLeadTime.VB_HelpID = 20484
Attribute EntStkSaveLeadTime.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveLeadTime = SaveStkMiscInt(Company$, StockCode$, "", 14, " ", NewLeadTime)
End Function


'*******************************************************************************
' Name:        EntStkSaveMinEconomicQty
' Description: Saves the Minimum Economic Build Quantity for the specified stock item
'*******************************************************************************
Public Function EntStkSaveMinEconomicQty(Company$, StockCode$, NewQty#) As String
Attribute EntStkSaveMinEconomicQty.VB_Description = "Sets the BOM stock|fffd|s Min Economic Qty to NewQty"
Attribute EntStkSaveMinEconomicQty.VB_HelpID = 20485
Attribute EntStkSaveMinEconomicQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveMinEconomicQty = SaveStkMiscVal(Company$, StockCode$, "", 20, " ", NewQty#)
End Function

 

'*******************************************************************************
' Name:        EntStkSaveReOrderQty
' Description: Saves the Re-Order Quantity for the specified stock item
'*******************************************************************************
Public Function EntStkSaveReOrderQty(Company$, StockCode$, ReOrderQty As Double) As String
Attribute EntStkSaveReOrderQty.VB_Description = "Sets the stock|fffd|s Re-Order Quantity to NewQuantity"
Attribute EntStkSaveReOrderQty.VB_HelpID = 20582
Attribute EntStkSaveReOrderQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveReOrderQty = SaveStkMiscVal(Company$, StockCode$, "", 21, " ", ReOrderQty)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveReOrderQty
' Description: Saves the Re-Order Quantity for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveReOrderQty(Company$, StockCode$, LocCode$, ReOrderQty As Double) As String
Attribute EntStkLocSaveReOrderQty.VB_Description = "Sets the stock location|fffd|s Re-Order Quantity to NewQuantity"
Attribute EntStkLocSaveReOrderQty.VB_HelpID = 20581
Attribute EntStkLocSaveReOrderQty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveReOrderQty = SaveStkMiscVal(Company$, StockCode$, LocCode$, 21, " ", ReOrderQty#)
End Function


'*******************************************************************************
' Name:        EntStkSaveSalesWarranty
' Description: Saves the Sales Warranty for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesWarranty(Company$, StockCode$, NewWarranty$) As String
Attribute EntStkSaveSalesWarranty.VB_Description = "Sets the Sales Warranty for the specified Stock Item to NewWarranty"
Attribute EntStkSaveSalesWarranty.VB_HelpID = 20646
Attribute EntStkSaveSalesWarranty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesWarranty = SaveStkMiscStr(Company$, StockCode$, 30, NewWarranty$)
End Function


'*******************************************************************************
' Name:        EntStkSaveManufacturerWarranty
' Description: Saves the Manufacturer Warranty for the specified stock item
'*******************************************************************************
Public Function EntStkSaveManufacturerWarranty(Company$, StockCode$, NewWarranty$) As String
Attribute EntStkSaveManufacturerWarranty.VB_Description = "Sets the Manufacturer Warranty for the specified Stock Item to NewWarranty"
Attribute EntStkSaveManufacturerWarranty.VB_HelpID = 20642
Attribute EntStkSaveManufacturerWarranty.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveManufacturerWarranty = SaveStkMiscStr(Company$, StockCode$, 31, NewWarranty$)
End Function


'*******************************************************************************
' Name:        EntStkSaveRestockCharge
' Description: Saves the Restock Charge%/Value for the specified stock item
'*******************************************************************************
Public Function EntStkSaveRestockCharge(Company$, StockCode$, NewPercValue$) As String
Attribute EntStkSaveRestockCharge.VB_Description = "Sets the Restock Charge for the specified Stock Item, either as a % or as a value (e.g. 10.50) for the specified Stock Item to NewPerc"
Attribute EntStkSaveRestockCharge.VB_HelpID = 20644
Attribute EntStkSaveRestockCharge.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveRestockCharge = SaveStkMiscStr(Company$, StockCode$, 32, NewPercValue$)
End Function


'*******************************************************************************
' Name:        EntStkSaveSalesReturnGL
' Description: Saves the Sales Return GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSaveSalesReturnGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSaveSalesReturnGL.VB_Description = "Sets the Sales Return General Ledger Code for the specified Stock Item to NewGLCode"
Attribute EntStkSaveSalesReturnGL.VB_HelpID = 20645
Attribute EntStkSaveSalesReturnGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveSalesReturnGL = SaveStkMiscInt(Company$, StockCode$, "", 15, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkSavePurchaseReturnGL
' Description: Saves the Purchase Return GL Code for the specified stock item
'*******************************************************************************
Public Function EntStkSavePurchaseReturnGL(Company$, StockCode$, NewGLCode As Long) As String
Attribute EntStkSavePurchaseReturnGL.VB_Description = "Sets the Purchase Return General Ledger Code for the specified Stock Item to NewGLCode"
Attribute EntStkSavePurchaseReturnGL.VB_HelpID = 20643
Attribute EntStkSavePurchaseReturnGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSavePurchaseReturnGL = SaveStkMiscInt(Company$, StockCode$, "", 16, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSaveSalesReturnGL
' Description: Saves the Sales Return GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveSalesReturnGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSaveSalesReturnGL.VB_Description = "Sets the Sales Return General Ledger Code for the specified stock and location to NewGLCode"
Attribute EntStkLocSaveSalesReturnGL.VB_HelpID = 20641
Attribute EntStkLocSaveSalesReturnGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveSalesReturnGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 15, " ", NewGLCode)
End Function
 

'*******************************************************************************
' Name:        EntStkLocSavePurchaseReturnGL
' Description: Saves the Purchase Return GL Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSavePurchaseReturnGL(Company$, StockCode$, LocCode$, NewGLCode As Long) As String
Attribute EntStkLocSavePurchaseReturnGL.VB_Description = "Sets the Purchase Return General Ledger Code for the specified StockCode and Location to NewGLCode"
Attribute EntStkLocSavePurchaseReturnGL.VB_HelpID = 20640
Attribute EntStkLocSavePurchaseReturnGL.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSavePurchaseReturnGL = SaveStkMiscInt(Company$, StockCode$, LocCode$, 16, " ", NewGLCode)
End Function


'*******************************************************************************
' Name:        EntStkSaveReOrderSupplier
' Description: Saves the ReOrder Supplier Code for the specified stock ite
'*******************************************************************************
Public Function EntStkSaveReOrderSupplier(Company$, StockCode$, NewSupplier$) As String
Attribute EntStkSaveReOrderSupplier.VB_Description = "Sets the stock|fffd|s Re-Order Supplier to NewSupplier"
Attribute EntStkSaveReOrderSupplier.VB_HelpID = 20677
Attribute EntStkSaveReOrderSupplier.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveReOrderSupplier = SaveStkMiscStr(Company$, StockCode$, 33, NewSupplier$)
End Function


'*******************************************************************************
' Name:        EntStkSaveReOrderCostCentre
' Description: Saves the ReOrder Cost Centre Code for the specified stock ite
'*******************************************************************************
Public Function EntStkSaveReOrderCostCentre(Company$, StockCode$, NewCC$) As String
Attribute EntStkSaveReOrderCostCentre.VB_Description = "Sets the stock|fffd|s Re-Order CostCentre to NewCostCentre"
Attribute EntStkSaveReOrderCostCentre.VB_HelpID = 20678
Attribute EntStkSaveReOrderCostCentre.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveReOrderCostCentre = SaveStkMiscStr(Company$, StockCode$, 35, NewCC$)
End Function


'*******************************************************************************
' Name:        EntStkSaveReOrderDepartment
' Description: Saves the ReOrder Department Code for the specified stock ite
'*******************************************************************************
Public Function EntStkSaveReOrderDepartment(Company$, StockCode$, NewDept$) As String
Attribute EntStkSaveReOrderDepartment.VB_Description = "Sets the stock|fffd|s Re-Order Department to NewDepartment"
Attribute EntStkSaveReOrderDepartment.VB_HelpID = 20679
Attribute EntStkSaveReOrderDepartment.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveReOrderDepartment = SaveStkMiscStr(Company$, StockCode$, 34, NewDept$)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveReOrderCostCentre
' Description: Saves the ReOrder Cost Centre Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveReOrderCostCentre(Company$, StockCode$, LocCode$, NewCC$) As String
Attribute EntStkLocSaveReOrderCostCentre.VB_Description = "Sets the stock location|fffd|s Re-Order Cost Centre to NewCostCentre"
Attribute EntStkLocSaveReOrderCostCentre.VB_HelpID = 20680
Attribute EntStkLocSaveReOrderCostCentre.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveReOrderCostCentre = SaveStkLocMiscStr(Company$, StockCode$, LocCode$, 35, NewCC$)
End Function


'*******************************************************************************
' Name:        EntStkLocSaveReOrderDepartment
' Description: Saves the ReOrder Department Code for the specified stock and location
'*******************************************************************************
Public Function EntStkLocSaveReOrderDepartment(Company$, StockCode$, LocCode$, NewDept$) As String
Attribute EntStkLocSaveReOrderDepartment.VB_Description = "Sets the stock location|fffd|s Re-Order Department to NewDepartment"
Attribute EntStkLocSaveReOrderDepartment.VB_HelpID = 20681
Attribute EntStkLocSaveReOrderDepartment.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveReOrderDepartment = SaveStkLocMiscStr(Company$, StockCode$, LocCode$, 34, NewDept$)
End Function

'*******************************************************************************
' Name:        EntStkSaveUserField5
' Description: Saves the User Field 5 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField5(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField5.VB_Description = "Sets the stock|fffd|s User definable field 5 to NewField"
Attribute EntStkSaveUserField5.VB_HelpID = 20378
Attribute EntStkSaveUserField5.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField5 = SaveStkMiscStr(Company$, StockCode$, 39, NewField$)
End Function
'*******************************************************************************
' Name:        EntStkSaveUserField6
' Description: Saves the User Field 6 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField6(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField6.VB_Description = "Sets the stock|fffd|s User definable field 6 to NewField"
Attribute EntStkSaveUserField6.VB_HelpID = 20379
Attribute EntStkSaveUserField6.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField6 = SaveStkMiscStr(Company$, StockCode$, 40, NewField$)
End Function
'*******************************************************************************
' Name:        EntStkSaveUserField7
' Description: Saves the User Field 7 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField7(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField7.VB_Description = "Sets the stock|fffd|s User definable field 7 to NewField"
Attribute EntStkSaveUserField7.VB_HelpID = 20378
Attribute EntStkSaveUserField7.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField7 = SaveStkMiscStr(Company$, StockCode$, 41, NewField$)
End Function
'*******************************************************************************
' Name:        EntStkSaveUserField8
' Description: Saves the User Field 8 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField8(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField8.VB_Description = "Sets the stock|fffd|s User definable field 8 to NewField"
Attribute EntStkSaveUserField8.VB_HelpID = 20379
Attribute EntStkSaveUserField8.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField8 = SaveStkMiscStr(Company$, StockCode$, 42, NewField$)
End Function
'*******************************************************************************
' Name:        EntStkSaveUserField9
' Description: Saves the User Field 9 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField9(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField9.VB_Description = "Sets the stock|fffd|s User definable field 9 to NewField"
Attribute EntStkSaveUserField9.VB_HelpID = 20378
Attribute EntStkSaveUserField9.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField9 = SaveStkMiscStr(Company$, StockCode$, 43, NewField$)
End Function
'*******************************************************************************
' Name:        EntStkSaveUserField10
' Description: Saves the User Field 10 for the specified stock item
'*******************************************************************************
Public Function EntStkSaveUserField10(Company$, StockCode$, NewField$) As String
Attribute EntStkSaveUserField10.VB_Description = "Sets the stock|fffd|s User definable field 10 to NewField"
Attribute EntStkSaveUserField10.VB_HelpID = 20379
Attribute EntStkSaveUserField10.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveUserField10 = SaveStkMiscStr(Company$, StockCode$, 44, NewField$)
End Function

'*******************************************************************************
' Name:        EntStkSaveECService
' Description: Saves the EC Service Y/N field for the specified stock item
'*******************************************************************************
Public Function EntStkSaveECService(Company$, StockCode$, NewField$) As String
    EntStkSaveECService = SaveStkMiscStr(Company$, StockCode$, 45, NewField$)
End Function
 

'*******************************************************************************
' Name:        EntStkSaveUpliftArrivals
' Description: Saves the Intrastat State Uplift Arrivals% for the specified stock
' History:     MH 04/04/12 v6.10.207 ABSEXCH-12548: Added for EIRE RCT
'*******************************************************************************
Public Function EntStkSaveUpliftArrivals(Company$, StockCode$, ArrivalsPercentage As Double) As String
    EntStkSaveUpliftArrivals = SaveStkMiscVal(Company$, StockCode$, "", 30, " ", ArrivalsPercentage#)
End Function
 
 
'*******************************************************************************
' Name:        EntStkSaveUpliftDispatch
' Description: Saves the Intrastat State Uplift Dispatch% for the specified stock
' History:     MH 04/04/12 v6.10.207 ABSEXCH-12547: Added for EIRE RCT
'*******************************************************************************
Public Function EntStkSaveUpliftDispatch(Company$, StockCode$, DispatchPercentage As Double) As String
    EntStkSaveUpliftDispatch = SaveStkMiscVal(Company$, StockCode$, "", 29, " ", DispatchPercentage#)
End Function

Attribute VB_Name = "SaveStockHist"

Option Explicit

' Saves the Stock Budget
Private Function StockSaveBudget(UpdMode%, Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, LocCode$, NewBudget#) As String
On Error GoTo StockSaveBudget_Error
    Dim CompStr$, Ty%, Tp%, TC%, Stock$, Mode%, Location$
    Dim StrVal$, IntVal%, NewBudg#
    
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidStockCode(StockId) Then
        If LocalCheckServer() Then
            CompStr$ = UCase(Company$)
            Ty% = TheYear%
            Tp% = ThePeriod%
            TC% = TheCcy%
            Stock$ = UCase(StockId$)
            Location$ = UCase(LocCode$)
            Mode = UpdMode%
            NewBudg# = NewBudget
            
            IntVal = EntServer.SaveStockValue(Mode%, CompStr$, Ty%, Tp%, TC%, Stock$, Location$, NewBudg)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
     
    GoTo StockSaveBudget_Exit
          
StockSaveBudget_Error:
    StrVal = GetErrorStr$

StockSaveBudget_Exit:
    StockSaveBudget = StrVal
End Function


'*******************************************************************************
' Name:        EntStkSaveBudget
' Description: Saves the Budget back for the specified stock, year, period, etc
'*******************************************************************************
Public Function EntStkSaveBudget(Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, NewBudget#) As String
Attribute EntStkSaveBudget.VB_Description = "Sets the stock|fffd|s budget value to NewBudget for the specified Year, Period and Currency"
Attribute EntStkSaveBudget.VB_HelpID = 20041
Attribute EntStkSaveBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveBudget = StockSaveBudget(1, Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, "", NewBudget#)
End Function


'*******************************************************************************
' Name:        EntStkSaveBudget2
' Description: Saves the Budget2 back for the specified stock, year, period, etc
'*******************************************************************************
Public Function EntStkSaveBudget2(Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, NewBudget#) As String
Attribute EntStkSaveBudget2.VB_Description = "Sets the stock|fffd|s budget2 value to NewBudget for the specified Year, Period and Currency"
Attribute EntStkSaveBudget2.VB_HelpID = 20708
Attribute EntStkSaveBudget2.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkSaveBudget2 = StockSaveBudget(2, Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, "", NewBudget#)
End Function


'******************************************************************************************
' Name:        EntStkLocSaveBudget
' Description: Saves the Budget back for the specified stock, Location, year, period, etc
'******************************************************************************************
Public Function EntStkLocSaveBudget(Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, LocCode$, NewBudget#) As String
Attribute EntStkLocSaveBudget.VB_Description = "Sets the stock location|fffd|s budget value to NewBudget for the specified Year, Period, Currency and Location"
Attribute EntStkLocSaveBudget.VB_HelpID = 20110
Attribute EntStkLocSaveBudget.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveBudget = StockSaveBudget(1, Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, LocCode$, NewBudget#)
End Function


'******************************************************************************************
' Name:        EntStkLocSaveBudget2
' Description: Saves the Budget2 back for the specified stock, Location, year, period, etc
'******************************************************************************************
Public Function EntStkLocSaveBudget2(Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, LocCode$, NewBudget#) As String
Attribute EntStkLocSaveBudget2.VB_Description = "Sets the stock location|fffd|s budget2 value to NewBudget for the specified Year, Period, Currency and Location"
Attribute EntStkLocSaveBudget2.VB_HelpID = 20707
Attribute EntStkLocSaveBudget2.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkLocSaveBudget2 = StockSaveBudget(2, Company$, TheYear%, ThePeriod%, TheCcy%, StockId$, LocCode$, NewBudget#)
End Function

Attribute VB_Name = "SaveTelesales"

Option Explicit

'*******************************************************************************
' Name:        EntCustStkSaveBudget
' Description: Saves the Budget into the Telesales module for the Customer
'              and stock item
'*******************************************************************************
Public Function EntCustStkSaveBudget(Company$, CustCode$, StockCode$, TheCcy%, TheYear%, ThePeriod%, CostCentre$, Dept$, LocCode$, NewBudget#) As Variant
On Error GoTo EntCustStkSaveBudget_Error
    Dim StrVal$, IntVal%, ParmCnt%, AcType$
    
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidCustCode(CustCode$, "C") And ValidStockCode(StockCode$) And ValidCcy(TheCcy) And ValidYear(TheYear) And ValidPeriod(ThePeriod) Then
        ' Check only one of CostCentre$, Dept$, LocCode$ are set at most
        ParmCnt% = 0
        If (Trim(CostCentre$) <> "") Then
            If ValidCCDep(True, CostCentre$) Then
                If (ParmCnt% = 0) Then
                    ParmCnt% = ParmCnt% + 1
                Else
                    Error 519
                End If
            End If
        End If
        
        If (Trim(Dept$) <> "") Then
            If ValidCCDep(False, Dept$) Then
                If (ParmCnt% = 0) Then
                    ParmCnt% = ParmCnt% + 1
                Else
                    Error 520
                End If
            End If
        End If
        
        If (Trim(LocCode$) <> "") Then
            If ValidLocation(LocCode$) Then
                If (ParmCnt% > 0) Then
                    Error 527
                End If
            End If
        End If
        
        If LocalCheckServer() Then
            Company$ = UCase(Company$)
            ParmCnt% = 1
            AcType$ = "C"
            IntVal% = EntServer.SaveTeleValue(ParmCnt%, Company$, CustCode$, StockCode$, TheCcy%, TheYear%, ThePeriod%, CostCentre$, Dept$, LocCode$, NewBudget#, AcType$)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
                Error IntVal
            End If
        End If
    End If
     
    GoTo EntCustStkSaveBudget_Exit
          
EntCustStkSaveBudget_Error:
    StrVal = GetErrorStr$

EntCustStkSaveBudget_Exit:
    EntCustStkSaveBudget = StrVal
End Function


' PL 30/08/2016 R3 ABSEXCH-16676
'*******************************************************************************
' Name:        EntSuppStkSaveBudget
' Description: Saves the Budget into the Telesales module for the Supplier
'              and stock item
'*******************************************************************************
Public Function EntSuppStkSaveBudget(Company$, SuppCode$, StockCode$, TheCcy%, TheYear%, ThePeriod%, CostCentre$, Dept$, LocCode$, NewBudget#) As Variant
On Error GoTo EntSuppStkSaveBudget_Error
    Dim StrVal$, IntVal%, ParmCnt%, AcType$
    
    StrVal = "Error"
    
    If ValidCompany(Company) And ValidSuppCode(SuppCode$, "S") And ValidStockCode(StockCode$) And ValidCcy(TheCcy) And ValidYear(TheYear) And ValidPeriod(ThePeriod) Then
        
        ' Check only one of CostCentre$, Dept$, LocCode$ are set at most
        ParmCnt% = 0
        If (Trim(CostCentre$) <> "") Then
            If ValidCCDep(True, CostCentre$) Then
                If (ParmCnt% = 0) Then
                    ParmCnt% = ParmCnt% + 1
                Else
                    Error 519
                End If
            End If
        End If
        
        If (Trim(Dept$) <> "") Then
            If ValidCCDep(False, Dept$) Then
                If (ParmCnt% = 0) Then
                    ParmCnt% = ParmCnt% + 1
                Else
                    Error 520
                End If
            End If
        End If
        
        If (Trim(LocCode$) <> "") Then
            If ValidLocation(LocCode$) Then
                If (ParmCnt% > 0) Then
                    Error 527
                End If
            End If
        End If
        
        If LocalCheckServer() Then
            Company$ = UCase(Company$)
            ParmCnt% = 1
            AcType$ = "S"
            IntVal% = EntServer.SaveTeleValue(ParmCnt%, Company$, SuppCode$, StockCode$, TheCcy%, TheYear%, ThePeriod%, CostCentre$, Dept$, LocCode$, NewBudget#, AcType$)
        
            If (IntVal = 0) Then
                StrVal = "Saved"
            Else
              Error IntVal
            End If
        End If
    End If
     
    GoTo EntSuppStkSaveBudget_Exit
          
EntSuppStkSaveBudget_Error:
    StrVal = GetErrorStr$

EntSuppStkSaveBudget_Exit:
    EntSuppStkSaveBudget = StrVal
End Function


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_AddinInstall()
Dim EFMisc, EFCS, EFSS, EFStS, EFJCS As String
Dim ECHM As String

ECHM = "enterole.chm"
EFMisc = "User Defined" '"Exchequer Miscellaneous Gets"
EFCS = EFMisc '"Exchequer Customer Saves"
EFSS = EFMisc '"Exchequer Supplier Saves"
EFStS = EFMisc '"Exchequer Stock/Location Saves"
EFJCS = EFMisc '"Exchequer Job Costing Saves"

If Application.Version >= 9 Then
    ' Add functions to Exchequer Miscellaneous Functions section of Insert Formula
    Application.MacroOptions macro:="EntStkAddInVer2", Description:="Returns the version of the Excel Add-In for save stock/job functions that you are using", Category:=EFMisc, HelpContextID:=20341, HelpFile:=ECHM

    ' Add functions to Exchequer Customer Saves section of Insert Formula
    Application.MacroOptions macro:="EntCustStkSaveBudget", Description:="Sets the Customer's Stock Budget to NewBudget for the telesales Module for one of the parameters Cost Centre/Department/Location", Category:=EFCS, HelpContextID:=20259, HelpFile:=ECHM
   
   ' Add functions to Exchequer Supplier Saves section of Insert Formula
    Application.MacroOptions macro:="EntSuppStkSaveBudget", Description:="Sets the Supplier's Stock Budget to NewBudget for the telesales Module for one of the parameters Cost Centre/Department/Location", Category:=EFSS, HelpContextID:=20932, HelpFile:=ECHM
    
    ' Add functions to Exchequer Job Costing Saves section of Insert Formula
    Application.MacroOptions macro:="EntAddTimesheet", Description:="Creates a multi line timesheet record for the employee in the company data set for the period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet", Category:=EFJCS, HelpContextID:=20444, HelpFile:=ECHM
    Application.MacroOptions macro:="EntAddTimesheetUDFWithCosts", Description:="Creates a multi line timesheet record for the employee in the company data set for the period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet", Category:=EFJCS, HelpContextID:=20583, HelpFile:=ECHM
    Application.MacroOptions macro:="EntAddTimesheetWithCosts", Description:="Creates a multi line timesheet record for the employee in the company data set for the period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet", Category:=EFJCS, HelpContextID:=20447, HelpFile:=ECHM
    Application.MacroOptions macro:="EntAddTSHDateUDFWithCosts", Description:="Creates a multi line timesheet record for the employee in the company data set for the date, period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet", Category:=EFJCS, HelpContextID:=20734, HelpFile:=ECHM
    Application.MacroOptions macro:="EntAddTimesheetWithUDF", Description:="Creates a multi line timesheet record for the employee in the company data set for the date, period and year specified for the jobs, analysis codes, and hours and rates specified in the spreadsheet", Category:=EFJCS, HelpContextID:=20671, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAddContract", Description:="Adds a new Contract into the Job Tree. The status is set as Active and the type of job as Time and Materials price quoted as base Currency value 0.00", Category:=EFJCS, HelpContextID:=20466, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAddJob", Description:="Creates a job record for the parameters specified", Category:=EFJCS, HelpContextID:=20551, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveBudget", Description:="Sets the Budget Amount to NewBudget for the specified Company, Year, Period, Currency, JobCode, AnalysisCode and Posting Type", Category:=EFJCS, HelpContextID:=20136, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveBudgetOverheadChargePercent", Description:="Saves the Job Analysis Budget Overhead Charge Percentage for the specified Company, JobCode and AnalysisCode (Range 0.00 - 99.99, 2dp)", Category:=EFJCS, HelpContextID:=20703, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveBudgetQty", Description:="Sets the Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, JobCode and AnalysisCode", Category:=EFJCS, HelpContextID:=20137, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveBudgetRecharge", Description:="Sets the Job Analysis Budget Recharge Flag (Y or N)", Category:=EFJCS, HelpContextID:=20704, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveDeductCIS", Description:="Sets the Deduct CIS Flag to NewStr for the Company and AnalysisCode requested", Category:=EFJCS, HelpContextID:=20525, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveRevBudget", Description:="Sets the Revised Budget Amount to NewBudget for the specified Company, Year, Period, Currency, JobCode, AnalysisCode and Posting Type", Category:=EFJCS, HelpContextID:=20138, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveRevBudgetQty", Description:="Sets the Revised Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, JobCode and AnalysisCode", Category:=EFJCS, HelpContextID:=20139, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveUpliftGLCode", Description:="Sets the Uplift General Ledger Code to NewGLCode for the Company and AnalysisCode requested", Category:=EFJCS, HelpContextID:=20526, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCAnalSaveUpliftPercent", Description:="Sets the Uplift Percent to NewPerc for the Company and AnalysisCode requested", Category:=EFJCS, HelpContextID:=20527, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveEndDate", Description:="Sets the Job End Date to NewEndDate", Category:=EFJCS, HelpContextID:=20325, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveManager", Description:="Sets the Job Manager to NewManager", Category:=EFJCS, HelpContextID:=20536, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveName", Description:="Sets the Job Name/Description to NewName", Category:=EFJCS, HelpContextID:=20326, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveQSCode", Description:="Sets the Job Quantity Surveyor code to NewQSCode", Category:=EFJCS, HelpContextID:=20689, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveRevEndDate", Description:="Sets the Job Revised End Date to NewRevEndDate", Category:=EFJCS, HelpContextID:=20327, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveStartDate", Description:="Sets the Job Start Date to NewStartDate", Category:=EFJCS, HelpContextID:=20328, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser1", Description:="Sets the Job User Defined Field 1 to NewUser1", Category:=EFJCS, HelpContextID:=20329, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser2", Description:="Sets the Job User Defined Field 2 to NewUser2", Category:=EFJCS, HelpContextID:=20330, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser3", Description:="Sets the Job User Defined Field 3 to NewUser3", Category:=EFJCS, HelpContextID:=20331, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser4", Description:="Sets the Job User Defined Field 4 to NewUser4", Category:=EFJCS, HelpContextID:=20332, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser5", Description:="Sets the Job User Defined Field 5 to NewUser3", Category:=EFJCS, HelpContextID:=20759, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser6", Description:="Sets the Job User Defined Field 6 to NewUser4", Category:=EFJCS, HelpContextID:=20760, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser7", Description:="Sets the Job User Defined Field 7 to NewUser3", Category:=EFJCS, HelpContextID:=20761, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser8", Description:="Sets the Job User Defined Field 8 to NewUser4", Category:=EFJCS, HelpContextID:=20762, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser9", Description:="Sets the Job User Defined Field 9 to NewUser3", Category:=EFJCS, HelpContextID:=20763, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCJobSaveUser10", Description:="Sets the Job User Defined Field 10 to NewUser4", Category:=EFJCS, HelpContextID:=20758, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCPaySaveBudget", Description:="Sets the Pay Rate Budget Amount to NewBudget for the specified Company, Year, Period, Currency, JobCode, StockCode and Posting Type", Category:=EFJCS, HelpContextID:=20706, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCPaySaveBudgetQty", Description:="Sets the Pay Rate Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code", Category:=EFJCS, HelpContextID:=20459, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCPaySaveRevBudget", Description:="Sets the Revised Pay Rate Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, Stock Code and Posting Type", Category:=EFJCS, HelpContextID:=20460, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCPaySaveRevBudgetQty", Description:="Sets the Revised Pay Rate Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code", Category:=EFJCS, HelpContextID:=20461, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCStkSaveBudget", Description:="Sets the Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, Stock Code and Posting Type", Category:=EFJCS, HelpContextID:=20148, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCStkSaveBudgetQty", Description:="Sets the Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code", Category:=EFJCS, HelpContextID:=20149, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCStkSaveRevBudget", Description:="Sets the Revised Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, Stock Code and Posting Type", Category:=EFJCS, HelpContextID:=20150, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCStkSaveRevBudgetQty", Description:="Sets the Revised Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code and Stock Code", Category:=EFJCS, HelpContextID:=20151, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCTotSaveBudget", Description:="Sets the Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code and Posting Type", Category:=EFJCS, HelpContextID:=20158, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCTotSaveBudgetQty", Description:="Sets the Budget Quantity to NewBudget for the specified Company, Year, Period, Currency, Job Code", Category:=EFJCS, HelpContextID:=20159, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCTotSaveRevBudget", Description:="Sets the Revised Budget Amount to NewBudget for the specified Company, Year, Period, Currency, Job Code, and Posting Type", Category:=EFJCS, HelpContextID:=20160, HelpFile:=ECHM
    Application.MacroOptions macro:="EntJCTotSaveRevBudgetQty", Description:="Sets the Revised Budget Quantity to NewBudget for the specified Company, Year, Period, Currency and Job Code", Category:=EFJCS, HelpContextID:=20161, HelpFile:=ECHM

    Application.MacroOptions macro:="EntJCAnalSaveBudgetCurr", Description:="Sets the Budget Currency to NewCurrency for the specified Company, JobCode and Analysis Code", Category:=EFJCS, HelpContextID:=20712, HelpFile:=ECHM

    ' Add functions to Exchequer Stock/Location Saves section of Insert Formula
    Application.MacroOptions macro:="EntAltStkSaveDescr", Description:="Save the description in NewDescr to the Alternate Stock Code Description", Category:=EFStS, HelpContextID:=20275, HelpFile:=ECHM
    Application.MacroOptions macro:="EntAltStkSaveROCurrency", Description:="Save the reorder Currency in NewCurrency to the Alternate Stock Code Reorder Currency", Category:=EFStS, HelpContextID:=20276, HelpFile:=ECHM
    Application.MacroOptions macro:="EntAltStkSaveROPrice", Description:="Save the reorder Price in NewPrice to the Alternate Stock Code Reorder Price", Category:=EFStS, HelpContextID:=20277, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveAddress", Description:="Updates a Location's Address with NewAddress for the specified Line No", Category:=EFStS, HelpContextID:=20617, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveBOMFinishedGoodsGL", Description:="Sets the BOM/Finished Goods General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20618, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveClosingStkGL", Description:="Sets the Closing Stk / Write Offs General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20619, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveContact", Description:="Sets the Contact for the specified Location to NewContact", Category:=EFStS, HelpContextID:=20620, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveCostCentre", Description:="Sets the Cost Centre Code for the specified Location to NewCode", Category:=EFStS, HelpContextID:=20621, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveCostOfSalesGL", Description:="Sets the Cost Of Sales General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20622, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveDepartment", Description:="Sets the Department Code for the specified Location to NewCode", Category:=EFStS, HelpContextID:=20623, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveEmail", Description:="Sets the Email Address for the specified Location to NewEmailAddr", Category:=EFStS, HelpContextID:=20624, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveFax", Description:="Sets the Fax Number for the specified Location to NewFaxNo", Category:=EFStS, HelpContextID:=20625, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveModem", Description:="Sets the Modem Number for the specified Location to NewModemNo", Category:=EFStS, HelpContextID:=20626, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveName", Description:="Sets the Name for the specified Location to NewName", Category:=EFStS, HelpContextID:=20627, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveOverrideCCDept", Description:="Updates the OverrideCC/Dept flag for the specified Location to NewCC/DeptFlagFlag (Y or N)", Category:=EFStS, HelpContextID:=20628, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveOverrideCostPrice", Description:="Updates the OverrideCostPrice flag for the specified Location to NewCostPriceFlag (Y or N)", Category:=EFStS, HelpContextID:=20629, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveOverrideGLCodes", Description:="Updates the OverrideGLCodes flag for the specified Location to NewGLCodesFlag (Y or N)", Category:=EFStS, HelpContextID:=20630, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveOverrideReorderPrice", Description:="Updates the OverrideReorderPrice flag for the specified Location to NewReorderPriceFlag (Y or N)", Category:=EFStS, HelpContextID:=20631, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveOverrideSalesPrices", Description:="Updates the OverrideSalesPrices flag for the specified Location to NewSalesPricesFlag (Y or N)", Category:=EFStS, HelpContextID:=20632, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveOverrideSupplier", Description:="Updates the OverrideSupplier flag for the specified Location to NewSupplierFlag (Y or N)", Category:=EFStS, HelpContextID:=20633, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSavePhone", Description:="Sets the Phone Number for the specified Location to NewPhoneNo", Category:=EFStS, HelpContextID:=20634, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSavePurchaseReturnGL", Description:="Sets the Purchase Return General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20635, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveSalesGL", Description:="Sets the Sales General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20636, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveSalesReturnGL", Description:="Sets the Sales Return General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20637, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveStockValueGL", Description:="Sets the Stock Value General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20638, HelpFile:=ECHM
    Application.MacroOptions macro:="EntLocationSaveWOPWIPGL", Description:="Sets the WOP WIP General Ledger Code for the specified Location to NewGLCode", Category:=EFStS, HelpContextID:=20639, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveBinLocation", Description:="Sets the stock location|fffd|s Bin Location to NewBinLocation", Category:=EFStS, HelpContextID:=20353, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveBudget", Description:="Sets the stock location|fffd|s budget value to NewBudget for the specified Year, Period, Currency and Location", Category:=EFStS, HelpContextID:=20110, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveBudget2", Description:="Sets the stock location|fffd|s budget2 value to NewBudget for the specified Year, Period, Currency and Location", Category:=EFStS, HelpContextID:=20707, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveCOSGL", Description:="Sets the stock location|fffd|s Cost Of Sales General Ledger Code to NewGLCode", Category:=EFStS, HelpContextID:=20111, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveCostCentre", Description:="Sets the stock location|fffd|s CostCentre to NewCostCentre", Category:=EFStS, HelpContextID:=20354, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveCostCur", Description:="Sets the stock location|fffd|s Cost Currency to NewCurrency", Category:=EFStS, HelpContextID:=20112, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveCostPrice", Description:="Sets the stock location|fffd|s Cost Price to NewPrice which should be specified in the stock location|fffd|s Cost Currency", Category:=EFStS, HelpContextID:=20113, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveDepartment", Description:="Sets the stock location|fffd|s Department to NewDepartment", Category:=EFStS, HelpContextID:=20355, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveMaxStock", Description:="Sets the stock location|fffd|s Maximum Stock level to StockLevel", Category:=EFStS, HelpContextID:=20115, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveMinStock", Description:="Sets the stock|fffd|s Minimum Stock level to StockLevel", Category:=EFStS, HelpContextID:=20116, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSavePurchaseReturnGL", Description:="Sets the Purchase Return General Ledger Code for the specified StockCode and Location to NewGLCode", Category:=EFStS, HelpContextID:=20640, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveReOrderCostCentre", Description:="Sets the stock location|fffd|s Re-Order Cost Centre to NewCostCentre", Category:=EFStS, HelpContextID:=20680, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveReOrderCur", Description:="Sets the stock location|fffd|s Re-Order Currency to NewCurrency", Category:=EFStS, HelpContextID:=20117, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveReOrderDepartment", Description:="Sets the stock location|fffd|s Re-Order Department to NewDepartment", Category:=EFStS, HelpContextID:=20681, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveReOrderPrice", Description:="Sets the stock location|fffd|s Re-Order Price to NewPrice. NewPrice should be specified in the Re-Order Currency", Category:=EFStS, HelpContextID:=20118, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveReOrderQty", Description:="Sets the stock location|fffd|s Re-Order Quantity to NewQuantity", Category:=EFStS, HelpContextID:=20581, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveSalesCur", Description:="Sets the stock location|fffd|s Sales Currency for PriceBand to NewCurrency", Category:=EFStS, HelpContextID:=20119, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveSalesGL", Description:="Sets the stock location|fffd|s Sales General Ledger Code to NewGLCode", Category:=EFStS, HelpContextID:=20120, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveSalesPrice", Description:="Sets the stock location|fffd|s Sales Price for Price Band PriceBand to NewPrice. NewPrice should be specified in the Currency for that price band", Category:=EFStS, HelpContextID:=20121, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveSalesReturnGL", Description:="Sets the Sales Return General Ledger Code for the specified stock and location to NewGLCode", Category:=EFStS, HelpContextID:=20641, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveStkValGL", Description:="Sets the stock location|fffd|s Stock Value General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20122, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveSupplier", Description:="Sets the stock location|fffd|s Supplier to NewSupplier", Category:=EFStS, HelpContextID:=20356, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveTakeQty", Description:="Sets the Stock Take Quantity  to the StockLevel for the specified Company, StockCode and Location", Category:=EFStS, HelpContextID:=20164, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveWIPGL", Description:="Sets the stock location|fffd|s Work In Progress General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20123, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveWOGL", Description:="Sets the stock location|fffd|s Write Off|fffd|s General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20124, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkLocSaveWOPWIPGL", Description:="Sets the stock location|fffd|s WOP Work in Progress General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20477, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveAltCode", Description:="Sets the Alternate Stock Code for the specified Stock Item to NewAltCode", Category:=EFStS, HelpContextID:=20040, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveAnalysis", Description:="Sets the Default Job Analysis for the specified Stock Item to NewAnalysis", Category:=EFStS, HelpContextID:=20362, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveAutoCalcProdTime", Description:="Sets the Flag to Calc to the selection (Y/N) for the specified Stock Item to AutoCalcTime", Category:=EFStS, HelpContextID:=20483, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveBarCode", Description:="Sets the Bar Code for the specified Stock Item to NewBarCode", Category:=EFStS, HelpContextID:=20443, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveBinLocation", Description:="Sets the Bin Location for the specified Stock Item to NewBinLocation", Category:=EFStS, HelpContextID:=20363, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveBudget", Description:="Sets the stock|fffd|s budget value to NewBudget for the specified Year, Period and Currency", Category:=EFStS, HelpContextID:=20041, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveBudget2", Description:="Sets the stock|fffd|s budget2 value to NewBudget for the specified Year, Period and Currency", Category:=EFStS, HelpContextID:=20708, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveCommodity", Description:="Sets the stock|fffd|s Commodity Code to NewCommodity", Category:=EFStS, HelpContextID:=20364, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveCOSGL", Description:="Sets the stock|fffd|s Cost Of Sales General Ledger Code to NewGLCode", Category:=EFStS, HelpContextID:=20042, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveCostCentre", Description:="Sets the stock|fffd|s Cost Centre to NewCostCentre", Category:=EFStS, HelpContextID:=20365, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveCostCur", Description:="Sets the stock|fffd|s Cost Currency to NewCurrency", Category:=EFStS, HelpContextID:=20043, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveCostPrice", Description:="Sets the stock|fffd|s Cost Price to NewPrice which should be specified in the stock|fffd|s Cost Currency", Category:=EFStS, HelpContextID:=20044, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveDepartment", Description:="Sets a stock Department to NewDepartment", Category:=EFStS, HelpContextID:=20366, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveDescr", Description:="Sets a stock description line to NewDescr, LineNo indicates which of the description lines will be changed (1 to 6)", Category:=EFStS, HelpContextID:=20045, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveIncludeOnWeb", Description:="Sets a stock Include On Web to NewIncludeOnWeb", Category:=EFStS, HelpContextID:=20367, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveLeadTime", Description:="Sets the stock Lead Time to NewLeadTime", Category:=EFStS, HelpContextID:=20484, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveLineType", Description:="Sets a stock LineType to NewLineType, Values 1 to 4", Category:=EFStS, HelpContextID:=20368, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveLocation", Description:="Sets a stock Location to NewLocation", Category:=EFStS, HelpContextID:=20369, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveManufacturerWarranty", Description:="Sets the Manufacturer Warranty for the specified Stock Item to NewWarranty", Category:=EFStS, HelpContextID:=20642, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveMaxStock", Description:="Sets the stock|fffd|s Maximum Stock value to StockLevel", Category:=EFStS, HelpContextID:=20046, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveMinEconomicQty", Description:="Sets the BOM stock|fffd|s Min Economic Qty to NewQty", Category:=EFStS, HelpContextID:=20485, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveMinStock", Description:="Sets the stock|fffd|s Minimum Stock value to StockLevel", Category:=EFStS, HelpContextID:=20047, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveProdAssDays", Description:="Sets the stock|fffd|s Production Assembly Days to NewDays", Category:=EFStS, HelpContextID:=20486, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveProdAssHours", Description:="Sets the stock|fffd|s Production Assembly Hours to NewHours", Category:=EFStS, HelpContextID:=20487, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveProdAssMins", Description:="Sets the stock|fffd|s Production Assembly Minutes to NewMins", Category:=EFStS, HelpContextID:=20488, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSavePurchaseReturnGL", Description:="Sets the Purchase Return General Ledger Code for the specified Stock Item to NewGLCode", Category:=EFStS, HelpContextID:=20643, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSavePurchaseUnits", Description:="Sets the Purchase Units for the specified Stock Item to NewUnits", Category:=EFStS, HelpContextID:=20370, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSavePurchWeight", Description:="Sets the Purchase Weight for the specified Stock Item to NewWeight", Category:=EFStS, HelpContextID:=20371, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveReOrderCostCentre", Description:="Sets the stock|fffd|s Re-Order CostCentre to NewCostCentre", Category:=EFStS, HelpContextID:=20678, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveReOrderCur", Description:="Sets the stock|fffd|s Re-Order Currency to NewCurrency", Category:=EFStS, HelpContextID:=20048, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveReOrderDepartment", Description:="Sets the stock|fffd|s Re-Order Department to NewDepartment", Category:=EFStS, HelpContextID:=20679, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveReOrderPrice", Description:="Sets the stock|fffd|s Re-Order Price to NewPrice. NewPrice should be specified in the Re-Order Currency", Category:=EFStS, HelpContextID:=20049, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveReOrderQty", Description:="Sets the stock|fffd|s Re-Order Quantity to NewQuantity", Category:=EFStS, HelpContextID:=20582, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveReOrderSupplier", Description:="Sets the stock|fffd|s Re-Order Supplier to NewSupplier", Category:=EFStS, HelpContextID:=20677, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveRestockCharge", Description:="Sets the Restock Charge for the specified Stock Item, either as a % or as a value (e.g. 10.50) for the specified Stock Item to NewPerc", Category:=EFStS, HelpContextID:=20644, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesCur", Description:="Sets the stock|fffd|s Sales Currency for PriceBand to NewCurrency", Category:=EFStS, HelpContextID:=20050, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesGL", Description:="Sets the stock|fffd|s Sales General Ledger Code to NewGLCode", Category:=EFStS, HelpContextID:=20051, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesPrice", Description:="Sets the stock|fffd|s Sales Price for PriceBand to NewPrice. NewPrice should be specified in the Currency for that price band", Category:=EFStS, HelpContextID:=20052, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesReturnGL", Description:="Sets the Sales Return General Ledger Code for the specified Stock Item to NewGLCode", Category:=EFStS, HelpContextID:=20645, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesUnits", Description:="Sets the Sales Units for the specified Stock Item to NewUnits", Category:=EFStS, HelpContextID:=20372, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesWarranty", Description:="Sets the Sales Warranty for the specified Stock Item to NewWarranty", Category:=EFStS, HelpContextID:=20646, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSalesWeight", Description:="Sets the Sales Weight for the specified Stock Item to NewWeight", Category:=EFStS, HelpContextID:=20373, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSSDCountry", Description:="Sets the Country for the specified Stock Item to NewCountry", Category:=EFStS, HelpContextID:=20374, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSSDDesc", Description:="Sets the Unit Description for the specified Stock Item to NewDesc", Category:=EFStS, HelpContextID:=20375, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveStkValGL", Description:="Sets the stock|fffd|s Stock Value General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20053, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveSupplier", Description:="Sets the stock supplier code to NewSupplier", Category:=EFStS, HelpContextID:=20174, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveTakeQty", Description:="Sets the Stock Take Quantity to StockLevel for the specified Company and StockCode", Category:=EFStS, HelpContextID:=20166, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUnitPurch", Description:="Sets the stock|fffd|s Unit Of Purchase to NewUnitOfPurch", Category:=EFStS, HelpContextID:=20054, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUnitSale", Description:="Sets the stock|fffd|s Unit Of Sale to NewUnitOfSale", Category:=EFStS, HelpContextID:=20055, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUnitsPerSSD", Description:="Sets the stock|fffd|s Units per SSD Ratio to NewUnits", Category:=EFStS, HelpContextID:=20377, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUnitStock", Description:="Sets the stock|fffd|s Unit Of Stock to NewUnitOfStock", Category:=EFStS, HelpContextID:=20056, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField1", Description:="Sets the stock|fffd|s User definable field 1 to NewField", Category:=EFStS, HelpContextID:=20057, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField2", Description:="Sets the stock|fffd|s User definable field 2 to NewField", Category:=EFStS, HelpContextID:=20058, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField3", Description:="Sets the stock|fffd|s User definable field 3 to NewField", Category:=EFStS, HelpContextID:=20378, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField4", Description:="Sets the stock|fffd|s User definable field 4 to NewField", Category:=EFStS, HelpContextID:=20379, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveVATCode", Description:="Sets the stock|fffd|s VATCode to NewVATCode", Category:=EFStS, HelpContextID:=20380, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveWebCatalogs", Description:="Sets the stock|fffd|s WebCatalogs to NewWebCatalogs", Category:=EFStS, HelpContextID:=20381, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveWebImage", Description:="Sets the stock|fffd|s WebImage to NewWebImage", Category:=EFStS, HelpContextID:=20382, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveWIPGL", Description:="Sets the stock|fffd|s Work In Progress General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20059, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveWOGL", Description:="Sets the stock|fffd|s Write Off|fffd|s General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20060, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveWOPWIPGL", Description:="Sets the stock|fffd|s WOP Work in Progress General Ledger code to NewGLCode", Category:=EFStS, HelpContextID:=20489, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField5", Description:="Sets the stock|fffd|s User definable field 5 to NewField", Category:=EFStS, HelpContextID:=20853, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField6", Description:="Sets the stock|fffd|s User definable field 6 to NewField", Category:=EFStS, HelpContextID:=20854, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField7", Description:="Sets the stock|fffd|s User definable field 7 to NewField", Category:=EFStS, HelpContextID:=20855, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField8", Description:="Sets the stock|fffd|s User definable field 8 to NewField", Category:=EFStS, HelpContextID:=20856, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField9", Description:="Sets the stock|fffd|s User definable field 9 to NewField", Category:=EFStS, HelpContextID:=20857, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUserField10", Description:="Sets the stock|fffd|s User definable field 10 to NewField", Category:=EFStS, HelpContextID:=20852, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveECService", Description:="Sets the EC Service Y/N field to NewField", Category:=EFStS, HelpContextID:=20849, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUpliftArrivals", Description:="Sets the Intrastat State Uplift Arrivals% for the specified StockCode", Category:=EFStS, HelpContextID:=20850, HelpFile:=ECHM
    Application.MacroOptions macro:="EntStkSaveUpliftDispatch", Description:="Sets the Intrastat State Uplift Dispatch% for the specified StockCode", Category:=EFStS, HelpContextID:=20851, HelpFile:=ECHM

End If
End Sub
Attribute VB_Name = "Version"

Option Explicit

' Beta Version Number
'Const AddInVer = "b561.144"
' Release Version Number
Const AddInVer = "Exchequer v12.0.0 Build 214"           ' should be incremented for each build


'*******************************************************************************
' Add-In History
'
' Exchequer v12.0.0 Build 213  Updated for v12.0.0 release
'
' Exchequer 2018 R1 Build 213  Updated for 2018-R1 release
'
' v2016R3.212 PL   31/08/2016  Released for 2016 R3
'
' v2016R1.211 PKR  26/01/2016  Released for v2016 R1
'
' v7.1.210    WJ   10/12/2014  Corrected duplicate Help Context Ids
'
' v7.0.12.209 MH   09/10/2014  Rebadged from v7.1 to v7.0.12
'
' v7.1.209    MH   09/09/2014  ABSEXCH-15052: Added EntStkSaveECService
'
' v7.0.208    MH   10/09/12    Released for v7.0
'
' v6.10.207   MH   04/04/12    v6.10.1 - ABSEXCH-12547 / ABSEXCH-12548
'                              Added EntStkSaveUpliftArrivals and EntStkSaveUpliftDispatch
'
' v6.9.206    MH   02/11/11    Added EntAddTimesheetWithUDF
'
' v6.9.205    MH   28/10/11    Added support for saving Job User Def Fields 5-10
'                              Extended EntJCAddContract and EntJCAddJob to support up to 10 udef fields
'                              Extended Timesheet functions to support up to 10 user defined fields
'
' v6.9.204    GS   27/10/11    Added support for saving Stock User Def Fields 5-10
'
' v6.00.203   MH   27/10/08    Added EntJCAnalSaveBudgetCurr for MD Events
'
' v6.00.202   MH   31/10/07    Rebuilt for v6.00 RC1
'
' v6.00.200   MH   16/07/07    Recreated from scratch under XL95 to try and fix help problems in XL2003
'
' v6.00.154   MH    20/06/07    Rebuilt after help stopped working due to an MS Office Update
'
' v6.00.153   MH    14/06/07    Modified to use HTML Help
'
' v5.71.152   MH    14/06/07    Added EntJCAnalSaveBudgetOverheadChargePercent and EntJCAnalSaveBudgetRecharge
'
' v5.71.151   MH    30/05/07    Set help file name in Project Properties
'
' v5.71.150   MH    18/10/06    Modified EntAddTSHDateUDFWithCosts as it was doing the custom Noble Denton validation
'
' v5.71.149   MH    18/10/06    Renamed EntAddTimesheetDateUDFWithCosts to EntAddTSHDateUDFWithCosts as the long name breaks Excel's function wizard
'
' v5.71.148   MH    13/10/06    Added EntAddTimesheetDateUDFWithCosts
'
' v5.71.147   MH    13/04/06    Added EntStkSaveReOrderSupplier, EntStkSaveReOrderCostCentre, EntStkSaveReOrderDepartment,
'                               EntStkLocSaveReOrderCostCentre, EntStkLocSaveReOrderDepartment, EntJCJobSaveQSCode
'
' v5.70.146   MH    08/08/05    Updated EntStkSaveRestockCharge to work as a string to allow for % or value values
'
' v5.70.145   MH    28/07/05    Rebranded for IRIS Enterprise/Exchequer
'                               Added Stock & Stock Loc functions for new Goods Returns fields
'                               Added loads of EntLocationxxx functions
'
' v5.61.144   HM    14/10/04    Released for v5.61
'
' b561.144    HM    01/12/04    Remove the Line UDField 2 parameter from EntAddTimesheetUDFWithCosts
'                               as the Excel function wizard couldn't handle it.
'
' b561.143    HM    29/11/04    Added EntAddTimesheetUDFWithCosts
'
' b561.142    HM    22/11/04    Added EntStkSaveReOrderQty and EntStkLocSaveReOrderQty
'
' v5.60.141   HM    14/10/04    Released for v5.60.001
'
' b560.141    HM    16/06/04    Added EntJCAddContract
'
' v5.60.140   HM    14/05/04    Released for v5.60
'
' b560.140    HM    23/03/04    Extended to support extra Apps & Vals Totals Categories
'
' v5.52.139   HM    18/11/03    Released for v5.52
'
' b552.139    HM    05/08/03    Added EntJCAddJob and EntJCAddJobAnalysisBudgets
'
' v5.51.138   HM    27/06/03    Released for v5.51
'
' b551.137    HM    23/05/03    Added ?
'
' v5.50.136   HM    24/03/03    Released for v5.50
'
' b550.136    HM    14/01/03    Added Analysis Code functions for v5.50
'
' v5.00.135   HM    02/07/02    Released for Enterprise v5.00.002 ???
'
' b500.135    HM    25/06/02    Added Stock WOP functions
'
' v5.00.134   HM    02/04/02    Released for Enterprise v5.00
'
' b500.134    HM    11/03/02    Added EntAddTimesheetWithCosts function
'
' b500.133    HM    18/10/01    Added Stock budget 2 functions
'
' b500.132    HM    11/09/01    Added EntJCPaySave... functions to update the Pay-Rate budgets
'
' b500.131    HM    10/09/01    Added EntAddTimesheet
'
' b500.130    HM    07/09/01    Ported to v5.00
'
' v4.32.114   HM    17/04/01    Updated Version for v4.32
'
' v4.31.114   HM    24/07/00    Changed to Release Version!
'
' b000.101    HM    11/11/99    Renamed EntJCJobSaveDescr to EntJCJobSaveName
'
' b000.100    HM    12/10/99    Created from v4.31 OLEWBook.Xls

'*******************************************************************************
' Name:        EntStkAddInVer2
' Description: Returns the EntStk.XLA Add-In Version Number
'*****************************************************************************************
Public Function EntStkAddInVer2() As String
Attribute EntStkAddInVer2.VB_Description = "Returns the version of the Excel Add-In for save stock/job functions that you are using"
Attribute EntStkAddInVer2.VB_HelpID = 20341
Attribute EntStkAddInVer2.VB_ProcData.VB_Invoke_Func = " \n14"
    EntStkAddInVer2 = "Exchequer Stock Save Functions - " + AddInVer$
End Function

' InQuest injected base64 decoded content
' bzWl
' {I	:-I
' {I	+dI

INQUEST-PP=macro
