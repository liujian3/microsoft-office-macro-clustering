Attribute VB_Name = "CIQF01"
Attribute VB_Base = "0{19EF731C-CD9A-45E0-9ACC-A8C243B01246}{7C743418-0F18-4BF1-8DBB-9B73BE06BD04}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CIQF01_Sall_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect all services
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_Sall.Caption = G_Check_Box_Sett Then                              ' If check box is currently checked then
        CIQF01.CIQF01_Sall.Caption = G_Check_Box_NSet                           ' Change to "Not Checked"
        CIQF01.CIQF01_Sall.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S20a.Caption = G_Check_Box_NSet                           ' Change to "Not Checked"
        CIQF01.CIQF01_S20a.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S20b.Caption = G_Check_Box_NSet                           ' Change to "Not Checked"
        CIQF01.CIQF01_S20b.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S20c.Caption = G_Check_Box_NSet                           ' Change to "Not Checked"
        CIQF01.CIQF01_S20c.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S31.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S31.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S34.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S34.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S35.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S35.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S36.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S36.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S37.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S37.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S38.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S38.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S40.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S40.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S41.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S41.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S42.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S42.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S43.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S43.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S44.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S44.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S45.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S45.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S46.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S46.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S47.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S47.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S48.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S48.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF01.CIQF01_S49.Caption = G_Check_Box_NSet                            ' Change to "Not Checked"
        CIQF01.CIQF01_S49.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
    Else
        CIQF01.CIQF01_Sall.Caption = G_Check_Box_Sett                           ' Change to "Checked"
        CIQF01.CIQF01_Sall.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S20a.Caption = G_Check_Box_Sett                           ' Change to "Checked"
        CIQF01.CIQF01_S20a.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S20b.Caption = G_Check_Box_Sett                           ' Change to "Checked"
        CIQF01.CIQF01_S20b.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S20c.Caption = G_Check_Box_Sett                           ' Change to "Checked"
        CIQF01.CIQF01_S20c.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S31.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S31.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S34.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S34.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S35.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S35.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S36.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S36.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S37.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S37.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S38.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S38.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S40.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S40.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S41.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S41.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S42.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S42.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S43.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S43.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S44.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S44.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S45.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S45.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S46.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S46.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S47.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S47.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S48.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S48.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF01.CIQF01_S49.Caption = G_Check_Box_Sett                            ' Change to "Checked"
        CIQF01.CIQF01_S49.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S20a_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 20a
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S20a.Caption = G_Check_Box_Sett Then                              ' If check box is currently checked then
        CIQF01_S20a.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF01_S20a.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S20a.Caption = G_Check_Box_Sett                                  ' Change to "Checked"
        CIQF01_S20a.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S20b_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 20b
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S20b.Caption = G_Check_Box_Sett Then                              ' If check box is currently checked then
        CIQF01_S20b.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF01_S20b.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S20b.Caption = G_Check_Box_Sett                                  ' Change to "Checked"
        CIQF01_S20b.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S20c_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 20c
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S20c.Caption = G_Check_Box_Sett Then                              ' If check box is currently checked then
        CIQF01_S20c.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF01_S20c.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S20c.Caption = G_Check_Box_Sett                                  ' Change to "Checked"
        CIQF01_S20c.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S31_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 31
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S31.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S31.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S31.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S31.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S31.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S34_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 34
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S34.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S34.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S34.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S34.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S34.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S35_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 35
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S35.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S35.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S35.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S35.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S35.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S36_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 36
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S36.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S36.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S36.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S36.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S36.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S37_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 37
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S37.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S37.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S37.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S37.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S37.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S38_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 38
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S38.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S38.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S38.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S38.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S38.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S40_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 40
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S40.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S40.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S40.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S40.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S40.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S41_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 41
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S41.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S41.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S41.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S41.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S41.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S42_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 42
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S42.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S42.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S42.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S42.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S42.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S43_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 43
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S43.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S43.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S43.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S43.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S43.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S44_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 44
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S44.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S44.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S44.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S44.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S44.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S45_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 45
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S45.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S45.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S45.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S45.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S45.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S46_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 46
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S46.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S46.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S46.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S46.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S46.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S47_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 47
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S47.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S47.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S47.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S47.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S47.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S48_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 48
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S48.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S48.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S48.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S48.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S48.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_S49_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select/Deselect Services 49
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    If CIQF01_S49.Caption = G_Check_Box_Sett Then                               ' If check box is currently checked then
        CIQF01_S49.Caption = G_Check_Box_NSet                                   ' Change to "Not Checked"
        CIQF01_S49.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF01_S49.Caption = G_Check_Box_Sett                                   ' Change to "Checked"
        CIQF01_S49.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    End If
    
End Sub
Private Sub CIQF01_G_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Go
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check that at least one service has been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01_S20a.Caption = G_Check_Box_NSet And _
       CIQF01_S20b.Caption = G_Check_Box_NSet And _
       CIQF01_S20c.Caption = G_Check_Box_NSet And _
       CIQF01_S31.Caption = G_Check_Box_NSet And _
       CIQF01_S34.Caption = G_Check_Box_NSet And _
       CIQF01_S35.Caption = G_Check_Box_NSet And _
       CIQF01_S36.Caption = G_Check_Box_NSet And _
       CIQF01_S37.Caption = G_Check_Box_NSet And _
       CIQF01_S38.Caption = G_Check_Box_NSet And _
       CIQF01_S40.Caption = G_Check_Box_NSet And _
       CIQF01_S41.Caption = G_Check_Box_NSet And _
       CIQF01_S42.Caption = G_Check_Box_NSet And _
       CIQF01_S43.Caption = G_Check_Box_NSet And _
       CIQF01_S44.Caption = G_Check_Box_NSet And _
       CIQF01_S45.Caption = G_Check_Box_NSet And _
       CIQF01_S46.Caption = G_Check_Box_NSet And _
       CIQF01_S47.Caption = G_Check_Box_NSet And _
       CIQF01_S48.Caption = G_Check_Box_NSet And _
       CIQF01_S49.Caption = G_Check_Box_NSet Then
        
        G_Message = "Select at least one service for resetting. If you do not want to reset any data then click on 'Cancel Request' instead."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        Exit Sub
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the selections in the PMA
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("Reset", "All", "U", CIQF01_Sall.Caption)
    G_Caller = F0300_Access_Value("Reset", "S20a", "U", CIQF01_S20a.Caption)
    G_Caller = F0300_Access_Value("Reset", "S20b", "U", CIQF01_S20b.Caption)
    G_Caller = F0300_Access_Value("Reset", "S20c", "U", CIQF01_S20c.Caption)
    G_Caller = F0300_Access_Value("Reset", "S31", "U", CIQF01_S31.Caption)
    G_Caller = F0300_Access_Value("Reset", "S34", "U", CIQF01_S34.Caption)
    G_Caller = F0300_Access_Value("Reset", "S35", "U", CIQF01_S35.Caption)
    G_Caller = F0300_Access_Value("Reset", "S36", "U", CIQF01_S36.Caption)
    G_Caller = F0300_Access_Value("Reset", "S37", "U", CIQF01_S37.Caption)
    G_Caller = F0300_Access_Value("Reset", "S38", "U", CIQF01_S38.Caption)
    G_Caller = F0300_Access_Value("Reset", "S40", "U", CIQF01_S40.Caption)
    G_Caller = F0300_Access_Value("Reset", "S41", "U", CIQF01_S41.Caption)
    G_Caller = F0300_Access_Value("Reset", "S42", "U", CIQF01_S42.Caption)
    G_Caller = F0300_Access_Value("Reset", "S43", "U", CIQF01_S43.Caption)
    G_Caller = F0300_Access_Value("Reset", "S44", "U", CIQF01_S44.Caption)
    G_Caller = F0300_Access_Value("Reset", "S45", "U", CIQF01_S45.Caption)
    G_Caller = F0300_Access_Value("Reset", "S46", "U", CIQF01_S46.Caption)
    G_Caller = F0300_Access_Value("Reset", "S47", "U", CIQF01_S47.Caption)
    G_Caller = F0300_Access_Value("Reset", "S48", "U", CIQF01_S48.Caption)
    G_Caller = F0300_Access_Value("Reset", "S49", "U", CIQF01_S49.Caption)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform requested function - Reset Form Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1500_Reset_Form_Data()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
    CIQF01.Hide
    
End Sub                                                                         ' of CIQF01_G_Click
Private Sub CIQF01_C_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Cancel
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    CIQF01.Hide
    
End Sub                                                                         ' of CIQF01_C_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "CIQF02"
Attribute VB_Base = "0{73D758B3-372D-4343-89AA-49FC80069EC8}{4982E24E-F72E-42D7-82F8-E13B121CA652}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public Sub CIQF02_PwdY_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' "With Password"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set check box on or off
    ' - If setting on then show the password fields
    ' - If setting on then turn off the "Without Password" check box
    ' - If setting off then hide the password fields
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF02_PwdY.Caption = G_Check_Box_Sett Then                              ' If check box is currently checked then
        CIQF02_PwdY.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF02_PwdY.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
        CIQF02_Pwrd.Visible = False
        CIQF02_Pwrd_D.Visible = False
    Else
        CIQF02_PwdY.Caption = G_Check_Box_Sett                                  ' Change to "Checked"
        CIQF02_PwdY.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF02_Pwrd.Visible = True
        CIQF02_Pwrd_D.Visible = True
        
        CIQF02_PwdN.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF02_PwdN.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
End Sub                                                                         ' of CIQF02_PwdY_Click
Private Sub CIQF02_PwdN_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' "Without Password"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set check box on or off
    ' - If setting on then turn off the "With Password" check box
    ' - If setting on then hide the password fields
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF02_PwdN.Caption = G_Check_Box_Sett Then                              ' If check box is currently checked then
        CIQF02_PwdN.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF02_PwdN.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Else
        CIQF02_PwdN.Caption = G_Check_Box_Sett                                  ' Change to "Checked"
        CIQF02_PwdN.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
        CIQF02_Pwrd.Visible = False
        CIQF02_Pwrd_D.Visible = False
        
        CIQF02_PwdY.Caption = G_Check_Box_NSet                                  ' Change to "Not Checked"
        CIQF02_PwdY.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
End Sub                                                                         ' of CIQF02_PwdN_Click
Private Sub CIQF02_G_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Go
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check that "With Password" or "Without Password" has been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF02_PwdY.Caption = G_Check_Box_NSet And _
       CIQF02_PwdN.Caption = G_Check_Box_NSet Then                              ' If "With Password" and "Without Password" both not set then
        G_Message = "You must select either 'With Password' or 'Without Password."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        Exit Sub
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check that password has been entered (if required)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF02_PwdY.Caption = G_Check_Box_Sett Then                              ' If "With Password" then
        If CIQF02_Pwrd.Value = "" Then
            G_Message = "You have selected 'With Password' but the password is blank. Enter the password."
            G_Response = MsgBox(G_Message, vbCritical, G_Title)
            Exit Sub
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Lock and Save
    ' - Mark III processing saves only selected tabs in the locked version
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2080_Lock()
    G_Caller = F9820_User_to_CCData("FC", "L")                                  ' Audit after the function is completed
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Worksheets(G_Tab_Cover).Activate
    Application.ScreenUpdating = True
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the form and return to the caller
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    CIQF02.Hide
    
End Sub
Private Sub CIQF02_C_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Cancel
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the form and return to the caller
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    CIQF02.Hide
    
End Sub
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "History"
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------
' V0a - 12/09/2014 - Original version - Draft
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Attribute VB_Name = "Layout"
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------
' Sheets:
'   Sheet01     Admin - Messages
'   Sheet02     Admin - Countries
'   Sheet03     Admin - Permanent Memory
'   Sheet04     Admin - Field Validation Data (valid values for drop-down lists)
'
'   Sheet20     User  - Front Cover
'   Sheet21     User  - General Help
'   Sheet22     User  - BIN List
'
'   Sheet31     User  - Service - BIN List
'   Sheet32     User  - Reserved for Future Use
'   Sheet33     User  - Reserved for Future Use
'   Sheet34     User  - Visa Smart Debit/Credit (VSDC)
'   Sheet35     User  - Verified by Visa
'   Sheet36     User  - CVV - iCVV - CVV2
'   Sheet37     User  - PIN Processing
'   Sheet38     User  - STIP - PCAS Unavailable
'   Sheet39     User  - STIP - SMS Unavailable
'   Sheet40     User  - Visa Direct
'   Sheet41     User  - Alternate Authorisation Routing
'   Sheet42     User  - Currency Conversion Options
'   Sheet43     User  - Additional Processing
'   Sheet44     User  - SMS Reports and Raw Data
'   Sheet45     User  - Visa Resolve Online (VROL) Financials
'   Sheet46     User  - VSS Settlement Reporting
'   Sheet47     User  - Clearing & Settlement
'   Sheet48     User  - CIB / Settlement BIN
'   Sheet49     User  - Additional Reports
'   Sheet50     User  - Reserved for Future Use
'
'   Sheet98     Auto  - CCData
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------
' Modules:
'   Module00    Global variables and initialisation
'   Module01    Admin - Messages
'   Module02    Admin - Countries
'   Module03    Admin - Permanent memory Area
'
'   Module10    Button positioning                                              (for all worksheets)
'   Module11    Load cell values and load check box values                      (for all worksheets)
'   Module12
'   Module13    Set Front Cover services default by selected region
'   Module14    Add and remove comments; also some internal functions           (for all worksheets)
'   Module15    Reset form data                                                 (for all worksheets)
'   Module16    Set button captions                                             (for all worksheets)
'   Module17    Display and hide CCM Information rows                           (for all worksheets)
'   Module18    Next service / previous service                                 (for all worksheets)
'
'   Module20    Worksheet functions - Front Cover
'   Module23    Worksheet functions - General Help
'
'   Module31    Worksheet functions - BIN List
'   Module34    Worksheet functions - Visa Smart Debit/Credit (VSDC)
'   Module35    Worksheet functions - Verified by Visa (VbV)
'   Module36    Worksheet functions - CVV - iCVV - CVV2
'   Module37    Worksheet functions - PIN Processing
'   Module38    Worksheet functions - Stand-In Processing (STIP)
'   Module40    Worksheet functions - Visa Direct
'   Module41    Worksheet functions - Alternate Authorisation Routing
'   Module42    Worksheet functions - Currency Conversion Options
'   Module43    Worksheet functions - Additional Processing Options
'   Module44    Worksheet functions - SMS Reports & Raw Data
'   Module45    Worksheet functions - Visa Resolve Online (VROL) Financials
'   Module46    Worksheet functions - Settlement and VSS Reporting
'   Module47    Worksheet functions - Clearing
'   Module48    Worksheet functions - Application Processor / CIB
'   Module49    Worksheet functions - Additional Reports
'
'   Module98    Copy all entered values and all check box values to CCData tab  (for all worksheets)
'   Module99    Common routines; common field validation; find comments in the Admin tab; access hard storage in Tables tab; update edition version and date
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Attribute VB_Name = "Module00_Global"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Spreadsheets
Global G_This_File                                          As String           ' This spreadsheet file
Global G_Save_File                                          As String           ' The copy that will be submitted
Global G_Acti_File                                          As String           ' The file that is currently (was previously) active
Global G_File_Path                                          As String           ' The folder path
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Worksheets
Global G_Tab_A_Msg                                          As String           ' Administration - Messages
Global G_Tab_A_Reg                                          As String           ' Administration - Regions
Global G_Tab_A_PMA                                          As String           ' Administration - Permanent Memory Area
Global G_Tab_A_Val                                          As String           ' Administration - Field Validation
Global G_Tab_Cover                                          As String           ' Front Cover
Global G_Tab_Gen_H                                          As String           ' General help
Global G_Tab_Print                                          As String           ' Print Preview
Global G_Tab_LSave                                          As String           ' Lock and Save
Global G_Tab_Svc31                                          As String           ' Service 31 - BIN List
Global G_Tab_Svc34                                          As String           ' Service 34 - Visa Smart Debit/Credit (VSDC)
Global G_Tab_Svc35                                          As String           ' Service 35 - Verified by Visa (VbV)
Global G_Tab_Svc36                                          As String           ' Service 36 - CVV / iCVV / CVV2
Global G_Tab_Svc37                                          As String           ' Service 37 - PIN Processing
Global G_Tab_Svc38                                          As String           ' Service 38 - Stand-In Processing (STIP)
Global G_Tab_Svc40                                          As String           ' Service 40 - Visa Direct
Global G_Tab_Svc41                                          As String           ' Service 41 - Alternate Authorisation Routing
Global G_Tab_Svc42                                          As String           ' Service 42 - Currency Conversion Options
Global G_Tab_Svc43                                          As String           ' Service 43 - Additional Processing Options
Global G_Tab_Svc44                                          As String           ' Service 44 - SMS Reports and Raw Data
Global G_Tab_Svc45                                          As String           ' Service 45 - Visa Resolve Online (VROL) Financials
Global G_Tab_Svc46                                          As String           ' Service 46 - Settlement and VSS Reporting
Global G_Tab_Svc47                                          As String           ' Service 47 - Clearing
Global G_Tab_Svc48                                          As String           ' Service 48 - Application Processor / CIB
Global G_Tab_Svc49                                          As String           ' Service 49 - Additional Reports
Global G_Tab_CCDat                                          As String           ' CCData

Global G_Tab_Next1                                          As String           ' Next tab to be displayed
Global G_Tab_Prev1                                          As String           ' Prev tab to be displayed

Global G_Tab_LockA                                          As String           ' Lock and Save (copy 1 - All)
Global G_Tab_LockC                                          As String           ' Lock and Save (copy 2 - Completed)
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Worksheet protection status
Global G_SpreadSht_Status                                   As String           ' Worksheet Status  P=protected, U=unprotected
Global G_Tab_A_Msg_Status                                   As String           '
Global G_Tab_A_Reg_Status                                   As String           '
Global G_Tab_A_PMA_Status                                   As String           '
Global G_Tab_A_Val_Status                                   As String           '
Global G_Tab_Cover_Status                                   As String           '
Global G_Tab_Gen_H_Status                                   As String           '
Global G_Tab_Print_Status                                   As String           '
Global G_Tab_Svc31_Status                                   As String           '
Global G_Tab_Svc34_Status                                   As String           '
Global G_Tab_Svc35_Status                                   As String           '
Global G_Tab_Svc36_Status                                   As String           '
Global G_Tab_Svc37_Status                                   As String           '
Global G_Tab_Svc38_Status                                   As String           '
Global G_Tab_Svc40_Status                                   As String           '
Global G_Tab_Svc41_Status                                   As String           '
Global G_Tab_Svc42_Status                                   As String           '
Global G_Tab_Svc43_Status                                   As String           '
Global G_Tab_Svc44_Status                                   As String           '
Global G_Tab_Svc45_Status                                   As String           '
Global G_Tab_Svc46_Status                                   As String           '
Global G_Tab_Svc47_Status                                   As String           '
Global G_Tab_Svc48_Status                                   As String           '
Global G_Tab_Svc49_Status                                   As String           '
Global G_Tab_CCDat_Status                                   As String           '
Global G_Recursion_Count                                    As Integer          ' For Worksheet_Change invoking itself
Global G_Recursion_Time                                     As Date             '
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row numbers for different Worksheets
Global G_A_Msg_Row_No                                       As Integer          ' Administration - Messages
Global G_A_Reg_Row_No                                       As Integer          ' Administration - Regions
Global G_A_PMA_Row_No                                       As Integer          ' Administration - Permanent Memory Area
Global G_Cover_Row_No                                       As Integer          ' Front Cover
Global G_Print_Row_No                                       As Integer          ' Print Preview
Global G_Print_Row_No_C                                     As Integer          ' Print Preview - Current row number
Global G_Print_Row_No_B                                     As Integer          ' Print Preview - Bottom row number
Global G_LSave_Row_No                                       As Integer          ' Lock and Save
Global G_LSave_Row_No_C                                     As Integer          ' Lock and Save - Current row number
Global G_LSave_Row_No_B                                     As Integer          ' Lock and Save - Bottom row number
Global G_BIN_L_Row_No                                       As Integer          ' BIN List
Global G_CCDat_Row_No                                       As Integer          ' CCData
Global G_CCDat_Column                                       As String           ' CCData
Global G_Svc99_Row_No                                       As Integer          ' Any Service worksheet
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Administration - Permanent memory Area
Global G_A_A_PMA_TabCode(1024)                              As String           ' Worksheet Code (FC=Front Cover, ZC=ZCMK Creation, VQ=VSDC Questions)
Global G_A_A_PMA_Cell_ID(1024)                              As String           ' Cell address
Global G_A_A_PMA_ErrCode(1024)                              As String           ' Error Code (null=no error)
Global G_A_A_PMA_Comment(1024)                              As String           ' Comment
Global G_A_PMA_Index                                        As Integer          ' Index into arrays
Global G_A_PMA_Total                                        As Integer          ' Total number of used elements
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Cell addresses - General Purpose
Global G_GP_Range_Butt_H                                    As String           ' Button help text
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Cell Ranges
Global G_Entire                                             As Integer          ' 0 - Entire range
Global G_Question                                           As Integer          ' 1 - Question
Global G_Answer                                             As Integer          ' 2 - Answer cell
Global G_Clt_Help                                           As Integer          ' 3 - Client Help
Global G_CCM_Info                                           As Integer          ' 4 - CCM Information
Global G_Reg_AP                                             As Integer          ' 5 - AP
Global G_Reg_CE                                             As Integer          ' 6 - CEMEA
Global G_Heading                                            As Integer          ' 5 - Section heading
Global G_Footing                                            As Integer          ' 6 - Section footing
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Button positioning
Global G_Button_Top                                         As Single           ' Button location - top
Global G_Button_Left                                        As Single           ' Button location - left
Global G_Button_Width                                       As Single           ' Button size - width
Global G_Button_Height                                      As Single           ' Button size - height
Global G_Button_Offset                                      As Single           ' Space between button and next button

Global G_Button_Left_1                                      As Single           ' There can be six buttons across the tab - these are the left positions
Global G_Button_Left_2                                      As Single           '
Global G_Button_Left_3                                      As Single           '
Global G_Button_Left_4                                      As Single           '
Global G_Button_Left_5                                      As Single           '
Global G_Button_Left_6                                      As Single           '

Global G_Force_Position                                     As Boolean          ' Force repositioning of all buttons, check boxes and icons
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Print Preview
Global G_Print_Type                                         As String           ' A = All, D = Data, E = Errors
Global G_Print_Service                                      As String           ' Whether or not the Service contains rows to display
Global G_Print_Section                                      As String           ' Whether or not the Section contains rows to display
Global G_Print_Group                                        As String           ' Whether or not the Group   contains rows to display
Global G_Row_Type                                           As String           ' Refer to list of values
Global G_Prev_Row_Type                                      As String           ' Refer to list of values
Global G_Group_Start                                        As String           ' Start of Group-Together
Global G_Print_Question                                     As String           ' Y = Last question was displayed; N = Last question was not displayed
Global G_Print_Filter                                       As String           ' Heading, Internal, Answer, Empty
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Lock and Save
Global G_Lock_Password                                      As String           ' Runner-entered password to protect the locked CIQ
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Colours
' Cell fill - answer (normal)
Global G_Colour_Cell_Grey_R                                 As Integer          ' Cell fill - grey
Global G_Colour_Cell_Grey_G                                 As Integer
Global G_Colour_Cell_Grey_B                                 As Integer

' Cell fill - answer (error)
Global G_Colour_Cell_Yell_R                                 As Integer          ' Cell fill - yellow
Global G_Colour_Cell_Yell_G                                 As Integer
Global G_Colour_Cell_Yell_B                                 As Integer

' Cell fill - ?????
Global G_Colour_Cell_Whit_R                                 As Integer          ' Cell fill - white
Global G_Colour_Cell_Whit_G                                 As Integer
Global G_Colour_Cell_Whit_B                                 As Integer

' Cell border - grey
Global G_Colour_Bord_Grey_R                                 As Integer          ' Cell border - grey
Global G_Colour_Bord_Grey_G                                 As Integer
Global G_Colour_Bord_Grey_B                                 As Integer

' Button - Style 1 - Show, Hide, Print Preview, View -----------------
Global G_Colour_Butt_Back1_R                                As Integer          ' Back - Dark grey
Global G_Colour_Butt_Back1_G                                As Integer
Global G_Colour_Butt_Back1_B                                As Integer

Global G_Colour_Butt_Font1_R                                As Integer          ' Font - White
Global G_Colour_Butt_Font1_G                                As Integer
Global G_Colour_Butt_Font1_B                                As Integer

' Button - Style 2 - Show, Hide, Print Preview, View -----------------
Global G_Colour_Butt_Back2_R                                As Integer          ' Back - Very light grey
Global G_Colour_Butt_Back2_G                                As Integer
Global G_Colour_Butt_Back2_B                                As Integer

Global G_Colour_Butt_Font2_R                                As Integer          ' Font - Orange
Global G_Colour_Butt_Font2_G                                As Integer
Global G_Colour_Butt_Font2_B                                As Integer

' Button - Style 3 - Validate, Reset, Lock, Export, Print ------------
Global G_Colour_Butt_Back3_R                                As Integer          ' Back - Very light grey
Global G_Colour_Butt_Back3_G                                As Integer
Global G_Colour_Butt_Back3_B                                As Integer

Global G_Colour_Butt_Font3_R                                As Integer          ' Font - Dark blue
Global G_Colour_Butt_Font3_G                                As Integer
Global G_Colour_Butt_Font3_B                                As Integer

' Button - Style 4 - Front Cover, Next Service, Previous Service, General Help, Return
Global G_Colour_Butt_Back4_R                                As Integer          ' Back - Dark blue
Global G_Colour_Butt_Back4_G                                As Integer
Global G_Colour_Butt_Back4_B                                As Integer

Global G_Colour_Butt_Font4_R                                As Integer          ' Font - White
Global G_Colour_Butt_Font4_G                                As Integer
Global G_Colour_Butt_Font4_B                                As Integer

' Button - Style 5 - Visa Internal -----------------------------------
Global G_Colour_Butt_Back5_R                                As Integer          ' Back - Visa orange
Global G_Colour_Butt_Back5_G                                As Integer
Global G_Colour_Butt_Back5_B                                As Integer

Global G_Colour_Butt_Font5_R                                As Integer          ' Font - Black
Global G_Colour_Butt_Font5_G                                As Integer
Global G_Colour_Butt_Font5_B                                As Integer

' Information Icon - Not clicked
Global G_Colour_Icon_Blue_R                                 As Integer          ' Icon - Visa Blue
Global G_Colour_Icon_Blue_G                                 As Integer
Global G_Colour_Icon_Blue_B                                 As Integer

' Information Icon - Clicked
Global G_Colour_Icon_Oran_R                                 As Integer          ' Icon - Visa Orange
Global G_Colour_Icon_Oran_G                                 As Integer
Global G_Colour_Icon_Oran_B                                 As Integer

' Check Box - Not clicked
Global G_Colour_CBox_NSet_R                                 As Integer          ' Check Box - Not Checked
Global G_Colour_CBox_NSet_G                                 As Integer
Global G_Colour_CBox_NSet_B                                 As Integer

' Check Box - Clicked
Global G_Colour_CBox_Sett_R                                 As Integer          ' Check Box - Checked
Global G_Colour_CBox_Sett_G                                 As Integer
Global G_Colour_CBox_Sett_B                                 As Integer

' Other
Global G_Help_Icon                                          As String           ' Help icon
Global G_Check_Box_Sett                                     As String           ' Check box value - Checked
Global G_Check_Box_NSet                                     As String           ' Check box value - Not checked
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For Comments
Global Cmt                                                                      ' For accessing a comment
Global G_Comment                                            As String           ' For building a comment
Global G_Comment_Length                                     As Integer          ' Length of comment (in characters)
Global G_Comment_Width                                      As Integer
Global G_Comment_Height                                     As Integer
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Counters, etc
Global G_CWD_Count                                          As Integer          ' Counter of cells with values
Global G_Err_Count                                          As Integer          ' Counter of errors encountered during validation
Global G_Waiter                                             As Long             ' See "DoEvents"
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For detecting changes in cell values
Global G_Range_Region                                       As Range
Global G_Range_FinCty                                       As String
Global G_Range_Country                                      As String           ' Only for setting drop-down lists
Global G_Range_Product                                      As String           ' Only for setting drop-down lists
Global G_Range_Enviro                                       As Range
Global G_Range_MsgCap                                       As Range
Global G_Range_UpdTyp                                       As Range
Global G_Range_CpyBIN                                       As Range
Global G_Svc48_EP_Typ                                       As String
Global G_Range_EP_Typ                                       As Range
Global G_Range_Agreer                                       As Range
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For placing labels
Global S4_Label                                             As Label
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For password
Global G_Password                                           As String
Global G_Prot_Adm                                           As String           ' Protection of worksheets - Admin
Global G_Prot_Std                                           As String           ' Protection of worksheets - Standard
Global G_Prot_CCD                                           As String           ' Protection of worksheets - CCData
Global G_Prot_Str                                           As String           ' Protection of worksheets - Structure
Global G_Prot_LaS                                           As String           ' Protection of worksheets - Lock-and-Save
' For password - Old (only when changing the password)
Global G_Prot_Adm_O                                         As String           ' Protection of worksheets - Admin
Global G_Prot_Std_O                                         As String           ' Protection of worksheets - Standard
Global G_Prot_CCD_O                                         As String           ' Protection of worksheets - CCData
Global G_Prot_Str_O                                         As String           ' Protection of worksheets - Structure
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Miscellaneous
Global G_Runner                                             As String           ' Runner's user ID
Global G_Domain                                             As String           ' Runner's user domain
Global G_Window                                             As String           ' Runner's Windows version
Global G_Office                                             As String           ' Runner's Office version
Global G_OBuild                                             As String           ' Runner's Office build number
Global G_Caller                                             As String           ' For calling modules
Global G_Title                                              As String           ' Title for message boxes
Global G_Message                                            As String           ' Message to user
Global G_Response                                           As String           ' Response from user
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F0000_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation of global variables and constants
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set Title
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Title = "Visa CIQ"
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load environmental values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Runner = LCase(Environ("USERNAME"))
    G_Domain = LCase(Environ("USERDOMAIN"))                                     ' Should be "visa" for Visa staff
    G_Window = Application.OperatingSystem
    G_Office = Application.Version
    G_OBuild = Application.Build
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for software compatibility
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ' 1 - Operating System
    If G_Window Like "*Mac*" Then                                               ' Apple applications - Not supported
        G_Message = "This automated CIQ is not compatible with Apple" & ChrW(&HAE) & " iMac hardware. Please contact your Visa representative for a non-automated CIQ file."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        Exit Function
    End If
    
    ' 2 - Microsoft Office
    Select Case G_Office
    
    Case "16.0"                                                                 ' Office 2016 - No issues
    
    Case "15.0"                                                                 ' Office 2013 - No issues
    
    Case "14.0"                                                                 ' Office 2010 - No issues
    
    Case "12.0"                                                                 ' Office 2007 - Check Service Packs
        If G_OBuild < "6611" Then
            G_Message = "This automated CIQ is not compatible with Microsoft" & ChrW(&HAE) & " Office 2007 because you have not installed Service Pack 3. Please contact your Visa representative for a non-automated CIQ file."
            G_Response = MsgBox(G_Message, vbCritical, G_Title)
            Exit Function
        End If
    
    Case Else                                                                   ' Earlier Office - Not supported
        G_Message = "This automated CIQ is not compatible with version of Microsoft" & ChrW(&HAE) & " Office. Please contact your Visa representative for a non-automated CIQ file."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        Exit Function
    
    End Select
    
    ' 3 - 32-bit / 64-bit
    #If Win64 Then                                                              ' 64-bit Office - Not supported
'       G_Message = "This automated CIQ is not compatible with your 64-bit version of Microsoft" & ChrW(&HAE) & " Office. Please contact your Visa representative for a non-automated CIQ file."
'       G_Response = MsgBox(G_Message, vbCritical, G_Title)
'       Exit Function
    #End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load worksheet names
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    On Error Resume Next                                                        ' When macros need enabling, the G_File_Path assignment results in Runtime Error 91.
    
    G_This_File = ThisWorkbook.Name
    G_File_Path = Application.Workbooks(G_This_File).Path
    If Right(G_File_Path, 1) <> "\" Then G_File_Path = G_File_Path & "\"
    
    G_Tab_A_Msg = "Admin - Messages"
    G_Tab_A_Reg = "Admin - Regions"
    G_Tab_A_PMA = "Admin - Permanent Memory"
    G_Tab_A_Val = "Admin - Field validation"
    G_Tab_Cover = "FRONT COVER"
    G_Tab_Gen_H = "GENERAL HELP"
    G_Tab_Print = "PRINT PREVIEW"
    G_Tab_LSave = "LOCK & SAVE"
    G_Tab_Svc31 = "BIN LIST"
    G_Tab_Svc34 = "VISA SMART DEBIT CREDIT (VSDC)"
    G_Tab_Svc35 = "VERIFIED BY VISA (VBV)"
    G_Tab_Svc36 = "CVV - iCVV - CVV2"
    G_Tab_Svc37 = "PIN PROCESSING"
    G_Tab_Svc38 = "STAND-IN PROCESSING (STIP)"
    G_Tab_Svc40 = "VISA DIRECT"
    G_Tab_Svc41 = "ALTERNATE AUTHORIZATION ROUTING"
    G_Tab_Svc42 = "CURRENCY CONVERSION OPTIONS"
    G_Tab_Svc43 = "ADDITIONAL PROCESSING OPTIONS"
    G_Tab_Svc44 = "SMS REPORTS & RAW DATA"
    G_Tab_Svc45 = "VROL FINANCIALS"
    G_Tab_Svc46 = "SETTLEMENT AND VSS REPORTING"
    G_Tab_Svc47 = "CLEARING"
    G_Tab_Svc48 = "APPLICATION PROCESSOR - CIB"
    G_Tab_Svc49 = "ADDITIONAL REPORTS"
    G_Tab_CCDat = "CCData"
    
    G_Tab_LockA = "Locked CIQ Data (All)"
    G_Tab_LockC = "Locked CIQ Data (Completed)"
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_GP_Range_Butt_H = "A2:A13"
    
    G_FC_Range_FinNam = "D15"
    G_FC_Range_FinBID = "D16"
    G_FC_Range_FinCon = "D17"
    G_FC_Range_FinMel = "D18"
    G_FC_Range_FinTel = "D19"
    
    G_FC_Range_PrcNam = "D22"
    G_FC_Range_PrcBID = "D23"
    G_FC_Range_PrcCon = "D24"
    G_FC_Range_PrcMel = "D25"
    G_FC_Range_PrcTel = "D26"
    
    G_FC_Range_Region = "M15"
    G_FC_Range_FinCty = "M16"
    G_FC_Range_Enviro = "M17"
    G_FC_Range_MsgCap = "M18"
    G_FC_Range_EffDat = "M19"
    G_FC_Range_UpdTyp = "M20"
    
    G_FC_Range_BusJus = "D28"
    G_FC_Range_PCR_No = "M22"
    G_FC_Range_CpyBIN = "M23"
    
    G_FC_Range_Stat31 = "E31"                                                   ' Service 31 - BIN List
    G_FC_Range_Stat36 = "E32"                                                   ' Service 36 - CVV / iCVV / CVV2
    G_FC_Range_Stat42 = "E33"                                                   ' Service 42 - Currency Conversion Options
    G_FC_Range_Stat37 = "E34"                                                   ' Service 37 - PIN Processing
    G_FC_Range_Stat38 = "E35"                                                   ' Service 38 - Stand-In Processing (STIP)
    G_FC_Range_Stat34 = "E36"                                                   ' Service 34 - Visa Smart Debit/Credit (VSDC)
    G_FC_Range_Stat35 = "E37"                                                   ' Service 35 - Verified by Visa (VbV)
    G_FC_Range_Stat40 = "E38"                                                   ' Service 40 - Visa Direct
    G_FC_Range_Stat43 = "E39"                                                   ' Service 43 - Additional Processing Options
    G_FC_Range_Stat41 = "E40"                                                   ' Service 41 - Alternate Authorisation Routing
    G_FC_Range_Stat44 = "E41"                                                   ' Service 44 - SMS Reports and Raw Data
    G_FC_Range_Stat45 = "E42"                                                   ' Service 45 - Visa Resolve Online (VROL) Financials
    G_FC_Range_Stat47 = "E43"                                                   ' Service 47 - Clearing
    G_FC_Range_Stat48 = "E44"                                                   ' Service 48 - Application Processor / CIB
    G_FC_Range_Stat46 = "E45"                                                   ' Service 46 - Settlement and VSS Reporting
    G_FC_Range_Stat49 = "E46"                                                   ' Service 49 - Additional Reports
    
    G_FC_Range_ARep_1 = "F53"                                                   ' Front Cover - Authorised Representative 1
    G_LS_Range_ARep_1 = "F23"                                                   ' Locked Copy - Authorised Representative 1     (not referenced anywhere)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range types
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Entire = 0
    G_Question = 1
    G_Answer = 2
    G_Clt_Help = 3
    G_CCM_Info = 4
    G_Reg_AP = 5
    G_Reg_CE = 6
    G_Heading = 5
    G_Footing = 6
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - all Service tabs
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3100_Initialisation()
    G_Caller = F3400_Initialisation()
    G_Caller = F3500_Initialisation()
    G_Caller = F3600_Initialisation()
    G_Caller = F3700_Initialisation()
    G_Caller = F3800_Initialisation()
    G_Caller = F4000_Initialisation()
    G_Caller = F4100_Initialisation()
    G_Caller = F4200_Initialisation()
    G_Caller = F4300_Initialisation()
    G_Caller = F4400_Initialisation()
    G_Caller = F4500_Initialisation()
    G_Caller = F4600_Initialisation()
    G_Caller = F4700_Initialisation()
    G_Caller = F4800_Initialisation()
    G_Caller = F4900_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set Environment, Message Capability and Update Type (needed for assessing validity of services)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_FC_Value_Region = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_Region).Value)        ' Store the Region value
    G_FC_Value_FinCty = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinCty).Value)        ' Store the Country value
    
    G_FC_Value_Enviro = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_Enviro).Value)        ' Environment
    G_FC_Value_MsgCap = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_MsgCap).Value)        ' Message Capability
    G_FC_Value_UpdTyp = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_UpdTyp).Value)        ' Update Type
    G_FC_Value_CpyBIN = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_CpyBIN).Value)        ' Copy BIN
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reset array index and total to zero to force loading of arrays
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_A_PMA_Index = 0
    G_A_PMA_Total = 0
    G_Admin_Index = 0
    G_Admin_Total = 0
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reload workbook and worksheet protection status from the Permanent Memory Area
    ' - Then protect anything that is unprotected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_SpreadSht_Status = F0300_Access_Value("Protected", "Workbook", "G", "")
    G_Tab_A_Msg_Status = F0300_Access_Value("Protected", "A_Msg", "G", "")
    G_Tab_A_Reg_Status = F0300_Access_Value("Protected", "A_Reg", "G", "")
    G_Tab_A_PMA_Status = F0300_Access_Value("Protected", "A_PMA", "G", "")
    G_Tab_A_Val_Status = F0300_Access_Value("Protected", "A_Val", "G", "")
    G_Tab_Cover_Status = F0300_Access_Value("Protected", "Cover", "G", "")
    G_Tab_Gen_H_Status = F0300_Access_Value("Protected", "Gen_H", "G", "")
    G_Tab_Print_Status = F0300_Access_Value("Protected", "Print", "G", "")
    G_Tab_Svc31_Status = F0300_Access_Value("Protected", "Svc31", "G", "")
    G_Tab_Svc34_Status = F0300_Access_Value("Protected", "Svc34", "G", "")
    G_Tab_Svc35_Status = F0300_Access_Value("Protected", "Svc35", "G", "")
    G_Tab_Svc36_Status = F0300_Access_Value("Protected", "Svc36", "G", "")
    G_Tab_Svc37_Status = F0300_Access_Value("Protected", "Svc37", "G", "")
    G_Tab_Svc38_Status = F0300_Access_Value("Protected", "Svc38", "G", "")
    G_Tab_Svc40_Status = F0300_Access_Value("Protected", "Svc40", "G", "")
    G_Tab_Svc41_Status = F0300_Access_Value("Protected", "Svc41", "G", "")
    G_Tab_Svc42_Status = F0300_Access_Value("Protected", "Svc42", "G", "")
    G_Tab_Svc43_Status = F0300_Access_Value("Protected", "Svc43", "G", "")
    G_Tab_Svc44_Status = F0300_Access_Value("Protected", "Svc44", "G", "")
    G_Tab_Svc45_Status = F0300_Access_Value("Protected", "Svc45", "G", "")
    G_Tab_Svc46_Status = F0300_Access_Value("Protected", "Svc46", "G", "")
    G_Tab_Svc47_Status = F0300_Access_Value("Protected", "Svc47", "G", "")
    G_Tab_Svc48_Status = F0300_Access_Value("Protected", "Svc48", "G", "")
    G_Tab_Svc49_Status = F0300_Access_Value("Protected", "Svc49", "G", "")
    G_Tab_CCDat_Status = F0300_Access_Value("Protected", "CCDat", "G", "")
    
    G_Caller = F9982_Protect_All()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reset error count to zero
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Err_Count = 0
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reset passwords
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Password = ""
    
    G_Prot_Adm_O = ""                                                           ' Password - Old - Use F999_Update_Footers to apply new password
    G_Prot_Std_O = ""
    G_Prot_CCD_O = ""
    G_Prot_Str_O = "RDWL"
    
    G_Prot_Adm = ""                                                             ' Protection of worksheets - Admin
    G_Prot_Std = ""                                                             ' Protection of worksheets - Standard
    G_Prot_CCD = ""                                                             ' Protection of worksheets - CCData
    G_Prot_Str = "RDWL"                                                         ' Protection of workbook structure
    G_Prot_LaS = "jO&9f!1Y"                                                     ' Protection of worksheets - Lock-and-Save
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set standard colours
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Init_Colours()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Force Button Repositioning
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Force_Position = False
    
End Function                                                                    ' of F0000_Initialisation
Function F0000_Init_Colours()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation of global variables and constants for colour constants only
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F0000_Country                                       As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Cell fill - Grey
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Cell_Grey_R = 220
    G_Colour_Cell_Grey_G = 230
    G_Colour_Cell_Grey_B = 241
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Cell fill - Yellow
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Cell_Yell_R = 255
    G_Colour_Cell_Yell_G = 255
    G_Colour_Cell_Yell_B = 102
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Cell fill - White
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Cell_Whit_R = 255
    G_Colour_Cell_Whit_G = 255
    G_Colour_Cell_Whit_B = 255
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Cell border - Grey
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Bord_Grey_R = 128
    G_Colour_Bord_Grey_G = 128
    G_Colour_Bord_Grey_B = 128
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Style 1 - Dark grey / White font
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Butt_Back1_R = 92
    G_Colour_Butt_Back1_G = 92
    G_Colour_Butt_Back1_B = 92
    
    G_Colour_Butt_Font1_R = 255
    G_Colour_Butt_Font1_G = 255
    G_Colour_Butt_Font1_B = 255
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Style 2 - Very light grey / Orange font
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Butt_Back2_R = 250
    G_Colour_Butt_Back2_G = 250
    G_Colour_Butt_Back2_B = 250
    
    G_Colour_Butt_Font2_R = 200
    G_Colour_Butt_Font2_G = 100
    G_Colour_Butt_Font2_B = 0
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Style 3 - Very light grey / Dark blue font
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Butt_Back3_R = 250
    G_Colour_Butt_Back3_G = 250
    G_Colour_Butt_Back3_B = 250
    
    G_Colour_Butt_Font3_R = 0
    G_Colour_Butt_Font3_G = 0
    G_Colour_Butt_Font3_B = 160
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Style 4 - Deep blue / White font
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Butt_Back4_R = 0
    G_Colour_Butt_Back4_G = 0
    G_Colour_Butt_Back4_B = 160
    
    G_Colour_Butt_Font4_R = 255
    G_Colour_Butt_Font4_G = 255
    G_Colour_Butt_Font4_B = 255
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Style 5 - Visa Orange / Black font
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Butt_Back5_R = 255
    G_Colour_Butt_Back5_G = 160
    G_Colour_Butt_Back5_B = 0
    
    G_Colour_Butt_Font5_R = 0
    G_Colour_Butt_Font5_G = 0
    G_Colour_Butt_Font5_B = 0
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Icon - Visa Blue
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Icon_Blue_R = 0
    G_Colour_Icon_Blue_G = 35
    G_Colour_Icon_Blue_B = 160
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Icon - Visa Orange
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_Icon_Oran_R = 255
    G_Colour_Icon_Oran_G = 160
    G_Colour_Icon_Oran_B = 0
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Not Checked - Grey
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_CBox_NSet_R = 127
    G_Colour_CBox_NSet_G = 127
    G_Colour_CBox_NSet_B = 127
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Checked - Very dark blue
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Colour_CBox_Sett_R = 0
    G_Colour_CBox_Sett_G = 0
    G_Colour_CBox_Sett_B = 128
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set values of special characters
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Help_Icon = Chr(105)
    G_Check_Box_Sett = Chr(254)
    G_Check_Box_NSet = Chr(168)
    
End Function                                                                    ' of F0000_Init_Colours
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Module01_Messages"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Global G_A_Admin_TabCode(1024)                              As String           ' Worksheet Code (FC=Front Cover, ZC=ZCMK Creation, VQ=VSDC Questions)
Global G_A_Admin_Cell_ID(1024)                              As String           ' Cell address
Global G_A_Admin_ErrCode(1024)                              As String           ' Error Code (null=no error)
Global G_A_Admin_Comment(1024)                              As String           ' Comment
Global G_Admin_Index                                        As Integer          ' Index into arrays
Global G_Admin_Total                                        As Integer          ' Total number of used elements
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F0100_Find_Comment(F0100_TabCode, F0100_Cell_ID, F0100_ErrCode)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Find the comment text appropriate to the situation
    ' - F0100_TabCode   FC = Front Cover, ZC = ZCMK Creation, VQ = VSDC Questions
    ' - F0100_Cell_ID   The cell where the comment is to be located
    ' - F0100_ErrCode   The Error Code ("" = No error)
    ' Note that some errors can be on multiple lines. These are indicated by "Continued" as the Error Code
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F0100_Save_TabCode                                  As String
    Dim F0100_Save_Cell_ID                                  As String
    Dim F0100_Save_ErrCode                                  As String
    Dim F0100_Save_Comment                                  As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check whether arrays have been loaded. If not, load them now.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Admin_Total = 0 Then
        G_Admin_Index = 0
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Read from the Administration tab. This will be a hidden worksheet for non-administrators.
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_A_Msg_Row_No = 3                                                                  ' Start looking at this row
        F0100_Save_TabCode = UCase(Worksheets(G_Tab_A_Msg).Cells(G_A_Msg_Row_No, 1))        ' Select the data in Column A
        While F0100_Save_TabCode <> ""                                                      ' Keep on looking whilst still finding data
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' Read the data and store it in temporary variables
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            F0100_Save_Cell_ID = UCase(Worksheets(G_Tab_A_Msg).Cells(G_A_Msg_Row_No, 3))    ' Store the Cell Address
            F0100_Save_ErrCode = UCase(Worksheets(G_Tab_A_Msg).Cells(G_A_Msg_Row_No, 4))    ' Store the Error Code
            F0100_Save_Comment = Worksheets(G_Tab_A_Msg).Cells(G_A_Msg_Row_No, 5)           ' Store the Comment
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' Store the saved data in the arrays (converted to uppercase)
            ' - Normal data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If F0100_Save_ErrCode <> "CONTINUED" Then
                G_Admin_Index = G_Admin_Index + 1                                           ' Increase array index
                G_A_Admin_TabCode(G_Admin_Index) = F0100_Save_TabCode                       ' Store the Worksheet Code
                G_A_Admin_Cell_ID(G_Admin_Index) = F0100_Save_Cell_ID                       ' Store the Cell Address
                G_A_Admin_ErrCode(G_Admin_Index) = F0100_Save_ErrCode                       ' Store the Error Code
                G_A_Admin_Comment(G_Admin_Index) = F0100_Save_Comment                       ' Store the Comment
            End If
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' Store the continuation data in the current arrays
            ' - Continuation data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If F0100_Save_ErrCode = "CONTINUED" Then
                G_A_Admin_Comment(G_Admin_Index) = G_A_Admin_Comment(G_Admin_Index) & Chr(10) & F0100_Save_Comment
            End If
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' All done for current row in the worksheet data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            G_A_Msg_Row_No = G_A_Msg_Row_No + 1                                             ' Move down one row
            F0100_Save_TabCode = UCase(Worksheets(G_Tab_A_Msg).Cells(G_A_Msg_Row_No, 1))    ' Select the data in Column A
        Wend                                                                                ' Go around again
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Arrays loaded. Now tidy up.
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Admin_Total = G_Admin_Index                                                       ' Store the total number of used elements
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing if arrays were not already loaded
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert requested Error Code if this is not an error situation
    ' - Input parameter     ""
    ' - Array value         "No error"
    ' Convert into upper case
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0100_ErrCode = "" Then F0100_ErrCode = "No error"
    F0100_ErrCode = UCase(F0100_ErrCode)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Look through the arrays for the specified data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_Admin_Index = 1 To G_Admin_Total
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Process if this is the matching data
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_A_Admin_TabCode(G_Admin_Index) = F0100_TabCode And _
           G_A_Admin_Cell_ID(G_Admin_Index) = F0100_Cell_ID And _
           G_A_Admin_ErrCode(G_Admin_Index) = F0100_ErrCode Then
            
            G_Comment = G_A_Admin_Comment(G_Admin_Index)                        ' Store the matching comment
            Exit Function                                                       ' All done
            
        End If
    
    Next G_Admin_Index                                                          ' Not found yet - go around for next array elements
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' No Comment!
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0100_ErrCode = "NO ERROR" Then                                          ' No error: no problem
        G_Comment = ""
        Exit Function                                                           ' All done
        
    Else                                                                        ' Error Code specified: build comment that lists the parameters
        G_Comment = "No comment has been defined for " & _
                    "Worksheet """ & F0100_TabCode & """, " & _
                    "Cell Address """ & F0100_Cell_ID & """, " & _
                    "Error Code """ & F0100_ErrCode & """."
        Exit Function                                                           ' All done
    End If
    
End Function                                                                    ' of F0100_Find_Comment
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------


Attribute VB_Name = "Module02_Regions"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F0200_Find_NNSS_Existance(F0200_Country)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Find the NNSS existance (Yes/No) for the specified country
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F0200_Cell
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If country has not been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0200_Country = "" Then
        F0200_Find_NNSS_Existance = "Country?"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Locate the country
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    With Worksheets(G_Tab_A_Reg).Cells
        Set F0200_Cell = .Find(What:=F0200_Country, _
                             LookAt:=xlWhole, _
                          MatchCase:=True, _
                       SearchFormat:=False)
        
        If Not F0200_Cell Is Nothing Then
            G_A_Reg_Row_No = F0200_Cell.Row
            F0200_Find_NNSS_Existance = Worksheets(G_Tab_A_Reg).Range("G" & F0200_Cell.Row).Value
            Exit Function
        End If
    End With
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Country was not found in the list
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F0200_Find_NNSS_Existance = "N"                                             ' Assume no NNSS
    
End Function                                                                    ' of F0200_Find_NNSS_Existance
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module03_Memory"
Option Explicit
Function F0300_Access_Value(F0300_TabCode, F0300_ValCode, F0300_ActCode, F0300_Value)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This allows data to be stored and retrievel between macros / button clicks
    ' - F0300_TabCode   FC = Front Cover,                           GH = General Help,                  PP = Print Preview,
    '                   BL = BIN List,                              AC = Account Range Maintenance,     EM = Visa Smart Debit Credit (VSDC),
    '                   VV = Verified by Visa (VbV),                CV = CVV / iCVV / CVV2,             PP = PIN Processing,
    '                   S1 = Stand-In Processing (STIP),            VD = Visa Direct,                   A1 = Alternate Authorisation Routing,
    '                   MO = Currency Conversion Options,           PO = Additional Processing Options, RR = SMS Reports & Raw Data,
    '                   VR = Visa Resolve Online (VROL) Financials, VS = Settlement and VSS Reporting,  CL = Clearing,
    '                   CB = Application Processor / CIB,           VR = Additional Reports
    '
    ' - F0300_ValCode   The cell where the comment is to be located
    '
    ' - F0300_ActCode   The Action Code ("G" = get data; "U" = update data)
    '
    ' - F0300_Value     The value that is to be stored (for U=Update only)
    ' The existing value is returned in F0300_Access_Value (for G=Get Data only)
    ' NOTE: All references to "Worksheets" have been changed to "ThisWorkbook.Worksheets" for "G" access only, as this routine may be invoked from
    '       ThisWorkbook "Private Sub Workbook_Open()" in protected mode (when client has received the file by e-mail)
    '       Error = "Run-time error '1004': Method 'Worksheets' of object _Global failed". The underscore indicates a non-fully qualified reference.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F0300_This_TabCode                                  As String
    Dim F0300_This_ValCode                                  As String
    Dim F0300_This_ActCode                                  As String
    
    Dim F0300_Save_TabCode                                  As String
    Dim F0300_Save_ValCode                                  As String
    Dim F0300_Save_ActCode                                  As String
    Dim F0300_Save_ExValue                                  As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert parameters to uppercase
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F0300_This_TabCode = UCase(F0300_TabCode)
    F0300_This_ValCode = UCase(F0300_ValCode)
    F0300_This_ActCode = UCase(F0300_ActCode)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read from the Internal tables tab (which will be a hidden tab for non-administrators)
    '-------------------------------------------------------'-------------------'-------------------'------------------------------------------------------------------
    G_A_PMA_Row_No = 3                                                                              ' Start looking at this row
    F0300_Save_TabCode = UCase(ThisWorkbook.Worksheets(G_Tab_A_PMA).Cells(G_A_PMA_Row_No, 1))       ' Select the data in Column A
    While F0300_Save_TabCode <> ""                                                                  ' Keep on looking whilst still finding data
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Read the data and store it in temporary variables
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        F0300_Save_ValCode = UCase(ThisWorkbook.Worksheets(G_Tab_A_PMA).Cells(G_A_PMA_Row_No, 2))   ' Store the Value Code
        F0300_Save_ExValue = ThisWorkbook.Worksheets(G_Tab_A_PMA).Cells(G_A_PMA_Row_No, 3)          ' Store the existing value (no need to convert the case)
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Process if this is the matching data
        '---------------------------------------------------'-------------------'-------------------'------------------------------------------------------------------
        If F0300_Save_TabCode = F0300_This_TabCode And _
           F0300_Save_ValCode = F0300_This_ValCode Then
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' Process Action Code "G" (Get stored data)
            '-----------------------------------------------'-------------------'-------------------'------------------------------------------------------------------
            If F0300_This_ActCode = "G" Then
                F0300_Access_Value = F0300_Save_ExValue                                             ' Provide existing value
                Exit Function                                                                       ' All done
            End If
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' Process Action Code "U" (Update stored data)
            '-----------------------------------------------'-------------------'-------------------'------------------------------------------------------------------
            If F0300_This_ActCode = "U" Then
                If G_Tab_A_PMA_Status = "P" Then                                                    ' If this worksheet is protected
                    Worksheets(G_Tab_A_PMA).Unprotect Password:=G_Prot_Adm                          ' Unprotect the worksheet
                    G_Tab_A_PMA_Status = "U"                                                        ' Indicate worksheet is now unprotected
                End If
                
                Worksheets(G_Tab_A_PMA).Cells(G_A_PMA_Row_No, 3).Value = F0300_Value                ' Update existing value
                F0300_Access_Value = ""                                                             ' Return empty value to indicate success
                Exit Function                                                                       ' All done
            End If
            
        End If
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' All done for current row in the worksheet data
        '---------------------------------------------------'-------------------'-------------------'------------------------------------------------------------------
        G_A_PMA_Row_No = G_A_PMA_Row_No + 1                                                         ' Move down one row
        F0300_Save_TabCode = UCase(ThisWorkbook.Worksheets(G_Tab_A_PMA).Cells(G_A_PMA_Row_No, 1))   ' Select the data in Column A
    Wend                                                                                            ' Go around again
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Not found
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F0300_Access_Value = "No item has been defined for " & _
                         "Worksheet """ & F0300_TabCode & """, " & _
                         "Value Code """ & F0300_ValCode & """."
    Exit Function                                                               ' All done
    
End Function                                                                    ' of F0300_Access_Value
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Module10_Button_Pos"
Option Explicit
Function F1000_Position_Buttons_on_Sheet(F1000_Tab)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on the requested tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F1000_Tab
    
    Case G_Tab_A_Msg
        G_Caller = F1001_Position_Buttons_on_Sheet01
    
    Case G_Tab_A_Reg
        G_Caller = F1002_Position_Buttons_on_Sheet02
    
    Case G_Tab_A_PMA
        G_Caller = F1003_Position_Buttons_on_Sheet03
    
    Case G_Tab_A_Val
        G_Caller = F1004_Position_Buttons_on_Sheet04
    
    Case G_Tab_Cover
        G_Caller = F1020_Position_Buttons_on_Sheet20
    
    Case G_Tab_Gen_H
        G_Caller = F1021_Position_Buttons_on_Sheet21
    
    Case G_Tab_Print
        G_Caller = F1023_Position_Buttons_on_Sheet23
    
    Case G_Tab_Svc31
        G_Caller = F1031_Position_Buttons_on_Sheet31
    
    Case G_Tab_Svc34
        G_Caller = F1034_Position_Buttons_on_Sheet34
    
    Case G_Tab_Svc35
        G_Caller = F1035_Position_Buttons_on_Sheet35
    
    Case G_Tab_Svc36
        G_Caller = F1036_Position_Buttons_on_Sheet36
    
    Case G_Tab_Svc37
        G_Caller = F1037_Position_Buttons_on_Sheet37
    
    Case G_Tab_Svc38
        G_Caller = F1038_Position_Buttons_on_Sheet38
    
    Case G_Tab_Svc40
        G_Caller = F1040_Position_Buttons_on_Sheet40
    
    Case G_Tab_Svc41
        G_Caller = F1041_Position_Buttons_on_Sheet41
    
    Case G_Tab_Svc42
        G_Caller = F1042_Position_Buttons_on_Sheet42
    
    Case G_Tab_Svc43
        G_Caller = F1043_Position_Buttons_on_Sheet43
    
    Case G_Tab_Svc44
        G_Caller = F1044_Position_Buttons_on_Sheet44
    
    Case G_Tab_Svc45
        G_Caller = F1045_Position_Buttons_on_Sheet45
    
    Case G_Tab_Svc46
        G_Caller = F1046_Position_Buttons_on_Sheet46
    
    Case G_Tab_Svc47
        G_Caller = F1047_Position_Buttons_on_Sheet47
    
    Case G_Tab_Svc48
        G_Caller = F1048_Position_Buttons_on_Sheet48
    
    Case G_Tab_Svc49
        G_Caller = F1049_Position_Buttons_on_Sheet49
    
    End Select
    
End Function
Function F1001_Position_Buttons_on_Sheet01()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 01 - Admin - Messages
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock / Admin Lock - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 3
    
    Worksheets(G_Tab_A_Msg).AM_Admin_Unlock.Top = G_Button_Top
    Worksheets(G_Tab_A_Msg).AM_Admin_Unlock.Left = 3
    Worksheets(G_Tab_A_Msg).AM_Admin_Unlock.Width = 100
    Worksheets(G_Tab_A_Msg).AM_Admin_Unlock.Height = 25
    Worksheets(G_Tab_A_Msg).AM_Admin_Unlock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_Msg).AM_Admin_Unlock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
    Worksheets(G_Tab_A_Msg).AM_Admin_Lock.Top = G_Button_Top
    Worksheets(G_Tab_A_Msg).AM_Admin_Lock.Left = 106
    Worksheets(G_Tab_A_Msg).AM_Admin_Lock.Width = 100
    Worksheets(G_Tab_A_Msg).AM_Admin_Lock.Height = 25
    Worksheets(G_Tab_A_Msg).AM_Admin_Lock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_Msg).AM_Admin_Lock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
End Function                                                                    ' of F1001_Position_Buttons_on_Sheet01
Function F1002_Position_Buttons_on_Sheet02()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 02 - Admin - Regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock / Admin Lock - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 3
    
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.Top = G_Button_Top
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.Left = 3
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.Width = 100
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.Height = 25
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.Font.Size = 12
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_Reg).AR_Admin_Unlock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.Top = G_Button_Top
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.Left = 106
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.Width = 100
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.Height = 25
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.Font.Size = 12
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_Reg).AR_Admin_Lock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
End Function                                                                    ' of F1002_Position_Buttons_on_Sheet02
Function F1003_Position_Buttons_on_Sheet03()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 03 - Admin - Permanent Memory Area
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock / Admin Lock - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 3
    
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.Top = G_Button_Top
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.Left = 3
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.Width = 100
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.Height = 25
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.Font.Size = 12
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_PMA).PM_Admin_Unlock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.Top = G_Button_Top
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.Left = 106
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.Width = 100
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.Height = 25
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.Font.Size = 12
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_PMA).PM_Admin_Lock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
End Function                                                                    ' of F1003_Position_Buttons_on_Sheet03
Function F1004_Position_Buttons_on_Sheet04()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 04 - Admin - Field Validation Lists
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock / Admin Lock - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 3
    
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.Top = G_Button_Top
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.Left = 3
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.Width = 100
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.Height = 25
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.Font.Size = 12
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_Val).FV_Admin_Unlock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.Top = G_Button_Top
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.Left = 106
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.Width = 100
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.Height = 25
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.Font.Size = 12
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.ForeColor = RGB(G_Colour_Butt_Font5_R, G_Colour_Butt_Font5_G, G_Colour_Butt_Font5_B)
    Worksheets(G_Tab_A_Val).FV_Admin_Lock.BackColor = RGB(G_Colour_Butt_Back5_R, G_Colour_Butt_Back5_G, G_Colour_Butt_Back5_B)
    
End Function                                                                    ' of F1004_Position_Buttons_on_Sheet04
Function F1020_Position_Buttons_on_Sheet20()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 20 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Cover).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Cover).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Buttons_H.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Cover).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Reset Form Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Cover).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Button_U1.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Cover).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Cover).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Cover).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Button_U2.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Cover).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Cover).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Validate All Services
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Cover).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Button_U3.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Cover).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Cover).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Cover).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Button_U4.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Cover).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Cover).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Cover).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Button_U5.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Cover).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Cover).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Cover).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).GP_Button_U6.AutoSize = False
        Worksheets(G_Tab_Cover).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Cover).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Cover).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Cover).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Cover).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Cover).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Cover).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check boxes for Services - Cell B31 to B47 inclusive
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 0.75
    G_Button_Left = 11.25
    G_Button_Width = 16.5
    G_Button_Height = 16.5
    
    For G_Cover_Row_No = 1 To 30
        If Worksheets(G_Tab_Cover).Cells(G_Cover_Row_No, 1).EntireRow.Hidden = False Then _
                                                                            G_Button_Top = G_Button_Top + Worksheets(G_Tab_Cover).Cells(G_Cover_Row_No, 1).Height
    Next G_Cover_Row_No
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S31.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S31.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S31.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S31.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S31.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S31.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S31.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S31.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S31.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S31.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S36.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S36.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S36.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S36.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S36.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S36.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S36.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S36.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S36.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S36.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S42.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S42.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S42.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S42.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S42.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S42.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S42.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S42.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S42.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S42.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S37.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S37.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S37.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S37.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S37.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S37.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S37.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S37.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S37.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S37.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S38.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S38.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S38.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S38.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S38.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S38.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S38.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S38.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S38.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S38.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S34.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S34.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S34.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S34.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S34.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S34.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S34.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S34.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S34.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S34.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S35.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S35.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S35.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S35.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S35.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S35.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S35.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S35.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S35.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S35.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S40.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S40.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S40.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S40.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S40.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S40.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S40.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S40.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S40.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S40.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S43.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S43.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S43.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S43.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S43.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S43.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S43.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S43.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S43.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S43.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S41.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S41.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S41.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S41.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S41.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S41.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S41.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S41.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S41.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S41.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S44.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S44.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S44.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S44.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S44.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S44.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S44.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S44.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S44.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S44.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S45.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S45.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S45.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S45.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S45.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S45.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S45.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S45.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S45.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S45.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S47.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S47.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S47.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S47.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S47.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S47.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S47.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S47.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S47.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S47.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S48.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S48.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S48.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S48.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S48.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S48.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S48.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S48.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S48.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S48.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S46.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S46.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S46.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S46.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S46.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S46.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S46.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S46.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S46.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S46.Font.Size = 18
    End If
    
    G_Button_Top = G_Button_Top + 19.5
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Service_S49.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Service_S49.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Service_S49.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Service_S49.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_Service_S49.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Service_S49.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Service_S49.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Service_S49.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Service_S49.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Service_S49.Font.Size = 18
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check box - I Agree - Cell C52
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = -1.5
    G_Button_Left = 78
    G_Button_Width = 16.5
    G_Button_Height = 16.5
    
    For G_Cover_Row_No = 1 To 51
        If Worksheets(G_Tab_Cover).Cells(G_Cover_Row_No, 1).EntireRow.Hidden = False Then _
                                                                            G_Button_Top = G_Button_Top + Worksheets(G_Tab_Cover).Cells(G_Cover_Row_No, 1).Height
    Next G_Cover_Row_No
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_I_Agree.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_I_Agree.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_I_Agree.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_I_Agree.Font.Size <> 18 Then
        Worksheets(G_Tab_Cover).FC_I_Agree.AutoSize = False
        Worksheets(G_Tab_Cover).FC_I_Agree.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_I_Agree.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_I_Agree.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_I_Agree.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_I_Agree.Font.Size = 18
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Lock and Save - Cell K54
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 615
    G_Button_Width = 126.75
    G_Button_Height = 24
    
    For G_Cover_Row_No = 1 To 53
        If Worksheets(G_Tab_Cover).Cells(G_Cover_Row_No, 1).EntireRow.Hidden = False Then _
                                                                            G_Button_Top = G_Button_Top + Worksheets(G_Tab_Cover).Cells(G_Cover_Row_No, 1).Height
    Next G_Cover_Row_No
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Cover).FC_Button_LS.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Cover).FC_Button_LS.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Cover).FC_Button_LS.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Cover).FC_Button_LS.Font.Size <> 12 Then
        Worksheets(G_Tab_Cover).FC_Button_LS.AutoSize = False
        Worksheets(G_Tab_Cover).FC_Button_LS.Top = G_Button_Top
        Worksheets(G_Tab_Cover).FC_Button_LS.Left = G_Button_Left
        Worksheets(G_Tab_Cover).FC_Button_LS.Width = G_Button_Width
        Worksheets(G_Tab_Cover).FC_Button_LS.Height = G_Button_Height
        Worksheets(G_Tab_Cover).FC_Button_LS.Font.Size = 12
        Worksheets(G_Tab_Cover).FC_Button_LS.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Cover).FC_Button_LS.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
End Function                                                                    ' of F1020_Position_Buttons_on_Sheet20
Function F1021_Position_Buttons_on_Sheet21()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 21 - General Help
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Return - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Gen_H).GH_Return.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Gen_H).GH_Return.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Gen_H).GH_Return.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Gen_H).GH_Return.Font.Size <> 12 Then
        Worksheets(G_Tab_Gen_H).GH_Return.AutoSize = False
        Worksheets(G_Tab_Gen_H).GH_Return.Top = G_Button_Top
        Worksheets(G_Tab_Gen_H).GH_Return.Left = G_Button_Left
        Worksheets(G_Tab_Gen_H).GH_Return.Width = G_Button_Width
        Worksheets(G_Tab_Gen_H).GH_Return.Height = G_Button_Height
        Worksheets(G_Tab_Gen_H).GH_Return.Font.Size = 12
        Worksheets(G_Tab_Gen_H).GH_Return.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Gen_H).GH_Return.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1021_Position_Buttons_on_Sheet21
Function F1023_Position_Buttons_on_Sheet23()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 23 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Print).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Help.AutoSize = False
        Worksheets(G_Tab_Print).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Print).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Print).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Print).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Buttons_H.AutoSize = False
        Worksheets(G_Tab_Print).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Print).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Print).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Button_U1.AutoSize = False
        Worksheets(G_Tab_Print).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Print).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Print).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' View All
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Print).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Button_U2.AutoSize = False
        Worksheets(G_Tab_Print).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Print).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Print).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' View Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Print).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Button_U3.AutoSize = False
        Worksheets(G_Tab_Print).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Print).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Print).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' View Errors
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Print).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Button_U4.AutoSize = False
        Worksheets(G_Tab_Print).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Print).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Print).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Export
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Print).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Button_U5.AutoSize = False
        Worksheets(G_Tab_Print).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Print).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Print).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Print
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Print).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Print).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Print).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Print).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Print).GP_Button_U6.AutoSize = False
        Worksheets(G_Tab_Print).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Print).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Print).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Print).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Print).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Print).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Print).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
End Function                                                                    ' of F1023_Position_Buttons_on_Sheet23
Function F1031_Position_Buttons_on_Sheet31()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 31 - BIN List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc31).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Help.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc31).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc31).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc31).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Buttons_H.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc31).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc31).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Button_U1.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc31).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc31).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc31).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Button_U2.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc31).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc31).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc31).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Button_U3.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc31).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc31).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc31).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Button_U4.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc31).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc31).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc31).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Button_U5.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc31).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc31).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc31).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc31).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc31).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc31).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc31).GP_Button_U6.AutoSize = False
        Worksheets(G_Tab_Svc31).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc31).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc31).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc31).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc31).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc31).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc31).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1031_Position_Buttons_on_Sheet31
Function F1034_Position_Buttons_on_Sheet34()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc34).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc34).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc34).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc34).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc34).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc34).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc34).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc34).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc34).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc34).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc34).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc34).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc34).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc34).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc34).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc34).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc34).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc34).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc34).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc34).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc34).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc34).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc34).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc34).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc34).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc34).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc34).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc34).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc34).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc34).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc34).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1034_Position_Buttons_on_Sheet34
Function F1035_Position_Buttons_on_Sheet35()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 35 - Verified by Visa (VbV)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc35).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc35).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc35).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc35).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc35).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc35).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc35).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc35).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc35).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc35).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc35).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc35).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc35).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc35).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc35).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc35).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc35).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc35).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc35).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc35).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc35).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc35).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc35).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc35).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc35).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc35).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc35).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc35).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc35).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc35).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc35).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1035_Position_Buttons_on_Sheet35
Function F1036_Position_Buttons_on_Sheet36()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 36 - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc36).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc36).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc36).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc36).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc36).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc36).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc36).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc36).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc36).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc36).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc36).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc36).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc36).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc36).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc36).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc36).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc36).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc36).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc36).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc36).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc36).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc36).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc36).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc36).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc36).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc36).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc36).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc36).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc36).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc36).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc36).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1036_Position_Buttons_on_Sheet36
Function F1037_Position_Buttons_on_Sheet37()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 37 - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc37).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Help.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc37).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc37).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc37).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Buttons_H.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc37).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc37).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Button_U1.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc37).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc37).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc37).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Button_U2.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc37).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc37).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc37).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Button_U3.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc37).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc37).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc37).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Button_U4.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc37).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc37).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc37).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Button_U5.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc37).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc37).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc37).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc37).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc37).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc37).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc37).GP_Button_U6.AutoSize = False
        Worksheets(G_Tab_Svc37).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc37).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc37).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc37).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc37).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc37).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc37).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1037_Position_Buttons_on_Sheet37
Function F1038_Position_Buttons_on_Sheet38()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 38 - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc38).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc38).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc38).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc38).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc38).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc38).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc38).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc38).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc38).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc38).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc38).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc38).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc38).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc38).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc38).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc38).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc38).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc38).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc38).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc38).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc38).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc38).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc38).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc38).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc38).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc38).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc38).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc38).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc38).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc38).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc38).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1038_Position_Buttons_on_Sheet38
Function F1040_Position_Buttons_on_Sheet40()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 40 - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc40).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc40).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc40).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc40).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc40).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc40).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc40).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc40).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc40).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc40).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc40).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc40).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc40).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc40).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc40).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc40).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc40).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc40).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc40).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc40).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc40).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc40).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc40).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc40).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc40).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in Cell B31
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 0.75
    G_Button_Left = 57.75
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    For G_Cover_Row_No = 1 To 30
        If Worksheets(G_Tab_Svc40).Cells(G_Cover_Row_No, 1).EntireRow.Hidden = False Then _
                                                                            G_Button_Top = G_Button_Top + Worksheets(G_Tab_Svc40).Cells(G_Cover_Row_No, 1).Height
    Next G_Cover_Row_No
    
    If Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Visible = True And _
      (G_Force_Position = True Or _
       Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Font.Size <> 12) Then
        Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Top = G_Button_Top
        Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Left = G_Button_Left
        Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Width = G_Button_Width
        Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Height = G_Button_Height
        Worksheets(G_Tab_Svc40).VD_AGKX_3_i.Font.Size = 12
    End If
    
End Function                                                                    ' of F1040_Position_Buttons_on_Sheet40
Function F1041_Position_Buttons_on_Sheet41()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 41 - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc41).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc41).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc41).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc41).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc41).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc41).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc41).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc41).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc41).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc41).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc41).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc41).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc41).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc41).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc41).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc41).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc41).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc41).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc41).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc41).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc41).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc41).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc41).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc41).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc41).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc41).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc41).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc41).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc41).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc41).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc41).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1041_Position_Buttons_on_Sheet41
Function F1042_Position_Buttons_on_Sheet42()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 42 - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc42).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc42).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc42).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc42).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc42).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc42).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc42).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc42).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc42).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc42).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc42).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc42).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc42).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc42).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc42).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc42).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc42).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc42).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc42).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc42).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc42).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc42).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc42).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc42).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc42).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc42).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc42).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc42).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc42).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc42).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc42).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1042_Position_Buttons_on_Sheet42
Function F1043_Position_Buttons_on_Sheet43()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 43 - Additional Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc43).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc43).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc43).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc43).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc43).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc43).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc43).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc43).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc43).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc43).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc43).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc43).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc43).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc43).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc43).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc43).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc43).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc43).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc43).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc43).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc43).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc43).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc43).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc43).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc43).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc43).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc43).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc43).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc43).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc43).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc43).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1043_Position_Buttons_on_Sheet43
Function F1044_Position_Buttons_on_Sheet44()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 44 - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc44).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc44).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc44).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc44).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc44).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc44).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc44).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc44).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc44).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc44).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc44).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc44).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc44).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc44).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc44).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc44).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc44).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc44).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc44).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc44).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc44).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc44).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc44).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc44).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc44).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc44).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc44).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc44).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc44).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc44).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc44).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1044_Position_Buttons_on_Sheet44
Function F1045_Position_Buttons_on_Sheet45()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 45 - Visa Resolve Online (VROL) Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc45).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc45).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc45).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc45).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc45).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc45).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc45).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc45).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc45).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc45).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc45).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc45).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc45).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc45).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc45).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc45).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc45).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc45).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc45).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc45).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc45).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc45).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc45).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc45).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc45).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc45).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc45).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc45).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc45).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc45).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc45).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1045_Position_Buttons_on_Sheet45
Function F1046_Position_Buttons_on_Sheet46()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 46 - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc46).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc46).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc46).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc46).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc46).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc46).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc46).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc46).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc46).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc46).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc46).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc46).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc46).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc46).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc46).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc46).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc46).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc46).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc46).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc46).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc46).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc46).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc46).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc46).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc46).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc46).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc46).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc46).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc46).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc46).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc46).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1046_Position_Buttons_on_Sheet46
Function F1047_Position_Buttons_on_Sheet47()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 47 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc47).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc47).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc47).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc47).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc47).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc47).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc47).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc47).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc47).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc47).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc47).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc47).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc47).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc47).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc47).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc47).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc47).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc47).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc47).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc47).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc47).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc47).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc47).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc47).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc47).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc47).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc47).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc47).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc47).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc47).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc47).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1047_Position_Buttons_on_Sheet47
Function F1048_Position_Buttons_on_Sheet48()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 48 - Application Processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc48).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc48).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc48).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc48).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc48).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc48).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc48).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc48).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc48).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc48).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc48).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc48).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc48).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc48).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc48).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc48).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc48).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc48).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc48).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc48).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc48).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc48).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc48).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc48).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc48).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc48).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc48).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc48).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc48).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc48).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc48).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1048_Position_Buttons_on_Sheet48
Function F1049_Position_Buttons_on_Sheet49()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons into their correct locations on Sheet 49 - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - General Help - Cell A1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 4.5
    G_Button_Left = 4.5
    G_Button_Width = 81
    G_Button_Height = 24
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Help.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Help.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc49).GP_Help.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Help.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Help.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Help.Left = G_Button_Left
        Worksheets(G_Tab_Svc49).GP_Help.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Help.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Help.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Help.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc49).GP_Help.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help icon in for Main Control Buttons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42
    G_Button_Left = 4.5
    G_Button_Width = 12.75
    G_Button_Height = 12.75
    
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Buttons_H.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Buttons_H.Left <> G_Button_Left Or _
       Worksheets(G_Tab_Svc49).GP_Buttons_H.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Buttons_H.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Buttons_H.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Buttons_H.Left = G_Button_Left
        Worksheets(G_Tab_Svc49).GP_Buttons_H.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Buttons_H.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Buttons_H.Font.Size = 12
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Main Control Button icons in Row 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Button_Top = 42                                                           ' Main Control Buttons start at position forty-two
    G_Button_Left = 4.5 + 15
    G_Button_Width = 141.75
    G_Button_Height = 24
    G_Button_Offset = G_Button_Width + 2.25
    
    ' Front Cover
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Button_U1.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Button_U1.Left <> G_Button_Left + G_Button_Offset * 0 Or _
       Worksheets(G_Tab_Svc49).GP_Button_U1.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Button_U1.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Button_U1.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Button_U1.Left = G_Button_Left + G_Button_Offset * 0
        Worksheets(G_Tab_Svc49).GP_Button_U1.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Button_U1.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Button_U1.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc49).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Print Preview
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Button_U2.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Button_U2.Left <> G_Button_Left + G_Button_Offset * 1 Or _
       Worksheets(G_Tab_Svc49).GP_Button_U2.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Button_U2.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Button_U2.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Button_U2.Left = G_Button_Left + G_Button_Offset * 1
        Worksheets(G_Tab_Svc49).GP_Button_U2.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Button_U2.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Button_U2.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(G_Tab_Svc49).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    ' Unused
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Button_U3.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Button_U3.Left <> G_Button_Left + G_Button_Offset * 2 Or _
       Worksheets(G_Tab_Svc49).GP_Button_U3.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Button_U3.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Button_U3.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Button_U3.Left = G_Button_Left + G_Button_Offset * 2
        Worksheets(G_Tab_Svc49).GP_Button_U3.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Button_U3.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Button_U3.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(G_Tab_Svc49).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    ' Validate Data
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Button_U4.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Button_U4.Left <> G_Button_Left + G_Button_Offset * 3 Or _
       Worksheets(G_Tab_Svc49).GP_Button_U4.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Button_U4.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Button_U4.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Button_U4.Left = G_Button_Left + G_Button_Offset * 3
        Worksheets(G_Tab_Svc49).GP_Button_U4.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Button_U4.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Button_U4.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(G_Tab_Svc49).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    ' Previous Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Button_U5.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Button_U5.Left <> G_Button_Left + G_Button_Offset * 4 Or _
       Worksheets(G_Tab_Svc49).GP_Button_U5.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Button_U5.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Button_U5.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Button_U5.Left = G_Button_Left + G_Button_Offset * 4
        Worksheets(G_Tab_Svc49).GP_Button_U5.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Button_U5.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Button_U5.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc49).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    ' Next Service
    If G_Force_Position = True Or _
       Worksheets(G_Tab_Svc49).GP_Button_U6.Top <> G_Button_Top Or _
       Worksheets(G_Tab_Svc49).GP_Button_U6.Left <> G_Button_Left + G_Button_Offset * 5 Or _
       Worksheets(G_Tab_Svc49).GP_Button_U6.Width <> G_Button_Width Or _
       Worksheets(G_Tab_Svc49).GP_Button_U6.Font.Size <> 12 Then
        Worksheets(G_Tab_Svc49).GP_Button_U6.Top = G_Button_Top
        Worksheets(G_Tab_Svc49).GP_Button_U6.Left = G_Button_Left + G_Button_Offset * 5
        Worksheets(G_Tab_Svc49).GP_Button_U6.Width = G_Button_Width
        Worksheets(G_Tab_Svc49).GP_Button_U6.Height = G_Button_Height
        Worksheets(G_Tab_Svc49).GP_Button_U6.Font.Size = 12
        Worksheets(G_Tab_Svc49).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(G_Tab_Svc49).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1049_Position_Buttons_on_Sheet49
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module11_Load_Values"
Option Explicit
Function F1100_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values into variables so that all values are easily available for checking
    ' - Cells on Front Cover are defined in Module 20.
    ' - Cells on other worksheets are defined in their respective modules.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values - Sheet 20 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1120_Load_Cell_Values()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values - Sheet 31 - BIN List
    ' - No need to do this.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values - Other services
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1134_Load_Cell_Values()
    G_Caller = F1135_Load_Cell_Values()
    G_Caller = F1136_Load_Cell_Values()
    G_Caller = F1137_Load_Cell_Values()
    G_Caller = F1138_Load_Cell_Values()
    G_Caller = F1140_Load_Cell_Values()
    G_Caller = F1141_Load_Cell_Values()
    G_Caller = F1142_Load_Cell_Values()
    G_Caller = F1143_Load_Cell_Values()
    G_Caller = F1144_Load_Cell_Values()
    G_Caller = F1145_Load_Cell_Values()
    G_Caller = F1146_Load_Cell_Values()
    G_Caller = F1147_Load_Cell_Values()
    G_Caller = F1148_Load_Cell_Values()
    G_Caller = F1149_Load_Cell_Values()
    
End Function                                                                    ' of F1100_Load_Cell_Values
Function F1120_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 20 - Front Cover
    ' - Cells on Front Cover are defined in Module 20.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ' Financial Institution
    G_FC_Value_FinNam = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinNam).Value)    ' A01 - Business Name
    G_FC_Value_FinBID = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinBID).Value)    ' A02 - Business ID
    
    G_FC_Value_FinCon = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinCon).Value)    ' A03 - Contact Name
    G_FC_Value_FinMel = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinMel).Value)    ' A04 - E-mail Address
    G_FC_Value_FinTel = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinTel).Value)    ' A05 - Telephone Number
    
    ' Processor
    G_FC_Value_PrcNam = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_PrcNam).Value)    ' A06 - Business Name
    G_FC_Value_PrcBID = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_PrcBID).Value)    ' A07 - Business ID
    
    G_FC_Value_PrcCon = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_PrcCon).Value)    ' A08 - Contact Name
    G_FC_Value_PrcMel = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_PrcMel).Value)    ' A09 - E-mail Address
    G_FC_Value_PrcTel = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_PrcTel).Value)    ' A10 - Telephone Number
    
    ' Other
    G_FC_Value_Region = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_Region).Value)    ' A12 - Region                    (AP, Canada, CEMEA, LAC, U.S.)
    G_FC_Value_FinCty = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_FinCty).Value)    ' A13 - Country
    G_FC_Value_Enviro = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_Enviro).Value)    ' A14 - Environment               (Production / VCMS)
    G_FC_Value_MsgCap = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_MsgCap).Value)    ' A15 - Message Capability        (Auth Only / Full Service)
    G_FC_Value_EffDat = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_EffDat).Value)    ' A16 - Requested Effective Date
    G_FC_Value_UpdTyp = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_UpdTyp).Value)    ' A17 - Update Type               (Installation / Maintenance / Conversion)
    
    G_FC_Value_BusJus = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_BusJus).Value)    ' A11 - Business Justification
    
    G_FC_Value_PCR_No = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_PCR_No).Value)    ' A18 - PCR Number
    G_FC_Value_CpyBIN = Trim(Worksheets(G_Tab_Cover).Range(G_FC_Range_CpyBIN).Value)    ' A19 - Copy BIN
    
End Function                                                                    ' of F1120_Load_Cell_Values
Function F1134_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 34 - Visa Smart Debit/Credit (VSDC)
    ' - Cells on Sheet 34 are defined in Module 34.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_EM_Value_ABBE_3 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBE_3(G_Answer)).Value)      ' H01
    G_EM_Value_ABBE3T = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBE3T(G_Answer)).Value)      ' H02
    G_EM_Value_ABBC_1 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBC_1(G_Answer)).Value)      ' H03
    G_EM_Value_ABBE4a = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBE4a(G_Answer)).Value)      ' H04
    G_EM_Value_ABBE4b = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBE4b(G_Answer)).Value)      ' H05
    
    G_EM_Value_Exp_01 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_01(G_Answer)).Value)      ' H06
    G_EM_Value_CVN_01 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_01(G_Answer)).Value)      '
    G_EM_Value_CAM_01 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_01(G_Answer)).Value)      '
    
    G_EM_Value_Exp_02 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_02(G_Answer)).Value)      ' H07
    G_EM_Value_CVN_02 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_02(G_Answer)).Value)      '
    G_EM_Value_CAM_02 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_02(G_Answer)).Value)      '
    
    G_EM_Value_Exp_03 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_03(G_Answer)).Value)      ' H08
    G_EM_Value_CVN_03 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_03(G_Answer)).Value)      '
    G_EM_Value_CAM_03 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_03(G_Answer)).Value)      '
    
    G_EM_Value_Exp_04 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_04(G_Answer)).Value)      ' H09
    G_EM_Value_CVN_04 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_04(G_Answer)).Value)      '
    G_EM_Value_CAM_04 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_04(G_Answer)).Value)      '
    
    G_EM_Value_Exp_05 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_05(G_Answer)).Value)      ' H10
    G_EM_Value_CVN_05 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_05(G_Answer)).Value)      '
    G_EM_Value_CAM_05 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_05(G_Answer)).Value)      '
    
    G_EM_Value_Exp_06 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_06(G_Answer)).Value)      ' H11
    G_EM_Value_CVN_06 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_06(G_Answer)).Value)      '
    G_EM_Value_CAM_06 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_06(G_Answer)).Value)      '
    
    G_EM_Value_Exp_07 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_07(G_Answer)).Value)      ' H12
    G_EM_Value_CVN_07 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_07(G_Answer)).Value)      '
    G_EM_Value_CAM_07 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_07(G_Answer)).Value)      '
    
    G_EM_Value_Exp_08 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_08(G_Answer)).Value)      ' H13
    G_EM_Value_CVN_08 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_08(G_Answer)).Value)      '
    G_EM_Value_CAM_08 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_08(G_Answer)).Value)      '
    
    G_EM_Value_Exp_09 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_09(G_Answer)).Value)      ' H14
    G_EM_Value_CVN_09 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_09(G_Answer)).Value)      '
    G_EM_Value_CAM_09 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_09(G_Answer)).Value)      '
    
    G_EM_Value_Exp_10 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_10(G_Answer)).Value)      ' H15
    G_EM_Value_CVN_10 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_10(G_Answer)).Value)      '
    G_EM_Value_CAM_10 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_10(G_Answer)).Value)      '
    
    G_EM_Value_Exp_11 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_11(G_Answer)).Value)      ' H16
    G_EM_Value_CVN_11 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_11(G_Answer)).Value)      '
    G_EM_Value_CAM_11 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_11(G_Answer)).Value)      '
    
    G_EM_Value_Exp_12 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_12(G_Answer)).Value)      ' H17
    G_EM_Value_CVN_12 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_12(G_Answer)).Value)      '
    G_EM_Value_CAM_12 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_12(G_Answer)).Value)      '
    
    G_EM_Value_Exp_13 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_13(G_Answer)).Value)      ' H18
    G_EM_Value_CVN_13 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_13(G_Answer)).Value)      '
    G_EM_Value_CAM_13 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_13(G_Answer)).Value)      '
    
    G_EM_Value_Exp_14 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_14(G_Answer)).Value)      ' H19
    G_EM_Value_CVN_14 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_14(G_Answer)).Value)      '
    G_EM_Value_CAM_14 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_14(G_Answer)).Value)      '
    
    G_EM_Value_Exp_15 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_15(G_Answer)).Value)      ' H20
    G_EM_Value_CVN_15 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_15(G_Answer)).Value)      '
    G_EM_Value_CAM_15 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_15(G_Answer)).Value)      '
    
    G_EM_Value_Exp_16 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_16(G_Answer)).Value)      ' H21
    G_EM_Value_CVN_16 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_16(G_Answer)).Value)      '
    G_EM_Value_CAM_16 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_16(G_Answer)).Value)      '
    
    G_EM_Value_Exp_17 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_17(G_Answer)).Value)      ' H22
    G_EM_Value_CVN_17 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_17(G_Answer)).Value)      '
    G_EM_Value_CAM_17 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_17(G_Answer)).Value)      '
    
    G_EM_Value_Exp_18 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_18(G_Answer)).Value)      ' H23
    G_EM_Value_CVN_18 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_18(G_Answer)).Value)      '
    G_EM_Value_CAM_18 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_18(G_Answer)).Value)      '
    
    G_EM_Value_Exp_19 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_19(G_Answer)).Value)      ' H24
    G_EM_Value_CVN_19 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_19(G_Answer)).Value)      '
    G_EM_Value_CAM_19 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_19(G_Answer)).Value)      '
    
    G_EM_Value_Exp_20 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_Exp_20(G_Answer)).Value)      ' H25
    G_EM_Value_CVN_20 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CVN_20(G_Answer)).Value)      '
    G_EM_Value_CAM_20 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_CAM_20(G_Answer)).Value)      '
    
    G_EM_Value_ABBE_5 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBE_5(G_Answer)).Value)      ' H26
    G_EM_Value_ABBG_7 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBG_7(G_Answer)).Value)      ' H27
    G_EM_Value_ABBG11 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBG11(G_Answer)).Value)      ' H28
    G_EM_Value_ABBG12 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBG12(G_Answer)).Value)      ' H29
    G_EM_Value_ABFX_3 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABFX_3(G_Answer)).Value)      ' H30
    G_EM_Value_AGR_PM = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_AGR_PM(G_Answer)).Value)      ' H31
    G_EM_Value_ABBH_1 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_1(G_Answer)).Value)      ' H32
    G_EM_Value_ABBH_2 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_2(G_Answer)).Value)      ' H33
    G_EM_Value_ABBH_3 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_3(G_Answer)).Value)      ' H34
    G_EM_Value_ABBH_4 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_4(G_Answer)).Value)      ' H35
    G_EM_Value_ABBH_5 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_5(G_Answer)).Value)      ' H36
    G_EM_Value_ABBH_6 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_6(G_Answer)).Value)      ' H37
    G_EM_Value_ABBH7a = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH7a(G_Answer)).Value)      ' H38
    G_EM_Value_ABBH7b = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH7b(G_Answer)).Value)      ' H39
    G_EM_Value_ABBH_8 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_8(G_Answer)).Value)      ' H40
    G_EM_Value_ABBH_9 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_9(G_Answer)).Value)      ' H41
    G_EM_Value_ABBH10 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH10(G_Answer)).Value)      ' H42
    G_EM_Value_ABBH11 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH11(G_Answer)).Value)      ' H43
    G_EM_Value_ABBH12 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH12(G_Answer)).Value)      ' H44
    G_EM_Value_ABBH13 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH13(G_Answer)).Value)      ' H45
    G_EM_Value_ABBH14 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH14(G_Answer)).Value)      ' H46
    G_EM_Value_ABBH15 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH15(G_Answer)).Value)      ' H47
    G_EM_Value_ABBH16 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH16(G_Answer)).Value)      ' H48
    G_EM_Value_ABBH17 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH17(G_Answer)).Value)      ' H49
    G_EM_Value_ABB18a = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABB18a(G_Answer)).Value)      ' H50
    G_EM_Value_ABB18b = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABB18b(G_Answer)).Value)      ' H51
    G_EM_Value_ABBH19 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH19(G_Answer)).Value)      ' H52
    G_EM_Value_ABBH20 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH20(G_Answer)).Value)      ' H53
    G_EM_Value_ABBH21 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH21(G_Answer)).Value)      ' H54
    G_EM_Value_ABBH22 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH22(G_Answer)).Value)      ' H55
    G_EM_Value_ABBH23 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH23(G_Answer)).Value)      ' H56
    G_EM_Value_ABBH24 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH24(G_Answer)).Value)      ' H57
    G_EM_Value_ABBI_1 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_1(G_Answer)).Value)      ' H58
    G_EM_Value_ABBI_2 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_2(G_Answer)).Value)      ' H59
    G_EM_Value_ABBI_4 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_4(G_Answer)).Value)      ' H60
    G_EM_Value_ABBI_5 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_5(G_Answer)).Value)      ' H61
    G_EM_Value_ABBK_1 = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBK_1(G_Answer)).Value)      ' H62
    G_EM_Value_ABBK2a = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBK2a(G_Answer)).Value)      ' H63
    G_EM_Value_ABBK2b = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBK2b(G_Answer)).Value)      ' H64
    G_EM_Value_ABBK2c = Trim(Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBK2c(G_Answer)).Value)      ' H65
    
End Function                                                                    ' of F1134_Load_Cell_Values
Function F1135_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 35 - Verified by Visa (VbV)
    ' - Cells on Sheet 35 are defined in Module 35.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VV_Value_ABE_1a = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_ABE_1a(G_Answer)).Value)      ' J01
    G_VV_Value_ABE_1b = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_ABE_1b(G_Answer)).Value)      ' J01
    G_VV_Value_ABE_2a = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_ABE_2a(G_Answer)).Value)      ' J02
    G_VV_Value_ABE_2b = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_ABE_2b(G_Answer)).Value)      ' J02
    G_VV_Value_ABE_3a = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_ABE_3a(G_Answer)).Value)      ' J03
    G_VV_Value_ABE_3b = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_ABE_3b(G_Answer)).Value)      ' J03
    G_VV_Value_URL_01 = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_URL_01(G_Answer)).Value)      ' J04
    G_VV_Value_URL_02 = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_URL_02(G_Answer)).Value)      ' J05
    G_VV_Value_URL_03 = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_URL_03(G_Answer)).Value)      ' J06
    G_VV_Value_URL_04 = Trim(Worksheets(G_Tab_Svc35).Range(G_VV_Range_URL_04(G_Answer)).Value)      ' J07
    
End Function                                                                    ' of F1135_Load_Cell_Values
Function F1136_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 36 - CVV / iCVV / CVV2
    ' - Cells on Sheet 36 are defined in Module 36.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CV_Value_ABAA_1 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Value)      ' C01
    G_CV_Value_ABAB_2 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB_2(G_Answer)).Value)      ' C02
    G_CV_Value_ABAB6A = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB6A(G_Answer)).Value)      ' C03
    G_CV_Value_ABAB1B = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB1B(G_Answer)).Value)      ' C04
    G_CV_Value_ABAB2B = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB2B(G_Answer)).Value)      ' C05
    G_CV_Value_ABAB6B = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB6B(G_Answer)).Value)      ' C06
    G_CV_Value_ABAB1C = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB1C(G_Answer)).Value)      ' C07
    G_CV_Value_ABAB2C = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB2C(G_Answer)).Value)      ' C08
    G_CV_Value_ABAB6C = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB6C(G_Answer)).Value)      ' C09
    G_CV_Value_ABAE_5 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAE_5(G_Answer)).Value)      ' C10
    G_CV_Value_ABDA_1 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDA_1(G_Answer)).Value)      ' C11
    G_CV_Value_ABDA_2 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDA_2(G_Answer)).Value)      ' C12
    G_CV_Value_ABDA_3 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDA_3(G_Answer)).Value)      ' C13
    G_CV_Value_ABDA_4 = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDA_4(G_Answer)).Value)      ' C14
    G_CV_Value_ABDB1A = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDB1A(G_Answer)).Value)      ' C15
    G_CV_Value_ABDB1B = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDB1B(G_Answer)).Value)      ' C16
    G_CV_Value_ABDB1C = Trim(Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDB1C(G_Answer)).Value)      ' C17
    
End Function                                                                    ' of F1136_Load_Cell_Values
Function F1137_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 37 - PIN Processing
    ' - Cells on Sheet 37 are defined in Module 37.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_PP_Value_ACAX_2 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_2(G_Answer)).Value)      ' E01
    G_PP_Value_ACA_2T = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACA_2T(G_Answer)).Value)      ' E02
    G_PP_Value_ACEX_3 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACEX_3(G_Answer)).Value)      ' E03
    G_PP_Value_ACAX_4 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_4(G_Answer)).Value)      ' E04
    G_PP_Value_ACAX_5 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_5(G_Answer)).Value)      ' E05
    G_PP_Value_ACAX_6 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_6(G_Answer)).Value)      ' E06
    G_PP_Value_ACAX_3 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_3(G_Answer)).Value)      ' E07
    G_PP_Value_ACBX_1 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACBX_1(G_Answer)).Value)      ' E08
    G_PP_Value_ACDX_6 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACDX_6(G_Answer)).Value)      ' E09
    G_PP_Value_ACEX_1 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACEX_1(G_Answer)).Value)      ' E10
    G_PP_Value_ACHQ_1 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_1(G_Answer)).Value)      ' E11
    G_PP_Value_ACHQ_2 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_2(G_Answer)).Value)      ' E12
    G_PP_Value_ACHQ_3 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_3(G_Answer)).Value)      ' E13
    G_PP_Value_ACHQ_4 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_4(G_Answer)).Value)      ' E14
    G_PP_Value_ACHQ_5 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_5(G_Answer)).Value)      ' E15
    G_PP_Value_ACHQ_6 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_6(G_Answer)).Value)      ' E16
    G_PP_Value_ACHQ_7 = Trim(Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACHQ_7(G_Answer)).Value)      ' E17
    
End Function                                                                    ' of F1137_Load_Cell_Values
Function F1138_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 38 - Stand-In Processing (STIP)
    ' - Cells on Sheet 38 are defined in Module 38.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_S1_Value_AGZ_Q1 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q1(G_Answer)).Value)      ' G01
    G_S1_Value_AGZ_Q2 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q2(G_Answer)).Value)      ' G02
    G_S1_Value_AGZ_Q3 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q3(G_Answer)).Value)      ' G03
    G_S1_Value_AGZ_Q4 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q4(G_Answer)).Value)      ' G04
    G_S1_Value_AGZ_Q5 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q5(G_Answer)).Value)      ' G05
    G_S1_Value_AGZ_Q6 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q6(G_Answer)).Value)      ' G06
    G_S1_Value_AGZ_Q7 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q7(G_Answer)).Value)      ' G07
    G_S1_Value_AGZ_Q8 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGZ_Q8(G_Answer)).Value)      ' G08
    
    G_S1_Value_AGB_Q1 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGB_Q1(G_Answer)).Value)      ' G09
    G_S1_Value_AGB_Q2 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGB_Q2(G_Answer)).Value)      ' G10
    G_S1_Value_AGB_3a = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGB_3a(G_Answer)).Value)      ' G11
    G_S1_Value_AGB_3b = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGB_3b(G_Answer)).Value)      ' G12
    G_S1_Value_AHC_Q4 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHC_Q4(G_Answer)).Value)      ' G13
    
    G_S1_Value_AHE_1a = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHE_1a(G_Answer)).Value)      ' G14
    G_S1_Value_AHE_1b = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHE_1b(G_Answer)).Value)      ' G15
    G_S1_Value_AHE_Q2 = Trim(Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHE_Q2(G_Answer)).Value)      ' G16
    
End Function                                                                    ' of F1138_Load_Cell_Values
Function F1140_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 40 - Visa Direct
    ' - Cells on Sheet 40 are defined in Module 40.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VD_Value_APHX_2 = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_APHX_2(G_Answer)).Value)      ' K01
    G_VD_Value_APHX_4 = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_APHX_4(G_Answer)).Value)      ' K02
    G_VD_Value_APHX_6 = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_APHX_6(G_Answer)).Value)      ' K03
    G_VD_Value_AGKX_1 = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGKX_1(G_Answer)).Value)      ' K04
    G_VD_Value_AGKX_2 = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGKX_2(G_Answer)).Value)      ' K05
    
    G_VD_Value_AGK_3a = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_3a(G_Answer)).Value)      ' K06
    G_VD_Value_AGK_3b = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_3b(G_Answer)).Value)      ' K07
    G_VD_Value_AGK_3c = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_3c(G_Answer)).Value)      ' K08
    
    G_VD_Value_AGK_4a = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_4a(G_Answer)).Value)      ' K09
    G_VD_Value_AGK_4b = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_4b(G_Answer)).Value)      ' K10
    G_VD_Value_AGK_4c = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_4c(G_Answer)).Value)      ' K11
    
    G_VD_Value_AGK_5a = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_5a(G_Answer)).Value)      ' K12
    G_VD_Value_AGK_5b = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_5b(G_Answer)).Value)      ' K13
    G_VD_Value_AGK_5c = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_5c(G_Answer)).Value)      ' K14
    
    G_VD_Value_AGK_6a = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_6a(G_Answer)).Value)      ' K15
    G_VD_Value_AGK_6b = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_6b(G_Answer)).Value)      ' K16
    G_VD_Value_AGK_6c = Trim(Worksheets(G_Tab_Svc40).Range(G_VD_Range_AGK_6c(G_Answer)).Value)      ' K17
    
End Function                                                                    ' of F1140_Load_Cell_Values
Function F1141_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 41 - Alternate Authorisation Routing
    ' - Cells on Sheet 41 are defined in Module 41.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_A1_Value_AEU_Q2 = Trim(Worksheets(G_Tab_Svc41).Range(G_A1_Range_AEU_Q2(G_Answer)).Value)      ' M01
    G_A1_Value_AEW_Q1 = Trim(Worksheets(G_Tab_Svc41).Range(G_A1_Range_AEW_Q1(G_Answer)).Value)      ' M02
    G_A1_Value_AEW_Q2 = Trim(Worksheets(G_Tab_Svc41).Range(G_A1_Range_AEW_Q2(G_Answer)).Value)      ' M03
    
End Function                                                                    ' of F1141_Load_Cell_Values
Function F1142_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 42 - Currency Conversion Options
    ' - Cells on Sheet 42 are defined in Module 42.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_MO_Value_AJAX_1 = Trim(Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJAX_1(G_Answer)).Value)      ' D01
    G_MO_Value_AJAX_2 = Trim(Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJAX_2(G_Answer)).Value)      ' D02
    G_MO_Value_AJAX_4 = Trim(Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJAX_4(G_Answer)).Value)      ' D03
    G_MO_Value_AJAX_7 = Trim(Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJAX_7(G_Answer)).Value)      ' D04
    G_MO_Value_AJDX_3 = Trim(Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJDX_3(G_Answer)).Value)      ' D05
    
End Function                                                                    ' of F1142_Load_Cell_Values
Function F1143_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 43 - Additional Processing Options
    ' - Cells on Sheet 43 are defined in Module 43.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_PO_Value_AEOX_8 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_AEOX_8(G_Answer)).Value)      ' L01
    G_PO_Value_AEEX_1 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_AEEX_1(G_Answer)).Value)      ' L02
    G_PO_Value_APFX_4 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APFX_4(G_Answer)).Value)      ' L03
    G_PO_Value_APFX_5 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APFX_5(G_Answer)).Value)      ' L04
    G_PO_Value_APCA_7 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APCA_7(G_Answer)).Value)      ' L05
    G_PO_Value_APCA12 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APCA12(G_Answer)).Value)      ' L06
    G_PO_Value_APCA_1 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APCA_1(G_Answer)).Value)      ' L07
    G_PO_Value_AIAX_1 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_AIAX_1(G_Answer)).Value)      ' L08
    G_PO_Value_AOAX_2 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_AOAX_2(G_Answer)).Value)      ' L09
    G_PO_Value_ADXX_1 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_ADXX_1(G_Answer)).Value)      ' L10
    G_PO_Value_AVXX_3 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_AVXX_3(G_Answer)).Value)      ' L11
    G_PO_Value_AVX_5a = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_AVX_5a(G_Answer)).Value)      ' L12
    G_PO_Value_APBA11 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APBA11(G_Answer)).Value)      ' L13
    G_PO_Value_APCA13 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APCA13(G_Answer)).Value)      ' L14
    G_PO_Value_ManCas = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_ManCas(G_Answer)).Value)      ' L15
    G_PO_Value_APCA_2 = Trim(Worksheets(G_Tab_Svc43).Range(G_PO_Range_APCA_2(G_Answer)).Value)      ' L16
    
End Function                                                                    ' of F1143_Load_Cell_Values
Function F1144_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 44 - SMS Reports and Raw Data
    ' - Cells on Sheet 44 are defined in Module 44.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_RR_Value_GA6Fin = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_GA6Fin(G_Answer)).Value)      ' N01
    
    G_RR_Value_SM600a = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM600a(G_Answer)).Value)      ' N02
    G_RR_Value_SM600b = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM600b(G_Answer)).Value)      ' N02
    G_RR_Value_SM600c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM600c(G_Answer)).Value)      ' N02
    G_RR_Value_SM600d = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM600d(G_Answer)).Value)      ' N02
    G_RR_Value_SM608c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM608c(G_Answer)).Value)      ' N03
    G_RR_Value_SM610a = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM610a(G_Answer)).Value)      ' N04
    G_RR_Value_SM610b = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM610b(G_Answer)).Value)      ' N04
    G_RR_Value_SM610c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM610c(G_Answer)).Value)      ' N04
    G_RR_Value_SM612a = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM612a(G_Answer)).Value)      ' N05
    G_RR_Value_SM612b = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM612b(G_Answer)).Value)      ' N05
    G_RR_Value_SM612c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM612c(G_Answer)).Value)      ' N05
    G_RR_Value_SM614a = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM614a(G_Answer)).Value)      ' N06
    G_RR_Value_SM614b = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM614b(G_Answer)).Value)      ' N06
    G_RR_Value_SM614c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM614c(G_Answer)).Value)      ' N06
    G_RR_Value_SM616a = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM616a(G_Answer)).Value)      ' N07
    G_RR_Value_SM616c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM616c(G_Answer)).Value)      ' N07
    G_RR_Value_SM620c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM620c(G_Answer)).Value)      ' N08
    G_RR_Value_SM620d = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM620d(G_Answer)).Value)      ' N08
    G_RR_Value_SM626a = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM626a(G_Answer)).Value)      ' N09
    G_RR_Value_SM640d = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM640d(G_Answer)).Value)      ' N10
    G_RR_Value_SM642c = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_SM642c(G_Answer)).Value)      ' N11
    
    G_RR_Value_V22120 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22120(G_Answer)).Value)      ' N12
    G_RR_Value_V22200 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22200(G_Answer)).Value)      ' N13
    G_RR_Value_V22255 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22255(G_Answer)).Value)      ' N14
    G_RR_Value_V22260 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22260(G_Answer)).Value)      ' N15
    G_RR_Value_V22261 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22261(G_Answer)).Value)      ' N16
    G_RR_Value_V22276 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22276(G_Answer)).Value)      ' N17
    G_RR_Value_V22300 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22300(G_Answer)).Value)      ' N18
    G_RR_Value_V22310 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22310(G_Answer)).Value)      ' N19
    G_RR_Value_V22400 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22400(G_Answer)).Value)      ' N20
    G_RR_Value_V22461 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V22461(G_Answer)).Value)      ' N21
    
    G_RR_Value_V23200 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V23200(G_Answer)).Value)      ' N22
    G_RR_Value_V23210 = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_V23210(G_Answer)).Value)      ' N23
    
    G_RR_Value_Header = Trim(Worksheets(G_Tab_Svc44).Range(G_RR_Range_Header(G_Answer)).Value)      ' N24
    
End Function                                                                    ' of F1144_Load_Cell_Values
Function F1145_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 45 - Visa Resolve Online (VROL) Financials
    ' - Cells on Sheet 45 are defined in Module 45.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VR_Value_VRL100 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL100(G_Answer)).Value)      ' P01
    G_VR_Value_VRL200 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL200(G_Answer)).Value)      ' P02
    G_VR_Value_VRL210 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL210(G_Answer)).Value)      ' P03
    G_VR_Value_VRL220 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL220(G_Answer)).Value)      ' P04
    G_VR_Value_VRL230 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL230(G_Answer)).Value)      ' P05
    G_VR_Value_VRL300 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL300(G_Answer)).Value)      ' P06
    G_VR_Value_VRL310 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL310(G_Answer)).Value)      ' P07
    G_VR_Value_VRL315 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL315(G_Answer)).Value)      ' P08
    G_VR_Value_VRL320 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL320(G_Answer)).Value)      ' P09
    G_VR_Value_VRL400 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL400(G_Answer)).Value)      ' P10
    G_VR_Value_APBA15 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_APBA15(G_Answer)).Value)      ' P11
    G_VR_Value_VRL490 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL490(G_Answer)).Value)      ' P12
    G_VR_Value_VRL510 = Trim(Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL510(G_Answer)).Value)      ' P13
    
End Function                                                                    ' of F1145_Load_Cell_Values
Function F1146_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 46 - Settlement and VSS Reporting
    ' - Cells on Sheet 46 are defined in Module 46.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VS_Value_TISH_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_TISH_1(G_Answer)).Value)      ' S01
    G_VS_Value_ISCY_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_ISCY_1(G_Answer)).Value)      ' S02
    G_VS_Value_RSRE_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_RSRE_1(G_Answer)).Value)      ' S03
    G_VS_Value_ISCY_2 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_ISCY_2(G_Answer)).Value)      ' S04
    
    G_VS_Value_NNSS_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Value)      ' S05
    G_VS_Value_TNNS_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_TNNS_1(G_Answer)).Value)      ' S06
    G_VS_Value_RSRE_2 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_RSRE_2(G_Answer)).Value)      ' S07
    
    G_VS_Value_RFTC_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_RFTC_1(G_Answer)).Value)      ' S08
    G_VS_Value_ACIB_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_ACIB_1(G_Answer)).Value)      ' S09
    G_VS_Value_ACIB_2 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_ACIB_2(G_Answer)).Value)      ' S09
    G_VS_Value_ACIB_3 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_ACIB_3(G_Answer)).Value)      ' S09
    G_VS_Value_RSOB_1 = Trim(Worksheets(G_Tab_Svc46).Range(G_VS_Range_RSOB_1(G_Answer)).Value)      ' S10
    
End Function                                                                    ' of F1146_Load_Cell_Values
Function F1147_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 47 - Clearing
    ' - Cells on Sheet 47 are defined in Module 47.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CL_Value_CIBCIB = Trim(Worksheets(G_Tab_Svc47).Range(G_CL_Range_CIBCIB(G_Answer)).Value)      ' Q01
    G_CL_Value_CC_PBD = Trim(Worksheets(G_Tab_Svc47).Range(G_CL_Range_CC_PBD(G_Answer)).Value)      ' Q02
    G_CL_Value_TCR4_A = Trim(Worksheets(G_Tab_Svc47).Range(G_CL_Range_TCR4_A(G_Answer)).Value)      ' Q03
    G_CL_Value_TCR5_I = Trim(Worksheets(G_Tab_Svc47).Range(G_CL_Range_TCR5_I(G_Answer)).Value)      ' Q04
    G_CL_Value_VROLRI = Trim(Worksheets(G_Tab_Svc47).Range(G_CL_Range_VROLRI(G_Answer)).Value)      ' Q05
    G_CL_Value_TCRD_R = Trim(Worksheets(G_Tab_Svc47).Range(G_CL_Range_TCRD_R(G_Answer)).Value)      ' Q06
    
End Function                                                                    ' of F1147_Load_Cell_Values
Function F1148_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 48 - Application Processor / CIB
    ' - Cells on Sheet 48 are defined in Module 48.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CB_Value_CIBCIB = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_CIBCIB(G_Answer)).Value)      ' R01
    G_CB_Value_ExiNew = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_ExiNew(G_Answer)).Value)      ' R02
    G_CB_Value_ExiB2P = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_ExiB2P(G_Answer)).Value)      ' R03
    G_CB_Value_ExiCIB = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_ExiCIB(G_Answer)).Value)      ' R04
    G_CB_Value_NewB2P = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_NewB2P(G_Answer)).Value)      ' R05
    G_CB_Value_NewFQD = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_NewFQD(G_Answer)).Value)      ' R06
    G_CB_Value_OP_SYS = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_OP_SYS(G_Answer)).Value)      ' R07
    G_CB_Value_EP_TYP = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_EP_TYP(G_Answer)).Value)      ' R08
    G_CB_Value_SEC_CD = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_SEC_CD(G_Answer)).Value)      ' R09
    G_CB_Value_TC56_C = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_TC56_C(G_Answer)).Value)      ' R10
    G_CB_Value_TC56_S = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_TC56_S(G_Answer)).Value)      ' R11
    G_CB_Value_EP4CBX = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_EP4CBX(G_Answer)).Value)      ' R12
    G_CB_Value_DFT_33 = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_DFT_33(G_Answer)).Value)      ' R13
    G_CB_Value_GMT_1A = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_1A(G_Answer)).Value)      ' R14
    G_CB_Value_GMT_1T = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_1T(G_Answer)).Value)      ' R14
    G_CB_Value_GMT_2A = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_2A(G_Answer)).Value)      ' R15
    G_CB_Value_GMT_2T = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_2T(G_Answer)).Value)      ' R15
    G_CB_Value_GMT_3A = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_3A(G_Answer)).Value)      ' R16
    G_CB_Value_GMT_3T = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_3T(G_Answer)).Value)      ' R16
    G_CB_Value_GMT_4A = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_4A(G_Answer)).Value)      ' R17
    G_CB_Value_GMT_4T = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_4T(G_Answer)).Value)      ' R17
    G_CB_Value_GMT_5A = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_5A(G_Answer)).Value)      ' R18
    G_CB_Value_GMT_5T = Trim(Worksheets(G_Tab_Svc48).Range(G_CB_Range_GMT_5T(G_Answer)).Value)      ' R18
    
End Function                                                                    ' of F1148_Load_Cell_Values
Function F1149_Load_Cell_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load all cell values from Sheet 49 - Additional Reports
    ' - Cells on Sheet 49 are defined in Module 49.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VR_Value_A_5100 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_A_5100(G_Answer)).Value)      ' T01
    G_VR_Value_BR_112 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_112(G_Answer)).Value)      ' T02
    G_VR_Value_BR_121 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_121(G_Answer)).Value)      ' T03
    G_VR_Value_BR_320 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_320(G_Answer)).Value)      ' T04
    G_VR_Value_BR_450 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_450(G_Answer)).Value)      ' T05
    G_VR_Value_BR_460 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_460(G_Answer)).Value)      ' T06
    G_VR_Value_BR_600 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_600(G_Answer)).Value)      ' T07
    G_VR_Value_BR_610 = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_BR_610(G_Answer)).Value)      ' T08
    G_VR_Value_C1100F = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_C1100F(G_Answer)).Value)      ' T09
    G_VR_Value_C1100A = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_C1100A(G_Answer)).Value)      ' T09
    G_VR_Value_C6110F = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_C6110F(G_Answer)).Value)      ' T10
    G_VR_Value_C6110A = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_C6110A(G_Answer)).Value)      ' T10
    G_VR_Value_C1130F = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_C1130F(G_Answer)).Value)      ' T11
    G_VR_Value_C1130A = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_C1130A(G_Answer)).Value)      ' T11
    G_VR_Value_F11Act = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F11Act(G_Answer)).Value)      ' T12
    G_VR_Value_F11Fmt = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F11Fmt(G_Answer)).Value)      ' T12
    G_VR_Value_F12Act = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F12Act(G_Answer)).Value)      ' T13
    G_VR_Value_F12Fmt = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F12Fmt(G_Answer)).Value)      ' T13
    G_VR_Value_F13Act = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F13Act(G_Answer)).Value)      ' T14
    G_VR_Value_F13Fmt = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F13Fmt(G_Answer)).Value)      ' T14
    G_VR_Value_F14Act = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F14Act(G_Answer)).Value)      ' T15
    G_VR_Value_F14Fmt = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F14Fmt(G_Answer)).Value)      ' T15
    G_VR_Value_F15Act = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F15Act(G_Answer)).Value)      ' T16
    G_VR_Value_F15Fmt = Trim(Worksheets(G_Tab_Svc49).Range(G_VR_Range_F15Fmt(G_Answer)).Value)      ' T16
    
End Function                                                                    ' of F1149_Load_Cell_Values
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module13_Services"
Option Explicit
Function F1300_Set_Services_by_Region()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine enables and disables the services check boxes, according to the selected region
    ' - Whenever a service is disabled, any existing data for that service is deleted (Modules 20 and 31-50).
    ' - The selected region is already loaded in G_FC_Value_Region.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1300_Column                                        As String           ' The column identifier on the Admin - Regions worksheet for the selected region
    Dim F1300_Row_No                                        As Integer          ' For looking at the services on the Admin - Regions tab
    Dim F1300_Service                                       As String           ' The service code
    Dim F1300_Default                                       As String           ' The service default
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select the column that corresponds to the region
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case G_FC_Value_Region
    
    Case "AP"
        F1300_Column = "A"
    
    Case "Canada"
        F1300_Column = "B"
    
    Case "CEMEA"
        F1300_Column = "C"
    
    Case "LAC"
        F1300_Column = "D"
    
    Case "U.S."
        F1300_Column = "E"
    
    Case ""                                                                     ' No selected region
        F1300_Column = "Z"                                                      ' Select unused column in order to disable all services
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process each service in turn
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F1300_Row_No = 3 To 18                                                  ' Services are on these rows in the Admin - Regions worksheet
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Build the Service Code
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        F1300_Service = Worksheets(G_Tab_A_Reg).Range("F" & F1300_Row_No).Value ' Build the Service Code (S31 - S49) - these are in Column F
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Build the Default, based on the four values for the Service (based on the update type)
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        F1300_Default = Worksheets(G_Tab_A_Reg).Range(F1300_Column & F1300_Row_No).Value
        
        Select Case G_FC_Value_UpdTyp
        
        Case "Installation"
            If G_FC_Value_CpyBIN = "" Then
                F1300_Default = Mid(F1300_Default, 1, 1)                        ' 1st position is for Installation
            Else
                F1300_Default = Mid(F1300_Default, 4, 1)                        ' 4th position is for Copy BIN
            End If
        
        Case "Maintenance"
            F1300_Default = Mid(F1300_Default, 2, 1)                            ' 2nd position is for Maintenance
        
        Case "Conversion"
            F1300_Default = Mid(F1300_Default, 3, 1)                            ' 3rd position is for Conversion
        
        Case Else
            F1300_Default = "^"                                                 ' Update Type unknown - do not allow selection
        
        End Select
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Override the Default, based any exclusions by environment or message capability or update type
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F0300_Access_Value(F1300_Service, G_FC_Value_Enviro, "G", "") = "N" Then
            F1300_Default = "^"                                                 ' Selection not permitted
        End If
        
        If F0300_Access_Value(F1300_Service, G_FC_Value_MsgCap, "G", "") = "N" Then
            F1300_Default = "^"                                                 ' Selection not permitted
        End If
        
        If F0300_Access_Value(F1300_Service, G_FC_Value_UpdTyp, "G", "") = "N" Then
            F1300_Default = "^"                                                 ' Selection not permitted
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Set the actual value, based on the Default
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F1300_Default
        
        Case "S"                                                                ' Permitted service for selected region
            G_Caller = F0300_Access_Value("Status", F1300_Service, "U", "SN")   ' Set the Service to "Selected, Not Validated"
            G_Caller = F2090_Set_Service_Status(F1300_Service, "SN")            ' Set the service status text
            G_Caller = F1310_Select_Check_Box(F1300_Service)                    ' Deselect the check box for this service
'           G_Caller = x                                                        ' Delete any existing data for this service
        
        Case "U"                                                                ' Permitted service for selected region
            G_Caller = F0300_Access_Value("Status", F1300_Service, "U", "NS")   ' Set the Service to "Not Selected"
            G_Caller = F2090_Set_Service_Status(F1300_Service, "NS")            ' Set the service status text
            G_Caller = F1320_Deselect_Check_Box(F1300_Service)                  ' Deselect the check box for this service
'           G_Caller = x                                                        ' Delete any existing data for this service
        
        Case Else                                                               ' Not a permitted service for selected region
            G_Caller = F0300_Access_Value("Status", F1300_Service, "U", "RX")   ' Set the Service to "Region Excluded"
            G_Caller = F2090_Set_Service_Status(F1300_Service, "RX")            ' Set the service status text
            G_Caller = F1320_Deselect_Check_Box(F1300_Service)                  ' Deselect the check box for this service
'           G_Caller = x                                                        ' Delete any existing data for this service
        
        End Select
        
    Next F1300_Row_No                                                           ' Go around for next service
    
End Function                                                                    ' of F1300_Set_Services_by_Region
Function F1310_Select_Check_Box(F1310_Service)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine selects one specified services check box
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Select check box
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F1310_Service
    
    Case "S31"
        Sheet20.FC_Service_S31.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S31.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
    Case "S34"
        Sheet20.FC_Service_S34.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S34.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S35"
        Sheet20.FC_Service_S35.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S35.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S36"
        Sheet20.FC_Service_S36.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S36.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        
    Case "S37"
        Sheet20.FC_Service_S37.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S37.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S38"
        Sheet20.FC_Service_S38.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S38.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S40"
        Sheet20.FC_Service_S40.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S40.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S41"
        Sheet20.FC_Service_S41.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S41.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S42"
        Sheet20.FC_Service_S42.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S42.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S43"
        Sheet20.FC_Service_S43.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S43.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S44"
        Sheet20.FC_Service_S44.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S44.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S45"
        Sheet20.FC_Service_S45.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S45.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S46"
        Sheet20.FC_Service_S46.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S46.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S47"
        Sheet20.FC_Service_S47.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S47.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S48"
        Sheet20.FC_Service_S48.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S48.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    Case "S49"
        Sheet20.FC_Service_S49.Caption = G_Check_Box_Sett                       ' Change to "Checked"
        Sheet20.FC_Service_S49.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    
    End Select
    
End Function                                                                    ' of F1310_Select_Check_Box
Function F1320_Deselect_Check_Box(F1320_Service)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine deselects one specified services check box
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Deselect check box
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F1320_Service
    
    Case "S31"
        Sheet20.FC_Service_S31.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S31.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
    Case "S34"
        Sheet20.FC_Service_S34.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S34.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S35"
        Sheet20.FC_Service_S35.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S35.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S36"
        Sheet20.FC_Service_S36.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S36.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        
    Case "S37"
        Sheet20.FC_Service_S37.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S37.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S38"
        Sheet20.FC_Service_S38.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S38.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S40"
        Sheet20.FC_Service_S40.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S40.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S41"
        Sheet20.FC_Service_S41.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S41.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S42"
        Sheet20.FC_Service_S42.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S42.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S43"
        Sheet20.FC_Service_S43.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S43.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S44"
        Sheet20.FC_Service_S44.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S44.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S45"
        Sheet20.FC_Service_S45.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S45.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S46"
        Sheet20.FC_Service_S46.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S46.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S47"
        Sheet20.FC_Service_S47.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S47.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S48"
        Sheet20.FC_Service_S48.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S48.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    Case "S49"
        Sheet20.FC_Service_S49.Caption = G_Check_Box_NSet                       ' Change to "Not Checked"
        Sheet20.FC_Service_S49.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    End Select
    
End Function                                                                    ' of F1320_Deselect_Check_Box
Function F1330_Reset_Status()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine resets the status for each service where it is currently "SV" or "SF" to "SN"
    ' - It is invoked whenever any questions are displayed or hidden as a result of changes on the front cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1330_Serv_No                                       As Integer          ' Service Number (format nn)
    Dim F1330_Service                                       As String           ' Service Number (format "Snn")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform this for each service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F1330_Serv_No = 31 To 50
        F1330_Service = "S" & F1330_Serv_No                                     ' Create Snn Service Number
        
        Select Case F0300_Access_Value("Status", F1330_Service, "G", "")        ' Check the current status
        
        Case "SV", "SF"                                                         ' If "validation performed and successful" or "validation performed and failed" then
            G_Caller = F0300_Access_Value("Status", F1330_Service, "U", "SN")   ' Set the Service to "Not Selected"
            G_Caller = F2090_Set_Service_Status(F1330_Service, "SN")            ' Set the service status text
        
        End Select
        
    Next F1330_Serv_No
    
End Function                                                                    ' of F1330_Reset_Status
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module14_Comments"
Option Explicit
Function F1400_Add_Remove_Comment()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function removes and adds a comment. The cell is already selected
    ' Input:
    ' - G_Comment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1400_Pos                                           As Integer
    Dim F1400_Lines                                         As Integer          ' Number of 60-character lines
    Dim F1400_CRLF                                          As Integer          ' Number of Chr(10) encountered
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Remove any existing comment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set Cmt = ActiveCell.Comment
    If Cmt Is Nothing Then
        ' Nothing
    Else
        Cmt.Delete
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if no comment to add
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Comment = "" Then
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check the comment length and determine height and width of the comment
    ' - Length 001 to 150, width is 200
    ' - Length 151 to 300, width is 300
    ' - Length 301 upward, width is 400
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Comment_Length = Len(G_Comment)
    
    If G_Comment_Length < 151 Then
        F1400_Lines = (G_Comment_Length - G_Comment_Length Mod 42) / 42
        
        For F1400_Pos = 1 To G_Comment_Length                                       ' Look through entire comment data
            If Mid(G_Comment, F1400_Pos, 1) = Chr(10) Then                          ' If this is a new line then
                F1400_CRLF = F1400_CRLF + 1                                         ' Count each new line requested
            End If
        Next F1400_Pos
        
        G_Comment_Width = 200                                                       ' Standard width of comment box
        G_Comment_Height = 16                                                       ' Single-line height of comment box
        
        G_Comment_Height = G_Comment_Height + (16 * F1400_Lines)                    ' Add one extra height unit for each complete 50 characters
        G_Comment_Height = G_Comment_Height + (16 * F1400_CRLF)                     ' Add one extra height unit per continuation line requested
        
    ElseIf G_Comment_Length < 301 Then
        F1400_Lines = (G_Comment_Length - G_Comment_Length Mod 65) / 65
        
        For F1400_Pos = 1 To G_Comment_Length                                       ' Look through entire comment data
            If Mid(G_Comment, F1400_Pos, 1) = Chr(10) Then                          ' If this is a new line then
                F1400_CRLF = F1400_CRLF + 1                                         ' Count each new line requested
            End If
        Next F1400_Pos
        
        G_Comment_Width = 300                                                       ' Standard width of comment box
        G_Comment_Height = 16                                                       ' Single-line height of comment box
        
        G_Comment_Height = G_Comment_Height + (16 * F1400_Lines)                    ' Add one extra height unit for each complete 50 characters
        G_Comment_Height = G_Comment_Height + (16 * F1400_CRLF)                     ' Add one extra height unit per continuation line requested
    
    Else
        F1400_Lines = (G_Comment_Length - G_Comment_Length Mod 90) / 90
        
        For F1400_Pos = 1 To G_Comment_Length                                       ' Look through entire comment data
            If Mid(G_Comment, F1400_Pos, 1) = Chr(10) Then                          ' If this is a new line then
                F1400_CRLF = F1400_CRLF + 1                                         ' Count each new line requested
            End If
        Next F1400_Pos
        
        G_Comment_Width = 400                                                       ' Standard width of comment box
        G_Comment_Height = 16                                                       ' Single-line height of comment box
        
        G_Comment_Height = G_Comment_Height + (16 * F1400_Lines)                    ' Add one extra height unit for each complete 50 characters
        G_Comment_Height = G_Comment_Height + (16 * F1400_CRLF)                     ' Add one extra height unit per continuation line requested
    
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Add the new comment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveCell.AddComment Text:=G_Comment
    
    Set Cmt = ActiveCell.Comment
    With Cmt.Shape.TextFrame.Characters.Font
        .Name = "Arial"
        .Size = 10
        .Bold = False
        .ColorIndex = 0
    End With
    
    With Cmt
        .Shape.TextFrame.AutoSize = True
        .Shape.Width = G_Comment_Width
        .Shape.Height = G_Comment_Height
    End With
    
End Function                                                                    ' of F1400_Add_Remove_Comment
Function F1410_Add_Remove_Comment(F1410_Tab_Name, F1410_Cell_Address)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function removes and adds a comment. The cell is defined by the worksheet and cell address
    ' Input:
    ' - G_Comment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1410_Pos                                           As Integer
    Dim F1410_Lines                                         As Integer          ' Number of 60-character lines
    Dim F1410_CRLF                                          As Integer          ' Number of Chr(10) encountered
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Remove any existing comment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set Cmt = Worksheets(F1410_Tab_Name).Range(F1410_Cell_Address).Comment
    If Cmt Is Nothing Then
        ' Nothing
    Else
        Cmt.Delete
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if no comment to add
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Comment = "" Then
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check the comment length and determine height and width of the comment
    ' - Length 001 to 150, width is 200
    ' - Length 151 to 300, width is 300
    ' - Length 301 upward, width is 400
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Comment_Length = Len(G_Comment)
    
    If G_Comment_Length < 151 Then
        F1410_Lines = (G_Comment_Length - G_Comment_Length Mod 42) / 42
        
        For F1410_Pos = 1 To G_Comment_Length                                       ' Look through entire comment data
            If Mid(G_Comment, F1410_Pos, 1) = Chr(10) Then                          ' If this is a new line then
                F1410_CRLF = F1410_CRLF + 1                                         ' Count each new line requested
            End If
        Next F1410_Pos
        
        G_Comment_Width = 200                                                       ' Standard width of comment box
        G_Comment_Height = 16                                                       ' Single-line height of comment box
        
        G_Comment_Height = G_Comment_Height + (16 * F1410_Lines)                    ' Add one extra height unit for each complete 50 characters
        G_Comment_Height = G_Comment_Height + (16 * F1410_CRLF)                     ' Add one extra height unit per continuation line requested
        
    ElseIf G_Comment_Length < 301 Then
        F1410_Lines = (G_Comment_Length - G_Comment_Length Mod 65) / 65
        
        For F1410_Pos = 1 To G_Comment_Length                                       ' Look through entire comment data
            If Mid(G_Comment, F1410_Pos, 1) = Chr(10) Then                          ' If this is a new line then
                F1410_CRLF = F1410_CRLF + 1                                         ' Count each new line requested
            End If
        Next F1410_Pos
        
        G_Comment_Width = 300                                                       ' Standard width of comment box
        G_Comment_Height = 16                                                       ' Single-line height of comment box
        
        G_Comment_Height = G_Comment_Height + (16 * F1410_Lines)                    ' Add one extra height unit for each complete 50 characters
        G_Comment_Height = G_Comment_Height + (16 * F1410_CRLF)                     ' Add one extra height unit per continuation line requested
    
    Else
        F1410_Lines = (G_Comment_Length - G_Comment_Length Mod 90) / 90
        
        For F1410_Pos = 1 To G_Comment_Length                                       ' Look through entire comment data
            If Mid(G_Comment, F1410_Pos, 1) = Chr(10) Then                          ' If this is a new line then
                F1410_CRLF = F1410_CRLF + 1                                         ' Count each new line requested
            End If
        Next F1410_Pos
        
        G_Comment_Width = 400                                                       ' Standard width of comment box
        G_Comment_Height = 16                                                       ' Single-line height of comment box
        
        G_Comment_Height = G_Comment_Height + (16 * F1410_Lines)                    ' Add one extra height unit for each complete 50 characters
        G_Comment_Height = G_Comment_Height + (16 * F1410_CRLF)                     ' Add one extra height unit per continuation line requested
    
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Add the new comment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F1410_Tab_Name).Range(F1410_Cell_Address).AddComment Text:=G_Comment
    
    Set Cmt = Worksheets(F1410_Tab_Name).Range(F1410_Cell_Address).Comment
    
    With Cmt.Shape.TextFrame.Characters.Font
        .Name = "Arial"
        .Size = 10
        .Bold = False
        .ColorIndex = 0
    End With
    
    With Cmt
        .Shape.TextFrame.AutoSize = True
        .Shape.Width = G_Comment_Width
        .Shape.Height = G_Comment_Height
    End With
    
End Function                                                                    ' of F1410_Add_Remove_Comment
Sub F1470_Align_Comments()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal function sets the size of the comment fields within the selected tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1410_Comment_Text                                  As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Deal with all comments
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For Each Cmt In ActiveSheet.Comments
        
        G_Comment_Length = Len(Cmt.Text)
        F1410_Comment_Text = Cmt.Text
        
        G_Comment_Width = 200
        G_Comment_Height = (Round(G_Comment_Length / 60, 0) + 1) * 16
        
        With Cmt
            .Shape.TextFrame.AutoSize = True
            .Shape.Width = G_Comment_Width
            .Shape.Height = G_Comment_Height
        End With
        
    Next Cmt
    
End Sub                                                                         ' of F14710_Align_Comments
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------


Attribute VB_Name = "Module15_Reset"
Option Explicit
Function F1500_Reset_Form_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button click: Reset Form Data (on Front Cover)
    ' For front cover and then for each service, check with user, then clear data from that service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 20 - If check box has been selected, then clear data from Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1520_Reset_Cover_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 31 - If check box has been selected, then clear data from Service 31 - BIN List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1531_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 36 - If check box has been selected, then clear data from Service 36 - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1536_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 42 - If check box has been selected, then clear data from Service 42 - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1542_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 37 - If check box has been selected, then clear data from Service 37 - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1537_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 38 - If check box has been selected, then clear data from Service 38 - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1538_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 34 - If check box has been selected, then clear data from Service 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1534_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 35 - If check box has been selected, then clear data from Service 35 - Verified by Visa (VbV)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1535_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 40 - If check box has been selected, then clear data from Service 40 - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1540_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 43 - If check box has been selected, then clear data from Service 43 - Additional Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1543_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 41 - If check box has been selected, then clear data from Service 41 - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1541_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 44 - If check box has been selected, then clear data from Service 44 - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1544_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 45 - If check box has been selected, then clear data from Service 45 - Visa Resolve Online (VROL) Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1545_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 47 - If check box has been selected, then clear data from Service 47 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1547_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 48 - If check box has been selected, then clear data from Service 48 - Application processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1548_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 46 - If check box has been selected, then clear data from Service 46 - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1546_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 49 - If check box has been selected, then clear data from Service 49 - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1549_Reset_Data()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reset the client submission data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("Tag", "Submit", "U", "N")                    ' Update to indicate not submitted by client (this affects locking/unlocking)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Sheet20.FC_I_Agree.Caption = G_Check_Box_NSet                               ' "I agree" button - Not selected
    Sheet20.FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Tidy up
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Activate                                            ' Activate the Cover Page worksheet
    Range("A1").Select                                                          ' Select the home position
    
End Function                                                                    ' of F1500_Reset_Form_Data
Function F1520_Reset_Cover_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 20 - If check box has been selected, then clear data from Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Financial Institution
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S20a.Caption = G_Check_Box_Sett Then
        Worksheets(G_Tab_Cover).Activate                                        ' Activate the Front Cover worksheet
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_FinNam).Select                                         ' A01 - Business Name
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinNam, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_FinBID).Select                                         ' A02 - Business ID
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinBID, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_FinCon).Select                                         ' A03 - Contact
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinCon, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_FinMel).Select                                         ' A04 - E-mail Address
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinMel, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_FinTel).Select                                         ' A05 - Telephone Number
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinTel, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Response = F0300_Access_Value("Status", "FC", "U", "SN")              ' Validation not yet performed
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S20", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Processor
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S20b.Caption = G_Check_Box_Sett Then
        Worksheets(G_Tab_Cover).Activate                                        ' Activate the Front Cover worksheet
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_PrcNam).Select                                         ' A06 - Business Name
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcNam, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_PrcBID).Select                                         ' A07 - Business ID
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcBID, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_PrcCon).Select                                         ' A08 - Contact
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcCon, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_PrcMel).Select                                         ' A09 - E-mail Address
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcMel, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_PrcTel).Select                                         ' A10 - Telephone Number
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcTel, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Response = F0300_Access_Value("Status", "FC", "U", "SN")              ' Validation not yet performed
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S20", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - System section
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S20c.Caption = G_Check_Box_Sett Then
        Worksheets(G_Tab_Cover).Activate                                        ' Activate the Front Cover worksheet
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_Region).Select                                         ' A12 - Region
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_Region, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_FinCty).Select                                         ' A13 - Country
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinCty, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_Enviro).Select                                         ' A14 - Environment
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_Enviro, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_MsgCap).Select                                         ' A15 - Message Capability
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_MsgCap, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_EffDat).Select                                         ' A16 - Requested Effective Date
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_UpdTyp).Select                                         ' A17 - Update Type
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_UpdTyp, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_BusJus).Select                                         ' A11 - Business Justification
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_BusJus, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_PCR_No).Select                                         ' A18 - PCR Number
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PCR_No, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_CpyBIN).Select                                         ' A19 - Copy BIN
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_CpyBIN, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_FC_Range_UpdTyp).Select                                         ' A17 - Update Type (again - it can be set to Installation if Copy BIN is non-blank)
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)                                 ' Turn off worksheet protection again
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_UpdTyp, "")                  ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Response = F0300_Access_Value("Status", "FC", "U", "SN")              ' Validation not yet performed
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S20", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
    End If
    
End Function                                                                    ' of F1520_Reset_Cover_Data
Function F1531_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 31 - BIN List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 31 - BIN List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S31.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc31).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc31).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc31)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range("C18:C317").ClearContents                                         ' BIN List, Column C
        Range("C18:C317").ClearComments
        Range("C18:C317").Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range("D18:D317").ClearContents                                         ' BIN List, Column D
        Range("D18:D317").ClearComments
        Range("D18:D317").Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range("F18:F317").ClearContents                                         ' BIN List, Column F
        Range("F18:F317").ClearComments
        Range("F18:F317").Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range("H18:L317").ClearContents                                         ' BIN List, Column H-L
        Range("H18:L317").ClearComments
        Range("H18:L317").Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S31", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S31", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S31", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc31).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1531_Reset_Data
Function F1534_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S34.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc34).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc34).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc34)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBE_3(G_Answer)).Select                               ' H01 - ABBE_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBE3T(G_Answer)).Select                               ' H02 - ABBE3T
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE3T(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBC_1(G_Answer)).Select                               ' H03 - ABBC1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBC_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBE4a(G_Answer)).Select                               ' H04 - ABBE4a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE4a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBE4b(G_Answer)).Select                               ' H05 - ABBE4b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE4b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_01(G_Answer)).Select                               ' H06 - Exp_01
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_01(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_01(G_Answer)).Select                               ' H06 - CVN_01
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_01(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_01(G_Answer)).Select                               ' H06 - CAM_01
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_01(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_02(G_Answer)).Select                               ' H07 - Exp_02
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_02(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_02(G_Answer)).Select                               ' H07 - CVN_02
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_02(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_02(G_Answer)).Select                               ' H07 - CAM_02
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_02(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_03(G_Answer)).Select                               ' H08 - Exp_03
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_03(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_03(G_Answer)).Select                               ' H08 - CVN_03
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_03(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_03(G_Answer)).Select                               ' H08 - CAM_03
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_03(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_04(G_Answer)).Select                               ' H09 - Exp_04
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_04(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_04(G_Answer)).Select                               ' H09 - CVN_04
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_04(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_04(G_Answer)).Select                               ' H09 - CAM_04
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_04(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_05(G_Answer)).Select                               ' H10 - Exp_05
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_05(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_05(G_Answer)).Select                               ' H10 - CVN_05
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_05(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_05(G_Answer)).Select                               ' H10 - CAM_05
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_05(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_06(G_Answer)).Select                               ' H11 - Exp_06
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_06(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_06(G_Answer)).Select                               ' H11 - CVN_06
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_06(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_06(G_Answer)).Select                               ' H11 - CAM_06
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_06(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_07(G_Answer)).Select                               ' H12 - Exp_07
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_07(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_07(G_Answer)).Select                               ' H12 - CVN_07
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_07(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_07(G_Answer)).Select                               ' H12 - CAM_07
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_07(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_08(G_Answer)).Select                               ' H13 - Exp_08
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_08(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_08(G_Answer)).Select                               ' H13 - CVN_08
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_08(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_08(G_Answer)).Select                               ' H13 - CAM_08
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_08(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_09(G_Answer)).Select                               ' H14 - Exp_09
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_09(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_09(G_Answer)).Select                               ' H14 - CVN_09
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_09(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_09(G_Answer)).Select                               ' H14 - CAM_09
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_09(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_10(G_Answer)).Select                               ' H15 - Exp_10
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_10(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_10(G_Answer)).Select                               ' H15 - CVN_10
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_10(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_10(G_Answer)).Select                               ' H15 - CAM_10
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_10(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_11(G_Answer)).Select                               ' H16 - Exp_11
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_11(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_11(G_Answer)).Select                               ' H16 - CVN_11
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_11(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_11(G_Answer)).Select                               ' H16 - CAM_11
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_11(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_12(G_Answer)).Select                               ' H17 - Exp_12
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_12(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_12(G_Answer)).Select                               ' H17 - CVN_12
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_12(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_12(G_Answer)).Select                               ' H17 - CAM_12
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_12(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_13(G_Answer)).Select                               ' H18 - Exp_13
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_13(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_13(G_Answer)).Select                               ' H18 - CVN_13
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_13(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_13(G_Answer)).Select                               ' H18 - CAM_13
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_13(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_14(G_Answer)).Select                               ' H19 - Exp_14
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_14(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_14(G_Answer)).Select                               ' H19 - CVN_14
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_14(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_14(G_Answer)).Select                               ' H19 - CAM_14
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_14(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_15(G_Answer)).Select                               ' H20 - Exp_15
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_15(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_15(G_Answer)).Select                               ' H20 - CVN_15
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_15(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_15(G_Answer)).Select                               ' H20 - CAM_15
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_15(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_16(G_Answer)).Select                               ' H21 - Exp_16
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_16(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_16(G_Answer)).Select                               ' H21 - CVN_16
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_16(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_16(G_Answer)).Select                               ' H21 - CAM_16
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_16(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_17(G_Answer)).Select                               ' H22 - Exp_17
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_17(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_17(G_Answer)).Select                               ' H22 - CVN_17
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_17(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_17(G_Answer)).Select                               ' H22 - CAM_17
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_17(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_18(G_Answer)).Select                               ' H23 - Exp_18
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_18(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_18(G_Answer)).Select                               ' H23 - CVN_18
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_18(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_18(G_Answer)).Select                               ' H23 - CAM_18
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_18(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_19(G_Answer)).Select                               ' H24 - Exp_19
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_19(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_19(G_Answer)).Select                               ' H24 - CVN_19
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_19(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_19(G_Answer)).Select                               ' H24 - CAM_19
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_19(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_Exp_20(G_Answer)).Select                               ' H25 - Exp_20
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_Exp_20(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CVN_20(G_Answer)).Select                               ' H25 - CVN_20
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_20(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        Range(G_EM_Range_CAM_20(G_Answer)).Select                               ' H25 - CAM_20
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_20(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBE_5(G_Answer)).Select                               ' H26 - ABBE_5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBG_7(G_Answer)).Select                               ' H27 - ABBG_7
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG_7(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBG11(G_Answer)).Select                               ' H28 - ABBG11
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG11(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBG12(G_Answer)).Select                               ' H29 - ABBG12
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG12(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABFX_3(G_Answer)).Select                               ' H30 - ABF3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABFX_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_AGR_PM(G_Answer)).Select                               ' H31 - AGR_PM
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_AGR_PM(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_1(G_Answer)).Select                               ' H32 - ABBH_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_2(G_Answer)).Select                               ' H33 - ABBH_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_3(G_Answer)).Select                               ' H34 - ABBH_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_4(G_Answer)).Select                               ' H35 - ABBH_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_5(G_Answer)).Select                               ' H36 - ABBH_5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_6(G_Answer)).Select                               ' H37 - ABBH_6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_6(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH7a(G_Answer)).Select                               ' H38 - ABBH7a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH7a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH7b(G_Answer)).Select                               ' H39 - ABBH7b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH7b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_8(G_Answer)).Select                               ' H40 - ABBH_8
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_8(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH_9(G_Answer)).Select                               ' H41 - ABBH_9
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_9(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH10(G_Answer)).Select                               ' H42 - ABBH10
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH10(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH11(G_Answer)).Select                               ' H43 - ABBH11
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH11(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH12(G_Answer)).Select                               ' H44 - ABBH12
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH12(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH13(G_Answer)).Select                               ' H45 - ABBH13
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH13(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH14(G_Answer)).Select                               ' H46 - ABBH14
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH14(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH15(G_Answer)).Select                               ' H47 - ABBH15
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH15(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH16(G_Answer)).Select                               ' H48 - ABBH16
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH16(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH17(G_Answer)).Select                               ' H49 - ABBH17
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH17(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABB18a(G_Answer)).Select                               ' H50 - ABB18a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABB18a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABB18b(G_Answer)).Select                               ' H51 - ABB18b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABB18b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH19(G_Answer)).Select                               ' H52 - ABBH19
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH19(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH20(G_Answer)).Select                               ' H53 - ABBH20
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH20(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH21(G_Answer)).Select                               ' H54 - ABBH21
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH21(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH22(G_Answer)).Select                               ' H55 - ABBH22
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH22(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH23(G_Answer)).Select                               ' H56 - ABBH23
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH23(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBH24(G_Answer)).Select                               ' H57 - ABBH24
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH24(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBI_1(G_Answer)).Select                               ' H58 - ABBI_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBI_2(G_Answer)).Select                               ' H59 - ABBI_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBI_4(G_Answer)).Select                               ' H60 - ABBI_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBI_5(G_Answer)).Select                               ' H61 - ABBI_5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBK_1(G_Answer)).Select                               ' H62 - ABBK_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBK2a(G_Answer)).Select                               ' H63 - ABBK2a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK2a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBK2b(G_Answer)).Select                               ' H64 - ABBK2b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK2b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_EM_Range_ABBK2c(G_Answer)).Select                               ' H65 - ABBK2c
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK2c(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S34", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S34", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S34", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S34", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc34).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1534_Reset_Data
Function F1535_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 35 - Verified by Visa (VbV)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 35 - Verified by Visa (VbV)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S35.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc35).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc35).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc35)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_ABE_1a(G_Answer)).Select                               ' J01 - ABE_1a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_1a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_ABE_1b(G_Answer)).Select                               ' J01 - ABE_1b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_1b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_ABE_2a(G_Answer)).Select                               ' J02 - ABE_2a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_2a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_ABE_2b(G_Answer)).Select                               ' J02 - ABE_2b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_2b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_ABE_3a(G_Answer)).Select                               ' J03 - ABE_3a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_3a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_ABE_3b(G_Answer)).Select                               ' J03 - ABE_3b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_3b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_URL_01(G_Answer)).Select                               ' J04 - URL_01
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_01(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_URL_02(G_Answer)).Select                               ' J05 - URL_02
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_02(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_URL_03(G_Answer)).Select                               ' J06 - URL_03
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_03(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VV_Range_URL_04(G_Answer)).Select                               ' J07 - URL_04
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_04(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S35", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S35", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S35", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S35", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc35).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1535_Reset_Data
Function F1536_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 36 - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 36 - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S36.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc36).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc36).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc36)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAA_1(G_Answer)).Select                               ' C01 - ABAA_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAA_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB_2(G_Answer)).Select                               ' C02 - ABAB_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB6A(G_Answer)).Select                               ' C03 - ABAB6A
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB6A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB1B(G_Answer)).Select                               ' C04 - ABAB1B
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB1B(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB2B(G_Answer)).Select                               ' C05 - ABAB2B
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB2B(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB6B(G_Answer)).Select                               ' C06 - ABAB6B
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB6B(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB1C(G_Answer)).Select                               ' C07 - ABAB1C
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB1C(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB2C(G_Answer)).Select                               ' C08 - ABAB2C
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB2C(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAB6C(G_Answer)).Select                               ' C09 - ABAB6C
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB6C(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABAE_5(G_Answer)).Select                               ' C10 - ABAE_5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAE_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDA_1(G_Answer)).Select                               ' C11 - ABDA_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDA_2(G_Answer)).Select                               ' C12 - ABDA_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDA_3(G_Answer)).Select                               ' C13 - AABDA_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDA_4(G_Answer)).Select                               ' C14 - ABDA_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDB1A(G_Answer)).Select                               ' C15 - ABDB1A
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDB1A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDB1B(G_Answer)).Select                               ' C16 - ABDB1B
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDB1B(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CV_Range_ABDB1C(G_Answer)).Select                               ' C17 - ABDB1C
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDB1C(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S36", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S36", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S36", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S36", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc36).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1536_Reset_Data
Function F1537_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 37 - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 37 - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S37.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc37).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc37).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc37)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACAX_2(G_Answer)).Select                               ' E01 - ACAX_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACA_2T(G_Answer)).Select                               ' E02 - ACA_2T
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACA_2T(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACEX_3(G_Answer)).Select                               ' E03 - ACEX_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACEX_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACAX_4(G_Answer)).Select                               ' E04 - ACEX_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACAX_5(G_Answer)).Select                               ' E05 - ACAX_5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACAX_6(G_Answer)).Select                               ' E06 - ACAX_6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACAX_3(G_Answer)).Select                               ' E07 - ACAX_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACBX_1(G_Answer)).Select                               ' E08 - ACBX_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACBX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACDX_6(G_Answer)).Select                               ' E09 - ACDX_6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACDX_6(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACEX_1(G_Answer)).Select                               ' E10 - ACEX_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACEX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_1(G_Answer)).Select                               ' E11 - ACHQ_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_2(G_Answer)).Select                               ' E12 - ACHQ_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_3(G_Answer)).Select                               ' E13 - ACHQ_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_4(G_Answer)).Select                               ' E14 - ACHQ_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_5(G_Answer)).Select                               ' E15 - ACHQ_5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_6(G_Answer)).Select                               ' E16 - ACHQ_6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_6(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PP_Range_ACHQ_7(G_Answer)).Select                               ' E17 - ACHQ_7
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_7(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S37", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S37", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S37", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S37", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc37).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1537_Reset_Data
Function F1538_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 38 - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 38 - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S38.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc38).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc38).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc38)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q1(G_Answer)).Select                               ' G01 |fffd| AGZ 1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q2(G_Answer)).Select                               ' G02 |fffd| AGZ 2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q3(G_Answer)).Select                               ' G03 |fffd| AGZ 3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q4(G_Answer)).Select                               ' G04 |fffd| AGZ 4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q5(G_Answer)).Select                               ' G05 |fffd| AGZ 5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q6(G_Answer)).Select                               ' G06 |fffd| AGZ 6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q6(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q7(G_Answer)).Select                               ' G07 |fffd| AGZ 7
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q7(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGZ_Q8(G_Answer)).Select                               ' G08 |fffd| AGZ 8
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q8(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGB_Q1(G_Answer)).Select                               ' G09 |fffd| AGB_Q1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_Q1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGB_Q2(G_Answer)).Select                               ' G10 |fffd| AGB_Q2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_Q2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGB_3a(G_Answer)).Select                               ' G11 |fffd| AGB_3a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_3a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AGB_3b(G_Answer)).Select                               ' G12 |fffd| AGB_3b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_3b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AHC_Q4(G_Answer)).Select                               ' G13 |fffd| AHC_Q4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHC_Q4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AHE_1a(G_Answer)).Select                               ' G14 |fffd| AHE 1a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AHE_1b(G_Answer)).Select                               ' G15 |fffd| AHE 1b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_S1_Range_AHE_Q2(G_Answer)).Select                               ' G16 |fffd| AHE 2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_Q2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S38", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S38", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S38", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S38", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc38).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1538_Reset_Data
Function F1540_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 40 - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 40 - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S40.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc40).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc40).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc40)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_APHX_2(G_Answer)).Select                               ' K01 - APHX_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_APHX_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_APHX_4(G_Answer)).Select                               ' K02 - APHX_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_APHX_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_APHX_6(G_Answer)).Select                               ' K03 - APHX_6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_APHX_6(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGKX_1(G_Answer)).Select                               ' K04 - AGKX_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGKX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGKX_2(G_Answer)).Select                               ' K05 - AGKX_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGKX_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_3a(G_Answer)).Select                               ' K06 - AGK_3a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_3a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_3b(G_Answer)).Select                               ' K07 - AGK_3b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_3b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_3c(G_Answer)).Select                               ' K08 - AGK_3c
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_3c(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_4a(G_Answer)).Select                               ' K09 - AGK_4a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_4a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_4b(G_Answer)).Select                               ' K10 - AGK_4b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_4b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_4c(G_Answer)).Select                               ' K11 - AGK_4c
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_4c(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_5a(G_Answer)).Select                               ' K12 - AGK_5a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_5a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_5b(G_Answer)).Select                               ' K13 - AGK_5b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_5b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_5c(G_Answer)).Select                               ' K14 - AGK_5c
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_5c(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_6a(G_Answer)).Select                               ' K15 - AGK_6a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_6a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_6b(G_Answer)).Select                               ' K16 - AGK_6b
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_6b(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VD_Range_AGK_6c(G_Answer)).Select                               ' K17 - AGK_6c
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGK_6c(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S40", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S40", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S40", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S40", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc40).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1540_Reset_Data
Function F1541_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 41 - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 41 - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S41.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc41).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc41).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc41)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_A1_Range_AEU_Q2(G_Answer)).Select                               ' M01 - AEU 2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEU_Q2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_A1_Range_AEW_Q1(G_Answer)).Select                               ' M02 - AEW 1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEW_Q1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_A1_Range_AEW_Q2(G_Answer)).Select                               ' M03 - AEW 2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEW_Q2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S41", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S41", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S41", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S41", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc41).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1541_Reset_Data
Function F1542_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 42 - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 42 - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S42.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc42).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc42).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc42)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_MO_Range_AJAX_1(G_Answer)).Select                               ' D01 - AJAX_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_MO_Range_AJAX_2(G_Answer)).Select                               ' D02 - AJAX_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_MO_Range_AJAX_4(G_Answer)).Select                               ' D03 - AJAX_4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_MO_Range_AJAX_7(G_Answer)).Select                               ' D04 - AJAX_7
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_7(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_MO_Range_AJDX_3(G_Answer)).Select                               ' D05 - AJDX_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJDX_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S42", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S42", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S42", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S42", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc42).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1542_Reset_Data
Function F1543_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 43 - Additional Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 43 - Additional Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S43.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc43).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc43).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc43)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_AEOX_8(G_Answer)).Select                               ' L01 - AEO 8
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_AEOX_8(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_AEEX_1(G_Answer)).Select                               ' L02 - AEE 1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_AEEX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APFX_4(G_Answer)).Select                               ' L03 - APF 4
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APFX_4(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APFX_5(G_Answer)).Select                               ' L04 - APF 5
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APFX_5(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APCA_7(G_Answer)).Select                               ' L05 - APCA 7
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA_7(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APCA12(G_Answer)).Select                               ' L06 - APCA 12
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA12(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APCA_1(G_Answer)).Select                               ' L07 - APCA 1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_AIAX_1(G_Answer)).Select                               ' L08 - AIA 1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_AIAX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_AOAX_2(G_Answer)).Select                               ' L09 - AOA 2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_AOAX_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_ADXX_1(G_Answer)).Select                               ' L10 - AD 1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_ADXX_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_AVXX_3(G_Answer)).Select                               ' L11 - AV 3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_AVXX_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_AVX_5a(G_Answer)).Select                               ' L12 - AV 5a
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_AVX_5a(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APBA11(G_Answer)).Select                               ' L13 - APBB 11
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APBA11(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APCA13(G_Answer)).Select                               ' L14 - APCA 13
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA13(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_ManCas(G_Answer)).Select                               ' L15 - MANCAS
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_ManCas(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_PO_Range_APCA_2(G_Answer)).Select                               ' L16 - APCA 2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S43", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S43", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S43", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S43", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc43).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1543_Reset_Data
Function F1544_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 44 - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 44 - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S44.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc44).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc44).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc44)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_RR_Range_GA6Fin(G_Answer)).Select                               ' N01 - GA6
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S44", G_RR_Range_GA6Fin(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_RR_Range_SM600a(G_Answer)).ClearContents                        ' N02 - SMS 600
        Range(G_RR_Range_SM600b(G_Answer)).ClearContents                        '       SMS 600
        Range(G_RR_Range_SM600c(G_Answer)).ClearContents                        '       SMS 600
        Range(G_RR_Range_SM600d(G_Answer)).ClearContents                        '       SMS 600
        Range(G_RR_Range_SM608c(G_Answer)).ClearContents                        ' N03 - SMS 608
        Range(G_RR_Range_SM610a(G_Answer)).ClearContents                        ' N04 - SMS 610
        Range(G_RR_Range_SM610b(G_Answer)).ClearContents                        '       SMS 610
        Range(G_RR_Range_SM610c(G_Answer)).ClearContents                        '       SMS 610
        Range(G_RR_Range_SM612a(G_Answer)).ClearContents                        ' N05 - SMS 612
        Range(G_RR_Range_SM612b(G_Answer)).ClearContents                        '       SMS 612
        Range(G_RR_Range_SM612c(G_Answer)).ClearContents                        '       SMS 612
        Range(G_RR_Range_SM614a(G_Answer)).ClearContents                        ' N06 - SMS 614
        Range(G_RR_Range_SM614b(G_Answer)).ClearContents                        '       SMS 614
        Range(G_RR_Range_SM614c(G_Answer)).ClearContents                        '       SMS 614
        Range(G_RR_Range_SM616a(G_Answer)).ClearContents                        ' N07 - SMS 616
        Range(G_RR_Range_SM616c(G_Answer)).ClearContents                        '       SMS 616
        Range(G_RR_Range_SM620c(G_Answer)).ClearContents                        ' N08 - SMS 620
        Range(G_RR_Range_SM620d(G_Answer)).ClearContents                        '       SMS 620
        Range(G_RR_Range_SM626a(G_Answer)).ClearContents                        ' N09 - SMS 626
        Range(G_RR_Range_SM640d(G_Answer)).ClearContents                        ' N10 - SMS 640
        Range(G_RR_Range_SM642c(G_Answer)).ClearContents                        ' N11 - SMS 642
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_RR_Range_V22120(G_Answer)).ClearContents                        ' N12 - V22120
        Range(G_RR_Range_V22200(G_Answer)).ClearContents                        ' N13 - V22200
        Range(G_RR_Range_V22255(G_Answer)).ClearContents                        ' N14 - V22255
        Range(G_RR_Range_V22260(G_Answer)).ClearContents                        ' N15 - V22260
        Range(G_RR_Range_V22261(G_Answer)).ClearContents                        ' N16 - V22261
        Range(G_RR_Range_V22276(G_Answer)).ClearContents                        ' N17 - V22276
        Range(G_RR_Range_V22300(G_Answer)).ClearContents                        ' N18 - V22300
        Range(G_RR_Range_V22310(G_Answer)).ClearContents                        ' N19 - V22310
        Range(G_RR_Range_V22400(G_Answer)).ClearContents                        ' N20 - V22400
        Range(G_RR_Range_V22461(G_Answer)).ClearContents                        ' N21 - V22431
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_RR_Range_V23200(G_Answer)).ClearContents                        ' N22 - V23200
        Range(G_RR_Range_V23210(G_Answer)).ClearContents                        ' N23 - V23210
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_RR_Range_Header(G_Answer)).MergeArea.ClearContents              ' N24 - Header
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S44", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S44", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S44", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S44", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc44).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1544_Reset_Data
Function F1545_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 45 - Visa Resolve Online (VROL) Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 45 - Visa Resolve Online (VROL) Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S45.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc45).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc45).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc45)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL100(G_Answer)).Select                               ' P01 - VRL100
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL100(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL200(G_Answer)).Select                               ' P02 - VRL200
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL200(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL210(G_Answer)).Select                               ' P03 - VRL210
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL210(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL220(G_Answer)).Select                               ' P04 - VRL220
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL220(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL230(G_Answer)).Select                               ' P05 - VRL230
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL230(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL300(G_Answer)).Select                               ' P06 - VRL300
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL300(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL310(G_Answer)).Select                               ' P07 - VRL310
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL310(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL315(G_Answer)).Select                               ' P08 - VRL315
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL315(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL320(G_Answer)).Select                               ' P09 - VRL320
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL320(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL400(G_Answer)).Select                               ' P10 - VRL400
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL400(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_APBA15(G_Answer)).Select                               ' P11 - APBA15
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_APBA15(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL490(G_Answer)).Select                               ' P12 - VRL490
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL490(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_VRL510(G_Answer)).Select                               ' P13 - VRL510
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL510(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S45", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S45", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S45", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S45", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc45).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1545_Reset_Data
Function F1546_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 46 - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 46 - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S46.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc46).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc46).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc46)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_TISH_1(G_Answer)).Select                               ' S01 - TISH_1
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Svc46)                             ' Turn off worksheet protection
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_TISH_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_ISCY_1(G_Answer)).Select                               ' S02 - ISCY_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_RSRE_1(G_Answer)).Select                               ' S03 - RSRE_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_ISCY_2(G_Answer)).Select                               ' S04 - ISCY_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_NNSS_1(G_Answer)).Select                               ' S05 - NNSS_1
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Svc46)                             ' Turn off worksheet protection
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_NNSS_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_TNNS_1(G_Answer)).Select                               ' S06 - TNNS_1
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Svc46)                             ' Turn off worksheet protection
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_TNNS_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_RSRE_2(G_Answer)).Select                               ' S07 - RSRE_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_RFTC_1(G_Answer)).Select                               ' S08 - RFTC_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_RFTC_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_ACIB_1(G_Answer)).Select                               ' S09 - ACIB_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_ACIB_2(G_Answer)).Select                               ' S09 - ACIB_2
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_2(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_ACIB_3(G_Answer)).Select                               ' S09 - ACIB_3
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_3(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VS_Range_RSOB_1(G_Answer)).Select                               ' S10 - RSOB_1
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSOB_1(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range("K58:K91").Select                                                 ' Reports table
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        Selection.ClearComments                                                     ' Remove the cell comments
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S46", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S46", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S46", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S46", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc46).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1546_Reset_Data
Function F1547_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 47 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 47 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S47.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc47).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc47).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc47)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CL_Range_CIBCIB(G_Answer)).Select                               ' Q01 - CIB
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_CIBCIB(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CL_Range_CC_PBD(G_Answer)).Select                               ' Q02 - CC PBD
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_CC_PBD(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CL_Range_TCR4_A(G_Answer)).Select                               ' Q03 - TCR4_A
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_TCR4_A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CL_Range_TCR5_I(G_Answer)).Select                               ' Q04 - TCR5_I
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_TCR5_I(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CL_Range_VROLRI(G_Answer)).Select                               ' Q05 - VROLRI
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_VROLRI(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CL_Range_TCRD_R(G_Answer)).Select                               ' Q06 - TCRD_R
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_TCRD_R(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S47", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S47", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S47", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S47", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc47).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1547_Reset_Data
Function F1548_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 48 - Application Processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 48 - Application Processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S48.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc48).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc48).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc48)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_CIBCIB(G_Answer)).Select                               ' R01 - CIB
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_CIBCIB(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_ExiNew(G_Answer)).Select                               ' R02 - Existing / New
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiNew(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_ExiB2P(G_Answer)).Select                               ' R03 - Existing - BASE II Processor
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiB2P(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_ExiCIB(G_Answer)).Select                               ' R04 - Existing - CIB
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiCIB(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_NewB2P(G_Answer)).Select                               ' R05 - New - BASE II Processor
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_NewB2P(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_NewFQD(G_Answer)).Select                               ' R06 - New - Fully-Qualified Domain name
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_NewFQD(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_OP_SYS(G_Answer)).Select                               ' R07 - Operating System Type
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_OP_SYS(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_EP_TYP(G_Answer)).Select                               ' R08 - End Point Type
        Selection.ClearContents                                                     ' Remove the cell contents
        G_Caller = F9981_Unprotect_One(G_Tab_Svc48)                             ' Turn off worksheet protection
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_EP_TYP(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_SEC_CD(G_Answer)).Select                               ' R09 - Security Code
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_SEC_CD(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_TC56_C(G_Answer)).Select                               ' R10 - TC56 C
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_TC56_C(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_TC56_S(G_Answer)).Select                               ' R11 - TC56 S
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_TC56_S(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_EP4CBX(G_Answer)).Select                               ' R12 - EP4CB
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_EP4CBX(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_DFT_33(G_Answer)).Select                               ' R13 - DFT33
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_DFT_33(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_CB_Range_GMT_1A(G_Answer) & ":" & _
              G_CB_Range_GMT_5T(G_Answer)).Select                               ' R14 to R18 - GMT table
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1T(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S48", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S48", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S48", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S48", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc48).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1548_Reset_Data
Function F1549_Reset_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If check box has been selected, then clear data from Service 49 - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the tab and reset the data - Service 49 - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If CIQF01.CIQF01_S49.Caption = G_Check_Box_Sett Then
        G_Caller = F9981_Unprotect_One("Workbook")                              ' Turn off workbook  protection
        Worksheets(G_Tab_Svc49).Activate                                        ' Activate the worksheet
        Worksheets(G_Tab_Svc49).Visible = True                                  ' Render the worksheet visible
        G_Caller = F9981_Unprotect_One(G_Tab_Svc49)                             ' Turn off worksheet protection
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_A_5100(G_Answer)).Select                               ' T01 - APR5100
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_A_5100(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_112(G_Answer)).Select                               ' T02 - BIOSR112
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_112(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_121(G_Answer)).Select                               ' T03 - BIOSR121
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_121(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_320(G_Answer)).Select                               ' T04 - BIOSR320
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_320(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_450(G_Answer)).Select                               ' T05 - BIOSR450
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_450(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_460(G_Answer)).Select                               ' T06 - BIOSR460
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_460(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_600(G_Answer)).Select                               ' T07 - BIOSR600
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_600(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_BR_610(G_Answer)).Select                               ' T08 - BIOSR610
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_610(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_C1100F(G_Answer)).Select                               ' T09 - CVV1100
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1100F(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_C1100A(G_Answer)).Select                               ' T09 - CVV1100
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1100A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_C6110F(G_Answer)).Select                               ' T10 - CVV6110
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_C6110F(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_C6110A(G_Answer)).Select                               ' T10 - CVV6110
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_C6110A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_C1130F(G_Answer)).Select                               ' T11 - CVV1130
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1130F(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_C1130A(G_Answer)).Select                               ' T11 - CVV1130
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1130A(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F11Act(G_Answer)).Select                               ' T12 - FRDDTC11 - action
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F11Act(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F11Fmt(G_Answer)).Select                               ' T12 - FRDDTC11 - report format
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F11Fmt(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F12Act(G_Answer)).Select                               ' T13 - FRDDTW12 - action
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F12Act(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F12Fmt(G_Answer)).Select                               ' T13 - FRDDTW12 - report format
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F12Fmt(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F13Act(G_Answer)).Select                               ' T14 - FRDDTR13 - action
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F13Act(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F13Fmt(G_Answer)).Select                               ' T14 - FRDDTR13 - report format
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F13Fmt(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F14Act(G_Answer)).Select                               ' T15 - FRDDTS14 - action
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F14Act(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F14Fmt(G_Answer)).Select                               ' T15 - FRDDTS14 - report format
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F14Fmt(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F15Act(G_Answer)).Select                               ' T16 - FRDDTS15 - action
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F15Act(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Range(G_VR_Range_F15Fmt(G_Answer)).Select                               ' T16 - FRDDTS15 - report format
        Selection.ClearContents                                                     ' Remove the cell contents
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, _
                                       G_Colour_Cell_Grey_G, _
                                       G_Colour_Cell_Grey_B)                        ' Reset to normal cell fill colour
        G_Caller = F0100_Find_Comment("S49", G_VR_Range_F15Fmt(G_Answer), "")       ' Obtain default comment
        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        If Left(F0300_Access_Value("Status", "S49", "G", ""), 1) = "S" Then
            G_Caller = F2090_Set_Service_Status("S49", "SN")                    ' Validation not yet performed
            G_Caller = F0300_Access_Value("Status", "S49", "U", "SN")           ' Validation not yet performed
        End If
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        G_Caller = F9820_User_to_CCData("S49", "R")                             ' Store details of user, date, time, versions
        
        '-----------------------------------------------------------------------'--------------------------------------------------------------------------------------
        Worksheets(G_Tab_Svc49).Visible = False                                 ' Render the worksheet invisible
    End If
    
End Function                                                                    ' of F1549_Reset_Data
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module16_Button_Text"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Global G_A_Button_Text(2, 12)                               As String
Global G_Button_Set                                         As Integer
Global G_Button_Index                                       As Integer
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F1600_Set_Button_Functions(F1600_Tab)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the button functions for the main buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1600_Column                                        As String
    Dim F1600_Service                                       As String
    Dim F1600_Validity                                      As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1600_Tab = G_Tab_Cover Then
        Worksheets(F1600_Tab).GP_Button_U1.Caption = "Reset Form Data"
        Worksheets(F1600_Tab).GP_Button_U1.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U1.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U1.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(F1600_Tab).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    Else
        Worksheets(F1600_Tab).GP_Button_U1.Caption = "Front Cover"
        Worksheets(F1600_Tab).GP_Button_U1.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U1.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U1.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U1.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(F1600_Tab).GP_Button_U1.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button 2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1600_Tab = G_Tab_Print Then
        Worksheets(F1600_Tab).GP_Button_U2.Caption = "View All"
        Worksheets(F1600_Tab).GP_Button_U2.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U2.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U2.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(F1600_Tab).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    Else
        Worksheets(F1600_Tab).GP_Button_U2.Caption = "Print Preview"
        Worksheets(F1600_Tab).GP_Button_U2.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U2.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U2.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U2.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(F1600_Tab).GP_Button_U2.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button 3
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1600_Tab = G_Tab_Cover Then
        Worksheets(F1600_Tab).GP_Button_U3.Caption = "Validate All Services"
        Worksheets(F1600_Tab).GP_Button_U3.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U3.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U3.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(F1600_Tab).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    ElseIf F1600_Tab = G_Tab_Print Then
        Worksheets(F1600_Tab).GP_Button_U3.Caption = "View Completed"
        Worksheets(F1600_Tab).GP_Button_U3.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U3.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U3.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(F1600_Tab).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    Else
        Worksheets(F1600_Tab).GP_Button_U3.Caption = ""
        Worksheets(F1600_Tab).GP_Button_U3.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U3.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U3.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U3.ForeColor = RGB(G_Colour_Butt_Font2_R, G_Colour_Butt_Font2_G, G_Colour_Butt_Font2_B)
        Worksheets(F1600_Tab).GP_Button_U3.BackColor = RGB(G_Colour_Butt_Back2_R, G_Colour_Butt_Back2_G, G_Colour_Butt_Back2_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button 4
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1600_Tab = G_Tab_Print Then
        Worksheets(F1600_Tab).GP_Button_U4.Caption = "View Errors"
        Worksheets(F1600_Tab).GP_Button_U4.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U4.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U4.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font1_R, G_Colour_Butt_Font1_G, G_Colour_Butt_Font1_B)
        Worksheets(F1600_Tab).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back1_R, G_Colour_Butt_Back1_G, G_Colour_Butt_Back1_B)
    Else
        Worksheets(F1600_Tab).GP_Button_U4.Caption = "Validate Data"
        Worksheets(F1600_Tab).GP_Button_U4.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U4.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U4.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U4.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(F1600_Tab).GP_Button_U4.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button 5
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1600_Tab = G_Tab_Print Then
        Worksheets(F1600_Tab).GP_Button_U5.Caption = ""
        Worksheets(F1600_Tab).GP_Button_U5.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U5.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U5.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(F1600_Tab).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    Else
        Worksheets(F1600_Tab).GP_Button_U5.Caption = "Previous Service"
        Worksheets(F1600_Tab).GP_Button_U5.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U5.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U5.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U5.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(F1600_Tab).GP_Button_U5.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button 6
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1600_Tab = G_Tab_Print Then
        Worksheets(F1600_Tab).GP_Button_U6.Caption = "Print"
        Worksheets(F1600_Tab).GP_Button_U6.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U6.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U6.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font3_R, G_Colour_Butt_Font3_G, G_Colour_Butt_Font3_B)
        Worksheets(F1600_Tab).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back3_R, G_Colour_Butt_Back3_G, G_Colour_Butt_Back3_B)
    Else
        Worksheets(F1600_Tab).GP_Button_U6.Caption = "Next Service"
        Worksheets(F1600_Tab).GP_Button_U6.FontSize = 12
        Worksheets(F1600_Tab).GP_Button_U6.Font.Name = "Segoe UI"
        Worksheets(F1600_Tab).GP_Button_U6.Font.Bold = True
        Worksheets(F1600_Tab).GP_Button_U6.ForeColor = RGB(G_Colour_Butt_Font4_R, G_Colour_Butt_Font4_G, G_Colour_Butt_Font4_B)
        Worksheets(F1600_Tab).GP_Button_U6.BackColor = RGB(G_Colour_Butt_Back4_R, G_Colour_Butt_Back4_G, G_Colour_Butt_Back4_B)
    End If
    
End Function                                                                    ' of F1600_Set_Button_Functions
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module17_Disp_Hide"
Option Explicit
Function F1700_Display_Hide()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data in the Front Cover and in all of the Service tabs
    ' - Based on Region
    ' - Based on Country
    ' - Based on Message Capability
    ' - Based on Update Type
    ' The routine is invoked from the Front Cover (Sheet20 Logic):
    ' - Whenever the Region is changed, and
    ' - Whenever the Country is changed, and
    ' - Whenever the Message Capability is changed, and
    ' - Whenever the Update Type is changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store all of the Front Cover values that might be needed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_FC_Value_Region = Worksheets(G_Tab_Cover).Range(G_FC_Range_Region).Value
    G_FC_Value_FinCty = Worksheets(G_Tab_Cover).Range(G_FC_Range_FinCty).Value
    G_FC_Value_MsgCap = Worksheets(G_Tab_Cover).Range(G_FC_Range_MsgCap).Value
    G_FC_Value_UpdTyp = Worksheets(G_Tab_Cover).Range(G_FC_Range_UpdTyp).Value
    G_FC_Value_CpyBIN = Worksheets(G_Tab_Cover).Range(G_FC_Range_CpyBIN).Value
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' - Call the routines for each service where this type of action applies
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1731_Display_Hide_Svc31()
    G_Caller = F1734_Display_Hide_Svc34()
    G_Caller = F1735_Display_Hide_Svc35()
    G_Caller = F1736_Display_Hide_Svc36()
    G_Caller = F1737_Display_Hide_Svc37()
    G_Caller = F1738_Display_Hide_Svc38()
    G_Caller = F1742_Display_Hide_Svc42()
    G_Caller = F1743_Display_Hide_Svc43()
    G_Caller = F1745_Display_Hide_Svc45()
    G_Caller = F1746_Display_Hide_Svc46()
    G_Caller = F1747_Display_Hide_Svc47()
    G_Caller = F1748_Display_Hide_Svc48()
    
End Function                                                                    ' of F1700_Display_Hide
Function F1731_Display_Hide_Svc31()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 31 - BIN List
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc31)
    
End Function                                                                    ' of F1731_Display_Hide_Svc31
Function F1734_Display_Hide_Svc34()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 34 - Visa Smart Debit/Credit (VSDC)
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABBC 1    - Hide for AP; show for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBC_1(G_Entire), "H")        ' ABBC 1
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBC_1(G_Answer)).ClearContents
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBC_1(G_Question), "D")      ' ABBC 1
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABBE 4a   - Set drop-down list according to country - CAM
    ' CVN 01-20 - Set drop-down list according to country - CAM
    ' ABBE 5    - Set drop-down list according to country - Issuer Authentication
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_ABBE4a(G_Answer), "CAM")
    
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_01(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_02(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_03(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_04(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_05(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_06(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_07(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_08(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_09(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_10(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_11(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_12(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_13(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_14(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_15(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_16(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_17(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_18(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_19(G_Answer), "CAM")
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_CAM_20(G_Answer), "CAM")
    
    G_Caller = F1792_Update_Drop_Down_List(G_Tab_Svc34, G_EM_Range_ABBE_5(G_Answer), "I/A")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABBH1     - Hide for Installation; show for other types
    ' ABBH2     - Hide for Installation; show for other types
    ' ABBH3     - Hide for Installation; show for other types
    ' ABBH4     - Hide for Installation; show for other types
    ' ABBH5     - Hide for Installation; show for other types
    ' ABBH8     - Hide for Installation; show for other types
    ' ABBH9     - Hide for Installation; show for other types
    ' ABBH10    - Hide for Installation; show for other types
    ' ABBH11    - Hide for Installation; show for other types
    ' ABBH12    - Hide for Installation; show for other types
    ' ABBH13    - Hide for Installation; show for other types
    ' ABBH14    - Hide for Installation; show for other types
    ' ABBH15    - Hide for Installation; show for other types
    ' ABBH16    - Hide for Installation; show for other types
    ' ABBH17    - Hide for Installation; show for other types
    ' ABBH19    - Hide for Installation; show for other types
    ' ABBH20    - Hide for Installation; show for other types
    ' ABBH23    - Hide for Installation; show for other types
    ' ABBH24    - Hide for Installation; show for other types
    ' ABBI1     - Hide for Installation; show for other types
    ' ABBI2     - Hide for Installation; show for other types
    ' ABBI4     - Hide for Installation; show for other types
    ' ABBI5     - Hide for Installation; show for other types
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_UpdTyp = "Installation" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_1(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_1(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_2(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_2(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_3(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_3(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_4(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_4(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_5(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_5(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_8(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_8(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_9(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH_9(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH10(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH10(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH11(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH11(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH12(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH12(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH13(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH13(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH14(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH14(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH15(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH15(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH16(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH16(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH17(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH17(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH19(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH19(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH20(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH20(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH23(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH23(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH24(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBH24(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_1(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_1(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_2(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_2(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_4(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_4(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_5(G_Entire), "H")
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_ABBI_5(G_Answer)).ClearContents
        
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_1(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_2(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_3(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_4(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_5(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_8(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH_9(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH10(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH11(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH12(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH13(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH14(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH15(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH16(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH17(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH19(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH20(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH23(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBH24(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_1(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_2(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_4(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_ABBI_5(G_Question), "D")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' AGR_PM    - Display for CEMEA; hide for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_AGR_PM(G_Question), "D")      ' AGR_PM
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc34, G_EM_Range_AGR_PM(G_Entire), "H")        ' AGR_PM
        Worksheets(G_Tab_Svc34).Range(G_EM_Range_AGR_PM(G_Answer)).ClearContents
    End If
    
End Function                                                                    ' of F1734_Display_Hide_Svc34
Function F1735_Display_Hide_Svc35()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 35 - Verified by Visa (VbV)
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Function                                                                    ' of F1735a_Display_Hide_Svc35
Function F1736_Display_Hide_Svc36()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 36 - CVV / iCVV / CVV2
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABAA1 - Default for AP
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        With Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Validation                  ' Add the drop-down list
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_CVV_AP"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Visa CIQ"
            .InputMessage = ""
            .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
            .ShowInput = True
            .ShowError = True
        End With
        
        G_Caller = F0100_Find_Comment("S36", "C01/AP", "")                                          ' Obtain comment - AP
        G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc36, G_CV_Range_ABAA_1(G_Answer))               ' Remove and add any comment
        
        If G_FC_Value_UpdTyp = "Installation" Then
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Value = ""                   ' Clear the value
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Locked = False               ' Unlock the cell
        Else
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Value = ""                   ' Clear the value
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Locked = False               ' Unlock the cell
        End If
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_Note01(G_Entire), "D")            ' Show Note 01
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_Note02(G_Entire), "H")            ' Hide Note 02
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABAA1 - Default for CEMEA
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        With Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Validation                  ' Add the drop-down list
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_CVV_CE"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Visa CIQ"
            .InputMessage = ""
            .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
            .ShowInput = True
            .ShowError = True
        End With
        
        G_Caller = F0100_Find_Comment("S36", "C01/CE", "")                                          ' Obtain comment - CEMEA
        G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc36, G_CV_Range_ABAA_1(G_Answer))               ' Remove and add any comment
        
        If G_FC_Value_UpdTyp = "Installation" Then
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Value = "(R) All Resp."      ' Default the value
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Locked = True                ' Lock the cell
        Else
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Value = ""                   ' Clear the value
            Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAA_1(G_Answer)).Locked = False               ' Unlock the cell
        End If
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_Note01(G_Entire), "H")            ' Hide Note 01
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_Note02(G_Entire), "D")            ' Show Note 02
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABDA1 - Hide for CEMEA; show for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABDA_1(G_Entire), "H")        ' Hide row
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDA_1(G_Answer)).ClearContents                ' Remove answer
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABDA_1(G_Question), "D")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ABAB1 SetB - Hide for Installation; show for other types
    ' ABAB2 SetB - Hide for Installation; show for other types
    ' ABAB6 SetB - Hide for Installation; show for other types
    ' ABDB1 SetB - Hide for Installation; show for other types
    ' ABAB1 SetC - Hide for Installation; show for other types
    ' ABAB2 SetC - Hide for Installation; show for other types
    ' ABAB6 SetC - Hide for Installation; show for other types
    ' ABDB1 SetC - Hide for Installation; show for other types
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_UpdTyp = "Installation" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB1B(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB1B(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB2B(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB2B(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB6B(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB6B(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABDB1B(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDB1B(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB1C(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB1C(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB2C(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB2C(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB6C(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABAB6C(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABDB1C(G_Entire), "H")
        Worksheets(G_Tab_Svc36).Range(G_CV_Range_ABDB1C(G_Answer)).ClearContents
        
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB1B(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB2B(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB6B(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABDB1B(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB1C(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB2C(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABAB6C(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc36, G_CV_Range_ABDB1C(G_Question), "D")
        
    End If
    
End Function                                                                    ' of F1736_Display_Hide_Svc36
Function F1737_Display_Hide_Svc37()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 37 - PIN Processing
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc37)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' ACA 4     - Show for Australia, Brazil, India and New Zealand; hide for other countries; show only for Auth. Only (Change Request C19)
    ' ACA 5     - Show for Australia, Brazil, India and New Zealand; hide for other countries; show only for Auth. Only (Change Request C19)
    ' ACA 6     - Show for Australia, Brazil, India and New Zealand; hide for other countries; show only for Auth. Only (Change Request C19)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_MsgCap = "Auth. Only" And _
      (G_FC_Value_FinCty = "Australia" Or _
       G_FC_Value_FinCty = "Brazil" Or _
       G_FC_Value_FinCty = "India" Or _
       G_FC_Value_FinCty = "New Zealand") Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc37, G_PP_Range_ACAX_4(G_Question), "D")      ' ACA 4
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc37, G_PP_Range_ACAX_5(G_Question), "D")      ' ACA 5
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc37, G_PP_Range_ACAX_6(G_Question), "D")      ' ACA 6
        
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc37, G_PP_Range_ACAX_4(G_Entire), "H")        ' ACA 4
        Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_4(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc37, G_PP_Range_ACAX_5(G_Entire), "H")        ' ACA 5
        Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_5(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc37, G_PP_Range_ACAX_6(G_Entire), "H")        ' ACA 6
        Worksheets(G_Tab_Svc37).Range(G_PP_Range_ACAX_6(G_Answer)).ClearContents
    End If
    
End Function                                                                    ' of F1737a_Display_Hide_Svc37
Function F1738_Display_Hide_Svc38()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 38 - Stand-In Processing (STIP)
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' AGB 3a/3b - Display for Japan; hide for other countries
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_FinCty = "Japan" Then
        G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc38, G_S1_Range_AGB_3a(G_Question), "D")      ' AGB 3a/3b
    Else
        G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc38, G_S1_Range_AGB_3a(G_Entire), "H")        ' AGB 3a/3b
        Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGB_3a(G_Answer)).MergeArea.ClearContents
        Worksheets(G_Tab_Svc38).Range(G_S1_Range_AGB_3b(G_Answer)).MergeArea.ClearContents
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' AHC 4     - Display for AP; hide for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc38, G_S1_Range_AHC_Q4(G_Question), "D")      ' AHC 4
    Else
        G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc38, G_S1_Range_AHC_Q4(G_Entire), "H")        ' AHC 4
        Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHC_Q4(G_Answer)).ClearContents
    End If
    
End Function                                                                    ' of F1738a_Display_Hide_Svc38
Function F1742_Display_Hide_Svc42()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 42 - Currency Conversion Options
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' AJA 7     - Show for Full Service; hide for Auth Only
    ' AJD 3     - Show for Full Service; hide for Auth Only
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_MsgCap = "Full Service (SMS)" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc42, G_MO_Range_AJAX_7(G_Question), "D")      ' AJA 7
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc42, G_MO_Range_AJDX_3(G_Question), "D")      ' AJD 3
        
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc42, G_MO_Range_AJAX_7(G_Entire), "H")        ' AJA 7
        Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJAX_7(G_Answer)).ClearContents
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc42, G_MO_Range_AJDX_3(G_Entire), "H")        ' AJD 3
        Worksheets(G_Tab_Svc42).Range(G_MO_Range_AJDX_3(G_Answer)).ClearContents
    End If
    
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc42)
    
End Function                                                                    ' of F1742_Display_Hide_Svc42
Function F1743_Display_Hide_Svc43()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 43 - Additional Processing Options
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L01 - AEO 8    - Show for Full Service; hide for other message capabilities
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_MsgCap = "Full Service (SMS)" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AEOX_8(G_Question), "D")      ' AEO 8
        G_Caller = F0300_Access_Value("S43", "PO_AEOX_8_i", "U", "D")
        
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AEOX_8(G_Entire), "H")        ' AEO 8
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_AEOX_8(G_Answer)).ClearContents
        G_Caller = F0300_Access_Value("S43", "PO_AEOX_8_i", "U", "H")
        
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L02 - AEE 1     - Show for Japan; hide for other countries
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_FinCty = "Japan" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AEEX_1(G_Question), "D")      ' AEE 1
        G_Caller = F0300_Access_Value("S43", "PO_AEEX_1_i", "U", "D")
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AEEX_1(G_Entire), "H")        ' AEE 1
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_AEEX_1(G_Answer)).ClearContents
        G_Caller = F0300_Access_Value("S43", "PO_AEEX_1_i", "U", "H")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L05 - APCA 7    - Hide for Full Service; show for other message capabilities
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_MsgCap = "Full Service (SMS)" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_APCA_7(G_Entire), "H")        ' APCA 7
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_APCA_7(G_Answer)).ClearContents
        G_Caller = F0300_Access_Value("S43", "PO_APCA_7_i", "U", "H")
        
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_APCA_7(G_Question), "D")      ' APCA 7
        G_Caller = F0300_Access_Value("S43", "PO_APCA_7_i", "U", "D")
        
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L09 - AOA 2 - Show Note 1 for CEMEA (Serbia and Russia)
    '               Show Note 2 for CEMEA (Ukraine and Kenya)
    '               Hide notes in other situations
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(5), "H")               ' Hide Note 1
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(6), "H")               ' Hide Note 2
    Else
        Select Case G_FC_Value_FinCty
        
        Case "Serbia, Republic of"
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(5), "D")           ' Show Note 1
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(6), "H")           ' Hide Note 2
        
        Case "Russian Federation"
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(5), "D")           ' Show Note 1
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(6), "H")           ' Hide Note 2
        
        Case "Ukraine"
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(5), "H")           ' Hide Note 1
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(6), "D")           ' Show Note 2
        
        Case "Kenya"
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(5), "H")           ' Hide Note 1
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(6), "D")           ' Show Note 2
        
        Case Else
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(5), "H")           ' Hide Note 1
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AOAX_2(6), "H")           ' Hide Note 2
        
        End Select
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L11 - AV 3 - Show for AP; hide for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AVXX_3(G_Question), "D")      ' AV 3
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AVXX_3(G_Entire), "H")        ' AV 3
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_AVXX_3(G_Answer)).ClearContents
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L12 - AC 5a - Show for India; hide for other countries
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_FinCty = "India" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AVX_5a(G_Question), "D")      ' AV 5a
        G_Caller = F0300_Access_Value("S43", "PO_AVX_5a_i", "U", "D")
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc43, G_PO_Range_AVX_5a(G_Entire), "H")        ' AV 5a
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_AVX_5a(G_Answer)).ClearContents
        G_Caller = F0300_Access_Value("S43", "PO_AVX_5a_i", "U", "H")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' L15 - ManCas    - Show for CEMEA
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(Sheet43.Name, G_PO_Range_ManCas(G_Question), "D")     ' Man Cash
        
    Else
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_ManCas(G_Answer)).ClearContents
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_ManCas(G_Answer)).ClearComments
        Worksheets(G_Tab_Svc43).Range(G_PO_Range_ManCas(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F1791_Display_Hide_CCM(Sheet43.Name, G_PO_Range_ManCas(G_Entire), "H")       ' Man Cash
        
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc43)
    
End Function                                                                    ' of F1743_Display_Hide_Svc43
Function F1745_Display_Hide_Svc45()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 45 - Visa Resolve Online (VROL) Financials
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Text based on Region or Region+Country
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_A(G_Entire), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_B(G_Entire), "H")
    End If
    
    If G_FC_Value_Region = "CEMEA" Then
        If G_FC_Value_FinCty = "Russian Federation" Then
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_A(G_Entire), "D")
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_B(G_Entire), "H")
        Else
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_A(G_Entire), "H")
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_B(G_Entire), "D")
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' BASE II   - Show for Auth Only; hide for Full Financials
    ' SMS VROL  - Show for Full Financials; hide for Auth Only
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_MsgCap = "Auth. Only" Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Show BASE II - Auth. Only
        ' - Show section header, questions, section footer
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL100(G_Heading), "D")       ' Section Heading
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL200(G_Question), "D")      ' P02 (see below for P01)
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL210(G_Question), "D")      ' P03
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL220(G_Question), "D")      ' P04
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL230(G_Question), "D")      ' P05
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL230(G_Footing), "D")       ' Section Footing
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL300(G_Heading), "D")       ' Section Heading
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL300(G_Question), "D")      ' P06
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL310(G_Question), "D")      ' P07
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL315(G_Question), "D")      ' P08
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL320(G_Question), "D")      ' P09
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL320(G_Footing), "D")       ' Section Footing
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display Text based on Region or Region+Country - within Auth. Only section
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_FC_Value_Region = "AP" Then
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_C(G_Entire), "D")
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_D(G_Entire), "H")
        End If
        
        If G_FC_Value_Region = "CEMEA" Then
            If G_FC_Value_FinCty = "Russian Federation" Then
                G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_C(G_Entire), "D")
                G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_D(G_Entire), "H")
            Else
                G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_C(G_Entire), "H")
                G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Text_D(G_Entire), "D")
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Question P01 based on Region or Region+Country - within Auth. Only section
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_FC_Value_Region = "AP" Then
            G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL100(G_Question), "D")      ' P01
        End If
        
        If G_FC_Value_Region = "CEMEA" Then
            If G_FC_Value_FinCty = "Russian Federation" Then
                G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL100(G_Question), "D")  ' P01
            Else
                G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL100(G_Question), "H")  ' P01
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Hide SMS - Full Service
        ' - Hide the entire section from the section header to the section footer
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Full_S(G_Entire), "H")        ' Entire Section
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Clear values for all answers in this service
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1745_Clear_Values()                                                         ' Clear values for all answers in this service
        
    Else
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Hide BASE II - Auth. Only
        ' - Hide the entire section from the section header to the section footer
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_Auth_O(G_Entire), "H")        ' Entire Section
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Show SMS - Full Service
        ' - Show section header, all questions, section footer
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL400(G_Heading), "D")       ' Section Heading
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL400(G_Question), "D")      ' P10
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL400(G_Footing), "D")       ' Section Footing
        
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_APBA15(G_Heading), "D")       ' Section Heading
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_APBA15(G_Question), "D")      ' P11
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL490(G_Question), "D")      ' P12
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL510(G_Question), "D")      ' P13
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc45, G_VR_Range_VRL510(G_Footing), "D")       ' Section Footing
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Clear values for all answers in this service
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1745_Clear_Values()                                                         ' Clear values for all answers in this service
        
    End If
    
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc45)
    
End Function                                                                    ' of F1745_Display_Hide_Svc45
Function F1745_Clear_Values()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine clears the answers for all fields in Service 45 - Visa Resolve Online (VROL) Financials
    ' - Clear the value
    ' - Reset the colour to normal grey
    ' - Reapply the 'No Error' comments
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL100(G_Answer)).ClearContents    ' P01
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL200(G_Answer)).ClearContents    ' P02
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL210(G_Answer)).ClearContents    ' P03
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL220(G_Answer)).ClearContents    ' P04
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL230(G_Answer)).ClearContents    ' P05
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL300(G_Answer)).ClearContents    ' P06
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL310(G_Answer)).ClearContents    ' P07
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL315(G_Answer)).ClearContents    ' P08
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL320(G_Answer)).ClearContents    ' P09
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL400(G_Answer)).ClearContents    ' P10
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_APBA15(G_Answer)).ClearContents    ' P11
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL490(G_Answer)).ClearContents    ' P12
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL510(G_Answer)).ClearContents    ' P13
    
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL100(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P01
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL200(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P02
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL210(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P03
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL220(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P04
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL230(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P05
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL300(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P06
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL310(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P07
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL315(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P08
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL320(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P09
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL400(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P10
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_APBA15(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P11
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL490(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P12
    Worksheets(G_Tab_Svc45).Range(G_VR_Range_VRL510(G_Answer)).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)   ' P13
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL100(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL100(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL200(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL200(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL210(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL210(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL220(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL220(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL230(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL230(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL300(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL300(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL310(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL310(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL315(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL315(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL320(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL320(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL400(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL400(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_APBA15(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_APBA15(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL490(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL490(G_Answer))   ' Remove and add any comment
    
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL510(G_Answer), "")           ' Obtain comment
    G_Caller = F1410_Add_Remove_Comment(G_Tab_Svc45, G_VR_Range_VRL510(G_Answer))   ' Remove and add any comment
    
End Function                                                                    ' of F1745_Clear_Values
Function F1746_Display_Hide_Svc46()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 46 - Settlement and VSS Reporting
    ' Hide - Hide individual rows within the table
    ' Show - Show individual rows within the table
    ' These are based on the values in the Admin - Regions tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1746_Column                                        As String
    Dim F1746_Mandat                                        As String
    Dim F1746_Select                                        As String
    Dim F1746_No_Sel                                        As String
    Dim F1746_Range                                         As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Does this BIN participate in NNSS?
    ' - Prefill and lock for CEMEA Installations; unlock and clear contents for other regions and update types
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_NNSS_1(G_Reg_AP), "H")        ' Hide the AP comment
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_NNSS_1(G_Reg_CE), "D")        ' Show the CE comment
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_NNSS_1(G_Reg_AP), "D")        ' Show the AP comment
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_NNSS_1(G_Reg_CE), "H")        ' Hide the CE comment
    End If
    
    If G_FC_Value_Region = "CEMEA" And G_FC_Value_UpdTyp = "Installation" Then
        Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Value = F0200_Find_NNSS_Existance(G_FC_Value_FinCty)
        Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Locked = True                ' Lock the cell
        Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Validation.Delete            ' Remove the drop-down list
        
    Else
        Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Value = ""                   ' Clear the value
        Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Locked = False               ' Unlock the cell
        With Worksheets(G_Tab_Svc46).Range(G_VS_Range_NNSS_1(G_Answer)).Validation              ' Add the drop-down list
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_YNB"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Visa CIQ"
            .InputMessage = ""
            .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
            .ShowInput = True
            .ShowError = True
        End With
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' S09 - Please enter any additional Application Processors to which you want to send additional copies of your VSS Reports
    ' - Show note for CEMEA; hide note for AP
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_ACIB_1(G_Reg_CE), "D")        ' Show the CE comment
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_ACIB_1(G_Reg_CE), "H")        ' Hide the CE comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' VSS Report Sort Order
    ' - Hide for CEMEA; show for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_RSOB_1(G_Entire), "H")        ' RSOB 1
        Worksheets(G_Tab_Svc46).Range(G_VS_Range_RSOB_1(G_Answer)).MergeArea.ClearContents
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc46, G_VS_Range_RSOB_1(G_Question), "D")      ' RSOB 1
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the column according to the region
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case G_FC_Value_Region
    
    Case "AP"
        F1746_Column = "A"
    
    Case "Canada"
        F1746_Column = "B"
    
    Case "CEMEA"
        F1746_Column = "C"
    
    Case "LAC"
        F1746_Column = "D"
    
    Case "US"
        F1746_Column = "E"
    
    Case Else
        F1746_Column = "F"
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the "Select" and "No Select" values
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case Worksheets(G_Tab_Cover).Range(G_FC_Range_FinCty).Value
    
    Case "Japan"
        F1746_Mandat = "JM"
        F1746_Select = "JS"
        F1746_No_Sel = "JU"
    
    Case Else
        F1746_Mandat = "XM"
        F1746_Select = "XS"
        F1746_No_Sel = "XU"
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read through all rows in the table
    ' Admin - Regions       Rows 25 to 58
    ' Service 46 tab        Rows 58 to 091
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_A_Reg_Row_No = 25 To 58                                               ' Read all rows in the Regions tab table
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Store the action range so that the logic is easier to read
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        F1746_Range = "K" & G_A_Reg_Row_No - 25 + 58
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If "Mandatory" value is found in the Regions table then display the row
        ' If the type is Installation then preselect to "Add"
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr(Worksheets(G_Tab_A_Reg).Range(F1746_Column & G_A_Reg_Row_No).Value, F1746_Mandat) > 0 Then
            Worksheets(G_Tab_Svc46).Range(F1746_Range).EntireRow.Hidden = False
            
            If G_FC_Value_UpdTyp = "Installation" Then                          ' For Installation, only Add is permitted
                With Worksheets(G_Tab_Svc46).Range(F1746_Range).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_VSS_1"
                    .IgnoreBlank = False
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = "Visa CIQ"
                    .InputMessage = ""
                    .ErrorMessage = "Please select from the drop-down list. Only Add is permitted for this mandatory report."
                    .ShowInput = True
                    .ShowError = True
                End With
                
                Worksheets(G_Tab_Svc46).Range(F1746_Range).Value = "Add"
                
            Else                                                                ' For Maintenance/Conversion, blank and Add are permitted
                With Worksheets(G_Tab_Svc46).Range(F1746_Range).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_VSS_2"
                    .IgnoreBlank = True
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = "Visa CIQ"
                    .InputMessage = ""
                    .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
                    .ShowInput = True
                    .ShowError = True
                End With
                
                Worksheets(G_Tab_Svc46).Range(F1746_Range).ClearContents
            End If
            
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If "Select" value is found in the Regions table then display the row
        ' If the type is Installation then preselect to "Add"
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        ElseIf InStr(Worksheets(G_Tab_A_Reg).Range(F1746_Column & G_A_Reg_Row_No).Value, F1746_Select) > 0 Then
            Worksheets(G_Tab_Svc46).Range(F1746_Range).EntireRow.Hidden = False
            
            With Worksheets(G_Tab_Svc46).Range(F1746_Range).Validation          ' Blank, Add and Delete are all permitted
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_VSS_3"
                .IgnoreBlank = False
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = "Visa CIQ"
                .InputMessage = ""
                .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
                .ShowInput = True
                .ShowError = True
            End With
                
            If G_FC_Value_UpdTyp = "Installation" Then
                Worksheets(G_Tab_Svc46).Range(F1746_Range).Value = "Add"
            Else
                Worksheets(G_Tab_Svc46).Range(F1746_Range).ClearContents
            End If
            
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If "No Select" value is found in the Regions table then display the row
        ' Preselect to blank
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        ElseIf InStr(Worksheets(G_Tab_A_Reg).Range(F1746_Column & G_A_Reg_Row_No).Value, F1746_No_Sel) > 0 Then
            Worksheets(G_Tab_Svc46).Range(F1746_Range).EntireRow.Hidden = False
            
            With Worksheets(G_Tab_Svc46).Range(F1746_Range).Validation          ' Blank, Add and Delete are all permitted
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Valid_VSS_3"
                .IgnoreBlank = False
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = "Visa CIQ"
                .InputMessage = ""
                .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
                .ShowInput = True
                .ShowError = True
            End With
            
            Worksheets(G_Tab_Svc46).Range(F1746_Range).ClearContents
            
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' In all other situations, hide the row
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Else
            Worksheets(G_Tab_Svc46).Range(F1746_Range).EntireRow.Hidden = True
        End If
        
    Next G_A_Reg_Row_No                                                         ' Go around for the next row
    
End Function                                                                    ' of F1746_Display_Hide_Svc46
Function F1747_Display_Hide_Svc47()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 47 - Clearing
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Q02 - Commercial Card Basic Data
    ' - Show for AP; hide for other regions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_CC_PBD(G_Question), "D")
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_CC_PBD(G_Entire), "H")
        Worksheets(G_Tab_Svc47).Range(G_CL_Range_CC_PBD(G_Answer)).ClearContents
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Q06 - TCRD_R / CLR600
    ' - Show for Auth Only; hide for Full Service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_MsgCap = "Auth. Only" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Heading), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Question), "D")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Footing), "D")
    Else
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Heading), "H")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Question), "H")
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Footing), "H")
        Worksheets(G_Tab_Svc47).Range(G_CL_Range_TCRD_R(G_Answer)).ClearContents
    End If
    
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc47)
    
End Function                                                                    ' of F1747_Display_Hide_Svc47
Function F1748_Display_Hide_Svc48()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides data for Service 48 - Application Processor / CIB
    ' Hide - Hide the entire range (including help and CCM Info) and make any Info Icon invisible
    ' Show - Show just the question/answer rows; make any Info Icon visible and ensure it is set to blue (unselected)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Section Description has different row for AP and for CEMEA - Customized File Type Delivery
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_CFTDAP(G_Question), "D")      ' Note for AP
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_CFTDCE(G_Question), "H")      ' Note for CEMEA
    End If
    
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_CFTDAP(G_Question), "H")      ' Note for AP
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_CFTDCE(G_Question), "D")      ' Note for CEMEA
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Section Description has different row for AP and for CEMEA - Collection Schedule
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "AP" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_GMT_00(G_Question), "D")      ' GMT 00
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_GMT_AD(G_Question), "H")      ' GMT AD
    End If
    
    If G_FC_Value_Region = "CEMEA" Then
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_GMT_00(G_Question), "H")      ' GMT 00
        G_Caller = F1791_Display_Hide_CCM(G_Tab_Svc48, G_CB_Range_GMT_AD(G_Question), "D")      ' GMT AD
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc48)
    
End Function                                                                    ' of F1748_Display_Hide_Svc48
Function F1791_Display_Hide_CCM(F1791_Worksheet, F1791_Range, F1791_Option)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine displays and hides a single instance of CCM data in a single tab
    ' - F1791_Worksheet     The worksheet on which the rows are to be displayed or hidden
    ' - F1791_Range         The cell range of the rows that are to be displayed or hidden
    ' - F1790_Option        "D" = Display; "H" = Hide
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If no range provided then exit (this is when there is no CCM Info for a specific question)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1791_Range = "" Then
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display CCM data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1791_Option = "D" Then
        Worksheets(F1791_Worksheet).Range(F1791_Range).EntireRow.Hidden = False ' Display the CCM Info
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide CCM data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1791_Option = "H" Then
        Worksheets(F1791_Worksheet).Range(F1791_Range).EntireRow.Hidden = True  ' Hide the CCM Info
    End If
    
End Function                                                                    ' of F1791_Display_Hide_CCM
Function F1792_Update_Drop_Down_List(F1792_Worksheet, F1792_Range, F1792_Type)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine updates the drop-down list in a specified worksheet and range
    ' - F1792_Worksheet     The worksheet on which the rows are to be displayed or hidden
    ' - F1792_Range         The cell range of the rows that are to be displayed or hidden
    ' - F1792_Type          "CAM" or "I/A"
    ' Currently, this applies only to drop-down lists for the Russian Federation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1792_Drop_Down_Name                                As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Build drop-down name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_FinCty = "Russian Federation" Then
        Select Case F1792_Type
            Case "CAM":         F1792_Drop_Down_Name = "=Valid_ABBE4_R"         ' Select Russian list for CAM
            Case "I/A":         F1792_Drop_Down_Name = "=Valid_ABBE5_R"         ' Select Russian list for Issuer Authenticatiom
        End Select
    Else
        Select Case F1792_Type
            Case "CAM":         F1792_Drop_Down_Name = "=Valid_ABBE4"           ' Select non-Russian list for CAM
            Case "I/A":         F1792_Drop_Down_Name = "=Valid_ABBE5"           ' Select non-Russian list for Issuer Authenticatiom
        End Select
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Build drop-down list
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F1792_Worksheet).Range(F1792_Range).Value = ""                   ' Clear the value
    With Worksheets(F1792_Worksheet).Range(F1792_Range).Validation              ' Add the drop-down list
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=F1792_Drop_Down_Name
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Visa CIQ"
        .InputMessage = ""
        .ErrorMessage = "Please select from the drop-down list, or leave blank if the value is not changing."
        .ShowInput = True
        .ShowError = True
    End With
    
End Function                                                                    ' of F1792_Update_Drop_Down_List
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------


Attribute VB_Name = "Module18_Next_Prev"
Option Explicit
Function F1800_Find_Next_Tab(F1800_This_Tab)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Find the next service tab to be displayed, based on the current tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1800_Service                                       As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Find the Service number based on the current tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1800_This_Tab = G_Tab_Cover Then F1800_Service = 30
    If F1800_This_Tab = G_Tab_Svc31 Then F1800_Service = 31
    If F1800_This_Tab = G_Tab_Svc34 Then F1800_Service = 34
    If F1800_This_Tab = G_Tab_Svc35 Then F1800_Service = 35
    If F1800_This_Tab = G_Tab_Svc36 Then F1800_Service = 36
    If F1800_This_Tab = G_Tab_Svc37 Then F1800_Service = 37
    If F1800_This_Tab = G_Tab_Svc38 Then F1800_Service = 38
    If F1800_This_Tab = G_Tab_Svc40 Then F1800_Service = 40
    If F1800_This_Tab = G_Tab_Svc41 Then F1800_Service = 41
    If F1800_This_Tab = G_Tab_Svc42 Then F1800_Service = 42
    If F1800_This_Tab = G_Tab_Svc43 Then F1800_Service = 43
    If F1800_This_Tab = G_Tab_Svc44 Then F1800_Service = 44
    If F1800_This_Tab = G_Tab_Svc45 Then F1800_Service = 45
    If F1800_This_Tab = G_Tab_Svc46 Then F1800_Service = 46
    If F1800_This_Tab = G_Tab_Svc47 Then F1800_Service = 47
    If F1800_This_Tab = G_Tab_Svc48 Then F1800_Service = 48
    If F1800_This_Tab = G_Tab_Svc49 Then F1800_Service = 49
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise the next tab to null
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Tab_Next1 = ""
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Continue looking whilst the next tab has still not been identified
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    While G_Tab_Next1 = ""
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Assign the next Service Number (these are no longer displayed in numerical order)
        ' - The Service Order is (30) - 31 - 36 - 42 - 37 - 38 - 34 - 35 - 40 - 43 - 41 - 44 - 45 - 47 - 48 - 46 - 49 - (51)
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F1800_Service
        Case 30:    F1800_Service = 31
        Case 31:    F1800_Service = 36
        Case 36:    F1800_Service = 42
        Case 42:    F1800_Service = 37
        Case 37:    F1800_Service = 38
        Case 38:    F1800_Service = 34
        Case 34:    F1800_Service = 35
        Case 35:    F1800_Service = 40
        Case 40:    F1800_Service = 43
        Case 43:    F1800_Service = 41
        Case 41:    F1800_Service = 44
        Case 44:    F1800_Service = 45
        Case 45:    F1800_Service = 47
        Case 47:    F1800_Service = 48
        Case 48:    F1800_Service = 46
        Case 46:    F1800_Service = 49
        Case 49:    F1800_Service = 51
        End Select
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Examine the service
        ' - If the check box for that service has been selected then this determines the next tab to be displayed
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F1800_Service
        
        Case 31
            If Worksheets(G_Tab_Cover).FC_Service_S31.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc31                                               ' This is the next tab to be displayed
            End If
        
        Case 34
            If Worksheets(G_Tab_Cover).FC_Service_S34.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc34                                               ' This is the next tab to be displayed
            End If
        
        Case 35
            If Worksheets(G_Tab_Cover).FC_Service_S35.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc35                                               ' This is the next tab to be displayed
            End If
        
        Case 36
            If Worksheets(G_Tab_Cover).FC_Service_S36.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc36                                               ' This is the next tab to be displayed
            End If
        
        Case 37
            If Worksheets(G_Tab_Cover).FC_Service_S37.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc37                                               ' This is the next tab to be displayed
            End If
        
        Case 38
            If Worksheets(G_Tab_Cover).FC_Service_S38.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc38                                               ' This is the next tab to be displayed
            End If
        
        Case 40
            If Worksheets(G_Tab_Cover).FC_Service_S40.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc40                                               ' This is the next tab to be displayed
            End If
        
        Case 41
            If Worksheets(G_Tab_Cover).FC_Service_S41.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc41                                               ' This is the next tab to be displayed
            End If
        
        Case 42
            If Worksheets(G_Tab_Cover).FC_Service_S42.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc42                                               ' This is the next tab to be displayed
            End If
        
        Case 43
            If Worksheets(G_Tab_Cover).FC_Service_S43.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc43                                               ' This is the next tab to be displayed
            End If
        
        Case 44
            If Worksheets(G_Tab_Cover).FC_Service_S44.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc44                                               ' This is the next tab to be displayed
            End If
        
        Case 45
            If Worksheets(G_Tab_Cover).FC_Service_S45.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc45                                               ' This is the next tab to be displayed
            End If
        
        Case 46
            If Worksheets(G_Tab_Cover).FC_Service_S46.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc46                                               ' This is the next tab to be displayed
            End If
        
        Case 47
            If Worksheets(G_Tab_Cover).FC_Service_S47.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc47                                               ' This is the next tab to be displayed
            End If
        
        Case 48
            If Worksheets(G_Tab_Cover).FC_Service_S48.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc48                                               ' This is the next tab to be displayed
            End If
        
        Case 49
            If Worksheets(G_Tab_Cover).FC_Service_S49.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc49                                               ' This is the next tab to be displayed
            End If
        
        Case 51                                                                         ' No more services in list
            G_Tab_Next1 = G_Tab_Cover                                                   ' Display the Front Cover
        
        End Select
    Wend
    
End Function                                                                    ' of F1800_Find_Next_Tab
Function F1810_Find_Prev_Tab(F1810_This_Tab)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Find the previous service tab to be displayed, based on the current tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F1810_Service                                       As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Find the Service number based on the current tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F1810_This_Tab = G_Tab_Cover Then F1810_Service = 51
    If F1810_This_Tab = G_Tab_Svc31 Then F1810_Service = 31
    If F1810_This_Tab = G_Tab_Svc34 Then F1810_Service = 34
    If F1810_This_Tab = G_Tab_Svc35 Then F1810_Service = 35
    If F1810_This_Tab = G_Tab_Svc36 Then F1810_Service = 36
    If F1810_This_Tab = G_Tab_Svc37 Then F1810_Service = 37
    If F1810_This_Tab = G_Tab_Svc38 Then F1810_Service = 38
    If F1810_This_Tab = G_Tab_Svc40 Then F1810_Service = 40
    If F1810_This_Tab = G_Tab_Svc41 Then F1810_Service = 41
    If F1810_This_Tab = G_Tab_Svc42 Then F1810_Service = 42
    If F1810_This_Tab = G_Tab_Svc43 Then F1810_Service = 43
    If F1810_This_Tab = G_Tab_Svc44 Then F1810_Service = 44
    If F1810_This_Tab = G_Tab_Svc45 Then F1810_Service = 45
    If F1810_This_Tab = G_Tab_Svc46 Then F1810_Service = 46
    If F1810_This_Tab = G_Tab_Svc47 Then F1810_Service = 47
    If F1810_This_Tab = G_Tab_Svc48 Then F1810_Service = 48
    If F1810_This_Tab = G_Tab_Svc49 Then F1810_Service = 49
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise the next tab to null
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Tab_Next1 = ""
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Continue looking whilst the next tab has still not been identified
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    While G_Tab_Next1 = ""
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Assign the previous Service Number (these are no longer displayed in numerical order)
        ' - The Service Order is (51) - 49 - 46 - 48 - 47 - 45 - 44 - 41 - 43 - 40 - 35 - 34 - 38 - 37 - 42 - 36 - 31 - (30)
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F1810_Service
        Case 51:    F1810_Service = 49
        Case 49:    F1810_Service = 46
        Case 46:    F1810_Service = 48
        Case 48:    F1810_Service = 47
        Case 47:    F1810_Service = 45
        Case 45:    F1810_Service = 44
        Case 44:    F1810_Service = 41
        Case 41:    F1810_Service = 43
        Case 43:    F1810_Service = 40
        Case 40:    F1810_Service = 35
        Case 35:    F1810_Service = 34
        Case 34:    F1810_Service = 38
        Case 38:    F1810_Service = 37
        Case 37:    F1810_Service = 42
        Case 42:    F1810_Service = 36
        Case 36:    F1810_Service = 31
        Case 31:    F1810_Service = 30
        End Select
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Examine the service
        ' - If the check box for that service has been selected then this determines the next tab to be displayed
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F1810_Service
        
        Case 30                                                                         ' No more services in list
            G_Tab_Next1 = G_Tab_Cover                                                   ' Display the Front Cover
        
        Case 31
            If Worksheets(G_Tab_Cover).FC_Service_S31.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc31                                               ' This is the next tab to be displayed
            End If
        
        Case 34
            If Worksheets(G_Tab_Cover).FC_Service_S34.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc34                                               ' This is the next tab to be displayed
            End If
        
        Case 35
            If Worksheets(G_Tab_Cover).FC_Service_S35.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc35                                               ' This is the next tab to be displayed
            End If
        
        Case 36
            If Worksheets(G_Tab_Cover).FC_Service_S36.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc36                                               ' This is the next tab to be displayed
            End If
        
        Case 37
            If Worksheets(G_Tab_Cover).FC_Service_S37.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc37                                               ' This is the next tab to be displayed
            End If
        
        Case 38
            If Worksheets(G_Tab_Cover).FC_Service_S38.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc38                                               ' This is the next tab to be displayed
            End If
        
        Case 40
            If Worksheets(G_Tab_Cover).FC_Service_S40.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc40                                               ' This is the next tab to be displayed
            End If
        
        Case 41
            If Worksheets(G_Tab_Cover).FC_Service_S41.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc41                                               ' This is the next tab to be displayed
            End If
        
        Case 42
            If Worksheets(G_Tab_Cover).FC_Service_S42.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc42                                               ' This is the next tab to be displayed
            End If
        
        Case 43
            If Worksheets(G_Tab_Cover).FC_Service_S43.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc43                                               ' This is the next tab to be displayed
            End If
        
        Case 44
            If Worksheets(G_Tab_Cover).FC_Service_S44.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc44                                               ' This is the next tab to be displayed
            End If
        
        Case 45
            If Worksheets(G_Tab_Cover).FC_Service_S45.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc45                                               ' This is the next tab to be displayed
            End If
        
        Case 46
            If Worksheets(G_Tab_Cover).FC_Service_S46.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc46                                               ' This is the next tab to be displayed
            End If
        
        Case 47
            If Worksheets(G_Tab_Cover).FC_Service_S47.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc47                                               ' This is the next tab to be displayed
            End If
        
        Case 48
            If Worksheets(G_Tab_Cover).FC_Service_S48.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc48                                               ' This is the next tab to be displayed
            End If
        
        Case 49
            If Worksheets(G_Tab_Cover).FC_Service_S49.Caption = G_Check_Box_Sett Then   ' If check box is currently checked then
                G_Tab_Next1 = G_Tab_Svc49                                               ' This is the next tab to be displayed
            End If
        
        End Select
    Wend
    
End Function                                                                    ' of F1810_Find_Prev_Tab
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Module20_Cover"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_FC_Range_FinNam                                    As String           ' Financial Institution - Business Name
Global G_FC_Range_FinBID                                    As String           ' Financial Institution - Business ID
Global G_FC_Range_FinCon                                    As String           ' Financial Institution - Contact Name
Global G_FC_Range_FinMel                                    As String           ' Financial Institution - E-mail Address
Global G_FC_Range_FinTel                                    As String           ' Financial Institution - Telephone Number

Global G_FC_Range_PrcNam                                    As String           ' Processor - Business Name
Global G_FC_Range_PrcBID                                    As String           ' Processor - Business ID
Global G_FC_Range_PrcCon                                    As String           ' Processor - Contact Name
Global G_FC_Range_PrcMel                                    As String           ' Processor - E-mail Address
Global G_FC_Range_PrcTel                                    As String           ' Processor - Telephone Number

Global G_FC_Range_Region                                    As String           ' Region                    (AP, Canada, CEMEA, LAC, U.S.)
Global G_FC_Range_FinCty                                    As String           ' Country
Global G_FC_Range_Enviro                                    As String           ' Environment               (Production / VCMS)
Global G_FC_Range_MsgCap                                    As String           ' Message Capability        (Auth Only / Full Service)
Global G_FC_Range_EffDat                                    As String           ' Requested Effective Date
Global G_FC_Range_UpdTyp                                    As String           ' Update Type               (Installation / Maintenance / Conversion)

Global G_FC_Range_BusJus                                    As String           ' Business Justification
Global G_FC_Range_PCR_No                                    As String           ' PCR Number
Global G_FC_Range_CpyBIN                                    As String           ' Copy BIN

Global G_FC_Range_Stat31                                    As String           ' Service 31 - BIN List
Global G_FC_Range_Stat34                                    As String           ' Service 34 - Visa Smart Debit/Credit (VSDC)
Global G_FC_Range_Stat35                                    As String           ' Service 35 - Verified by Visa (VbV)
Global G_FC_Range_Stat36                                    As String           ' Service 36 - CVV / iCVV / CVV2
Global G_FC_Range_Stat37                                    As String           ' Service 37 - PIN Processing
Global G_FC_Range_Stat38                                    As String           ' Service 38 - Stand-In Processing (STIP)
Global G_FC_Range_Stat40                                    As String           ' Service 40 - Visa Direct
Global G_FC_Range_Stat41                                    As String           ' Service 41 - Alternate Authorisation Routing
Global G_FC_Range_Stat42                                    As String           ' Service 42 - Currency Conversion Options
Global G_FC_Range_Stat43                                    As String           ' Service 43 - Additional Processing Options
Global G_FC_Range_Stat44                                    As String           ' Service 44 - SMS Reports and Raw Data
Global G_FC_Range_Stat45                                    As String           ' Service 45 - Visa Resolve Online (VROL) Financials
Global G_FC_Range_Stat46                                    As String           ' Service 46 - Settlement and VSS Reporting
Global G_FC_Range_Stat47                                    As String           ' Service 47 - Clearing
Global G_FC_Range_Stat48                                    As String           ' Service 48 - Application Processor / CIB
Global G_FC_Range_Stat49                                    As String           ' Service 49 - Additional Reports

Global G_FC_Range_ARep_1                                    As String           ' Front Cover - Authorised Representative 1
Global G_LS_Range_ARep_1                                    As String           ' Locked Copy - Authorised Representative 1
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_FC_Value_FinNam                                    As String           ' Financial Institution - Business Name
Global G_FC_Value_FinBID                                    As String           ' Financial Institution - Business ID
Global G_FC_Value_FinCon                                    As String           ' Financial Institution - Contact Name
Global G_FC_Value_FinMel                                    As String           ' Financial Institution - E-mail Address
Global G_FC_Value_FinTel                                    As String           ' Financial Institution - Telephone Number

Global G_FC_Value_PrcNam                                    As String           ' Processor - Business Name
Global G_FC_Value_PrcBID                                    As String           ' Processor - Business ID
Global G_FC_Value_PrcCon                                    As String           ' Processor - Contact Name
Global G_FC_Value_PrcMel                                    As String           ' Processor - E-mail Address
Global G_FC_Value_PrcTel                                    As String           ' Processor - Telephone Number

Global G_FC_Value_Region                                    As String           ' Region                    (AP, Canada, CEMEA, LAC, U.S.)
Global G_FC_Value_FinCty                                    As String           ' Financial Institution - Country
Global G_FC_Value_Enviro                                    As String           ' Environment               (Production / VCMS)
Global G_FC_Value_MsgCap                                    As String           ' VIP Type                  (Auth Only / Full Service)
Global G_FC_Value_EffDat                                    As String           ' Requested Effective Date
Global G_FC_Value_UpdTyp                                    As String           ' Update Type               (Installation / Maintenance / Conversion)

Global G_FC_Value_BusJus                                    As String           ' Business Justification
Global G_FC_Value_PCR_No                                    As String           ' PCR Number
Global G_FC_Value_CpyBIN                                    As String           ' Copy BIN
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F2000_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button click: Validate (on Front Cover)
    ' 1 - Load the cell values into the global variables
    ' 2 - Perform validation of cells on Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on cover page
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2020_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "FC", "U", "SV")              ' Validation successful
    Else
        G_Response = F0300_Access_Value("Status", "FC", "U", "SF")              ' Validation failed
    End If
    
End Function                                                                    ' of F2000_Validate
Function F2020_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on cover page
    ' 2a - Validation - Financial Institution
    ' 2b - Validation - Processor
    ' 2c - Validation - Other
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Activate                                            ' Activate the Front Cover worksheet
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2a - Validation - Financial Institution
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A01 - Financial Institution - Business Name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D15:I15").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D15:I15", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_FinNam <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_FinNam).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinNam, "")              ' Obtain comment
    Else
        Range(G_FC_Range_FinNam).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinNam, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A02 - Financial Institution - Business ID
    '-------------------------------------------------------'-------------------'-------'----------- ------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D16:I16").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D16:I16", "")             ' Reformat as answer cell (format as text)
    
    G_Caller = F9915_Validate_BID(G_FC_Value_FinBID)                            ' Validation of BID
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_FC_Range_FinBID).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinBID, "")              ' Obtain comment
    
    Case Else                                                                   ' Error
        Range(G_FC_Range_FinBID).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinBID, G_Caller)        ' Obtain comment
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A03 - Financial Institution - Contact Name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D17:I17").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D17:I17", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_FinCon <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_FinCon).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinCon, "")              ' Obtain comment
    Else
        Range(G_FC_Range_FinCon).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinCon, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A04 - Financial Institution - E-mail Address
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D18:I18").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D18:I18", "")             ' Reformat as answer cell (format as text)
    
    G_Caller = F9937_Validate_Mel(G_FC_Value_FinMel)                            ' Validation of e-mail address
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_FC_Range_FinMel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinMel, "")              ' Obtain comment
    
    Case Else                                                                   ' Error
        Range(G_FC_Range_FinMel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinMel, G_Caller)        ' Obtain comment
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A05 - Financial Institution - Telephone Number
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D19:I19").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D19:I19", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_FinTel <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_FinTel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinTel, "")              ' Obtain comment
    Else
        Range(G_FC_Range_FinTel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinTel, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2b - Validation - Processor
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A06 - Processor - Business Name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D22:I22").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D22:I22", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_PrcNam <> "" Then                                             ' Optional, data present
        Range(G_FC_Range_PrcNam).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcNam, "")              ' Obtain comment
    Else
        Range(G_FC_Range_PrcNam).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcNam, "")              ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A07 - Processor - Business ID
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D23:I23").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D23:I23", "")             ' Reformat as answer cell (format as text)
    
    G_Caller = F9915_Validate_BID(G_FC_Value_PrcBID)                            ' Validation of BID
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or not entered
        Range(G_FC_Range_PrcBID).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcBID, "")              ' Obtain comment
    
    Case Else                                                                   ' Error
        Range(G_FC_Range_PrcBID).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcBID, G_Caller)        ' Obtain comment
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A08 - Processor - Contact Name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D24:I24").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D24:I24", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_PrcCon <> "" Then                                             ' Optional, data present
        Range(G_FC_Range_PrcCon).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcCon, "")              ' Obtain comment
    Else
        Range(G_FC_Range_PrcCon).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcCon, "")              ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A09 - Processor - E-mail Address
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D25:I25").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D25:I25", "")             ' Reformat as answer cell (format as text)
    
    G_Caller = F9937_Validate_Mel(G_FC_Value_PrcMel)                            ' Validation of e-mail address
    
    Select Case G_Caller
    
    Case "", "E1"                                                              ' No error or blank
        Range(G_FC_Range_PrcMel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcMel, "")              ' Obtain comment
    
    Case Else                                                                   ' Error
        Range(G_FC_Range_PrcMel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcMel, G_Caller)        ' Obtain comment
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A10 - Processor - Telephone Number
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D26:I26").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D26:I26", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_PrcTel <> "" Then                                             ' Optional, data present
        Range(G_FC_Range_PrcTel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcTel, "")              ' Obtain comment
    Else
        Range(G_FC_Range_PrcTel).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PrcTel, "")              ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2c - Validation - Other
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A12 - Region (AP, Canada, CEMEA, LAC, U.S.)
    ' - Data values controlled by Excel function and Excel message
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("M15:N15").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M15:N15", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_Region <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_Region).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_Region, "")              ' Obtain comment
    Else
        Range(G_FC_Range_Region).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_Region, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A13 - Financial Institution - Country
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("M16:N16").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M16:N16", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_FinCty <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_FinCty).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinCty, "")              ' Obtain comment
    Else
        Range(G_FC_Range_FinCty).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_FinCty, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A14 - Environment (Production / VCMS)
    ' - Data values controlled by Excel function and Excel message
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("M17:N17").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M17:N17", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_Enviro <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_Enviro).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_Enviro, "")              ' Obtain comment
    Else
        Range(G_FC_Range_Enviro).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_Enviro, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A15 - Message Capability (Auth Only / Full Service)
    ' - Data values controlled by Excel function and Excel message
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("M18:N18").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M18:N18", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_MsgCap <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_MsgCap).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_MsgCap, "")              ' Obtain comment
    Else
        Range(G_FC_Range_MsgCap).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_MsgCap, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A16 - Requested Effective Date
    ' - Data values controlled by Excel function and Excel message
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("M19:N19").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M19:N19", "Date")         ' Reformat as answer cell (format as date)
    
    If G_FC_Value_EffDat <> "" Then                                             ' Mandatory (US and Canada) or Optional (AP and CEMEA), data present
        On Error GoTo F2020_Bad_Date
        Worksheets(G_Tab_Cover).Range("M19").Value = DateValue(Worksheets(G_Tab_Cover).Range("M19").Value) + 0
        On Error GoTo 0
    
        If IsDate(Worksheets(G_Tab_Cover).Range("M19").Value) Then                  ' Value is a date
            If Worksheets(G_Tab_Cover).Range("M19").Value >= (Date + F0300_Access_Value("EffDat", "Limit", "G", "")) Then
                Range(G_FC_Range_EffDat).Select                                         ' Select cells
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "")              ' Obtain comment
                
            Else                                                                        ' Date is in the past
                Range(G_FC_Range_EffDat).Select                                         ' Select cells
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                           ' Count the error
                G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "E7")            ' Obtain comment
            End If
            
        Else                                                                        ' Value is not a date
            Range(G_FC_Range_EffDat).Select                                         ' Select cells
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                           ' Count the error
            G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "E6")            ' Obtain comment
        End If
        
    Else                                                                        ' Value is not present
        Range(G_FC_Range_EffDat).Select                                         ' Select cells
        
        If G_FC_Value_Region = "AP" Or _
           G_FC_Value_Region = "CEMEA" Then                                     ' AP/CEMEA are allowed to omit the date
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "")          ' Obtain comment
            
        Else                                                                    ' For other regions, the date is mandatory
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "E1")        ' Obtain comment
        End If
    End If
    
    GoTo F2020_Date_Done
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
F2020_Bad_Date:
        Range(G_FC_Range_EffDat).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_EffDat, "E9")            ' Obtain comment
    
    GoTo F2020_Date_Done
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
F2020_Date_Done:
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A17 - Update Type (Installation / Maintenance / Conversion)
    ' - Data values controlled by Excel function and Excel message
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("M20:N20").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M20:N20", "")             ' Reformat as answer cell (format as text)
    
    If G_FC_Value_UpdTyp <> "" Then                                             ' Mandatory, data present
        Range(G_FC_Range_UpdTyp).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_UpdTyp, "")              ' Obtain comment
    Else
        Range(G_FC_Range_UpdTyp).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_UpdTyp, "E1")            ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A18 - Processor - PCR Number
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M22:M22", "")             ' Reformat as answer cell (format as text)
    
    G_Caller = F9916_Validate_PCR(G_FC_Value_PCR_No)                            ' Validation of PCR
    
    If G_Caller = "E1" Then                                                     ' PCR is not specified
        If G_FC_Value_UpdTyp = "Maintenance" Then                               ' Update Type is Maintenance
            G_Caller = ""                                                       ' Suppress the error - PCR is permitted to be unspecified
        End If
        
        If G_FC_Value_UpdTyp = "Installation" And _
           G_FC_Value_CpyBIN <> "" Then                                         ' Update Type is Installation (with Copy BIN)
            G_Caller = ""                                                       ' Suppress the error - PCR is permitted to be unspecified
        End If
    End If
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_FC_Range_PCR_No).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PCR_No, "")              ' Obtain comment
    
    Case Else                                                                   ' Error
        Range(G_FC_Range_PCR_No).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_PCR_No, G_Caller)        ' Obtain comment
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A19 - Copy BIN
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "M23:M23", "")             ' Reformat as answer cell (format as text)
    
    G_Caller = F9912_Validate_BIN(G_FC_Value_CpyBIN)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or blank
        Range(G_FC_Range_CpyBIN).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_CpyBIN, "")              ' Obtain comment
    
    Case Else                                                                   ' Error
        Range(G_FC_Range_CpyBIN).Select                                         ' Select cells
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("FC", G_FC_Range_CpyBIN, G_Caller)        ' Obtain comment
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - A11 - Remarks / Business Justification
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("D28:N28").MergeCells = True                  ' Ensure cells are merged
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Cover, "D28:N28", "")             ' Reformat as answer cell (format as text)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S20", "V")
    
End Function                                                                    ' of F2020_Validate_Cells
Function F2050_Validate_All()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine performs validation on the Front Cover and on all selected services
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Front Cover - Do this after the other services so that the Front Cover service status is up to date
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
'   G_Err_Count = 0
'   G_Caller = F2000_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 31 - BIN List
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S31", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc31)
        G_Caller = F3110_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 34 - Visa Smart Debit/Credit (VSDC)
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S34", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc34)
        G_Caller = F3410_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 35 - Verified by Visa (VbV
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S35", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc35)
        G_Caller = F3510_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 36 - CVV / iCVV / CVV2
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S36", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc36)
        G_Caller = F3610_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 37 - PIN Processing
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S37", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc37)
        G_Caller = F3710_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 38 - Stand-In Processing (STIP)
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S38", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
        G_Caller = F3810_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 40 - Visa Direct
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S40", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc40)
        G_Caller = F4010_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 41 - Alternate Authorisation Routing
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S41", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc41)
        G_Caller = F4110_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 42 - Currency Conversion Options
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S42", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc42)
        G_Caller = F4210_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 43 - Additional Processing Options
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S43", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc43)
        G_Caller = F4310_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 44 - SMS Reports and Raw Data
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S44", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc44)
        G_Caller = F4410_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 45 - Visa Resolve Online (VROL) Financials
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S45", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc45)
        G_Caller = F4510_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 46 - Settlement and VSS Reporting
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S46", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc46)
        G_Caller = F4610_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 47 - Clearing
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S47", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc47)
        G_Caller = F4710_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 48 - Application processor / CIB
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S48", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc48)
        G_Caller = F4810_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Service 49 - Additional Reports
    ' - If the status is "SV" then unprotect the sheet and perform the validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S49", "G", ""), 1) = "S" Then
        G_Err_Count = 0
        G_Caller = F9981_Unprotect_One(G_Tab_Svc49)
        G_Caller = F4910_Validate()
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Err_Count = 0
    G_Caller = F2000_Validate()
    
End Function                                                                    ' of F2050_Validate_All
Function F2080_Lock()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine performs the Lock and Save
    ' - Validation has already been performed in Sheet20 logic for:
    '              ==========================
    '   1   Check that the CIQ has not already been locked
    '   2   Perform final validation
    '   3   Ensure that all requested services have passed validation
    '   4   Ensure that "I agree" has been clicked
    '
    ' - Validation will now be performed in Module20 logic for:
    '              =====================
    '   6   Perform a "Lock and Save" Print Preview
    '   7   Export Worksheets "BIN List", "Print Preview" and "CCData" to a new spreadsheet
    '       Save the "Lock and Save" version as .xlsx and apply the (optional) password; Close the locked copy
    '       Lock all cells on these three worksheets
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the original spreadsheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Worksheets(G_Tab_Cover).Activate
    ActiveWorkbook.Save
    
    CIQF02.CIQF02_Prog_1.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_1_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L1")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend

    G_Caller = F9981_Unprotect_One("Workbook")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 6 - Create the "Lock and Save" (formerly Print Preview)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2400_Locked_Copy()
    
    CIQF02.CIQF02_Prog_2.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_2_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L2")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 7 - Export Worksheets "BIN List", "Lock and Save" and "CCData" to a new spreadsheet
    '     Save the "Lock and Save" version as .xlsx and apply the (optional) password; Close the locked copy
    '     Lock all cells on these three worksheets
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2083_Export_Sheets()
    
End Function                                                                    ' of F2080_Lock
Function F2083_Export_Sheets()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Export Worksheets "BIN List", "Print Preview" and "CCData" to a new spreadsheet
    ' - Two copies of the Print Preview are required so that different data filtering can be applied
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Export Worksheet "Lock and Save" to a new spreadsheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Workbooks(G_This_File).Worksheets(G_Tab_LSave).Visible = True
    Workbooks(G_This_File).Worksheets(G_Tab_LSave).Select
    Worksheets(G_Tab_LSave).Copy
    ActiveSheet.Name = G_Tab_LockC
    ActiveSheet.Unprotect Password:=G_Prot_Adm                                  ' Unprotect the worksheet
    ActiveSheet.Cells.Locked = True
    
    ActiveWorkbook.Subject = "Visa CIQ"
    ActiveWorkbook.Comments = "Created by Visa CIQ Macro"
    
    Workbooks(G_This_File).Worksheets(G_Tab_LSave).Visible = xlSheetVeryHidden
    
    G_Acti_File = ActiveWorkbook.Name                                           ' Store the currently active file name for restoring below
    Workbooks(G_This_File).Activate                                             ' Activate the main file so that the user form can be seen
    CIQF02.CIQF02_Prog_3.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_3_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L3")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    Workbooks(G_Acti_File).Activate                                             ' Reactivate the file that was active bdfore this audit point
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the file                                                                                                                                 ' Added in V0c
    ' - Default name is original name then " - yyyy-mm-dd.xlsm"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.DisplayAlerts = False
    
    G_File_Path = F0300_Access_Value("Lock&Save", "File Name", "G", "")         ' Restore the folder path and file name from the PMA
    G_Lock_Password = CIQF02.CIQF02_Pwrd.Value                                  ' Load the password (if any) from the user form
    
    ActiveWorkbook.SaveAs Filename:=G_File_Path, _
                          FileFormat:=xlOpenXMLWorkbook, _
                          Password:=G_Lock_Password, _
                          WriteResPassword:="", _
                          ReadOnlyRecommended:=False, _
                          CreateBackup:=False
    
    G_Save_File = ActiveWorkbook.Name
    
    Application.DisplayAlerts = True
    
    G_Acti_File = ActiveWorkbook.Name                                           ' Store the currently active file name for restoring below
    Workbooks(G_This_File).Activate                                             ' Activate the main file so that the user form can be seen
    CIQF02.CIQF02_Prog_4.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_4_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L4")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    Workbooks(G_Acti_File).Activate                                             ' Reactivate the file that was active bdfore this audit point
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Export Worksheet "CCData" to the new spreadsheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Visible = True               ' Need to make this visible as it is "Very Hidden"
    Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Copy After:=Workbooks(G_Save_File).Worksheets(1)
    Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Visible = xlSheetVeryHidden  ' Re-hide
    Workbooks(G_Save_File).Worksheets(G_Tab_CCDat).Visible = xlSheetVeryHidden  ' Re-hide
    
    G_Acti_File = ActiveWorkbook.Name                                           ' Store the currently active file name for restoring below
    Workbooks(G_This_File).Activate                                             ' Activate the main file so that the user form can be seen
    CIQF02.CIQF02_Prog_5.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_5_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L5")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    Workbooks(G_Acti_File).Activate                                             ' Reactivate the file that was active bdfore this audit point
    
    G_Acti_File = ActiveWorkbook.Name                                           ' Store the currently active file name for restoring below
    Workbooks(G_This_File).Activate                                             ' Activate the main file so that the user form can be seen
    CIQF02.CIQF02_Prog_6.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_6_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L6")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    Workbooks(G_Acti_File).Activate                                             ' Reactivate the file that was active bdfore this audit point
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Delete all defined names in the Lock and Save copy
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F2083_Range
    Dim F2083_Name
    For Each F2083_Range In Workbooks(G_Save_File).Names                        ' Look at all the range names
        F2083_Name = F2083_Range.Name                                           ' Store the name of the range
        If Left(F2083_Name, 1) <> "'" Then                                      ' If it is not one of the special ones ("'LockedCIQ..._FilterDatabase") then
            F2083_Range.Delete                                                  ' Delete the named range
        End If
    Next F2083_Range                                                            ' Go round for next range
    
    G_Acti_File = ActiveWorkbook.Name                                           ' Store the currently active file name for restoring below
    Workbooks(G_This_File).Activate                                             ' Activate the main file so that the user form can be seen
    CIQF02.CIQF02_Prog_7.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_7_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L7")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    Workbooks(G_Acti_File).Activate                                             ' Reactivate the file that was active bdfore this audit point
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect the Lock and Save worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Workbooks(G_Save_File).Worksheets(G_Tab_LockC).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_LaS
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the Locked CIQ again and close it
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Workbooks(G_Save_File).Worksheets(G_Tab_LockC).Activate                     ' Make this the focus when the file is opened
    Workbooks(G_Save_File).Protect Password:=G_Prot_LaS, Structure:=True        ' Prevent changes to the workbook structure
    
    Application.DisplayAlerts = False
    Workbooks(G_Save_File).Close SaveChanges:=True                              ' Close the copy and save the changes
    Application.DisplayAlerts = True
    
    G_Acti_File = ActiveWorkbook.Name                                           ' Store the currently active file name for restoring below
    Workbooks(G_This_File).Activate                                             ' Activate the main file so that the user form can be seen
    CIQF02.CIQF02_Prog_8.Visible = True                                         ' Indicate progress
    CIQF02.CIQF02_Prog_8_D.Visible = True
    G_Caller = F9820_User_to_CCData("FC", "L8")                                 ' Audit this point
    
    G_Waiter = Timer + 1
    While G_Waiter > Timer
        DoEvents
    Wend
    
    Workbooks(G_Acti_File).Activate                                             ' Reactivate the file that was active bdfore this audit point
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Delete all data from Lock and Save in Sheet24 - It occupies space
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_LSave).Unprotect Password:=G_Prot_Adm                      ' Unprotect the worksheet
    Worksheets(G_Tab_LSave).Range("A029:A1999").EntireRow.Delete                ' Clear everything after the "Locked CIQ:" row and its following spacer row ' Code R102
    
End Function                                                                    ' of F2083_Export_Sheets
Function F2090_Set_Service_Status(F2090_Service, F2090_Status)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine sets the text that indicates the current service status
    ' - F2090_Service   - S31 - S49
    ' - F2090_Status    - RX / NS / SN / SV / SF
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F2090_Range                                         As String
    Dim F2090_Text                                          As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Build the cell address based on the service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F2090_Range = "E" & F9983_Cover_Row_For_Service(F2090_Service)              ' Example: Service S31 -> Cell E31
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Build the service status text based on the status code received
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F2090_Status
    
    Case "RX"
        F2090_Text = "Not available"
    
    Case "NS"
        F2090_Text = ""
    
    Case "SN"
        F2090_Text = "Not yet validated"
    
    Case "SV"
        F2090_Text = "Validated"
    
    Case "SF"
        F2090_Text = "Validation failed"
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the text in the cell
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    Worksheets(G_Tab_Cover).Range(F2090_Range).Value = F2090_Text
    
End Function                                                                    ' of F2090_Set_Service_Status
Sub F2099_Show_Hide_Admin_Tabs()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine shows or hides the four Admin tabs
    ' - It is invoked by clicking on the Visa logo on the Front Cover
    ' - It only has an effect if the user is defined as an Admin user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    If G_Caller = "Error" Then Exit Sub
    
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes to Visible attribute
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ThisWorkbook.Unprotect Password:=G_Prot_Str
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Try to read the user ID from the memory location
    ' - If defined as Administrator then display the Administration tabs
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("XX", G_Runner, "G", "")                      ' Try to read a type XX record for the user ID
    
    If G_Caller = "Y" And Sheets(G_Tab_A_Msg).Visible = xlSheetVeryHidden Then  ' User found as an administrator and Admin tabs not visible
        
        Sheets(G_Tab_A_Msg).Visible = True                                      ' Display tab - Administration - Messages
        Sheet01.AM_Admin_Unlock.Visible = True                                  ' and buttons
        Sheet01.AM_Admin_Lock.Visible = True
        
        Sheets(G_Tab_A_Reg).Visible = True                                      ' Display tab - Administration - Regions
        Sheet02.AR_Admin_Unlock.Visible = True                                  ' and buttons
        Sheet02.AR_Admin_Lock.Visible = True
        
        Sheets(G_Tab_A_PMA).Visible = True                                      ' Display tab - Administration - Permanent memory Area
        Sheet03.PM_Admin_Unlock.Visible = True                                  ' and buttons
        Sheet03.PM_Admin_Lock.Visible = True
        
        Sheets(G_Tab_A_Val).Visible = True                                      ' Display tab - Administration - Data Validation Lists
        Sheet04.FV_Admin_Unlock.Visible = True                                  ' and buttons
        Sheet04.FV_Admin_Lock.Visible = True
        
        Sheets(G_Tab_CCDat).Visible = True                                      ' Display tab - CCData
        
        Sheets(G_Tab_Cover).Activate                                            ' Display the Front Cover
        
    Else                                                                        ' User not found as an administrator or Admin tabs are visible
        
        Sheets(G_Tab_A_Msg).Visible = xlSheetVeryHidden                         ' Verily Hide tab - Administration - Messages
        Sheet01.AM_Admin_Unlock.Visible = False                                 ' and buttons
        Sheet01.AM_Admin_Lock.Visible = False
        
        Sheets(G_Tab_A_Reg).Visible = xlSheetVeryHidden                         ' Verily Hide tab - Administration - Regions
        Sheet02.AR_Admin_Unlock.Visible = False                                 ' and buttons
        Sheet02.AR_Admin_Lock.Visible = False
        
        Sheets(G_Tab_A_PMA).Visible = xlSheetVeryHidden                         ' Verily Hide tab - Administration - Permanent memory Area
        Sheet03.PM_Admin_Unlock.Visible = False                                 ' and buttons
        Sheet03.PM_Admin_Lock.Visible = False
        
        Sheets(G_Tab_A_Val).Visible = xlSheetVeryHidden                         ' Verily Hide tab - Administration - Data Validation Lists
        Sheet04.FV_Admin_Unlock.Visible = False                                 ' and buttons
        Sheet04.FV_Admin_Lock.Visible = False
        
        Sheets(G_Tab_CCDat).Visible = xlSheetVeryHidden                         ' Verily Hide tab - CCData
        
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on Workbook protection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ThisWorkbook.Protect Password:=G_Prot_Str, Structure:=True
    
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of F2099_Show_Hide_Admin_Tabs
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module23_Print"
Option Explicit
Function F2300_Print_Preview()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Print Preview - Perform the same type of Print Preview as was last performed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Print_Type = F0300_Access_Value("PP", "View", "G", "")                    ' Obtain value indicating last Print Preview type
    G_Caller = F2310_Build_Print_Preview
    
End Function                                                                    ' of F2300_Print_Preview
Function F2301_View_All()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Print Preview - View All - Display all visible information in all selected service tabs
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Print_Type = "A"
    G_Caller = F2310_Build_Print_Preview
    G_Caller = F0300_Access_Value("PP", "View", "U", "A")
    Worksheets(G_Tab_Print).Range("A1").Select
    
End Function                                                                    ' of F2301_View_All
Function F2302_View_Data()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Print Preview - View Data - Display all visible information in all selected service tabs where there is data present
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Print_Type = "D"
    G_Caller = F2310_Build_Print_Preview
    G_Caller = F0300_Access_Value("PP", "View", "U", "D")
    Worksheets(G_Tab_Print).Range("A1").Select
    
End Function                                                                    ' of F2302_View_Data
Function F2303_View_Errors()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Print Preview - View Errors - Display all visible information in all selected service tabs where there is data present and where validation failed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Print_Type = "E"
    G_Caller = F2310_Build_Print_Preview
    G_Caller = F0300_Access_Value("PP", "View", "U", "E")
    Worksheets(G_Tab_Print).Range("A1").Select
    
End Function                                                                    ' of F2303_View_Errors
Function F2310_Build_Print_Preview()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Create the Print Preview in the simplest, most efficient way possible
    ' 1 - Copy Front Cover data and paste into Sheet23
    ' 2 - Copy each selected service and paste into Sheet23
    ' 3 - Copy Front Cover bottom row with the standard text into Sheet23
    ' 4 - For all services, hide the rows that are not required to be displayed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Preparation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Print).Range("A033:A1999").EntireRow.Delete                ' Remove all data below the grey row                                        ' Code R001
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display a heading to indicate what sort of Print Preview this is
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Print_Type = "A" Then
        Worksheets(G_Tab_Print).Range("B31").Value = "View All:"                                                                                            ' Code R002
        Worksheets(G_Tab_Print).Range("H31").MergeArea.Value = "All questions for the services that were selected on the Front Cover"                       ' Code R002
    End If
    
    If G_Print_Type = "D" Then
        Worksheets(G_Tab_Print).Range("B31").Value = "View Completed:"                                                                                      ' Code R002
        Worksheets(G_Tab_Print).Range("H31").MergeArea.Value = "Only questions that have been answered"                                                     ' Code R002
    End If
    
    If G_Print_Type = "E" Then
        Worksheets(G_Tab_Print).Range("B31").Value = "View Errors:"                                                                                         ' Code R002
        Worksheets(G_Tab_Print).Range("H31").MergeArea.Value = "Responses that must be addressed to pass the CIQ edits"                                     ' Code R002
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Copy Front Cover data and paste into Sheet23 - There is no need to do this
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ' Nothing to do
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Copy each selected service and paste into Sheet23
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2320_Copy_Services()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 3 - Copy Front Cover bottom row with the standard text into Sheet23
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2330_Copy_Bottom()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 4 - For all services, hide the rows that are not required to be displayed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2340_Hide_Unwanted()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position at top and protect sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Print).Range("A014:N014").Copy
    
    Worksheets(G_Tab_Print).Range("A014").PasteSpecial Paste:=xlPasteValues, _
                                                       Operation:=xlNone, _
                                                       SkipBlanks:=False, _
                                                       Transpose:=False
    
    Worksheets(G_Tab_Print).Cells.Locked = True                                 ' Lock all cells
    Worksheets(G_Tab_Print).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
    
End Function                                                                    ' of F2310_Build_Print_Preview
Function F2320_Copy_Services()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy each selected service and paste into Sheet24
    ' - Order of services is 31 - 33 - 36 - 42 - 37 - 38 - 34 - 35 - 40 - 43 - 41 - 44 - 45 - 47 - 48 - 46 - 49
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Print_Row_No_C = 33                                                       ' First empty row after the "View Data:" grey row                           ' Code R003
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 31, if selected - BIN List (Installation)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S31", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc31).Range("A014:O318").Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + 318 - 14                          ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To 318
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc31).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 36, if selected - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S36", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc36).Range("A014:O" & G_Svc36_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc36_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc36_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc36).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 42, if selected - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S42", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc42).Range("A014:O" & G_Svc42_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc42_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc42_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc42).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 37, if selected - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S37", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc37).Range("A014:O" & G_Svc37_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc37_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc37_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc37).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 38, if selected - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S38", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc38).Range("A014:O" & G_Svc38_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc38_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc38_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc38).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 34, if selected - VSDC
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S34", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc34).Range("A014:O" & G_Svc34_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc34_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc34_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc34).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 35, if selected - VbV
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S35", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc35).Range("A014:O" & G_Svc35_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc35_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc35_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc35).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 40, if selected - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S40", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc40).Range("A014:O" & G_Svc40_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc40_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc40_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc40).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 43, if selected - VIP Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S43", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc43).Range("A014:O" & G_Svc43_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc43_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc43_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc43).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 41, if selected - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S41", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc41).Range("A014:O" & G_Svc41_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc41_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc41_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc41).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 44, if selected - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S44", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc44).Range("A014:O" & G_Svc44_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc44_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc44_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc44).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 45, if selected - VROL Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S45", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc45).Range("A014:O" & G_Svc45_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc45_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc45_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc45).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 47, if selected - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S47", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc47).Range("A014:O" & G_Svc47_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc47_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc47_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc47).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 48, if selected - Application Processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S48", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc48).Range("A014:O" & G_Svc48_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc48_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc48_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc48).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 46, if selected - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S46", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc46).Range("A014:O" & G_Svc46_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc46_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc46_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc46).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 49, if selected - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F0300_Access_Value("Status", "S49", "G", ""), 1) = "S" Then         ' If service is selected then
        Worksheets(G_Tab_Svc49).Range("A014:O" & G_Svc49_Final_Row_No).Copy
        
        With Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, _
                Operation:=xlNone, _
                SkipBlanks:=False, _
                Transpose:=False
        End With
        
        G_Print_Row_No_B = G_Print_Row_No_C + G_Svc49_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_Print_Row_No = 14 To G_Svc49_Final_Row_No
            
            Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).RowHeight = Worksheets(G_Tab_Svc49).Range("A" & G_Print_Row_No).RowHeight
            G_Print_Row_No_C = G_Print_Row_No_C + 1
        Next G_Print_Row_No
        
        G_Print_Row_No_C = G_Print_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
End Function                                                                    ' of F2320_Copy_Services
Function F2330_Copy_Bottom()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Front Cover bottom row into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Write the data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("A57:O57").Copy                               ' Copy only the bottom row from the Front Cover                             ' Code R004
    
    Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).PasteSpecial Paste:=xlPasteValues, _
                                                                       Operation:=xlNone, _
                                                                       SkipBlanks:=False, _
                                                                       Transpose:=False
    
    Worksheets(G_Tab_Print).Range("A" & G_Print_Row_No_C).PasteSpecial Paste:=xlPasteFormats, _
                                                                       Operation:=xlNone, _
                                                                       SkipBlanks:=False, _
                                                                       Transpose:=False
    
End Function                                                                    ' of F2330_Copy_Bottom
Function F2340_Hide_Unwanted()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' For all services, hide the rows that are not required to be displayed
    ' Each row in each service has a code in Column O (invisible - white font on white background)
    '   A = Service Heading
    '   B = Service Description
    '   C = Section Heading
    '   D = Section Text
    '   E = Empty row                                       (only at end of a section or service)
    '   F = Footer                                          (actually contains CCMnnnn documnent reference)
    '   G = Group Lines Together                            (there may be a Spacer row immediately before this row type)
    '   H = Help Text                                       (there may be a Spacer row immediately before this row type)
    '   I = CCM Info - related to preceding question        (there may be a Spacer row immediately before this row type)
    '   J = CCM Info - unrelated to preceding question      (there may be a Spacer row immediately before this row type)
    '   Q = Question or Answer                              (there may be a Spacer row immediately before this row type)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F2340_Row_Type                                      As String           ' Save the row type so that the cell is not accessed repeatedly
    
    Dim F2340_A_Row_No                                      As Integer          ' Row number - Service Heading
    Dim F2340_B_Row_No                                      As Integer          ' Row number - Service Description
    Dim F2340_C_Row_No                                      As Integer          ' Row number - Section Heading
    Dim F2340_D_Row_No                                      As Integer          ' Row number - Section Description
    Dim F2340_E_Row_No                                      As Integer          ' Row number - Final empty row in section
    Dim F2340_G_Row_No                                      As Integer          ' Row number - Group item
    
    Dim F2340_Q1_Row_No                                     As Integer          ' Row number - Question (within Service)
    Dim F2340_Q2_Row_No                                     As Integer          ' Row number - Question (within Section)
    
    Dim G23_Has_Data                                        As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Print Type A - Display All, Print Type D - Display Data, Print Type E - Display Errors
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    '   A   D   E   Action
    '   -   -   -   --------------------------------------------------------------------------------------------
    '   0   0   0   Hide all rows that are already hidden                       (no need to do anything)
    '   0   0   0   Hide all Internal Information                               (no need to do anything)
    '   Y   Y   Y   Hide all empty BIN rows
    '   -   Y   -   Hide all questions where there the answer is empty
    '   -   -   Y   Hide all rows where the answer is valid
    '   Note: When hiding a row, any Spacer row immediately preceeding it is also hidden
    '         When hiding a row, any Help row immediately following it is also hidden
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide any BIN List rows where there is no data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Worksheets(G_Tab_Print).Range("C36").Value = "BIN" Then                  ' If the BIN List is present (always on this row) then
        Worksheets(G_Tab_Print).Range("C37:C336").EntireRow.Hidden = True       ' Hide all rows
        
        For G_Print_Row_No = 37 To 336                                          ' Row 37 is where the first BIN row is located
            If Worksheets(G_Tab_Print).Range("N" & G_Print_Row_No).Value > 0 Then                       ' If there is answer data then
                Worksheets(G_Tab_Print).Range("C" & G_Print_Row_No).EntireRow.Hidden = False            ' Show the row
            End If
        Next G_Print_Row_No
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 1
    ' - Hide any questions where there is no answer data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Print_Type = "D" Then                                                  ' Only for Type D
        For G_Print_Row_No = 33 To G_Print_Row_No_B                             ' Row 33 is where the first service starts                                  ' Code R005
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True Then GoTo F2340_Bypass_1
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' - Hide any questions where there is no data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).Value = "Q" Then                         ' If this row is a question then
                If F2392_Row_Contains_Data(G_Tab_Print, G_Print_Row_No) = "Y" Then                          ' If there is answer data then no action needed
                    
                Else                                                                                        ' No data, so...
                    Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True             ' Hide the row
                    
                    ' Hide any Spacer row immediately preceeding
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).Value = "S" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).EntireRow.Hidden = True     ' Hide Spacer row before question
                    End If
                    
                    ' - Hide any help immediately following
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).Value = "H" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).EntireRow.Hidden = True     ' Hide Help row following question
                        
                        If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).Value = "S" Then
                            Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).EntireRow.Hidden = True ' Hide Spacer row before help
                        End If
                    End If
                End If
            End If
            
F2340_Bypass_1:
            
        Next G_Print_Row_No
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 2
    ' - Hide any groups where there is no answer data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Print_Type = "D" Then                                                  ' Only for Type D
        For G_Print_Row_No = 33 To G_Print_Row_No_B                             ' Row 33 is where the first service starts                                  ' Code R005
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True Then GoTo F2340_Bypass_2
            
            If G_Print_Row_No = 0 Then                                          ' Debugging
                G_Print_Row_No = G_Print_Row_No                                 ' Debugging
            End If                                                              ' Debugging
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' - Hide any questions where there is no data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).Value = "G" Then                         ' First row within group
                G23_Has_Data = False                                                                        ' Assume no data
                
                If F2392_Row_Contains_Data(G_Tab_Print, G_Print_Row_No) = "Y" Then
                    G23_Has_Data = True
                End If
                
                F2340_G_Row_No = G_Print_Row_No + 1                                                         ' Start from 2nd Group row in the Group
                While Worksheets(G_Tab_Print).Range("O" & F2340_G_Row_No).Value = "G"                       ' Keep going within the Group
                    
                    If G23_Has_Data = False Then                                                            ' No need to look if data already found
                        If F2392_Row_Contains_Data(G_Tab_Print, F2340_G_Row_No) = "Y" Then
                            G23_Has_Data = True
                        End If
                    End If
                    
                    F2340_G_Row_No = F2340_G_Row_No + 1                                                     ' Move down within group
                Wend                                                                                        ' Go around again
                
                If G23_Has_Data = False Then                                                                ' If there was no data anywhere within the Group then
                    Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 0 & ":" & _
                                                  "O" & F2340_G_Row_No - 1).EntireRow.Hidden = True         ' Hide the entire group
                    
                    ' Hide any Spacer row immediately preceeding
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).Value = "S" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).EntireRow.Hidden = True     ' Hide Spacer row before group
                    End If
                
                    ' - Hide any help immediately following
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).Value = "H" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).EntireRow.Hidden = True     ' Hide Help row following group
                        
                        If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).Value = "S" Then
                            Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).EntireRow.Hidden = True ' Hide Spacer row before help
                        End If
                    End If
                End If
                
                G_Print_Row_No = F2340_G_Row_No - 1                                                         ' Move on past the Group
            End If
            
F2340_Bypass_2:
            
        Next G_Print_Row_No
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 3
    ' - Hide any questions where there is no invalid answer data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Print_Type = "E" Then                                                  ' Only for Type E
        For G_Print_Row_No = 33 To G_Print_Row_No_B                             ' Row 33 is where the first service starts                                  ' Code R005
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True Then GoTo F2340_Bypass_3
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' - Hide any questions where there is no invalid data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).Value = "Q" Then                         ' If this row is a question then
                If F2393_Row_Contains_Error(G_Tab_Print, G_Print_Row_No) = "Y" Then                         ' If there is answer invalid data then no action needed
                    
                Else                                                                                        ' No data, so...
                    Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True             ' Hide the row
                    
                    ' Hide any Spacer row immediately preceeding
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).Value = "S" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).EntireRow.Hidden = True     ' Hide Spacer row before question
                    End If
                    
                    ' - Hide any help immediately following
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).Value = "H" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).EntireRow.Hidden = True     ' Hide Help row following question
                        
                        If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).Value = "S" Then
                            Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).EntireRow.Hidden = True ' Hide Spacer row before help
                        End If
                    End If
                End If
            End If
            
F2340_Bypass_3:
            
        Next G_Print_Row_No
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 4
    ' - Hide any groups where there is no invalid answer data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Print_Type = "E" Then                                                  ' Only for Types D and E
        For G_Print_Row_No = 33 To G_Print_Row_No_B                             ' Row 33 is where the first service starts                                  ' Code R005
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True Then GoTo F2340_Bypass_4
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' - Hide any groups where there is no invalid data
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).Value = "G" Then                         ' First row within group
                G23_Has_Data = False                                                                        ' Assume no data
                
                If F2393_Row_Contains_Error(G_Tab_Print, G_Print_Row_No) = "Y" Then
                    G23_Has_Data = True
                End If
                
                F2340_G_Row_No = G_Print_Row_No + 1                                                         ' Start from 2nd Group row in the Group
                While Worksheets(G_Tab_Print).Range("O" & F2340_G_Row_No).Value = "G"                       ' Keep going within the Group
                    
                    If G23_Has_Data = False Then                                                            ' No need to look if data already found
                        If F2393_Row_Contains_Error(G_Tab_Print, F2340_G_Row_No) = "Y" Then
                            G23_Has_Data = True
                        End If
                    End If
                    
                    F2340_G_Row_No = F2340_G_Row_No + 1                                                     ' Move down within group
                Wend                                                                                        ' Go around again
                
                If G23_Has_Data = False Then                                                                ' If there was no data anywhere within the Group then
                    Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 0 & ":" & _
                                                  "O" & F2340_G_Row_No - 1).EntireRow.Hidden = True         ' Hide the entire group
                    
                    ' Hide any Spacer row immediately preceeding
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).Value = "S" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No - 1).EntireRow.Hidden = True     ' Hide Spacer row before group
                    End If
                
                    ' - Hide any help immediately following
                    If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).Value = "H" Then
                        Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 2).EntireRow.Hidden = True     ' Hide Help row following group
                        
                        If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).Value = "S" Then
                            Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No + 1).EntireRow.Hidden = True ' Hide Spacer row before help
                        End If
                    End If
                End If
                
                G_Print_Row_No = F2340_G_Row_No - 1                                                         ' Move on past the Group
            End If
            
F2340_Bypass_4:
            
        Next G_Print_Row_No
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 5
    ' - Hide any headings where there are no questions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_Print_Row_No = 33 To G_Print_Row_No_B                                 ' Row 33 is where the first service starts                                  ' Code R005
        If Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).EntireRow.Hidden = True Then GoTo F2340_Bypass_5
        
        F2340_Row_Type = Worksheets(G_Tab_Print).Range("O" & G_Print_Row_No).Value          ' Store the Row Type
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Section Heading located - deal with previous section
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F2340_Row_Type = "C" Then                                            ' Here is the next Section Heading
            If F2340_C_Row_No > 0 Then                                          ' There was a previous Section
                If F2340_Q2_Row_No = 0 Then                                     ' The previous section is empty
                    Worksheets(G_Tab_Print).Range("O" & F2340_C_Row_No & ":" & _
                                                  "O" & F2340_E_Row_No).EntireRow.Hidden = True
                End If
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Service Heading located - deal with previous service
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F2340_Row_Type = "A" Then                                            ' Here is the next Service Heading
            If F2340_A_Row_No > 0 Then                                          ' There was a previous Service
                If F2340_Q1_Row_No = 0 Then                                     ' The previous service is empty
                    Worksheets(G_Tab_Print).Range("O" & F2340_A_Row_No & ":" & _
                                                  "O" & F2340_E_Row_No).EntireRow.Hidden = True
                End If
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Any row type - store the information
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F2340_Row_Type
            Case "A":   F2340_A_Row_No = G_Print_Row_No                         ' Service Heading               - store the row number
                        F2340_Q1_Row_No = 0                                     '                               - Reset the question row to zero
                        
            Case "B":   F2340_B_Row_No = G_Print_Row_No                         ' Service Description located   - Store the row number
            
            Case "C":   F2340_C_Row_No = G_Print_Row_No                         ' Section Heading               - store the row number
                        F2340_Q2_Row_No = 0                                     '                               - Reset the question row to zero
            
            Case "D":   F2340_D_Row_No = G_Print_Row_No                         ' Section Description located   - Store the row number
            
            Case "E":   F2340_E_Row_No = G_Print_Row_No                         ' Service Empty Row located     - Store the row number
            
            Case "Q":   F2340_Q1_Row_No = G_Print_Row_No                        ' Question located              - Store the row number (treat as "Q" type)
                        F2340_Q2_Row_No = G_Print_Row_No
                        
            Case "G":   F2340_Q1_Row_No = G_Print_Row_No                        ' Group located                 - Store the row number (treat as "Q" type)
                        F2340_Q2_Row_No = G_Print_Row_No
        End Select
        
F2340_Bypass_5:
        
    Next G_Print_Row_No
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Deal with final Section
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F2340_C_Row_No > 0 Then                                                  ' There was a previous Section
        If F2340_Q2_Row_No = 0 Then                                             ' The previous section is empty
            Worksheets(G_Tab_Print).Range("O" & F2340_C_Row_No & ":" & _
                                          "O" & F2340_E_Row_No).EntireRow.Hidden = True
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Deal with final Service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F2340_A_Row_No > 0 Then                                                  ' There was a previous Service
        If F2340_Q1_Row_No = 0 Then                                             ' The previous service is empty
            Worksheets(G_Tab_Print).Range("O" & F2340_A_Row_No & ":" & _
                                          "O" & F2340_E_Row_No).EntireRow.Hidden = True
        End If
    End If
    
End Function                                                                    ' of F2340_Hide_Unwanted
Function F2392_Row_Contains_Data(F2392_Worksheet, F2392_Row_No As Integer)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check whether any cell in the specified worksheet and row is an "answer" cell.
    ' - Return "Y" if any such cells is found; otherwise return "N"
    ' An answer cell can be identified by being surrounded on all four sides by a border.
    ' An answer cell will normally be unlocked for user input - but this is not true in a locked CIQ
    ' An answer cell is normally coloured RGB(220, 230, 241) or RGB(255, 255, 102) but this may not always be true
    ' - There may be multiple answer cells in one row. Data in any cell is sufficient to cause display of the row.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F2392_Col_No                                        As Integer
    Dim F2392_Column                                        As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise result
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F2392_Row_Contains_Data = "N"                                               ' Assume that the row is not valid for display
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Examine the Row Type in Column O
    ' Non "Q" values must always be displayed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Worksheets(F2392_Worksheet).Range("O" & F2392_Row_No).Value <> "Q" And _
       Worksheets(F2392_Worksheet).Range("O" & F2392_Row_No).Value <> "G" Then  ' Not a Question/Answer row at all
        F2392_Row_Contains_Data = "Y"                                           ' Indicate that row is valid for display (but don't count data cell)
        Exit Function                                                           ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Examine all cells from column B(=2) to column N(=14) (the narrow edge columns A and O cannot contain such cells)
    ' If a cell is found then if the value is null then do not display it
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F2392_Col_No = 2 To 14                                                  ' Look in all these columns
        F2392_Column = F9901_Column_Letter(F2392_Col_No)                        ' Convert the column number into a column letter
        
        ' All four borders means that this is an answer cell
        If Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).MergeArea.Borders(xlEdgeTop).LineStyle = xlContinuous And _
           Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).MergeArea.Borders(xlEdgeLeft).LineStyle = xlContinuous And _
           Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).MergeArea.Borders(xlEdgeRight).LineStyle = xlContinuous And _
           Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).MergeArea.Borders(xlEdgeBottom).LineStyle = xlContinuous Then
            F2392_Row_Contains_Data = "N"                                       ' Do not display the question row yet
            
            ' Non-white fill colour means that the cell is an Answer cell
            If Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).Interior.Color <> RGB(255, 255, 255) Then
                G_Print_Question = "N"                                          ' Do not display the question row yet
                
                ' Black text means that the cell is an Answer cell (note the grey-font cells in the BIN Lists that must not be displayed)
                If Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).Font.Color = RGB(0, 0, 0) Then
                    G_Print_Question = "N"                                      ' Do not display the question row yet
                    
                    ' Data in the cell means that the row must be displayed
                    If Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).Value <> "" And _
                       Worksheets(F2392_Worksheet).Range(F2392_Column & F2392_Row_No).Value <> " " Then
                        F2392_Row_Contains_Data = "Y"                           ' Indicate that row is valid for display
                        G_Print_Question = "Y"                                  ' Display the question row
                        Exit Function                                           ' Exit the routine
                    End If
                End If
            End If
        End If
    Next F2392_Col_No                                                           ' Look in next cell
    
End Function                                                                    ' of F2392_Row_Contains_Data
Function F2393_Row_Contains_Error(F2393_Worksheet, F2393_Row_No As Integer)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check whether any cell in the specified worksheet and row is an "answer" cell where the validation has failed
    ' - Return "Y" if any such cells is found; otherwise return "N"
    ' An answer cell can be identified by being surrounded on all four sides by a border.
    ' An answer cell will normally be unlocked for user input - but this is not true in a locked CIQ
    ' An answer cell is coloured RGB(255, 255, 102) when validation has failed.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F2393_Col_No                                        As Integer
    Dim F2393_Column                                        As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise result
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F2393_Row_Contains_Error = "N"                                               ' Assume that the row is not valid for display
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Examine all cells from column B(=2) to column N(=14) (the narrow edge columns A and O cannot contain such cells)
    ' If a cell is found then if the value is null then do not display it
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F2393_Col_No = 2 To 14                                                  ' Look in all these columns
        F2393_Column = F9901_Column_Letter(F2393_Col_No)                        ' Convert the column number into a column letter
        
        ' All four borders means that this is an answer cell
        If Worksheets(F2393_Worksheet).Range(F2393_Column & F2393_Row_No).MergeArea.Borders(xlEdgeTop).LineStyle = xlContinuous And _
           Worksheets(F2393_Worksheet).Range(F2393_Column & F2393_Row_No).MergeArea.Borders(xlEdgeLeft).LineStyle = xlContinuous And _
           Worksheets(F2393_Worksheet).Range(F2393_Column & F2393_Row_No).MergeArea.Borders(xlEdgeRight).LineStyle = xlContinuous And _
           Worksheets(F2393_Worksheet).Range(F2393_Column & F2393_Row_No).MergeArea.Borders(xlEdgeBottom).LineStyle = xlContinuous Then
            
            F2393_Row_Contains_Error = "N"                                      ' Assume that the row is not valid for display
            G_Print_Question = "N"                                              ' Do not display the question row yet
            
            ' Error fill colour means that the row must be displayed
            If Worksheets(F2393_Worksheet).Range(F2393_Column & F2393_Row_No).Interior.Color = _
                                                    RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B) Then
                F2393_Row_Contains_Error = "Y"                                  ' Indicate that row is valid for display
                G_Print_Question = "Y"                                          ' Display the question row
                Exit Function                                                   ' Exit the routine
            End If
        End If
    Next F2393_Col_No                                                           ' Look in next cell
    
End Function                                                                    ' of F2393_Row_Contains_Error
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module24_Lock_Save"
Option Explicit
Global G24_Has_Data                                         As Boolean
Global G24_LSave_Type                                       As String           ' All or Completed
Sub Test_F2400()
    G_Caller = F0000_Initialisation()
    G_Caller = F2400_Locked_Copy()
End Sub
Function F2400_Locked_Copy()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Create the Locked Copy in the simplest, most efficient way possible
    ' All this is built up in Sheet24 that is never made visible (and so has no need of standard buttons and help)
    ' 1 - Copy Front Cover data and paste into Sheet24
    ' 2 - Copy Front Cover "I Agree" and paste into Sheet24
    ' 3 - Copy each selected service and paste into Sheet24
    ' 4 - Copy Front Cover bottom row with the standard text into Sheet24
    ' 5 - For all services, hide the rows that are not required to be displayed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Preparation - Header and I Agree    026-027 = "Locked CIQ"  028-end = services data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_LSave).Unprotect Password:=G_Prot_Adm                      ' Unprotect the worksheet
    Worksheets(G_Tab_LSave).Range("A002:A026").MergeCells = False               ' Unmerge the cells for the Front Cover information                         ' Code R101
    Worksheets(G_Tab_LSave).Range("A029:A1999").EntireRow.Delete                ' Clear everything after the "Locked CIQ:" row and its following spacer row ' Code R102
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reset the positioning and make invisible the three items that are used for "Lock and Save" processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_LSave).PP_Checked_1.Top = 6
    Worksheets(G_Tab_LSave).PP_Checked_1.Left = 120
    Worksheets(G_Tab_LSave).PP_Checked_1.Visible = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the text "All questions that have been answered" or "All questions for the services that were selected on the Front Cover"      ' AP/CE Iss CIQ = Row 26
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G24_LSave_Type = F0300_Access_Value("Lock&Save", "Type", "G", "")
    
    If G24_LSave_Type = "All" Then
        Worksheets(G_Tab_LSave).Range("E27").Value = "All questions for the services that were selected on the Front Cover"                                 ' Code R103
    Else
        Worksheets(G_Tab_LSave).Range("E27").Value = "Only questions that have been answered"                                                               ' Code R103
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Copy Front Cover data and paste into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2410_Copy_S20_Upper()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Copy Front Cover "I Agree" and paste into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2420_Copy_S20_Agree()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 3 - Copy each selected service and paste into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2430_Copy_Services()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 4 - Copy Front Cover bottom row with the standard text into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2440_Copy_Bottom()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 5 - For all services, hide the rows that are not required to be displayed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2450_Hide_Unwanted()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position at top and protect sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_LSave).Range("A002:N002").Copy
    
    Worksheets(G_Tab_LSave).Range("A002").PasteSpecial Paste:=xlPasteValues, _
                                                       Operation:=xlNone, _
                                                       SkipBlanks:=False, _
                                                       Transpose:=False
    
    Worksheets(G_Tab_LSave).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
    
End Function                                                                    ' of F2400_Locked_Copy
Function F2410_Copy_S20_Upper()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Front Cover data and paste into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Front Cover data and paste into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.CutCopyMode = False
    Worksheets(G_Tab_Cover).Range("A014:N029").Copy Destination:=Worksheets(G_Tab_LSave).Range("A002")                                                      ' Code R104
    
End Function                                                                    ' of F2410_Copy_S20_Upper
Function F2420_Copy_S20_Agree()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Front Cover "I Agree" and paste into Sheet24 (including the bottom row with the standard text)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Write the data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("A48:O56").Copy                               ' Copy the entire "I Agree" from the Front Cover                            ' Code R105
    
    Worksheets(G_Tab_LSave).Range("A18").PasteSpecial Paste:=xlPasteValues, _
                                                      Operation:=xlNone, _
                                                      SkipBlanks:=False, _
                                                      Transpose:=False                                                                                      ' Code R106
    
    Worksheets(G_Tab_LSave).Range("A18").PasteSpecial Paste:=xlPasteFormats, _
                                                      Operation:=xlNone, _
                                                      SkipBlanks:=False, _
                                                      Transpose:=False                                                                                      ' Code R106
    
    Worksheets(G_Tab_LSave).Range("A19").RowHeight = 50                         ' Set row height of Fee information                                         ' Code R106
    
End Function                                                                    ' of F2420_Copy_S20_Agree
Function F2430_Copy_Services()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy each selected service and paste into Sheet24
    ' - Order of services is 31 - 33 - 36 - 42 - 37 - 38 - 34 - 35 - 40 - 43 - 41 - 44 - 45 - 47 - 48 - 46 - 49
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_LSave_Row_No_C = 29                                                       ' First empty row after the "Locked CIQ:" grey row and its following spacer ' Code R107
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 31, if selected - BIN List (Installation)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S31", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc31).Range("A014:O318").Copy
        
        With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
            .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                        If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                        Application.DisplayAlerts = False
            .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                        Application.DisplayAlerts = True
                                                                                                        End If
        End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + 318 - 14                          ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To 318
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc31).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 36, if selected - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S36", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc36).Range("A014:O" & G_Svc36_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc36_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc36_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc36).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 42, if selected - Currency Conversion options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S42", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc42).Range("A014:O" & G_Svc42_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc42_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc42_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc42).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 37, if selected - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S37", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc37).Range("A014:O" & G_Svc37_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc37_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc37_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc37).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 38, if selected - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S38", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc38).Range("A014:O" & G_Svc38_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc38_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc38_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc38).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 34, if selected - VSDC
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S34", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc34).Range("A014:O" & G_Svc34_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc34_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc34_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc34).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 35, if selected - VbV
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S35", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc35).Range("A014:O" & G_Svc35_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc35_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc35_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc35).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 40, if selected - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S40", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc40).Range("A014:O" & G_Svc40_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc40_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc40_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc40).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 43, if selected - VIP Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S43", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc43).Range("A014:O" & G_Svc43_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc43_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc43_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc43).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 41, if selected - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S41", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc41).Range("A014:O" & G_Svc41_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc41_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc41_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc41).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 44, if selected - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S44", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc44).Range("A014:O" & G_Svc44_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc44_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc44_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc44).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 45, if selected - VROL Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S45", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc45).Range("A014:O" & G_Svc45_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc45_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc45_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc45).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 47, if selected - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S47", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc47).Range("A014:O" & G_Svc47_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc47_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc47_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc47).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 48, if selected - Application processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S48", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc48).Range("A014:O" & G_Svc48_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc48_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc48_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc48).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 46, if selected - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S46", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc46).Range("A014:O" & G_Svc46_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc46_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc46_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc46).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Service 49, if selected - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S49", "G", "") = "SV" Then                 ' If service is selected then
        Worksheets(G_Tab_Svc49).Range("A014:O" & G_Svc49_Final_Row_No).Copy
        
            With Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C)
                .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                .PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            If G24_LSave_Type = "All" Then  ' Only Lock&Save Type = All
                                                                                                            Application.DisplayAlerts = False
                .PasteSpecial Paste:=xlPasteComments, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                                                                                                            Application.DisplayAlerts = True
                                                                                                            End If
            End With
        
        G_LSave_Row_No_B = G_LSave_Row_No_C + G_Svc49_Final_Row_No - 14         ' Calculate new bottom row of data
        
        For G_LSave_Row_No = 14 To G_Svc49_Final_Row_No
            
            Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).RowHeight = Worksheets(G_Tab_Svc49).Range("A" & G_LSave_Row_No).RowHeight
            G_LSave_Row_No_C = G_LSave_Row_No_C + 1
        Next G_LSave_Row_No
        
        G_LSave_Row_No_C = G_LSave_Row_No_B + 1                                 ' Calculate new current position for next paste
    End If
    
End Function                                                                    ' of F2430_Copy_Services
Function F2440_Copy_Bottom()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy Front Cover bottom row into Sheet24
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Write the data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_Cover).Range("A57:O57").Copy                               ' Copy only the bottom row from the Front Cover                             ' Code R108
    
    Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).PasteSpecial Paste:=xlPasteValues, _
                                                                       Operation:=xlNone, _
                                                                       SkipBlanks:=False, _
                                                                       Transpose:=False
    
    Worksheets(G_Tab_LSave).Range("A" & G_LSave_Row_No_C).PasteSpecial Paste:=xlPasteFormats, _
                                                                       Operation:=xlNone, _
                                                                       SkipBlanks:=False, _
                                                                       Transpose:=False
    
End Function                                                                    ' of F2440_Copy_Bottom
Function F2450_Hide_Unwanted()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' For all services, hide the rows that are not required to be displayed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F2450_Row_Type                                      As String           ' Save the row type so that the cell is not accessed repeatedly
    
    Dim F2450_A_Row_No                                      As Integer          ' Row number - Service Heading
    Dim F2450_B_Row_No                                      As Integer          ' Row number - Service Description
    Dim F2450_C_Row_No                                      As Integer          ' Row number - Section Heading
    Dim F2450_D_Row_No                                      As Integer          ' Row number - Section Description
    Dim F2450_E_Row_No                                      As Integer          ' Row number - Final empty row in section
    Dim F2450_G_Row_No                                      As Integer          ' Row number - Group item
    
    Dim F2450_Q1_Row_No                                     As Integer          ' Row number - Question (within Service)
    Dim F2450_Q2_Row_No                                     As Integer          ' Row number - Question (within Section)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Bypass the hiding of empty answers if the Lock&Save Type = "All"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Lock&Save", "Type", "G", "") = "All" Then GoTo F2450_Bypass_Empty
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 1
    ' - Hide any questions where there is no data
    ' - Hide any help
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_LSave_Row_No = 29 To G_LSave_Row_No_B                                 ' This row is where the first service starts                                ' Code R109
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Bypass any rows that are already hidden
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).EntireRow.Hidden = True Then
            GoTo F2450_Bypass_1
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' - Hide any questions where there is no data
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).Value = "Q" Then
            If F2392_Row_Contains_Data(G_Tab_LSave, G_LSave_Row_No) = "Y" Then
                
            Else                                                                ' No data, so hide the row - as well as any spacer row above it
                Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).EntireRow.Hidden = True
                
                If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No - 1).Value = "S" Then
                    Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No - 1).EntireRow.Hidden = True
                End If
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' - Hide any help
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).Value = "H" Then
            Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).EntireRow.Hidden = True
            
            If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No - 1).Value = "S" Then
                Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No - 1).EntireRow.Hidden = True
            End If
        End If
        
F2450_Bypass_1:
        
    Next G_LSave_Row_No
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 2
    ' - Hide any groups where there is no data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_LSave_Row_No = 29 To G_LSave_Row_No_B                                 ' This row is where the first service starts                                ' Code R109
        
        If G_LSave_Row_No = 544 Then
            G_LSave_Row_No = G_LSave_Row_No
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Bypass any rows that are already hidden
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).EntireRow.Hidden = True Then
            GoTo F2450_Bypass_2
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' - Hide any groups where there is no data
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).Value = "G" Then ' First row within group
            G24_Has_Data = False                                                ' Assume no data
            
            If F2392_Row_Contains_Data(G_Tab_LSave, G_LSave_Row_No) = "Y" Then
                G24_Has_Data = True
            End If
            
            F2450_G_Row_No = G_LSave_Row_No + 1                                             ' Start from 2nd Group row in the Group
            While Worksheets(G_Tab_LSave).Range("O" & F2450_G_Row_No).Value = "G"           ' Keep going within the Group
                
                If G24_Has_Data = False Then                                                ' No need to look if data already found
                    If F2392_Row_Contains_Data(G_Tab_LSave, F2450_G_Row_No) = "Y" Then
                        G24_Has_Data = True
                    End If
                End If
                
                F2450_G_Row_No = F2450_G_Row_No + 1                                         ' Move down within group
            Wend                                                                            ' Go around again
            
            If G24_Has_Data = False Then                                                    ' If there was no data anywhere within the Group then
                ' Group contains no data - Hide the rows and any spacer row on the row above it
                Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No + 0 & ":O" & F2450_G_Row_No - 1).EntireRow.Hidden = True
                
                If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No - 1).Value = "S" Then
                    Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No - 1).EntireRow.Hidden = True
                End If
            End If
            
            G_LSave_Row_No = F2450_G_Row_No - 1                                             ' Move on past the Group
        End If
        
F2450_Bypass_2:
        
    Next G_LSave_Row_No
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Rejoin processing (bypassed for Lock&Save Type = "All")
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
F2450_Bypass_Empty:
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read down through all services - 3
    ' - Hide any headings where there are no questions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_LSave_Row_No = 29 To G_LSave_Row_No_B                                 ' This row is where the first service starts                                ' Code R109
        If Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).EntireRow.Hidden = True Then GoTo F2450_Bypass_3
        
        F2450_Row_Type = Worksheets(G_Tab_LSave).Range("O" & G_LSave_Row_No).Value          ' Store the Row Type
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Section Heading located - deal with previous section
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F2450_Row_Type = "C" Then                                            ' Here is the next Section Heading
            If F2450_C_Row_No > 0 Then                                          ' There was a previous Section
                If F2450_Q2_Row_No = 0 Then                                     ' The previous section is empty
                    Worksheets(G_Tab_LSave).Range("O" & F2450_C_Row_No & ":" & _
                                                  "O" & F2450_E_Row_No).EntireRow.Hidden = True
                End If
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Service Heading located - deal with previous service
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F2450_Row_Type = "A" Then                                            ' Here is the next Service Heading
            If F2450_A_Row_No > 0 Then                                          ' There was a previous Service
                If F2450_Q1_Row_No = 0 Then                                     ' The previous service is empty
                    Worksheets(G_Tab_LSave).Range("O" & F2450_A_Row_No & ":" & _
                                                  "O" & F2450_E_Row_No).EntireRow.Hidden = True
                End If
            End If
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Any row type - store the information
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Select Case F2450_Row_Type
            Case "A":   F2450_A_Row_No = G_LSave_Row_No                         ' Service Heading               - store the row number
                        F2450_Q1_Row_No = 0                                     '                               - Reset the question row to zero
                        
            Case "B":   F2450_B_Row_No = G_LSave_Row_No                         ' Service Description located   - Store the row number
            
            Case "C":   F2450_C_Row_No = G_LSave_Row_No                         ' Section Heading               - store the row number
                        F2450_Q2_Row_No = 0                                     '                               - Reset the question row to zero
            
            Case "D":   F2450_D_Row_No = G_LSave_Row_No                         ' Section Description located   - Store the row number
            
            Case "E":   F2450_E_Row_No = G_LSave_Row_No                         ' Service Empty Row located     - Store the row number
            
            Case "Q":   F2450_Q1_Row_No = G_LSave_Row_No                        ' Question located              - Store the row number (treat as "Q" type)
                        F2450_Q2_Row_No = G_LSave_Row_No
                        
            Case "G":   F2450_Q1_Row_No = G_LSave_Row_No                        ' Group located                 - Store the row number (treat as "Q" type)
                        F2450_Q2_Row_No = G_LSave_Row_No
        End Select
        
F2450_Bypass_3:
        
    Next G_LSave_Row_No
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Deal with final Section
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F2450_C_Row_No > 0 Then                                                  ' There was a previous Section
        If F2450_Q2_Row_No = 0 Then                                             ' The previous section is empty
            Worksheets(G_Tab_LSave).Range("O" & F2450_C_Row_No & ":" & _
                                          "O" & F2450_E_Row_No).EntireRow.Hidden = True
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Deal with final Service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F2450_A_Row_No > 0 Then                                                  ' There was a previous Service
        If F2450_Q1_Row_No = 0 Then                                             ' The previous service is empty
            Worksheets(G_Tab_LSave).Range("O" & F2450_A_Row_No & ":" & _
                                          "O" & F2450_E_Row_No).EntireRow.Hidden = True
        End If
    End If
    
End Function                                                                    ' of F2450_Hide_Unwanted
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------


Attribute VB_Name = "Module31_BIN_List"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Global G_BL_BIN_Count                                       As Integer          ' Count of number of BINs
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F3100_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 21 - BIN List
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_BL_BIN_Count = 0
    
End Function                                                                    ' of F3100_Initialisation
Function F3110_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 31 - BIN List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    ' - After returning from F1100_Load_Cell_Values, G_FC_Value_UpdTyp indicates which type of update type this is.
    ' - However, the cell values for the BIN List are not loaded by that routine because there are 6000 cells (installation) or 1000 cells (maintenance or conversion).
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Do not copy the information to CCData because there is potentially too much data to store
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_BL_BIN_Count = 0
    
    G_Caller = F3120_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S31", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S31", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S31", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S31", "SF")
    End If
    
End Function                                                                    ' of F3110_Validate
Function F3120_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3120_Sheet                                         As String           ' Save the previously active worksheet name
    
    Dim F3120_A_BINBIN(1024)                                As String
    Dim F3120_A_L_Rang(1024)                                As String
    Dim F3120_A_H_Rang(1024)                                As String
    Dim F3120_A_F_Srce(1024)                                As String
    Dim F3120_A_Row_No(1024)                                As Integer
    Dim F3120_Index                                         As Integer
    Dim F3120_Total                                         As Integer
    
    Dim F3120_This_BINBIN                                   As String
    Dim F3120_This_L_Rang                                   As String
    Dim F3120_This_H_Rang                                   As String
    Dim F3120_This_F_Srce                                   As String
    
    Dim F3120_Range                                         As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3120_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    
    Worksheets(G_Tab_Svc31).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reapply cell formatting
    ' - Black font, left alignment, grey fill, black borders
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3120_Range = "C18:C317"                                                    ' There are 300 rows
    
    While F3120_Range <> ""
        With Range(F3120_Range).Font
            .Name = "Arial"                                                         ' Set to Arial
            .FontStyle = "Normal"                                                   ' Set to non-bold
            .Size = 10                                                              ' Set to 10pt
            .Color = RGB(0, 0, 0)                                                   ' Set to black
            .Underline = xlUnderlineStyleNone                                       ' Set to not underlined
        End With
        
        Range(F3120_Range).VerticalAlignment = xlCenter                         ' Centre aligned
        Range(F3120_Range).HorizontalAlignment = xlLeft
        
        If F3120_Range = "D18:D317" Then
            Range(F3120_Range).HorizontalAlignment = xlRight
        End If
        
        If F3120_Range = "F18:F317" Then
            Range(F3120_Range).HorizontalAlignment = xlRight
        End If
        
        Range(F3120_Range).NumberFormat = "@"                                   ' Text format
        Range(F3120_Range).Locked = False                                       ' Unlocked cell
        
                                                                                ' Set all outside borders and internal hoizontal border
        Range(F3120_Range).Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        
        Range(F3120_Range).Borders(xlEdgeTop).LineStyle = xlContinuous
        Range(F3120_Range).Borders(xlEdgeTop).Color = RGB(0, 0, 0)
        
        Range(F3120_Range).Borders(xlEdgeLeft).LineStyle = xlContinuous
        Range(F3120_Range).Borders(xlEdgeLeft).Color = RGB(0, 0, 0)
        
        Range(F3120_Range).Borders(xlEdgeRight).LineStyle = xlContinuous
        Range(F3120_Range).Borders(xlEdgeRight).Color = RGB(0, 0, 0)
        
        Range(F3120_Range).Borders(xlEdgeBottom).LineStyle = xlContinuous
        Range(F3120_Range).Borders(xlEdgeBottom).Color = RGB(0, 0, 0)
        
        Range(F3120_Range).Borders(xlInsideVertical).LineStyle = xlContinuous
        Range(F3120_Range).Borders(xlInsideVertical).Color = RGB(0, 0, 0)
        
        Range(F3120_Range).Borders(xlInsideHorizontal).LineStyle = xlContinuous
        Range(F3120_Range).Borders(xlInsideHorizontal).Color = RGB(0, 0, 0)
        
        Select Case F3120_Range
            Case "C18:C317"                                                     ' Completed: BIN
                F3120_Range = "D18:D317"                                        ' Move onto: Low Range
            
            Case "D18:D317"                                                     ' Completed: Low Range
                F3120_Range = "F18:F317"                                        ' Move onto: High Range
            
            Case "F18:F317"                                                     ' Completed: High Range
                F3120_Range = "H18:L317"                                        ' Move onto: Last four columns
            
            Case Else                                                           ' Completed: Last four columns
                F3120_Range = ""                                                ' Nothing more to do
        End Select
    Wend
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reapply cell formatting to '0000000' and '9999999' cells - and set the values to '0000000' and '9999999' as Visa does not break ranges beyong the 9th digit
    ' - Grey font, left alignment, grey fill, black borders
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    With Range("E18").Font
        .Name = "Arial"                                                         ' Set to Arial
        .FontStyle = "Normal"                                                   ' Set to non-bold
        .Size = 10                                                              ' Set to 10pt
        .Color = RGB(128, 128, 128)                                             ' Set to grey
        .Underline = xlUnderlineStyleNone                                       ' Set to not underlined
    End With
    
    Range("E18").NumberFormat = "@"
    Range("E18").Value = "0000000"
    Range("E18").Copy Range("E18:E317")
    
    With Range("G18").Font
        .Name = "Arial"                                                         ' Set to Arial
        .FontStyle = "Normal"                                                   ' Set to non-bold
        .Size = 10                                                              ' Set to 10pt
        .Color = RGB(128, 128, 128)                                             ' Set to grey
        .Underline = xlUnderlineStyleNone                                       ' Set to not underlined
    End With
    
    Range("G18").NumberFormat = "@"
    Range("G18").Value = "9999999"
    Range("G18").Copy Range("G18:G317")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reapply column headings float-over help text
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range("C17").Select                                                         ' Select cell
    G_Caller = F0100_Find_Comment("S31", "C17", "")                             ' No error condition
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range("D17").Select                                                         ' Select cell
    G_Caller = F0100_Find_Comment("S31", "D17", "")                             ' No error condition
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range("F17").Select                                                         ' Select cell
    G_Caller = F0100_Find_Comment("S31", "F17", "")                             ' No error condition
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range("H17").Select                                                         ' Select cell
    G_Caller = F0100_Find_Comment("S31", "H17", "")                             ' No error condition
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range("K17").Select                                                         ' Select cell
    G_Caller = F0100_Find_Comment("S31", "K17", "")                             ' No error condition
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range("L17").Select                                                         ' Select cell
    G_Caller = F0100_Find_Comment("S31", "L17", "")                             ' No error condition
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process each row that might have data on it
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_BIN_L_Row_No = 18 To 317
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Count the number of non-empty BIN rows
        ' - Validation: There must be at least one BIN entered in the list
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then
            G_BL_BIN_Count = G_BL_BIN_Count + 1
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - BIN
        ' - Validation: Empty or six-digit decimal
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F9912_Validate_BIN(Range("C" & G_BIN_L_Row_No).Value)        ' Validation of BIN
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range("C" & G_BIN_L_Row_No).Select                                  ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S31", "C18", "")
        
        Case Else                                                               ' Error
            Range("C" & G_BIN_L_Row_No).Select                                  ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S31", "C18", G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - BIN
        ' - Validation for duplicate BIN + Low + High; also Funding Source
        '---------------------------------------------------'-------------------'-------------------'------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                                       ' BIN has been specified on this row
            
            If F3120_Index = 0 Then                                                                 ' This is the first BIN specified
                F3120_Index = F3120_Index + 1                                                       ' Increase the index
                F3120_A_BINBIN(F3120_Index) = Trim(Range("C" & G_BIN_L_Row_No).Value)               ' Store the BIN
                F3120_A_L_Rang(F3120_Index) = Trim(Range("D" & G_BIN_L_Row_No).Value)               ' Store the Low Range
                F3120_A_H_Rang(F3120_Index) = Trim(Range("F" & G_BIN_L_Row_No).Value)               ' Store the High Range
                F3120_A_F_Srce(F3120_Index) = Trim(Range("K" & G_BIN_L_Row_No).Value)               ' Store the Funding Source
                F3120_A_Row_No(F3120_Index) = G_BIN_L_Row_No                                        ' Store the Row Number where the BIN is located
                F3120_Total = F3120_Index                                                           ' Increase the total
            Else
                F3120_This_BINBIN = Trim(Range("C" & G_BIN_L_Row_No).Value)                         ' BIN
                F3120_This_L_Rang = Trim(Range("D" & G_BIN_L_Row_No).Value)                         ' Low Range
                F3120_This_H_Rang = Trim(Range("F" & G_BIN_L_Row_No).Value)                         ' High Range
                F3120_This_F_Srce = Trim(Range("K" & G_BIN_L_Row_No).Value)                         ' Funding Source
                
                For F3120_Index = 1 To F3120_Total                                                  ' Look at all entries in the BIN array
                    
                    If F3120_This_BINBIN = F3120_A_BINBIN(F3120_Index) And _
                       F3120_This_L_Rang <> "" And _
                       F3120_This_H_Rang <> "" Then                                                 ' If the same BIN already exists then
                        
                        If F3120_A_L_Rang(F3120_Index) < F3120_This_L_Rang And _
                           F3120_A_H_Rang(F3120_Index) < F3120_This_L_Rang Then                     ' OK - Existing range before this range
                            
                        ElseIf F3120_A_L_Rang(F3120_Index) > F3120_This_H_Rang And _
                               F3120_A_H_Rang(F3120_Index) > F3120_This_H_Rang Then                 ' OK - Existing range after this range
                        
                        Else                                                                        ' Not OK - There is some overlap
                            Range("C" & G_BIN_L_Row_No).Select                                      ' Select cell
                            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                            G_Err_Count = G_Err_Count + 1                                           ' Count the error
                            G_Caller = F0100_Find_Comment("S31", "C18", "E6")                       ' Find the error message
                            G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
                            
                            Range("C" & F3120_A_Row_No(F3120_Index)).Select                         ' Select cell with earlier reference to same BIN
                            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                            G_Err_Count = G_Err_Count + 1                                           ' Count the error
                            G_Caller = F0100_Find_Comment("S31", "C18", "E7")                       ' Find the error message
                            G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
                            
                            GoTo F3120_Duplicated2                                                  ' All done for this BIN/row
                        End If
                        
                        If F3120_A_F_Srce(F3120_Index) <> F3120_This_F_Srce And _
                           F3120_A_F_Srce(F3120_Index) <> "" And _
                           F3120_This_F_Srce <> "" Then                                             ' Same BIN but different Funding Source
                            Range("C" & G_BIN_L_Row_No).Select                                      ' Select cell
                            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                            G_Err_Count = G_Err_Count + 1                                           ' Count the error
                            G_Caller = F0100_Find_Comment("S31", "C18", "E8")                       ' Find the error message
                            G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
                            
                            Range("C" & F3120_A_Row_No(F3120_Index)).Select                         ' Select cell with earlier reference to same BIN
                            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                            G_Err_Count = G_Err_Count + 1                                           ' Count the error
                            G_Caller = F0100_Find_Comment("S31", "C18", "E9")                       ' Find the error message
                            G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
                            
                            GoTo F3120_Duplicated2                                                  ' All done for this BIN/row
                        End If
                        
                    End If
                    
                    If F3120_This_BINBIN = F3120_A_BINBIN(F3120_Index) And _
                       F3120_This_L_Rang = "" And _
                       F3120_This_H_Rang = "" Then                                                  ' If the same BIN already exists then
                        
                        Range("C" & G_BIN_L_Row_No).Select                                          ' Select cell
                        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                        G_Err_Count = G_Err_Count + 1                                               ' Count the error
                        G_Caller = F0100_Find_Comment("S31", "C18", "E4")                           ' Find the error message
                        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
                        
                        Range("C" & F3120_A_Row_No(F3120_Index)).Select                             ' Select cell with earlier reference to same BIN
                        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                        G_Err_Count = G_Err_Count + 1                                               ' Count the error
                        G_Caller = F0100_Find_Comment("S31", "C18", "E5")                           ' Find the error message
                        G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
                        
                        GoTo F3120_Duplicated2                                                      ' All done for this BIN/row
                    End If
                        
                Next F3120_Index                                                                    ' Go around for next entry in BIN array
                
                F3120_Index = F3120_Index + 1                                                       ' Increase the index
                F3120_A_BINBIN(F3120_Index) = Trim(Range("C" & G_BIN_L_Row_No).Value)               ' Store the BIN
                F3120_A_L_Rang(F3120_Index) = Trim(Range("D" & G_BIN_L_Row_No).Value)               ' Store the low range
                F3120_A_H_Rang(F3120_Index) = Trim(Range("F" & G_BIN_L_Row_No).Value)               ' Store the high range
                F3120_A_F_Srce(F3120_Index) = Trim(Range("K" & G_BIN_L_Row_No).Value)               ' Store the funding source
                F3120_A_Row_No(F3120_Index) = G_BIN_L_Row_No                                        ' Store the Row Number where the BIN is located
                F3120_Total = F3120_Index                                                           ' Increase the total
            End If
            
F3120_Duplicated2:
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - Product
        ' - Values are checked by Excel using a data validation list
        ' - But the validation needs to be performed again because invalid values may be pasted in from another spreadsheet or from Word
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Range("I" & G_BIN_L_Row_No & ":J" & G_BIN_L_Row_No).MergeCells = True   ' Re-merge the cells just in case they were pasted in unmerged from another spreadsheet
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) = "" Then                    ' If BIN is empty then Product must also be empty
            If Trim(Range("I" & G_BIN_L_Row_No).Value) = "" Then
                Range("I" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "I18", "")
            Else
                Range("I" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "I18", "E1")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                   ' If BIN is specified then Product may or may not be specified
            G_Caller = F9938_Validate_PID(Range("I" & G_BIN_L_Row_No).Value)    ' Validation of Product ID
            
            Select Case G_Caller
            
            Case "", "E1"                                                       ' Valid or blank
                Range("I" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "I18", "")
            
            Case Else
                Range("I" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "I18", G_Caller)
            
            End Select
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - Account Funding Source
        ' - Values are checked by Excel using a data validation list
        ' - But the validation needs to be performed again because invalid values may be pasted in from another spreadsheet or from Word
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) = "" Then                    ' If BIN is empty then Account Funding Source must also be empty
            If Trim(Range("K" & G_BIN_L_Row_No).Value) = "" Then
                Range("K" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "K18", "")
            Else
                Range("K" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "K18", "E1")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                   ' If BIN is specified then Account Funding Source may or may not be specified
            Range("K" & G_BIN_L_Row_No).Select                                  ' Select cell
            
            Select Case LCase(Selection)
            
            Case "debit", "credit", "prepaid", ""
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "K18", "")
            
            Case Else
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "K18", "E3")
            
            End Select
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - Co-Branded with Plus
        ' - Values are checked by Excel using a data validation list
        ' - But the validation needs to be performed again because invalid values may be pasted in from another spreadsheet or from Word
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) = "" Then                    ' If BIN is empty then Co-Branded with Plus must also be empty
            If Trim(Range("L" & G_BIN_L_Row_No).Value) = "" Then
                Range("L" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "L18", "")
            Else
                Range("L" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "L18", "E1")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                   ' If BIN is specified then Co-Branded with Plus may or may not be specified
            Range("L" & G_BIN_L_Row_No).Select                                  ' Select cell
            
            Select Case LCase(Selection)
            
            Case "yes", "no", ""
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "L18", "")
            
            Case Else
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "L18", "E3")
            
            End Select
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - Routing ID
        ' - Values are checked by means of a function in Module99
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) = "" Then                    ' If BIN is empty then Routing ID must also be empty
            If Trim(Range("H" & G_BIN_L_Row_No).Value) = "" Then
                Range("H" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "H18", "")
            Else
                Range("H" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "H18", "E4")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                   ' If BIN is specified then Routing ID may optionally be specified
            G_Caller = F9928_Validate_RID(Trim(Range("H" & G_BIN_L_Row_No).Value), "")
            
            Select Case G_Caller
            
            Case "", "E1"
                Range("H" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "H18", "")
                
            Case Else
                Range("H" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "H18", G_Caller)
                
            End Select
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - Low (active) Range
        ' - Values are checked by means of a function in Module99
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) = "" Then                    ' If BIN is empty then Low Account Range must also be empty
            If Trim(Range("D" & G_BIN_L_Row_No).Value) = "" Then
                Range("D" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "D18", "")
            Else
                Range("D" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "D18", "E4")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                   ' If BIN is specified then Low Account Range may or may not be specified
            If Trim(Range("D" & G_BIN_L_Row_No).Value) <> "" Then
                G_Caller = F9920_Validate_Rng(Trim(Range("D" & G_BIN_L_Row_No).Value))
                
                Select Case G_Caller
                
                Case ""
                    Range("D" & G_BIN_L_Row_No).Select                          ' Select cell
                    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                    G_Caller = F0100_Find_Comment("S31", "D18", "")
                    
                Case Else
                    Range("D" & G_BIN_L_Row_No).Select                          ' Select cell
                    Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                    G_Err_Count = G_Err_Count + 1                               ' Count the error
                    G_Caller = F0100_Find_Comment("S31", "D18", G_Caller)
                    
                End Select
            Else                                                                ' Low Range may or may not be specified
                Range("D" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "D18", "")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Validation - High (active) Range
        ' - Values are checked by means of a function in Module99
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Trim(Range("C" & G_BIN_L_Row_No).Value) = "" Then                    ' If BIN is empty then High Account Range must also be empty
            If Trim(Range("F" & G_BIN_L_Row_No).Value) = "" Then
                Range("F" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "F18", "")
            Else
                Range("F" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S31", "F18", "E4")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        If Trim(Range("C" & G_BIN_L_Row_No).Value) <> "" Then                   ' If BIN is specified then High Account Range may or may not be specified
            If Trim(Range("F" & G_BIN_L_Row_No).Value) <> "" Then
                G_Caller = F9920_Validate_Rng(Trim(Range("F" & G_BIN_L_Row_No).Value))
                
                Select Case G_Caller
                
                Case ""
                    If Trim(Range("F" & G_BIN_L_Row_No).Value) >= _
                       Trim(Range("D" & G_BIN_L_Row_No).Value) Then             ' High Range is greater than or equal to Low Range
                        
                        Range("F" & G_BIN_L_Row_No).Select                      ' Select cell
                        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                        G_Caller = F0100_Find_Comment("S31", "F18", "")
                        
                    Else                                                        ' High Range is less than Low Range - Error E5
                        Range("F" & G_BIN_L_Row_No).Select                      ' Select cell
                        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                        G_Err_Count = G_Err_Count + 1                           ' Count the error
                        G_Caller = F0100_Find_Comment("S31", "F18", "E5")
                    End If
                    
                Case Else                                                       ' Validation error from Module99
                    Range("F" & G_BIN_L_Row_No).Select                          ' Select cell
                    Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                    G_Err_Count = G_Err_Count + 1                               ' Count the error
                    G_Caller = F0100_Find_Comment("S31", "F18", G_Caller)
                    
                End Select
            Else                                                                ' High Range may or may not be specified
                Range("F" & G_BIN_L_Row_No).Select                              ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S31", "F18", "")
            End If
            
            G_Caller = F1400_Add_Remove_Comment()                               ' Remove and add any comment
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Move down one row
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
F3120_Next_BIN:
    
    Next G_BIN_L_Row_No                                                         ' Next row down
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation of at least one BIN
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_BL_BIN_Count = 0 Then
        Range("C18").Select                                                     ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S31", "C18", "E10")
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
        
        Worksheets(F3120_Sheet).Activate                                        ' Activate the previous worksheet
        
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Sort into BIN and Low-Range order
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3120_Sort_Range                                    As String
    Dim F3120_Sort_Col_1                                    As String
    Dim F3120_Sort_Col_2                                    As String
    
    F3120_Sort_Range = "C018:L317"
    F3120_Sort_Col_1 = "C018:C317"
    F3120_Sort_Col_2 = "D018:D317"
    
    ActiveWorkbook.Worksheets(G_Tab_Svc31).Sort.SortFields.Clear
    
    ActiveWorkbook.Worksheets(G_Tab_Svc31).Sort.SortFields.Add _
        Key:=Range(F3120_Sort_Col_1), _
        SortOn:=xlSortOnValues, _
        Order:=xlAscending, _
        DataOption:=xlSortNormal
    
    ActiveWorkbook.Worksheets(G_Tab_Svc31).Sort.SortFields.Add _
        Key:=Range(F3120_Sort_Col_2), _
        SortOn:=xlSortOnValues, _
        Order:=xlAscending, _
        DataOption:=xlSortNormal
    
    With ActiveWorkbook.Worksheets(G_Tab_Svc31).Sort
        .SetRange Range(F3120_Sort_Range)
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not leave the entire range selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range("C14").Select                                                         ' Position at top of BIN List
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F3120_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F3120_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module34_VSDC"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_EM_Range_ABBE_3(4)                                 As String           ' H01 - Please provide your encryption BIN that stores the MDK for Production.
Global G_EM_Range_ABBE3T(4)                                 As String           ' H02 - Would you like to use the Visa Test Master Derivation Key (MDK)?
Global G_EM_Range_ABBC_1(4)                                 As String           ' H03 - Will this BIN be used as an Acquiring BIN for VSDC Manual Cash Disbursement?
Global G_EM_Range_ABBE4a(4)                                 As String           ' H04 - Please select the VisaNet Online Card Authentication optionthat will apply to all CVNs.
Global G_EM_Range_ABBE4b(4)                                 As String           ' H05 - Does this BIN want to opt in for selected CVN processing for PAN-based transactions?
Global G_EM_Range_Exp_01(4)                                 As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_01(4)                                 As String           ' H06 - CVN
Global G_EM_Range_CAM_01(4)                                 As String           ' H06 - CAM Validation Option
Global G_EM_Range_Exp_02(4)                                 As String           ' H07 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_02(4)                                 As String           ' H07 - CVN
Global G_EM_Range_CAM_02(4)                                 As String           ' H07 - CAM Validation Option
Global G_EM_Range_Exp_03(4)                                 As String           ' H08 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_03(4)                                 As String           ' H08 - CVN
Global G_EM_Range_CAM_03(4)                                 As String           ' H08 - CAM Validation Option
Global G_EM_Range_Exp_04(4)                                 As String           ' H09 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_04(4)                                 As String           ' H09 - CVN
Global G_EM_Range_CAM_04(4)                                 As String           ' H09 - CAM Validation Option
Global G_EM_Range_Exp_05(4)                                 As String           ' H10 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_05(4)                                 As String           ' H10 - CVN
Global G_EM_Range_CAM_05(4)                                 As String           ' H10 - CAM Validation Option
Global G_EM_Range_Exp_06(4)                                 As String           ' H11 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_06(4)                                 As String           ' H11 - CVN
Global G_EM_Range_CAM_06(4)                                 As String           ' H11 - CAM Validation Option
Global G_EM_Range_Exp_07(4)                                 As String           ' H12 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_07(4)                                 As String           ' H12 - CVN
Global G_EM_Range_CAM_07(4)                                 As String           ' H12 - CAM Validation Option
Global G_EM_Range_Exp_08(4)                                 As String           ' H13 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_08(4)                                 As String           ' H13 - CVN
Global G_EM_Range_CAM_08(4)                                 As String           ' H13 - CAM Validation Option
Global G_EM_Range_Exp_09(4)                                 As String           ' H14 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_09(4)                                 As String           ' H14 - CVN
Global G_EM_Range_CAM_09(4)                                 As String           ' H14 - CAM Validation Option
Global G_EM_Range_Exp_10(4)                                 As String           ' H15 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_10(4)                                 As String           ' H15 - CVN
Global G_EM_Range_CAM_10(4)                                 As String           ' H15 - CAM Validation Option
Global G_EM_Range_Exp_11(4)                                 As String           ' H16 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_11(4)                                 As String           ' H16 - CVN
Global G_EM_Range_CAM_11(4)                                 As String           ' H16 - CAM Validation Option
Global G_EM_Range_Exp_12(4)                                 As String           ' H17 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_12(4)                                 As String           ' H17 - CVN
Global G_EM_Range_CAM_12(4)                                 As String           ' H17 - CAM Validation Option
Global G_EM_Range_Exp_13(4)                                 As String           ' H18 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_13(4)                                 As String           ' H18 - CVN
Global G_EM_Range_CAM_13(4)                                 As String           ' H18 - CAM Validation Option
Global G_EM_Range_Exp_14(4)                                 As String           ' H19 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_14(4)                                 As String           ' H19 - CVN
Global G_EM_Range_CAM_14(4)                                 As String           ' H19 - CAM Validation Option
Global G_EM_Range_Exp_15(4)                                 As String           ' H20 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_15(4)                                 As String           ' H20 - CVN
Global G_EM_Range_CAM_15(4)                                 As String           ' H20 - CAM Validation Option
Global G_EM_Range_Exp_16(4)                                 As String           ' H21 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_16(4)                                 As String           ' H21 - CVN
Global G_EM_Range_CAM_16(4)                                 As String           ' H21 - CAM Validation Option
Global G_EM_Range_Exp_17(4)                                 As String           ' H22 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_17(4)                                 As String           ' H22 - CVN
Global G_EM_Range_CAM_17(4)                                 As String           ' H22 - CAM Validation Option
Global G_EM_Range_Exp_18(4)                                 As String           ' H23 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_18(4)                                 As String           ' H23 - CVN
Global G_EM_Range_CAM_18(4)                                 As String           ' H23 - CAM Validation Option
Global G_EM_Range_Exp_19(4)                                 As String           ' H24 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_19(4)                                 As String           ' H24 - CVN
Global G_EM_Range_CAM_19(4)                                 As String           ' H24 - CAM Validation Option
Global G_EM_Range_Exp_20(4)                                 As String           ' H25 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Range_CVN_20(4)                                 As String           ' H25 - CVN
Global G_EM_Range_CAM_20(4)                                 As String           ' H25 - CAM Validation Option
Global G_EM_Range_ABBE_5(4)                                 As String           ' H26 - Specify when VisaNet should perform issuer authentication.
Global G_EM_Range_ABBG_7(4)                                 As String           ' H27 - Does this issuer BIN use Field 55 for VSDC transactions?
Global G_EM_Range_ABBG11(4)                                 As String           ' H28 - Does this issuer BIN use 3rd Bitmap for VSDC transactions?
Global G_EM_Range_ABBG12(4)                                 As String           ' H29 - Is this BIN capable of sending and receiving supplemental data in Field 55?
Global G_EM_Range_ABFX_3(4)                                 As String           ' H30 - Does this issuing BIN support PAN-based contactless ATM transactions?
Global G_EM_Range_AGR_PM(4)                                 As String           ' H31 - Does this issuing BIN support PIN change/unblock requests?
Global G_EM_Range_ABBH_1(4)                                 As String           ' H32 - Transaction exceeds floor limit.
Global G_EM_Range_ABBH_2(4)                                 As String           ' H33 - Transaction selected randomly for online.
Global G_EM_Range_ABBH_3(4)                                 As String           ' H34 - Cardholder verification failed.
Global G_EM_Range_ABBH_4(4)                                 As String           ' H35 - Unrecognized cardholder verification method.
Global G_EM_Range_ABBH_5(4)                                 As String           ' H36 - Offline PIN verification failed.
Global G_EM_Range_ABBH_6(4)                                 As String           ' H37 - PIN entry required and PIN pad not present or not working.
Global G_EM_Range_ABBH7a(4)                                 As String           ' H38 - PIN entry required, PIN pad is present, but PIN not entered: a. Domestic transactions.
Global G_EM_Range_ABBH7b(4)                                 As String           ' H39 - PIN entry required, PIN pad is present, but PIN not entered: b. International transactions.
Global G_EM_Range_ABBH_8(4)                                 As String           ' H40 - Offline PIN try limit exceeded.
Global G_EM_Range_ABBH_9(4)                                 As String           ' H41 - Lower consecutive offline limit exceeded.
Global G_EM_Range_ABBH10(4)                                 As String           ' H42 - Upper consecutive offline limit exceeded.
Global G_EM_Range_ABBH11(4)                                 As String           ' H43 - Expired application.
Global G_EM_Range_ABBH12(4)                                 As String           ' H44 - Application not yet effective.
Global G_EM_Range_ABBH13(4)                                 As String           ' H45 - Issuer Authentication failed on last transaction.
Global G_EM_Range_ABBH14(4)                                 As String           ' H46 - Static Data Authentication failed.
Global G_EM_Range_ABBH15(4)                                 As String           ' H47 - Offline Data Authentication not performed.
Global G_EM_Range_ABBH16(4)                                 As String           ' H48 - Script update failed on last transaction.
Global G_EM_Range_ABBH17(4)                                 As String           ' H49 - Merchant forced transaction online.
Global G_EM_Range_ABB18a(4)                                 As String           ' H50 - Mag Stripe read of Chip Card at Chip terminal: a. Domestic transactions.
Global G_EM_Range_ABB18b(4)                                 As String           ' H51 - Mag Stripe read of Chip Card at Chip terminal: b. International transactions.
Global G_EM_Range_ABBH19(4)                                 As String           ' H52 - Last online transaction not completed.
Global G_EM_Range_ABBH20(4)                                 As String           ' H53 - CAM Failure and Card Authentication Reliable.
Global G_EM_Range_ABBH21(4)                                 As String           ' H54 - CAM Failure and Card Authentication Unreliable.
Global G_EM_Range_ABBH22(4)                                 As String           ' H55 - CAM Not performed and Card Authentication Unreliable.
Global G_EM_Range_ABBH23(4)                                 As String           ' H56 - Dynamic Data Authentication failed.
Global G_EM_Range_ABBH24(4)                                 As String           ' H57 - Issuer Discretionary Data Present.
Global G_EM_Range_ABBI_1(4)                                 As String           ' H58 - Exceeded total, domestic or international counter.
Global G_EM_Range_ABBI_2(4)                                 As String           ' H59 - Static Data Authentication failed on last transaction and was declined offline.
Global G_EM_Range_ABBI_4(4)                                 As String           ' H60 - New card (first used).
Global G_EM_Range_ABBI_5(4)                                 As String           ' H61 - Dynamic Data Authentication failed on last transaction and was declined offline.
Global G_EM_Range_ABBK_1(4)                                 As String           ' H62 - Does this BIN participate in selective POS Entry Mode blocking?
Global G_EM_Range_ABBK2a(4)                                 As String           ' H63 - Block Contact Chip Read (Field 25=05/95)?
Global G_EM_Range_ABBK2b(4)                                 As String           ' H64 - Block Contactless Chip using qVSDC rules (Field 25=07)?
Global G_EM_Range_ABBK2c(4)                                 As String           ' H65 - Block Contactless Chip using MSD rules (Field 25=91)?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_EM_Value_ABBE_3                                    As String           ' H01 - Please provide your encryption BIN that stores the MDK for Production.
Global G_EM_Value_ABBE3T                                    As String           ' H02 - Would you like to use the Visa Test Master Derivation Key (MDK)?
Global G_EM_Value_ABBC_1                                    As String           ' H03 - Will this BIN be used as an Acquiring BIN for VSDC Manual Cash Disbursement?
Global G_EM_Value_ABBE4a                                    As String           ' H04 - Please select the VisaNet Online Card Authentication optionthat will apply to all CVNs.
Global G_EM_Value_ABBE4b                                    As String           ' H05 - Does this BIN want to opt in for selected CVN processing for PAN-based transactions?
Global G_EM_Value_Exp_01                                    As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_01                                    As String           ' H06 - CVN
Global G_EM_Value_CAM_01                                    As String           ' H06 - CAM Validation Option
Global G_EM_Value_Exp_02                                    As String           ' H07 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_02                                    As String           ' H07 - CVN
Global G_EM_Value_CAM_02                                    As String           ' H07 - CAM Validation Option
Global G_EM_Value_Exp_03                                    As String           ' H08 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_03                                    As String           ' H08 - CVN
Global G_EM_Value_CAM_03                                    As String           ' H08 - CAM Validation Option
Global G_EM_Value_Exp_04                                    As String           ' H09 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_04                                    As String           ' H09 - CVN
Global G_EM_Value_CAM_04                                    As String           ' H09 - CAM Validation Option
Global G_EM_Value_Exp_05                                    As String           ' H10 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_05                                    As String           ' H10 - CVN
Global G_EM_Value_CAM_05                                    As String           ' H10 - CAM Validation Option
Global G_EM_Value_Exp_06                                    As String           ' H11 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_06                                    As String           ' H11 - CVN
Global G_EM_Value_CAM_06                                    As String           ' H11 - CAM Validation Option
Global G_EM_Value_Exp_07                                    As String           ' H12 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_07                                    As String           ' H12 - CVN
Global G_EM_Value_CAM_07                                    As String           ' H12 - CAM Validation Option
Global G_EM_Value_Exp_08                                    As String           ' H13 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_08                                    As String           ' H13 - CVN
Global G_EM_Value_CAM_08                                    As String           ' H13 - CAM Validation Option
Global G_EM_Value_Exp_09                                    As String           ' H14 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_09                                    As String           ' H14 - CVN
Global G_EM_Value_CAM_09                                    As String           ' H14 - CAM Validation Option
Global G_EM_Value_Exp_10                                    As String           ' H15 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_10                                    As String           ' H15 - CVN
Global G_EM_Value_CAM_10                                    As String           ' H15 - CAM Validation Option
Global G_EM_Value_Exp_11                                    As String           ' H16 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_11                                    As String           ' H16 - CVN
Global G_EM_Value_CAM_11                                    As String           ' H16 - CAM Validation Option
Global G_EM_Value_Exp_12                                    As String           ' H17 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_12                                    As String           ' H17 - CVN
Global G_EM_Value_CAM_12                                    As String           ' H17 - CAM Validation Option
Global G_EM_Value_Exp_13                                    As String           ' H18 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_13                                    As String           ' H18 - CVN
Global G_EM_Value_CAM_13                                    As String           ' H18 - CAM Validation Option
Global G_EM_Value_Exp_14                                    As String           ' H19 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_14                                    As String           ' H19 - CVN
Global G_EM_Value_CAM_14                                    As String           ' H19 - CAM Validation Option
Global G_EM_Value_Exp_15                                    As String           ' H20 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_15                                    As String           ' H20 - CVN
Global G_EM_Value_CAM_15                                    As String           ' H20 - CAM Validation Option
Global G_EM_Value_Exp_16                                    As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_16                                    As String           ' H21 - CVN
Global G_EM_Value_CAM_16                                    As String           ' H21 - CAM Validation Option
Global G_EM_Value_Exp_17                                    As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_17                                    As String           ' H22 - CVN
Global G_EM_Value_CAM_17                                    As String           ' H22 - CAM Validation Option
Global G_EM_Value_Exp_18                                    As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_18                                    As String           ' H23 - CVN
Global G_EM_Value_CAM_18                                    As String           ' H23 - CAM Validation Option
Global G_EM_Value_Exp_19                                    As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_19                                    As String           ' H24 - CVN
Global G_EM_Value_CAM_19                                    As String           ' H24 - CAM Validation Option
Global G_EM_Value_Exp_20                                    As String           ' H06 - CVN Expressed In Decimal or Hexadecimal
Global G_EM_Value_CVN_20                                    As String           ' H25 - CVN
Global G_EM_Value_CAM_20                                    As String           ' H25 - CAM Validation Option
Global G_EM_Value_ABBE_5                                    As String           ' H26 - Specify when VisaNet should perform issuer authentication.
Global G_EM_Value_ABBG_7                                    As String           ' H27 - Does this issuer BIN use Field 55 for VSDC transactions?
Global G_EM_Value_ABBG11                                    As String           ' H28 - Does this issuer BIN use 3rd Bitmap for VSDC transactions?
Global G_EM_Value_ABBG12                                    As String           ' H29 - Is this BIN capable of sending and receiving supplemental data in Field 55?
Global G_EM_Value_ABFX_3                                    As String           ' H30 - Does this issuing BIN support PAN-based contactless ATM transactions?
Global G_EM_Value_AGR_PM                                    As String           ' H31 - Does this issuing BIN support PIN change/unblock requests?
Global G_EM_Value_ABBH_1                                    As String           ' H32 - Transaction exceeds floor limit.
Global G_EM_Value_ABBH_2                                    As String           ' H33 - Transaction selected randomly for online.
Global G_EM_Value_ABBH_3                                    As String           ' H34 - Cardholder verification failed.
Global G_EM_Value_ABBH_4                                    As String           ' H35 - Unrecognized cardholder verification method.
Global G_EM_Value_ABBH_5                                    As String           ' H36 - Offline PIN verification failed.
Global G_EM_Value_ABBH_6                                    As String           ' H37 - PIN entry required and PIN pad not present or not working.
Global G_EM_Value_ABBH7a                                    As String           ' H38 - PIN entry required, PIN pad is present, but PIN not entered: a. Domestic transactions.
Global G_EM_Value_ABBH7b                                    As String           ' H39 - PIN entry required, PIN pad is present, but PIN not entered: b. International transactions.
Global G_EM_Value_ABBH_8                                    As String           ' H40 - Offline PIN try limit exceeded.
Global G_EM_Value_ABBH_9                                    As String           ' H41 - Lower consecutive offline limit exceeded.
Global G_EM_Value_ABBH10                                    As String           ' H42 - Upper consecutive offline limit exceeded.
Global G_EM_Value_ABBH11                                    As String           ' H43 - Expired application.
Global G_EM_Value_ABBH12                                    As String           ' H44 - Application not yet effective.
Global G_EM_Value_ABBH13                                    As String           ' H45 - Issuer Authentication failed on last transaction.
Global G_EM_Value_ABBH14                                    As String           ' H46 - Static Data Authentication failed.
Global G_EM_Value_ABBH15                                    As String           ' H47 - Offline Data Authentication not performed.
Global G_EM_Value_ABBH16                                    As String           ' H48 - Script update failed on last transaction.
Global G_EM_Value_ABBH17                                    As String           ' H49 - Merchant forced transaction online.
Global G_EM_Value_ABB18a                                    As String           ' H50 - Mag Stripe read of Chip Card at Chip terminal: a. Domestic transactions.
Global G_EM_Value_ABB18b                                    As String           ' H51 - Mag Stripe read of Chip Card at Chip terminal: b. International transactions.
Global G_EM_Value_ABBH19                                    As String           ' H52 - Last online transaction not completed.
Global G_EM_Value_ABBH20                                    As String           ' H53 - CAM Failure and Card Authentication Reliable.
Global G_EM_Value_ABBH21                                    As String           ' H54 - CAM Failure and Card Authentication Unreliable.
Global G_EM_Value_ABBH22                                    As String           ' H55 - CAM Not performed and Card Authentication Unreliable.
Global G_EM_Value_ABBH23                                    As String           ' H56 - Dynamic Data Authentication failed.
Global G_EM_Value_ABBH24                                    As String           ' H57 - Issuer Discretionary Data Present.
Global G_EM_Value_ABBI_1                                    As String           ' H58 - Exceeded total, domestic or international counter.
Global G_EM_Value_ABBI_2                                    As String           ' H59 - Static Data Authentication failed on last transaction and was declined offline.
Global G_EM_Value_ABBI_4                                    As String           ' H60 - New card (first used).
Global G_EM_Value_ABBI_5                                    As String           ' H61 - Dynamic Data Authentication failed on last transaction and was declined offline.
Global G_EM_Value_ABBK_1                                    As String           ' H62 - Does this BIN participate in selective POS Entry Mode blocking?
Global G_EM_Value_ABBK2a                                    As String           ' H63 - Block Contact Chip Read (Field 25=05/95)?
Global G_EM_Value_ABBK2b                                    As String           ' H64 - Block Contactless Chip using qVSDC rules (Field 25=07)?
Global G_EM_Value_ABBK2c                                    As String           ' H65 - Block Contactless Chip using MSD rules (Field 25=91)?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc34_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
Global G34_Formatted_CVN                                    As String           ' Reformatted CVN
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F3400_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_EM_Range_ABBE_3(0) = "A018:A019": G_EM_Range_ABBE_3(1) = "A018:A019": G_EM_Range_ABBE_3(2) = "K019": G_EM_Range_ABBE_3(3) = "         ": G_EM_Range_ABBE_3(4) = ""    ' H01
    G_EM_Range_ABBE3T(0) = "A020:A021": G_EM_Range_ABBE3T(1) = "A020:A021": G_EM_Range_ABBE3T(2) = "K021": G_EM_Range_ABBE3T(3) = "         ": G_EM_Range_ABBE3T(4) = ""    ' H02
    G_EM_Range_ABBC_1(0) = "A022:A023": G_EM_Range_ABBC_1(1) = "A022:A023": G_EM_Range_ABBC_1(2) = "K023": G_EM_Range_ABBC_1(3) = "         ": G_EM_Range_ABBC_1(4) = ""    ' H03
    G_EM_Range_ABBE4a(0) = "A024:A026": G_EM_Range_ABBE4a(1) = "A024:A026": G_EM_Range_ABBE4a(2) = "K025": G_EM_Range_ABBE4a(3) = "         ": G_EM_Range_ABBE4a(4) = ""    ' H04
    G_EM_Range_ABBE4b(0) = "A027:A028": G_EM_Range_ABBE4b(1) = "A027:A028": G_EM_Range_ABBE4b(2) = "K028": G_EM_Range_ABBE4b(3) = "         ": G_EM_Range_ABBE4b(4) = ""    ' H05
                                                                                                                                                                            '
    G_EM_Range_Exp_01(0) = "A032:A043": G_EM_Range_Exp_01(1) = "A032:A043": G_EM_Range_Exp_01(2) = "C034": G_EM_Range_Exp_01(3) = "         ": G_EM_Range_Exp_01(4) = ""    ' H06
    G_EM_Range_CVN_01(0) = "A032:A043": G_EM_Range_CVN_01(1) = "A032:A043": G_EM_Range_CVN_01(2) = "D034": G_EM_Range_CVN_01(3) = "         ": G_EM_Range_CVN_01(4) = ""    '
    G_EM_Range_CAM_01(0) = "A032:A043": G_EM_Range_CAM_01(1) = "A032:A043": G_EM_Range_CAM_01(2) = "E034": G_EM_Range_CAM_01(3) = "         ": G_EM_Range_CAM_01(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_02(0) = "A032:A043": G_EM_Range_Exp_02(1) = "A032:A043": G_EM_Range_Exp_02(2) = "H034": G_EM_Range_Exp_02(3) = "         ": G_EM_Range_Exp_02(4) = ""    ' H07
    G_EM_Range_CVN_02(0) = "A032:A043": G_EM_Range_CVN_02(1) = "A032:A043": G_EM_Range_CVN_02(2) = "I034": G_EM_Range_CVN_02(3) = "         ": G_EM_Range_CVN_02(4) = ""    '
    G_EM_Range_CAM_02(0) = "A032:A043": G_EM_Range_CAM_02(1) = "A032:A043": G_EM_Range_CAM_02(2) = "J034": G_EM_Range_CAM_02(3) = "         ": G_EM_Range_CAM_02(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_03(0) = "A032:A043": G_EM_Range_Exp_03(1) = "A032:A043": G_EM_Range_Exp_03(2) = "C035": G_EM_Range_Exp_03(3) = "         ": G_EM_Range_Exp_03(4) = ""    ' H08
    G_EM_Range_CVN_03(0) = "A032:A043": G_EM_Range_CVN_03(1) = "A032:A043": G_EM_Range_CVN_03(2) = "D035": G_EM_Range_CVN_03(3) = "         ": G_EM_Range_CVN_03(4) = ""    '
    G_EM_Range_CAM_03(0) = "A032:A043": G_EM_Range_CAM_03(1) = "A032:A043": G_EM_Range_CAM_03(2) = "E035": G_EM_Range_CAM_03(3) = "         ": G_EM_Range_CAM_03(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_04(0) = "A032:A043": G_EM_Range_Exp_04(1) = "A032:A043": G_EM_Range_Exp_04(2) = "H035": G_EM_Range_Exp_04(3) = "         ": G_EM_Range_Exp_04(4) = ""    ' H09
    G_EM_Range_CVN_04(0) = "A032:A043": G_EM_Range_CVN_04(1) = "A032:A043": G_EM_Range_CVN_04(2) = "I035": G_EM_Range_CVN_04(3) = "         ": G_EM_Range_CVN_04(4) = ""    '
    G_EM_Range_CAM_04(0) = "A032:A043": G_EM_Range_CAM_04(1) = "A032:A043": G_EM_Range_CAM_04(2) = "J035": G_EM_Range_CAM_04(3) = "         ": G_EM_Range_CAM_04(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_05(0) = "A032:A043": G_EM_Range_Exp_05(1) = "A032:A043": G_EM_Range_Exp_05(2) = "C036": G_EM_Range_Exp_05(3) = "         ": G_EM_Range_Exp_05(4) = ""    ' H10
    G_EM_Range_CVN_05(0) = "A032:A043": G_EM_Range_CVN_05(1) = "A032:A043": G_EM_Range_CVN_05(2) = "D036": G_EM_Range_CVN_05(3) = "         ": G_EM_Range_CVN_05(4) = ""    '
    G_EM_Range_CAM_05(0) = "A032:A043": G_EM_Range_CAM_05(1) = "A032:A043": G_EM_Range_CAM_05(2) = "E036": G_EM_Range_CAM_05(3) = "         ": G_EM_Range_CAM_05(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_06(0) = "A032:A043": G_EM_Range_Exp_06(1) = "A032:A043": G_EM_Range_Exp_06(2) = "H036": G_EM_Range_Exp_06(3) = "         ": G_EM_Range_Exp_06(4) = ""    ' H11
    G_EM_Range_CVN_06(0) = "A032:A043": G_EM_Range_CVN_06(1) = "A032:A043": G_EM_Range_CVN_06(2) = "I036": G_EM_Range_CVN_06(3) = "         ": G_EM_Range_CVN_06(4) = ""    '
    G_EM_Range_CAM_06(0) = "A032:A043": G_EM_Range_CAM_06(1) = "A032:A043": G_EM_Range_CAM_06(2) = "J036": G_EM_Range_CAM_06(3) = "         ": G_EM_Range_CAM_06(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_07(0) = "A032:A043": G_EM_Range_Exp_07(1) = "A032:A043": G_EM_Range_Exp_07(2) = "C037": G_EM_Range_Exp_07(3) = "         ": G_EM_Range_Exp_07(4) = ""    ' H12
    G_EM_Range_CVN_07(0) = "A032:A043": G_EM_Range_CVN_07(1) = "A032:A043": G_EM_Range_CVN_07(2) = "D037": G_EM_Range_CVN_07(3) = "         ": G_EM_Range_CVN_07(4) = ""    '
    G_EM_Range_CAM_07(0) = "A032:A043": G_EM_Range_CAM_07(1) = "A032:A043": G_EM_Range_CAM_07(2) = "E037": G_EM_Range_CAM_07(3) = "         ": G_EM_Range_CAM_07(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_08(0) = "A032:A043": G_EM_Range_Exp_08(1) = "A032:A043": G_EM_Range_Exp_08(2) = "H037": G_EM_Range_Exp_08(3) = "         ": G_EM_Range_Exp_08(4) = ""    ' H13
    G_EM_Range_CVN_08(0) = "A032:A043": G_EM_Range_CVN_08(1) = "A032:A043": G_EM_Range_CVN_08(2) = "I037": G_EM_Range_CVN_08(3) = "         ": G_EM_Range_CVN_08(4) = ""    '
    G_EM_Range_CAM_08(0) = "A032:A043": G_EM_Range_CAM_08(1) = "A032:A043": G_EM_Range_CAM_08(2) = "J037": G_EM_Range_CAM_08(3) = "         ": G_EM_Range_CAM_08(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_09(0) = "A032:A043": G_EM_Range_Exp_09(1) = "A032:A043": G_EM_Range_Exp_09(2) = "C038": G_EM_Range_Exp_09(3) = "         ": G_EM_Range_Exp_09(4) = ""    ' H14
    G_EM_Range_CVN_09(0) = "A032:A043": G_EM_Range_CVN_09(1) = "A032:A043": G_EM_Range_CVN_09(2) = "D038": G_EM_Range_CVN_09(3) = "         ": G_EM_Range_CVN_09(4) = ""    '
    G_EM_Range_CAM_09(0) = "A032:A043": G_EM_Range_CAM_09(1) = "A032:A043": G_EM_Range_CAM_09(2) = "E038": G_EM_Range_CAM_09(3) = "         ": G_EM_Range_CAM_09(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_10(0) = "A032:A043": G_EM_Range_Exp_10(1) = "A032:A043": G_EM_Range_Exp_10(2) = "H038": G_EM_Range_Exp_10(3) = "         ": G_EM_Range_Exp_10(4) = ""    ' H15
    G_EM_Range_CVN_10(0) = "A032:A043": G_EM_Range_CVN_10(1) = "A032:A043": G_EM_Range_CVN_10(2) = "I038": G_EM_Range_CVN_10(3) = "         ": G_EM_Range_CVN_10(4) = ""    '
    G_EM_Range_CAM_10(0) = "A032:A043": G_EM_Range_CAM_10(1) = "A032:A043": G_EM_Range_CAM_10(2) = "J038": G_EM_Range_CAM_10(3) = "         ": G_EM_Range_CAM_10(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_11(0) = "A032:A043": G_EM_Range_Exp_11(1) = "A032:A043": G_EM_Range_Exp_11(2) = "C039": G_EM_Range_Exp_11(3) = "         ": G_EM_Range_Exp_11(4) = ""    ' H16
    G_EM_Range_CVN_11(0) = "A032:A043": G_EM_Range_CVN_11(1) = "A032:A043": G_EM_Range_CVN_11(2) = "D039": G_EM_Range_CVN_11(3) = "         ": G_EM_Range_CVN_11(4) = ""    '
    G_EM_Range_CAM_11(0) = "A032:A043": G_EM_Range_CAM_11(1) = "A032:A043": G_EM_Range_CAM_11(2) = "E039": G_EM_Range_CAM_11(3) = "         ": G_EM_Range_CAM_11(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_12(0) = "A032:A043": G_EM_Range_Exp_12(1) = "A032:A043": G_EM_Range_Exp_12(2) = "H039": G_EM_Range_Exp_12(3) = "         ": G_EM_Range_Exp_12(4) = ""    ' H17
    G_EM_Range_CVN_12(0) = "A032:A043": G_EM_Range_CVN_12(1) = "A032:A043": G_EM_Range_CVN_12(2) = "I039": G_EM_Range_CVN_12(3) = "         ": G_EM_Range_CVN_12(4) = ""    '
    G_EM_Range_CAM_12(0) = "A032:A043": G_EM_Range_CAM_12(1) = "A032:A043": G_EM_Range_CAM_12(2) = "J039": G_EM_Range_CAM_12(3) = "         ": G_EM_Range_CAM_12(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_13(0) = "A032:A043": G_EM_Range_Exp_13(1) = "A032:A043": G_EM_Range_Exp_13(2) = "C040": G_EM_Range_Exp_13(3) = "         ": G_EM_Range_Exp_13(4) = ""    ' H18
    G_EM_Range_CVN_13(0) = "A032:A043": G_EM_Range_CVN_13(1) = "A032:A043": G_EM_Range_CVN_13(2) = "D040": G_EM_Range_CVN_13(3) = "         ": G_EM_Range_CVN_13(4) = ""    '
    G_EM_Range_CAM_13(0) = "A032:A043": G_EM_Range_CAM_13(1) = "A032:A043": G_EM_Range_CAM_13(2) = "E040": G_EM_Range_CAM_13(3) = "         ": G_EM_Range_CAM_13(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_14(0) = "A032:A043": G_EM_Range_Exp_14(1) = "A032:A043": G_EM_Range_Exp_14(2) = "H040": G_EM_Range_Exp_14(3) = "         ": G_EM_Range_Exp_14(4) = ""    ' H19
    G_EM_Range_CVN_14(0) = "A032:A043": G_EM_Range_CVN_14(1) = "A032:A043": G_EM_Range_CVN_14(2) = "I040": G_EM_Range_CVN_14(3) = "         ": G_EM_Range_CVN_14(4) = ""    '
    G_EM_Range_CAM_14(0) = "A032:A043": G_EM_Range_CAM_14(1) = "A032:A043": G_EM_Range_CAM_14(2) = "J040": G_EM_Range_CAM_14(3) = "         ": G_EM_Range_CAM_14(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_15(0) = "A032:A043": G_EM_Range_Exp_15(1) = "A032:A043": G_EM_Range_Exp_15(2) = "C041": G_EM_Range_Exp_15(3) = "         ": G_EM_Range_Exp_15(4) = ""    ' H20
    G_EM_Range_CVN_15(0) = "A032:A043": G_EM_Range_CVN_15(1) = "A032:A043": G_EM_Range_CVN_15(2) = "D041": G_EM_Range_CVN_15(3) = "         ": G_EM_Range_CVN_15(4) = ""    '
    G_EM_Range_CAM_15(0) = "A032:A043": G_EM_Range_CAM_15(1) = "A032:A043": G_EM_Range_CAM_15(2) = "E041": G_EM_Range_CAM_15(3) = "         ": G_EM_Range_CAM_15(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_16(0) = "A032:A043": G_EM_Range_Exp_16(1) = "A032:A043": G_EM_Range_Exp_16(2) = "H041": G_EM_Range_Exp_16(3) = "         ": G_EM_Range_Exp_16(4) = ""    ' H06
    G_EM_Range_CVN_16(0) = "A032:A043": G_EM_Range_CVN_16(1) = "A032:A043": G_EM_Range_CVN_16(2) = "I041": G_EM_Range_CVN_16(3) = "         ": G_EM_Range_CVN_16(4) = ""    ' H21
    G_EM_Range_CAM_16(0) = "A032:A043": G_EM_Range_CAM_16(1) = "A032:A043": G_EM_Range_CAM_16(2) = "J041": G_EM_Range_CAM_16(3) = "         ": G_EM_Range_CAM_16(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_17(0) = "A032:A043": G_EM_Range_Exp_17(1) = "A032:A043": G_EM_Range_Exp_17(2) = "C042": G_EM_Range_Exp_17(3) = "         ": G_EM_Range_Exp_17(4) = ""    ' H06
    G_EM_Range_CVN_17(0) = "A032:A043": G_EM_Range_CVN_17(1) = "A032:A043": G_EM_Range_CVN_17(2) = "D042": G_EM_Range_CVN_17(3) = "         ": G_EM_Range_CVN_17(4) = ""    ' H22
    G_EM_Range_CAM_17(0) = "A032:A043": G_EM_Range_CAM_17(1) = "A032:A043": G_EM_Range_CAM_17(2) = "E042": G_EM_Range_CAM_17(3) = "         ": G_EM_Range_CAM_17(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_18(0) = "A032:A043": G_EM_Range_Exp_18(1) = "A032:A043": G_EM_Range_Exp_18(2) = "H042": G_EM_Range_Exp_18(3) = "         ": G_EM_Range_Exp_18(4) = ""    ' H06
    G_EM_Range_CVN_18(0) = "A032:A043": G_EM_Range_CVN_18(1) = "A032:A043": G_EM_Range_CVN_18(2) = "I042": G_EM_Range_CVN_18(3) = "         ": G_EM_Range_CVN_18(4) = ""    ' H23
    G_EM_Range_CAM_18(0) = "A032:A043": G_EM_Range_CAM_18(1) = "A032:A043": G_EM_Range_CAM_18(2) = "J042": G_EM_Range_CAM_18(3) = "         ": G_EM_Range_CAM_18(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_19(0) = "A032:A043": G_EM_Range_Exp_19(1) = "A032:A043": G_EM_Range_Exp_19(2) = "C043": G_EM_Range_Exp_19(3) = "         ": G_EM_Range_Exp_19(4) = ""    ' H06
    G_EM_Range_CVN_19(0) = "A032:A043": G_EM_Range_CVN_19(1) = "A032:A043": G_EM_Range_CVN_19(2) = "D043": G_EM_Range_CVN_19(3) = "         ": G_EM_Range_CVN_19(4) = ""    ' H24
    G_EM_Range_CAM_19(0) = "A032:A043": G_EM_Range_CAM_19(1) = "A032:A043": G_EM_Range_CAM_19(2) = "E043": G_EM_Range_CAM_19(3) = "         ": G_EM_Range_CAM_19(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_Exp_20(0) = "A032:A043": G_EM_Range_Exp_20(1) = "A032:A043": G_EM_Range_Exp_20(2) = "H043": G_EM_Range_Exp_20(3) = "         ": G_EM_Range_Exp_20(4) = ""    ' H06
    G_EM_Range_CVN_20(0) = "A032:A043": G_EM_Range_CVN_20(1) = "A032:A043": G_EM_Range_CVN_20(2) = "I043": G_EM_Range_CVN_20(3) = "         ": G_EM_Range_CVN_20(4) = ""    ' H25
    G_EM_Range_CAM_20(0) = "A032:A043": G_EM_Range_CAM_20(1) = "A032:A043": G_EM_Range_CAM_20(2) = "J043": G_EM_Range_CAM_20(3) = "         ": G_EM_Range_CAM_20(4) = ""    '
                                                                                                                                                                            '
    G_EM_Range_ABBE_5(0) = "A044:A045": G_EM_Range_ABBE_5(1) = "A044:A045": G_EM_Range_ABBE_5(2) = "K045": G_EM_Range_ABBE_5(3) = "         ": G_EM_Range_ABBE_5(4) = ""    ' H26
    G_EM_Range_ABBG_7(0) = "A046:A047": G_EM_Range_ABBG_7(1) = "A046:A047": G_EM_Range_ABBG_7(2) = "K047": G_EM_Range_ABBG_7(3) = "         ": G_EM_Range_ABBG_7(4) = ""    ' H27
    G_EM_Range_ABBG11(0) = "A048:A049": G_EM_Range_ABBG11(1) = "A048:A049": G_EM_Range_ABBG11(2) = "K049": G_EM_Range_ABBG11(3) = "         ": G_EM_Range_ABBG11(4) = ""    ' H28
    G_EM_Range_ABBG12(0) = "A050:A051": G_EM_Range_ABBG12(1) = "A050:A051": G_EM_Range_ABBG12(2) = "K051": G_EM_Range_ABBG12(3) = "         ": G_EM_Range_ABBG12(4) = ""    ' H29
    G_EM_Range_ABFX_3(0) = "A052:A053": G_EM_Range_ABFX_3(1) = "A052:A053": G_EM_Range_ABFX_3(2) = "K053": G_EM_Range_ABFX_3(3) = "         ": G_EM_Range_ABFX_3(4) = ""    ' H30
    G_EM_Range_AGR_PM(0) = "A054:A056": G_EM_Range_AGR_PM(1) = "A054:A056": G_EM_Range_AGR_PM(2) = "K055": G_EM_Range_AGR_PM(3) = "         ": G_EM_Range_AGR_PM(4) = ""    ' H31
                                                                                                                                                                            '
    G_EM_Range_ABBH_1(0) = "A061:A062": G_EM_Range_ABBH_1(1) = "A061:A062": G_EM_Range_ABBH_1(2) = "L062": G_EM_Range_ABBH_1(3) = "         ": G_EM_Range_ABBH_1(4) = ""    ' H32
    G_EM_Range_ABBH_2(0) = "A063:A064": G_EM_Range_ABBH_2(1) = "A063:A064": G_EM_Range_ABBH_2(2) = "L064": G_EM_Range_ABBH_2(3) = "         ": G_EM_Range_ABBH_2(4) = ""    ' H33
    G_EM_Range_ABBH_3(0) = "A065:A066": G_EM_Range_ABBH_3(1) = "A065:A066": G_EM_Range_ABBH_3(2) = "L066": G_EM_Range_ABBH_3(3) = "         ": G_EM_Range_ABBH_3(4) = ""    ' H34
    G_EM_Range_ABBH_4(0) = "A067:A068": G_EM_Range_ABBH_4(1) = "A067:A068": G_EM_Range_ABBH_4(2) = "L068": G_EM_Range_ABBH_4(3) = "         ": G_EM_Range_ABBH_4(4) = ""    ' H35
    G_EM_Range_ABBH_5(0) = "A069:A070": G_EM_Range_ABBH_5(1) = "A069:A070": G_EM_Range_ABBH_5(2) = "L070": G_EM_Range_ABBH_5(3) = "         ": G_EM_Range_ABBH_5(4) = ""    ' H36
    G_EM_Range_ABBH_6(0) = "A071:A072": G_EM_Range_ABBH_6(1) = "A071:A072": G_EM_Range_ABBH_6(2) = "L072": G_EM_Range_ABBH_6(3) = "         ": G_EM_Range_ABBH_6(4) = ""    ' H37
    G_EM_Range_ABBH7a(0) = "A073:A074": G_EM_Range_ABBH7a(1) = "A073:A074": G_EM_Range_ABBH7a(2) = "L074": G_EM_Range_ABBH7a(3) = "         ": G_EM_Range_ABBH7a(4) = ""    ' H38
    G_EM_Range_ABBH7b(0) = "A075:A076": G_EM_Range_ABBH7b(1) = "A075:A076": G_EM_Range_ABBH7b(2) = "L076": G_EM_Range_ABBH7b(3) = "         ": G_EM_Range_ABBH7b(4) = ""    ' H39
    G_EM_Range_ABBH_8(0) = "A077:A078": G_EM_Range_ABBH_8(1) = "A077:A078": G_EM_Range_ABBH_8(2) = "L078": G_EM_Range_ABBH_8(3) = "         ": G_EM_Range_ABBH_8(4) = ""    ' H40
    G_EM_Range_ABBH_9(0) = "A079:A080": G_EM_Range_ABBH_9(1) = "A079:A080": G_EM_Range_ABBH_9(2) = "L080": G_EM_Range_ABBH_9(3) = "         ": G_EM_Range_ABBH_9(4) = ""    ' H41
    G_EM_Range_ABBH10(0) = "A081:A082": G_EM_Range_ABBH10(1) = "A081:A082": G_EM_Range_ABBH10(2) = "L082": G_EM_Range_ABBH10(3) = "         ": G_EM_Range_ABBH10(4) = ""    ' H42
    G_EM_Range_ABBH11(0) = "A083:A084": G_EM_Range_ABBH11(1) = "A083:A084": G_EM_Range_ABBH11(2) = "L084": G_EM_Range_ABBH11(3) = "         ": G_EM_Range_ABBH11(4) = ""    ' H43
    G_EM_Range_ABBH12(0) = "A085:A086": G_EM_Range_ABBH12(1) = "A085:A086": G_EM_Range_ABBH12(2) = "L086": G_EM_Range_ABBH12(3) = "         ": G_EM_Range_ABBH12(4) = ""    ' H44
    G_EM_Range_ABBH13(0) = "A087:A088": G_EM_Range_ABBH13(1) = "A087:A088": G_EM_Range_ABBH13(2) = "L088": G_EM_Range_ABBH13(3) = "         ": G_EM_Range_ABBH13(4) = ""    ' H45
    G_EM_Range_ABBH14(0) = "A089:A090": G_EM_Range_ABBH14(1) = "A089:A090": G_EM_Range_ABBH14(2) = "L090": G_EM_Range_ABBH14(3) = "         ": G_EM_Range_ABBH14(4) = ""    ' H46
    G_EM_Range_ABBH15(0) = "A091:A092": G_EM_Range_ABBH15(1) = "A091:A092": G_EM_Range_ABBH15(2) = "L092": G_EM_Range_ABBH15(3) = "         ": G_EM_Range_ABBH15(4) = ""    ' H47
    G_EM_Range_ABBH16(0) = "A093:A094": G_EM_Range_ABBH16(1) = "A093:A094": G_EM_Range_ABBH16(2) = "L094": G_EM_Range_ABBH16(3) = "         ": G_EM_Range_ABBH16(4) = ""    ' H48
    G_EM_Range_ABBH17(0) = "A095:A096": G_EM_Range_ABBH17(1) = "A095:A096": G_EM_Range_ABBH17(2) = "L096": G_EM_Range_ABBH17(3) = "         ": G_EM_Range_ABBH17(4) = ""    ' H49
    G_EM_Range_ABB18a(0) = "A097:A098": G_EM_Range_ABB18a(1) = "A097:A098": G_EM_Range_ABB18a(2) = "L098": G_EM_Range_ABB18a(3) = "         ": G_EM_Range_ABB18a(4) = ""    ' H50
    G_EM_Range_ABB18b(0) = "A099:A100": G_EM_Range_ABB18b(1) = "A099:A100": G_EM_Range_ABB18b(2) = "L100": G_EM_Range_ABB18b(3) = "         ": G_EM_Range_ABB18b(4) = ""    ' H51
    G_EM_Range_ABBH19(0) = "A101:A102": G_EM_Range_ABBH19(1) = "A101:A102": G_EM_Range_ABBH19(2) = "L102": G_EM_Range_ABBH19(3) = "         ": G_EM_Range_ABBH19(4) = ""    ' H52
    G_EM_Range_ABBH20(0) = "A103:A104": G_EM_Range_ABBH20(1) = "A103:A104": G_EM_Range_ABBH20(2) = "L104": G_EM_Range_ABBH20(3) = "         ": G_EM_Range_ABBH20(4) = ""    ' H53
    G_EM_Range_ABBH21(0) = "A105:A106": G_EM_Range_ABBH21(1) = "A105:A106": G_EM_Range_ABBH21(2) = "L106": G_EM_Range_ABBH21(3) = "         ": G_EM_Range_ABBH21(4) = ""    ' H54
    G_EM_Range_ABBH22(0) = "A107:A108": G_EM_Range_ABBH22(1) = "A107:A108": G_EM_Range_ABBH22(2) = "L108": G_EM_Range_ABBH22(3) = "         ": G_EM_Range_ABBH22(4) = ""    ' H55
    G_EM_Range_ABBH23(0) = "A109:A110": G_EM_Range_ABBH23(1) = "A109:A110": G_EM_Range_ABBH23(2) = "L110": G_EM_Range_ABBH23(3) = "         ": G_EM_Range_ABBH23(4) = ""    ' H56
    G_EM_Range_ABBH24(0) = "A111:A112": G_EM_Range_ABBH24(1) = "A111:A112": G_EM_Range_ABBH24(2) = "L112": G_EM_Range_ABBH24(3) = "         ": G_EM_Range_ABBH24(4) = ""    ' H57
    G_EM_Range_ABBI_1(0) = "A113:A114": G_EM_Range_ABBI_1(1) = "A113:A114": G_EM_Range_ABBI_1(2) = "L114": G_EM_Range_ABBI_1(3) = "         ": G_EM_Range_ABBI_1(4) = ""    ' H58
    G_EM_Range_ABBI_2(0) = "A115:A116": G_EM_Range_ABBI_2(1) = "A115:A116": G_EM_Range_ABBI_2(2) = "L116": G_EM_Range_ABBI_2(3) = "         ": G_EM_Range_ABBI_2(4) = ""    ' H59
    G_EM_Range_ABBI_4(0) = "A117:A118": G_EM_Range_ABBI_4(1) = "A117:A118": G_EM_Range_ABBI_4(2) = "L118": G_EM_Range_ABBI_4(3) = "         ": G_EM_Range_ABBI_4(4) = ""    ' H60
    G_EM_Range_ABBI_5(0) = "A119:A120": G_EM_Range_ABBI_5(1) = "A119:A120": G_EM_Range_ABBI_5(2) = "L120": G_EM_Range_ABBI_5(3) = "         ": G_EM_Range_ABBI_5(4) = ""    ' H61
                                                                                                                                                                            '
    G_EM_Range_ABBK_1(0) = "A124:A125": G_EM_Range_ABBK_1(1) = "A124:A125": G_EM_Range_ABBK_1(2) = "L125": G_EM_Range_ABBK_1(3) = "         ": G_EM_Range_ABBK_1(4) = ""    ' H62
    G_EM_Range_ABBK2a(0) = "A126:A133": G_EM_Range_ABBK2a(1) = "A126:A133": G_EM_Range_ABBK2a(2) = "L129": G_EM_Range_ABBK2a(3) = "         ": G_EM_Range_ABBK2a(4) = ""    ' H63
    G_EM_Range_ABBK2b(0) = "A126:A133": G_EM_Range_ABBK2b(1) = "A126:A133": G_EM_Range_ABBK2b(2) = "L131": G_EM_Range_ABBK2b(3) = "         ": G_EM_Range_ABBK2b(4) = ""    ' H64
    G_EM_Range_ABBK2c(0) = "A126:A133": G_EM_Range_ABBK2c(1) = "A126:A133": G_EM_Range_ABBK2c(2) = "L133": G_EM_Range_ABBK2c(3) = "         ": G_EM_Range_ABBK2c(4) = ""    ' H65
    
    G_Svc34_Final_Row_No = 134
    
End Function                                                                    ' of F3400_Initialisation
Function F3410_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3420_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S34", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S34", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S34", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S34", "SF")
    End If
    
End Function                                                                    ' of F3410_Validate
Function F3420_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3420_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3420_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc34).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert all CVN values into uppercase
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_CVN_01(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_01(G_Answer)).Value):     G_EM_Value_CVN_01 = Range(G_EM_Range_CVN_01(G_Answer)).Value
    Range(G_EM_Range_CVN_02(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_02(G_Answer)).Value):     G_EM_Value_CVN_02 = Range(G_EM_Range_CVN_02(G_Answer)).Value
    Range(G_EM_Range_CVN_03(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_03(G_Answer)).Value):     G_EM_Value_CVN_03 = Range(G_EM_Range_CVN_03(G_Answer)).Value
    Range(G_EM_Range_CVN_04(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_04(G_Answer)).Value):     G_EM_Value_CVN_04 = Range(G_EM_Range_CVN_04(G_Answer)).Value
    Range(G_EM_Range_CVN_05(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_05(G_Answer)).Value):     G_EM_Value_CVN_05 = Range(G_EM_Range_CVN_05(G_Answer)).Value
    Range(G_EM_Range_CVN_06(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_06(G_Answer)).Value):     G_EM_Value_CVN_06 = Range(G_EM_Range_CVN_06(G_Answer)).Value
    Range(G_EM_Range_CVN_07(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_07(G_Answer)).Value):     G_EM_Value_CVN_07 = Range(G_EM_Range_CVN_07(G_Answer)).Value
    Range(G_EM_Range_CVN_08(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_08(G_Answer)).Value):     G_EM_Value_CVN_08 = Range(G_EM_Range_CVN_08(G_Answer)).Value
    Range(G_EM_Range_CVN_09(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_09(G_Answer)).Value):     G_EM_Value_CVN_09 = Range(G_EM_Range_CVN_09(G_Answer)).Value
    Range(G_EM_Range_CVN_10(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_10(G_Answer)).Value):     G_EM_Value_CVN_10 = Range(G_EM_Range_CVN_10(G_Answer)).Value
    Range(G_EM_Range_CVN_11(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_11(G_Answer)).Value):     G_EM_Value_CVN_11 = Range(G_EM_Range_CVN_11(G_Answer)).Value
    Range(G_EM_Range_CVN_12(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_12(G_Answer)).Value):     G_EM_Value_CVN_12 = Range(G_EM_Range_CVN_12(G_Answer)).Value
    Range(G_EM_Range_CVN_13(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_13(G_Answer)).Value):     G_EM_Value_CVN_13 = Range(G_EM_Range_CVN_13(G_Answer)).Value
    Range(G_EM_Range_CVN_14(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_14(G_Answer)).Value):     G_EM_Value_CVN_14 = Range(G_EM_Range_CVN_14(G_Answer)).Value
    Range(G_EM_Range_CVN_15(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_15(G_Answer)).Value):     G_EM_Value_CVN_15 = Range(G_EM_Range_CVN_15(G_Answer)).Value
    Range(G_EM_Range_CVN_16(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_16(G_Answer)).Value):     G_EM_Value_CVN_16 = Range(G_EM_Range_CVN_16(G_Answer)).Value
    Range(G_EM_Range_CVN_17(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_17(G_Answer)).Value):     G_EM_Value_CVN_17 = Range(G_EM_Range_CVN_17(G_Answer)).Value
    Range(G_EM_Range_CVN_18(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_18(G_Answer)).Value):     G_EM_Value_CVN_18 = Range(G_EM_Range_CVN_18(G_Answer)).Value
    Range(G_EM_Range_CVN_19(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_19(G_Answer)).Value):     G_EM_Value_CVN_19 = Range(G_EM_Range_CVN_19(G_Answer)).Value
    Range(G_EM_Range_CVN_20(G_Answer)).Value = UCase(Range(G_EM_Range_CVN_20(G_Answer)).Value):     G_EM_Value_CVN_20 = Range(G_EM_Range_CVN_20(G_Answer)).Value
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H01 - ABBE3
    ' - Validation: Empty or six-digit decimal
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_EM_Value_ABBE_3)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_EM_Range_ABBE_3(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE_3(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_ABBE_3(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE_3(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H02 - ABBE3T
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBE3T(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE3T(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H03 - ABBC1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBC_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBC_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H04 - ABBE4a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBE4a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE4a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H05 - ABBE4b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBE4b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE4b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H06 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_01, G_EM_Value_CVN_01)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_01(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_01(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_01(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_01(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_01(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_01(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_01(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H07 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_02, G_EM_Value_CVN_02)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_02(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_02(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_02(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_02(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_02(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_02(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_02(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H08 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_03, G_EM_Value_CVN_03)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_03(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_03(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_03(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_03(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_03(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_03(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_03(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H09 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_04, G_EM_Value_CVN_04)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_04(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_04(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_04(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_04(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_04(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_04(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_04(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H10 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_05, G_EM_Value_CVN_05)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_05(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_05(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_05(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_05(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_05(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_05(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_05(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H11 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_06, G_EM_Value_CVN_06)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_06(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_06(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_06(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_06(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_06(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_06(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_06(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H12 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_07, G_EM_Value_CVN_07)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_07(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_07(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_07(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_07(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_07(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_07(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_07(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H13 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_08, G_EM_Value_CVN_08)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_08(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_08(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_08(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_08(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_08(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_08(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_08(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H14 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_09, G_EM_Value_CVN_09)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_09(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_09(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_09(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_09(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_09(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_09(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_09(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H15 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_10, G_EM_Value_CVN_10)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_10(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_10(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_10(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_10(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_10(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_10(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_10(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H16 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_11, G_EM_Value_CVN_11)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_11(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_11(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_11(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_11(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_11(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_11(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_11(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H17 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_12, G_EM_Value_CVN_12)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_12(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_12(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_12(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_12(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_12(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_12(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_12(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H18 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_13, G_EM_Value_CVN_13)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_13(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_13(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_13(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_13(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_13(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_13(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_13(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H19 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_14, G_EM_Value_CVN_14)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_14(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_14(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_14(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_14(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_14(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_14(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_14(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H20 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_15, G_EM_Value_CVN_15)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_15(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_15(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_15(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_15(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_15(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_15(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_15(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H21 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_16, G_EM_Value_CVN_16)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_16(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_16(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_16(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_16(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_16(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_16(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_16(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H22 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_17, G_EM_Value_CVN_17)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_17(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_17(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_17(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_17(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_17(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_17(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_17(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H23 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_18, G_EM_Value_CVN_18)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_18(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_18(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_18(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_18(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_18(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_18(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_18(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H24 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_19, G_EM_Value_CVN_19)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_19(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_19(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_19(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_19(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_19(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_19(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_19(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H25 - CVN and CAM Validation Option
    ' - CVN Validation: Empty or two-digit hexadecimal
    ' - CAM validation: No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3430_Validate_CVN(G_EM_Value_Exp_20, G_EM_Value_CVN_20)         ' Validation of 'Expressed In' and CVN (in decimal or hexadecimal)
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_EM_Range_CVN_20(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_20(G_Answer), "")
        Selection.Value = G34_Formatted_CVN                                     ' Formatted value
    
    Case "E1"                                                                   ' Empty cell
        Range(G_EM_Range_CVN_20(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_CVN_20(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_EM_Range_CVN_20(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", "CVN", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_EM_Range_CAM_20(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_CAM_20(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H26 - ABBE5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBE_5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBE_5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H27 - ABBG7
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBG_7(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG_7(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H28 - ABBG11
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBG11(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG11(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H27 with H28 - ABBG7 with ABBG11
    ' - Cannot both be "Yes"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_EM_Range_ABBG_7(G_Answer)).Value = "Yes" And _
       Range(G_EM_Range_ABBG11(G_Answer)).Value = "Yes" Then
        
        Range(G_EM_Range_ABBG_7(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG_7(G_Answer), "E5")
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
        
        Range(G_EM_Range_ABBG11(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG11(G_Answer), "E5")
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H29 - ABBG12
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBG12(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG12(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H27 with H29 - ABBG7 with ABBG12
    ' - Cannot both be "Yes"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_EM_Range_ABBG_7(G_Answer)).Value = "Yes" And _
       Range(G_EM_Range_ABBG12(G_Answer)).Value = "Yes" Then
        
        Range(G_EM_Range_ABBG_7(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG_7(G_Answer), "E6")
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
        
        Range(G_EM_Range_ABBG12(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBG12(G_Answer), "E6")
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H30 - ABF3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABFX_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABFX_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H31 - AGR1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_AGR_PM(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_AGR_PM(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H32 - ABBH1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H33 - ABBH2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H34 - ABBH3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H35 - ABBH4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H36 - ABBH5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H37 - ABBH6
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_6(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_6(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H38 - ABBH7a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH7a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH7a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H39 - ABBH7b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH7b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH7b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H40 - ABBH8
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_8(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_8(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H41 - ABBH9
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH_9(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH_9(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H42 - ABBH10
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH10(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH10(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H43 - ABBH11
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH11(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH11(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H44 - ABBH12
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH12(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH12(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H45 - ABBH13
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH13(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH13(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H46 - ABBH14
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH14(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH14(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H47 - ABBH15
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH15(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH15(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H48 - ABBH16
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH16(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH16(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H49 - ABBH17
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH17(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH17(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H50 - ABBH18a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABB18a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABB18a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H51 - ABBH18b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABB18b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABB18b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H52 - ABBH19
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH19(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH19(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H53 - ABBH20
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH20(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH20(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H54 - ABBH21
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH21(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH21(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H55 - ABBH22
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH22(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH22(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H56 - ABBH23
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH23(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH23(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H57 - ABBH24
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBH24(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBH24(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H58 - ABBI1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBI_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H59 - ABBI2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBI_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H60 - ABBI4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBI_4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H61 - ABBI5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBI_5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBI_5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H62 - ABBK1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBK_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H63 - ABBK2a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBK2a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK2a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H64 - ABBK2a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBK2b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK2b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - H65 - ABBK2a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_EM_Range_ABBK2c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S34", G_EM_Range_ABBK2c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_EM_Value_ABBE_3, G_EM_Value_ABBE3T, G_EM_Value_ABBC_1, G_EM_Value_ABBE4a, G_EM_Value_ABBE4b, G_EM_Value_Exp_01, G_EM_Value_CVN_01, G_EM_Value_CAM_01, G_EM_Value_Exp_02, G_EM_Value_CVN_02)
    G_Caller = F9986_Count_Values(G_EM_Value_CAM_02, G_EM_Value_Exp_03, G_EM_Value_CVN_03, G_EM_Value_CAM_03, G_EM_Value_Exp_04, G_EM_Value_CVN_04, G_EM_Value_CAM_04, G_EM_Value_Exp_05, G_EM_Value_CVN_05, G_EM_Value_CAM_05)
    G_Caller = F9986_Count_Values(G_EM_Value_Exp_06, G_EM_Value_CVN_06, G_EM_Value_CAM_06, G_EM_Value_Exp_07, G_EM_Value_CVN_07, G_EM_Value_CAM_07, G_EM_Value_Exp_08, G_EM_Value_CVN_08, G_EM_Value_CAM_08, G_EM_Value_Exp_09)
    G_Caller = F9986_Count_Values(G_EM_Value_CVN_09, G_EM_Value_CAM_09, G_EM_Value_Exp_10, G_EM_Value_CVN_10, G_EM_Value_CAM_10, G_EM_Value_Exp_11, G_EM_Value_CVN_11, G_EM_Value_CAM_11, G_EM_Value_Exp_12, G_EM_Value_CVN_12)
    G_Caller = F9986_Count_Values(G_EM_Value_CAM_12, G_EM_Value_Exp_13, G_EM_Value_CVN_13, G_EM_Value_CAM_13, G_EM_Value_Exp_14, G_EM_Value_CVN_14, G_EM_Value_CAM_14, G_EM_Value_Exp_15, G_EM_Value_CVN_15, G_EM_Value_CAM_15)
    G_Caller = F9986_Count_Values(G_EM_Value_Exp_16, G_EM_Value_CVN_16, G_EM_Value_CAM_16, G_EM_Value_Exp_17, G_EM_Value_CVN_17, G_EM_Value_CAM_17, G_EM_Value_Exp_18, G_EM_Value_CVN_18, G_EM_Value_CAM_18, G_EM_Value_Exp_19)
    G_Caller = F9986_Count_Values(G_EM_Value_CVN_19, G_EM_Value_CAM_19, G_EM_Value_Exp_20, G_EM_Value_CVN_20, G_EM_Value_CAM_20, G_EM_Value_ABBE_5, G_EM_Value_ABBG_7, G_EM_Value_ABBG11, G_EM_Value_ABBG12, G_EM_Value_ABFX_3)
    G_Caller = F9986_Count_Values(G_EM_Value_AGR_PM, G_EM_Value_ABBH_1, G_EM_Value_ABBH_2, G_EM_Value_ABBH_3, G_EM_Value_ABBH_4, G_EM_Value_ABBH_5, G_EM_Value_ABBH_6, G_EM_Value_ABBH7a, G_EM_Value_ABBH7b, G_EM_Value_ABBH_8)
    G_Caller = F9986_Count_Values(G_EM_Value_ABBH_9, G_EM_Value_ABBH10, G_EM_Value_ABBH11, G_EM_Value_ABBH12, G_EM_Value_ABBH13, G_EM_Value_ABBH14, G_EM_Value_ABBH15, G_EM_Value_ABBH16, G_EM_Value_ABBH17, G_EM_Value_ABB18a)
    G_Caller = F9986_Count_Values(G_EM_Value_ABB18b, G_EM_Value_ABBH19, G_EM_Value_ABBH20, G_EM_Value_ABBH21, G_EM_Value_ABBH22, G_EM_Value_ABBH23, G_EM_Value_ABBH24, G_EM_Value_ABBI_1, G_EM_Value_ABBI_2, G_EM_Value_ABBI_4)
    G_Caller = F9986_Count_Values(G_EM_Value_ABBI_5, G_EM_Value_ABBK_1, G_EM_Value_ABBK2a, G_EM_Value_ABBK2b, G_EM_Value_ABBK2c, "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc34 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S34", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F3420_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F3420_Validate_Cells
Function F3430_Validate_CVN(F3430_Exp, F3430_CVN)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate the CVN and reformat it if necessary
    ' - F3430_Exp   'Expressed in'      "Decimal" or "Hexadecimal"              ' From a drop-down list
    ' - F3430_CVN   'nnn' or 'hh'       A decimal number in range 0-255 or a two-digit hexadecmial value
    ' Examples: Decimal / 1         Hexadecimal / 01        Decimal / 255 (X'FF')
    ' Errors:
    '   E1      Both values are empty
    '   E2      Expressed In provided but no CVN
    '   E3      CVN provided but no Expressed In
    '   E4      Non-hexadecimal digit found
    '   E5      Incorrect length or value out of range
    '   E6      Non-decimal digit found
    '   E7      Incorrect length or value out of range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3430_Pos                                           As Integer
    
    G34_Formatted_CVN = ""
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If 'Expressed in' is specified but CVN is omitted then this is an error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F3430_Exp <> "" And F3430_CVN = "" Then
        F3430_Validate_CVN = "E2"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' If 'Expressed in' is omitted but CVN is specified then this is an error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F3430_Exp = "" And F3430_CVN <> "" Then
        F3430_Validate_CVN = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Drop any hexadecimal conversion that may already exist
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F3430_CVN) > 3 Then                                                  ' If the length of the CVN is greater than three characters then
        F3430_Pos = InStr(F3430_CVN, " (")                                      ' Look for a left parenthesis then
        If F3430_Pos > 0 Then                                                   ' If it was found then
            F3430_CVN = Mid(F3430_CVN, 1, F3430_Pos - 1)                        ' Drop the conversion data
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform hexadecimal validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If LCase(F3430_Exp) = "hexadecimal" Then
        G_Response = F9941_Validate_CVN(F3430_CVN)                              ' Validation of CVN as a two-digit hexadecimal value
        Select Case G_Response                                                  ' Convert standard response into specific response for this complicated validation
            Case "":            F3430_Validate_CVN = ""
            Case "E1":          F3430_Validate_CVN = "E1":      Exit Function   ' Empty
            Case "E2":          F3430_Validate_CVN = "E5":      Exit Function   ' Zero
            Case "E3":          F3430_Validate_CVN = "E4":      Exit Function   ' Non-hexadecimal digit found
            Case "E4":          F3430_Validate_CVN = "E5":      Exit Function   ' Incorrect length or value
        End Select
        
        G34_Formatted_CVN = F3430_CVN                                           ' Just store/display the hexadecimal value
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform decimal validation
    ' Perform decimal conversion to hexadecimal
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If LCase(F3430_Exp) = "decimal" Then
        G_Response = F9913_Validate_DKI(F3430_CVN, "", "")                      ' Validation of CVN as a decimal value
        Select Case G_Response                                                  ' Convert standard response into specific response for this complicated validation
            Case "":            F3430_Validate_CVN = ""
            Case "E1":          F3430_Validate_CVN = "E1":      Exit Function   ' Empty
            Case "E2":          F3430_Validate_CVN = "E6":      Exit Function   ' Non-decimal digit found
            Case "E3":          F3430_Validate_CVN = "E7":      Exit Function   ' Incorrect length or value out of range
        End Select
        
        If F3430_CVN + 0 = 0 Then                                               ' Zero
                                F3430_Validate_CVN = "E7":      Exit Function   ' Incorrect length or value out of range
        End If
        
        G_Response = F3440_Format_One_CVH(F3430_CVN)                            ' Conversion of a decimal value to combined decimal and hexadecimal for display
        G34_Formatted_CVN = G_Response                                          ' Store the formatted CVN - Example: 100 (X'64')
        Exit Function
    End If
    
End Function                                                                    ' of F3430_Validate_CVN
Function F3440_Format_One_CVH(F3440_Inc_Dec)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Format one DKI
    ' - Input:  001             Input:  255
    ' - Output: 001 (X'01')     Output: 255 (X'FF')
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3440_Value                                         As String
    Dim F3440_Dec_Value                                     As Integer
    Dim F3440_Hex_Value                                     As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Reformat as a three-digit number followed by the hexadecimal value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3440_Value = Format(F3440_Inc_Dec, "000")
    
    F3440_Dec_Value = F3440_Value + 0
    F3440_Hex_Value = Hex(F3440_Dec_Value)
    
    If Len(F3440_Hex_Value) = 1 Then F3440_Hex_Value = "0" & F3440_Hex_Value
    
    F3440_Value = F3440_Value & " (X'"
    F3440_Value = F3440_Value & F3440_Hex_Value
    F3440_Value = F3440_Value & "')"
    F3440_Format_One_CVH = F3440_Value
    
End Function                                                                    ' of F3440_Format_One_CVH
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Module35_VbV"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_VV_Range_ABE_1a(4)                                 As String           ' J01 - Indicate the Service Option for Authentication and Attempts services
Global G_VV_Range_ABE_1b(4)                                 As String           ' J01 - Indicate the Service Option for Authentication and Attempts services
Global G_VV_Range_ABE_2a(4)                                 As String           ' J02 - If Visa performs CAVV validation in STIP and it fails, should VIP respond with 05 - Do Not Honor?
Global G_VV_Range_ABE_2b(4)                                 As String           ' J02 - If Visa performs CAVV validation in STIP and it fails, should VIP respond with 05 - Do Not Honor?
Global G_VV_Range_ABE_3a(4)                                 As String           ' J03 - If Visa is unable to complete the CAVV validation in STIP, should VIP decline with 05 - Do Not Honor?
Global G_VV_Range_ABE_3b(4)                                 As String           ' J03 - If Visa is unable to complete the CAVV validation in STIP, should VIP decline with 05 - Do Not Honor?
Global G_VV_Range_URL_01(4)                                 As String           ' J04 - Provide the Access Control Server (ACS) URL that is used for: Authentication (primary)
Global G_VV_Range_URL_02(4)                                 As String           ' J05 - Provide the Access Control Server (ACS) URL that is used for: Authentication (secondary)
Global G_VV_Range_URL_03(4)                                 As String           ' J06 - Provide the Access Control Server (ACS) URL that is used for: Attempts (primary)
Global G_VV_Range_URL_04(4)                                 As String           ' J07 - Provide the Access Control Server (ACS) URL that is used for: Attempts (secondary)
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_VV_Value_ABE_1a                                    As String           ' J01 - Indicate the Service Option for Authentication and Attempts services
Global G_VV_Value_ABE_1b                                    As String           ' J01 - Indicate the Service Option for Authentication and Attempts services
Global G_VV_Value_ABE_2a                                    As String           ' J02 - If Visa performs CAVV validation in STIP and it fails, should VIP respond with 05 - Do Not Honor?
Global G_VV_Value_ABE_2b                                    As String           ' J02 - If Visa performs CAVV validation in STIP and it fails, should VIP respond with 05 - Do Not Honor?
Global G_VV_Value_ABE_3a                                    As String           ' J03 - If Visa is unable to complete the CAVV validation in STIP, should VIP decline with 05 - Do Not Honor?
Global G_VV_Value_ABE_3b                                    As String           ' J03 - If Visa is unable to complete the CAVV validation in STIP, should VIP decline with 05 - Do Not Honor?
Global G_VV_Value_URL_01                                    As String           ' J04 - Provide the Access Control Server (ACS) URL that is used for: Authentication (primary)
Global G_VV_Value_URL_02                                    As String           ' J05 - Provide the Access Control Server (ACS) URL that is used for: Authentication (secondary)
Global G_VV_Value_URL_03                                    As String           ' J06 - Provide the Access Control Server (ACS) URL that is used for: Attempts (primary)
Global G_VV_Value_URL_04                                    As String           ' J07 - Provide the Access Control Server (ACS) URL that is used for: Attempts (secondary)
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc35_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F3500_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 35 - Verified by Visa (VbV)
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VV_Range_ABE_1a(0) = "A18:A20": G_VV_Range_ABE_1a(1) = "A18:A20": G_VV_Range_ABE_1a(2) = "K19": G_VV_Range_ABE_1a(3) = "       ": G_VV_Range_ABE_1a(4) = "" ' J01
    G_VV_Range_ABE_1b(0) = "A18:A20": G_VV_Range_ABE_1b(1) = "A18:A20": G_VV_Range_ABE_1b(2) = "L19": G_VV_Range_ABE_1b(3) = "       ": G_VV_Range_ABE_1b(4) = "" ' J01
    G_VV_Range_ABE_2a(0) = "A21:A23": G_VV_Range_ABE_2a(1) = "A21:A23": G_VV_Range_ABE_2a(2) = "K23": G_VV_Range_ABE_2a(3) = "       ": G_VV_Range_ABE_2a(4) = "" ' J02
    G_VV_Range_ABE_2b(0) = "A21:A23": G_VV_Range_ABE_2b(1) = "A21:A23": G_VV_Range_ABE_2b(2) = "L23": G_VV_Range_ABE_2b(3) = "       ": G_VV_Range_ABE_2b(4) = "" ' J02
    G_VV_Range_ABE_3a(0) = "A24:A25": G_VV_Range_ABE_3a(1) = "A24:A25": G_VV_Range_ABE_3a(2) = "K25": G_VV_Range_ABE_3a(3) = "       ": G_VV_Range_ABE_3a(4) = "" ' J03
    G_VV_Range_ABE_3b(0) = "A24:A25": G_VV_Range_ABE_3b(1) = "A24:A25": G_VV_Range_ABE_3b(2) = "L25": G_VV_Range_ABE_3b(3) = "       ": G_VV_Range_ABE_3b(4) = "" ' J03
    G_VV_Range_URL_01(0) = "A26:A32": G_VV_Range_URL_01(1) = "A26:A32": G_VV_Range_URL_01(2) = "G28": G_VV_Range_URL_01(3) = "       ": G_VV_Range_URL_01(4) = "" ' J04
    G_VV_Range_URL_02(0) = "A26:A32": G_VV_Range_URL_02(1) = "A26:A32": G_VV_Range_URL_02(2) = "G29": G_VV_Range_URL_02(3) = "       ": G_VV_Range_URL_02(4) = "" ' J05
    G_VV_Range_URL_03(0) = "A26:A32": G_VV_Range_URL_03(1) = "A26:A32": G_VV_Range_URL_03(2) = "G31": G_VV_Range_URL_03(3) = "       ": G_VV_Range_URL_03(4) = "" ' J06
    G_VV_Range_URL_04(0) = "A26:A32": G_VV_Range_URL_04(1) = "A26:A32": G_VV_Range_URL_04(2) = "G32": G_VV_Range_URL_04(3) = "       ": G_VV_Range_URL_04(4) = "" ' J07
    
    G_Svc35_Final_Row_No = 33
    
End Function                                                                    ' of F3500_Initialisation
Function F3510_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 35 - Verified by Visa (VbV)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3520_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S35", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S35", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S35", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S35", "SF")
    End If
    
End Function                                                                    ' of F3510_Validate
Function F3520_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3520_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3520_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc35).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J01 - ABE1a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VV_Range_ABE_1a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_1a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J01 - ABE1b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VV_Range_ABE_1b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    
    If G_FC_Value_Region = "AP" Then
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_1b(G_Answer), "")   ' Obtain comment - AP only
    Else
        G_Comment = ""                                                          ' Clear comment  - CEMEA only
    End If
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J02 - ABE2a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VV_Range_ABE_2a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_2a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J02 - ABE2b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VV_Range_ABE_2b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_2b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J03 - ABE3a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VV_Range_ABE_3a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_3a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J03 - ABE3b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VV_Range_ABE_3b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S35", G_VV_Range_ABE_3b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set standard formatting of answer cells (Client Report 1b and Change Request A18)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc35, "G28:L28", "")             ' J04 (merged cells)
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc35, "G29:L29", "")             ' J05 (merged cells)
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc35, "G31:L31", "")             ' J06 (merged cells)
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc35, "G32:L32", "")             ' J07 (merged cells)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J04 - ACS1
    ' - URL - Validation: Empty or any characters but must start "https:"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9934_Validate_URL(G_VV_Value_URL_01)                            ' Validation of URL
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VV_Range_URL_01(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_01(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VV_Range_URL_01(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_01(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J05 - ACS2
    ' - URL - Validation: Empty or any characters but must start "https:"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9934_Validate_URL(G_VV_Value_URL_02)                            ' Validation of URL
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VV_Range_URL_02(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_02(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VV_Range_URL_02(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_02(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J06 - ACS3
    ' - Validation: Empty or decimal in range 8,000 - 20,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9934_Validate_URL(G_VV_Value_URL_03)                            ' Validation of URL
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VV_Range_URL_03(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_03(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VV_Range_URL_03(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_03(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - J07 - ACS4
    ' - Validation: Empty or decimal in range 8,000 - 20,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9934_Validate_URL(G_VV_Value_URL_04)                            ' Validation of URL
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VV_Range_URL_04(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_04(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VV_Range_URL_04(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S35", G_VV_Range_URL_04(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_VV_Value_ABE_1a, G_VV_Value_ABE_1b, G_VV_Value_ABE_2a, G_VV_Value_ABE_2b, G_VV_Value_ABE_3a, G_VV_Value_ABE_3b, G_VV_Value_URL_01, G_VV_Value_URL_02, G_VV_Value_URL_03, G_VV_Value_URL_04)
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc35 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S35", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F3520_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F3520_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module36_CVV"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_CV_Range_ABAA_1(4)                                 As String           ' C01 - Select the option that relates to when you wish Visa to check CVV
Global G_CV_Range_Note01(4)                                 As String           '       - Note for AP only
Global G_CV_Range_Note02(4)                                 As String           '       - Note for CEMEA only
Global G_CV_Range_ABAB_2(4)                                 As String           ' C02 - SET A: Placement on track 2 where the CVV will begin
Global G_CV_Range_ABAB6A(4)                                 As String           ' C03 - SET A: Will this key be used in iCVV for chip-read transactions?
Global G_CV_Range_ABAB1B(4)                                 As String           ' C04 - SET B: Earliest date that newly issued or re-issued cards will expire
Global G_CV_Range_ABAB2B(4)                                 As String           ' C05 - SET B: Placement on track 2 where the CVV will begin
Global G_CV_Range_ABAB6B(4)                                 As String           ' C06 - SET B:  Will this key be used in iCVV for chip-read transactions?
Global G_CV_Range_ABAB1C(4)                                 As String           ' C07 - SET C: Earliest date that newly issued or re-issued cards will expire
Global G_CV_Range_ABAB2C(4)                                 As String           ' C08 - SET C: Placement on track 2 where the CVV will begin
Global G_CV_Range_ABAB6C(4)                                 As String           ' C09 - SET C:  Will this key be used in iCVV for chip-read transactions?
Global G_CV_Range_ABAE_5(4)                                 As String           ' C10 - Do you want the BIN to receive CVV results in Field 44.5?
Global G_CV_Range_ABDA_1(4)                                 As String           ' C11 - Select the option when you wish Visa to check CVV2
Global G_CV_Range_ABDA_2(4)                                 As String           ' C12 - When the issuer is unavailable and CVV2 fails, select the STIP response that Visa will send to the Acquirer
Global G_CV_Range_ABDA_3(4)                                 As String           ' C13 - When the issuer is unavailable and CVV2 fails, select the STIP response that Visa will send to the Acquirer
Global G_CV_Range_ABDA_4(4)                                 As String           ' C14 - Should Visa forward CVV2 data in card-present environment?
Global G_CV_Range_ABDB1A(4)                                 As String           ' C15 - Select the CVV2 expiration date format for CVK Set A
Global G_CV_Range_ABDB1B(4)                                 As String           ' C16 - Select the CVV2 expiration date format for CVK Set B
Global G_CV_Range_ABDB1C(4)                                 As String           ' C17 - Select the CVV2 expiration date format for CVK Set C
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_CV_Value_ABAA_1                                    As String           ' C01 - Select the option that relates to when you wish Visa to check CVV
Global G_CV_Value_ABAB_2                                    As String           ' C02 - SET A: Placement on track 2 where the CVV will begin
Global G_CV_Value_ABAB6A                                    As String           ' C03 - SET A: Will this key be used in iCVV for chip-read transactions?
Global G_CV_Value_ABAB1B                                    As String           ' C04 - SET B: Earliest date that newly issued or re-issued cards will expire
Global G_CV_Value_ABAB2B                                    As String           ' C05 - SET B: Placement on track 2 where the CVV will begin
Global G_CV_Value_ABAB6B                                    As String           ' C06 - SET B:  Will this key be used in iCVV for chip-read transactions?
Global G_CV_Value_ABAB1C                                    As String           ' C07 - SET C: Earliest date that newly issued or re-issued cards will expire
Global G_CV_Value_ABAB2C                                    As String           ' C08 - SET C: Placement on track 2 where the CVV will begin
Global G_CV_Value_ABAB6C                                    As String           ' C09 - SET C:  Will this key be used in iCVV for chip-read transactions?
Global G_CV_Value_ABAE_5                                    As String           ' C10 - Do you want the BIN to receive CVV results in Field 44.5?
Global G_CV_Value_ABDA_1                                    As String           ' C11 - Select the option when you wish Visa to check CVV2
Global G_CV_Value_ABDA_2                                    As String           ' C12 - When the issuer is unavailable and CVV2 fails, select the STIP response that Visa will send to the Acquirer
Global G_CV_Value_ABDA_3                                    As String           ' C13 - When the issuer is unavailable and CVV2 fails, select the STIP response that Visa will send to the Acquirer
Global G_CV_Value_ABDA_4                                    As String           ' C14 - Should Visa forward CVV2 data in card-present environment?
Global G_CV_Value_ABDB1A                                    As String           ' C15 - Select the CVV2 expiration date format for CVK Set A
Global G_CV_Value_ABDB1B                                    As String           ' C16 - Select the CVV2 expiration date format for CVK Set B
Global G_CV_Value_ABDB1C                                    As String           ' C17 - Select the CVV2 expiration date format for CVK Set C
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc36_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F3600_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 36 - CVV / iCVV / CVV2
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CV_Range_ABAA_1(0) = "A017:A020": G_CV_Range_ABAA_1(1) = "A017:A020": G_CV_Range_ABAA_1(2) = "K018": G_CV_Range_ABAA_1(3) = "         ": G_CV_Range_ABAA_1(4) = ""    ' C01
    G_CV_Range_Note01(0) = "A019:A019": G_CV_Range_Note01(1) = "A019:A019": G_CV_Range_Note01(2) = "    ": G_CV_Range_Note01(3) = "         ": G_CV_Range_Note01(4) = ""
    G_CV_Range_Note02(0) = "A020:A020": G_CV_Range_Note02(1) = "A020:A020": G_CV_Range_Note02(2) = "    ": G_CV_Range_Note02(3) = "         ": G_CV_Range_Note02(4) = ""
    G_CV_Range_ABAB_2(0) = "A021:A022": G_CV_Range_ABAB_2(1) = "A021:A022": G_CV_Range_ABAB_2(2) = "K022": G_CV_Range_ABAB_2(3) = "         ": G_CV_Range_ABAB_2(4) = ""    ' C02
    G_CV_Range_ABAB6A(0) = "A023:A024": G_CV_Range_ABAB6A(1) = "A023:A024": G_CV_Range_ABAB6A(2) = "K024": G_CV_Range_ABAB6A(3) = "         ": G_CV_Range_ABAB6A(4) = ""    ' C03
    G_CV_Range_ABAB1B(0) = "A027:A028": G_CV_Range_ABAB1B(1) = "A027:A028": G_CV_Range_ABAB1B(2) = "K028": G_CV_Range_ABAB1B(3) = "         ": G_CV_Range_ABAB1B(4) = ""    ' C04
    G_CV_Range_ABAB2B(0) = "A029:A030": G_CV_Range_ABAB2B(1) = "A029:A030": G_CV_Range_ABAB2B(2) = "K030": G_CV_Range_ABAB2B(3) = "         ": G_CV_Range_ABAB2B(4) = ""    ' C05
    G_CV_Range_ABAB6B(0) = "A031:A032": G_CV_Range_ABAB6B(1) = "A031:A032": G_CV_Range_ABAB6B(2) = "K032": G_CV_Range_ABAB6B(3) = "         ": G_CV_Range_ABAB6B(4) = ""    ' C06
    G_CV_Range_ABAB1C(0) = "A033:A034": G_CV_Range_ABAB1C(1) = "A033:A034": G_CV_Range_ABAB1C(2) = "K034": G_CV_Range_ABAB1C(3) = "         ": G_CV_Range_ABAB1C(4) = ""    ' C07
    G_CV_Range_ABAB2C(0) = "A035:A036": G_CV_Range_ABAB2C(1) = "A035:A036": G_CV_Range_ABAB2C(2) = "K036": G_CV_Range_ABAB2C(3) = "         ": G_CV_Range_ABAB2C(4) = ""    ' C08
    G_CV_Range_ABAB6C(0) = "A037:A038": G_CV_Range_ABAB6C(1) = "A037:A038": G_CV_Range_ABAB6C(2) = "K038": G_CV_Range_ABAB6C(3) = "         ": G_CV_Range_ABAB6C(4) = ""    ' C09
    G_CV_Range_ABAE_5(0) = "A039:A040": G_CV_Range_ABAE_5(1) = "A039:A040": G_CV_Range_ABAE_5(2) = "K040": G_CV_Range_ABAE_5(3) = "         ": G_CV_Range_ABAE_5(4) = ""    ' C10
    G_CV_Range_ABDA_1(0) = "A043:A044": G_CV_Range_ABDA_1(1) = "A043:A044": G_CV_Range_ABDA_1(2) = "K044": G_CV_Range_ABDA_1(3) = "         ": G_CV_Range_ABDA_1(4) = ""    ' C11
    G_CV_Range_ABDA_2(0) = "A045:A050": G_CV_Range_ABDA_2(1) = "A045:A050": G_CV_Range_ABDA_2(2) = "K048": G_CV_Range_ABDA_2(3) = "         ": G_CV_Range_ABDA_2(4) = ""    ' C12
    G_CV_Range_ABDA_3(0) = "A045:A050": G_CV_Range_ABDA_3(1) = "A045:A050": G_CV_Range_ABDA_3(2) = "K050": G_CV_Range_ABDA_3(3) = "         ": G_CV_Range_ABDA_3(4) = ""    ' C13
    G_CV_Range_ABDA_4(0) = "A051:A052": G_CV_Range_ABDA_4(1) = "A051:A052": G_CV_Range_ABDA_4(2) = "K052": G_CV_Range_ABDA_4(3) = "         ": G_CV_Range_ABDA_4(4) = ""    ' C14
    G_CV_Range_ABDB1A(0) = "A053:A054": G_CV_Range_ABDB1A(1) = "A053:A054": G_CV_Range_ABDB1A(2) = "K054": G_CV_Range_ABDB1A(3) = "         ": G_CV_Range_ABDB1A(4) = ""    ' C15
    G_CV_Range_ABDB1B(0) = "A055:A056": G_CV_Range_ABDB1B(1) = "A055:A056": G_CV_Range_ABDB1B(2) = "K056": G_CV_Range_ABDB1B(3) = "         ": G_CV_Range_ABDB1B(4) = ""    ' C16
    G_CV_Range_ABDB1C(0) = "A057:A058": G_CV_Range_ABDB1C(1) = "A057:A058": G_CV_Range_ABDB1C(2) = "K058": G_CV_Range_ABDB1C(3) = "         ": G_CV_Range_ABDB1C(4) = ""    ' C17
    
    G_Svc36_Final_Row_No = 59
    
End Function                                                                    ' of F3600_Initialisation
Function F3610_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 36 - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3620_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S36", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S36", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S36", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S36", "SF")
    End If
    
End Function                                                                    ' of F3610_Validate
Function F3620_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3620_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3620_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc36).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C01 - ABAA1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAA_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    
    Select Case G_FC_Value_Region
        Case "AP":      G_Caller = F0100_Find_Comment("S36", "C01/AP", "")      ' Obtain comment - AP
        Case "CEMEA":   G_Caller = F0100_Find_Comment("S36", "C01/CE", "")      ' Obtain comment - CEMEA
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C02 - ABAB2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAB_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C03 - ABAB6A
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAB6A(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB6A(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C04 - ABAB1B
    ' - Validation: format MM/YYYY between 1980 and 2040
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9932_Validate_Exp(G_CV_Value_ABAB1B)                            ' Validation of Expiry Date
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CV_Range_ABAB1B(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB1B(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CV_Range_ABAB1B(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB1B(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C05 - ABAB2B
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAB2B(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB2B(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C06 - ABAB6B
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAB6B(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB6B(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C07 - ABAB1C
    ' - Validation: format MM/YYYY between 1980 and 2040
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9932_Validate_Exp(G_CV_Value_ABAB1C)                            ' Validation of Expiry Date
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CV_Range_ABAB1C(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB1C(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CV_Range_ABAB1C(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB1C(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C08 - ABAB2C
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAB2C(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB2C(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C09 - ABAB6B
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAB6C(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAB6C(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C10 - ABAE5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABAE_5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABAE_5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C11 - ABDA1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDA_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C12 - ABDA2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDA_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C13 - ABDA3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDA_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C14 - ABDA4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDA_4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDA_4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C15 - ABDB1A
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDB1A(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDB1A(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C16 - ABDB1B
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDB1B(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDB1B(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - C17 - ABDB1C
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CV_Range_ABDB1C(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S36", G_CV_Range_ABDB1C(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_CV_Value_ABAA_1, G_CV_Value_ABAB_2, G_CV_Value_ABAB6A, G_CV_Value_ABAB1B, G_CV_Value_ABAB2B, G_CV_Value_ABAB6B, G_CV_Value_ABAB1C, G_CV_Value_ABAB2C, G_CV_Value_ABAB6C, G_CV_Value_ABAE_5)
    G_Caller = F9986_Count_Values(G_CV_Value_ABDA_1, G_CV_Value_ABDA_2, G_CV_Value_ABDA_3, G_CV_Value_ABDA_4, G_CV_Value_ABDB1A, G_CV_Value_ABDB1B, G_CV_Value_ABDB1C, "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc36 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S36", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F3620_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F3620_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module37_PIN"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_PP_Range_ACAX_2(4)                                 As String           ' E01   Enter the BIN whose keys you want to use (Encryption BIN)
Global G_PP_Range_ACA_2T(4)                                 As String           ' E02   Do you want to use Visa Test Keys for Test environment?
Global G_PP_Range_ACEX_3(4)                                 As String           ' E03   Do you want your PIN truncated to 4 digits before encryption?
Global G_PP_Range_ACAX_4(4)                                 As String           ' E04   Does this Issuer wish to bypass PIN validation in STIP?
Global G_PP_Range_ACAX_5(4)                                 As String           ' E05   Specify the maximum daily count for domestic transactions approved in STIP without
Global G_PP_Range_ACAX_6(4)                                 As String           ' E06   Specify the maximum daily amount (USD) for domestic transactions approved in STIP
Global G_PP_Range_ACAX_3(4)                                 As String           ' E07   Will this BIN participate in the PIN Verification Service (PVS)?
Global G_PP_Range_ACBX_1(4)                                 As String           ' E08   Select your PIN Verification option
Global G_PP_Range_ACDX_6(4)                                 As String           ' E09   Specify number of incorrect PIN entries per account before decline
Global G_PP_Range_ACEX_1(4)                                 As String           ' E10   If you participate in the PIN Verification Service, provide the PIN Verification Method
Global G_PP_Range_ACHQ_1(4)                                 As String           ' E11   Provide the Decimalization table to be used
Global G_PP_Range_ACHQ_2(4)                                 As String           ' E12   Length of the offset
Global G_PP_Range_ACHQ_3(4)                                 As String           ' E13   Number of magnetic stripe characters to skip to find the first data character
Global G_PP_Range_ACHQ_4(4)                                 As String           ' E14   Number of characters (between 1 and 16) in offset
Global G_PP_Range_ACHQ_5(4)                                 As String           ' E15   Pad character
Global G_PP_Range_ACHQ_6(4)                                 As String           ' E16   Characters to skip after the cardholder name to find the first offset on track 1
Global G_PP_Range_ACHQ_7(4)                                 As String           ' E17   Characters to skip after account number to find the first offset digit on track 2
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_PP_Value_ACAX_2                                    As String           ' E01   Enter the BIN whose keys you want to use (Encryption BIN)
Global G_PP_Value_ACA_2T                                    As String           ' E02   Do you want to use Visa Test Keys for Test environment?
Global G_PP_Value_ACEX_3                                    As String           ' E03   Do you want your PIN truncated to 4 digits before encryption?
Global G_PP_Value_ACAX_4                                    As String           ' E04   Does this Issuer wish to bypass PIN validation in STIP?
Global G_PP_Value_ACAX_5                                    As String           ' E05   Specify the maximum daily count for domestic transactions approved in STIP without
Global G_PP_Value_ACAX_6                                    As String           ' E06   Specify the maximum daily amount (USD) for domestic transactions approved in STIP
Global G_PP_Value_ACAX_3                                    As String           ' E07   Will this BIN participate in the PIN Verification Service (PVS)?
Global G_PP_Value_ACBX_1                                    As String           ' E08 - Select your PIN Verification option
Global G_PP_Value_ACDX_6                                    As String           ' E09 - Specify number of incorrect PIN entries per account before decline
Global G_PP_Value_ACEX_1                                    As String           ' E10 - If you participate in the PIN Verification Service, provide the PIN Verification Method
Global G_PP_Value_ACHQ_1                                    As String           ' E11 - Provide the Decimalization table to be used
Global G_PP_Value_ACHQ_2                                    As String           ' E12 - Length of the offset
Global G_PP_Value_ACHQ_3                                    As String           ' E13 - Number of magnetic stripe characters to skip to find the first data character
Global G_PP_Value_ACHQ_4                                    As String           ' E14 - Number of characters (between 1 and 16) in offset
Global G_PP_Value_ACHQ_5                                    As String           ' E15 - Pad character
Global G_PP_Value_ACHQ_6                                    As String           ' E16 - Characters to skip after the cardholder name to find the first offset on track 1
Global G_PP_Value_ACHQ_7                                    As String           ' E17 - Characters to skip after account number to find the first offset digit on track 2
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc37_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F3700_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 37 - PIN Processing
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_PP_Range_ACAX_2(0) = "A17:A17": G_PP_Range_ACAX_2(1) = "A17:A17": G_PP_Range_ACAX_2(2) = "K17": G_PP_Range_ACAX_2(3) = "       ": G_PP_Range_ACAX_2(4) = ""
    G_PP_Range_ACA_2T(0) = "A18:A19": G_PP_Range_ACA_2T(1) = "A18:A19": G_PP_Range_ACA_2T(2) = "K19": G_PP_Range_ACA_2T(3) = "       ": G_PP_Range_ACA_2T(4) = ""
    G_PP_Range_ACEX_3(0) = "A23:A23": G_PP_Range_ACEX_3(1) = "A23:A23": G_PP_Range_ACEX_3(2) = "K23": G_PP_Range_ACEX_3(3) = "       ": G_PP_Range_ACEX_3(4) = ""
    G_PP_Range_ACAX_4(0) = "A24:A25": G_PP_Range_ACAX_4(1) = "A24:A25": G_PP_Range_ACAX_4(2) = "K25": G_PP_Range_ACAX_4(3) = "       ": G_PP_Range_ACAX_4(4) = ""
    G_PP_Range_ACAX_5(0) = "A26:A28": G_PP_Range_ACAX_5(1) = "A26:A28": G_PP_Range_ACAX_5(2) = "K28": G_PP_Range_ACAX_5(3) = "       ": G_PP_Range_ACAX_5(4) = ""
    G_PP_Range_ACAX_6(0) = "A29:A31": G_PP_Range_ACAX_6(1) = "A29:A31": G_PP_Range_ACAX_6(2) = "K31": G_PP_Range_ACAX_6(3) = "       ": G_PP_Range_ACAX_6(4) = ""
    G_PP_Range_ACAX_3(0) = "A35:A37": G_PP_Range_ACAX_3(1) = "A35:A37": G_PP_Range_ACAX_3(2) = "K36": G_PP_Range_ACAX_3(3) = "       ": G_PP_Range_ACAX_3(4) = ""
    G_PP_Range_ACBX_1(0) = "A38:A39": G_PP_Range_ACBX_1(1) = "A38:A39": G_PP_Range_ACBX_1(2) = "K39": G_PP_Range_ACBX_1(3) = "       ": G_PP_Range_ACBX_1(4) = ""
    G_PP_Range_ACDX_6(0) = "A40:A41": G_PP_Range_ACDX_6(1) = "A40:A41": G_PP_Range_ACDX_6(2) = "K41": G_PP_Range_ACDX_6(3) = "       ": G_PP_Range_ACDX_6(4) = ""
    G_PP_Range_ACEX_1(0) = "A42:A43": G_PP_Range_ACEX_1(1) = "A42:A43": G_PP_Range_ACEX_1(2) = "K43": G_PP_Range_ACEX_1(3) = "       ": G_PP_Range_ACEX_1(4) = ""
    G_PP_Range_ACHQ_1(0) = "A47:A48": G_PP_Range_ACHQ_1(1) = "A47:A48": G_PP_Range_ACHQ_1(2) = "K48": G_PP_Range_ACHQ_1(3) = "       ": G_PP_Range_ACHQ_1(4) = ""
    G_PP_Range_ACHQ_2(0) = "A49:A50": G_PP_Range_ACHQ_2(1) = "A49:A50": G_PP_Range_ACHQ_2(2) = "K50": G_PP_Range_ACHQ_2(3) = "       ": G_PP_Range_ACHQ_2(4) = ""
    G_PP_Range_ACHQ_3(0) = "A51:A52": G_PP_Range_ACHQ_3(1) = "A51:A52": G_PP_Range_ACHQ_3(2) = "K52": G_PP_Range_ACHQ_3(3) = "       ": G_PP_Range_ACHQ_3(4) = ""
    G_PP_Range_ACHQ_4(0) = "A53:A54": G_PP_Range_ACHQ_4(1) = "A53:A54": G_PP_Range_ACHQ_4(2) = "K54": G_PP_Range_ACHQ_4(3) = "       ": G_PP_Range_ACHQ_4(4) = ""
    G_PP_Range_ACHQ_5(0) = "A55:A56": G_PP_Range_ACHQ_5(1) = "A55:A56": G_PP_Range_ACHQ_5(2) = "K56": G_PP_Range_ACHQ_5(3) = "       ": G_PP_Range_ACHQ_5(4) = ""
    G_PP_Range_ACHQ_6(0) = "A57:A58": G_PP_Range_ACHQ_6(1) = "A57:A58": G_PP_Range_ACHQ_6(2) = "K58": G_PP_Range_ACHQ_6(3) = "       ": G_PP_Range_ACHQ_6(4) = ""
    G_PP_Range_ACHQ_7(0) = "A59:A60": G_PP_Range_ACHQ_7(1) = "A59:A60": G_PP_Range_ACHQ_7(2) = "K60": G_PP_Range_ACHQ_7(3) = "       ": G_PP_Range_ACHQ_7(4) = ""
    
    G_Svc37_Final_Row_No = 61
    
End Function                                                                    ' of F3700_Initialisation
Function F3710_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 37 - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3720_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S37", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S37", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S37", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S37", "SF")
    End If
    
End Function                                                                    ' of F3710_Validate
Function F3720_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3720_Sheet                                         As String           ' Save the previously active worksheet name
    Dim F3720_Timestamp                                     As Date
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3720_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc37).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display once-only warning if IBM Offset has been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("IBM Offset", "Active", "G", "") = "Y" Then
        If G_PP_Value_ACEX_1 = "IBM Offset" Or _
           G_PP_Value_ACHQ_1 <> "" Or _
           G_PP_Value_ACHQ_2 <> "" Or _
           G_PP_Value_ACHQ_3 <> "" Or _
           G_PP_Value_ACHQ_4 <> "" Or _
           G_PP_Value_ACHQ_5 <> "" Or _
           G_PP_Value_ACHQ_6 <> "" Or _
           G_PP_Value_ACHQ_7 <> "" Then
            
            F3720_Timestamp = F0300_Access_Value("IBM Offset", "Timestamp", "G", "")
            
            On Error GoTo F3720_Bypass
            If Now() > F3720_Timestamp + (30 / (24 * 60)) Then                          ' If message last displayed more than 30 minutes ago then
                G_Caller = F0100_Find_Comment("IBM OFFSET", "WARNING", "")              ' Obtain the message
                G_Response = MsgBox(G_Comment, vbInformation, G_Title)                  ' Display the message
                G_Caller = F0300_Access_Value("IBM Offset", "Timestamp", "U", Now())    ' Save the timestamp at which the message was displayed
            End If
F3720_Bypass:
            On Error Resume Next
            
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E01 - ACA2
    ' - Validation: Empty or six-digit decimal
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_PP_Value_ACAX_2)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_PP_Range_ACAX_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_2(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_PP_Range_ACAX_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_2(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E02 - ACA2T
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACA_2T(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACA_2T(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E03 - ACE3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACEX_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACEX_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E04 with E07 - ACA4
    ' - Validation if ACB1 = PVS or PVSSI: Empty or blank or No
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_PP_Range_ACBX_1(G_Answer)).Value = "PVS" Or _
       Range(G_PP_Range_ACBX_1(G_Answer)).Value = "PVSSI" Then                  ' PVS or PVSSI
        
        If Trim(Range(G_PP_Range_ACAX_4(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_4(G_Answer)).Value) = "No" Then           ' ACA4 is null or blank or No
           
            Range(G_PP_Range_ACAX_4(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_4(G_Answer), "")   ' Obtain comment
            
        Else                                                                    ' ACA4 has any other value
            Range(G_PP_Range_ACAX_4(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_4(G_Answer), "E5") ' Obtain comment
        End If
    
    Else                                                                        ' Nor PVS and not PVSSI
        Range(G_PP_Range_ACAX_4(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_4(G_Answer), "")   ' Obtain comment
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E05 - ACA5
    ' - Validation if ACB1 = PVS or PVSSI: Empty or blank or zero
    ' - Validation if ACA4 = No or blank:  Empty or blank or zero
    ' - Validation: Empty or decimal value in range 1 - 99,999
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_PP_Range_ACBX_1(G_Answer)).Value = "PVS" Or _
       Range(G_PP_Range_ACBX_1(G_Answer)).Value = "PVSSI" Then                  ' PVS or PVSSI
        
        If Trim(Range(G_PP_Range_ACAX_5(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_5(G_Answer)).Value) = "0" Then            ' ACA5 is null or blank or zero
            
            Range(G_PP_Range_ACAX_5(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), "")
            
        Else                                                                    ' ACA5 has any other value
            Range(G_PP_Range_ACAX_5(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), "E5") ' Obtain comment
        End If
        
    ElseIf Trim(Range(G_PP_Range_ACAX_4(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_4(G_Answer)).Value) = "No" Then           ' ACA4 is null or blank or No
        
        If Trim(Range(G_PP_Range_ACAX_5(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_5(G_Answer)).Value) = "0" Then            ' ACA5 is null or blank or zero
            
            Range(G_PP_Range_ACAX_5(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), "")
            
        Else                                                                    ' ACA5 has any other value
            Range(G_PP_Range_ACAX_5(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), "E6") ' Obtain comment
        End If
        
    Else                                                                        ' Not PVS and not PVSSI / ACA 4 is Yes
        G_Caller = F9922_Validate_DTC(G_PP_Value_ACAX_5)                        ' Validation of domestic transaction count
        
        Select Case G_Caller
        
        Case ""                                                                 ' No error
            Range(G_PP_Range_ACAX_5(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), "")
            If G_PP_Value_ACAX_5 <> "" Then
                ActiveCell.Value = G_PP_Value_ACAX_5 + 0
            End If
        
        Case Else                                                               ' Error
            Range(G_PP_Range_ACAX_5(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_5(G_Answer), G_Caller)
        
        End Select
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E06 - ACA6
    ' - Validation if ACB1 = PVS or PVSSI: Empty or blank or zero
    ' - Validation: Empty or decimal value in range 1 - 9,999,999
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_PP_Range_ACBX_1(G_Answer)).Value = "PVS" Or _
       Range(G_PP_Range_ACBX_1(G_Answer)).Value = "PVSSI" Then                  ' PVS or PVSSI
        
        If Trim(Range(G_PP_Range_ACAX_6(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_6(G_Answer)).Value) = "0" Then            ' ACA6 is null or blank or zero
            
            Range(G_PP_Range_ACAX_6(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), "")
            
        Else                                                                    ' ACA6 has any other value
            Range(G_PP_Range_ACAX_6(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), "E5") ' Obtain comment
        End If
        
    ElseIf Trim(Range(G_PP_Range_ACAX_4(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_4(G_Answer)).Value) = "No" Then           ' ACA4 is null or blank or No
        
        If Trim(Range(G_PP_Range_ACAX_6(G_Answer)).Value) = "" Or _
           Trim(Range(G_PP_Range_ACAX_6(G_Answer)).Value) = "0" Then            ' ACA6 is null or blank or zero
            
            Range(G_PP_Range_ACAX_6(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), "")
            
        Else                                                                    ' ACA6 has any other value
            Range(G_PP_Range_ACAX_6(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), "E6") ' Obtain comment
        End If
        
    Else                                                                        ' Not PVS and not PVSSI
        G_Caller = F9923_Validate_DTA(G_PP_Value_ACAX_6)                        ' Validation of domestic transaction amount
        
        Select Case G_Caller
        
        Case ""                                                                 ' No error
            Range(G_PP_Range_ACAX_6(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), "")
            If G_PP_Value_ACAX_6 <> "" Then
                ActiveCell.Value = G_PP_Value_ACAX_6 + 0
            End If
        
        Case Else                                                               ' Error
            Range(G_PP_Range_ACAX_6(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_6(G_Answer), G_Caller)
        
        End Select
    End If
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E07 - ACA3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACAX_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACAX_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E08 - ACB1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACBX_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACBX_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E09 - ACD6
    ' - Validation: Empty or decimal value in range 0 - 250
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9924_Validate_IPE(G_PP_Value_ACDX_6)                            ' Validation of incorrect PIN entries
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_PP_Range_ACDX_6(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACDX_6(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_PP_Range_ACDX_6(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACDX_6(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E10 - ACEX1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACEX_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACEX_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E11 - ACHQ1
    ' - Validation: Empty or sixteen-digit decimal value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9933_Validate_D16(G_PP_Value_ACHQ_1)                            ' Validation of decimalization table
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_PP_Range_ACHQ_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_1(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_PP_Range_ACHQ_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_1(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E12 - ACHQ2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACHQ_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E13 - ACHQ3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACHQ_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E14 - ACHQ4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACHQ_4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E15 - ACHQ5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACHQ_5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E16 - ACHQ6
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACHQ_6(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_6(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - E17 - ACHQ7
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PP_Range_ACHQ_7(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S37", G_PP_Range_ACHQ_7(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_PP_Value_ACAX_2, G_PP_Value_ACA_2T, G_PP_Value_ACEX_3, G_PP_Value_ACAX_4, G_PP_Value_ACAX_5, G_PP_Value_ACAX_6, G_PP_Value_ACAX_3, G_PP_Value_ACBX_1, G_PP_Value_ACDX_6, G_PP_Value_ACEX_1)
    G_Caller = F9986_Count_Values(G_PP_Value_ACHQ_1, G_PP_Value_ACHQ_2, G_PP_Value_ACHQ_3, G_PP_Value_ACHQ_4, G_PP_Value_ACHQ_5, G_PP_Value_ACHQ_6, G_PP_Value_ACHQ_7, "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc37 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S37", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F3720_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F3720_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module38_STIP"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_S1_Range_AGZ_Q1(4)                                 As String           ' G01 - AGZ1 - Maximum number of transactions approved in one day
Global G_S1_Range_AGZ_Q2(4)                                 As String           ' G02 - AGZ2 - Maximum U.S. Dollar amount of transactions approved in one day
Global G_S1_Range_AGZ_Q3(4)                                 As String           ' G03 - AGZ3 - Total number of POS transactions approved in one day
Global G_S1_Range_AGZ_Q4(4)                                 As String           ' G04 - AGZ4 - Total U.S. Dollar amount that can be approved for one POS txn
Global G_S1_Range_AGZ_Q5(4)                                 As String           ' G05   AGZ5 - Maximum U.S. Dollar amount of POS transactions approved in a day
Global G_S1_Range_AGZ_Q6(4)                                 As String           ' G06   AGZ6 - Total number of ATM transactions approved in one day
Global G_S1_Range_AGZ_Q7(4)                                 As String           ' G07   AGZ7 - Total U.S. Dollar amount approved for one ATM transaction
Global G_S1_Range_AGZ_Q8(4)                                 As String           ' G08   AGZ8 - Maximum U.S. Dollar amount for ATM transactions approved in a day

Global G_S1_Range_AGB_Q1(4)                                 As String           ' G09 - AGB1 - Should approvals be allowed on Issuer unavailable MOTO transactions when the expiration date is not present?
Global G_S1_Range_AGB_Q2(4)                                 As String           ' G10 - AGB2 - In STIP, should this issuing BIN allow Recurring Payment transactions with an expired or missing expiration date?
Global G_S1_Range_AGB_3a(4)                                 As String           ' G11 - AGB3a- Specify the STIP processing option for MOTO/e-Commerce Recurring Payment transactions: Domestic
Global G_S1_Range_AGB_3b(4)                                 As String           ' G12 - AGB3b- Specify the STIP processing option for MOTO/e-Commerce Recurring Payment transactions: International
Global G_S1_Range_AHC_Q4(4)                                 As String           ' G13 - AHC4 - Does the issuing BIN want to decline all key entered transactions in STIP when the Issuer is unavailable?

Global G_S1_Range_AHE_1a(4)                                 As String           ' G14   In stand-in, decline POS transactions with an AA risk score greater - card present
Global G_S1_Range_AHE_1b(4)                                 As String           ' G15   In stand-in, decline POS transactions with an AA risk score greater - card not pres
Global G_S1_Range_AHE_Q2(4)                                 As String           ' G16   In stand-in, decline cash transactions with an AA risk score greater than
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_S1_Value_AGZ_Q1                                    As String           ' G01 - AGZ1 - Maximum number of transactions approved in one day
Global G_S1_Value_AGZ_Q2                                    As String           ' G02 - AGZ2 - Maximum U.S. Dollar amount of transactions approved in one day
Global G_S1_Value_AGZ_Q3                                    As String           ' G03 - AGZ3 - Total number of POS transactions approved in one day
Global G_S1_Value_AGZ_Q4                                    As String           ' G04 - AGZ4 - Total U.S. Dollar amount that can be approved for one POS txn
Global G_S1_Value_AGZ_Q5                                    As String           ' G05 - AGZ5 - Maximum U.S. Dollar amount of POS transactions approved in a day
Global G_S1_Value_AGZ_Q6                                    As String           ' G06 - AGZ6 - Total number of ATM transactions approved in one day
Global G_S1_Value_AGZ_Q7                                    As String           ' G07 - AGZ7 - Total U.S. Dollar amount approved for one ATM transaction
Global G_S1_Value_AGZ_Q8                                    As String           ' G08 - AGZ8 - Maximum U.S. Dollar amount for ATM transactions approved in a day

Global G_S1_Value_AGB_Q1                                    As String           ' G09 - AGB1 - Should approvals be allowed on Issuer unavailable MOTO transactions when the expiration date is not present?
Global G_S1_Value_AGB_Q2                                    As String           ' G10 - AGB2 - In STIP, should this issuing BIN allow Recurring Payment transactions with an expired or missing expiration date?
Global G_S1_Value_AGB_3a                                    As String           ' G11 - AGB3a- Specify the STIP processing option for MOTO/e-Commerce Recurring Payment transactions: Domestic
Global G_S1_Value_AGB_3b                                    As String           ' G12 - AGB3b- Specify the STIP processing option for MOTO/e-Commerce Recurring Payment transactions: International
Global G_S1_Value_AHC_Q4                                    As String           ' G13 - AHC4 - Does the issuing BIN want to decline all key entered transactions in STIP when the Issuer is unavailable?

Global G_S1_Value_AHE_1a                                    As String           ' G14 - In stand-in, decline POS transactions with an AA risk score greater - card present
Global G_S1_Value_AHE_1b                                    As String           ' G15 - In stand-in, decline POS transactions with an AA risk score greater - card not pres
Global G_S1_Value_AHE_Q2                                    As String           ' G16 - In stand-in, decline cash transactions with an AA risk score greater than
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc38_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F3800_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 38 - Stand-In Processing (STIP)
    ' - 0 = Entire range
    ' - 1 = Question
    ' - 2 = Answer (single cell)
    ' - 3 = Client Help
    ' - 4 = CCM Info
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_S1_Range_AGZ_Q1(0) = "A019:A020": G_S1_Range_AGZ_Q1(1) = "A019:A020": G_S1_Range_AGZ_Q1(2) = "K020": G_S1_Range_AGZ_Q1(3) = "         ": G_S1_Range_AGZ_Q1(4) = ""    ' G01
    G_S1_Range_AGZ_Q2(0) = "A021:A022": G_S1_Range_AGZ_Q2(1) = "A021:A022": G_S1_Range_AGZ_Q2(2) = "K022": G_S1_Range_AGZ_Q2(3) = "         ": G_S1_Range_AGZ_Q2(4) = ""    ' G02
    G_S1_Range_AGZ_Q3(0) = "A025:A026": G_S1_Range_AGZ_Q3(1) = "A025:A026": G_S1_Range_AGZ_Q3(2) = "K026": G_S1_Range_AGZ_Q3(3) = "         ": G_S1_Range_AGZ_Q3(4) = ""    ' G03
    G_S1_Range_AGZ_Q4(0) = "A027:A028": G_S1_Range_AGZ_Q4(1) = "A027:A028": G_S1_Range_AGZ_Q4(2) = "K028": G_S1_Range_AGZ_Q4(3) = "         ": G_S1_Range_AGZ_Q4(4) = ""    ' G04
    G_S1_Range_AGZ_Q5(0) = "A029:A030": G_S1_Range_AGZ_Q5(1) = "A029:A030": G_S1_Range_AGZ_Q5(2) = "K030": G_S1_Range_AGZ_Q5(3) = "         ": G_S1_Range_AGZ_Q5(4) = ""    ' G05
    G_S1_Range_AGZ_Q6(0) = "A033:A034": G_S1_Range_AGZ_Q6(1) = "A033:A034": G_S1_Range_AGZ_Q6(2) = "K034": G_S1_Range_AGZ_Q6(3) = "         ": G_S1_Range_AGZ_Q6(4) = ""    ' G06
    G_S1_Range_AGZ_Q7(0) = "A035:A036": G_S1_Range_AGZ_Q7(1) = "A035:A036": G_S1_Range_AGZ_Q7(2) = "K036": G_S1_Range_AGZ_Q7(3) = "         ": G_S1_Range_AGZ_Q7(4) = ""    ' G07
    G_S1_Range_AGZ_Q8(0) = "A037:A038": G_S1_Range_AGZ_Q8(1) = "A037:A038": G_S1_Range_AGZ_Q8(2) = "K038": G_S1_Range_AGZ_Q8(3) = "         ": G_S1_Range_AGZ_Q8(4) = ""    ' G08
                                                                                                                                                                            '
    G_S1_Range_AGB_Q1(0) = "A041:A042": G_S1_Range_AGB_Q1(1) = "A041:A042": G_S1_Range_AGB_Q1(2) = "K042": G_S1_Range_AGB_Q1(3) = "         ": G_S1_Range_AGB_Q1(4) = ""    ' G09
    G_S1_Range_AGB_Q2(0) = "A043:A044": G_S1_Range_AGB_Q2(1) = "A043:A044": G_S1_Range_AGB_Q2(2) = "K044": G_S1_Range_AGB_Q2(3) = "         ": G_S1_Range_AGB_Q2(4) = ""    ' G10
    G_S1_Range_AGB_3a(0) = "A045:A050": G_S1_Range_AGB_3a(1) = "A045:A050": G_S1_Range_AGB_3a(2) = "K048": G_S1_Range_AGB_3a(3) = "         ": G_S1_Range_AGB_3a(4) = ""    ' G11
    G_S1_Range_AGB_3b(0) = "A045:A050": G_S1_Range_AGB_3b(1) = "A045:A050": G_S1_Range_AGB_3b(2) = "K050": G_S1_Range_AGB_3b(3) = "         ": G_S1_Range_AGB_3b(4) = ""    ' G12
    G_S1_Range_AHC_Q4(0) = "A051:A053": G_S1_Range_AHC_Q4(1) = "A051:A053": G_S1_Range_AHC_Q4(2) = "K053": G_S1_Range_AHC_Q4(3) = "         ": G_S1_Range_AHC_Q4(4) = ""    ' G13
                                                                                                                                                                            '
    G_S1_Range_AHE_1a(0) = "A057:A061": G_S1_Range_AHE_1a(1) = "A057:A061": G_S1_Range_AHE_1a(2) = "K059": G_S1_Range_AHE_1a(3) = "         ": G_S1_Range_AHE_1a(4) = ""    ' G14
    G_S1_Range_AHE_1b(0) = "A057:A061": G_S1_Range_AHE_1b(1) = "A057:A061": G_S1_Range_AHE_1b(2) = "K061": G_S1_Range_AHE_1b(3) = "         ": G_S1_Range_AHE_1b(4) = ""    ' G15
    G_S1_Range_AHE_Q2(0) = "A062:A063": G_S1_Range_AHE_Q2(1) = "A052:A063": G_S1_Range_AHE_Q2(2) = "K063": G_S1_Range_AHE_Q2(3) = "         ": G_S1_Range_AHE_Q2(4) = ""    ' G16
    
    G_Svc38_Final_Row_No = 64
    
End Function                                                                    ' of F3800_Initialisation
Function F3810_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 38 - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3820_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S38", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S38", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S38", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S38", "SF")
    End If
    
End Function                                                                    ' of F3810_Validate
Function F3820_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F3820_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F3820_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc38).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G01 |fffd| AGZ 1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G02 |fffd| AGZ 2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G03 |fffd| AGZ 3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G04 |fffd| AGZ 4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G05 |fffd| AGZ 5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G06 |fffd| AGZ 6
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q6(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q6(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G07 |fffd| AGZ 7
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q7(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q7(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G08 |fffd| AGZ 8
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGZ_Q8(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGZ_Q8(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G09 |fffd| AGB1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGB_Q1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_Q1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G10 |fffd| AGB2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGB_Q2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_Q2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G11 |fffd| AGB3a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGB_3a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_3a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G12 |fffd| AGB3b
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AGB_3b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AGB_3b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G13 |fffd| AHC4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_S1_Range_AHC_Q4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHC_Q4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G14 |fffd| POS card present - AA Risk Score
    ' Permitted value - Present or absent; decimal integer in range 1 - 99
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_S1_Value_AHE_1a, 1, 99)                     ' decimal value with low and high permitted values
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_S1_Range_AHE_1a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1a(G_Answer), "")
        Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHE_1a(G_Answer)).Value = Format(G_S1_Value_AHE_1a, "00")
    
    Case "E1"                                                                   ' Empty cell
        Range(G_S1_Range_AHE_1a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1a(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_S1_Range_AHE_1a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1a(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G15 |fffd| POS card not present - AA Risk Score
    ' Permitted value - Present or absent; decimal integer in range 1 - 99
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_S1_Value_AHE_1b, 1, 99)                     ' decimal value with low and high permitted values
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_S1_Range_AHE_1b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1b(G_Answer), "")
        Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHE_1b(G_Answer)).Value = Format(G_S1_Value_AHE_1b, "00")
    
    Case "E1"                                                                   ' Empty cell
        Range(G_S1_Range_AHE_1b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1b(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_S1_Range_AHE_1b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_1b(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - G16 |fffd| Cash - AA Risk Score
    ' Permitted value - Present or absent; decimal integer in range 1 - 99
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_S1_Value_AHE_Q2, 1, 99)                     ' decimal value with low and high permitted values
    
    Select Case G_Caller
    
    Case ""                                                                     ' No error
        Range(G_S1_Range_AHE_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_Q2(G_Answer), "")
        Worksheets(G_Tab_Svc38).Range(G_S1_Range_AHE_Q2(G_Answer)).Value = Format(G_S1_Value_AHE_Q2, "00")
    
    Case "E1"                                                                   ' Empty cell
        Range(G_S1_Range_AHE_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_Q2(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_S1_Range_AHE_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S38", G_S1_Range_AHE_Q2(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_S1_Value_AGZ_Q1, G_S1_Value_AGZ_Q2, G_S1_Value_AGZ_Q3, G_S1_Value_AGZ_Q4, G_S1_Value_AGZ_Q5, G_S1_Value_AGZ_Q6, G_S1_Value_AGZ_Q7, G_S1_Value_AGZ_Q8, G_S1_Value_AGB_Q1, G_S1_Value_AGB_Q2)
    G_Caller = F9986_Count_Values(G_S1_Value_AGB_3a, G_S1_Value_AGB_3b, G_S1_Value_AHC_Q4, G_S1_Value_AHE_1a, G_S1_Value_AHE_1b, G_S1_Value_AHE_Q2, "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc38 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S38", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F3820_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F3820_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module40_VD"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_VD_Range_APHX_2(4)                                 As String           ' K01 - Do you want to block only Online Gambling Original Credit Transactions?
Global G_VD_Range_APHX_4(4)                                 As String           ' K02 - Does this BIN participate in OCT Fast Funds?
Global G_VD_Range_APHX_6(4)                                 As String           ' K03 - Does this BIN participate in OCT Activity Checking?
Global G_VD_Range_AGKX_1(4)                                 As String           ' K04 - Does this BIN participate in enhanced OCT Activity Checking Referral?
Global G_VD_Range_AGKX_2(4)                                 As String           ' K05 - Does this Issuer wish to receive decline advices when enhanced OCT limits have been enforced?
Global G_VD_Range_AGK_3a(4)                                 As String           ' K06 - Domestic      1-day amount
Global G_VD_Range_AGK_3b(4)                                 As String           ' K07 - Domestic      7-day amount
Global G_VD_Range_AGK_3c(4)                                 As String           ' K08 - Domestic     30-day amount
Global G_VD_Range_AGK_4a(4)                                 As String           ' K09 - Domestic      1-day count
Global G_VD_Range_AGK_4b(4)                                 As String           ' K10 - Domestic      7-day count
Global G_VD_Range_AGK_4c(4)                                 As String           ' K11 - Domestic     30-day count
Global G_VD_Range_AGK_5a(4)                                 As String           ' K12 - Cross-border  1-day amount
Global G_VD_Range_AGK_5b(4)                                 As String           ' K13 - Cross-border  7-day amount
Global G_VD_Range_AGK_5c(4)                                 As String           ' K14 - Cross-border 30-day amount
Global G_VD_Range_AGK_6a(4)                                 As String           ' K15 - Cross-border  1-day count
Global G_VD_Range_AGK_6b(4)                                 As String           ' K16 - Cross-border  7-day count
Global G_VD_Range_AGK_6c(4)                                 As String           ' K17 - Cross-border 30-day count
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_VD_Value_APHX_2                                    As String           ' K01 - Do you want to block only Online Gambling Original Credit Transactions?
Global G_VD_Value_APHX_4                                    As String           ' K02 - Does this BIN participate in OCT Fast Funds?
Global G_VD_Value_APHX_6                                    As String           ' K03 - Does this BIN participate in OCT Activity Checking?
Global G_VD_Value_AGKX_1                                    As String           ' K04 - Does this BIN participate in enhanced OCT Activity Checking Referral?
Global G_VD_Value_AGKX_2                                    As String           ' K05 - Does this Issuer wish to receive decline advices when enhanced OCT limits have been enforced?
Global G_VD_Value_AGK_3a                                    As String           ' K06 - Domestic      1-day amount
Global G_VD_Value_AGK_3b                                    As String           ' K07 - Domestic      7-day amount
Global G_VD_Value_AGK_3c                                    As String           ' K08 - Domestic     30-day amount
Global G_VD_Value_AGK_4a                                    As String           ' K09 - Domestic      1-day count
Global G_VD_Value_AGK_4b                                    As String           ' K10 - Domestic      7-day count
Global G_VD_Value_AGK_4c                                    As String           ' K11 - Domestic     30-day count
Global G_VD_Value_AGK_5a                                    As String           ' K12 - Cross-border  1-day amount
Global G_VD_Value_AGK_5b                                    As String           ' K13 - Cross-border  7-day amount
Global G_VD_Value_AGK_5c                                    As String           ' K14 - Cross-border 30-day amount
Global G_VD_Value_AGK_6a                                    As String           ' K15 - Cross-border  1-day count
Global G_VD_Value_AGK_6b                                    As String           ' K16 - Cross-border  7-day count
Global G_VD_Value_AGK_6c                                    As String           ' K17 - Cross-border 30-day count
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc40_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4000_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 40 - Visa Direct
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VD_Range_APHX_2(0) = "A18:A18": G_VD_Range_APHX_2(1) = "A18:A18": G_VD_Range_APHX_2(2) = "K18": G_VD_Range_APHX_2(3) = "       ": G_VD_Range_APHX_2(4) = ""
    G_VD_Range_APHX_4(0) = "A19:A21": G_VD_Range_APHX_4(1) = "A19:A21": G_VD_Range_APHX_4(2) = "K20": G_VD_Range_APHX_4(3) = "       ": G_VD_Range_APHX_4(4) = ""
    G_VD_Range_APHX_6(0) = "A25:A25": G_VD_Range_APHX_6(1) = "A25:A25": G_VD_Range_APHX_6(2) = "K25": G_VD_Range_APHX_6(3) = "       ": G_VD_Range_APHX_6(4) = ""
    G_VD_Range_AGKX_1(0) = "A26:A27": G_VD_Range_AGKX_1(1) = "A26:A27": G_VD_Range_AGKX_1(2) = "K27": G_VD_Range_AGKX_1(3) = "       ": G_VD_Range_AGKX_1(4) = ""
    G_VD_Range_AGKX_2(0) = "A28:A29": G_VD_Range_AGKX_2(1) = "A28:A29": G_VD_Range_AGKX_2(2) = "K29": G_VD_Range_AGKX_2(3) = "       ": G_VD_Range_AGKX_2(4) = ""
    G_VD_Range_AGK_3a(0) = "A30:A38": G_VD_Range_AGK_3a(1) = "A32:A32": G_VD_Range_AGK_3a(2) = "E32": G_VD_Range_AGK_3a(3) = "A37:A38": G_VD_Range_AGK_3a(4) = ""
    G_VD_Range_AGK_3b(0) = "A30:A38": G_VD_Range_AGK_3b(1) = "A32:A32": G_VD_Range_AGK_3b(2) = "H32": G_VD_Range_AGK_3b(3) = "A37:A38": G_VD_Range_AGK_3b(4) = ""
    G_VD_Range_AGK_3c(0) = "A30:A38": G_VD_Range_AGK_3c(1) = "A32:A32": G_VD_Range_AGK_3c(2) = "K32": G_VD_Range_AGK_3c(3) = "A37:A38": G_VD_Range_AGK_3c(4) = ""
    G_VD_Range_AGK_4a(0) = "A30:A38": G_VD_Range_AGK_4a(1) = "A33:A33": G_VD_Range_AGK_4a(2) = "E33": G_VD_Range_AGK_4a(3) = "A37:A38": G_VD_Range_AGK_4a(4) = ""
    G_VD_Range_AGK_4b(0) = "A30:A38": G_VD_Range_AGK_4b(1) = "A33:A33": G_VD_Range_AGK_4b(2) = "H33": G_VD_Range_AGK_4b(3) = "A37:A38": G_VD_Range_AGK_4b(4) = ""
    G_VD_Range_AGK_4c(0) = "A30:A38": G_VD_Range_AGK_4c(1) = "A33:A33": G_VD_Range_AGK_4c(2) = "K33": G_VD_Range_AGK_4c(3) = "A37:A38": G_VD_Range_AGK_4c(4) = ""
    G_VD_Range_AGK_5a(0) = "A30:A38": G_VD_Range_AGK_5a(1) = "A35:A35": G_VD_Range_AGK_5a(2) = "E35": G_VD_Range_AGK_5a(3) = "A37:A38": G_VD_Range_AGK_5a(4) = ""
    G_VD_Range_AGK_5b(0) = "A30:A38": G_VD_Range_AGK_5b(1) = "A35:A35": G_VD_Range_AGK_5b(2) = "H35": G_VD_Range_AGK_5b(3) = "A37:A38": G_VD_Range_AGK_5b(4) = ""
    G_VD_Range_AGK_5c(0) = "A30:A38": G_VD_Range_AGK_5c(1) = "A35:A35": G_VD_Range_AGK_5c(2) = "K35": G_VD_Range_AGK_5c(3) = "A37:A38": G_VD_Range_AGK_5c(4) = ""
    G_VD_Range_AGK_6a(0) = "A30:A38": G_VD_Range_AGK_6a(1) = "A36:A36": G_VD_Range_AGK_6a(2) = "E36": G_VD_Range_AGK_6a(3) = "A37:A38": G_VD_Range_AGK_6a(4) = ""
    G_VD_Range_AGK_6b(0) = "A30:A38": G_VD_Range_AGK_6b(1) = "A36:A36": G_VD_Range_AGK_6b(2) = "H36": G_VD_Range_AGK_6b(3) = "A37:A38": G_VD_Range_AGK_6b(4) = ""
    G_VD_Range_AGK_6c(0) = "A30:A38": G_VD_Range_AGK_6c(1) = "A36:A36": G_VD_Range_AGK_6c(2) = "K36": G_VD_Range_AGK_6c(3) = "A37:A38": G_VD_Range_AGK_6c(4) = ""
    
    G_Svc40_Final_Row_No = 39
    
End Function                                                                    ' of F4000_Initialisation
Function F4010_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 40 - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4020_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S40", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S40", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S40", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S40", "SF")
    End If
    
End Function                                                                    ' of F4010_Validate
Function F4020_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4020_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4020_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc40).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K01 - APH 2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VD_Range_APHX_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S40", G_VD_Range_APHX_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K02 - APH 4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VD_Range_APHX_4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S40", G_VD_Range_APHX_4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K03 - APH 6
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VD_Range_APHX_6(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S40", G_VD_Range_APHX_6(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K04 - AGK 1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VD_Range_AGKX_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGKX_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K05 - AGK 2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VD_Range_AGKX_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGKX_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K04 with K05 - AGK 1 and AGK 2
    ' - Validation: values cannot both be "Yes"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VD_Range_AGKX_1(G_Answer)).Value = "Yes" And _
       Range(G_VD_Range_AGKX_2(G_Answer)).Value = "Yes" Then
        
        Range(G_VD_Range_AGKX_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGKX_1(G_Answer), "E5") ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
        
        Range(G_VD_Range_AGKX_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", G_VD_Range_AGKX_2(G_Answer), "E5") ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K06 - AGK 3a
    ' - Validation: Empty or amount in range 1 to 100,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_3a, 1, 100000)                 ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_3a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDA", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_3a, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_3a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDA", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K07 - AGK 3b
    ' - Validation: Empty or amount in range 1 to 250,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_3b, 1, 250000)                 ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_3b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDA", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_3b, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_3b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDA", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K08 - AGK 3c
    ' - Validation: Empty or amount in range 1 to 500,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_3c, 1, 500000)                 ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_3c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDA", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_3c, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_3c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDA", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K09 - AGK 4a
    ' - Validation: Empty or amount in range 1 to 150
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_4a, 1, 150)                    ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_4a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDC", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_4a, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_4a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDC", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K10 - AGK 4b
    ' - Validation: Empty or amount in range 1 to 250
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_4b, 1, 250)                    ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_4b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDC", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_4b, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_4b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDC", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K11 - AGK 4c
    ' - Validation: Empty or amount in range 1 to 750
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_4c, 1, 750)                    ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_4c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDC", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_4c, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_4c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDC", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K12 - AGK 5a
    ' - Validation: Empty or amount in range 2,500 to 20,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_5a, 2500, 20000)               ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_5a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDA", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_5a, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_5a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDA", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K13 - AGK 5b
    ' - Validation: Empty or amount in range 5,000 to 50,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_5b, 5000, 50000)               ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_5b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDA", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_5b, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_5b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDA", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K14 - AGK 5c
    ' - Validation: Empty or amount in range 10,000 to 100,000
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_5c, 10000, 100000)             ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_5c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDA", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_5c, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_5c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDA", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K15 - AGK 6a
    ' - Validation: Empty or amount in range 1 to 30
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_6a, 1, 30)                     ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_6a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDC", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_6a, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_6a(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDC", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K16 - AGK 6b
    ' - Validation: Empty or amount in range 5 to 50
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_6b, 5, 50)                     ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_6b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDC", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_6b, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_6b(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDC", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - K17 - AGK 6c
    ' - Validation: Empty or amount in range 10 to 150
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9931_Validate_IMM(G_VD_Value_AGK_6c, 10, 150)                   ' Validation of decimal integer
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VD_Range_AGK_6c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S40", "NDC", "")
        ActiveCell.Value = Format(G_VD_Value_AGK_6c, "0")
    
    Case Else                                                                   ' Error
        Range(G_VD_Range_AGK_6c(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S40", "NDC", G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_VD_Value_APHX_2, G_VD_Value_APHX_4, G_VD_Value_APHX_6, G_VD_Value_AGKX_1, G_VD_Value_AGKX_2, G_VD_Value_AGK_3a, G_VD_Value_AGK_3b, G_VD_Value_AGK_3c, G_VD_Value_AGK_4a, G_VD_Value_AGK_4b)
    G_Caller = F9986_Count_Values(G_VD_Value_AGK_4c, G_VD_Value_AGK_5a, G_VD_Value_AGK_5b, G_VD_Value_AGK_5c, G_VD_Value_AGK_6a, G_VD_Value_AGK_6b, G_VD_Value_AGK_6c, "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc40 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S40", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4020_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4020_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module41_Alt"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_A1_Range_AEU_Q2(4)                                 As String           ' M01 - If you wish to send ATM transactions to an alternate endpoint, specify the PCR
Global G_A1_Range_AEW_Q1(4)                                 As String           ' M02 - If you wish to send POS transactions with no PIN to an alternate endpoint
Global G_A1_Range_AEW_Q2(4)                                 As String           ' M03 - If you wish to send PIN-based POS transactions to an alternate endpoint
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_A1_Value_AEU_Q2                                    As String           ' M01 - If you wish to send ATM transactions to an alternate endpoint, specify the pcr
Global G_A1_Value_AEW_Q1                                    As String           ' M02 - If you wish to send POS transactions with no PIN to an alternate endpoint
Global G_A1_Value_AEW_Q2                                    As String           ' M03 - If you wish to send PIN-based POS transactions to an alternate endpoint
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc41_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4100_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 41 - Alternate Authorisation Routing
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_A1_Range_AEU_Q2(0) = "A16:A17": G_A1_Range_AEU_Q2(1) = "A16:A17": G_A1_Range_AEU_Q2(2) = "K17": G_A1_Range_AEU_Q2(3) = "       ": G_A1_Range_AEU_Q2(4) = "       "
    G_A1_Range_AEW_Q1(0) = "A18:A19": G_A1_Range_AEW_Q1(1) = "A18:A19": G_A1_Range_AEW_Q1(2) = "K19": G_A1_Range_AEW_Q1(3) = "       ": G_A1_Range_AEW_Q1(4) = "       "
    G_A1_Range_AEW_Q2(0) = "A20:A21": G_A1_Range_AEW_Q2(1) = "A20:A21": G_A1_Range_AEW_Q2(2) = "K21": G_A1_Range_AEW_Q2(3) = "       ": G_A1_Range_AEW_Q2(4) = "       "
    
    G_Svc41_Final_Row_No = 22
    
End Function                                                                    ' of F4100_Initialisation
Function F4110_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 41 - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4120_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S41", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S41", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S41", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S41", "SF")
    End If
    
End Function                                                                    ' of F4110_Validate
Function F4120_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4120_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4120_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc41).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - M01 - AEU 2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9916_Validate_PCR(G_A1_Value_AEU_Q2)                            ' Validation of PCR
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_A1_Range_AEU_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEU_Q2(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_A1_Range_AEU_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEU_Q2(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - M02 - AEW 1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9916_Validate_PCR(G_A1_Value_AEW_Q1)                            ' Validation of PCR
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_A1_Range_AEW_Q1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEW_Q1(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_A1_Range_AEW_Q1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEW_Q1(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - M03 - AEW 2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9916_Validate_PCR(G_A1_Value_AEW_Q2)                            ' Validation of PCR
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_A1_Range_AEW_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEW_Q2(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_A1_Range_AEW_Q2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S41", G_A1_Range_AEW_Q2(G_Answer), G_Caller)
    
    End Select
        
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_A1_Value_AEU_Q2, G_A1_Value_AEW_Q1, G_A1_Value_AEW_Q2, "", "", "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc41 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S41", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4120_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4120_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module42_Ccy"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_MO_Range_AJAX_1(4)                                 As String           ' D01 - Specify the Currency Code for this Issuer BIN
Global G_MO_Range_AJAX_2(4)                                 As String           ' D02 - Inter-regional OIF percentage
Global G_MO_Range_AJAX_4(4)                                 As String           ' D03 - Intra-regional OIF percentage
Global G_MO_Range_AJAX_7(4)                                 As String           ' D04 - Does this Issuer receive OIF information?
Global G_MO_Range_AJDX_3(4)                                 As String           ' D05 - Does this Issuer and/or Acquirer receive charge indicator
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_MO_Value_AJAX_1                                    As String           ' D01 - Specify the Currency Code for this Issuer BIN
Global G_MO_Value_AJAX_2                                    As String           ' D02 - Inter-regional OIF percentage
Global G_MO_Value_AJAX_4                                    As String           ' D03 - Intra-regional OIF percentage
Global G_MO_Value_AJAX_7                                    As String           ' D04 - Does this Issuer receive OIF information?
Global G_MO_Value_AJDX_3                                    As String           ' D05 - Does this Issuer and/or Acquirer receive charge indicator
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc42_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4200_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 42 - Currency Conversion Options
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_MO_Range_AJAX_1(0) = "A18:A20": G_MO_Range_AJAX_1(1) = "A18:A20": G_MO_Range_AJAX_1(2) = "K19": G_MO_Range_AJAX_1(3) = "       ": G_MO_Range_AJAX_1(4) = ""
    G_MO_Range_AJAX_2(0) = "A21:A23": G_MO_Range_AJAX_2(1) = "A21:A23": G_MO_Range_AJAX_2(2) = "K23": G_MO_Range_AJAX_2(3) = "       ": G_MO_Range_AJAX_2(4) = ""
    G_MO_Range_AJAX_4(0) = "A24:A26": G_MO_Range_AJAX_4(1) = "A24:A26": G_MO_Range_AJAX_4(2) = "K26": G_MO_Range_AJAX_4(3) = "       ": G_MO_Range_AJAX_4(4) = ""
    G_MO_Range_AJAX_7(0) = "A27:A28": G_MO_Range_AJAX_7(1) = "A27:A28": G_MO_Range_AJAX_7(2) = "K28": G_MO_Range_AJAX_7(3) = "       ": G_MO_Range_AJAX_7(4) = ""
    G_MO_Range_AJDX_3(0) = "A29:A30": G_MO_Range_AJDX_3(1) = "A29:A30": G_MO_Range_AJDX_3(2) = "K30": G_MO_Range_AJDX_3(3) = "       ": G_MO_Range_AJDX_3(4) = ""
    
    G_Svc42_Final_Row_No = 31
    
End Function                                                                    ' of F4200_Initialisation
Function F4210_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 42 - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4220_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S42", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S42", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S42", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S42", "SF")
    End If
    
End Function                                                                    ' of F4210_Validate
Function F4220_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4220_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4220_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc42).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set standard formatting of answer cells
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc42, G_MO_Range_AJAX_1(G_Answer), "Ccy")
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc42, G_MO_Range_AJAX_2(G_Answer), "")
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc42, G_MO_Range_AJAX_4(G_Answer), "")
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc42, G_MO_Range_AJAX_7(G_Answer), "")
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc42, G_MO_Range_AJDX_3(G_Answer), "")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - D01 - AJA1
    ' - Validation: Empty or three-digit number with leading zeros when needed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9925_Validate_CCY(G_MO_Value_AJAX_1)                            ' Validation of CCY code
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_MO_Range_AJAX_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_1(G_Answer), "")
        ActiveCell.Value = Format(G_MO_Value_AJAX_1, "000")
    
    Case Else                                                                   ' Error
        Range(G_MO_Range_AJAX_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_1(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - D02 - AJA2
    ' - Validation: Empty or percentage in format nn.nnn% (digits optional, minimum valid is single digit)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9926_Validate_PCT(G_MO_Value_AJAX_2)                            ' Validation of percentage (nn.nnn%)
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_MO_Range_AJAX_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_2(G_Answer), "")
        
        If G_MO_Value_AJAX_2 <> "" Then
            ActiveCell.Value = G_MO_Value_AJAX_2                                ' Formatted nicely in F9926_Validate_PCT
        End If
    
    Case Else                                                                   ' Error
        Range(G_MO_Range_AJAX_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_2(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - D03 - AJA4
    ' - Validation: Empty or percentage in format nn.nnn% (digits optional, minimum valid is single digit)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9926_Validate_PCT(G_MO_Value_AJAX_4)                            ' Validation of percentage (nn.nnn%)
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_MO_Range_AJAX_4(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_4(G_Answer), "")
        
        If G_MO_Value_AJAX_4 <> "" Then
            ActiveCell.Value = G_MO_Value_AJAX_4                                ' Formatted nicely in F9926_Validate_PCT
        End If
    
    Case Else                                                                   ' Error
        Range(G_MO_Range_AJAX_4(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_4(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - D04 - AJA 7
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_MO_Range_AJAX_7(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJAX_7(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - D05 - AJD 3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_MO_Range_AJDX_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S42", G_MO_Range_AJDX_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_MO_Value_AJAX_1, G_MO_Value_AJAX_2, G_MO_Value_AJAX_4, G_MO_Value_AJAX_7, G_MO_Value_AJDX_3, "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc42 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S42", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4220_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4220_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module43_ProcOpts"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_PO_Range_AEOX_8(4)                                 As String           ' L01 - Should 0200 financial transactions be converted to 0100 POS authorizations
Global G_PO_Range_AEEX_1(4)                                 As String           ' L02 - Will an Issuing Institution ID (in field 121) be sent instead of a BIN in field 2
Global G_PO_Range_APFX_4(4)                                 As String           ' L03 - Will this BIN support balance inquiry requests for POS?
Global G_PO_Range_APFX_5(4)                                 As String           ' L04 - Should POS balance information be sent to Acquirers for all products?
Global G_PO_Range_APCA_7(4)                                 As String           ' L05 - Specify how you want to receive 0120 Pre-Authorization Completion Advices
Global G_PO_Range_APCA12(4)                                 As String           ' L06 - Can this issuing BIN receive F60.9 Cardholder ID Method Indicator?
Global G_PO_Range_APCA_1(4)                                 As String           ' L07 - Should Visa decline both Online and MOTO Gambling Transactions?
Global G_PO_Range_AIAX_1(4)                                 As String           ' L08 - Do you want to automatically update the Exception File?
Global G_PO_Range_AOAX_2(6)                                 As String           ' L09 - Do you want this BIN to participate in the Cashback Service?
Global G_PO_Range_ADXX_1(4)                                 As String           ' L10 - Does Visa perform Mod-10 check digit calculation on account numbers?
Global G_PO_Range_AVXX_3(4)                                 As String           ' L11 - Should Visa decline purchase (Non-Cash) transactions in a card not present environment
Global G_PO_Range_AVX_5a(4)                                 As String           ' L12 - Should Visa decline domestic Purchase (Non-Cash) transactions if PIN Block is not
Global G_PO_Range_APBA11(4)                                 As String           ' L13 - Do you want to receive the Agent Unique ID in authorization requests in F126.18?
Global G_PO_Range_APCA13(4)                                 As String           ' L14 - Does this issuer participate in the Mobile Location Confirmation (MLC) Service?
Global G_PO_Range_ManCas(4)                                 As String           ' L15 - Specify the BIN if you wish to support manual cash acquiring
Global G_PO_Range_APCA_2(4)                                 As String           ' L16 - Does this Issuer participate in the Preauthorized Payments Cancellation Service?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_PO_Value_AEOX_8                                    As String           ' L01 - Should 0200 financial transactions be converted to 0100 POS authorizations
Global G_PO_Value_AEEX_1                                    As String           ' L02 - Will an Issuing Institution ID (in field 121) be sent instead of a BIN in field 2
Global G_PO_Value_APFX_4                                    As String           ' L03 - Will this BIN support balance inquiry requests for POS?
Global G_PO_Value_APFX_5                                    As String           ' L04 - Should POS balance information be sent to Acquirers for all products?
Global G_PO_Value_APCA_7                                    As String           ' L05 - Specify how you want to receive 0120 Pre-Authorization Completion Advices
Global G_PO_Value_APCA12                                    As String           ' L06 - Can this issuing BIN receive F60.9 Cardholder ID Method Indicator?
Global G_PO_Value_APCA_1                                    As String           ' L07 - Should Visa decline both Online and MOTO Gambling Transactions?
Global G_PO_Value_AIAX_1                                    As String           ' L08 - Do you want to automatically update the Exception File?
Global G_PO_Value_AOAX_2                                    As String           ' L09 - Do you want this BIN to participate in the Cashback Service?
Global G_PO_Value_ADXX_1                                    As String           ' L10 - Does Visa perform Mod-10 check digit calculation on account numbers?
Global G_PO_Value_AVXX_3                                    As String           ' L11 - Should Visa decline purchase (Non-Cash) transactions in a card not present environment
Global G_PO_Value_AVX_5a                                    As String           ' L12 - Should Visa decline domestic Purchase (Non-Cash) transactions if PIN Block is not
Global G_PO_Value_APBA11                                    As String           ' L13 - Do you want to receive the Agent Unique ID in authorization requests in F126.18?
Global G_PO_Value_APCA13                                    As String           ' L14 - Does this issuer participate in the Mobile Location Confirmation (MLC) Service?
Global G_PO_Value_ManCas                                    As String           ' L15 - Specify the BIN if you wish to support manual cash acquiring
Global G_PO_Value_APCA_2                                    As String           ' L16 - Does this Issuer participate in the Preauthorized Payments Cancellation Service?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc43_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4300_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 43 - Additional Processing Options
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_PO_Range_AEOX_8(0) = "A17:A18": G_PO_Range_AEOX_8(1) = "A17:A18": G_PO_Range_AEOX_8(2) = "K18": G_PO_Range_AEOX_8(3) = "       ": G_PO_Range_AEOX_8(4) = "       "    ' L01
    G_PO_Range_AEEX_1(0) = "A19:A20": G_PO_Range_AEEX_1(1) = "A19:A20": G_PO_Range_AEEX_1(2) = "K20": G_PO_Range_AEEX_1(3) = "       ": G_PO_Range_AEEX_1(4) = "       "    ' L02
    G_PO_Range_APFX_4(0) = "A21:A22": G_PO_Range_APFX_4(1) = "A21:A22": G_PO_Range_APFX_4(2) = "K22": G_PO_Range_APFX_4(3) = "       ": G_PO_Range_APFX_4(4) = "       "    ' L03
    G_PO_Range_APFX_5(0) = "A23:A24": G_PO_Range_APFX_5(1) = "A23:A24": G_PO_Range_APFX_5(2) = "K24": G_PO_Range_APFX_5(3) = "       ": G_PO_Range_APFX_5(4) = "       "    ' L04
    G_PO_Range_APCA_7(0) = "A25:A26": G_PO_Range_APCA_7(1) = "A25:A26": G_PO_Range_APCA_7(2) = "K26": G_PO_Range_APCA_7(3) = "       ": G_PO_Range_APCA_7(4) = "       "    ' L05
    G_PO_Range_APCA12(0) = "A27:A28": G_PO_Range_APCA12(1) = "A27:A28": G_PO_Range_APCA12(2) = "K28": G_PO_Range_APCA12(3) = "       ": G_PO_Range_APCA12(4) = "       "    ' L06
    G_PO_Range_APCA_1(0) = "A29:A30": G_PO_Range_APCA_1(1) = "A29:A30": G_PO_Range_APCA_1(2) = "K30": G_PO_Range_APCA_1(3) = "       ": G_PO_Range_APCA_1(4) = "       "    ' L07
    G_PO_Range_AIAX_1(0) = "A31:A32": G_PO_Range_AIAX_1(1) = "A31:A32": G_PO_Range_AIAX_1(2) = "K32": G_PO_Range_AIAX_1(3) = "       ": G_PO_Range_AIAX_1(4) = "       "    ' L08
    G_PO_Range_AOAX_2(0) = "A33:A34": G_PO_Range_AOAX_2(1) = "A33:A34": G_PO_Range_AOAX_2(2) = "K34": G_PO_Range_AOAX_2(3) = "       ": G_PO_Range_AOAX_2(4) = "       ":   G_PO_Range_AOAX_2(5) = "A35:A35":   G_PO_Range_AOAX_2(6) = "A36:A36"    ' L09
    G_PO_Range_ADXX_1(0) = "A37:A38": G_PO_Range_ADXX_1(1) = "A37:A38": G_PO_Range_ADXX_1(2) = "K38": G_PO_Range_ADXX_1(3) = "       ": G_PO_Range_ADXX_1(4) = "       "    ' L10
    G_PO_Range_AVXX_3(0) = "A39:A40": G_PO_Range_AVXX_3(1) = "A39:A40": G_PO_Range_AVXX_3(2) = "K40": G_PO_Range_AVXX_3(3) = "       ": G_PO_Range_AVXX_3(4) = "       "    ' L11
    G_PO_Range_AVX_5a(0) = "A41:A42": G_PO_Range_AVX_5a(1) = "A41:A42": G_PO_Range_AVX_5a(2) = "K42": G_PO_Range_AVX_5a(3) = "       ": G_PO_Range_AVX_5a(4) = "       "    ' L12
    G_PO_Range_APBA11(0) = "A43:A44": G_PO_Range_APBA11(1) = "A43:A44": G_PO_Range_APBA11(2) = "K44": G_PO_Range_APBA11(3) = "       ": G_PO_Range_APBA11(4) = "       "    ' L13
    G_PO_Range_APCA13(0) = "A45:A47": G_PO_Range_APCA13(1) = "A45:A47": G_PO_Range_APCA13(2) = "K46": G_PO_Range_APCA13(3) = "       ": G_PO_Range_APCA13(4) = "       "    ' L14
    G_PO_Range_ManCas(0) = "A48:A50": G_PO_Range_ManCas(1) = "A48:A50": G_PO_Range_ManCas(2) = "K49": G_PO_Range_ManCas(3) = "       ": G_PO_Range_ManCas(4) = "       "    ' L15
    G_PO_Range_APCA_2(0) = "A51:A52": G_PO_Range_APCA_2(1) = "A51:A52": G_PO_Range_APCA_2(2) = "K52": G_PO_Range_APCA_2(3) = "       ": G_PO_Range_APCA_2(4) = "       "    ' L16
    
    G_Svc43_Final_Row_No = 53
    
End Function                                                                    ' of F4300_Initialisation
Function F4310_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 43 - Additional Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4320_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S43", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S43", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S43", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S43", "SF")
    End If
    
End Function                                                                    ' of F4310_Validate
Function F4320_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4320_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4320_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc43).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L01 - AEO 8
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_AEOX_8(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_AEOX_8(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L02 - AEE 1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_AEEX_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_AEEX_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L03 - APF 4
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APFX_4(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APFX_4(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L04 - APF 5
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APFX_5(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APFX_5(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L05 - APCA 7
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APCA_7(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA_7(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L06 - APCA 12
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APCA12(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA12(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L07 - APCA 1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APCA_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L08 - AIA 1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_AIAX_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_AIAX_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L09 - AOA 2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_AOAX_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_AOAX_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L10 - AD 1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_ADXX_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_ADXX_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L11 - AV 3
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_AVXX_3(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_AVXX_3(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L12 - AV 5a
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_AVX_5a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_AVX_5a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L13 - APBA11
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APBA11(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APBA11(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L14 - APCA13
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APCA13(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA13(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L15 - MANCAS
    ' - Validation: Empty or six-digit BIN
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_PO_Range_ManCas(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9912_Validate_BIN(G_PO_Value_ManCas)                        ' Validation of BIN
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_PO_Range_ManCas(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S43", G_PO_Range_ManCas(G_Answer), "")
        
        Case Else                                                               ' Error
            Range(G_PO_Range_ManCas(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S43", G_PO_Range_ManCas(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - L16 - APCA 2
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_PO_Range_APCA_2(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S43", G_PO_Range_APCA_2(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_PO_Value_AEOX_8, G_PO_Value_AEEX_1, G_PO_Value_APFX_4, G_PO_Value_APFX_5, G_PO_Value_APCA_7, G_PO_Value_APCA12, G_PO_Value_APCA_1, G_PO_Value_AIAX_1, G_PO_Value_AOAX_2, G_PO_Value_ADXX_1)
    G_Caller = F9986_Count_Values(G_PO_Value_AVXX_3, G_PO_Value_AVX_5a, G_PO_Value_APBA11, G_PO_Value_APCA13, G_PO_Value_ManCas, G_PO_Value_APCA_2, "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc43 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S43", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4320_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4320_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module44_Rep_Raw"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_RR_Range_GA6Fin(4)                                 As String           ' N01 - Specify the financial institution as it should appear on the SMS Reports
Global G_RR_Range_SM600a(4)                                 As String           ' N02 - ISSUER TRANSACTION DETAIL
Global G_RR_Range_SM600b(4)                                 As String           '       ISSUER TRANSACTION DETAIL
Global G_RR_Range_SM600c(4)                                 As String           '       ISSUER TRANSACTION DETAIL
Global G_RR_Range_SM600d(4)                                 As String           '       ISSUER TRANSACTION DETAIL
Global G_RR_Range_SM608c(4)                                 As String           ' N03 - FEE COLLECTION & FUNDS DISBURSEMENT
Global G_RR_Range_SM610a(4)                                 As String           ' N04 - ISSUER CHARGEBACK DETAIL
Global G_RR_Range_SM610b(4)                                 As String           '       ISSUER CHARGEBACK DETAIL
Global G_RR_Range_SM610c(4)                                 As String           '       ISSUER CHARGEBACK DETAIL
Global G_RR_Range_SM612a(4)                                 As String           ' N05 - ISSUER REPRESENTMENT DETAIL
Global G_RR_Range_SM612b(4)                                 As String           '       ISSUER REPRESENTMENT DETAIL
Global G_RR_Range_SM612c(4)                                 As String           '       ISSUER REPRESENTMENT DETAIL
Global G_RR_Range_SM614a(4)                                 As String           ' N06 - ISSUER ADJUSTMENT & MERCHANDISE CRED DETAIL
Global G_RR_Range_SM614b(4)                                 As String           '       ISSUER ADJUSTMENT & MERCHANDISE CRED DETAIL
Global G_RR_Range_SM614c(4)                                 As String           '       ISSUER ADJUSTMENT & MERCHANDISE CRED DETAIL
Global G_RR_Range_SM616a(4)                                 As String           ' N07 - ISSUER CANCELLATION & REVERSAL DETAIL
Global G_RR_Range_SM616c(4)                                 As String           '       ISSUER CANCELLATION & REVERSAL DETAIL
Global G_RR_Range_SM620c(4)                                 As String           ' N08 - ISSUER FILE MAINTENANCE DAILY SUMMARY
Global G_RR_Range_SM620d(4)                                 As String           '       ISSUER FILE MAINTENANCE DAILY SUMMARY
Global G_RR_Range_SM626a(4)                                 As String           ' N09 - ADMINISTRATIVE MESSAGE DAILY SUMMARY
Global G_RR_Range_SM640d(4)                                 As String           ' N10 - ISSUER ERROR DETAIL
Global G_RR_Range_SM642c(4)                                 As String           ' N11 - ISSUER RETURNED EXCEPTION DETAIL

Global G_RR_Range_V22120(4)                                 As String           ' N12 - VSS SPECIFIC RECORD
Global G_RR_Range_V22200(4)                                 As String           ' N13 - FINANCIAL TRANSACTION RECORD 1*
Global G_RR_Range_V22255(4)                                 As String           ' N14 - FINANCIAL TRANSACTION FEE COLLECTION / FUNDS DISBURSEMENT
Global G_RR_Range_V22260(4)                                 As String           ' N15 - FINANCIAL TRANSACTION RECORD / MULTICURRENCY RECORD
Global G_RR_Range_V22261(4)                                 As String           ' N16 - FINANCIAL TRANSACTION RECORD / FEE RECORD
Global G_RR_Range_V22276(4)                                 As String           ' N17 - FINANCIAL TRANSACTION MONEY TRANSFER & PERSONAL PAYMENT
Global G_RR_Range_V22300(4)                                 As String           ' N18 - FINANCIAL MAINTENANCE TRANSACTION RECORD
Global G_RR_Range_V22310(4)                                 As String           ' N19 - FILE MAINTENANCE |fffd| ADDRESS VERIFICATION FILE UPDATE
Global G_RR_Range_V22400(4)                                 As String           ' N20 - ADMINISTRATIVE MESSAGE 1 TRANSACTION RECORD
Global G_RR_Range_V22461(4)                                 As String           ' N21 - ADMINISTRATIVE TRANSACTION / FEE RECORD
Global G_RR_Range_V23200(4)                                 As String           ' N22 - VERSION 2.3 FINANCIAL TRANSACTION RECORD 1
Global G_RR_Range_V23210(4)                                 As String           ' N23 - VERSION 2.3 FINANCIAL TRANSACTION / FEE RECORD
Global G_RR_Range_Header(4)                                 As String           ' N24 - Select how you want the Reports and Raw Data files
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_RR_Value_GA6Fin                                    As String           ' N01 - Specify the financial institution as it should appear on the SMS Reports
Global G_RR_Value_SM600a                                    As String           ' N02 - ISSUER TRANSACTION DETAIL
Global G_RR_Value_SM600b                                    As String           '       ISSUER TRANSACTION DETAIL
Global G_RR_Value_SM600c                                    As String           '       ISSUER TRANSACTION DETAIL
Global G_RR_Value_SM600d                                    As String           '       ISSUER TRANSACTION DETAIL
Global G_RR_Value_SM608c                                    As String           ' N03 - FEE COLLECTION & FUNDS DISBURSEMENT
Global G_RR_Value_SM610a                                    As String           ' N04 - ISSUER CHARGEBACK DETAIL
Global G_RR_Value_SM610b                                    As String           '       ISSUER CHARGEBACK DETAIL
Global G_RR_Value_SM610c                                    As String           '       ISSUER CHARGEBACK DETAIL
Global G_RR_Value_SM612a                                    As String           ' N05 - ISSUER REPRESENTMENT DETAIL
Global G_RR_Value_SM612b                                    As String           '       ISSUER REPRESENTMENT DETAIL
Global G_RR_Value_SM612c                                    As String           '       ISSUER REPRESENTMENT DETAIL
Global G_RR_Value_SM614a                                    As String           ' N06 - ISSUER ADJUSTMENT & MERCHANDISE CRED DETAIL
Global G_RR_Value_SM614b                                    As String           '       ISSUER ADJUSTMENT & MERCHANDISE CRED DETAIL
Global G_RR_Value_SM614c                                    As String           '       ISSUER ADJUSTMENT & MERCHANDISE CRED DETAIL
Global G_RR_Value_SM616a                                    As String           ' N07 - ISSUER CANCELLATION & REVERSAL DETAIL
Global G_RR_Value_SM616c                                    As String           '       ISSUER CANCELLATION & REVERSAL DETAIL
Global G_RR_Value_SM620c                                    As String           ' N08 - ISSUER FILE MAINTENANCE DAILY SUMMARY
Global G_RR_Value_SM620d                                    As String           '       ISSUER FILE MAINTENANCE DAILY SUMMARY
Global G_RR_Value_SM626a                                    As String           ' N09 - ADMINISTRATIVE MESSAGE DAILY SUMMARY
Global G_RR_Value_SM640d                                    As String           ' N10 - ISSUER ERROR DETAIL
Global G_RR_Value_SM642c                                    As String           ' N11 - ISSUER RETURNED EXCEPTION DETAIL

Global G_RR_Value_V22120                                    As String           ' N12 - VSS SPECIFIC RECORD
Global G_RR_Value_V22200                                    As String           ' N13 - FINANCIAL TRANSACTION RECORD 1*
Global G_RR_Value_V22255                                    As String           ' N14 - FINANCIAL TRANSACTION FEE COLLECTION / FUNDS DISBURSEMENT
Global G_RR_Value_V22260                                    As String           ' N15 - FINANCIAL TRANSACTION RECORD / MULTICURRENCY RECORD
Global G_RR_Value_V22261                                    As String           ' N16 - FINANCIAL TRANSACTION RECORD / FEE RECORD
Global G_RR_Value_V22276                                    As String           ' N17 - FINANCIAL TRANSACTION MONEY TRANSFER & PERSONAL PAYMENT
Global G_RR_Value_V22300                                    As String           ' N18 - FINANCIAL MAINTENANCE TRANSACTION RECORD
Global G_RR_Value_V22310                                    As String           ' N19 - FILE MAINTENANCE |fffd| ADDRESS VERIFICATION FILE UPDATE
Global G_RR_Value_V22400                                    As String           ' N20 - ADMINISTRATIVE MESSAGE 1 TRANSACTION RECORD
Global G_RR_Value_V22461                                    As String           ' N21 - ADMINISTRATIVE TRANSACTION / FEE RECORD
Global G_RR_Value_V23200                                    As String           ' N22 - VERSION 2.3 FINANCIAL TRANSACTION RECORD 1
Global G_RR_Value_V23210                                    As String           ' N23 - VERSION 2.3 FINANCIAL TRANSACTION / FEE RECORD
Global G_RR_Value_Header                                    As String           ' N24 - Select how you want the Reports and Raw Data files
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc44_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4400_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 44 - SMS Reports and Raw Data
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_RR_Range_GA6Fin(0) = "A17:A17": G_RR_Range_GA6Fin(1) = "A17:A17": G_RR_Range_GA6Fin(2) = "I17": G_RR_Range_GA6Fin(3) = "       ": G_RR_Range_GA6Fin(4) = "       "
    G_RR_Range_SM600a(0) = "A19:A31": G_RR_Range_SM600a(1) = "A22:A22": G_RR_Range_SM600a(2) = "H22": G_RR_Range_SM600a(3) = "       ": G_RR_Range_SM600a(4) = "       "
    G_RR_Range_SM600b(0) = "A19:A31": G_RR_Range_SM600b(1) = "A22:A22": G_RR_Range_SM600b(2) = "I22": G_RR_Range_SM600b(3) = "       ": G_RR_Range_SM600b(4) = "       "
    G_RR_Range_SM600c(0) = "A19:A31": G_RR_Range_SM600c(1) = "A22:A22": G_RR_Range_SM600c(2) = "J22": G_RR_Range_SM600c(3) = "       ": G_RR_Range_SM600c(4) = "       "
    G_RR_Range_SM600d(0) = "A19:A31": G_RR_Range_SM600d(1) = "A22:A22": G_RR_Range_SM600d(2) = "K22": G_RR_Range_SM600d(3) = "       ": G_RR_Range_SM600d(4) = "       "
    G_RR_Range_SM608c(0) = "A19:A31": G_RR_Range_SM608c(1) = "A23:A23": G_RR_Range_SM608c(2) = "J23": G_RR_Range_SM608c(3) = "       ": G_RR_Range_SM608c(4) = "       "
    G_RR_Range_SM610a(0) = "A19:A31": G_RR_Range_SM610a(1) = "A24:A24": G_RR_Range_SM610a(2) = "H24": G_RR_Range_SM610a(3) = "       ": G_RR_Range_SM610a(4) = "       "
    G_RR_Range_SM610b(0) = "A19:A31": G_RR_Range_SM610b(1) = "A24:A24": G_RR_Range_SM610b(2) = "I24": G_RR_Range_SM610b(3) = "       ": G_RR_Range_SM610b(4) = "       "
    G_RR_Range_SM610c(0) = "A19:A31": G_RR_Range_SM610c(1) = "A24:A24": G_RR_Range_SM610c(2) = "J24": G_RR_Range_SM610c(3) = "       ": G_RR_Range_SM610c(4) = "       "
    G_RR_Range_SM612a(0) = "A19:A31": G_RR_Range_SM612a(1) = "A25:A25": G_RR_Range_SM612a(2) = "H25": G_RR_Range_SM612a(3) = "       ": G_RR_Range_SM612a(4) = "       "
    G_RR_Range_SM612b(0) = "A19:A31": G_RR_Range_SM612b(1) = "A25:A25": G_RR_Range_SM612b(2) = "I25": G_RR_Range_SM612b(3) = "       ": G_RR_Range_SM612b(4) = "       "
    G_RR_Range_SM612c(0) = "A19:A31": G_RR_Range_SM612c(1) = "A25:A25": G_RR_Range_SM612c(2) = "J25": G_RR_Range_SM612c(3) = "       ": G_RR_Range_SM612c(4) = "       "
    G_RR_Range_SM614a(0) = "A19:A31": G_RR_Range_SM614a(1) = "A26:A26": G_RR_Range_SM614a(2) = "H26": G_RR_Range_SM614a(3) = "       ": G_RR_Range_SM614a(4) = "       "
    G_RR_Range_SM614b(0) = "A19:A31": G_RR_Range_SM614b(1) = "A26:A26": G_RR_Range_SM614b(2) = "I26": G_RR_Range_SM614b(3) = "       ": G_RR_Range_SM614b(4) = "       "
    G_RR_Range_SM614c(0) = "A19:A31": G_RR_Range_SM614c(1) = "A26:A26": G_RR_Range_SM614c(2) = "J26": G_RR_Range_SM614c(3) = "       ": G_RR_Range_SM614c(4) = "       "
    G_RR_Range_SM616a(0) = "A19:A31": G_RR_Range_SM616a(1) = "A27:A27": G_RR_Range_SM616a(2) = "H27": G_RR_Range_SM616a(3) = "       ": G_RR_Range_SM616a(4) = "       "
    G_RR_Range_SM616c(0) = "A19:A31": G_RR_Range_SM616c(1) = "A27:A27": G_RR_Range_SM616c(2) = "J27": G_RR_Range_SM616c(3) = "       ": G_RR_Range_SM616c(4) = "       "
    G_RR_Range_SM620c(0) = "A19:A31": G_RR_Range_SM620c(1) = "A28:A28": G_RR_Range_SM620c(2) = "J28": G_RR_Range_SM620c(3) = "       ": G_RR_Range_SM620c(4) = "       "
    G_RR_Range_SM620d(0) = "A19:A31": G_RR_Range_SM620d(1) = "A28:A28": G_RR_Range_SM620d(2) = "K28": G_RR_Range_SM620d(3) = "       ": G_RR_Range_SM620d(4) = "       "
    G_RR_Range_SM626a(0) = "A19:A31": G_RR_Range_SM626a(1) = "A29:A29": G_RR_Range_SM626a(2) = "H29": G_RR_Range_SM626a(3) = "       ": G_RR_Range_SM626a(4) = "       "
    G_RR_Range_SM640d(0) = "A19:A31": G_RR_Range_SM640d(1) = "A30:A30": G_RR_Range_SM640d(2) = "K30": G_RR_Range_SM640d(3) = "       ": G_RR_Range_SM640d(4) = "       "
    G_RR_Range_SM642c(0) = "A19:A31": G_RR_Range_SM642c(1) = "A31:A31": G_RR_Range_SM642c(2) = "J31": G_RR_Range_SM642c(3) = "       ": G_RR_Range_SM642c(4) = "       "
    
    G_RR_Range_V22120(0) = "A36:A48": G_RR_Range_V22120(1) = "A38:A38": G_RR_Range_V22120(2) = "K38": G_RR_Range_V22120(3) = "       ": G_RR_Range_V22120(4) = "       "
    G_RR_Range_V22200(0) = "A36:A48": G_RR_Range_V22200(1) = "A39:A39": G_RR_Range_V22200(2) = "K39": G_RR_Range_V22200(3) = "       ": G_RR_Range_V22200(4) = "       "
    G_RR_Range_V22255(0) = "A36:A48": G_RR_Range_V22255(1) = "A40:A40": G_RR_Range_V22255(2) = "K40": G_RR_Range_V22255(3) = "       ": G_RR_Range_V22255(4) = "       "
    G_RR_Range_V22260(0) = "A36:A48": G_RR_Range_V22260(1) = "A41:A41": G_RR_Range_V22260(2) = "K41": G_RR_Range_V22260(3) = "       ": G_RR_Range_V22260(4) = "       "
    G_RR_Range_V22261(0) = "A36:A48": G_RR_Range_V22261(1) = "A42:A42": G_RR_Range_V22261(2) = "K42": G_RR_Range_V22261(3) = "       ": G_RR_Range_V22261(4) = "       "
    G_RR_Range_V22276(0) = "A36:A48": G_RR_Range_V22276(1) = "A43:A43": G_RR_Range_V22276(2) = "K43": G_RR_Range_V22276(3) = "       ": G_RR_Range_V22276(4) = "       "
    G_RR_Range_V22300(0) = "A36:A48": G_RR_Range_V22300(1) = "A44:A44": G_RR_Range_V22300(2) = "K44": G_RR_Range_V22300(3) = "       ": G_RR_Range_V22300(4) = "       "
    G_RR_Range_V22310(0) = "A36:A48": G_RR_Range_V22310(1) = "A45:A45": G_RR_Range_V22310(2) = "K45": G_RR_Range_V22310(3) = "       ": G_RR_Range_V22310(4) = "       "
    G_RR_Range_V22400(0) = "A36:A48": G_RR_Range_V22400(1) = "A46:A46": G_RR_Range_V22400(2) = "K46": G_RR_Range_V22400(3) = "       ": G_RR_Range_V22400(4) = "       "
    G_RR_Range_V22461(0) = "A36:A48": G_RR_Range_V22461(1) = "A47:A47": G_RR_Range_V22461(2) = "K47": G_RR_Range_V22461(3) = "       ": G_RR_Range_V22461(4) = "       "
    
    G_RR_Range_V23200(0) = "A50:A53": G_RR_Range_V23200(1) = "A52:A52": G_RR_Range_V23200(2) = "K52": G_RR_Range_V23200(3) = "       ": G_RR_Range_V23200(4) = "       "
    G_RR_Range_V23210(0) = "A50:A53": G_RR_Range_V23210(1) = "A53:A53": G_RR_Range_V23210(2) = "K53": G_RR_Range_V23210(3) = "       ": G_RR_Range_V23210(4) = "       "
    
    G_RR_Range_Header(0) = "A54:A56": G_RR_Range_Header(1) = "A54:A56": G_RR_Range_Header(2) = "J56": G_RR_Range_Header(3) = "       ": G_RR_Range_Header(4) = "       "
    
    G_Svc44_Final_Row_No = 57
    
End Function                                                                    ' of F4400_Initialisation
Function F4410_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 44 - SMS Reports and Raw Daya
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4420_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S44", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S44", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S44", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S44", "SF")
    End If
    
End Function                                                                    ' of F4410_Validate
Function F4420_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4420_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4420_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc44).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N01 - GA6
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_GA6Fin(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_GA6Fin(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N02 - SMS600
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM600a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM600a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM600b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM600b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM600c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM600c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM600d(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM600d(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N03 - SMS608
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM608c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM608c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N04 - SMS610
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM610a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM610a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM610b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM610b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM610c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM610c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N05 - SMS612
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM612a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM612a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM612b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM612b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM612c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM612c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N06 - SMS614
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM614a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM614a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM614b(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM614b(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM614c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM614c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N07 - SMS616
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM616a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM616a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM616c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM616c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N08 - SMS620
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM620c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM620c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    Range(G_RR_Range_SM620d(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM620d(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N09 - SMS626
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM626a(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM626a(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N10 - SMS640
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM640d(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM640d(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N11 - SMS642
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_SM642c(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_SM642c(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N12 - V22120
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22120(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22120(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N13 - V22200
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22200(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22200(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N14 - V22255
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22255(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22255(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N15 - V22260
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22260(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22260(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N16 - V22261
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22261(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22261(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N17 - V22276
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22276(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22276(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N18 - V22300
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22300(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22300(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N19 - V22310
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22310(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22310(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N20 - V22400
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22400(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22400(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N21 - V22461
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V22461(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V22461(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N22 - V23200
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V23200(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V23200(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N23 - V23210
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_V23210(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_V23210(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - N24 - Header
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_RR_Range_Header(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S44", G_RR_Range_Header(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_RR_Value_GA6Fin, G_RR_Value_SM600a, G_RR_Value_SM600b, G_RR_Value_SM600c, G_RR_Value_SM600d, G_RR_Value_SM608c, G_RR_Value_SM610a, G_RR_Value_SM610b, G_RR_Value_SM610c, G_RR_Value_SM612a)
    G_Caller = F9986_Count_Values(G_RR_Value_SM612b, G_RR_Value_SM612c, G_RR_Value_SM614a, G_RR_Value_SM614b, G_RR_Value_SM614c, G_RR_Value_SM616a, G_RR_Value_SM616c, G_RR_Value_SM620c, G_RR_Value_SM620d, G_RR_Value_SM626a)
    G_Caller = F9986_Count_Values(G_RR_Value_SM640d, G_RR_Value_SM642c, G_RR_Value_V22120, G_RR_Value_V22200, G_RR_Value_V22255, G_RR_Value_V22260, G_RR_Value_V22261, G_RR_Value_V22276, G_RR_Value_V22300, G_RR_Value_V22310)
    G_Caller = F9986_Count_Values(G_RR_Value_V22400, G_RR_Value_V22461, G_RR_Value_V23200, G_RR_Value_V23210, G_RR_Value_Header, "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc44 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S44", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4420_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4420_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module45_VROL"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_VR_Range_Text_A(7)                                 As String           '       Row 16 heading - for AP and CEMEA (Russia)
Global G_VR_Range_Text_B(7)                                 As String           '       Row 17 heading - for CEMEA (non-Russia)
Global G_VR_Range_Text_C(7)                                 As String           '       Row 19 heading - for AP and CEMEA (Russia)
Global G_VR_Range_Text_D(7)                                 As String           '       Row 20 heading - for CEMEA (non-Russia)
Global G_VR_Range_Auth_O(7)                                 As String           '       Auth Only
Global G_VR_Range_VRL100(7)                                 As String           ' P01 - Send Only Request For Copy and Fee Collection/Funds Disbursement from VROL?
Global G_VR_Range_VRL200(7)                                 As String           ' P02 - Specify your VROL Routing ID for BASE II Financials
Global G_VR_Range_VRL210(7)                                 As String           ' P03 - Send and Receive VCR Dispute Financials through VROL?
Global G_VR_Range_VRL220(7)                                 As String           ' P04 - Send and Receive Request for Copy through VROL?
Global G_VR_Range_VRL230(7)                                 As String           ' P05 - Send and Receive Fee Collection and Funds Disbursement through VROL?
Global G_VR_Range_VRL300(7)                                 As String           ' P06 - Do you want to receive Dispute Financial TC33 Advice as originator of VCR disputes?
Global G_VR_Range_VRL310(7)                                 As String           ' P07 - Do you want to receive Dispute Financial TC33 Advice as recipient of VCR disputes?
Global G_VR_Range_VRL315(7)                                 As String           ' P08 - If you have selected Dispute Financial TC33 Advice as originator of VCR disputes, do you want to include source currency amount data?
Global G_VR_Range_VRL320(7)                                 As String           ' P09 - If you have selected Dispute Financial TC33 Advice as recipient of VCR disputes, do you want to include destination currency code and destination amount fields?
'
Global G_VR_Range_Full_S(7)                                 As String           '       Full Service
Global G_VR_Range_VRL400(7)                                 As String           ' P10 - Specify your SMS VROL Routing ID (example: 7xxxxx)
Global G_VR_Range_APBA15(7)                                 As String           ' P11 - Select Visa Claims Resolution (VCR) Advice Retrieval option (?)
Global G_VR_Range_VRL490(7)                                 As String           ' P12 - If you have selected Dispute Financial TC33 Advice as originator of VCR disputes, do you want to include source settlement amount data?
Global G_VR_Range_VRL510(7)                                 As String           ' P13 - If you have selected Dispute Financial TC33 Advice as recipient of VCR disputes, do you want to include destination currency code and destination amount fields?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_VR_Value_VRL100                                    As String           ' P01 - Send Only Request For Copy and Fee Collection/Funds Disbursement from VROL?
Global G_VR_Value_VRL200                                    As String           ' P02 - Specify your VROL Routing ID for BASE II Financials
Global G_VR_Value_VRL210                                    As String           ' P03 - Send and Receive VCR Dispute Financials through VROL?
Global G_VR_Value_VRL220                                    As String           ' P04 - Send and Receive Request for Copy through VROL?
Global G_VR_Value_VRL230                                    As String           ' P05 - Send and Receive Fee Collection and Funds Disbursement through VROL?
Global G_VR_Value_VRL300                                    As String           ' P06 - Do you want to receive Dispute Financial TC33 Advice as originator of VCR disputes?
Global G_VR_Value_VRL310                                    As String           ' P07 - Do you want to receive Dispute Financial TC33 Advice as recipient of VCR disputes?
Global G_VR_Value_VRL315                                    As String           ' P08 - If you have selected Dispute Financial TC33 Advice as originator of VCR disputes, do you want to include source currency amount data?
Global G_VR_Value_VRL320                                    As String           ' P09 - If you have selected Dispute Financial TC33 Advice as recipient of VCR disputes, do you want to include destination currency code and destination amount fields?
Global G_VR_Value_VRL400                                    As String           ' P10 - Specify your SMS VROL Routing ID (example: 7xxxxx)
Global G_VR_Value_APBA15                                    As String           ' P11 - Select Visa Claims Resolution (VCR) Advice Retrieval option (?)
Global G_VR_Value_VRL490                                    As String           ' P12 - If you have selected Dispute Financial TC33 Advice as originator of VCR disputes, do you want to include source settlement amount data?
Global G_VR_Value_VRL510                                    As String           ' P13 - If you have selected Dispute Financial TC33 Advice as recipient of VCR disputes, do you want to include destination currency code and destination amount fields?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc45_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4500_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 45 - Visa Resolve Online (VROL) Financials
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    ' - 5 = Section header rows
    ' - 6 = Section footer rows
    '                       Entire    |                         Question  |                         Answer                         Help      |                         Info      |                         Header    |                         Footer
    '-------------------------------------------------------'-------------------'------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    G_VR_Range_Text_A(0) = "A016:A016": G_VR_Range_Text_A(1) = "         ": G_VR_Range_Text_A(2) = "    ": G_VR_Range_Text_A(3) = "         ": G_VR_Range_Text_A(4) = "         ": G_VR_Range_Text_A(5) = "         ": G_VR_Range_Text_A(6) = "         "   ' Heading on Row 16
    G_VR_Range_Text_B(0) = "A017:A017": G_VR_Range_Text_B(1) = "         ": G_VR_Range_Text_B(2) = "    ": G_VR_Range_Text_B(3) = "         ": G_VR_Range_Text_B(4) = "         ": G_VR_Range_Text_B(5) = "         ": G_VR_Range_Text_B(6) = "         "   ' Heading on Row 17
    G_VR_Range_Text_C(0) = "A019:A019": G_VR_Range_Text_C(1) = "         ": G_VR_Range_Text_C(2) = "    ": G_VR_Range_Text_C(3) = "         ": G_VR_Range_Text_C(4) = "         ": G_VR_Range_Text_C(5) = "         ": G_VR_Range_Text_C(6) = "         "   ' Heading on Row 19
    G_VR_Range_Text_D(0) = "A020:A020": G_VR_Range_Text_D(1) = "         ": G_VR_Range_Text_D(2) = "    ": G_VR_Range_Text_D(3) = "         ": G_VR_Range_Text_D(4) = "         ": G_VR_Range_Text_D(5) = "         ": G_VR_Range_Text_D(6) = "         "   ' Heading on Row 20
                                                                                                                                                                                                                                                            '
    G_VR_Range_Auth_O(0) = "A018:A052": G_VR_Range_Auth_O(1) = "         ": G_VR_Range_Auth_O(2) = "    ": G_VR_Range_Auth_O(3) = "         ": G_VR_Range_Auth_O(4) = "         ": G_VR_Range_Auth_O(5) = "         ": G_VR_Range_Auth_O(6) = "         "   ' Auth Only
                                                                                                                                                                                                                                                            '
    G_VR_Range_VRL100(0) = "A023:A026": G_VR_Range_VRL100(1) = "A023:A026": G_VR_Range_VRL100(2) = "K026": G_VR_Range_VRL100(3) = "         ": G_VR_Range_VRL100(4) = "         ": G_VR_Range_VRL100(5) = "K018:K022": G_VR_Range_VRL100(6) = "K038:K038"   ' P01
                                                                                                                                                                                                                                                            '
    G_VR_Range_VRL200(0) = "A027:A037": G_VR_Range_VRL200(1) = "A027:A037": G_VR_Range_VRL200(2) = "K030": G_VR_Range_VRL200(3) = "         ": G_VR_Range_VRL200(4) = "         ": G_VR_Range_VRL200(5) = "K018:K022": G_VR_Range_VRL200(6) = "K038:K038"   ' P02
    G_VR_Range_VRL210(0) = "A027:A037": G_VR_Range_VRL210(1) = "A027:A037": G_VR_Range_VRL210(2) = "K033": G_VR_Range_VRL210(3) = "         ": G_VR_Range_VRL210(4) = "         ": G_VR_Range_VRL210(5) = "K018:K022": G_VR_Range_VRL210(6) = "K038:K038"   ' P03
    G_VR_Range_VRL220(0) = "A027:A037": G_VR_Range_VRL220(1) = "A027:A037": G_VR_Range_VRL220(2) = "K035": G_VR_Range_VRL220(3) = "         ": G_VR_Range_VRL220(4) = "         ": G_VR_Range_VRL220(5) = "K018:K022": G_VR_Range_VRL220(6) = "K038:K038"   ' P04
    G_VR_Range_VRL230(0) = "A027:A037": G_VR_Range_VRL230(1) = "A027:A037": G_VR_Range_VRL230(2) = "K037": G_VR_Range_VRL230(3) = "         ": G_VR_Range_VRL230(4) = "         ": G_VR_Range_VRL230(5) = "K018:K022": G_VR_Range_VRL230(6) = "K038:K038"   ' P05
                                                                                                                                                                                                                                                            '
    G_VR_Range_VRL300(0) = "A041:A042": G_VR_Range_VRL300(1) = "A041:A042": G_VR_Range_VRL300(2) = "K042": G_VR_Range_VRL300(3) = "         ": G_VR_Range_VRL300(4) = "         ": G_VR_Range_VRL300(5) = "K039:K040": G_VR_Range_VRL300(6) = "K052:K052"   ' P06
    G_VR_Range_VRL310(0) = "A043:A045": G_VR_Range_VRL310(1) = "A043:A045": G_VR_Range_VRL310(2) = "K044": G_VR_Range_VRL310(3) = "         ": G_VR_Range_VRL310(4) = "         ": G_VR_Range_VRL310(5) = "K039:K040": G_VR_Range_VRL310(6) = "K052:K052"   ' P07
    G_VR_Range_VRL315(0) = "A046:A048": G_VR_Range_VRL315(1) = "A046:A048": G_VR_Range_VRL315(2) = "K048": G_VR_Range_VRL315(3) = "         ": G_VR_Range_VRL315(4) = "         ": G_VR_Range_VRL315(5) = "K039:K040": G_VR_Range_VRL315(6) = "K052:K052"   ' P08
    G_VR_Range_VRL320(0) = "A049:A051": G_VR_Range_VRL320(1) = "A049:A051": G_VR_Range_VRL320(2) = "K051": G_VR_Range_VRL320(3) = "         ": G_VR_Range_VRL320(4) = "         ": G_VR_Range_VRL320(5) = "K039:K040": G_VR_Range_VRL320(6) = "K052:K052"   ' P09
                                                                                                                                                                                                                                                            '
    G_VR_Range_Full_S(0) = "A053:A069": G_VR_Range_Full_S(1) = "         ": G_VR_Range_Full_S(2) = "    ": G_VR_Range_Full_S(3) = "         ": G_VR_Range_Full_S(4) = "         ": G_VR_Range_Full_S(5) = "         ": G_VR_Range_Full_S(6) = "         "   ' Full Service
                                                                                                                                                                                                                                                            '
    G_VR_Range_VRL400(0) = "A055:A057": G_VR_Range_VRL400(1) = "A055:A057": G_VR_Range_VRL400(2) = "K057": G_VR_Range_VRL400(3) = "         ": G_VR_Range_VRL400(4) = "         ": G_VR_Range_VRL400(5) = "K053:K054": G_VR_Range_VRL400(6) = "K058:K058"   ' P10
                                                                                                                                                                                                                                                            '
    G_VR_Range_APBA15(0) = "A061:A062": G_VR_Range_APBA15(1) = "A061:A062": G_VR_Range_APBA15(2) = "K062": G_VR_Range_APBA15(3) = "         ": G_VR_Range_APBA15(4) = "         ": G_VR_Range_APBA15(5) = "K059:K060": G_VR_Range_APBA15(6) = "K069:K069"   ' P11
    G_VR_Range_VRL490(0) = "A063:A065": G_VR_Range_VRL490(1) = "A063:A065": G_VR_Range_VRL490(2) = "K065": G_VR_Range_VRL490(3) = "         ": G_VR_Range_VRL490(4) = "         ": G_VR_Range_VRL490(5) = "K059:K060": G_VR_Range_VRL490(6) = "K069:K069"   ' P12
    G_VR_Range_VRL510(0) = "A066:A068": G_VR_Range_VRL510(1) = "A066:A068": G_VR_Range_VRL510(2) = "K068": G_VR_Range_VRL510(3) = "         ": G_VR_Range_VRL510(4) = "         ": G_VR_Range_VRL510(5) = "K059:K060": G_VR_Range_VRL510(6) = "K069:K069"   ' P13
    
    G_Svc45_Final_Row_No = 69
    
End Function                                                                    ' of F4500_Initialisation
Function F4510_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 45 - Visa Resolve Online (VROL) Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4520_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S45", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S45", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S45", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S45", "SF")
    End If
    
End Function                                                                    ' of F4510_Validate
Function F4520_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4520_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4520_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc45).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P01 - Send Only Request For Copy and Fee Collection/Funds Disbursement from VROL?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL100(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL100(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P02 - Specify your VROL Routing ID for BASE II Financials
    ' - Validation: Empty or six-digit decimal starting with "8"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9928_Validate_RID(G_VR_Value_VRL200, "8")                       ' Validation of RID
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VR_Range_VRL200(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL200(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VR_Range_VRL200(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL200(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P03 - Send and Receive VCR Dispute Financials through VROL?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL210(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL210(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P04 - Send and Receive Request for Copy through VROL?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL220(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL220(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P05 - Send and Receive Fee Collection and Funds Disbursement through VROL?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL230(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL230(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P06 - Do you want to receive Dispute Financial TC33 Advice as originator of VCR disputes?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL300(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL300(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P07 - Do you want to receive Dispute Financial TC33 Advice as recipient of VCR disputes?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL310(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL310(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P08 - If you have selected Dispute Financial TC33 Advice as originator of VCR disputes, do you want to include source currency amount data?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL315(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL315(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P09 - If you have selected Dispute Financial TC33 Advice as recipient of VCR disputes, do you want to include destination currency code and destination amount fields?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL320(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL320(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P10 - Specify your SMS VROL Routing ID (example: 7xxxxx)
    ' - Validation: Empty or six-digit decimal starting with "7"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9928_Validate_RID(G_VR_Value_VRL400, "7")                       ' Validation of RID
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VR_Range_VRL400(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL400(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VR_Range_VRL400(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL400(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P11 - Select Visa Claims Resolution (VCR) Advice Retrieval option
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_APBA15(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_APBA15(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P12 - If you have selected Dispute Financial TC33 Advice as originator of VCR disputes, do you want to include source settlement amount data?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL490(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL490(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - P13 - If you have selected Dispute Financial TC33 Advice as recipient of VCR disputes, do you want to include destination currency code and destination amount fields?
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_VRL510(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S45", G_VR_Range_VRL510(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_VR_Value_VRL100, G_VR_Value_VRL200, G_VR_Value_VRL210, G_VR_Value_VRL220, G_VR_Value_VRL230, G_VR_Value_VRL300, G_VR_Value_VRL310, G_VR_Value_VRL315, G_VR_Value_VRL320, G_VR_Value_VRL400)
    G_Caller = F9986_Count_Values(G_VR_Value_APBA15, G_VR_Value_VRL490, G_VR_Value_VRL510, "", "", "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc45 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S45", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4520_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4520_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module46_VSS"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_VS_Range_TISH_1(4)                                 As String           ' S01 - Is the BIN to settle in a New or Existing International Settlement Hierarchy?
Global G_VS_Range_ISCY_1(4)                                 As String           ' S02 - Please provide the International Settlement Currency
Global G_VS_Range_RSRE_1(4)                                 As String           ' S03 - Please provide the Rollup Settlement Reporting Entity (SRE)
Global G_VS_Range_ISCY_2(4)                                 As String           ' S04 - If there is a change in the International Settlement Currency of an existing Hierarch
Global G_VS_Range_NNSS_1(6)                                 As String           ' S05 - Do you want this BIN to participate in NNSS?
Global G_VS_Range_TNNS_1(4)                                 As String           ' S06 - Is the BIN to settle in a New or Existing National Net Settlement Hierarchy?
Global G_VS_Range_RSRE_2(4)                                 As String           ' S07 - Please provide the Rollup Settlement Reporting Entity (SRE)
Global G_VS_Range_RFTC_1(4)                                 As String           ' S08 - Specify which Report Format you want to receive
Global G_VS_Range_ACIB_1(6)                                 As String           ' S09 - Please enter any additional CIBs to which you want to send additional copies of your
Global G_VS_Range_ACIB_2(6)                                 As String           ' S09 - Please enter any additional CIBs to which you want to send additional copies of your
Global G_VS_Range_ACIB_3(6)                                 As String           ' S09 - Please enter any additional CIBs to which you want to send additional copies of your
Global G_VS_Range_RSOB_1(4)                                 As String           ' S10 - Specify the Report Sort Order for BIN level SRE
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_VS_Value_TISH_1                                    As String           ' S01 - Is the BIN to settle in a New or Existing International Settlement Hierarchy?
Global G_VS_Value_ISCY_1                                    As String           ' S02 - Please provide the International Settlement Currency
Global G_VS_Value_RSRE_1                                    As String           ' S03 - Please provide the Rollup Settlement Reporting Entity (SRE)
Global G_VS_Value_ISCY_2                                    As String           ' S04 - If there is a change in the International Settlement Currency of an existing Hierarch
Global G_VS_Value_NNSS_1                                    As String           ' S05 - Do you want this BIN to participate in NNSS?
Global G_VS_Value_TNNS_1                                    As String           ' S06 - Is the BIN to settle in a New or Existing National Net Settlement Hierarchy?
Global G_VS_Value_RSRE_2                                    As String           ' S07 - Please provide the Rollup Settlement Reporting Entity (SRE)
Global G_VS_Value_RFTC_1                                    As String           ' S08 - Specify which Report Format you want to receive
Global G_VS_Value_ACIB_1                                    As String           ' S09 - Please enter any additional CIBs to which you want to send additional copies of your
Global G_VS_Value_ACIB_2                                    As String           ' S09 - Please enter any additional CIBs to which you want to send additional copies of your
Global G_VS_Value_ACIB_3                                    As String           ' S09 - Please enter any additional CIBs to which you want to send additional copies of your
Global G_VS_Value_RSOB_1                                    As String           ' S10 - Specify the Report Sort Order for BIN level SRE
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc46_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' For checking cell value changes
Global G_Range_TISH_1                                       As Range
Global G_Value_TISH_1                                       As String
Global G_Range_NNSS_1                                       As Range
Global G_Value_NNSS_1                                       As String
Global G_Range_TNNS_1                                       As Range
Global G_Value_TNNS_1                                       As String
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4600_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 46 - Settlement and VSS Reporting
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    ' - 5 = Note for AP
    ' - 6 = Note for CEMEA
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VS_Range_TISH_1(0) = "A18:A19": G_VS_Range_TISH_1(1) = "A18:A19": G_VS_Range_TISH_1(2) = "K19": G_VS_Range_TISH_1(3) = "       ": G_VS_Range_TISH_1(4) = ""
    G_VS_Range_ISCY_1(0) = "A20:A23": G_VS_Range_ISCY_1(1) = "A20:A23": G_VS_Range_ISCY_1(2) = "K23": G_VS_Range_ISCY_1(3) = "       ": G_VS_Range_ISCY_1(4) = ""
    G_VS_Range_RSRE_1(0) = "A24:A31": G_VS_Range_RSRE_1(1) = "A24:A31": G_VS_Range_RSRE_1(2) = "K27": G_VS_Range_RSRE_1(3) = "       ": G_VS_Range_RSRE_1(4) = ""
    G_VS_Range_ISCY_2(0) = "A24:A31": G_VS_Range_ISCY_2(1) = "A24:A31": G_VS_Range_ISCY_2(2) = "K31": G_VS_Range_ISCY_2(3) = "       ": G_VS_Range_ISCY_2(4) = ""
    G_VS_Range_NNSS_1(0) = "A35:A37": G_VS_Range_NNSS_1(1) = "A35:A37": G_VS_Range_NNSS_1(2) = "K35": G_VS_Range_NNSS_1(3) = "       ": G_VS_Range_NNSS_1(4) = "": G_VS_Range_NNSS_1(5) = "A36:A36": G_VS_Range_NNSS_1(6) = "A37:A37"
    G_VS_Range_TNNS_1(0) = "A38:A39": G_VS_Range_TNNS_1(1) = "A38:A39": G_VS_Range_TNNS_1(2) = "K39": G_VS_Range_TNNS_1(3) = "       ": G_VS_Range_TNNS_1(4) = ""
    G_VS_Range_RSRE_2(0) = "A40:A44": G_VS_Range_RSRE_2(1) = "A40:A44": G_VS_Range_RSRE_2(2) = "K43": G_VS_Range_RSRE_2(3) = "       ": G_VS_Range_RSRE_2(4) = ""
    G_VS_Range_RFTC_1(0) = "A48:A48": G_VS_Range_RFTC_1(1) = "A48:A48": G_VS_Range_RFTC_1(2) = "K48": G_VS_Range_RFTC_1(3) = "       ": G_VS_Range_RFTC_1(4) = ""
    G_VS_Range_ACIB_1(0) = "A49:A51": G_VS_Range_ACIB_1(1) = "A49:A50": G_VS_Range_ACIB_1(2) = "K50": G_VS_Range_ACIB_1(3) = "       ": G_VS_Range_ACIB_1(4) = "": G_VS_Range_ACIB_1(5) = "       ": G_VS_Range_ACIB_1(6) = "A51:A51"
    G_VS_Range_ACIB_2(0) = "A49:A51": G_VS_Range_ACIB_2(1) = "A49:A50": G_VS_Range_ACIB_2(2) = "L50": G_VS_Range_ACIB_2(3) = "       ": G_VS_Range_ACIB_2(4) = "": G_VS_Range_ACIB_2(5) = "       ": G_VS_Range_ACIB_2(6) = "A51:A51"
    G_VS_Range_ACIB_3(0) = "A49:A51": G_VS_Range_ACIB_3(1) = "A49:A50": G_VS_Range_ACIB_3(2) = "M50": G_VS_Range_ACIB_3(3) = "       ": G_VS_Range_ACIB_3(4) = "": G_VS_Range_ACIB_3(5) = "       ": G_VS_Range_ACIB_3(6) = "A51:A51"
    G_VS_Range_RSOB_1(0) = "A52:A53": G_VS_Range_RSOB_1(1) = "A52:A53": G_VS_Range_RSOB_1(2) = "K53": G_VS_Range_RSOB_1(3) = "       ": G_VS_Range_RSOB_1(4) = ""
    
    G_Svc46_Final_Row_No = 92       ' including list of reports
    
End Function                                                                    ' of F4600_Initialisation
Function F4610_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 46 - VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4620_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S46", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S46", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S46", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S46", "SF")
    End If
    
End Function                                                                    ' of F4610_Validate
Function F4620_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4620_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4620_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc46).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set standard formatting of answer cells (Change Request C87)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc46, G_VS_Range_ISCY_1(G_Answer), "Ccy")    ' S02
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc46, G_VS_Range_RSRE_1(G_Answer), "")       ' S03
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc46, G_VS_Range_ISCY_2(G_Answer), "Ccy")    ' S04
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc46, G_VS_Range_RSRE_2(G_Answer), "")       ' S07
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S01 - TISH1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VS_Range_TISH_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S46", G_VS_Range_TISH_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S02 - ISCY1
    ' - Validation: Empty or three-digit number with leading zeros when needed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_ISCY_1(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9925_Validate_CCY(G_VS_Value_ISCY_1)                        ' Validation of CCY code
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_VS_Range_ISCY_1(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_1(G_Answer), "")
            ActiveCell.Value = Format(G_VS_Value_ISCY_1, "000")
        
        Case Else                                                               ' Error
            Range(G_VS_Range_ISCY_1(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_1(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S01 with S02 - ISCY1 with TISH1
    ' - Validation: If TISH1 = "New" then ISCY1 cannot be blank (C/R A39)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_ISCY_1(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(G_VS_Value_TISH_1) = "New" And _
           Trim(G_VS_Value_ISCY_1) = "" Then
            
            Range(G_VS_Range_ISCY_1(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_1(G_Answer), "E5")
        
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S03 - RSRE1
    ' - Validation: Empty or ten-digit number with leading zeros when needed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_RSRE_1(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9927_Validate_SRE(G_VS_Value_RSRE_1)                        ' Validation of SRE
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_VS_Range_RSRE_1(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_1(G_Answer), "")
            ActiveCell.Value = Format(G_VS_Value_RSRE_1, "0000000000")
        
        Case Else                                                               ' Error
            Range(G_VS_Range_RSRE_1(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_1(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S03 with S01 - RSRE1 with TISH1
    ' - Validation: If TISH1 = "Existing" then RSRE1 cannot be blank (C/R A02)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_RSRE_1(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(G_VS_Value_TISH_1) = "Existing" And _
           Trim(G_VS_Value_RSRE_1) = "" Then
            
            Range(G_VS_Range_RSRE_1(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_1(G_Answer), "E5")
        
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S04 - ISCY2
    ' - Validation: Empty or three-digit number with leading zeros when needed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_ISCY_2(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9925_Validate_CCY(G_VS_Value_ISCY_2)                        ' Validation of CCY code
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_VS_Range_ISCY_2(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_2(G_Answer), "")
            ActiveCell.Value = Format(G_VS_Value_ISCY_2, "000")
        
        Case Else                                                               ' Error
            Range(G_VS_Range_ISCY_2(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_ISCY_2(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S05 - NNSS1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VS_Range_NNSS_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S46", G_VS_Range_NNSS_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S06 - TNNS1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VS_Range_TNNS_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S46", G_VS_Range_TNNS_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S07 - RSRE2
    ' - Validation: Empty or ten-digit number with leading zeros when needed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_RSRE_2(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9927_Validate_SRE(G_VS_Value_RSRE_2)                        ' Validation of SRE
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_VS_Range_RSRE_2(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_2(G_Answer), "")
            ActiveCell.Value = Format(G_VS_Value_RSRE_2, "0000000000")
        
        Case Else                                                               ' Error
            Range(G_VS_Range_RSRE_2(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_2(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S07 with S06 - RSRE2 with TNNS1
    ' - Validation: If TNNS1 = "Existing" then RSRE2 cannot be blank (C/R A02)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_VS_Range_RSRE_2(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(G_VS_Value_TNNS_1) = "Existing" And _
           Trim(G_VS_Value_RSRE_2) = "" Then
            
            Range(G_VS_Range_RSRE_2(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSRE_2(G_Answer), "E5")
        
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S08 - RFTC1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VS_Range_RFTC_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S46", G_VS_Range_RFTC_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S09 - ACIB1
    ' - Validation: Empty or six-digit decimal
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_VS_Value_ACIB_1)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VS_Range_ACIB_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_1(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VS_Range_ACIB_1(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_1(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S09 - ACIB2
    ' - Validation: Empty or six-digit decimal
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_VS_Value_ACIB_2)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VS_Range_ACIB_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_2(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VS_Range_ACIB_2(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_2(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S09 - ACIB3
    ' - Validation: Empty or six-digit decimal
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_VS_Value_ACIB_3)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_VS_Range_ACIB_3(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_3(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_VS_Range_ACIB_3(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S46", G_VS_Range_ACIB_3(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - S10 - RSOB1
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VS_Range_RSOB_1(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S46", G_VS_Range_RSOB_1(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Ensure that the VSS report comments are the correct height
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For G_Svc99_Row_No = 58 To 91                                               ' Read all rows in the VSS reports table
        Set Cmt = Range("C" & G_Svc99_Row_No).Comment
        If Cmt Is Nothing Then
            
        Else
            Range("C" & G_Svc99_Row_No).Select
            G_Comment = Cmt.Text
            G_Caller = F1400_Add_Remove_Comment()
        End If
    Next G_Svc99_Row_No
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_VS_Value_TISH_1, G_VS_Value_ISCY_1, G_VS_Value_RSRE_1, G_VS_Value_ISCY_2, G_VS_Value_NNSS_1, G_VS_Value_TNNS_1, G_VS_Value_RSRE_2, G_VS_Value_RFTC_1, G_VS_Value_ACIB_1, G_VS_Value_ACIB_2)
    G_Caller = F9986_Count_Values(G_VS_Value_ACIB_3, G_VS_Value_RSOB_1, "", "", "", "", "", "", "", "")
    
    ' And the list of reports too...
    For G_Svc99_Row_No = 58 To 91                                               ' Read all rows in the VSS reports table
        If Trim(Worksheets(G_Tab_Svc46).Range("K" & G_Svc99_Row_No).Value) <> "" Then G_CWD_Count = G_CWD_Count + 1
    Next G_Svc99_Row_No
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc46 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S46", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4620_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4620_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module47_Clearing"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_CL_Range_CIBCIB(4)                                 As String           ' Q01 - Specify the CIB for the Clearing BIN(s)
Global G_CL_Range_CC_PBD(4)                                 As String           ' Q02 - Do you want to participate in Basic Data (Level I/II) program for this BIN's Account
Global G_CL_Range_TCR4_A(4)                                 As String           ' Q03 - Do you want to receive the Surcharge Amount in TCR 4, which contains the access fee
Global G_CL_Range_TCR5_I(4)                                 As String           ' Q04 - Do you want to receive Interchange Fee (IRF) Data for the transaction in TCR 5?
Global G_CL_Range_VROLRI(4)                                 As String           ' Q05 - Specify your VROL Routing ID for Non-Financials
Global G_CL_Range_TCRD_R(6)                                 As String           ' Q06 - Do you want to receive the recipient name for OCTs in the TCR D?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_CL_Value_CIBCIB                                    As String           ' Q01 - Specify the CIB for the Clearing BIN(s)
Global G_CL_Value_CC_PBD                                    As String           ' Q02 - Do you want to participate in Basic Data (Level I/II) program for this BIN's Account
Global G_CL_Value_TCR4_A                                    As String           ' Q03 - Do you want to receive the Surcharge Amount in TCR 4, which contains the access fee
Global G_CL_Value_TCR5_I                                    As String           ' Q04 - Do you want to receive Interchange Fee (IRF) Data for the transaction in TCR 5?
Global G_CL_Value_VROLRI                                    As String           ' Q05 - Specify your VROL Routing ID for Non-Financials
Global G_CL_Value_TCRD_R                                    As String           ' Q06 - Do you want to receive the recipient name for OCTs in the TCR D?
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc47_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4700_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 47 - Clearing
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    ' - 5 = Section heading / AP
    ' - 6 = Section ending  / CEMEA
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CL_Range_CIBCIB(0) = "A18:A19": G_CL_Range_CIBCIB(1) = "A18:A19": G_CL_Range_CIBCIB(2) = "K18": G_CL_Range_CIBCIB(3) = "       ": G_CL_Range_CIBCIB(4) = ""
    G_CL_Range_CC_PBD(0) = "A20:A22": G_CL_Range_CC_PBD(1) = "A20:A22": G_CL_Range_CC_PBD(2) = "K21": G_CL_Range_CC_PBD(3) = "       ": G_CL_Range_CC_PBD(4) = ""
    G_CL_Range_TCR4_A(0) = "A23:A24": G_CL_Range_TCR4_A(1) = "A23:A24": G_CL_Range_TCR4_A(2) = "K24": G_CL_Range_TCR4_A(3) = "       ": G_CL_Range_TCR4_A(4) = ""
    G_CL_Range_TCR5_I(0) = "A25:A26": G_CL_Range_TCR5_I(1) = "A25:A26": G_CL_Range_TCR5_I(2) = "K26": G_CL_Range_TCR5_I(3) = "       ": G_CL_Range_TCR5_I(4) = ""
    G_CL_Range_VROLRI(0) = "A30:A31": G_CL_Range_VROLRI(1) = "A30:A31": G_CL_Range_VROLRI(2) = "K30": G_CL_Range_VROLRI(3) = "       ": G_CL_Range_VROLRI(4) = ""
    G_CL_Range_TCRD_R(0) = "A35:A35": G_CL_Range_TCRD_R(1) = "A35:A35": G_CL_Range_TCRD_R(2) = "K35": G_CL_Range_TCRD_R(3) = "       ": G_CL_Range_TCRD_R(4) = "": G_CL_Range_TCRD_R(5) = "A33:A34": G_CL_Range_TCRD_R(6) = "A36"
    
    G_Svc47_Final_Row_No = 36
    
End Function                                                                    ' of F4700_Initialisation
Function F4710_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 47 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4720_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S47", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S47", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S47", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S47", "SF")
    End If
    
End Function                                                                    ' of F4710_Validate
Function F4720_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4720_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4720_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc47).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set standard formatting of answer cells
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc47, G_CL_Range_CIBCIB(G_Answer), "")           ' Q01
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc47, G_CL_Range_VROLRI(G_Answer), "")           ' Q05
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - Q01 - CIB
    ' - Validation: Empty or six-digit CIB - Empty value is not permitted for Installation without Copy BIN (C/R A29 - Issue 159)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CL_Range_CIBCIB(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9912_Validate_BIN(G_CL_Value_CIBCIB)                        ' Validation of BIN
        
        If G_Caller = "E1" Then                                                 ' Blank CIB
            If G_FC_Value_UpdTyp = "Installation" Then                              ' Installation
                If G_FC_Value_CpyBIN = "" Then                                          ' Installation without Copy BIN
                    G_Caller = "E5"                                                         ' CIB cannot be blank
                End If
            End If
        End If
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_CL_Range_CIBCIB(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S47", G_CL_Range_CIBCIB(G_Answer), "")
            ActiveCell.Value = Format(G_CL_Value_CIBCIB, "000")
        
        Case Else                                                               ' Error
            Range(G_CL_Range_CIBCIB(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S47", G_CL_Range_CIBCIB(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - Q02 - CC PBD
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CL_Range_CC_PBD(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S47", G_CL_Range_CC_PBD(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - Q03 - TCR4_A
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CL_Range_TCR4_A(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S47", G_CL_Range_TCR4_A(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - Q04 - TCR5_I
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CL_Range_TCR5_I(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S47", G_CL_Range_TCR5_I(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - Q05 - VROL RI
    ' - Validation: Empty or six-digit RID starting with "8"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CL_Range_VROLRI(G_Answer)).EntireRow.Hidden = False Then
        
        G_Caller = F9928_Validate_RID(G_CL_Value_VROLRI, "8")                   ' Validation of RID
        
        Select Case G_Caller
        
        Case "", "E1"                                                           ' No error or empty cell
            Range(G_CL_Range_VROLRI(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
            G_Caller = F0100_Find_Comment("S47", G_CL_Range_VROLRI(G_Answer), "")
        
        Case Else                                                               ' Error
            Range(G_CL_Range_VROLRI(G_Answer)).Select                           ' Select cell
            Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
            G_Err_Count = G_Err_Count + 1                                       ' Count the error
            G_Caller = F0100_Find_Comment("S47", G_CL_Range_VROLRI(G_Answer), G_Caller)
        
        End Select
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - Q06 - TCRD_R
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CL_Range_TCRD_R(G_Answer)).EntireRow.Hidden = False Then
        Range(G_CL_Range_TCRD_R(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S47", G_CL_Range_TCRD_R(G_Answer), "")   ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_CL_Value_CIBCIB, G_CL_Value_CC_PBD, G_CL_Value_TCR4_A, G_CL_Value_TCR5_I, G_CL_Value_VROLRI, G_CL_Value_TCRD_R, "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc47 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S47", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4720_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4720_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module48_CIB"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_CB_Range_CIBCIB(4)                                 As String           ' R01 - Specify your Application Processor (six-digit BIN)
Global G_CB_Range_ExiNew(4)                                 As String           ' R02 - For new Application Processor, will it point to an existing or a new Endpoint?
Global G_CB_Range_ExiB2P(4)                                 As String           ' R03 - BASE II Processor Name (up to ten alphanumeric characters)
Global G_CB_Range_ExiCIB(4)                                 As String           ' R04 - Existing Application Processor that is receiving BASE II file at this Endpoint (a six-digit numeric value)
Global G_CB_Range_NewB2P(4)                                 As String           ' R05 - BASE II Processor Name (up to ten alphanumeric characters)
Global G_CB_Range_NewFQD(4)                                 As String           ' R06 - Fully Qualified Domain Name (FQDN) for EAS Access Point Only
Global G_CB_Range_OP_SYS(4)                                 As String           ' R07 - Which Operating System do you use?
Global G_CB_Range_EP_TYP(4)                                 As String           ' R08 - Which end-point connection will your application processor use?
Global G_CB_Range_SEC_CD(4)                                 As String           ' R09 - Specify your chosen eight-character alphanumeric security code
Global G_CB_Range_TC56_C(4)                                 As String           ' R10 - Do you want to subscribe to the Currency Conversion Rate file (TC56)?
Global G_CB_Range_CFTDAP(4)                                 As String           '       AP: NOTE: For DEX Endpoints, additional Visa configuration is required in your OFD Gateway to enable the receipt of Customized File Type separately from the UNDIF file.
Global G_CB_Range_CFTDCE(4)                                 As String           '       CE: NOTE: For DEX Endpoints, a Project is required in order to setup additional Visa configuration in your OFD Gateway to enable the receipt of Customized File Type separately from the UNDIF file.
Global G_CB_Range_TC56_S(4)                                 As String           ' R11 - Do you want to receive TC56 in a separate file type (CURR)?
Global G_CB_Range_EP4CBX(4)                                 As String           ' R12 - Do you want to receive Edit Package code updates in a separate file (EP4CB)?
Global G_CB_Range_DFT_33(4)                                 As String           ' R13 - Do you want to receive TC33 Dispute Financial Advice in a separate file type (DFT33)?
Global G_CB_Range_GMT_00(4)                                 As String           '       Indicate your preferred collection schedule (between 16:00 |fffd| 09:00 GMT).
Global G_CB_Range_GMT_AD(4)                                 As String           '       Indicate whether you would like additional collection times in GMT.
Global G_CB_Range_GMT_1A(4)                                 As String           ' R14 - Additional collection time - action
Global G_CB_Range_GMT_1T(4)                                 As String           ' R14 - Additional collection time - time
Global G_CB_Range_GMT_2A(4)                                 As String           ' R15 - Additional collection time - action
Global G_CB_Range_GMT_2T(4)                                 As String           ' R15 - Additional collection time - time
Global G_CB_Range_GMT_3A(4)                                 As String           ' R16 - Additional collection time - action
Global G_CB_Range_GMT_3T(4)                                 As String           ' R16 - Additional collection time - time
Global G_CB_Range_GMT_4A(4)                                 As String           ' R17 - Additional collection time - action
Global G_CB_Range_GMT_4T(4)                                 As String           ' R17 - Additional collection time - time
Global G_CB_Range_GMT_5A(4)                                 As String           ' R18 - Additional collection time - action
Global G_CB_Range_GMT_5T(4)                                 As String           ' R18 - Additional collection time - time
Global G_CB_Range_Note_E(4)                                 As String           '       Note for EAS
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_CB_Value_CIBCIB                                    As String           ' R01 - Specify your Application Processor (six-digit BIN)
Global G_CB_Value_ExiNew                                    As String           ' R02 - For new Application Processor, will it point to an existing or a new Endpoint?
Global G_CB_Value_ExiB2P                                    As String           ' R03 - BASE II Processor Name (up to ten alphanumeric characters)
Global G_CB_Value_ExiCIB                                    As String           ' R04 - Existing Application Processor that is receiving BASE II file at this Endpoint (a six-digit numeric value)
Global G_CB_Value_NewB2P                                    As String           ' R05 - BASE II Processor Name (up to ten alphanumeric characters)
Global G_CB_Value_NewFQD                                    As String           ' R06 - Fully Qualified Domain Name (FQDN) for EAS Access Point Only
Global G_CB_Value_OP_SYS                                    As String           ' R07 - Which Operating System do you use?
Global G_CB_Value_EP_TYP                                    As String           ' R08 - Which end-point connection will your application processor use?
Global G_CB_Value_SEC_CD                                    As String           ' R09 - Specify your chosen eight-character alphanumeric security code
Global G_CB_Value_TC56_C                                    As String           ' R10 - Do you want to subscribe to the Currency Conversion Rate file (TC56)?
Global G_CB_Value_TC56_S                                    As String           ' R11 - Do you want to receive TC56 in a separate file type (CURR)?
Global G_CB_Value_EP4CBX                                    As String           ' R12 - Do you want to receive Edit Package code updates in a separate file (EP4CB)?
Global G_CB_Value_DFT_33                                    As String           ' R13 - Do you want to receive TC33 Dispute Financial Advice in a separate file type (DFT33)?
Global G_CB_Value_GMT_00                                    As String           '       Indicate your preferred collection schedule (between 16:00 |fffd| 09:00 GMT).
Global G_CB_Value_GMT_AD                                    As String           '       Indicate whether you would like additional collection times in GMT.
Global G_CB_Value_GMT_1A                                    As String           ' R14 - Additional collection time - action
Global G_CB_Value_GMT_1T                                    As String           ' R14 - Additional collection time - time
Global G_CB_Value_GMT_2A                                    As String           ' R15 - Additional collection time - action
Global G_CB_Value_GMT_2T                                    As String           ' R15 - Additional collection time - time
Global G_CB_Value_GMT_3A                                    As String           ' R16 - Additional collection time - action
Global G_CB_Value_GMT_3T                                    As String           ' R16 - Additional collection time - time
Global G_CB_Value_GMT_4A                                    As String           ' R17 - Additional collection time - action
Global G_CB_Value_GMT_4T                                    As String           ' R17 - Additional collection time - time
Global G_CB_Value_GMT_5A                                    As String           ' R18 - Additional collection time - action
Global G_CB_Value_GMT_5T                                    As String           ' R18 - Additional collection time - time
Global G_CB_Value_Note_E                                    As String           '       Note for EAS
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc48_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4800_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 48 - Application Processor / CIB
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CB_Range_CIBCIB(0) = "A17:A18": G_CB_Range_CIBCIB(1) = "A17:A18": G_CB_Range_CIBCIB(2) = "K18": G_CB_Range_CIBCIB(3) = "       ": G_CB_Range_CIBCIB(4) = "" ' R01
    G_CB_Range_ExiNew(0) = "A19:A20": G_CB_Range_ExiNew(1) = "A19:A20": G_CB_Range_ExiNew(2) = "K20": G_CB_Range_ExiNew(3) = "       ": G_CB_Range_ExiNew(4) = "" ' R02
    G_CB_Range_ExiB2P(0) = "A21:A26": G_CB_Range_ExiB2P(1) = "A21:A26": G_CB_Range_ExiB2P(2) = "K24": G_CB_Range_ExiB2P(3) = "       ": G_CB_Range_ExiB2P(4) = "" ' R03
    G_CB_Range_ExiCIB(0) = "A21:A26": G_CB_Range_ExiCIB(1) = "A21:A26": G_CB_Range_ExiCIB(2) = "K26": G_CB_Range_ExiCIB(3) = "       ": G_CB_Range_ExiCIB(4) = "" ' R04
    G_CB_Range_NewB2P(0) = "A27:A32": G_CB_Range_NewB2P(1) = "A27:A32": G_CB_Range_NewB2P(2) = "K30": G_CB_Range_NewB2P(3) = "       ": G_CB_Range_NewB2P(4) = "" ' R05
    G_CB_Range_NewFQD(0) = "A27:A32": G_CB_Range_NewFQD(1) = "A27:A32": G_CB_Range_NewFQD(2) = "I32": G_CB_Range_NewFQD(3) = "       ": G_CB_Range_NewFQD(4) = "" ' R06
    G_CB_Range_OP_SYS(0) = "A33:A34": G_CB_Range_OP_SYS(1) = "A33:A34": G_CB_Range_OP_SYS(2) = "K34": G_CB_Range_OP_SYS(3) = "       ": G_CB_Range_OP_SYS(4) = "" ' R07
    G_CB_Range_EP_TYP(0) = "A35:A36": G_CB_Range_EP_TYP(1) = "A35:A36": G_CB_Range_EP_TYP(2) = "K36": G_CB_Range_EP_TYP(3) = "       ": G_CB_Range_EP_TYP(4) = "" ' R08
    G_CB_Range_SEC_CD(0) = "A37:A38": G_CB_Range_SEC_CD(1) = "A37:A38": G_CB_Range_SEC_CD(2) = "K38": G_CB_Range_SEC_CD(3) = "       ": G_CB_Range_SEC_CD(4) = "" ' R09
    G_CB_Range_TC56_C(0) = "A39:A40": G_CB_Range_TC56_C(1) = "A39:A40": G_CB_Range_TC56_C(2) = "K40": G_CB_Range_TC56_C(3) = "       ": G_CB_Range_TC56_C(4) = "" ' R10
    G_CB_Range_CFTDAP(0) = "A43:A43": G_CB_Range_CFTDAP(1) = "A43:A43": G_CB_Range_CFTDAP(2) = "   ": G_CB_Range_CFTDAP(3) = "       ": G_CB_Range_CFTDAP(4) = "" ' Note only
    G_CB_Range_CFTDCE(0) = "A44:A44": G_CB_Range_CFTDCE(1) = "A44:A44": G_CB_Range_CFTDCE(2) = "   ": G_CB_Range_CFTDCE(3) = "       ": G_CB_Range_CFTDCE(4) = "" ' Note only
    G_CB_Range_TC56_S(0) = "A45:A46": G_CB_Range_TC56_S(1) = "A45:A46": G_CB_Range_TC56_S(2) = "K46": G_CB_Range_TC56_S(3) = "       ": G_CB_Range_TC56_S(4) = "" ' R11
    G_CB_Range_EP4CBX(0) = "A47:A48": G_CB_Range_EP4CBX(1) = "A47:A48": G_CB_Range_EP4CBX(2) = "K48": G_CB_Range_EP4CBX(3) = "       ": G_CB_Range_EP4CBX(4) = "" ' R12
    G_CB_Range_DFT_33(0) = "A49:A50": G_CB_Range_DFT_33(1) = "A49:A50": G_CB_Range_DFT_33(2) = "K50": G_CB_Range_DFT_33(3) = "       ": G_CB_Range_DFT_33(4) = "" ' R13
    G_CB_Range_GMT_00(0) = "A53:A53": G_CB_Range_GMT_00(1) = "A53:A53": G_CB_Range_GMT_00(2) = "   ": G_CB_Range_GMT_00(3) = "       ": G_CB_Range_GMT_00(4) = "" ' Note only
    G_CB_Range_GMT_AD(0) = "A54:A54": G_CB_Range_GMT_AD(1) = "A54:A54": G_CB_Range_GMT_AD(2) = "   ": G_CB_Range_GMT_AD(3) = "       ": G_CB_Range_GMT_AD(4) = "" ' Note only
    G_CB_Range_GMT_1A(0) = "A55:A63": G_CB_Range_GMT_1A(1) = "A57:A57": G_CB_Range_GMT_1A(2) = "K57": G_CB_Range_GMT_1A(3) = "       ": G_CB_Range_GMT_1A(4) = "" ' R14
    G_CB_Range_GMT_1T(0) = "A55:A63": G_CB_Range_GMT_1T(1) = "A57:A57": G_CB_Range_GMT_1T(2) = "L57": G_CB_Range_GMT_1T(3) = "       ": G_CB_Range_GMT_1T(4) = "" ' R14
    G_CB_Range_GMT_2A(0) = "A55:A63": G_CB_Range_GMT_2A(1) = "A58:A58": G_CB_Range_GMT_2A(2) = "K58": G_CB_Range_GMT_2A(3) = "       ": G_CB_Range_GMT_2A(4) = "" ' R15
    G_CB_Range_GMT_2T(0) = "A55:A63": G_CB_Range_GMT_2T(1) = "A58:A58": G_CB_Range_GMT_2T(2) = "L58": G_CB_Range_GMT_2T(3) = "       ": G_CB_Range_GMT_2T(4) = "" ' R15
    G_CB_Range_GMT_3A(0) = "A55:A63": G_CB_Range_GMT_3A(1) = "A59:A59": G_CB_Range_GMT_3A(2) = "K59": G_CB_Range_GMT_3A(3) = "       ": G_CB_Range_GMT_3A(4) = "" ' R16
    G_CB_Range_GMT_3T(0) = "A55:A63": G_CB_Range_GMT_3T(1) = "A59:A59": G_CB_Range_GMT_3T(2) = "L59": G_CB_Range_GMT_3T(3) = "       ": G_CB_Range_GMT_3T(4) = "" ' R16
    G_CB_Range_GMT_4A(0) = "A55:A63": G_CB_Range_GMT_4A(1) = "A60:A60": G_CB_Range_GMT_4A(2) = "K60": G_CB_Range_GMT_4A(3) = "       ": G_CB_Range_GMT_4A(4) = "" ' R17
    G_CB_Range_GMT_4T(0) = "A55:A63": G_CB_Range_GMT_4T(1) = "A60:A60": G_CB_Range_GMT_4T(2) = "L60": G_CB_Range_GMT_4T(3) = "       ": G_CB_Range_GMT_4T(4) = "" ' R17
    G_CB_Range_GMT_5A(0) = "A55:A63": G_CB_Range_GMT_5A(1) = "A61:A61": G_CB_Range_GMT_5A(2) = "K61": G_CB_Range_GMT_5A(3) = "       ": G_CB_Range_GMT_5A(4) = "" ' R18
    G_CB_Range_GMT_5T(0) = "A55:A63": G_CB_Range_GMT_5T(1) = "A61:A61": G_CB_Range_GMT_5T(2) = "L61": G_CB_Range_GMT_5T(3) = "       ": G_CB_Range_GMT_5T(4) = "" ' R18
    G_CB_Range_Note_E(0) = "A55:A63": G_CB_Range_Note_E(1) = "A62:A63": G_CB_Range_Note_E(2) = "   ": G_CB_Range_Note_E(3) = "       ": G_CB_Range_Note_E(4) = "" ' Note only
    
    G_Svc48_Final_Row_No = 64
    
End Function                                                                    ' of F4800_Initialisation
Function F4810_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 48 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4820_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S48", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S48", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S48", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S48", "SF")
    End If
    
End Function                                                                    ' of F4810_Validate
Function F4820_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4820_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4820_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc48).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set standard formatting of answer cells
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc48, G_CB_Range_CIBCIB(G_Answer), "")           ' R01
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc48, G_CB_Range_ExiB2P(G_Answer), "")           ' R03
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc48, G_CB_Range_ExiCIB(G_Answer), "")           ' R04
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc48, G_CB_Range_NewB2P(G_Answer), "")           ' R05
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc48, "I32:K32", "")                             ' R06 (Merged cells)
    G_Caller = F9984_Format_Answer_Cell(G_Tab_Svc48, G_CB_Range_SEC_CD(G_Answer), "")           ' R09
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R01 - CIB
    ' - Validation: Empty or six-digit CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_CB_Value_CIBCIB)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CB_Range_CIBCIB(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_CIBCIB(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CB_Range_CIBCIB(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_CIBCIB(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R02 - Existing / New
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_ExiNew(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiNew(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R03 - BASE II Processor name
    ' - Validation: Empty or up to ten alphanumeric characters
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9939_Validate_B2P(G_CB_Value_ExiB2P)                            ' Validation of B2P
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CB_Range_ExiB2P(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiB2P(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CB_Range_ExiB2P(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiB2P(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R04 - CIB
    ' - Validation: Empty or six-digit CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9912_Validate_BIN(G_CB_Value_ExiCIB)                            ' Validation of BIN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CB_Range_ExiCIB(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiCIB(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CB_Range_ExiCIB(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_ExiCIB(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R05 - BASE II Processor name
    ' - Validation: Empty or up to ten alphanumeric characters
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9939_Validate_B2P(G_CB_Value_NewB2P)                            ' Validation of B2P
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CB_Range_NewB2P(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_NewB2P(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CB_Range_NewB2P(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_NewB2P(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R06 - Fully-Qualified Domain Name
    ' - Validation: Empty or up to forty alphanumeric characters and full stops and hyphens
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9940_Validate_FQD(G_CB_Value_NewFQD)                            ' Validation of FQDN
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CB_Range_NewFQD(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_NewFQD(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CB_Range_NewFQD(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_NewFQD(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R07 - Operating System
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_OP_SYS(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_OP_SYS(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R08 - End-Point Connection Type
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_EP_TYP(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_EP_TYP(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R09 - Security Code
    ' - Validation: Empty or eight-character alphanumeric code (convert to upper case first)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_SEC_CD(G_Answer)).Value = UCase(Range(G_CB_Range_SEC_CD(G_Answer)).Value)
    G_CB_Value_SEC_CD = Range(G_CB_Range_SEC_CD(G_Answer)).Value
    
    G_Caller = F9929_Validate_SEC(G_CB_Value_SEC_CD)                            ' Validation of Security Code
    
    Select Case G_Caller
    
    Case "", "E1"                                                               ' No error or empty cell
        Range(G_CB_Range_SEC_CD(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_SEC_CD(G_Answer), "")
    
    Case Else                                                                   ' Error
        Range(G_CB_Range_SEC_CD(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_SEC_CD(G_Answer), G_Caller)
    
    End Select
    
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R10 - TC56 C
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_TC56_C(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_TC56_C(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R11 - TC56 S
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_TC56_S(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_TC56_S(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R12 - EP4CB File required
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_EP4CBX(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_EP4CBX(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R13 - Separate File DFT33
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_CB_Range_DFT_33(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S48", G_CB_Range_DFT_33(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R14 - Additional collection time 1 - Action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_1A(G_Answer)).EntireRow.Hidden = False Then
        Range(G_CB_Range_GMT_1A(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1A(G_Answer), "")   ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R14 - Additional collection time 1 - Time
    ' - Validation: Empty or time (hh:mm)- cannot be empty if action is non-blank
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_1T(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(Range(G_CB_Range_GMT_1T(G_Answer)).Value) <> "" Then            ' Action has been specified
            
            G_Caller = F9930_Validate_Tim(G_CB_Value_GMT_1T)                    ' Validation of time
            
            Select Case G_Caller
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_1T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_1T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1T(G_Answer), G_Caller)
            
            End Select
            
        Else                                                                    ' Action has not been specified
            
            Select Case Range(G_CB_Range_GMT_1T(G_Answer)).Value                ' Check that the time has not been specified
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_1T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_1T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_1T(G_Answer), "E9")
            
            End Select
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R15 - Additional collection time 2 - Action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_2A(G_Answer)).EntireRow.Hidden = False Then
        Range(G_CB_Range_GMT_2A(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_2A(G_Answer), "")   ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R15 - Additional collection time 2 - Time
    ' - Validation: Empty or time (hh:mm)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_2T(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(Range(G_CB_Range_GMT_2T(G_Answer)).Value) <> "" Then            ' Action has been specified
            
            G_Caller = F9930_Validate_Tim(G_CB_Value_GMT_2T)                    ' Validation of time
            
            Select Case G_Caller
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_2T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_2T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_2T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_2T(G_Answer), G_Caller)
            
            End Select
            
        Else                                                                    ' Action has not been specified
            
            Select Case Range(G_CB_Range_GMT_2T(G_Answer)).Value                ' Check that the time has not been specified
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_2T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_2T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_2T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_2T(G_Answer), "E9")
            
            End Select
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R16 - Additional collection time 3 - Action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_3A(G_Answer)).EntireRow.Hidden = False Then
        Range(G_CB_Range_GMT_3A(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_3A(G_Answer), "")   ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R16 - Additional collection time 3 - Time
    ' - Validation: Empty or time (hh:mm)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_3T(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(Range(G_CB_Range_GMT_3T(G_Answer)).Value) <> "" Then            ' Action has been specified
            
            G_Caller = F9930_Validate_Tim(G_CB_Value_GMT_3T)                    ' Validation of time
            
            Select Case G_Caller
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_3T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_3T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_3T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_3T(G_Answer), G_Caller)
            
            End Select
            
        Else                                                                    ' Action has not been specified
            
            Select Case Range(G_CB_Range_GMT_3T(G_Answer)).Value                ' Check that the time has not been specified
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_3T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_3T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_3T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_3T(G_Answer), "E9")
            
            End Select
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R17 - Additional collection time 4 - Action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_4A(G_Answer)).EntireRow.Hidden = False Then
        Range(G_CB_Range_GMT_4A(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_4A(G_Answer), "")   ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R17 - Additional collection time 4 - Time
    ' - Validation: Empty or time (hh:mm)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_4T(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(Range(G_CB_Range_GMT_4T(G_Answer)).Value) <> "" Then            ' Action has been specified
            
            G_Caller = F9930_Validate_Tim(G_CB_Value_GMT_4T)                    ' Validation of time
            
            Select Case G_Caller
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_4T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_4T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_4T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_4T(G_Answer), G_Caller)
            
            End Select
            
        Else                                                                    ' Action has not been specified
            
            Select Case Range(G_CB_Range_GMT_4T(G_Answer)).Value                ' Check that the time has not been specified
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_4T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_4T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_4T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_4T(G_Answer), "E9")
            
            End Select
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R18 - Additional collection time 5 - Action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_5A(G_Answer)).EntireRow.Hidden = False Then
        Range(G_CB_Range_GMT_5A(G_Answer)).Select                               ' Select cell
        Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
        G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_5A(G_Answer), "")   ' Obtain comment
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - R18 - Additional collection time 5 - Time
    ' - Validation: Empty or time (hh:mm)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Range(G_CB_Range_GMT_5T(G_Answer)).EntireRow.Hidden = False Then
        
        If Trim(Range(G_CB_Range_GMT_5T(G_Answer)).Value) <> "" Then            ' Action has been specified
            
            G_Caller = F9930_Validate_Tim(G_CB_Value_GMT_5T)                    ' Validation of time
            
            Select Case G_Caller
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_5T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_5T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_5T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_5T(G_Answer), G_Caller)
            
            End Select
            
        Else                                                                    ' Action has not been specified
            
            Select Case Range(G_CB_Range_GMT_5T(G_Answer)).Value                ' Check that the time has not been specified
            
            Case ""                                                             ' No error
                Range(G_CB_Range_GMT_5T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_5T(G_Answer), "")
            
            Case Else                                                           ' Error
                Range(G_CB_Range_GMT_5T(G_Answer)).Select                       ' Select cell
                Selection.Interior.Color = RGB(G_Colour_Cell_Yell_R, G_Colour_Cell_Yell_G, G_Colour_Cell_Yell_B)
                G_Err_Count = G_Err_Count + 1                                   ' Count the error
                G_Caller = F0100_Find_Comment("S48", G_CB_Range_GMT_5T(G_Answer), "E9")
            
            End Select
        End If
        
        G_Caller = F1400_Add_Remove_Comment()                                   ' Remove and add any comment
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_CB_Value_CIBCIB, G_CB_Value_ExiNew, G_CB_Value_ExiB2P, G_CB_Value_ExiCIB, G_CB_Value_NewB2P, G_CB_Value_NewFQD, G_CB_Value_OP_SYS, G_CB_Value_EP_TYP, G_CB_Value_SEC_CD, G_CB_Value_TC56_C)
    G_Caller = F9986_Count_Values(G_CB_Value_TC56_S, G_CB_Value_EP4CBX, G_CB_Value_DFT_33, G_CB_Value_GMT_1A, G_CB_Value_GMT_1T, G_CB_Value_GMT_2A, G_CB_Value_GMT_2T, G_CB_Value_GMT_3A, G_CB_Value_GMT_3T, G_CB_Value_GMT_4A)
    G_Caller = F9986_Count_Values(G_CB_Value_GMT_4T, G_CB_Value_GMT_5A, G_CB_Value_GMT_5T, "", "", "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc48 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S48", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4820_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4820_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module49_Reports"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell addresses on this worksheet
Global G_VR_Range_A_5100(4)                                 As String           ' T01 - APR5100
Global G_VR_Range_BR_112(4)                                 As String           ' T02 - BIOSR112
Global G_VR_Range_BR_121(4)                                 As String           ' T03 - BIOSR121
Global G_VR_Range_BR_320(4)                                 As String           ' T04 - BIOSR320
Global G_VR_Range_BR_450(4)                                 As String           ' T05 - BIOSR450
Global G_VR_Range_BR_460(4)                                 As String           ' T06 - BIOSR460
Global G_VR_Range_BR_600(4)                                 As String           ' T07 - BIOSR600
Global G_VR_Range_BR_610(4)                                 As String           ' T08 - BIOSR610
Global G_VR_Range_C1100F(4)                                 As String           ' T09 - CVV1100
Global G_VR_Range_C1100A(4)                                 As String           ' T09 - CVV1100
Global G_VR_Range_C6110F(4)                                 As String           ' T10 - CVV6110
Global G_VR_Range_C6110A(4)                                 As String           ' T10 - CVV6110
Global G_VR_Range_C1130F(4)                                 As String           ' T11 - CVV1130
Global G_VR_Range_C1130A(4)                                 As String           ' T11 - CVV1130
Global G_VR_Range_F11Act(4)                                 As String           ' T12 - FRDDTC11 - Action
Global G_VR_Range_F11Fmt(4)                                 As String           ' T12 - FRDDTC11 - Report Format
Global G_VR_Range_F12Act(4)                                 As String           ' T13 - FRDDTW12 - Action
Global G_VR_Range_F12Fmt(4)                                 As String           ' T13 - FRDDTW12 - Report Format
Global G_VR_Range_F13Act(4)                                 As String           ' T14 - FRDDTR13 - Action
Global G_VR_Range_F13Fmt(4)                                 As String           ' T14 - FRDDTR13 - Report Format
Global G_VR_Range_F14Act(4)                                 As String           ' T15 - FRDDTS14 - Action
Global G_VR_Range_F14Fmt(4)                                 As String           ' T15 - FRDDTS14 - Report Format
Global G_VR_Range_F15Act(4)                                 As String           ' T16 - FRDDTS15 - Action
Global G_VR_Range_F15Fmt(4)                                 As String           ' T16 - FRDDTS15 - Report Format
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Cell contents  on this worksheet
Global G_VR_Value_A_5100                                    As String           ' T01 - APR5100
Global G_VR_Value_BR_112                                    As String           ' T02 - BIOSR112
Global G_VR_Value_BR_121                                    As String           ' T03 - BIOSR121
Global G_VR_Value_BR_320                                    As String           ' T04 - BIOSR320
Global G_VR_Value_BR_450                                    As String           ' T05 - BIOSR450
Global G_VR_Value_BR_460                                    As String           ' T06 - BIOSR460
Global G_VR_Value_BR_600                                    As String           ' T07 - BIOSR600
Global G_VR_Value_BR_610                                    As String           ' T08 - BIOSR610
Global G_VR_Value_C1100F                                    As String           ' T09 - CVV1100
Global G_VR_Value_C1100A                                    As String           ' T09 - CVV1100
Global G_VR_Value_C6110F                                    As String           ' T10 - CVV6110
Global G_VR_Value_C6110A                                    As String           ' T10 - CVV6110
Global G_VR_Value_C1130F                                    As String           ' T11 - CVV1130
Global G_VR_Value_C1130A                                    As String           ' T11 - CVV1130
Global G_VR_Value_F11Act                                    As String           ' T12 - FRDDTC11 - Action
Global G_VR_Value_F11Fmt                                    As String           ' T12 - FRDDTC11 - Report Format
Global G_VR_Value_F12Act                                    As String           ' T13 - FRDDTW12 - Action
Global G_VR_Value_F12Fmt                                    As String           ' T13 - FRDDTW12 - Report Format
Global G_VR_Value_F13Act                                    As String           ' T14 - FRDDTR13 - Action
Global G_VR_Value_F13Fmt                                    As String           ' T14 - FRDDTR13 - Report Format
Global G_VR_Value_F14Act                                    As String           ' T15 - FRDDTS14 - Action
Global G_VR_Value_F14Fmt                                    As String           ' T15 - FRDDTS14 - Report Format
Global G_VR_Value_F15Act                                    As String           ' T16 - FRDDTS15 - Action
Global G_VR_Value_F15Fmt                                    As String           ' T16 - FRDDTS15 - Report Format
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
' Row before the "orange CIQ" row
Global G_Svc49_Final_Row_No                                 As Integer          ' The final "E"-type row before the row containing the "orange CIQ" data at the end
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Function F4900_Initialisation()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Load cell range addresses - Service 49 - Additional Reports
    ' - 0 = entire range
    ' - 1 = question / answer rows
    ' - 2 = answer cell itself
    ' - 3 = help text rows
    ' - 4 = CCM info rows
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_VR_Range_A_5100(0) = "A19:A20": G_VR_Range_A_5100(1) = "A20:A20": G_VR_Range_A_5100(2) = "L20": G_VR_Range_A_5100(3) = "       ": G_VR_Range_A_5100(4) = "       "
    G_VR_Range_BR_112(0) = "A25:A32": G_VR_Range_BR_112(1) = "A26:A26": G_VR_Range_BR_112(2) = "L26": G_VR_Range_BR_112(3) = "       ": G_VR_Range_BR_112(4) = "       "
    G_VR_Range_BR_121(0) = "A25:A32": G_VR_Range_BR_121(1) = "A27:A27": G_VR_Range_BR_121(2) = "L27": G_VR_Range_BR_121(3) = "       ": G_VR_Range_BR_121(4) = "       "
    G_VR_Range_BR_320(0) = "A25:A32": G_VR_Range_BR_320(1) = "A28:A28": G_VR_Range_BR_320(2) = "L28": G_VR_Range_BR_320(3) = "       ": G_VR_Range_BR_320(4) = "       "
    G_VR_Range_BR_450(0) = "A25:A32": G_VR_Range_BR_450(1) = "A29:A29": G_VR_Range_BR_450(2) = "L29": G_VR_Range_BR_450(3) = "       ": G_VR_Range_BR_450(4) = "       "
    G_VR_Range_BR_460(0) = "A25:A32": G_VR_Range_BR_460(1) = "A30:A30": G_VR_Range_BR_460(2) = "L30": G_VR_Range_BR_460(3) = "       ": G_VR_Range_BR_460(4) = "       "
    G_VR_Range_BR_600(0) = "A25:A32": G_VR_Range_BR_600(1) = "A31:A31": G_VR_Range_BR_600(2) = "L31": G_VR_Range_BR_600(3) = "       ": G_VR_Range_BR_600(4) = "       "
    G_VR_Range_BR_610(0) = "A25:A32": G_VR_Range_BR_610(1) = "A32:A35": G_VR_Range_BR_610(2) = "L32": G_VR_Range_BR_610(3) = "       ": G_VR_Range_BR_610(4) = "       "
    G_VR_Range_C1100F(0) = "A34:A37": G_VR_Range_C1100F(1) = "A35:A35": G_VR_Range_C1100F(2) = "K35": G_VR_Range_C1100F(3) = "       ": G_VR_Range_C1100F(4) = "       "
    G_VR_Range_C1100A(0) = "A34:A37": G_VR_Range_C1100A(1) = "A35:A35": G_VR_Range_C1100A(2) = "L35": G_VR_Range_C1100A(3) = "       ": G_VR_Range_C1100A(4) = "       "
    G_VR_Range_C6110F(0) = "A34:A37": G_VR_Range_C6110F(1) = "A36:A36": G_VR_Range_C6110F(2) = "K36": G_VR_Range_C6110F(3) = "       ": G_VR_Range_C6110F(4) = "       "
    G_VR_Range_C6110A(0) = "A34:A37": G_VR_Range_C6110A(1) = "A36:A36": G_VR_Range_C6110A(2) = "L36": G_VR_Range_C6110A(3) = "       ": G_VR_Range_C6110A(4) = "       "
    G_VR_Range_C1130F(0) = "A34:A37": G_VR_Range_C1130F(1) = "A37:A37": G_VR_Range_C1130F(2) = "K37": G_VR_Range_C1130F(3) = "       ": G_VR_Range_C1130F(4) = "       "
    G_VR_Range_C1130A(0) = "A34:A37": G_VR_Range_C1130A(1) = "A37:A37": G_VR_Range_C1130A(2) = "L37": G_VR_Range_C1130A(3) = "       ": G_VR_Range_C1130A(4) = "       "
    G_VR_Range_F11Act(0) = "A39:A44": G_VR_Range_F11Act(1) = "A40:A40": G_VR_Range_F11Act(2) = "L40": G_VR_Range_F11Act(3) = "       ": G_VR_Range_F11Act(4) = "       "
    G_VR_Range_F11Fmt(0) = "A39:A44": G_VR_Range_F11Fmt(1) = "A40:A40": G_VR_Range_F11Fmt(2) = "M40": G_VR_Range_F11Fmt(3) = "       ": G_VR_Range_F11Fmt(4) = "       "
    G_VR_Range_F12Act(0) = "A39:A44": G_VR_Range_F12Act(1) = "A41:A41": G_VR_Range_F12Act(2) = "L41": G_VR_Range_F12Act(3) = "       ": G_VR_Range_F12Act(4) = "       "
    G_VR_Range_F12Fmt(0) = "A39:A44": G_VR_Range_F12Fmt(1) = "A41:A41": G_VR_Range_F12Fmt(2) = "M41": G_VR_Range_F12Fmt(3) = "       ": G_VR_Range_F12Fmt(4) = "       "
    G_VR_Range_F13Act(0) = "A39:A44": G_VR_Range_F13Act(1) = "A42:A42": G_VR_Range_F13Act(2) = "L42": G_VR_Range_F13Act(3) = "       ": G_VR_Range_F13Act(4) = "       "
    G_VR_Range_F13Fmt(0) = "A39:A44": G_VR_Range_F13Fmt(1) = "A42:A42": G_VR_Range_F13Fmt(2) = "M42": G_VR_Range_F13Fmt(3) = "       ": G_VR_Range_F13Fmt(4) = "       "
    G_VR_Range_F14Act(0) = "A39:A44": G_VR_Range_F14Act(1) = "A43:A43": G_VR_Range_F14Act(2) = "L43": G_VR_Range_F14Act(3) = "       ": G_VR_Range_F14Act(4) = "       "
    G_VR_Range_F14Fmt(0) = "A39:A44": G_VR_Range_F14Fmt(1) = "A43:A43": G_VR_Range_F14Fmt(2) = "M43": G_VR_Range_F14Fmt(3) = "       ": G_VR_Range_F14Fmt(4) = "       "
    G_VR_Range_F15Act(0) = "A39:A44": G_VR_Range_F15Act(1) = "A44:A44": G_VR_Range_F15Act(2) = "L44": G_VR_Range_F15Act(3) = "       ": G_VR_Range_F15Act(4) = "       "
    G_VR_Range_F15Fmt(0) = "A39:A44": G_VR_Range_F15Fmt(1) = "A44:A44": G_VR_Range_F15Fmt(2) = "M44": G_VR_Range_F15Fmt(3) = "       ": G_VR_Range_F15Fmt(4) = "       "
    
    G_Svc49_Final_Row_No = 45
    
End Function                                                                    ' of F4900_Initialisation
Function F4910_Validate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform validation - Service 49 - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 1 - Load the cell values into the global variables
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1100_Load_Cell_Values()
    If G_Caller = "Error" Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '     Once validated, copy the information to CCData (do this whether or not any validation errors were found)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4920_Validate_Cells()
    If G_Caller = "Error" Then Exit Function
    
    G_Caller = F9800_Copy_to_CCData()
    If G_Caller = "Error" Then Exit Function
    
    If G_Err_Count = 0 Then
        G_Response = F0300_Access_Value("Status", "S49", "U", "SV")             ' Validation successful
        G_Response = F2090_Set_Service_Status("S49", "SV")
    Else
        G_Response = F0300_Access_Value("Status", "S49", "U", "SF")             ' Validation failed
        G_Response = F2090_Set_Service_Status("S49", "SF")
    End If
    
End Function                                                                    ' of F4910_Validate
Function F4920_Validate_Cells()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' 2 - Perform validation of cells on this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F4920_Sheet                                         As String           ' Save the previously active worksheet name
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F4920_Sheet = ActiveSheet.Name                                              ' Save the previously active worksheet name
    Worksheets(G_Tab_Svc49).Activate                                            ' Activate the worksheet for this service
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T01 - APR5100 frequency
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_A_5100(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_A_5100(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T02 - BIOSR112 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_112(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_112(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T03 - BIOSR121 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_121(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_121(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T04 - BIOSR320 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_320(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_320(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T05 - BIOSR450 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_450(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_450(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T06 - BIOSR460 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_460(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_460(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T07 - BIOSR600 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_600(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_600(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T08 - BIOSR610 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_BR_610(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_BR_610(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T09 - CVV1100 frequency
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_C1100F(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1100F(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T09 - CVV1100 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_C1100A(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1100A(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T10 - CVV6110 frequency
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_C6110F(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_C6110F(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T10 - CVV6110 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_C6110A(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_C6110A(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T11 - CVV1130 frequency
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_C1130F(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1130F(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T11 - CVV1130 action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_C1130A(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_C1130A(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T12 - FRDDTC11 - action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F11Act(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F11Act(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T12 - FRDDTC11 - report format
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F11Fmt(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F11Fmt(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T13 - FRDDTW12 - action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F12Act(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F12Act(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T13 - FRDDTW12 - report format
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F12Fmt(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F12Fmt(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T14 - FRDDTR13 - action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F13Act(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F13Act(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T14 - FRDDTR13 - report format
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F13Fmt(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F13Fmt(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T15 - FRDDTS14 - action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F14Act(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F14Act(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T15 - FRDDTS14 - report format
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F14Fmt(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F14Fmt(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T16 - FRDDTS15 - action
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F15Act(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F15Act(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validation - T16 - FRDDTS15 - report format
    ' - No validation needed; value checked by Excel Data List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Range(G_VR_Range_F15Fmt(G_Answer)).Select                                   ' Select cell
    Selection.Interior.Color = RGB(G_Colour_Cell_Grey_R, G_Colour_Cell_Grey_G, G_Colour_Cell_Grey_B)
    G_Caller = F0100_Find_Comment("S49", G_VR_Range_F15Fmt(G_Answer), "")       ' Obtain comment
    G_Caller = F1400_Add_Remove_Comment()                                       ' Remove and add any comment
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count the cells that have values
    ' Check that there is at least one non-empty value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CWD_Count = 0
    
    G_Caller = F9986_Count_Values(G_VR_Value_A_5100, G_VR_Value_BR_112, G_VR_Value_BR_121, G_VR_Value_BR_320, G_VR_Value_BR_450, G_VR_Value_BR_460, G_VR_Value_BR_600, G_VR_Value_BR_610, G_VR_Value_C1100F, G_VR_Value_C1100A)
    G_Caller = F9986_Count_Values(G_VR_Value_C6110F, G_VR_Value_C6110A, G_VR_Value_C1130F, G_VR_Value_C1130A, G_VR_Value_F11Act, G_VR_Value_F11Fmt, G_VR_Value_F12Act, G_VR_Value_F12Fmt, G_VR_Value_F13Act, G_VR_Value_F13Fmt)
    G_Caller = F9986_Count_Values(G_VR_Value_F14Act, G_VR_Value_F14Fmt, G_VR_Value_F15Act, G_VR_Value_F15Fmt, "", "", "", "", "", "")
    
    If G_CWD_Count = 0 Then
        G_Message = G_Tab_Svc49 & vbCr & vbCr & "This service has been selected on the front cover but no data has been entered."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        G_Err_Count = G_Err_Count + 1                                           ' Count the error
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store details of user, date, time, versions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9820_User_to_CCData("S49", "V")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Activate the previously active worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F4920_Sheet).Activate                                            ' Activate the previous worksheet
    
End Function                                                                    ' of F4920_Validate_Cells
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Module98_CCData"
Option Explicit
Global G98_Display                                          As Boolean          ' True = store in CCData, False = remove from CCData
Global G98_Remove                                           As Boolean          ' True = remove embedded blanks
Global G98_Comma                                            As Boolean          ' True = convert comma to full stop
Function F9800_Copy_to_CCData()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This routine copies all of the data to the CCData tab ready for automation to read the data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9800_Svc31                                         As String
    Dim F9800_Svc34                                         As String
    Dim F9800_Svc35                                         As String
    Dim F9800_Svc36                                         As String
    Dim F9800_Svc37                                         As String
    Dim F9800_Svc38                                         As String
    Dim F9800_Svc40                                         As String
    Dim F9800_Svc41                                         As String
    Dim F9800_Svc42                                         As String
    Dim F9800_Svc43                                         As String
    Dim F9800_Svc44                                         As String
    Dim F9800_Svc45                                         As String
    Dim F9800_Svc46                                         As String
    Dim F9800_Svc47                                         As String
    Dim F9800_Svc48                                         As String
    Dim F9800_Svc49                                         As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the CCData worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_CCDat)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(G_Tab_CCDat).Range("B2:V151").ClearContents
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise the Services
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9800_Svc31 = F0300_Access_Value("Status", "S31", "G", "")
    F9800_Svc34 = F0300_Access_Value("Status", "S34", "G", "")
    F9800_Svc35 = F0300_Access_Value("Status", "S35", "G", "")
    F9800_Svc36 = F0300_Access_Value("Status", "S36", "G", "")
    F9800_Svc37 = F0300_Access_Value("Status", "S37", "G", "")
    F9800_Svc38 = F0300_Access_Value("Status", "S38", "G", "")
    F9800_Svc40 = F0300_Access_Value("Status", "S40", "G", "")
    F9800_Svc41 = F0300_Access_Value("Status", "S41", "G", "")
    F9800_Svc42 = F0300_Access_Value("Status", "S42", "G", "")
    F9800_Svc43 = F0300_Access_Value("Status", "S43", "G", "")
    F9800_Svc44 = F0300_Access_Value("Status", "S44", "G", "")
    F9800_Svc45 = F0300_Access_Value("Status", "S45", "G", "")
    F9800_Svc46 = F0300_Access_Value("Status", "S46", "G", "")
    F9800_Svc47 = F0300_Access_Value("Status", "S47", "G", "")
    F9800_Svc48 = F0300_Access_Value("Status", "S48", "G", "")
    F9800_Svc49 = F0300_Access_Value("Status", "S49", "G", "")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise the standard parameters that are referenced by F9811_Copy_One_Range (these are changed below only when non-standard)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G98_Display = True
    G98_Remove = False
    G98_Comma = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Front Cover
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Column = "B"                                                        ' Set the column that is associated with the Service
    G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
    
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_FinNam)             ' A01
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_FinBID)             ' A02
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_FinCon)             ' A03
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_FinMel)             ' A04
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_FinTel)             ' A05
    
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_PrcNam)             ' A06
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_PrcBID)             ' A07
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_PrcCon)             ' A08
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_PrcMel)             ' A09
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_PrcTel)             ' A10
    
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_Region)             ' A12
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_FinCty)             ' A13
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_Enviro)             ' A14
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_MsgCap)             ' A15
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_EffDat)             ' A16
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_UpdTyp)             ' A17
    
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_BusJus)             ' A11
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_PCR_No)             ' A18
    G_Caller = F9811_Copy_One_Range(G_Tab_Cover, G_FC_Range_CpyBIN)             ' A19
    
    G_Caller = F9812_Store_Special()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 32 - Reserved for future use
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Column = "C"                                                        ' Set the column that is associated with the Service
    G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 33 - Reserved for future use
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Column = "D"                                                        ' Set the column that is associated with the Service
    G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 34 - Visa Smart Debit/Credit (VSDC)
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc34, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "E"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBE_3(G_Answer))   ' H01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBE3T(G_Answer))   ' H02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBC_1(G_Answer))   ' H03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBE4a(G_Answer))   ' H04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBE4b(G_Answer))   ' H05
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_01(G_Answer))   ' H06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_01(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_01(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_02(G_Answer))   ' H07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_02(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_02(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_03(G_Answer))   ' H08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_03(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_03(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_04(G_Answer))   ' H09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_04(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_04(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_05(G_Answer))   ' H10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_05(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_05(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_06(G_Answer))   ' H11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_06(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_06(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_07(G_Answer))   ' H12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_07(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_07(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_08(G_Answer))   ' H13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_08(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_08(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_09(G_Answer))   ' H14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_09(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_09(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_10(G_Answer))   ' H15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_10(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_10(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_11(G_Answer))   ' H16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_11(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_11(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_12(G_Answer))   ' H17
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_12(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_12(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_13(G_Answer))   ' H18
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_13(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_13(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_14(G_Answer))   ' H19
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_14(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_14(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_15(G_Answer))   ' H20
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_15(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_15(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_16(G_Answer))   ' H21
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_16(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_16(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_17(G_Answer))   ' H22
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_17(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_17(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_18(G_Answer))   ' H23
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_18(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_18(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_19(G_Answer))   ' H24
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_19(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_19(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_Exp_20(G_Answer))   ' H25
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CVN_20(G_Answer))   '
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_CAM_20(G_Answer))   '
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBE_5(G_Answer))   ' H26
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBG_7(G_Answer))   ' H27
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBG11(G_Answer))   ' H28
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBG12(G_Answer))   ' H29
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABFX_3(G_Answer))   ' H30
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_AGR_PM(G_Answer))   ' H31
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_1(G_Answer))   ' H32
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_2(G_Answer))   ' H33
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_3(G_Answer))   ' H34
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_4(G_Answer))   ' H35
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_5(G_Answer))   ' H36
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_6(G_Answer))   ' H37
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH7a(G_Answer))   ' H38
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH7b(G_Answer))   ' H39
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_8(G_Answer))   ' H40
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH_9(G_Answer))   ' H41
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH10(G_Answer))   ' H42
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH11(G_Answer))   ' H43
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH12(G_Answer))   ' H44
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH13(G_Answer))   ' H45
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH14(G_Answer))   ' H46
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH15(G_Answer))   ' H47
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH16(G_Answer))   ' H48
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH17(G_Answer))   ' H49
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABB18a(G_Answer))   ' H50
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABB18b(G_Answer))   ' H51
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH19(G_Answer))   ' H52
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH20(G_Answer))   ' H53
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH21(G_Answer))   ' H54
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH22(G_Answer))   ' H55
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH23(G_Answer))   ' H56
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBH24(G_Answer))   ' H57
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBI_1(G_Answer))   ' H58
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBI_2(G_Answer))   ' H59
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBI_4(G_Answer))   ' H60
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBI_5(G_Answer))   ' H61
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBK_1(G_Answer))   ' H62
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBK2a(G_Answer))   ' H63
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBK2b(G_Answer))   ' H64
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc34, G_EM_Range_ABBK2c(G_Answer))   ' H65
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 35 - Verified by Visa (VbV)
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc35, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "F"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_ABE_1a(G_Answer))   ' J01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_ABE_1b(G_Answer))   ' J01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_ABE_2a(G_Answer))   ' J02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_ABE_2b(G_Answer))   ' J02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_ABE_3a(G_Answer))   ' J03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_ABE_3b(G_Answer))   ' J03
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_URL_01(G_Answer))   ' J04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_URL_02(G_Answer))   ' J05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_URL_03(G_Answer))   ' J06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc35, G_VV_Range_URL_04(G_Answer))   ' J07
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 36 - CVV / iCVV / CVV2
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc36, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "G"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAA_1(G_Answer))   ' C01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB_2(G_Answer))   ' C02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB6A(G_Answer))   ' C03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB1B(G_Answer))   ' C04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB2B(G_Answer))   ' C05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB6B(G_Answer))   ' C06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB1C(G_Answer))   ' C07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB2C(G_Answer))   ' C08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAB6C(G_Answer))   ' C09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABAE_5(G_Answer))   ' C10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDA_1(G_Answer))   ' C11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDA_2(G_Answer))   ' C12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDA_3(G_Answer))   ' C13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDA_4(G_Answer))   ' C14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDB1A(G_Answer))   ' C15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDB1B(G_Answer))   ' C16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc36, G_CV_Range_ABDB1C(G_Answer))   ' C17
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 37 - PIN Processing
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc37, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "H"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACAX_2(G_Answer))   ' E01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACA_2T(G_Answer))   ' E02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACEX_3(G_Answer))   ' E03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACAX_4(G_Answer))   ' E04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACAX_5(G_Answer))   ' E05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACAX_6(G_Answer))   ' E06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACAX_3(G_Answer))   ' E07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACBX_1(G_Answer))   ' E08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACDX_6(G_Answer))   ' E09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACEX_1(G_Answer))   ' E10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_1(G_Answer))   ' E11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_2(G_Answer))   ' E12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_3(G_Answer))   ' E13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_4(G_Answer))   ' E14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_5(G_Answer))   ' E15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_6(G_Answer))   ' E16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc37, G_PP_Range_ACHQ_7(G_Answer))   ' E17
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 38 - Stand-In Processing (STIP)
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc38, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "I"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q1(G_Answer))   ' G01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q2(G_Answer))   ' G02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q3(G_Answer))   ' G03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q4(G_Answer))   ' G04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q5(G_Answer))   ' G05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q6(G_Answer))   ' G06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q7(G_Answer))   ' G07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGZ_Q8(G_Answer))   ' G08
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGB_Q1(G_Answer))   ' G09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGB_Q2(G_Answer))   ' G10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGB_3a(G_Answer))   ' G11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AGB_3b(G_Answer))   ' G12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AHC_Q4(G_Answer))   ' G13
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AHE_1a(G_Answer))   ' G14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AHE_1b(G_Answer))   ' G15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc38, G_S1_Range_AHE_Q2(G_Answer))   ' G16
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 39 - Reserved for future use
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Column = "J"                                                        ' Set the column that is associated with the Service
    G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 40 - Visa Direct
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc40, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "K"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_APHX_2(G_Answer))   ' K01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_APHX_4(G_Answer))   ' K02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_APHX_6(G_Answer))   ' K03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGKX_1(G_Answer))   ' K04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGKX_2(G_Answer))   ' K05
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_3a(G_Answer))   ' K06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_3b(G_Answer))   ' K07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_3c(G_Answer))   ' K08
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_4a(G_Answer))   ' K09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_4b(G_Answer))   ' K10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_4c(G_Answer))   ' K11
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_5a(G_Answer))   ' K12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_5b(G_Answer))   ' K13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_5c(G_Answer))   ' K14
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_6a(G_Answer))   ' K15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_6b(G_Answer))   ' K16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc40, G_VD_Range_AGK_6c(G_Answer))   ' K17
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 41 - Alternate Authorisation Routing
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc41, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "L"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc41, G_A1_Range_AEU_Q2(G_Answer))   ' M01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc41, G_A1_Range_AEW_Q1(G_Answer))   ' M02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc41, G_A1_Range_AEW_Q2(G_Answer))   ' M03
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 42 - Currency Conversion Options
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc42, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "M"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc42, G_MO_Range_AJAX_1(G_Answer))   ' D01
        
        G98_Comma = True                                                            ' Percentage values
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc42, G_MO_Range_AJAX_2(G_Answer))   ' D02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc42, G_MO_Range_AJAX_4(G_Answer))   ' D03
        G98_Comma = False
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc42, G_MO_Range_AJAX_7(G_Answer))   ' D04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc42, G_MO_Range_AJDX_3(G_Answer))   ' D05
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 43 - Additional Processing Options
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc43, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "N"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_AEOX_8(G_Answer))   ' L01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_AEEX_1(G_Answer))   ' L02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APFX_4(G_Answer))   ' L03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APFX_5(G_Answer))   ' L04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APCA_7(G_Answer))   ' L05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APCA12(G_Answer))   ' L06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APCA_1(G_Answer))   ' L07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_AIAX_1(G_Answer))   ' L08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_AOAX_2(G_Answer))   ' L09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_ADXX_1(G_Answer))   ' L10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_AVXX_3(G_Answer))   ' L11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_AVX_5a(G_Answer))   ' L12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APBA11(G_Answer))   ' L13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APCA13(G_Answer))   ' L14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_ManCas(G_Answer))   ' L15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc43, G_PO_Range_APCA_2(G_Answer))   ' L16
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 44 - SMS Reports and Raw Data
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc44, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "O"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_GA6Fin(G_Answer))   ' N01
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM600a(G_Answer))   ' N02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM600b(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM600c(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM600d(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM608c(G_Answer))   ' N03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM610a(G_Answer))   ' N04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM610b(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM610c(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM612a(G_Answer))   ' N05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM612b(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM612c(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM614a(G_Answer))   ' N06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM614b(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM614c(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM616a(G_Answer))   ' N07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM616c(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM620c(G_Answer))   ' N08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM620d(G_Answer))
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM626a(G_Answer))   ' N09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM640d(G_Answer))   ' N10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_SM642c(G_Answer))   ' N11
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22120(G_Answer))   ' N12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22200(G_Answer))   ' N13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22255(G_Answer))   ' N14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22260(G_Answer))   ' N15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22261(G_Answer))   ' N16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22276(G_Answer))   ' N17
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22300(G_Answer))   ' N18
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22310(G_Answer))   ' N19
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22400(G_Answer))   ' N20
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V22461(G_Answer))   ' N21
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V23200(G_Answer))   ' N22
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_V23210(G_Answer))   ' N23
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc44, G_RR_Range_Header(G_Answer))   ' N24
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 45 - Visa Resolve Online (VROL) Financials
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc45, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "P"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL100(G_Answer))   ' P01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL200(G_Answer))   ' P02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL210(G_Answer))   ' P03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL220(G_Answer))   ' P04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL230(G_Answer))   ' P05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL300(G_Answer))   ' P06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL310(G_Answer))   ' P07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL315(G_Answer))   ' P08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL320(G_Answer))   ' P09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL400(G_Answer))   ' P10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_APBA15(G_Answer))   ' P11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL490(G_Answer))   ' P12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc45, G_VR_Range_VRL510(G_Answer))   ' P13
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 46 - Settlement and VSS Reporting
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc46, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "Q"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_TISH_1(G_Answer))   ' S01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_ISCY_1(G_Answer))   ' S02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_RSRE_1(G_Answer))   ' S03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_ISCY_2(G_Answer))   ' S04
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_NNSS_1(G_Answer))   ' S05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_TNNS_1(G_Answer))   ' S06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_RSRE_2(G_Answer))   ' S07
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_RFTC_1(G_Answer))   ' S08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_ACIB_1(G_Answer))   ' S09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_ACIB_2(G_Answer))   ' S09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_ACIB_3(G_Answer))   ' S09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, G_VS_Range_RSOB_1(G_Answer))   ' S10
        
        For G_Svc99_Row_No = 58 To 91                                               ' Read all rows in the VSS reports table
            G_Caller = F9811_Copy_One_Range(G_Tab_Svc46, "K" & G_Svc99_Row_No)
        Next G_Svc99_Row_No
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 47 - Clearing
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc47, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "R"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc47, G_CL_Range_CIBCIB(G_Answer))   ' Q01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc47, G_CL_Range_CC_PBD(G_Answer))   ' Q02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc47, G_CL_Range_TCR4_A(G_Answer))   ' Q03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc47, G_CL_Range_TCR5_I(G_Answer))   ' Q04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc47, G_CL_Range_VROLRI(G_Answer))   ' Q05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc47, G_CL_Range_TCRD_R(G_Answer))   ' Q06
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 48 - Application Processor / CIB
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc48, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "S"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_CIBCIB(G_Answer))   ' R01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_ExiNew(G_Answer))   ' R02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_ExiB2P(G_Answer))   ' R03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_ExiCIB(G_Answer))   ' R04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_NewB2P(G_Answer))   ' R05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_NewFQD(G_Answer))   ' R06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_OP_SYS(G_Answer))   ' R07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_EP_TYP(G_Answer))   ' R08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_SEC_CD(G_Answer))   ' R09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_TC56_C(G_Answer))   ' R10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_TC56_S(G_Answer))   ' R11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_EP4CBX(G_Answer))   ' R12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_DFT_33(G_Answer))   ' R13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_1A(G_Answer))   ' R14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_1T(G_Answer))   ' R14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_2A(G_Answer))   ' R15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_2T(G_Answer))   ' R15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_3A(G_Answer))   ' R16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_3T(G_Answer))   ' R16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_4A(G_Answer))   ' R17
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_4T(G_Answer))   ' R17
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_5A(G_Answer))   ' R18
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc48, G_CB_Range_GMT_5T(G_Answer))   ' R18
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 49 - Additional Reports
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9800_Svc49, 1) = "S" Then                                          ' If this service has been selected then
        G_CCDat_Column = "T"                                                        ' Set the column that is associated with the Service
        G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
        
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_A_5100(G_Answer))   ' T01
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_112(G_Answer))   ' T02
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_121(G_Answer))   ' T03
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_320(G_Answer))   ' T04
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_450(G_Answer))   ' T05
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_460(G_Answer))   ' T06
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_600(G_Answer))   ' T07
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_BR_610(G_Answer))   ' T08
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_C1100F(G_Answer))   ' T09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_C1100A(G_Answer))   ' T09
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_C6110F(G_Answer))   ' T10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_C6110A(G_Answer))   ' T10
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_C1130F(G_Answer))   ' T11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_C1130A(G_Answer))   ' T11
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F11Act(G_Answer))   ' T12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F11Fmt(G_Answer))   ' T12
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F12Act(G_Answer))   ' T13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F12Fmt(G_Answer))   ' T13
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F13Act(G_Answer))   ' T14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F13Fmt(G_Answer))   ' T14
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F14Act(G_Answer))   ' T15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F14Fmt(G_Answer))   ' T15
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F15Act(G_Answer))   ' T16
        G_Caller = F9811_Copy_One_Range(G_Tab_Svc49, G_VR_Range_F15Fmt(G_Answer))   ' T16
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the data - Service 50 - Reserved for future use
    ' - Always store this data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Column = "U"                                                        ' Set the column that is associated with the Service
    G_CCDat_Row_No = 1                                                          ' Row 1 is headings; data starts at row 2
    
End Function                                                                    ' of F9800_Copy_to_CCData
Function F9811_Copy_One_Range(F9811_Tab, F9811_Range)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy one cell range value into the next position in the CCData List
    ' - G98_Display - True = store in CCData, False = remove from CCData
    ' - G98_Remove  - True = remove embedded blanks
    ' - G98_Comma   - True = convert comma to full stop
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9811_Value                                         As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the value from the referenced cell
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9811_Value = Worksheets(F9811_Tab).Range(F9811_Range).Value
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Remove embedded spaces from a key set value or key check value ("1234 5678 9ABC DEF0" -> "123456789ABCDEF0")
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G98_Remove = True Then
        F9811_Value = F9813_Remove_Spaces(F9811_Value)
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert comma to full stop ("12,345%" -> "12.345%")
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G98_Comma = True Then
        F9811_Value = Replace(F9811_Value, ",", ".")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy the data into CCData
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    
    If G98_Display = True Then
        Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = F9811_Value
    Else
        Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).ClearContents
    End If
    
End Function                                                                    ' of F9811_Copy_One_Range
Function F9812_Store_Special()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Copy the service selections from the Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S31 " & F0300_Access_Value("Status", "S31", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S34 " & F0300_Access_Value("Status", "S34", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S35 " & F0300_Access_Value("Status", "S35", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S36 " & F0300_Access_Value("Status", "S36", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S37 " & F0300_Access_Value("Status", "S37", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S38 " & F0300_Access_Value("Status", "S38", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S40 " & F0300_Access_Value("Status", "S40", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S41 " & F0300_Access_Value("Status", "S41", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S42 " & F0300_Access_Value("Status", "S42", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S43 " & F0300_Access_Value("Status", "S43", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S44 " & F0300_Access_Value("Status", "S44", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S45 " & F0300_Access_Value("Status", "S45", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S46 " & F0300_Access_Value("Status", "S46", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S47 " & F0300_Access_Value("Status", "S47", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S48 " & F0300_Access_Value("Status", "S48", "G", "")
    
    G_CCDat_Row_No = G_CCDat_Row_No + 1
    Worksheets(G_Tab_CCDat).Range(G_CCDat_Column & G_CCDat_Row_No).Value = "S49 " & F0300_Access_Value("Status", "S49", "G", "")
    
End Function                                                                    ' of F9812_Store_Special
Function F9813_Remove_Spaces(F9813_Value)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Remove any embedded spaces from values (this will be required for key sets and for key check values)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9813_Remove_Spaces = Replace(F9813_Value, " ", "")
    
End Function                                                                    ' of F9813_Remove_Spaces
Function F9820_User_to_CCData(F9820_Service, F9820_Action)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the user details in the appropriate CCData area
    ' - F9820_Service       The Service: S31 - S50 or "FC" for special Front-Cover actions
    ' - F9820_Action        The Action:  "S" (Select), "D" (Deselect), "V" (Validate), "R" (Reset Form Data)
    ' - F9820_Action        The Action:  "I" (I Agree), "D" (I Agree reset), "L" (Lock and Save)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9820_Column                                        As String
    Dim F9820_Status                                        As String
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the column
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F9820_Service
    Case "S20":     F9820_Column = "B"
    Case "S31":     F9820_Column = "D"
    Case "S32":     F9820_Column = "C"
    Case "S33":     F9820_Column = "D"
    Case "S34":     F9820_Column = "E"
    Case "S35":     F9820_Column = "F"
    Case "S36":     F9820_Column = "G"
    Case "S37":     F9820_Column = "H"
    Case "S38":     F9820_Column = "I"
    Case "S39":     F9820_Column = "J"
    Case "S40":     F9820_Column = "K"
    Case "S41":     F9820_Column = "L"
    Case "S42":     F9820_Column = "M"
    Case "S43":     F9820_Column = "N"
    Case "S44":     F9820_Column = "O"
    Case "S45":     F9820_Column = "P"
    Case "S46":     F9820_Column = "Q"
    Case "S47":     F9820_Column = "R"
    Case "S48":     F9820_Column = "S"
    Case "S49":     F9820_Column = "T"
    Case "S50":     F9820_Column = "U"
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the CCData worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_CCDat)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Build the status (Front Cover special functions)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9820_Service = "FC" Then
        If F9820_Action = "I1" Then                                             ' I Agree 1
            Worksheets(G_Tab_CCDat).Range("B156").Value = "Agreed - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Worksheets(G_Tab_CCDat).Range("B157").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "D1" Then                                             ' I Agree 1 (turned off)
            Worksheets(G_Tab_CCDat).Range("B156").Value = "Not Agreed - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Worksheets(G_Tab_CCDat).Range("B157").Value = G_Window & " / " & G_Office
            Worksheets(G_Tab_CCDat).Range("B158").ClearContents
            Worksheets(G_Tab_CCDat).Range("B159").ClearContents
        End If
        
        If F9820_Action = "R1" Then                                             ' I Agree 1 (reset)
            Worksheets(G_Tab_CCDat).Range("B156").ClearContents
            Worksheets(G_Tab_CCDat).Range("B157").ClearContents
            Worksheets(G_Tab_CCDat).Range("B158").ClearContents
            Worksheets(G_Tab_CCDat).Range("B159").ClearContents
        End If
        
        If F9820_Action = "I2" Then                                             ' I Agree 2
            Worksheets(G_Tab_CCDat).Range("B160").Value = "Agreed - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Worksheets(G_Tab_CCDat).Range("B161").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "D2" Then                                             ' I Agree 2 (turned off)
            Worksheets(G_Tab_CCDat).Range("B160").Value = "Not Agreed - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Worksheets(G_Tab_CCDat).Range("B161").Value = G_Window & " / " & G_Office
            Worksheets(G_Tab_CCDat).Range("B162").ClearContents
            Worksheets(G_Tab_CCDat).Range("B163").ClearContents
        End If
        
        If F9820_Action = "R2" Then                                             ' I Agree 2 (reset)
            Worksheets(G_Tab_CCDat).Range("B160").ClearContents
            Worksheets(G_Tab_CCDat).Range("B161").ClearContents
            Worksheets(G_Tab_CCDat).Range("B162").ClearContents
            Worksheets(G_Tab_CCDat).Range("B163").ClearContents
        End If
        
        If F9820_Action = "L" Then                                              ' Lock and Save
            Worksheets(G_Tab_CCDat).Range("B164").Value = "Locked - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Worksheets(G_Tab_CCDat).Range("B165").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L1" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B167").Value = "Lock 1 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B168").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L2" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B169").Value = "Lock 2 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B170").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L3" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B171").Value = "Lock 3 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B172").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L4" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B173").Value = "Lock 4 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B174").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L5" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B175").Value = "Lock 5 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B176").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L6" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B177").Value = "Lock 6 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B178").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L7" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B179").Value = "Lock 7 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B180").Value = G_Window & " / " & G_Office
        End If
        
        If F9820_Action = "L8" Then                                             ' Lock and Save
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B181").Value = "Lock 8 - " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Workbooks(G_This_File).Worksheets(G_Tab_CCDat).Range("B182").Value = G_Window & " / " & G_Office
        End If
        
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Build the status (normal services)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F9820_Action
    Case "S":   F9820_Status = "Selected - "
    Case "D":   F9820_Status = "Deselected - "
    Case "V":   F9820_Status = "Validated - "
    Case "R":   F9820_Status = "Reset Form - "
    Case Else:  F9820_Status = "Unknown - "
    End Select
    
    F9820_Status = F9820_Status & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Write the status (Reset Form Data)
    ' - Rows 102/103 are cleared
    ' - Rows 104/105 are for Reset Form Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9820_Action = "R" Then
        Worksheets(G_Tab_CCDat).Range(F9820_Column & "152").ClearContents
        Worksheets(G_Tab_CCDat).Range(F9820_Column & "153").ClearContents
        
        Worksheets(G_Tab_CCDat).Range(F9820_Column & "154").Value = F9820_Status
        Worksheets(G_Tab_CCDat).Range(F9820_Column & "155").Value = G_Window & " / " & G_Office
        
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Write the status
    ' - Rows 102/103 are for earliest validation
    ' - Rows 104/105 are for latest validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Worksheets(G_Tab_CCDat).Range(F9820_Column & "152").Value = "" Then
        Worksheets(G_Tab_CCDat).Range(F9820_Column & "152").Value = F9820_Status
        Worksheets(G_Tab_CCDat).Range(F9820_Column & "153").Value = G_Window & " / " & G_Office
    End If
    
    Worksheets(G_Tab_CCDat).Range(F9820_Column & "154").Value = F9820_Status
    Worksheets(G_Tab_CCDat).Range(F9820_Column & "155").Value = G_Window & " / " & G_Office
    
End Function                                                                    ' of F9820_User_to_CCData
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Sub R9800_Internal_Testing()
    G_Caller = F0000_Initialisation()
    G_Caller = F9800_Copy_to_CCData()
    
End Sub
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Module99_General"
Option Explicit
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------
' F9901_Column_Letter
' F9910_True_False_to_Letter
' F9911_Validate_KCV    (key check value, length 4 or 6 hexadecimal digits, spaces permitted as separators)
' F9912_Validate_BIN    (BIN, 6-digit decimal, no separators)
' F9913_Validate_DKI    (DKI, 3-digit decimal, 0-255, no separators)
' F9914_Validate_Key    (key value, length 16 hexadecimal digits, spaces permitted as separators
' F9915_Validate_BID    (BID, 8-digit decimal, starts 0 or 1, no separators)
' F9916_Validate_PCR    (PCR, 4-digit decimal, no separators)
' F9917_Validate_1DA    (one-day amount, decimal, range 0-65279, no separators)
' F9918_Validate_1DC    (one-day count, decimal, range 0-250, no separators)
' F9919_Validate_4DM    (four-day multiplier, decimal, range 1.00 to 4.00 in increments of 0.05)
' F9920_Validate_Rng    (account range, 3-digit decimal, no separators)
' F9921_Validate_Tim X  (timeout, decimal, range 8,000-20,000, comma separator permitted)
' F9922_Validate_DTC    (domestic transaction count - 1 to 99,999)
' F9923_Validate_DTA    (domestic transaction amount - 1 to 9,999,999)
' F9924_Validate_IPE    (incorrect PIN entries)
' F9925_Validate_CCY    (currency, 1-, 2- or 3-digit decimal, no separators)
' F9926_Validate_PCT    (percentage in format nn.nnn%)
' F9927_Validate_SRE    (SRE, 10-digit decimal, no separators)
' F9928_Validate_RID    (RID, 8-digit decimal, no separators, possibility of specific first digit)
' F9929_Validate_SEC    (8-character security code)
' F9930_Validate_Tim    (time in format HH:MM; 00:00 to 09:00 or 16:00 to 23:59)
' F9931_Validate_IMM    (decimal integer with minimum and maximum values)
' F9932_Validate_Exp    (expiry date in format MM/YYYY)
' F9933_Validate_D16    (Decimalisation Table, 16-digit decimal, no separators)
' F9934_Validate_URL    (URL, minimal validation at present)
' F9935_Validate_USS X  (U.S.-region two-character state code)
' F9936_Validate_Stn    (Station, 6-digit decimal, no separators, must end 00-26)
' F9937_Validate_Mel    (e-mail address)
' F9938_Validate_PID    (Product ID - list is per region)
' F9939_Validate_B2P    (BASE II Processor, up to ten alphanumeric characters)
' F9940_Validate_FQD    (Fully-Qualified Domain name, up to forty alphanumeric characters including full stops)
' F9941_Validate_CVN    (two-digit hexadecimal value)
' F9970_Generate
' F9980_Switch_Worksheets
' F9981_Unprotect_One
' F9982_Protect_All
' F9983_Cover_Row_For_Service       This function returns the row number on the front cover that is associated with the specified service code
' F9984_Format_Answer_Cell          This function applies "normal" formatting to an answer cell (this may also be a range).
' F9985_Display_Validation_Message  This function displays a once-only message when the user clicks Validate or Validate All Services for the first time
' F9986_Count_Values                Count up cells where the value is not empty
' F9987_Expiry_Warning              Warn that the CIQ is beyond its expiry date (but do not prevent the CIQ from being used)
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------
' F9999_Find_Font_Colour            This internal subroutine obtains the RGB values for a font
' F9999_Update_Edition              This internal subroutine applies the date and version into the cell containing the Edition data
' F9999_Display_and_Unlock          This internal subroutine displays and unlocks all worksheets
' F9999_Display_and_Unlock_One      This internal subroutine displays and unlocks one worksheet
' F9999_WSheet_Properties           This internal subroutine sets properties for all worksheets
' F9999_Display_LSave               This internal subroutine displays the LSave tab
' F9999_Hide_LSave                  This internal subroutine hides the LSave tab
' F9999_Display_Cover               This internal subroutine displays the Front Cover
' F9999_Unlock_Structure            This internal subroutine unlocks the whole workbook to allow sheets to be added/removed
' F9999_Lock_Structure              This internal subroutine locks the whole workbook to prevent sheets from being added/removed
' F9999_Lock_All                    This internal subroutine locks all tabs
' F9999_Select_PWord                This internal subroutine selects the password that is appropriate to the sheet
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Function F9901_Column_Letter(F9901_Column_Number)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Input is the column number
    ' Output is the column letter identification
    ' Example: Column Number = 28 --> Column Letter = AB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9901_Column_Number_L                               As Integer
    Dim F9901_Column_Number_R                               As Integer
    Dim F9901_All_the_Letters                               As String
    F9901_All_the_Letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    
    If F9901_Column_Number <= 26 Then
        F9901_Column_Letter = Mid(F9901_All_the_Letters, F9901_Column_Number, 1)
    Else
        F9901_Column_Number_R = ((F9901_Column_Number - 1) Mod 26) + 1
        F9901_Column_Number_L = (F9901_Column_Number - F9901_Column_Number_R) / 26
        F9901_Column_Letter = Mid(F9901_All_the_Letters, F9901_Column_Number_L, 1) & _
                              Mid(F9901_All_the_Letters, F9901_Column_Number_R, 1)
    End If
End Function                                                                    ' of F9901_Column_Letter
Function F9910_True_False_to_Letter(F9910_True_False As Boolean)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert a boolean value to a string
    ' - True  - "Y"
    ' - False - "N"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9910_True_False = True Then
        F9910_True_False_to_Letter = "Y"
    Else
        F9910_True_False_to_Letter = "N"
    End If
    
End Function                                                                    ' of F9910_True_False_to_Letter
Function F9911_Validate_KCV(F9911_KCV)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Key Check Value
    ' - Only hexadecimal values permitted
    ' - Only length 4 or 6 permitted
    ' - Embedded spaces are permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-hexadecimal digit found
    ' "E3"  Incorrect length
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9911_String                                        As String
    Dim F9911_Pos                                           As Integer
    Dim F9911_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9911_Len = Len(F9911_KCV)
    
    If F9911_Len = 0 Then
        F9911_Validate_KCV = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert to uppercase
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9911_KCV = UCase(F9911_KCV)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Move digits, one by one, excluding spaces
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9911_Pos = 1 To F9911_Len
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Ignore any spaces
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Mid(F9911_KCV, F9911_Pos, 1) <> " " Then
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' If any non-hex characters found, then respond with "E2" error
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If InStr("0123456789ABCDEF", Mid(F9911_KCV, F9911_Pos, 1)) = 0 Then
                F9911_Validate_KCV = "E2"
                Exit Function
            End If
            
            F9911_String = F9911_String & Mid(F9911_KCV, F9911_Pos, 1)
        End If
    Next F9911_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string (again - after removing spaces)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9911_Len = Len(F9911_String)
    
    If F9911_Len = 0 Then
        F9911_Validate_KCV = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9911_String) <> 4 And _
       Len(F9911_String) <> 6 Then
        F9911_Validate_KCV = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9911_Validate_KCV = ""
    Exit Function
    
End Function                                                                    ' of F9911_Validate_KCV
Function F9912_Validate_BIN(F9912_BIN)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a BIN
    ' - Only decimal values permitted
    ' - Only length 6 permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9912_String                                        As String
    Dim F9912_Pos                                           As Integer
    Dim F9912_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9912_Len = Len(F9912_BIN)
    
    If F9912_Len = 0 Then
        F9912_Validate_BIN = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9912_Pos = 1 To F9912_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9912_BIN, F9912_Pos, 1)) = 0 Then
            F9912_Validate_BIN = "E2"
            Exit Function
        End If
        
        F9912_String = F9912_String & Mid(F9912_BIN, F9912_Pos, 1)
    Next F9912_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9912_String) <> 6 Then
        F9912_Validate_BIN = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9912_Validate_BIN = ""
    Exit Function
    
End Function                                                                    ' of F9912_Validate_BIN
Function F9913_Validate_DKI(F9913_DKI, Optional F9913_DKI_A, Optional F9913_DKI_B)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a DKI
    ' - Only decimal values permitted
    ' - Only length 1, 2 or 3 permitted
    ' - Embedded spaces are not permitted
    ' - Range 0 - 255 permitted
    ' - Duplicate values are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value out of range
    ' "E4"  Value must not duplicate other DKIs requested
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9913_String                                        As String
    Dim F9913_Pos                                           As Integer
    Dim F9913_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9913_Len = Len(F9913_DKI)
    
    If F9913_Len = 0 Then
        F9913_Validate_DKI = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9913_Pos = 1 To F9913_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9913_DKI, F9913_Pos, 1)) = 0 Then
            F9913_Validate_DKI = "E2"
            Exit Function
        End If
        
        F9913_String = F9913_String & Mid(F9913_DKI, F9913_Pos, 1)
    Next F9913_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9913_String) > 3 Then
        F9913_Validate_DKI = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if too large then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9913_String + 0 > 255 Then
        F9913_Validate_DKI = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for duplicates; if duplication then respond with "E4" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9913_String = F9913_DKI_A Or _
       F9913_String = F9913_DKI_B Then
        F9913_Validate_DKI = "E4"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9913_Validate_DKI = ""
    Exit Function
    
End Function                                                                    ' of F9913_Validate_DKI
Function F9914_Validate_Key(F9914_Key)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Key
    ' - Only hexadecimal values permitted
    ' - Only length 16 permitted
    ' - Embedded spaces are permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-hexadecimal digit found
    ' "E3"  Incorrect length
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9914_String                                        As String
    Dim F9914_Pos                                           As Integer
    Dim F9914_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9914_Len = Len(F9914_Key)
    
    If F9914_Len = 0 Then
        F9914_Validate_Key = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Convert to uppercase
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9914_Key = UCase(F9914_Key)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Move digits, one by one, excluding spaces
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9914_Pos = 1 To F9914_Len
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Ignore any spaces
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Mid(F9914_Key, F9914_Pos, 1) <> " " Then
            
            '----------------------------------------------------------------------------------------------------------------------------------------------------------
            ' If any non-hex characters found, then respond with "E2" error
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            If InStr("0123456789ABCDEF", Mid(F9914_Key, F9914_Pos, 1)) = 0 Then
                F9914_Validate_Key = "E2"
                Exit Function
            End If
            
            F9914_String = F9914_String & Mid(F9914_Key, F9914_Pos, 1)
        End If
    Next F9914_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string (again - after removing spaces)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9914_Len = Len(F9914_String)
    
    If F9914_Len = 0 Then
        F9914_Validate_Key = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9914_String) <> 16 Then
        F9914_Validate_Key = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9914_Validate_Key = ""
    Exit Function
    
End Function                                                                    ' of F9914_Validate_Key
Function F9915_Validate_BID(F9915_BID)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a BID
    ' - Only decimal values permitted
    ' - Only length 8 permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Value is numeric
    ' "E3"  Value is not length 8
    ' "E4"  Value does not start with "1"
    ' "E5"  Value does not start with "0" or "1"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9915_String                                        As String
    Dim F9915_Pos                                           As Integer
    Dim F9915_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9915_Len = Len(F9915_BID)
    
    If F9915_Len = 0 Then
        F9915_Validate_BID = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9915_Pos = 1 To F9915_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9915_BID, F9915_Pos, 1)) = 0 Then
            F9915_Validate_BID = "E2"
            Exit Function
        End If
        
        F9915_String = F9915_String & Mid(F9915_BID, F9915_Pos, 1)
    Next F9915_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9915_String) <> 8 Then
        F9915_Validate_BID = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check first digit; if incorrect then respond with "E4" or "E5" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case Left(F9915_BID, 1)
    
    Case "0"                                                            ' "0nnnnnnn" BID is valid only for a Visa domain
        If G_Domain = "visa" Then                                       ' This is valid for a visa runner
            F9915_Validate_BID = ""
            Exit Function
        Else                                                            ' This is invalid for a non-visa runner
            F9915_Validate_BID = "E4"
            Exit Function
        End If
        
    Case "1"                                                            ' "1nnnnnnn" BID is valid for a Visa domain and non-Visa domain
        F9915_Validate_BID = ""
        Exit Function
    
    Case Else                                                           ' This is invalid for all
        If G_Domain = "visa" Then                                       ' Message for a visa runner
            F9915_Validate_BID = "E5"
            Exit Function
        Else                                                            ' Message for for a non-visa runner
            F9915_Validate_BID = "E4"
            Exit Function
        End If
        
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9915_Validate_BID = ""
    Exit Function
    
End Function                                                                    ' of F9915_Validate_BID
Function F9916_Validate_PCR(F9916_PCR)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a PCR
    ' - Only decimal values permitted
    ' - Only length 4 permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9916_String                                        As String
    Dim F9916_Pos                                           As Integer
    Dim F9916_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9916_Len = Len(F9916_PCR)
    
    If F9916_Len = 0 Then
        F9916_Validate_PCR = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9916_Pos = 1 To F9916_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9916_PCR, F9916_Pos, 1)) = 0 Then
            F9916_Validate_PCR = "E2"
            Exit Function
        End If
        
        F9916_String = F9916_String & Mid(F9916_PCR, F9916_Pos, 1)
    Next F9916_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9916_String) <> 4 Then
        F9916_Validate_PCR = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9916_Validate_PCR = ""
    Exit Function
    
End Function                                                                    ' of F9916_Validate_PCR
Function F9917_Validate_1DA(F9917_1DA)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a 1-Day Amount
    ' - Only decimal values permitted
    ' - Embedded spaces are not permitted
    ' - Value must be in range 0 - 65279
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9917_String                                        As String
    Dim F9917_Pos                                           As Integer
    Dim F9917_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9917_Len = Len(F9917_1DA)
    
    If F9917_Len = 0 Then
        F9917_Validate_1DA = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9917_Pos = 1 To F9917_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9917_1DA, F9917_Pos, 1)) = 0 Then
            F9917_Validate_1DA = "E2"
            Exit Function
        End If
        
        F9917_String = F9917_String & Mid(F9917_1DA, F9917_Pos, 1)
    Next F9917_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9917_String + 0 > 65279 Then
        F9917_Validate_1DA = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9917_Validate_1DA = ""
    Exit Function
    
End Function                                                                    ' of F9917_Validate_1DA
Function F9918_Validate_1DC(F9918_1DC)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a 1-Day Count
    ' - Only decimal values permitted
    ' - Embedded spaces are not permitted
    ' - Value must be in range 0 - 250
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9918_String                                        As String
    Dim F9918_Pos                                           As Integer
    Dim F9918_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9918_Len = Len(F9918_1DC)
    
    If F9918_Len = 0 Then
        F9918_Validate_1DC = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9918_Pos = 1 To F9918_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9918_1DC, F9918_Pos, 1)) = 0 Then
            F9918_Validate_1DC = "E2"
            Exit Function
        End If
        
        F9918_String = F9918_String & Mid(F9918_1DC, F9918_Pos, 1)
    Next F9918_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9918_String + 0 > 250 Then
        F9918_Validate_1DC = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9918_Validate_1DC = ""
    Exit Function
    
End Function                                                                    ' of F9918_Validate_1DC
Function F9919_Validate_4DM(F9919_4DM)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a 4-Day Multiplier in the format n.nn (Note that this can also be entered using a comma: n,nn)
    ' - Only decimal values permitted
    ' - Embedded spaces are not permitted
    ' - Value must be in range 1.00 - 4.00 in 0.05 increments
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    ' "E4"  Non-permitted increment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9919_String                                        As String
    Dim F9919_Pos                                           As Integer
    Dim F9919_Len                                           As Integer
    Dim F9919_Dec                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9919_Len = Len(F9919_4DM)
    
    If F9919_Len = 0 Then
        F9919_Validate_4DM = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9919_Pos = 1 To F9919_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        ' - Firstly replace any "," with a "."
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Mid(F9919_4DM, F9919_Pos, 1) = "," Then _
           Mid(F9919_4DM, F9919_Pos, 1) = "."                                   ' Replace any decimal comma with a decimal point
        
        If InStr("0123456789.", Mid(F9919_4DM, F9919_Pos, 1)) = 0 Then
            F9919_Validate_4DM = "E2"
            Exit Function
        End If
        
        
        If Mid(F9919_4DM, F9919_Pos, 1) = "." Then                              ' If this is a decimal point then
            F9919_Dec = F9919_Dec + 1                                           ' Count it
        End If
        
        F9919_String = F9919_String & Mid(F9919_4DM, F9919_Pos, 1)
    Next F9919_Pos
    
    If F9919_Dec > 1 Then                                                       ' If more than one decimal point then
        F9919_Validate_4DM = "E2"                                               ' E2 error
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9919_String + 0 < 1 Or _
       F9919_String + 0 > 4 Then
        F9919_Validate_4DM = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check increment; if incorrect then respond with "E4" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9919_String) > 4 Then
        F9919_Validate_4DM = "E4"
        Exit Function
    End If
    
    If (F9919_String + 0) * 10000 Mod 500 <> 0 Then
        F9919_Validate_4DM = "E4"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9919_Validate_4DM = ""
    Exit Function
    
End Function                                                                    ' of F9919_Validate_4DM
Function F9920_Validate_Rng(F9920_Rng)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate an account range
    ' - Only decimal values permitted
    ' - Only length 3 permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9920_String                                        As String
    Dim F9920_Pos                                           As Integer
    Dim F9920_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9920_Len = Len(F9920_Rng)
    
    If F9920_Len = 0 Then
        F9920_Validate_Rng = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9920_Pos = 1 To F9920_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9920_Rng, F9920_Pos, 1)) = 0 Then
            F9920_Validate_Rng = "E2"
            Exit Function
        End If
        
        F9920_String = F9920_String & Mid(F9920_Rng, F9920_Pos, 1)
    Next F9920_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9920_String) <> 3 Then
        F9920_Validate_Rng = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9920_Validate_Rng = ""
    Exit Function
    
End Function                                                                    ' of F9920_Validate_Rng
Function F9922_Validate_DTC(F9922_DTC)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Domestic Transaction Count
    ' - Only decimal values permitted
    ' - Embedded spaces are not permitted
    ' - Value must be in range 1 - 99,999
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9922_String                                        As String
    Dim F9922_Pos                                           As Integer
    Dim F9922_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Eliminate any commas
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9922_DTC = Replace(F9922_DTC, ",", "")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9922_Len = Len(F9922_DTC)
    
    If F9922_Len = 0 Then
        F9922_Validate_DTC = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9922_Pos = 1 To F9922_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9922_DTC, F9922_Pos, 1)) = 0 Then
            F9922_Validate_DTC = "E2"
            Exit Function
        End If
        
        F9922_String = F9922_String & Mid(F9922_DTC, F9922_Pos, 1)
    Next F9922_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9922_String + 0 < 1 Or _
       F9922_String + 0 > 99999 Then
        F9922_Validate_DTC = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9922_Validate_DTC = ""
    Exit Function
    
End Function                                                                    ' of F9922_Validate_DTC
Function F9923_Validate_DTA(F9923_DTA)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Domestic Transaction Amount
    ' - Only decimal values permitted
    ' - Embedded spaces are not permitted
    ' - Value must be in range 1 - 9,999,999
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9923_String                                        As String
    Dim F9923_Pos                                           As Integer
    Dim F9923_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Eliminate any commas
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9923_DTA = Replace(F9923_DTA, ",", "")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9923_Len = Len(F9923_DTA)
    
    If F9923_Len = 0 Then
        F9923_Validate_DTA = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9923_Pos = 1 To F9923_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9923_DTA, F9923_Pos, 1)) = 0 Then
            F9923_Validate_DTA = "E2"
            Exit Function
        End If
        
        F9923_String = F9923_String & Mid(F9923_DTA, F9923_Pos, 1)
    Next F9923_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9923_String + 0 < 1 Or _
       F9923_String + 0 > 9999999 Then
        F9923_Validate_DTA = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9923_Validate_DTA = ""
    Exit Function
    
End Function                                                                    ' of F9923_Validate_DTA
Function F9924_Validate_IPE(F9924_IPE)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a number of incorrect PIN entries
    ' - Only decimal values permitted
    ' - Only length 1, 2 or 3 permitted
    ' - Embedded spaces are not permitted
    ' - Range 0 - 250 permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value out of range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9924_String                                        As String
    Dim F9924_Pos                                           As Integer
    Dim F9924_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9924_Len = Len(F9924_IPE)
    
    If F9924_Len = 0 Then
        F9924_Validate_IPE = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9924_Pos = 1 To F9924_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-hex characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9924_IPE, F9924_Pos, 1)) = 0 Then
            F9924_Validate_IPE = "E2"
            Exit Function
        End If
        
        F9924_String = F9924_String & Mid(F9924_IPE, F9924_Pos, 1)
    Next F9924_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9924_String) > 3 Then
        F9924_Validate_IPE = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if too large then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9924_String + 0 > 250 Then
        F9924_Validate_IPE = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9924_Validate_IPE = ""
    Exit Function
    
End Function                                                                    ' of F9924_Validate_IPE
Function F9925_Validate_CCY(F9925_CCY)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a CCY
    ' - Only decimal values permitted
    ' - Only length 1, 2 or 3 permitted
    ' - Embedded spaces are not permitted
    ' - Range 0 - 999 permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value out of range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9925_String                                        As String
    Dim F9925_Pos                                           As Integer
    Dim F9925_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9925_Len = Len(F9925_CCY)
    
    If F9925_Len = 0 Then
        F9925_Validate_CCY = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9925_Pos = 1 To F9925_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-hex characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9925_CCY, F9925_Pos, 1)) = 0 Then
            F9925_Validate_CCY = "E2"
            Exit Function
        End If
        
        F9925_String = F9925_String & Mid(F9925_CCY, F9925_Pos, 1)
    Next F9925_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9925_String) > 3 Then
        F9925_Validate_CCY = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; The only invalid value is zero
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9925_String + 0 = 0 Then
        F9925_Validate_CCY = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9925_Validate_CCY = ""
    Exit Function
    
End Function                                                                    ' of F9925_Validate_CCY
Function F9926_Validate_PCT(F9926_Pct)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a percentage in the format nn.nnn% (Note that this can also be entered using a comma: nn,nnn%)
    ' - Only decimal values permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9926_String                                        As String           ' Output (formatted) character value
    Dim F9926_Pos                                           As Integer          ' For looping - position
    Dim F9926_Len                                           As Integer          ' For positioning - number of characters to examine
    Dim F9926_One_Char                                      As String           ' The single character that is being examined
    Dim F9926_Dec                                           As Integer          ' Number of decimal separators  (must be 0 or 1)
    Dim F9926_Sig                                           As Integer          ' Number of "%" signs           (must be 0 or 1)
    Dim F9926_Lft                                           As Integer          ' Number of integer digits      (must be 0, 1 or 2)
    Dim F9926_Rgt                                           As Integer          ' Number of decimal digits      (must be 0, 1, 2 or 3)
    Dim F9926_Lft_Digits                                    As String           ' The integer digits
    Dim F9926_Rgt_Digits                                    As String           ' The decimal digits
    Dim F9926_Dec_Sep                                       As String           ' The decimal separator
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9926_Len = Len(F9926_Pct)
    
    If F9926_Len = 0 Then
        F9926_Validate_PCT = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9926_Pos = 1 To F9926_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789.,%", Mid(F9926_Pct, F9926_Pos, 1)) = 0 Then
            F9926_Validate_PCT = "E2"
            Exit Function
        End If
        
        F9926_One_Char = Mid(F9926_Pct, F9926_Pos, 1)                           ' Store the single character that is located at the current position
        
        Select Case F9926_One_Char                                              ' Examine that single character from the input string
        
        Case ".", ","                                                           ' Decimal point or decimal comma
            F9926_Dec = F9926_Dec + 1                                               ' Count it
            F9926_Dec_Sep = F9926_One_Char                                          ' Store the decimal separator
        
        Case "%"                                                                ' Percentage sign
            F9926_Sig = F9926_Sig + 1                                               ' Count it
        
        Case Else                                                               ' Decimal digit
            If F9926_Dec = 0 Then                                                   ' Left of the decimal point
                F9926_Lft = F9926_Lft + 1                                               ' Count it
                F9926_Lft_Digits = F9926_Lft_Digits & F9926_One_Char                    ' Add the single character to the integer digits
            Else                                                                    ' Right of the decimal point
                F9926_Rgt = F9926_Rgt + 1                                               ' Count it
                F9926_Rgt_Digits = F9926_Rgt_Digits & F9926_One_Char                    ' Add the single character to the decimal digits
            End If
        
        End Select
        
    Next F9926_Pos
    
    If F9926_Dec > 1 Then                                                       ' If more than one decimal point then
        F9926_Validate_PCT = "E2"                                               ' E2 error
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9926_Lft > 2 Then                                                       ' More than two digits to the left of the decimal point
        F9926_Validate_PCT = "E3"
        Exit Function
    End If
    
    If F9926_Rgt > 3 Then                                                       ' More than three digits to the right of the decimal point
        F9926_Validate_PCT = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation - build the result
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9926_Dec_Sep = "" Then F9926_Dec_Sep = "."                                              ' Default the decimal separator to "." if only integer value entered
    
    F9926_String = F9926_String & String(2 - F9926_Lft, "0") & F9926_Lft_Digits                 ' Integers, padded on the left with "0" to length 2
    F9926_String = F9926_String & F9926_Dec_Sep                                                 ' Decimal separator (dot or comma)
    F9926_String = F9926_String & F9926_Rgt_Digits & String(3 - F9926_Rgt, "0")                 ' Decimals, padded on the right with "0" to length 3
    F9926_String = F9926_String & "%"                                                           ' Percentage sign (fixed for all countries, thanks for small mercies)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation - return the result
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9926_Validate_PCT = ""
    F9926_Pct = F9926_String
    Exit Function
    
End Function                                                                    ' of F9926_Validate_PCT
Function F9927_Validate_SRE(F9927_SRE)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate an SRE
    ' - Only decimal values permitted
    ' - Only length 10 is permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value out of range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9927_String                                        As String
    Dim F9927_Pos                                           As Integer
    Dim F9927_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9927_Len = Len(F9927_SRE)
    
    If F9927_Len = 0 Then
        F9927_Validate_SRE = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9927_Pos = 1 To F9927_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9927_SRE, F9927_Pos, 1)) = 0 Then
            F9927_Validate_SRE = "E2"
            Exit Function
        End If
        
        F9927_String = F9927_String & Mid(F9927_SRE, F9927_Pos, 1)
    Next F9927_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9927_String) <> 10 Then
        F9927_Validate_SRE = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; The only invalid value is zero
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9927_String + 0 = 0 Then
        F9927_Validate_SRE = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9927_Validate_SRE = ""
    Exit Function
    
End Function                                                                    ' of F9927_Validate_SRE
Function F9928_Validate_RID(F9928_RID, F9928_Type)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a RID
    ' - Only decimal values permitted
    ' - Only length 6 permitted
    ' - must start with "7" (if F9928_Type = "7")
    ' - must start with "8" (if F9928_Type = "8")
    ' - no first-digit restriction (if F9928_Type = "")
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9928_String                                        As String
    Dim F9928_Pos                                           As Integer
    Dim F9928_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9928_Len = Len(F9928_RID)
    
    If F9928_Len = 0 Then
        F9928_Validate_RID = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9928_Pos = 1 To F9928_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9928_RID, F9928_Pos, 1)) = 0 Then
            F9928_Validate_RID = "E2"
            Exit Function
        End If
        
        F9928_String = F9928_String & Mid(F9928_RID, F9928_Pos, 1)
    Next F9928_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9928_String) <> 6 Then
        F9928_Validate_RID = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9928_Type = "7" Then
        If Left(F9928_String, 1) <> "7" Then
            F9928_Validate_RID = "E3"
            Exit Function
        End If
    End If
    
    If F9928_Type = "8" Then
        If Left(F9928_String, 1) <> "8" Then
            F9928_Validate_RID = "E3"
            Exit Function
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9928_Validate_RID = ""
    Exit Function
    
End Function                                                                    ' of F9928_Validate_RID
Function F9929_Validate_SEC(F9929_SEC)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Security Code
    ' - Only 0-9 and A-Z values are permitted
    ' - Only length 8 permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-alphanumeric character found
    ' "E3"  Incorrect length or value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9929_String                                        As String
    Dim F9929_Pos                                           As Integer
    Dim F9929_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9929_Len = Len(F9929_SEC)
    
    If F9929_Len = 0 Then
        F9929_Validate_SEC = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9929_Pos = 1 To F9929_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", Mid(F9929_SEC, F9929_Pos, 1)) = 0 Then
            F9929_Validate_SEC = "E2"
            Exit Function
        End If
        
        F9929_String = F9929_String & Mid(F9929_SEC, F9929_Pos, 1)
    Next F9929_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9929_String) <> 8 Then
        F9929_Validate_SEC = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9929_Validate_SEC = ""
    Exit Function
    
End Function                                                                    ' of F9929_Validate_SEC
Function F9930_Validate_Tim(F9930_Tim)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Time in format hh:mm
    ' - Only 0-9 values are permitted in positions 1, 2, 4, 5
    ' - Only length 5 permitted
    ' - Positions 1-2 must be in range 16-23 or 00-09
    ' - Positions 4-5 must be in range 00-59
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value
    ' "E4"  Time is within excluded range 09:01 - 15:59
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9930_String                                        As String
    Dim F9930_Pos                                           As Integer
    Dim F9930_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9930_Len = Len(F9930_Tim)
    
    If F9930_Len = 0 Then
        F9930_Validate_Tim = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9930_Tim) <> 5 Then
        F9930_Validate_Tim = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9930_Pos = 1 To F9930_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F9930_Pos = 3 Then
            If InStr(":", Mid(F9930_Tim, F9930_Pos, 1)) = 0 Then
                F9930_Validate_Tim = "E2"
                Exit Function
            End If
        Else
            If InStr("0123456789", Mid(F9930_Tim, F9930_Pos, 1)) = 0 Then
                F9930_Validate_Tim = "E2"
                Exit Function
            End If
        End If
        
        F9930_String = F9930_String & Mid(F9930_Tim, F9930_Pos, 1)
    Next F9930_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9930_String, 2) > "23" Then
        F9930_Validate_Tim = "E3"
        Exit Function
    End If
    
    If Right(F9930_String, 2) > "59" Then
        F9930_Validate_Tim = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; if in excluded range then respond with "E4" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Left(F9930_String, 2) & Right(F9930_String, 2) > "0900" And _
       Left(F9930_String, 2) & Right(F9930_String, 2) < "1600" Then
        F9930_Validate_Tim = "E4"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9930_Validate_Tim = ""
    Exit Function
    
End Function                                                                    ' of F9930_Validate_Tim
Function F9931_Validate_IMM(F9931_Integer, F9931_Min_Val, F9931_Max_Val)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a decimal integer that must lie within the minimum and maximum values specified
    ' - Only decimal values permitted
    ' - Embedded spaces are not permitted
    ' - Value must be in range specified
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Outside permitted range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9931_String                                        As String
    Dim F9931_Pos                                           As Integer
    Dim F9931_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Eliminate any commas
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9931_Integer = Replace(F9931_Integer, ",", "")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9931_Len = Len(F9931_Integer)
    
    If F9931_Len = 0 Then
        F9931_Validate_IMM = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9931_Pos = 1 To F9931_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9931_Integer, F9931_Pos, 1)) = 0 Then
            F9931_Validate_IMM = "E2"
            Exit Function
        End If
        
        F9931_String = F9931_String & Mid(F9931_Integer, F9931_Pos, 1)
    Next F9931_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9931_String + 0 < F9931_Min_Val Or _
       F9931_String + 0 > F9931_Max_Val Then
        F9931_Validate_IMM = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9931_Validate_IMM = ""
    Exit Function
    
End Function                                                                    ' of F9931_Validate_IMM
Function F9932_Validate_Exp(F9932_Expiry)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate an expiry date in the format MM/YYYY
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Invalid length (must be 7)
    ' "E3"  Invalid format (must be MM/YYYY)
    ' "E4"  Non-decimal digit found
    ' "E5"  Invalid month (must be 01-12)
    ' "E6"  Invalid year (must be 1980-2040)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9932_String                                        As String
    Dim F9932_Pos                                           As Integer
    Dim F9932_Len                                           As Integer
    Dim F9932_Dec                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9932_Len = Len(F9932_Expiry)
    
    If F9932_Len = 0 Then
        F9932_Validate_Exp = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for correct length
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9932_Len <> 7 Then
        F9932_Validate_Exp = "E2"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for "/" in correct position
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Mid(F9932_Expiry, 3, 1) <> "/" Then
        F9932_Validate_Exp = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9932_Pos = 1 To F9932_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E4" error - but don't check position 3 which is the "/"
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If F9932_Pos <> 3 Then
            If InStr("0123456789", Mid(F9932_Expiry, F9932_Pos, 1)) = 0 Then
                F9932_Validate_Exp = "E4"
                Exit Function
            End If
        End If
        
    Next F9932_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check range; if incorrect then respond with "E5" or "E6" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Mid(F9932_Expiry, 1, 2) + 0 < 1 Or _
       Mid(F9932_Expiry, 1, 2) + 0 > 12 Then
        F9932_Validate_Exp = "E5"
        Exit Function
    End If
    
    If Mid(F9932_Expiry, 4, 4) + 0 < 1980 Or _
       Mid(F9932_Expiry, 4, 4) + 0 > 2040 Then
        F9932_Validate_Exp = "E6"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9932_Validate_Exp = ""
    Exit Function
    
End Function                                                                    ' of F9932_Validate_Exp
Function F9933_Validate_D16(F9933_D16)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Decimalization Table
    ' - Only decimal values permitted
    ' - Only length 16 is permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length or value out of range
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9933_String                                        As String
    Dim F9933_Pos                                           As Integer
    Dim F9933_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9933_Len = Len(F9933_D16)
    
    If F9933_Len = 0 Then
        F9933_Validate_D16 = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9933_Pos = 1 To F9933_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9933_D16, F9933_Pos, 1)) = 0 Then
            F9933_Validate_D16 = "E2"
            Exit Function
        End If
        
        F9933_String = F9933_String & Mid(F9933_D16, F9933_Pos, 1)
    Next F9933_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9933_String) <> 16 Then
        F9933_Validate_D16 = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; The only invalid value is zero
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9933_String + 0 = 0 Then
        F9933_Validate_D16 = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9933_Validate_D16 = ""
    Exit Function
    
End Function                                                                    ' of F9933_Validate_D16
Function F9934_Validate_URL(F9934_URL)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a URL
    ' See "http://en.wikipedia.org/wiki/Uniform_resource_locator" for more details
    ' - Characters: Not validated
    ' - Maximum length: Not validated
    ' - Embedded spaces are permitted
    ' - Must start "https:" (upper- or lower-case letters permitted)
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-valid character found                       Currently not returned
    ' "E3"  Incorrect length or value out of range          Currently not returned
    ' "E4"  Does not start with "https://"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9934_String                                        As String
    Dim F9934_Pos                                           As Integer
    Dim F9934_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9934_Len = Len(F9934_URL)
    
    If F9934_Len = 0 Then
        F9934_Validate_URL = "E1"
        Exit Function
    End If
    
'   '------------------------------------------------------------------------------------------------------------------------------------------------------------------
'   ' Validate for valid characters
'   '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
'   For F9934_Pos = 1 To F9934_Len
'
'       '----------------------------------------------------------------------------------------------------------------------------------------------------------
'       ' If any invalid characters found, then respond with "E2" error
'       '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
'       If InStr("???????????????????????????", Mid(F9934_url, F9934_Pos, 1)) = 0 Then
'           F9934_Validate_URL = "E2"
'           Exit Function
'       End If
'
'       F9934_String = F9934_String & Mid(F9934_url, F9934_Pos, 1)
'   Next F9934_Pos
    F9934_String = F9934_URL
    
'   '------------------------------------------------------------------------------------------------------------------------------------------------------------------
'   ' Check length; if incorrect then respond with "E3" error
'   '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
'   If Len(F9934_String) > ????? Then
'       F9934_Validate_URL = "E3"
'       Exit Function
'   End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check value; Must start "https:" (upper- or lower-case)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If LCase(Left(F9934_String, 6)) <> "https:" Then
        F9934_Validate_URL = "E4"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9934_Validate_URL = ""
    Exit Function
    
End Function                                                                    ' of F9934_Validate_URL
Function F9936_Validate_Stn(F9936_Stn)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Station
    ' - Only decimal values permitted, must end 00-26
    ' - Only length 6 permitted
    ' - Embedded spaces are not permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-decimal digit found
    ' "E3"  Incorrect length
    ' "E4"  Incorrect last two digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9936_String                                        As String
    Dim F9936_Pos                                           As Integer
    Dim F9936_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9936_Len = Len(F9936_Stn)
    
    If F9936_Len = 0 Then
        F9936_Validate_Stn = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9936_Pos = 1 To F9936_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789", Mid(F9936_Stn, F9936_Pos, 1)) = 0 Then
            F9936_Validate_Stn = "E2"
            Exit Function
        End If
        
        F9936_String = F9936_String & Mid(F9936_Stn, F9936_Pos, 1)
    Next F9936_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9936_String) <> 6 Then
        F9936_Validate_Stn = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check last two digits; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Right(F9936_String, 2) > "26" Then
        F9936_Validate_Stn = "E4"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9936_Validate_Stn = ""
    Exit Function
    
End Function                                                                    ' of F9936_Validate_Stn
Function F9937_Validate_Mel(F9937_Mel)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate an e-mail address
    ' - Any characters
    ' - Any length
    ' - Embedded spaces are not permitted
    ' - Must containe one "@" symbol
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Embedded space found
    ' "E3"  No "@" found
    ' "E4"  Multiple "@" found
    ' "E5"  Single "@" found in first or last position
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9937_String                                        As String
    Dim F9937_Pos                                           As Integer
    Dim F9937_Len                                           As Integer
    Dim F9937_Arobase_Cnt                                   As Integer
    Dim F9937_Arobase_Pos                                   As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9937_Len = Len(F9937_Mel)
    
    If F9937_Len = 0 Then
        F9937_Validate_Mel = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Look for spaces
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9937_Pos = 1 To F9937_Len
        
        If Mid(F9937_Mel, F9937_Pos, 1) = " " Then
            F9937_Validate_Mel = "E2"
            Exit Function
        End If
        
    Next F9937_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Look for "@" symbol
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9937_Pos = 1 To F9937_Len
        
        If Mid(F9937_Mel, F9937_Pos, 1) = "@" Then
            F9937_Arobase_Cnt = F9937_Arobase_Cnt + 1
            F9937_Arobase_Pos = F9937_Pos
        End If
        
    Next F9937_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check results of the "@" checking
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9937_Arobase_Cnt = 0 Then
        F9937_Validate_Mel = "E3"
        Exit Function
    End If
    
    If F9937_Arobase_Cnt > 1 Then
        F9937_Validate_Mel = "E4"
        Exit Function
    End If
    
    If F9937_Arobase_Pos = 1 Or _
       F9937_Arobase_Pos = F9937_Len Then
        F9937_Validate_Mel = "E5"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9937_Validate_Mel = ""
    Exit Function
    
End Function                                                                    ' of F9937_Validate_Mel
Function F9938_Validate_PID(F9938_PID)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Product ID
    ' - Valid values appear in the Admin  Field Validations tab
    ' - There are two lists: Canada and US
    ' - The value is not considered case sensitive
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E3"  Invalid value found
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9938_Column                                        As String
    Dim F9938_Row_No                                        As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty value (E1)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9938_PID = "" Then
        F9938_Validate_PID = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check which region is being validated
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case G_FC_Value_Region
        Case "AP":          F9938_Column = "A":         F9938_Row_No = 54
        Case "CEMEA":       F9938_Column = "C":         F9938_Row_No = 54
        Case Else:          F9938_Validate_PID = "E9":  Exit Function
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Read list and look for value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    While Worksheets(G_Tab_A_Val).Range(F9938_Column & F9938_Row_No).Value <> ""                ' Whilst still finding values
        
        If Worksheets(G_Tab_A_Val).Range(F9938_Column & F9938_Row_No).Value = F9938_PID Then    ' This is the value requested
            F9938_Validate_PID = ""                                                             ' Good response
            Exit Function                                                                       ' Exit
        End If
        
        F9938_Row_No = F9938_Row_No + 1                                                         ' Move down one row
    Wend                                                                                        ' Go around again
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Not found in list of valid products (E3)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9938_Validate_PID = "E3"
    Exit Function
    
End Function                                                                    ' of F9938_Validate_PID
Function F9939_Validate_B2P(F9939_B2P)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a BASE II Processor
    ' - Only 0-9 and A-Z values are permitted
    ' - Length up to 10 permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-alphanumeric character found
    ' "E3"  Incorrect length or value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9939_String                                        As String
    Dim F9939_Pos                                           As Integer
    Dim F9939_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9939_Len = Len(F9939_B2P)
    
    If F9939_Len = 0 Then
        F9939_Validate_B2P = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9939_Pos = 1 To F9939_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-decimal characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", Mid(F9939_B2P, F9939_Pos, 1)) = 0 Then
            F9939_Validate_B2P = "E2"
            Exit Function
        End If
        
        F9939_String = F9939_String & Mid(F9939_B2P, F9939_Pos, 1)
    Next F9939_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9939_String) > 10 Then
        F9939_Validate_B2P = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9939_Validate_B2P = ""
    Exit Function
    
End Function                                                                    ' of F9939_Validate_B2P
Function F9940_Validate_FQD(F9940_FQD)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a Fully-Qualified Domain Name
    ' - Only 0-9 and A-Z values and full stops and hyphens are also permitted
    ' - Length up to 40 permitted
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Non-permitted character found
    ' "E3"  Incorrect length or value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9940_String                                        As String
    Dim F9940_Pos                                           As Integer
    Dim F9940_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9940_Len = Len(F9940_FQD)
    
    If F9940_Len = 0 Then
        F9940_Validate_FQD = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9940_Pos = 1 To F9940_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-permitted characters found, then respond with "E2" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-", Mid(F9940_FQD, F9940_Pos, 1)) = 0 Then
            F9940_Validate_FQD = "E2"
            Exit Function
        End If
        
        F9940_String = F9940_String & Mid(F9940_FQD, F9940_Pos, 1)
    Next F9940_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E3" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9940_String) > 40 Then
        F9940_Validate_FQD = "E3"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9940_Validate_FQD = ""
    Exit Function
    
End Function                                                                    ' of F9940_Validate_FQD
Function F9941_Validate_CVN(F9941_CVN)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate a CVN in hexadecimal
    ' - Only 0-9 and A-F values are permitted
    ' - Length mst be exactly 2 hex digits
    ' Result returned:
    ' ""    Valid
    ' "E1"  Value is empty
    ' "E2"  Value is zero
    ' "E3"  Non-hexadecimal digit found
    ' "E4"  Incorrect length or value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9941_String                                        As String
    Dim F9941_Pos                                           As Integer
    Dim F9941_Len                                           As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for empty string
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9941_Len = Len(F9941_CVN)
    
    If F9941_Len = 0 Then
        F9941_Validate_CVN = "E1"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for zero value
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9941_CVN = "00" Then
        F9941_Validate_CVN = "E2"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate for decimal digits
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For F9941_Pos = 1 To F9941_Len
        
        '----------------------------------------------------------------------------------------------------------------------------------------------------------
        ' If any non-hexadecimal characters found, then respond with "E3" error
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If InStr("0123456789ABCDEF", Mid(F9941_CVN, F9941_Pos, 1)) = 0 Then
            F9941_Validate_CVN = "E3"
            Exit Function
        End If
        
        F9941_String = F9941_String & Mid(F9941_CVN, F9941_Pos, 1)
    Next F9941_Pos
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check length; if incorrect then respond with "E4" error
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If Len(F9941_String) <> 2 Then
        F9941_Validate_CVN = "E4"
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Successful validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9941_Validate_CVN = ""
    Exit Function
    
End Function                                                                    ' of F9941_Validate_CVN
Function F9970_Generate()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Generate a password that can be generated again by Visa for unlocking purposes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9970_Temp1                                         As Long
    Dim F9970_Temp2                                         As Long
    Dim F9970_Temp3(4)                                      As Long
    Dim F9970_Temp4(4)                                      As Long
    Dim F9970_Temp5(4)                                      As Long
    Dim F9970_Temp6(4)                                      As Long
    Dim F9970_Temp7                                         As Long
    Dim F9970_Temp8                                         As Long
    Dim F9970_Temp9                                         As Long
    Dim F9970_Temp0                                         As Long
    Dim F9970_TempA                                         As Long
    Dim F9970_TempB                                         As Long
    Dim F9970_TempC                                         As Long
    Dim F9970_Index                                         As Integer

    Randomize
    F9970_Temp1 = Rnd() * 100000000
    While F9970_Temp1 < 10000000
        F9970_Temp1 = F9970_Temp1 * 3
    Wend
'   G_Caller = F9960_Access_Value("Tag", "9F37", "U", F9970_Temp1)              ' Store the unpredictable number
    
'   F9970_Temp2 = Worksheets(G_Tab_Cover).Cells.Range(G_Cell_Bus_ID).Value
    
    F9970_Temp3(1) = (Mid(F9970_Temp1, 1, 1) & Mid(F9970_Temp1, 3, 1) & Mid(F9970_Temp1, 5, 1) & Mid(F9970_Temp1, 7, 1)) + 1
    F9970_Temp3(2) = (Mid(F9970_Temp1, 2, 1) & Mid(F9970_Temp1, 4, 1) & Mid(F9970_Temp1, 6, 1) & Mid(F9970_Temp1, 8, 1)) + 2
    F9970_Temp3(3) = (Mid(F9970_Temp1, 3, 1) & Mid(F9970_Temp1, 5, 1) & Mid(F9970_Temp1, 7, 1) & Mid(F9970_Temp1, 1, 1)) + 1
    F9970_Temp3(4) = (Mid(F9970_Temp1, 4, 1) & Mid(F9970_Temp1, 6, 1) & Mid(F9970_Temp1, 8, 1) & Mid(F9970_Temp1, 2, 1)) + 2
    F9970_Temp4(1) = (Mid(F9970_Temp1, 1, 1) & Mid(F9970_Temp1, 8, 1) & Mid(F9970_Temp1, 6, 1) & Mid(F9970_Temp1, 4, 1)) + 1
    F9970_Temp4(2) = (Mid(F9970_Temp1, 8, 1) & Mid(F9970_Temp1, 8, 1) & Mid(F9970_Temp1, 6, 1) & Mid(F9970_Temp1, 7, 1)) + 2
    F9970_Temp4(3) = (Mid(F9970_Temp1, 7, 1) & Mid(F9970_Temp1, 7, 1) & Mid(F9970_Temp1, 5, 1) & Mid(F9970_Temp1, 8, 1)) + 1
    F9970_Temp4(4) = (Mid(F9970_Temp1, 6, 1) & Mid(F9970_Temp1, 6, 1) & Mid(F9970_Temp1, 7, 1) & Mid(F9970_Temp1, 5, 1)) + 2
    
    F9970_Temp5(1) = (Mid(F9970_Temp2, 1, 1) & Mid(F9970_Temp2, 3, 1) & Mid(F9970_Temp2, 5, 1) & Mid(F9970_Temp2, 7, 1)) + 3
    F9970_Temp5(2) = (Mid(F9970_Temp2, 2, 1) & Mid(F9970_Temp2, 4, 1) & Mid(F9970_Temp2, 6, 1) & Mid(F9970_Temp2, 8, 1)) + 4
    F9970_Temp5(3) = (Mid(F9970_Temp2, 3, 1) & Mid(F9970_Temp2, 5, 1) & Mid(F9970_Temp2, 7, 1) & Mid(F9970_Temp2, 1, 1)) + 3
    F9970_Temp5(4) = (Mid(F9970_Temp2, 4, 1) & Mid(F9970_Temp2, 6, 1) & Mid(F9970_Temp2, 8, 1) & Mid(F9970_Temp2, 2, 1)) + 4
    F9970_Temp6(1) = (Mid(F9970_Temp2, 1, 1) & Mid(F9970_Temp2, 8, 1) & Mid(F9970_Temp2, 6, 1) & Mid(F9970_Temp2, 4, 1)) + 3
    F9970_Temp6(2) = (Mid(F9970_Temp2, 8, 1) & Mid(F9970_Temp2, 8, 1) & Mid(F9970_Temp2, 6, 1) & Mid(F9970_Temp2, 7, 1)) + 4
    F9970_Temp6(3) = (Mid(F9970_Temp2, 7, 1) & Mid(F9970_Temp2, 7, 1) & Mid(F9970_Temp2, 5, 1) & Mid(F9970_Temp2, 8, 1)) + 3
    F9970_Temp6(4) = (Mid(F9970_Temp2, 6, 1) & Mid(F9970_Temp2, 6, 1) & Mid(F9970_Temp2, 7, 1) & Mid(F9970_Temp2, 5, 1)) + 4
    
    F9970_Temp7 = 1
    F9970_Temp8 = 1
    F9970_Temp9 = 1
    F9970_Temp0 = 1
    
    For F9970_Index = 1 To 4
        F9970_Temp7 = (F9970_Temp7 * F9970_Temp3(F9970_Index)) + (F9970_Index + 29)
        F9970_Temp7 = F9970_Temp7 Mod 5678
        F9970_Temp8 = (F9970_Temp8 * F9970_Temp4(F9970_Index)) + (F9970_Index + 31)
        F9970_Temp8 = F9970_Temp8 Mod 6876
        F9970_Temp9 = (F9970_Temp9 * F9970_Temp5(F9970_Index)) + (F9970_Index + 41)
        F9970_Temp9 = F9970_Temp9 Mod 6765
        F9970_Temp0 = (F9970_Temp0 * F9970_Temp6(F9970_Index)) + (F9970_Index + 59)
        F9970_Temp0 = F9970_Temp0 Mod 5678
    Next F9970_Index
    
    F9970_TempA = (F9970_Temp7 & F9970_Temp8) + 0
    F9970_TempB = (F9970_Temp9 & F9970_Temp0) + 0
    F9970_TempC = F9970_TempA + F9970_TempB
    
    G_Password = Hex(F9970_TempC)
    
    If Len(G_Password) < 8 Then G_Password = G_Password & Mid(G_Password, 2, 8 - Len(G_Password))
    If Len(G_Password) > 8 Then G_Password = Left(G_Password, 8)
    
End Function                                                                    ' of F9970_Generate
Function F9980_Switch_Worksheets(F9980_Old_Sheet, F9980_New_Sheet)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the old worksheet; display the new worksheet
    ' - The new worksheet must be displayed before the old worksheet is hidden. The only visible worksheet cannot be hidden.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9980_Zoom                                          As Integer
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if switching to the same worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9980_New_Sheet = F9980_Old_Sheet Then
        Exit Function
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Store the current zoom percentage
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9980_Zoom = ActiveWindow.Zoom
    G_Caller = F0300_Access_Value("View", "Zoom", "U", F9980_Zoom)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes to Visible attribute
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display the new worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F9980_New_Sheet).Visible = True
    Worksheets(F9980_New_Sheet).Activate
    ActiveWindow.Zoom = F9980_Zoom                                              ' Ensure consistent zoom
    Application.GoTo Range("A14"), Scroll:=True
    Application.GoTo Range("A1"), Scroll:=True
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the old worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F9980_Old_Sheet).Visible = False
    
End Function                                                                    ' of F9980_Switch_Worksheets
Function F9981_Unprotect_One(F9981_Tab)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect one worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the workbook or one worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F9981_Tab
    
    Case "Workbook"
        If G_SpreadSht_Status = "P" Then
            ThisWorkbook.Unprotect Password:=G_Prot_Str
            G_SpreadSht_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Workbook", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_A_Msg
        If G_Tab_A_Msg_Status = "P" Then
            Worksheets(G_Tab_A_Msg).Unprotect Password:=G_Prot_Adm
            G_Tab_A_Msg_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "A_Msg", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_A_Reg
        If G_Tab_A_Reg_Status = "P" Then
            Worksheets(G_Tab_A_Reg).Unprotect Password:=G_Prot_Adm
            G_Tab_A_Reg_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "A_Reg", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_A_PMA
        If G_Tab_A_PMA_Status = "P" Then
            Worksheets(G_Tab_A_PMA).Unprotect Password:=G_Prot_Adm
            G_Tab_A_PMA_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "A_PMA", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_A_Val
        If G_Tab_A_Val_Status = "P" Then
            Worksheets(G_Tab_A_Val).Unprotect Password:=G_Prot_Adm
            G_Tab_A_Val_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "A_Val", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Cover
        If G_Tab_Cover_Status = "P" Then
            Worksheets(G_Tab_Cover).Unprotect Password:=G_Prot_Std
            G_Tab_Cover_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Cover", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Gen_H
        If G_Tab_Gen_H_Status = "P" Then
            Worksheets(G_Tab_Gen_H).Unprotect Password:=G_Prot_Std
            G_Tab_Gen_H_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Gen_H", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Print
        If G_Tab_Print_Status = "P" Then
            Worksheets(G_Tab_Print).Unprotect Password:=G_Prot_Std
            G_Tab_Print_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Print", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc31
        If G_Tab_Svc31_Status = "P" Then
            Worksheets(G_Tab_Svc31).Unprotect Password:=G_Prot_Std
            G_Tab_Svc31_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc31", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc34
        If G_Tab_Svc34_Status = "P" Then
            Worksheets(G_Tab_Svc34).Unprotect Password:=G_Prot_Std
            G_Tab_Svc34_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc34", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc35
        If G_Tab_Svc35_Status = "P" Then
            Worksheets(G_Tab_Svc35).Unprotect Password:=G_Prot_Std
            G_Tab_Svc35_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc35", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc36
        If G_Tab_Svc36_Status = "P" Then
            Worksheets(G_Tab_Svc36).Unprotect Password:=G_Prot_Std
            G_Tab_Svc36_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc36", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc37
        If G_Tab_Svc37_Status = "P" Then
            Worksheets(G_Tab_Svc37).Unprotect Password:=G_Prot_Std
            G_Tab_Svc37_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc37", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc38
        If G_Tab_Svc38_Status = "P" Then
            Worksheets(G_Tab_Svc38).Unprotect Password:=G_Prot_Std
            G_Tab_Svc38_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc38", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc40
        If G_Tab_Svc40_Status = "P" Then
            Worksheets(G_Tab_Svc40).Unprotect Password:=G_Prot_Std
            G_Tab_Svc40_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc40", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc41
        If G_Tab_Svc41_Status = "P" Then
            Worksheets(G_Tab_Svc41).Unprotect Password:=G_Prot_Std
            G_Tab_Svc41_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc41", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc42
        If G_Tab_Svc42_Status = "P" Then
            Worksheets(G_Tab_Svc42).Unprotect Password:=G_Prot_Std
            G_Tab_Svc42_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc42", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc43
        If G_Tab_Svc43_Status = "P" Then
            Worksheets(G_Tab_Svc43).Unprotect Password:=G_Prot_Std
            G_Tab_Svc43_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc43", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc44
        If G_Tab_Svc44_Status = "P" Then
            Worksheets(G_Tab_Svc44).Unprotect Password:=G_Prot_Std
            G_Tab_Svc44_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc44", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc45
        If G_Tab_Svc45_Status = "P" Then
            Worksheets(G_Tab_Svc45).Unprotect Password:=G_Prot_Std
            G_Tab_Svc45_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc45", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc46
        If G_Tab_Svc46_Status = "P" Then
            Worksheets(G_Tab_Svc46).Unprotect Password:=G_Prot_Std
            G_Tab_Svc46_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc46", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc47
        If G_Tab_Svc47_Status = "P" Then
            Worksheets(G_Tab_Svc47).Unprotect Password:=G_Prot_Std
            G_Tab_Svc47_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc47", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc48
        If G_Tab_Svc48_Status = "P" Then
            Worksheets(G_Tab_Svc48).Unprotect Password:=G_Prot_Std
            G_Tab_Svc48_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc48", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_Svc49
        If G_Tab_Svc49_Status = "P" Then
            Worksheets(G_Tab_Svc49).Unprotect Password:=G_Prot_Std
            G_Tab_Svc49_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "Svc49", "U", "U")
            Exit Function
        End If
    
    Case G_Tab_CCDat
        If G_Tab_CCDat_Status = "P" Then
            Worksheets(G_Tab_CCDat).Unprotect Password:=G_Prot_CCD
            G_Tab_CCDat_Status = "U"
            G_Caller = F0300_Access_Value("Protected", "CCDat", "U", "U")
            Exit Function
        End If
    
    End Select
    
End Function                                                                    ' of F9981_Unprotect_One
Function F9982_Protect_All()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect all worksheets that are currently in unprotected mode
    ' - Sheets in range 20-80 are protected with a password; the others are protected without password
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect the spreadsheet if it is currently in unprotected mode
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_SpreadSht_Status = "U" Then
        ThisWorkbook.Protect Password:=G_Prot_Str, Structure:=True
        G_SpreadSht_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Workbook", "U", "P")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect all worksheets that are currently in unprotected mode
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_Tab_A_Msg_Status = "U" Then
        Worksheets(G_Tab_A_Msg).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
        G_Tab_A_Msg_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "A_Msg", "U", "P")
    End If
    
    If G_Tab_A_Reg_Status = "U" Then
        Worksheets(G_Tab_A_Reg).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
        G_Tab_A_Reg_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "A_Reg", "U", "P")
    End If
    
' Moved to the end of this function, after all other activity, so that it will not be unlocked again.
'   If G_Tab_A_PMA_Status = "U" Then
'       G_Caller = F0300_Access_Value("Protected", "A_PMA", "U", "P")
'       Worksheets(G_Tab_A_PMA).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
'       G_Tab_A_PMA_Status = "P"
'   End If
    
    If G_Tab_A_Val_Status = "U" Then
        Worksheets(G_Tab_A_Val).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
        G_Tab_A_Val_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "A_Val", "U", "P")
    End If
    
    If G_Tab_Cover_Status = "U" Then
        Worksheets(G_Tab_Cover).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Cover_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Cover", "U", "P")
    End If
    
    If G_Tab_Gen_H_Status = "U" Then
        Worksheets(G_Tab_Gen_H).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Gen_H_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Gen_H", "U", "P")
    End If
    
    If G_Tab_Print_Status = "U" Then
        Worksheets(G_Tab_Print).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Print_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Print", "U", "P")
    End If
    
    If G_Tab_Svc31_Status = "U" Then
        Worksheets(Sheet31.Name).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc31_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc31", "U", "P")
    End If
    
    If G_Tab_Svc34_Status = "U" Then
        Worksheets(G_Tab_Svc34).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc34_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc34", "U", "P")
    End If
    
    If G_Tab_Svc35_Status = "U" Then
        Worksheets(G_Tab_Svc35).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc35_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc35", "U", "P")
    End If
    
    If G_Tab_Svc36_Status = "U" Then
        Worksheets(G_Tab_Svc36).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc36_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc36", "U", "P")
    End If
    
    If G_Tab_Svc37_Status = "U" Then
        Worksheets(G_Tab_Svc37).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc37_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc37", "U", "P")
    End If
    
    If G_Tab_Svc38_Status = "U" Then
        Worksheets(G_Tab_Svc38).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc38_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc38", "U", "P")
    End If
    
    If G_Tab_Svc40_Status = "U" Then
        Worksheets(G_Tab_Svc40).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc40_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc40", "U", "P")
    End If
    
    If G_Tab_Svc41_Status = "U" Then
        Worksheets(G_Tab_Svc41).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc41_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc41", "U", "P")
    End If
    
    If G_Tab_Svc42_Status = "U" Then
        Worksheets(G_Tab_Svc42).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc42_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc42", "U", "P")
    End If
    
    If G_Tab_Svc43_Status = "U" Then
        Worksheets(G_Tab_Svc43).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc43_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc43", "U", "P")
    End If
    
    If G_Tab_Svc44_Status = "U" Then
        Worksheets(G_Tab_Svc44).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc44_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc44", "U", "P")
    End If
    
    If G_Tab_Svc45_Status = "U" Then
        Worksheets(G_Tab_Svc45).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc45_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc45", "U", "P")
    End If
    
    If G_Tab_Svc46_Status = "U" Then
        Worksheets(G_Tab_Svc46).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc46_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc46", "U", "P")
    End If
    
    If G_Tab_Svc47_Status = "U" Then
        Worksheets(G_Tab_Svc47).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc47_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc47", "U", "P")
    End If
    
    If G_Tab_Svc48_Status = "U" Then
        Worksheets(G_Tab_Svc48).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc48_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc48", "U", "P")
    End If
    
    If G_Tab_Svc49_Status = "U" Then
        Worksheets(G_Tab_Svc49).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Std
        G_Tab_Svc49_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "Svc49", "U", "P")
    End If
    
    If G_Tab_CCDat_Status = "U" Then
        Worksheets(G_Tab_CCDat).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_CCD
        G_Tab_CCDat_Status = "P"
        G_Caller = F0300_Access_Value("Protected", "CCDat", "U", "P")
    End If
    
    If G_Tab_A_PMA_Status = "U" Then
        G_Caller = F0300_Access_Value("Protected", "A_PMA", "U", "P")
        Worksheets(G_Tab_A_PMA).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
        G_Tab_A_PMA_Status = "P"
    End If
    
End Function                                                                    ' of F9982_Protect_All
Function F9983_Cover_Row_For_Service(F9983_Service_Code)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function returns the row number on the front cover that is associated with the specified service code
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Initialise the result to zero
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9983_Cover_Row_For_Service = 0
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Return the row number based on the three-character Service Number
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9983_Service_Code = "S31" Then F9983_Cover_Row_For_Service = 31         ' BIN List
    If F9983_Service_Code = "S34" Then F9983_Cover_Row_For_Service = 36         ' Visa Smart Debit/Credit (VSDC)
    If F9983_Service_Code = "S35" Then F9983_Cover_Row_For_Service = 37         ' VbV
    If F9983_Service_Code = "S36" Then F9983_Cover_Row_For_Service = 32         ' CVV / iCVV / CVV2
    If F9983_Service_Code = "S37" Then F9983_Cover_Row_For_Service = 34         ' PIN Processing
    If F9983_Service_Code = "S38" Then F9983_Cover_Row_For_Service = 35         ' STIP
    If F9983_Service_Code = "S40" Then F9983_Cover_Row_For_Service = 38         ' Visa Direct
    If F9983_Service_Code = "S41" Then F9983_Cover_Row_For_Service = 40         ' Alternate Authorisation Routing
    If F9983_Service_Code = "S42" Then F9983_Cover_Row_For_Service = 33         ' Currency Conversion Options
    If F9983_Service_Code = "S43" Then F9983_Cover_Row_For_Service = 39         ' Additional Processing Options
    If F9983_Service_Code = "S44" Then F9983_Cover_Row_For_Service = 41         ' SMS Reports & Raw Data
    If F9983_Service_Code = "S45" Then F9983_Cover_Row_For_Service = 42         ' Visa Resolve Online (VROL) Financials
    If F9983_Service_Code = "S46" Then F9983_Cover_Row_For_Service = 45         ' Settlement & VSS Reporting
    If F9983_Service_Code = "S47" Then F9983_Cover_Row_For_Service = 43         ' Clearing
    If F9983_Service_Code = "S48" Then F9983_Cover_Row_For_Service = 44         ' Application processor / CIB
    If F9983_Service_Code = "S49" Then F9983_Cover_Row_For_Service = 46         ' Additional Reports
    
    If F9983_Cover_Row_For_Service > 0 Then Exit Function
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Return the row number based on the two-character code for the service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9983_Service_Code = "BL" Then F9983_Cover_Row_For_Service = 31          ' BIN List
    If F9983_Service_Code = "EM" Then F9983_Cover_Row_For_Service = 36          ' Visa Smart Debit/Credit (VSDC)
    If F9983_Service_Code = "VV" Then F9983_Cover_Row_For_Service = 37          ' VbV
    If F9983_Service_Code = "CV" Then F9983_Cover_Row_For_Service = 32          ' CVV / iCVV / CVV2
    If F9983_Service_Code = "PP" Then F9983_Cover_Row_For_Service = 34          ' PIN Processing
    If F9983_Service_Code = "S1" Then F9983_Cover_Row_For_Service = 35          ' STIP
    If F9983_Service_Code = "VD" Then F9983_Cover_Row_For_Service = 38          ' Visa Direct
    If F9983_Service_Code = "A1" Then F9983_Cover_Row_For_Service = 40          ' Alternate Authorisation Routing
    If F9983_Service_Code = "MO" Then F9983_Cover_Row_For_Service = 33          ' Currency Conversion Options
    If F9983_Service_Code = "PO" Then F9983_Cover_Row_For_Service = 39          ' Additional Processing Options
    If F9983_Service_Code = "RR" Then F9983_Cover_Row_For_Service = 41          ' SMS Reports & Raw Data
    If F9983_Service_Code = "VR" Then F9983_Cover_Row_For_Service = 42          ' Visa Resolve Online (VROL) Financials
    If F9983_Service_Code = "VS" Then F9983_Cover_Row_For_Service = 45          ' Settlement & VSS Reporting
    If F9983_Service_Code = "CL" Then F9983_Cover_Row_For_Service = 43          ' Clearing
    If F9983_Service_Code = "CB" Then F9983_Cover_Row_For_Service = 44          ' Application processor / CIB
    If F9983_Service_Code = "VR" Then F9983_Cover_Row_For_Service = 46          ' Additional Reports
    
    If F9983_Cover_Row_For_Service > 0 Then Exit Function
    
End Function                                                                    ' of F9983_Cover_Row_For_Service
Function F9984_Format_Answer_Cell(F9984_Worksheet, F9984_Cell_Address, F9984_Cell_Format)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function applies "normal" formatting to an answer cell (this may also be a range).
    ' This is needed because the client may paste a cell from another spreadsheet and this will take the formatting from the original.
    ' It is vital that answer cells are correctly formatted as this is used by Print Preview to identify answer cells.
    ' Cell Format:
    ' - Date
    ' - Ccy
    ' - [null]
    ' Formatting to be added is:
    ' - Borders (left, right, top, bottom)
    ' - Text format (or other)
    ' - There is no need to apply the standard light grey-blue background as this will be set when the validation is performed.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Apply formatting - borders
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    With Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    With Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    With Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    With Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Apply formatting - format (text / date)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9984_Cell_Format = "" Then
        Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).NumberFormat = "@"
    End If
    
    If F9984_Cell_Format = "Ccy" Then
        Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).NumberFormat = "000"
        Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).HorizontalAlignment = xlLeft
    End If
    
    If F9984_Cell_Format = "Date" Then
        Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).NumberFormat = "[$-F800]dddd, mmmm dd, yyyy"  ' This special format depends on runner's regional settings
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Apply formatting - font
    ' - Date must be Arial Narrow 10 point because the US default date format is very long ("Wednesday September 30, 2015" is the longest actual date)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9984_Cell_Format = "" Then
        With Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Font
            .Name = "Arial"
            .FontStyle = "Normal"
            .Size = 10
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .ThemeFont = xlThemeFontNone
        End With
    End If
    
    If F9984_Cell_Format = "Date" Then
        With Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Font
            .Name = "Arial Narrow"
            .FontStyle = "Normal"
            .Size = 10
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .ThemeFont = xlThemeFontNone
        End With
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Apply locking - unlock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Worksheets(F9984_Worksheet).Range(F9984_Cell_Address).Locked = False
    
End Function                                                                    ' of F9984_Format_Answer_Cell
Function F9985_Display_Validation_Message()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function displays a once-only message when the user clicks Validate or Validate All Services for the first time
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if (a) the function has been turned off, or (b) the user has already seen the message
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Validate", "User", "G", "")
        Case "N", "No", G_Runner:   Exit Function
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display the message box
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0100_Find_Comment("VALIDATE", "NONE", "")                       ' Obtain the message
    G_Response = MsgBox(G_Comment, vbInformation, G_Title)                      ' Display the message
    G_Caller = F0300_Access_Value("Validate", "User", "U", G_Runner)            ' Indicate that message has been displayed for this user
    
End Function                                                                    ' of F9985_Display_Validation_Message
Function F9986_Count_Values(F9986_V0, F9986_V1, F9986_V2, F9986_V3, F9986_V4, F9986_V5, F9986_V6, F9986_V7, F9986_V8, F9986_V9)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count up cells where the value is not empty
    ' - Input:  10 values
    ' - Output: G_CWD_Count (which may already contain a value)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Count up cells where the value is not empty
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F9986_V0 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V1 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V2 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V3 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V4 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V5 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V6 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V7 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V8 <> "" Then G_CWD_Count = G_CWD_Count + 1
    If F9986_V9 <> "" Then G_CWD_Count = G_CWD_Count + 1
    
End Function                                                                    ' of F9986_Count_Values
Function F9987_Expiry_Warning()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check whether the date has gone past the CIQ expiry date in the PMA. If so, display a warning message.
    ' - Input:  PMA (CIQ Expiry / Date) and PMA (CIQ Expiry / Message)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9987_Date                                          As Date
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check the date
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    F9987_Date = F0300_Access_Value("CIQ Expiry", "Date", "G", "")
    If F9987_Date < Now() Then
        G_Message = F0300_Access_Value("CIQ Expiry", "Message", "G", "")
        G_Response = MsgBox(G_Message, vbExclamation, G_Title)
    End If
    
End Function                                                                    ' of F9987_Expiry_Warning
Sub F9999_Find_Font_Colour()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine obtains the RGB values for a font
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9999_R, F9999_G, F9999_B                           As Long
    Dim F9999_Colour                                        As String
    F9999_Colour = Hex(ActiveCell.Font.Color)
    F9999_R = CLng("&H" & Mid(F9999_Colour, 1, 2))
    F9999_G = CLng("&H" & Mid(F9999_Colour, 3, 2))
    F9999_B = CLng("&H" & Mid(F9999_Colour, 5, 2))
End Sub                                                                         ' of F9999_Find_Font_Colour
Sub F9999_Update_Edition()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine applies the date and version into the cell containing the Edition data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9999_Sheet                                         As Worksheet
    Dim F9999_Visible                                       As Boolean
    Dim F9999_Edition_Vers                                  As String
    Dim F9999_Edition_Date                                  As String
    Dim F9999_Change_PWord                                  As String
    
    F9999_Edition_Vers = "CCM1014 " & Chr(150) & " Edition V0m"                 ' Update this value (Chr(150) is N-dash)
    F9999_Edition_Date = "April 2019 " & Chr(150) & " Build 20190626a"          ' Update this value
    F9999_Change_PWord = "N"                                                    ' "Y" if changing password; otherwise "N"
    
    G_Caller = F0000_Initialisation()
    
    If F9999_Change_PWord = "Y" Then                                            ' If changing the password then
        ThisWorkbook.Unprotect Password:=G_Prot_Str_O
    Else
        ThisWorkbook.Unprotect Password:=G_Prot_Str
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process each worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    For Each F9999_Sheet In Sheets                                              ' For each sheet
        
        If F9999_Sheet.Name = "PRINT PREVIEW" Then GoTo F9999_Bypass
        If F9999_Sheet.Name = "LOCK & SAVE" Then GoTo F9999_Bypass
        
        If F9999_Sheet.Visible = True Then                                      ' If sheet is visible then
            F9999_Visible = True                                                ' Note this fact
        Else                                                                    ' If sheet is not visible then
            F9999_Visible = False                                               ' Note this fact and
            F9999_Sheet.Visible = True                                          ' Render the sheet visible
        End If
        
        Worksheets(F9999_Sheet.Name).Activate                                   ' Activate the sheet
        
        Select Case F9999_Sheet.Name
        
        Case G_Tab_A_Msg, G_Tab_A_Reg, G_Tab_A_PMA, G_Tab_A_Val                 ' Admin worksheets
            If F9999_Change_PWord = "Y" Then                                        ' If changing the password then
                ActiveSheet.Unprotect Password:=G_Prot_Adm_O                        ' Unprotect the sheet - old password
            Else
                ActiveSheet.Unprotect Password:=G_Prot_Adm                          ' Unprotect the sheet - standard password
            End If
        
        Case G_Tab_CCDat                                                        ' CCData worksheet
            If F9999_Change_PWord = "Y" Then                                        ' If changing the password then
                ActiveSheet.Unprotect Password:=G_Prot_CCD_O                        ' Unprotect the sheet - old password
            Else
                ActiveSheet.Unprotect Password:=G_Prot_CCD                          ' Unprotect the sheet - standard password
            End If
        
        Case Else                                                               ' Standard worksheets
            If F9999_Change_PWord = "Y" Then                                        ' If changing the password then
                ActiveSheet.Unprotect Password:=G_Prot_Std_O                        ' Unprotect the sheet - old password
            Else
                ActiveSheet.Unprotect Password:=G_Prot_Std                          ' Unprotect the sheet - standard password
            End If
        
        End Select
        
        Cells.Find(What:="Edition", _
                   After:=ActiveCell, _
                   LookIn:=xlFormulas, _
                   LookAt:=xlPart, _
                   SearchOrder:=xlByRows, _
                   SearchDirection:=xlNext, _
                   MatchCase:=False, _
                   SearchFormat:=False).Activate                                ' Find the cell containing Edition number and date
        
        ActiveCell.Value = F9999_Edition_Vers & Chr(10) & F9999_Edition_Date    ' Update the value with the values set above
        
        Range("A1").Select                                                      ' Position at top
        
        If F9999_Visible = False Then                                           ' If sheet was not visible then
            ActiveSheet.Visible = False                                         ' Render the sheet invisible
        End If
        
F9999_Bypass:
        
    Next F9999_Sheet                                                            ' Go around again for each sheet in turn
    
    G_SpreadSht_Status = "U"
    G_Tab_A_Msg_Status = "U"
    G_Tab_A_Reg_Status = "U"
    G_Tab_A_PMA_Status = "U"
    G_Tab_A_Val_Status = "U"
    G_Tab_Cover_Status = "U"
    G_Tab_Gen_H_Status = "U"
    G_Tab_Print_Status = "U"
    G_Tab_Svc31_Status = "U"
    G_Tab_Svc34_Status = "U"
    G_Tab_Svc35_Status = "U"
    G_Tab_Svc36_Status = "U"
    G_Tab_Svc37_Status = "U"
    G_Tab_Svc38_Status = "U"
    G_Tab_Svc40_Status = "U"
    G_Tab_Svc41_Status = "U"
    G_Tab_Svc42_Status = "U"
    G_Tab_Svc43_Status = "U"
    G_Tab_Svc44_Status = "U"
    G_Tab_Svc45_Status = "U"
    G_Tab_Svc46_Status = "U"
    G_Tab_Svc47_Status = "U"
    G_Tab_Svc48_Status = "U"
    G_Tab_Svc49_Status = "U"
    G_Tab_CCDat_Status = "U"
    G_Caller = F9982_Protect_All                                                ' Protect the worksheets using the various (new) passwords
    
End Sub                                                                         ' of F9999_Update_Edition
Sub F9999_Display_and_Unlock()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine displays and unlocks all worksheets
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9999_Sheet                                         As Worksheet
    Dim F9999_PWord                                         As String
    
    G_Caller = F0000_Initialisation()
    
    ThisWorkbook.Unprotect Password:=G_Prot_Str                                 ' Unprotect the structure
    For Each F9999_Sheet In Sheets                                              ' For each sheet
        If F9999_Sheet.Visible = True Then                                      ' If sheet is visible then
        Else                                                                    ' If sheet is not visible then
            F9999_Sheet.Visible = True                                          ' Render the sheet visible
        End If
        Worksheets(F9999_Sheet.Name).Activate                                   ' Activate the sheet
        F9999_PWord = F9999_Select_PWord(F9999_Sheet.Name)                      ' Obtain the password for the sheet
        ActiveSheet.Unprotect Password:=F9999_PWord                             ' Unprotect the sheet
    Next F9999_Sheet                                                            ' Go around again for each sheet in turn
End Sub                                                                         ' of F9999_Display_and_Unlock
Sub F9999_Display_and_Unlock_One()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine displays and unlocks one worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9999_Sheet                                         As String
    Dim F9999_PWord                                         As String
    
    G_Caller = F0000_Initialisation()
    
'   F9999_Sheet = G_Tab_Cover                                                   ' Front Cover
'   F9999_Sheet = G_Tab_Gen_H                                                   ' Print Preview
'   F9999_Sheet = G_Tab_Print                                                   ' Print Preview
'   F9999_Sheet = G_Tab_LSave                                                   ' Lock and Save
'   F9999_Sheet = G_Tab_Svc31                                                   ' Service 31 - BIN List
'   F9999_Sheet = G_Tab_Svc34                                                   ' Service 34 - Visa Smart Debit/Credit (VSDC)
'   F9999_Sheet = G_Tab_Svc40                                                   ' Service 40 - Visa Direct
'   F9999_Sheet = G_Tab_Svc42                                                   ' Service 42 - Currency Conversion Options
'   F9999_Sheet = G_Tab_Svc43                                                   ' Service 43 - Additional Processing Options
    F9999_Sheet = G_Tab_Svc45                                                   ' Service 45 - Visa Resolve Online (VROL) Financials
'   F9999_Sheet = G_Tab_Svc46                                                   ' Service 46 - Settlement and VSS Reporting
'   F9999_Sheet = G_Tab_Svc47                                                   ' Service 47 - Clearing
'   F9999_Sheet = G_Tab_Svc48                                                   ' Service 48 - Application processor / CIB
    
    F9999_PWord = F9999_Select_PWord(F9999_Sheet)                               ' Obtain the password for the sheet
    ThisWorkbook.Unprotect Password:=G_Prot_Str                                 ' Unprotect the structure
    Worksheets(F9999_Sheet).Unprotect Password:=F9999_PWord                     ' Unprotect the worksheet
    Worksheets(F9999_Sheet).Visible = True                                      ' Render the worksheet visible
    ThisWorkbook.Protect Password:=G_Prot_Str, Structure:=True                  ' Reprotect the structure
    
End Sub                                                                         ' of F9999_Display_and_Unlock_One
Sub F9999_WSheet_Properties()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine sets properties for all worksheets
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Dim F9999_Sheet                                         As Worksheet
    For Each F9999_Sheet In Sheets                                              ' For each sheet
        Worksheets(F9999_Sheet.Name).EnableSelection = xlNoRestrictions         ' Set the property to allow vba unrestricted access despite sheet locking
        Worksheets(F9999_Sheet.Name).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, UserInterfaceOnly:=True, Password:="RDWL"
    Next F9999_Sheet                                                            ' Go around again for each sheet in turn
End Sub                                                                         ' of F9999_WSheet_Properties
Sub F9999_Display_LSave()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine displays the LSavea tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    ThisWorkbook.Unprotect Password:=G_Prot_Str                                 ' Unprotect the structure
    Worksheets(G_Tab_LSave).Unprotect Password:=G_Prot_CCD                      ' Unprotect the worksheet
    Worksheets(G_Tab_LSave).Activate                                            ' Activate the sheet
    Worksheets(G_Tab_LSave).Visible = True                                      ' Render the sheet visible
    ThisWorkbook.Protect Password:=G_Prot_Str, Structure:=True                  ' Reprotect the structure
End Sub                                                                         ' of F9999_Display_LSave
Sub F9999_Hide_LSave()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine hides the LSavea tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    ThisWorkbook.Unprotect Password:=G_Prot_Str                                 ' Unprotect the structure
    Worksheets(G_Tab_LSave).Activate                                            ' Activate the sheet
    Worksheets(G_Tab_LSave).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_CCD
    Worksheets(G_Tab_LSave).Visible = xlVeryHidden                              ' Render the sheet invisible
    ThisWorkbook.Protect Password:=G_Prot_Str, Structure:=True                  ' Reprotect the structure
End Sub                                                                         ' of F9999_Hide_LSave
Sub F9999_Unlock_Structure()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine unlocks the whole workbook to allow sheets to be added/removed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    ThisWorkbook.Unprotect Password:=G_Prot_Str                                 ' Unprotect the structure
End Sub                                                                         ' of F9999_Unlock_Structure
Sub F9999_Lock_Structure()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine locks the whole workbook to prevent sheets from being added/removed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    ThisWorkbook.Protect Password:=G_Prot_Str, Structure:=True                  ' Reprotect the structure
End Sub                                                                         ' of F9999_Lock_Structure
Sub F9999_Lock_All()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine locks all tabs and also the whole workbook to prevent sheets from being added/removed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    G_SpreadSht_Status = "U"
    G_Tab_A_Msg_Status = "U"
    G_Tab_A_Reg_Status = "U"
    G_Tab_A_PMA_Status = "U"
    G_Tab_A_Val_Status = "U"
    G_Tab_Cover_Status = "U"
    G_Tab_Gen_H_Status = "U"
    G_Tab_Print_Status = "U"
    G_Tab_Svc31_Status = "U"
    G_Tab_Svc34_Status = "U"
    G_Tab_Svc35_Status = "U"
    G_Tab_Svc36_Status = "U"
    G_Tab_Svc37_Status = "U"
    G_Tab_Svc38_Status = "U"
    G_Tab_Svc40_Status = "U"
    G_Tab_Svc41_Status = "U"
    G_Tab_Svc42_Status = "U"
    G_Tab_Svc43_Status = "U"
    G_Tab_Svc44_Status = "U"
    G_Tab_Svc45_Status = "U"
    G_Tab_Svc46_Status = "U"
    G_Tab_Svc47_Status = "U"
    G_Tab_Svc48_Status = "U"
    G_Tab_Svc49_Status = "U"
    G_Tab_CCDat_Status = "U"
    G_Caller = F9982_Protect_All()                                              ' Protect the worksheets using the various (new) passwords
End Sub                                                                         ' of F9999_Lock_All
Function F9999_Select_PWord(F9999_Sheet)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This internal subroutine returns the password that is associated with the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    Select Case F9999_Sheet
    
    Case G_Tab_A_Msg, G_Tab_A_Reg, G_Tab_A_PMA, G_Tab_A_Val                     ' Admin worksheets
        F9999_Select_PWord = G_Prot_Adm_O
    
    Case G_Tab_CCDat                                                            ' CCData worksheet
        F9999_Select_PWord = G_Prot_CCD_O
    
    Case Else                                                                   ' Standard worksheets
        F9999_Select_PWord = G_Prot_Std_O
    
    End Select
End Function                                                                    ' of F9999_Select_PWord
Function F9999_Remove_Data_Validation_Lists()
    
    Range("A14:O29").Select
    With Selection.Validation
        .Delete
    End With
End Function
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------


Attribute VB_Name = "Sheet01"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "AM_Admin_Lock, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "AM_Admin_Unlock, 1, 1, MSForms, CommandButton"
Option Explicit
Private Sub AM_Admin_Unlock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1001_Position_Buttons_on_Sheet01()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If AM_Admin_Unlock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Unprotect Password:=G_Prot_Adm                                  ' Unprotect the worksheet
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of AM_Admin_Unlock_Click
Private Sub AM_Admin_Lock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Lock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1001_Position_Buttons_on_Sheet01()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If AM_Admin_Lock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of AM_Admin_Lock_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Sheet02"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "AR_Admin_Lock, 4, 0, MSForms, CommandButton"
Attribute VB_Control = "AR_Admin_Unlock, 3, 1, MSForms, CommandButton"
Option Explicit
Private Sub AR_Admin_Unlock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1002_Position_Buttons_on_Sheet02()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If AR_Admin_Unlock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Unprotect Password:=G_Prot_Adm                                  ' Unprotect the worksheet
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of AR_Admin_Unlock_Click
Private Sub AR_Admin_Lock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Lock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1002_Position_Buttons_on_Sheet02()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If AR_Admin_Lock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of AR_Admin_Lock_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet03"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "PM_Admin_Unlock, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "PM_Admin_Lock, 2, 1, MSForms, CommandButton"
Option Explicit
Private Sub PM_Admin_Unlock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1003_Position_Buttons_on_Sheet03()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If PM_Admin_Unlock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Unprotect Password:=G_Prot_Adm                                  ' Unprotect the worksheet
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of PM_Admin_Unlock_Click
Private Sub PM_Admin_Lock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Lock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1003_Position_Buttons_on_Sheet03()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If PM_Admin_Lock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of PM_Admin_Lock_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet04"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "FV_Admin_Lock, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "FV_Admin_Unlock, 1, 1, MSForms, CommandButton"
Option Explicit
Private Sub FV_Admin_Unlock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Unlock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1004_Position_Buttons_on_Sheet04()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FV_Admin_Unlock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Unprotect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Unprotect Password:=G_Prot_Adm                                  ' Unprotect the worksheet
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FV_Admin_Unlock_Click
Private Sub FV_Admin_Lock_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Admin Lock
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1004_Position_Buttons_on_Sheet04()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Exit if button is invisible (this is set in the Workbook_Open routine)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FV_Admin_Lock.Visible = False Then Exit Sub
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Protect the sheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=G_Prot_Adm
    ActiveWindow.Zoom = F0300_Access_Value("View", "Zoom", "G", "")             ' Ensure consistent zoom
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FV_Admin_Lock_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "FC_Service_S44, 9480, 19, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 4083, 20, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 3126, 21, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 2295, 22, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 100, 23, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 101, 24, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 102, 25, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 103, 26, MSForms, CommandButton"
Attribute VB_Control = "GP_Buttons_H, 1033, 27, MSForms, Label"
Attribute VB_Control = "FC_I_Agree, 4095, 28, MSForms, Label"
Attribute VB_Control = "FC_Button_LS, 4096, 29, MSForms, CommandButton"
Attribute VB_Control = "FC_Service_S31, 4102, 30, MSForms, Label"
Attribute VB_Control = "FC_Service_S34, 4104, 31, MSForms, Label"
Attribute VB_Control = "FC_Service_S35, 4105, 32, MSForms, Label"
Attribute VB_Control = "FC_Service_S36, 4109, 33, MSForms, Label"
Attribute VB_Control = "FC_Service_S37, 4110, 34, MSForms, Label"
Attribute VB_Control = "FC_Service_S38, 4111, 35, MSForms, Label"
Attribute VB_Control = "FC_Service_S40, 4113, 36, MSForms, Label"
Attribute VB_Control = "FC_Service_S41, 4114, 37, MSForms, Label"
Attribute VB_Control = "FC_Service_S42, 4115, 38, MSForms, Label"
Attribute VB_Control = "FC_Service_S43, 4116, 39, MSForms, Label"
Attribute VB_Control = "FC_Service_S45, 4118, 40, MSForms, Label"
Attribute VB_Control = "FC_Service_S46, 4119, 41, MSForms, Label"
Attribute VB_Control = "FC_Service_S47, 4120, 42, MSForms, Label"
Attribute VB_Control = "FC_Service_S48, 4121, 43, MSForms, Label"
Attribute VB_Control = "FC_Service_S49, 4122, 44, MSForms, Label"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Cover)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Cover, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Reset Form Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This is now handled by Form CIQF01
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    CIQF01.CIQF01_Sall.Caption = F0300_Access_Value("Reset", "All", "G", "")    ' Set to last time's selection
    If CIQF01.CIQF01_Sall.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_Sall.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_Sall.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S20a.Caption = F0300_Access_Value("Reset", "S20a", "G", "")   ' Set to last time's selection
    If CIQF01.CIQF01_S20a.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S20a.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S20a.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S20b.Caption = F0300_Access_Value("Reset", "S20b", "G", "")   ' Set to last time's selection
    If CIQF01.CIQF01_S20b.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S20b.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S20b.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S20c.Caption = F0300_Access_Value("Reset", "S20c", "G", "")   ' Set to last time's selection
    If CIQF01.CIQF01_S20c.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S20c.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S20c.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S31.Caption = F0300_Access_Value("Reset", "S31", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S31.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S31.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S31.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S34.Caption = F0300_Access_Value("Reset", "S34", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S34.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S34.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S34.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S35.Caption = F0300_Access_Value("Reset", "S35", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S35.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S35.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S35.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S36.Caption = F0300_Access_Value("Reset", "S36", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S36.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S36.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S36.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S37.Caption = F0300_Access_Value("Reset", "S37", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S37.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S37.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S37.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S38.Caption = F0300_Access_Value("Reset", "S38", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S38.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S38.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S38.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S40.Caption = F0300_Access_Value("Reset", "S40", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S40.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S40.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S40.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S41.Caption = F0300_Access_Value("Reset", "S41", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S41.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S41.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S41.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S42.Caption = F0300_Access_Value("Reset", "S42", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S42.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S42.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S42.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S43.Caption = F0300_Access_Value("Reset", "S43", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S43.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S43.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S43.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S44.Caption = F0300_Access_Value("Reset", "S44", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S44.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S44.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S44.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S45.Caption = F0300_Access_Value("Reset", "S45", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S45.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S45.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S45.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S46.Caption = F0300_Access_Value("Reset", "S46", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S46.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S46.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S46.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S47.Caption = F0300_Access_Value("Reset", "S47", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S47.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S47.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S47.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S48.Caption = F0300_Access_Value("Reset", "S48", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S48.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S48.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S48.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    CIQF01.CIQF01_S49.Caption = F0300_Access_Value("Reset", "S49", "G", "")     ' Set to last time's selection
    If CIQF01.CIQF01_S49.Caption = G_Check_Box_Sett Then
        CIQF01.CIQF01_S49.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
    Else
        CIQF01.CIQF01_S49.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    End If
    
    Load CIQF01
    CIQF01.Show
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Cover, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Validate data for all services
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2050_Validate_All()
    Worksheets(G_Tab_Cover).Activate
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate data on current screen
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2000_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display a warning message if the CIQ Expiry Date has passed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9987_Expiry_Warning()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Cover, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display a warning message if the CIQ Expiry Date has passed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9987_Expiry_Warning()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Cover, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
Private Sub FC_Service_S31_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 31 - BIN List
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S31", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow this to be turned off if the controlling fields have values
    ' - Applies to Installation and Coversion, but not to Maintenance
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S31.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        If Worksheets(G_Tab_Cover).Range(G_FC_Range_Region).Value <> "" And _
           Worksheets(G_Tab_Cover).Range(G_FC_Range_UpdTyp).Value <> "" Then    ' If at least Region and Update Type have been specified then
            
            G_Message = "The BIN List is required for all submissions. This selection cannot be turned off."
            G_Response = MsgBox(G_Message, vbCritical, G_Title)
            
            G_Err_Count = G_Err_Count + 1                                       ' Count one error
            
            G_Caller = F9982_Protect_All()                                      ' Reprotect all sheets and structure
            Application.ScreenUpdating = True
            
            Exit Sub                                                            ' Exit the routine
        End If
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S31.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S31.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S31.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S31", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat31).Value = ""
    Else
        FC_Service_S31.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S31.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S31", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat31).Value = "Not yet validated"
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S31_Click
Private Sub FC_Service_S34_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 34 - Visa Smart Debit/Credit (VSDC)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S34", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for environment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S34", G_FC_Value_Enviro, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Environment. If so,
        G_Message = "This service is not valid for the selected environment (" & G_FC_Value_Enviro & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for message capability
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S34", G_FC_Value_MsgCap, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Message Cap. If so,
        G_Message = "This service is not valid for the selected message capability (" & G_FC_Value_MsgCap & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for update type
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S34", G_FC_Value_UpdTyp, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Update Type. If so,
        G_Message = "This service is not valid for the selected update type (" & G_FC_Value_UpdTyp & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S34.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S34.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S34.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S34", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat34).Value = ""
        G_Caller = F9820_User_to_CCData("S34", "D")
    Else
        FC_Service_S34.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S34.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S34", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat34).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S34", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S34_Click
Private Sub FC_Service_S35_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 35 - Verified by Visa (VbV)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S35", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S35.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S35.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S35.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S35", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat35).Value = ""
        G_Caller = F9820_User_to_CCData("S35", "D")
    Else
        FC_Service_S35.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S35.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S35", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat35).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S35", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S35_Click
Private Sub FC_Service_S36_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 36 - CVV / iCVV / CVV2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S36", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S36.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S36.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S36.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S36", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat36).Value = ""
        G_Caller = F9820_User_to_CCData("S36", "D")
    Else
        FC_Service_S36.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S36.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S36", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat36).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S36", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S36_Click
Private Sub FC_Service_S37_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 37 - PIN Processing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S37", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S37.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S37.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S37.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S37", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat37).Value = ""
        G_Caller = F9820_User_to_CCData("S37", "D")
    Else
        FC_Service_S37.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S37.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S37", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat37).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S37", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S37_Click
Private Sub FC_Service_S38_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 38 - STIP - Stand-In Processing (STIP)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S38", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S38.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S38.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S38.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S38", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat38).Value = ""
        G_Caller = F9820_User_to_CCData("S38", "D")
    Else
        FC_Service_S38.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S38.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S38", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat38).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S38", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S38_Click
Private Sub FC_Service_S40_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 40 - Visa Direct
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S40", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for environment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S40", G_FC_Value_Enviro, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Environment. If so,
        G_Message = "This service is not valid for the selected environment (" & G_FC_Value_Enviro & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for message capability
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S40", G_FC_Value_MsgCap, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Message Cap. If so,
        G_Message = "This service is not valid for the selected message capability (" & G_FC_Value_MsgCap & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for update type
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S40", G_FC_Value_UpdTyp, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Update Type. If so,
        G_Message = "This service is not valid for the selected update type (" & G_FC_Value_UpdTyp & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S40.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S40.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S40.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S40", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat40).Value = ""
        G_Caller = F9820_User_to_CCData("S40", "D")
    Else
        FC_Service_S40.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S40.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S40", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat40).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S40", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S40_Click
Private Sub FC_Service_S41_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 41 - Alternate Authorisation Routing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S41", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S41.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S41.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S41.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S41", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat41).Value = ""
        G_Caller = F9820_User_to_CCData("S41", "D")
    Else
        FC_Service_S41.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S41.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S41", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat41).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S41", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S41_Click
Private Sub FC_Service_S42_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 42 - Currency Conversion Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S42", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S42.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S42.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S42.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S42", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat42).Value = ""
        G_Caller = F9820_User_to_CCData("S42", "D")
    Else
        FC_Service_S42.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S42.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S42", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat42).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S42", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S42_Click
Private Sub FC_Service_S43_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 43 - Additional Processing Options
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S43", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S43.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S43.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S43.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S43", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat43).Value = ""
        G_Caller = F9820_User_to_CCData("S43", "D")
    Else
        FC_Service_S43.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S43.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S43", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat43).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S43", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S43_Click
Private Sub FC_Service_S44_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 44 - SMS Reports and Raw Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S44", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for environment
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S44", G_FC_Value_Enviro, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Environment. If so,
        G_Message = "This service is not valid for the selected environment (" & G_FC_Value_Enviro & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for message capability
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S44", G_FC_Value_MsgCap, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Message Cap. If so,
        G_Message = "This service is not valid for the selected message capability (" & G_FC_Value_MsgCap & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for update type
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("S44", G_FC_Value_UpdTyp, "G", "") = "N" Then         ' Check to see if the service is not selectable because of the Update Type. If so,
        G_Message = "This service is not valid for the selected update type (" & G_FC_Value_UpdTyp & ")."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S44.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S44.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S44.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S44", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat44).Value = ""
        G_Caller = F9820_User_to_CCData("S44", "D")
    Else
        FC_Service_S44.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S44.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S44", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat44).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S44", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S44_Click
Private Sub FC_Service_S45_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 45 - Visa Resolve Online (VROL) Financials
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S45", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S45.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S45.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S45.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S45", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat45).Value = ""
        G_Caller = F9820_User_to_CCData("S45", "D")
    Else
        FC_Service_S45.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S45.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S45", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat45).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S45", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S45_Click
Private Sub FC_Service_S46_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 46 - Settlement and VSS Reporting
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S46", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S46.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S46.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S46.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S46", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat46).Value = ""
        G_Caller = F9820_User_to_CCData("S46", "D")
    Else
        FC_Service_S46.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S46.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S46", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat46).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S46", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S46_Click
Private Sub FC_Service_S47_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 47 - Clearing
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S47", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S47.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S47.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S47.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S47", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat47).Value = ""
        G_Caller = F9820_User_to_CCData("S47", "D")
    Else
        FC_Service_S47.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S47.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S47", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat47).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S47", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S47_Click
Private Sub FC_Service_S48_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 48 - Application Processor / CIB
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S48", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S48.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S48.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S48.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S48", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat48).Value = ""
        G_Caller = F9820_User_to_CCData("S48", "D")
    Else
        FC_Service_S48.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S48.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S48", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat48).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S48", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S48_Click
Private Sub FC_Service_S49_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - Service 49 - Additional Reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow changes if the header details have not yet been selected
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If G_FC_Value_Region = "" Or G_FC_Value_FinCty = "" Or G_FC_Value_Enviro = "" Or G_FC_Value_MsgCap = "" Or G_FC_Value_UpdTyp = "" Then
        G_Message = "Select Region, Country, Environment, Message Capability and Type of Update before selecting services"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Do not allow selection if the service is not valid for selection
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S49", "G", "") = "RX" Then                 ' Check to see if the service is not selectable. If so,
        G_Message = "This service is not valid for the selected region / environment / message capability / update type"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off the "I agree" button
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    FC_I_Agree.Caption = G_Check_Box_NSet                                       ' "I agree" button - Not selected
    FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents
    
    G_Caller = F9820_User_to_CCData("FC", "R1")
    G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
    
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_Service_S49.Caption = G_Check_Box_Sett Then                           ' If check box is currently checked then
        FC_Service_S49.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
        FC_Service_S49.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        G_Response = F0300_Access_Value("Status", "S49", "U", "NS")             ' Service not selected
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat49).Value = ""
        G_Caller = F9820_User_to_CCData("S49", "D")
    Else
        FC_Service_S49.Caption = G_Check_Box_Sett                               ' Change to "Checked"
        FC_Service_S49.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        G_Response = F0300_Access_Value("Status", "S49", "U", "SN")             ' Service selected; not yet validated
        Worksheets(G_Tab_Cover).Range(G_FC_Range_Stat49).Value = "Not yet validated"
        G_Caller = F9820_User_to_CCData("S49", "S")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of FC_Service_S49_Click
Private Sub FC_I_Agree_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check Box - I Agree
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set or unset the blue tick mark
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_I_Agree.Caption = G_Check_Box_Sett Then
        FC_I_Agree.Caption = G_Check_Box_NSet                                   ' Not selected
        FC_I_Agree.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
        Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).MergeArea.ClearContents            ' Clear the associated name
        G_Response = F0300_Access_Value("Tag", "Agreed", "U", "N")
        G_Caller = F9820_User_to_CCData("FC", "D1")
    Else
        FC_I_Agree.Caption = G_Check_Box_Sett                                   ' Selected
        FC_I_Agree.ForeColor = RGB(G_Colour_CBox_Sett_R, G_Colour_CBox_Sett_G, G_Colour_CBox_Sett_B)
        Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).Value = Application.UserName       ' Set the associated name
        G_Caller = F9981_Unprotect_One(G_Tab_CCDat)
        Worksheets(G_Tab_CCDat).Range("B158").Value = "Name taken from " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
        Worksheets(G_Tab_CCDat).Range("B159").Value = "Name is " & Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).Value
        G_Response = F0300_Access_Value("Tag", "Agreed", "U", "Y")
        G_Caller = F9820_User_to_CCData("FC", "I1")
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub
Private Sub FC_Button_LS_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Lock and Save
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate the current worksheet before performing the requested function
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2000_Validate()
    
    If G_Err_Count > 0 Then
        G_Message = "Requested action cannot be performed." & vbCr & vbCr & _
                    "Validation failed on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Ensure that all requested services have passed validation before performing the requested function
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S31", "G", "") = "SN" Or F0300_Access_Value("Status", "S31", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S34", "G", "") = "SN" Or F0300_Access_Value("Status", "S34", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S35", "G", "") = "SN" Or F0300_Access_Value("Status", "S35", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S36", "G", "") = "SN" Or F0300_Access_Value("Status", "S36", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S37", "G", "") = "SN" Or F0300_Access_Value("Status", "S37", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S38", "G", "") = "SN" Or F0300_Access_Value("Status", "S38", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S40", "G", "") = "SN" Or F0300_Access_Value("Status", "S40", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S41", "G", "") = "SN" Or F0300_Access_Value("Status", "S41", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S42", "G", "") = "SN" Or F0300_Access_Value("Status", "S42", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S43", "G", "") = "SN" Or F0300_Access_Value("Status", "S43", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S44", "G", "") = "SN" Or F0300_Access_Value("Status", "S44", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S45", "G", "") = "SN" Or F0300_Access_Value("Status", "S45", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S46", "G", "") = "SN" Or F0300_Access_Value("Status", "S46", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S47", "G", "") = "SN" Or F0300_Access_Value("Status", "S47", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S48", "G", "") = "SN" Or F0300_Access_Value("Status", "S48", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S49", "G", "") = "SN" Or F0300_Access_Value("Status", "S49", "G", "") = "SF" Then
        
        G_Message = "Requested action cannot be performed." & vbCr & vbCr & _
                    "All selected services must first pass validation."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for "I Agree"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If FC_I_Agree.Caption <> G_Check_Box_Sett Then                              ' I agree check box has not yet been checked
        G_Message = "Requested action cannot be performed - Please review the statement and select the ""I agree"" button in order to continue."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Validate All
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2050_Validate_All()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Ensure that all requested services have passed validation before performing the requested function
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If F0300_Access_Value("Status", "S31", "G", "") = "SN" Or F0300_Access_Value("Status", "S31", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S34", "G", "") = "SN" Or F0300_Access_Value("Status", "S34", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S35", "G", "") = "SN" Or F0300_Access_Value("Status", "S35", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S36", "G", "") = "SN" Or F0300_Access_Value("Status", "S36", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S37", "G", "") = "SN" Or F0300_Access_Value("Status", "S37", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S38", "G", "") = "SN" Or F0300_Access_Value("Status", "S38", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S40", "G", "") = "SN" Or F0300_Access_Value("Status", "S40", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S41", "G", "") = "SN" Or F0300_Access_Value("Status", "S41", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S42", "G", "") = "SN" Or F0300_Access_Value("Status", "S42", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S43", "G", "") = "SN" Or F0300_Access_Value("Status", "S43", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S44", "G", "") = "SN" Or F0300_Access_Value("Status", "S44", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S45", "G", "") = "SN" Or F0300_Access_Value("Status", "S45", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S46", "G", "") = "SN" Or F0300_Access_Value("Status", "S46", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S47", "G", "") = "SN" Or F0300_Access_Value("Status", "S47", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S48", "G", "") = "SN" Or F0300_Access_Value("Status", "S48", "G", "") = "SF" Or _
       F0300_Access_Value("Status", "S49", "G", "") = "SN" Or F0300_Access_Value("Status", "S49", "G", "") = "SF" Then
        
        G_Message = "Requested action cannot be performed." & vbCr & vbCr & _
                    "All selected services must first pass validation."
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Err_Count = G_Err_Count + 1
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Ask about the file name
    ' - Default name is original name then " - yyyy-mm-dd.xlsm"
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Save_File = Left(G_This_File, Len(G_This_File) - 5)                       ' Drop off the .xlsm
    G_Save_File = G_Save_File & " - " & Format(Now(), "yyyy-mm-dd")             ' Add the datestamp
    G_Save_File = G_Save_File & ".xlsx"                                         ' Add back the .xlsm
     
    G_Response = Application.GetSaveAsFilename(InitialFileName:=G_Save_File, _
                                               fileFilter:="Excel Files (*.xlsx), *.xlsx", _
                                               FilterIndex:=1, _
                                               Title:="Save As")
    
    G_Caller = F0300_Access_Value("Lock&Save", "File Name", "U", G_Response)    ' Save the folder path and file name (one field)
    
    If G_Response = "False" Then                                                ' If the user cancels the save then
        G_Err_Count = G_Err_Count + 1                                           ' Count this as an error
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
         
        Exit Sub                                                                ' Exit the routine
        
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Lock and Save
    ' - Mark IV processing has a user form for doing all this
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    CIQF02.CIQF02_PwdY.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
    CIQF02.CIQF02_PwdY.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    CIQF02.CIQF02_PwdN.Caption = G_Check_Box_NSet                               ' Change to "Not Checked"
    CIQF02.CIQF02_PwdN.ForeColor = RGB(G_Colour_CBox_NSet_R, G_Colour_CBox_NSet_G, G_Colour_CBox_NSet_B)
    
    CIQF02.CIQF02_Pwrd.Visible = False
    CIQF02.CIQF02_Pwrd_D.Visible = False
    
    CIQF02.CIQF02_Prog_1.Visible = False                                        ' Hide all progress indicators
    CIQF02.CIQF02_Prog_2.Visible = False
    CIQF02.CIQF02_Prog_3.Visible = False
    CIQF02.CIQF02_Prog_4.Visible = False
    CIQF02.CIQF02_Prog_5.Visible = False
    CIQF02.CIQF02_Prog_6.Visible = False
    CIQF02.CIQF02_Prog_7.Visible = False
    CIQF02.CIQF02_Prog_8.Visible = False
    
    CIQF02.CIQF02_Prog_1_D.Visible = False
    CIQF02.CIQF02_Prog_2_D.Visible = False
    CIQF02.CIQF02_Prog_3_D.Visible = False
    CIQF02.CIQF02_Prog_4_D.Visible = False
    CIQF02.CIQF02_Prog_5_D.Visible = False
    CIQF02.CIQF02_Prog_6_D.Visible = False
    CIQF02.CIQF02_Prog_7_D.Visible = False
    CIQF02.CIQF02_Prog_8_D.Visible = False
    
    Load CIQF02
    CIQF02.Show
    Unload CIQF02
    
End Sub                                                                         ' of FC_Button_LS_Click
Sub Worksheet_Change(ByVal Target As Range)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function is invoked whenever any cell value is changed.
    ' The routine name is fixed.
    ' The cells of interest are:
    ' - Region                  Affects the drop-down list of countries and the the selection of VSS reports
    ' - Country                 Affects the selection of VSS reports
    ' - Environment             Affects the services that are selectable
    ' - Message Capability      Affects the questions that are displayed
    ' - Update Type             Affects the services that are selectable and the questions that are displayed and the VSS reports
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the Region value has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_Region = Range("M15:M15")
    
    If Not Application.Intersect(G_Range_Region, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Increase recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count + 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Select the Region cell and set the validation range according to the Region selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_FC_Value_Region = Range("M15").Value
        
        Select Case G_FC_Value_Region
        
        Case ""                                                                 ' Cell has been reset to null value
            G_Range_Country = ""                                                ' Remove any country range
            G_Range_Product = ""                                                ' Remove any product range
        
        Case "AP"
            G_Range_Country = "=Countries_AP"
            G_Range_Product = "=Valid_Prod_AP"
        
        Case "Canada"
            G_Range_Country = "=Countries_CA"
            G_Range_Product = "=Valid_Prod_CA"
        
        Case "CEMEA"
            G_Range_Country = "=Countries_CE"
            G_Range_Product = "=Valid_Prod_CE"
        
        Case "LAC"
            G_Range_Country = "=Countries_LA"
            G_Range_Product = "=Valid_Prod_LA"
        
        Case "U.S."
            G_Range_Country = "=Countries_US"
            G_Range_Product = "=Valid_Prod_US"
        
        End Select
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Clear the update type
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Range("M20").MergeArea.ClearContents                                    ' Clear the update type
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Select the Update Type cell and load the value
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_FC_Value_UpdTyp = Range("M20").Value
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Special processing if no region has yet been selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_FC_Value_Region = "" Then
            G_Caller = F9981_Unprotect_One(G_Tab_Cover)
            
            Range("M16").MergeArea.ClearContents                                ' Clear the country value
            Range("M16").Validation.Delete                                      ' Clear the country drop-down list
            
            G_Caller = F1300_Set_Services_by_Region()                           ' Clear all of the services
            
            G_Caller = F9982_Protect_All()
            G_Recursion_Count = G_Recursion_Count - 1
            Exit Sub                                                            ' Do not proceed any further in this case
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Select the Country cell and set up a Data Validation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Range("M16").Select
        
        G_Caller = F9981_Unprotect_One(G_Tab_Cover)
        
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=G_Range_Country
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Global Issuer CIQ"
            .InputMessage = ""
            .ErrorMessage = "Please select a country from the list"
            .ShowInput = True
            .ShowError = True
        End With
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Empty the Country cell, but default it if this is a one-country region
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        Selection.ClearContents
        
        If G_FC_Value_Region = "Canada" Then
            ActiveCell.Value = "Canada"
        End If
        
        If G_FC_Value_Region = "U.S." Then
            ActiveCell.Value = "U.S.A."
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Select the Product cells in the BIN List and set up a Data Validation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F9981_Unprotect_One(Sheet31.Name)
        
        With Worksheets(Sheet31.Name).Range("I18:I317").Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=G_Range_Product
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Visa CIQ"
            .InputMessage = ""
            .ErrorMessage = "Please select a product from the list"
            .ShowInput = True
            .ShowError = True
        End With
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Enable and disable the services according to the region selected
        ' - This will reset all of the "Validated" And "Failed Validation" status to "Not available" or "Not yet validated" or [blank]
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1300_Set_Services_by_Region()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display and hide individual questions according to the region selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1700_Display_Hide()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Decrease recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count - 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform workbook and all worksheet protections
        ' Turn on screen updating
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_Recursion_Count = 0 Then
            G_Caller = F9982_Protect_All()
'           Application.ScreenUpdating = True
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for Region value having changed
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the Country value has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_MsgCap = Range("M16:M16")
    
    If Not Application.Intersect(G_Range_MsgCap, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Increase recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count + 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Enable and disable the services according to the region selected
        ' - This will reset all of the "Validated" And "Failed Validation" status to "Not available" or "Not yet validated" or [blank]
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1300_Set_Services_by_Region()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display and hide individual questions according to the Country selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1700_Display_Hide()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Reset all "Validated" and "Failed validation" service status codes to "Not yet validated"
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1330_Reset_Status()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Decrease recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count - 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform workbook and all worksheet protections
        ' Turn on screen updating
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_Recursion_Count = 0 Then
            G_Caller = F9982_Protect_All()
'           Application.ScreenUpdating = True
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for Country value having changed
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the Environment value has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_Enviro = Range("M17:M17")
    
    If Not Application.Intersect(G_Range_Enviro, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Increase recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count + 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Select the Update Type cell and load the value
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_FC_Value_Enviro = Range("M17").Value
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Enable and disable the services according to the Update Type selected
        ' - This will reset all of the "Validated" And "Failed Validation" status to "Not available" or "Not yet validated" or [blank]
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1300_Set_Services_by_Region()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display and hide individual questions according to the Environment selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1700_Display_Hide()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Decrease recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count - 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform workbook and all worksheet protections
        ' Turn on screen updating
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_Recursion_Count = 0 Then
            G_Caller = F9982_Protect_All()
'           Application.ScreenUpdating = True
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for Environment
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the Message Capability value has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_MsgCap = Range("M18:M18")
    
    If Not Application.Intersect(G_Range_MsgCap, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Increase recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count + 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Select the Update Type cell and load the value
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_FC_Value_MsgCap = Range("M18").Value
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Enable and disable the services according to the Message Capability selected
        ' - This will reset all of the "Validated" And "Failed Validation" status to "Not available" or "Not yet validated" or [blank]
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1300_Set_Services_by_Region()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display and hide individual questions according to the Message Capability selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1700_Display_Hide()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Decrease recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count - 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform workbook and all worksheet protections
        ' Turn on screen updating
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_Recursion_Count = 0 Then
            G_Caller = F9982_Protect_All()
'           Application.ScreenUpdating = True
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for Message Capability
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the Type of Update value has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_UpdTyp = Range("M20:M20")
    
    If Not Application.Intersect(G_Range_UpdTyp, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Increase recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count + 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Load the values for Update Type and Copy BIN
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_FC_Value_UpdTyp = Trim(Range("M20").Value)
        G_FC_Value_CpyBIN = Trim(Range("M23").Value)
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Ensure that Copy BIN has only been selected with Installation
        ' - If Copy BIN has been selected and Update Type is empty, then set Update Type to Installation
        ' - If Copy BIN has been selected with any other Update Type then display a message and clear the Copy BIN to null value
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_FC_Value_UpdTyp = "" And G_FC_Value_CpyBIN <> "" Then
            Range("M20").Value = "Installation"
        End If
        
        If G_FC_Value_UpdTyp <> "Installation" And G_FC_Value_CpyBIN <> "" Then
            G_Message = "Copy BIN can only be selected when the Update Type is Installation. Removing Copy BIN information."
            G_Response = MsgBox(G_Message, vbCritical, G_Title)
            Range("M23").ClearContents
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Enable and disable the services according to the Update Type selected
        ' - This will reset all of the "Validated" And "Failed Validation" status to "Not available" or "Not yet validated" or [blank]
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1300_Set_Services_by_Region()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display and hide individual questions according to the Update Type selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1700_Display_Hide()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Decrease recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count - 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform workbook and all worksheet protections
        ' Turn on screen updating
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_Recursion_Count = 0 Then
            G_Caller = F9982_Protect_All()
'           Application.ScreenUpdating = True
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for Type of Update
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the Copy BIN value has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_CpyBIN = Range("M23:M23")
    
    If Not Application.Intersect(G_Range_CpyBIN, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Increase recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count + 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Load the values for Update Type and Copy BIN
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_FC_Value_UpdTyp = Trim(Range("M20").Value)
        G_FC_Value_CpyBIN = Trim(Range("M23").Value)
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Ensure that Copy BIN has only been selected with Installation
        ' - If Copy BIN has been selected and Update Type is empty, then set Update Type to Installation
        ' - If Copy BIN has been selected with any other Update Type then display a message and clear the Copy BIN to null value
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_FC_Value_UpdTyp = "" And G_FC_Value_CpyBIN <> "" Then
            Range("M20").Value = "Installation"
        End If
        
        If G_FC_Value_UpdTyp <> "Installation" And G_FC_Value_CpyBIN <> "" Then
            G_Message = "Copy BIN can only be selected when the Update Type is Installation. Removing Copy BIN information."
            G_Response = MsgBox(G_Message, vbCritical, G_Title)
            Range("M23").ClearContents
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Enable and disable the services according to the Update Type selected
        ' - This will reset all of the "Validated" And "Failed Validation" status to "Not available" or "Not yet validated" or [blank]
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1300_Set_Services_by_Region()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Display and hide individual questions according to the Update Type selected
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F1700_Display_Hide()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Decrease recursion count
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Recursion_Count = G_Recursion_Count - 1
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform workbook and all worksheet protections
        ' Turn on screen updating
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If G_Recursion_Count = 0 Then
            G_Caller = F9982_Protect_All()
'           Application.ScreenUpdating = True
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for Copy BIN
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process if the "I Agree" name has changed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Set G_Range_Agreer = Range("F53")
    
    If Not Application.Intersect(G_Range_Agreer, Range(Target.Address)) Is Nothing Then
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Perform initialisation
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        G_Caller = F0000_Initialisation()
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' Audit this change of the Agreer name (unless the name is now null)
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
        If Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).Value <> "" Then
            G_Caller = F9981_Unprotect_One(G_Tab_CCDat)
            Worksheets(G_Tab_CCDat).Range("B158").Value = "Name Changed by " & G_Runner & " (" & G_Domain & ") " & Format(Now(), "dd mmmm yyyy hh:mm:ss")
            Worksheets(G_Tab_CCDat).Range("B159").Value = "Name Changed to " & Worksheets(G_Tab_Cover).Range(G_FC_Range_ARep_1).Value
            G_Caller = F9982_Protect_All()
        Else
            G_Caller = F9981_Unprotect_One(G_Tab_CCDat)
            Worksheets(G_Tab_CCDat).Range("B158").ClearContents
            Worksheets(G_Tab_CCDat).Range("B159").ClearContents
            G_Caller = F9982_Protect_All()
        End If
        
        '--------------------------------------------------------------------------------------------------------------------------------------------------------------
        ' End of processing for "I Agree"
        '---------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    End If
    
End Sub                                                                         ' of Worksheet_Change
Sub Worksheet_FollowHyperlink(ByVal Target As Hyperlink)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function is invoked whenever a Hyperlink is clicked on this worksheet.
    ' It invokes the logic that is needed to go to the requested service.
    ' The routine name is fixed.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display a warning message if the CIQ Expiry Date has passed
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    G_Caller = F9987_Expiry_Warning()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Process depends on the cell containing the hyperlink
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case Target.Range.Address
    
    Case "$B$31:$D$31"
        G_Caller = S2000_Display_Service(G_Tab_Svc31, "S31")                    ' BIN List
        Exit Sub
        
    Case "$B$32:$D$32"
        G_Caller = S2000_Display_Service(G_Tab_Svc36, "S36")                    ' CVV / iCVV / CVV2
        Exit Sub
        
    Case "$B$33:$D$33"
        G_Caller = S2000_Display_Service(G_Tab_Svc42, "S42")                    ' Currency Conversion Options
        Exit Sub
        
    Case "$B$34:$D$34"
        G_Caller = S2000_Display_Service(G_Tab_Svc37, "S37")                    ' PIN Processing
        Exit Sub
        
    Case "$B$35:$D$35"
        G_Caller = S2000_Display_Service(G_Tab_Svc38, "S38")                    ' Stand-In Processing (STIP)
        Exit Sub
        
    Case "$B$36:$D$36"
        G_Caller = S2000_Display_Service(G_Tab_Svc34, "S34")                    ' Visa Smart Debit Credit (VSDC)
        Exit Sub
        
    Case "$B$37:$D$37"
        G_Caller = S2000_Display_Service(G_Tab_Svc35, "S35")                    ' Verified by Visa (VbV)
        Exit Sub
        
    Case "$B$38:$D$38"
        G_Caller = S2000_Display_Service(G_Tab_Svc40, "S40")                    ' Visa Direct
        Exit Sub
        
    Case "$B$39:$D$39"
        G_Caller = S2000_Display_Service(G_Tab_Svc43, "S43")                    ' Additional Processing Options
        Exit Sub
        
    Case "$B$40:$D$40"
        G_Caller = S2000_Display_Service(G_Tab_Svc41, "S41")                    ' Alternate Authorization Routing
        Exit Sub
        
    Case "$B$41:$D$41"
        G_Caller = S2000_Display_Service(G_Tab_Svc44, "S44")                    ' SMS Reports & Raw Data
        Exit Sub
        
    Case "$B$42:$D$42"
        G_Caller = S2000_Display_Service(G_Tab_Svc45, "S45")                    ' Visa Resolve Online (VROL) Financials
        Exit Sub
        
    Case "$B$43:$D$43"
        G_Caller = S2000_Display_Service(G_Tab_Svc47, "S47")                    ' Clearing
        Exit Sub
        
    Case "$B$44:$D$44"
        G_Caller = S2000_Display_Service(G_Tab_Svc48, "S48")                    ' Application Processor / CIB
        Exit Sub
        
    Case "$B$45:$D$45"
        G_Caller = S2000_Display_Service(G_Tab_Svc46, "S46")                    ' Settlement and VSS Reporting
        Exit Sub
        
    Case "$B$46:$D$46"
        G_Caller = S2000_Display_Service(G_Tab_Svc49, "S49")                    ' Additional Reports
        Exit Sub
        
    End Select
    
End Sub                                                                         ' of Worksheet_FollowHyperlink
Function S2000_Display_Service(S2000_Tab, S2000_Service)
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' This function is invoked by the Worksheet_FollowHyperlink routine, and the destination tab is passed as a parameter.
    ' It invokes the logic that is needed to go to the requested service.
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check that the service check-box has been selected
    ' - If not, display message box with option to cancel the navigation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", S2000_Service, "G", "")
    
    Case "NS", "RX"
        G_Message = "You are navigating to a service that has not been selected by checking the checkbox on the Front Cover:" & vbCr & vbCr & _
                    "  - Yes       - Select the service and navigate to the questions." & vbCr & _
                    "  - No        - Leave the service unselected, but navigate to the questions." & vbCr & _
                    "  - Cancel - Remain on the Front Cover."
        G_Response = MsgBox(G_Message, vbYesNoCancel, G_Title)
        
        Select Case G_Response
        
        Case vbYes
            Select Case S2000_Service
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S31"
                FC_Service_S31_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S34"
                FC_Service_S34_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S35"
                FC_Service_S35_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S36"
                FC_Service_S36_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S37"
                FC_Service_S37_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S38"
                FC_Service_S38_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S40"
                FC_Service_S40_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S41"
                FC_Service_S41_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S42"
                FC_Service_S42_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S43"
                FC_Service_S43_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S44"
                FC_Service_S44_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S45"
                FC_Service_S45_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S46"
                FC_Service_S46_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S47"
                FC_Service_S47_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S48"
                FC_Service_S48_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            Case "S49"
                FC_Service_S49_Click
                
                If G_Err_Count > 0 Then
                    Exit Function
                End If
            
            '-----------------------------------------------'-------------------'--------------------------------------------------------------------------------------
            End Select
        
        Case vbNo
                                                                                ' No additional action
        
        Case Else
            Exit Function                                                       ' Exit the routine
        
        End Select
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(S2000_Tab)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(S2000_Tab)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the requested service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Cover, S2000_Tab)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Function                                                                    ' of S2000_Display_Service
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------


Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GH_Return, 1, 0, MSForms, CommandButton"
Option Explicit
Private Sub GH_Return_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Return to Previous Screen
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the this worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the "return to" tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "G", "")                      ' Get tab name to return to
    G_Caller = F9980_Switch_Worksheets(G_Tab_Gen_H, (G_Caller))
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GH_Return_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Help, 1, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 10, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 11, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U6, 7, 12, MSForms, CommandButton"
Attribute VB_Control = "GP_Buttons_H, 14, 13, MSForms, Label"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Print)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Print, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        
        G_Caller = F9981_Unprotect_One(G_Tab_Print)
        
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        
        G_Caller = F9981_Unprotect_One(G_Tab_Print)
        
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Delete all existing data for the Print Preview (to save space)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    Worksheets(G_Tab_Print).Range("A033:A1999").EntireRow.Delete                ' Remove all data below the grey row                                        ' Code R001
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Print, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - View All
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - View All
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2301_View_All()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - View Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - View Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2302_View_Data()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - View Errors
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - View Errors
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F2303_View_Errors()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Export
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Export
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
'   This is still to be written
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Print
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    ActiveWorkbook.Save                                                         ' Need to save, otherwise the sheet end is not updated and blank pages are printed
    Application.Wait Time + TimeSerial(0, 0, 2)                                 ' Wait for two seconds to allow things to settle down
    Worksheets(G_Tab_Print).PrintPreview (True)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "PP_Checked_1, 1, 0, MSForms, Label"
Option Explicit
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 0, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 1, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 3, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 7, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc31)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc31, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc31)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc31)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc31, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc31, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc31)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc31)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S31", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3110_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc31)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc31, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc31)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc31, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 4, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 10, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 11, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc34)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc34, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc34, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc34, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S34", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3410_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc34, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc34)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc34, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
Attribute VB_Name = "Sheet35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 3, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 10, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc35)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc35, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc35)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc35)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc35, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc35, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc35)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc35)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S35", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3510_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc35)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc35, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc35)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc35, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 2, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 3, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 9, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc36)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc36, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc36, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc36, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S36", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3610_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc36, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc36, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 10, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 11, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 12, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 13, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 14, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 15, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 16, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 17, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc37)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc37, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc37)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc37)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc37, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc37, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc37)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc36)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S37", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3710_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc37)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc37, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc37)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc37, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 13, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 14, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 15, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 16, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 17, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 18, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 19, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 20, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc38)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc38, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc38, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc38, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S38", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F3810_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc38, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc38)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc38, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "VD_AGKX_3_i, 15, 5, MSForms, Label"
Attribute VB_Control = "GP_Buttons_H, 8, 6, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 10, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 11, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 12, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 13, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc40)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc40, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc40, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc40, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S40", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4010_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc40, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc40, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
Private Sub VD_AGKX_3_i_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Client info icon - ACA2
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If VD_AGKX_3_i.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        VD_AGKX_3_i.Caption = G_Help_Icon                                       ' Store help icon text
        VD_AGKX_3_i.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_VD_Range_AGK_3a(G_Clt_Help)).EntireRow.Hidden = True            ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        VD_AGKX_3_i.Caption = G_Help_Icon                                       ' Store help icon text
        VD_AGKX_3_i.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_VD_Range_AGK_3a(G_Clt_Help)).EntireRow.Hidden = False           ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc40)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of VD_AGKX_3_i_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 0, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 1, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 3, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 7, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc41)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc41, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc41)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc41)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc41, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc41, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc41)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc41)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S41", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4110_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc41)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc41, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc41)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc41, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet42"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 3, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 10, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc42)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc42, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc42, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc42, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S42", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4210_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc42, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc42)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc42, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 13, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 14, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 15, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 16, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 17, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 18, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 19, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 20, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc43)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc43, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc43, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc43, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S43", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4310_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc43, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc43)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc43, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 0, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 1, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 3, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 7, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc44)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc44, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc44)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc44)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc44, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc44, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc44)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc44)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S44", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4410_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc44)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc44, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc44)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc44, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet45"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 3, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 10, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc45)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc45, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc45, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc45, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook and worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S45", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4510_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc45, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc45)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc45, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet46"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 5, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 7, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 8, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 9, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 10, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 11, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 12, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc46)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc46, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc46, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc46, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S46", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4610_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc46, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc46)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc46, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet47"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 13, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 14, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 15, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 16, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 17, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 18, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 19, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 20, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc47)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc47, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc47, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc47, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S47", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4710_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc47, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc47)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc47, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet48"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 11, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 12, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 13, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 14, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 15, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 16, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 17, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 18, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc48)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc48, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc48, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc48, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S48", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4810_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc48, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc48)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc48, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet49"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "GP_Buttons_H, 8, 0, MSForms, Label"
Attribute VB_Control = "GP_Button_U6, 7, 1, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U5, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U4, 5, 3, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U3, 4, 4, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U2, 3, 5, MSForms, CommandButton"
Attribute VB_Control = "GP_Button_U1, 2, 6, MSForms, CommandButton"
Attribute VB_Control = "GP_Help, 1, 7, MSForms, CommandButton"
Option Explicit
Private Sub GP_Help_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button - Display General Help (Sheet 21)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Save the current worksheet name
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0300_Access_Value("GH", "Return", "U", G_Tab_Svc49)             ' Save tab name for eventual return
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the General Help tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc49, G_Tab_Gen_H)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Help_Click
Private Sub GP_Buttons_H_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Help for buttons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Worksheet protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Svc49)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide Help
    ' If Help icon is Visa Orange (help displayed) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    If GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B) Then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Blue_R, G_Colour_Icon_Blue_G, G_Colour_Icon_Blue_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = True                        ' Hide the help text
        
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display Help
    ' If Help icon is Visa Blue (help is hidden) then
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Else                                                                        ' If Help icon is Visa Blue (help is hidden) then
        GP_Buttons_H.Caption = G_Help_Icon                                      ' Store help icon text
        GP_Buttons_H.ForeColor = RGB(G_Colour_Icon_Oran_R, G_Colour_Icon_Oran_G, G_Colour_Icon_Oran_B)
        Range(G_GP_Range_Butt_H).EntireRow.Hidden = False                       ' Display the help text
    End If
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet - after setting captions because this changes the size of the icons
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc49)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Buttons_H_Click
Private Sub GP_Button_U1_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U1 - Front Cover
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc49, G_Tab_Cover)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U1_Click
Private Sub GP_Button_U2_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U2 - Print Preview
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Clear the old Print Preview data and perform a new Print Preview (same option as last time)
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One(G_Tab_Print)
    G_Caller = F2300_Print_Preview()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the Print Preview tab
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc49, G_Tab_Print)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U2_Click
Private Sub GP_Button_U3_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U3 - Unused
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
End Sub                                                                         ' of GP_Button_U3_Click
Private Sub GP_Button_U4_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U4 - Validate Data
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off Workbook protection so as to allow changes
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9981_Unprotect_One("Workbook")
    G_Caller = F9981_Unprotect_One(G_Tab_Svc49)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the current worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Svc49)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Check for service not selected / service not available
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Select Case F0300_Access_Value("Status", "S49", "G", "")
    
    Case "NS"
        G_Message = "Requested action cannot be performed - Service has not been selected on the Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    Case "RX"
        G_Message = "Requested action cannot be performed - Service is not available - See Front Cover"
        G_Response = MsgBox(G_Message, vbCritical, G_Title)
        
        G_Caller = F9982_Protect_All()
        Application.ScreenUpdating = True
        
        Exit Sub                                                                ' Exit the routine without doing anything more
    
    End Select
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Display message if not already displayed to this user
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9985_Display_Validation_Message()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform the requested function - Validation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F4910_Validate()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U4_Click
Private Sub GP_Button_U5_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U5 - Switch to previous service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the previous selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1810_Find_Prev_Tab(G_Tab_Svc49)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc49, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U5_Click
Private Sub GP_Button_U6_Click()
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Button U6 - Switch to next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Turn off screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform initialisation
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F0000_Initialisation()
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Identify the tab for the next selected service, based on the current tab
    ' - The result is returned in G_Tab_Next1
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1800_Find_Next_Tab(G_Tab_Svc49)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Set the new button captions
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1600_Set_Button_Functions(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Position the buttons on the destination worksheet
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F1000_Position_Buttons_on_Sheet(G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Hide the current tab and display the tab for the next service
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9980_Switch_Worksheets(G_Tab_Svc49, G_Tab_Next1)
    
    '------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ' Perform workbook and all worksheet protections
    ' Turn on screen updating
    '-------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------
    G_Caller = F9982_Protect_All()
    Application.ScreenUpdating = True
    
End Sub                                                                         ' of GP_Button_U6_Click
'-----------------------------------------------------------'-------------------'--------------------------------------------------------------------------------------

Attribute VB_Name = "Sheet98"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
