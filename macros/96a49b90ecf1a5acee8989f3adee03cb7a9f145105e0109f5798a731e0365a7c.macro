Attribute VB_Name = "Module1"
Option Explicit
#If VBA7 Then
    Private Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
    Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

Sub AutoExec()    'Ao abrir como add-in instalado
    Set ThisDocument.HostApp = Application
End Sub

Sub AutoExec1()
    Dim sExeFullName As String: Dim sExePath As String
    Static sCallerApp As String: If sCallerApp <> "" Then Exit Sub    'To run only one time mainly from WindowActivate event
    Dim sAppVersion As String
    Dim App_hWnd As Long
    Dim sCallerAddIn As String

    sCallerApp = Application.Name
    sAppVersion = Application.Version
    App_hWnd = fGetApp_hWnd
    sCallerAddIn = ThisDocument.FullName

    sExePath = ThisDocument.Path    'Procura pelo exe na mesma pasta deste
    If Dir(sExePath & "\OfficeExtenso.exe") <> "" Then sExeFullName = sExePath & "\OfficeExtenso.exe"
    If sExeFullName = "" And Dir(sExePath & "\WordExtenso.exe") <> "" Then sExeFullName = sExePath & "\WordExtenso.exe"

    If sExeFullName = "" Then    'Se n|fffd|o encontrou, procura onde possivelmente foi instalado como add-in e n|fffd|o foi conectado ao iniciar
        sExePath = fPathInstAsAdd
        If sExePath <> "" Then
            If Dir(sExePath & "\OfficeExtenso.exe") <> "" Then sExeFullName = sExePath & "\OfficeExtenso.exe"
            If sExeFullName = "" And Dir(sExePath & "\WordExtenso.exe") <> "" Then sExeFullName = sExePath & "\WordExtenso.exe"
        End If
    End If

    If sExeFullName = "" Then On Error Resume Next: Application.AddIns(ThisDocument.Name).Delete: Exit Sub    'Exit but before unloding if was loaded as add-in

    Shell sExeFullName & " cmd/load" & _
          " /sCallerApp:=" & sCallerApp & _
          " /sAppVersion:=" & sAppVersion & _
          " /App_hWnd:=" & App_hWnd & _
          " /sCallerAddIn:=" & sCallerAddIn
End Sub

Private Function fGetApp_hWnd()    'As Variable because can be Long or LongPtr in Office 64-bit
    Dim sClassByVer As String
    Dim dHostAppVer As Double

    dHostAppVer = Val(Application.Version)
    sClassByVer = "OpusApp"

    On Error Resume Next

    If Application.Windows.Count > 0 Then
        fGetApp_hWnd = FindWindow(sClassByVer, Application.Caption & " - " & Application.ActiveWindow.Caption)
        If fGetApp_hWnd = 0 Then fGetApp_hWnd = FindWindow(sClassByVer, Application.ActiveWindow.Caption & " - " & Application.Caption)
    End If
    If fGetApp_hWnd = 0 Then fGetApp_hWnd = FindWindow(sClassByVer, Application.Caption)
    If fGetApp_hWnd = 0 Then fGetApp_hWnd = FindWindow(sClassByVer, vbNullString)
    Err.Clear
End Function

Function fPathInstAsAdd() As String
    Const sAddInLoadExeFileName As String = "WordExtensoLoadExe.dot"    'XLA, DOT, PPA, MDB...
    Dim Msg1 As String
    On Error Resume Next
    Dim ad As AddIn
    For Each ad In AddIns
        Err.Clear: Msg1 = ad.Path & ad.Name
        If Err.Number = 0 Then
            If LCase(ad.Name) = LCase(sAddInLoadExeFileName) Then
                If Dir(ad.Path & Application.PathSeparator & ad.Name) <> "" And ad.Installed = False Then fPathInstAsAdd = ad.Path
                Exit For
            End If
        End If
    Next
End Function

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public WithEvents HostApp As Word.Application
Attribute HostApp.VB_VarHelpID = -1

Private Sub Document_Close()    'Trig when opening as template or as doc for editing, not as add-in
    ThisDocument.Saved = True    'Avoid saving memu changing
End Sub

Private Sub Document_New()    'Trig only when opening as template
    Set HostApp = Application
    AutoExec1
End Sub

Private Sub Document_Open()    'Trig only when opening as doc for editing
    Set HostApp = Application
    AutoExec1
End Sub

Private Sub HostApp_WindowActivate(ByVal Doc As Document, ByVal Wn As Window)
    If Doc.Name Like "Instl_WordExtenso.*" Then On Error Resume Next: Application.AddIns(ThisDocument.Name).Delete: Exit Sub      'If active doc is the insaller, exit but before unloding if was loaded as add-in
    AutoExec1
End Sub

Private Sub HostApp_WindowBeforeRightClick(ByVal Sel As Selection, Cancel As Boolean) 'Foi necess|fffd|rio porque HostApp_WindowActivate n|fffd|o dispara se o Word iniciar j|fffd| com doc em branco.
    AutoExec1
End Sub


INQUEST-PP=macro
