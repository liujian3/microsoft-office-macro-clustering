Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Ersetzen"
Option Explicit

Sub Austausch()

    'Tauscht Werte in der ersten Tabelle der Arbeitsmappe
    'entsprechend der Austauschliste, die aktiv ist,
    'wenn das Makro aufgerufen wird.
    'Alle Zellen, die bearbeitet worden sind, werden gelb gef|fffd|rbt.
    'Erstellt: 13.09.2012 Stefan Jarsch, Corporate Engineering
    
    'Voraussetzung:
    'Erste Tabelle ist die, die bearbeitet werden soll
    'Erste Zeile enth|fffd|lt Spalten|fffd|berschriften
    'Ersetzungstabelle enth|fffd|lt in Spalte A die Werte, die erstetzt werden
    'durch die Werte, die in Spalte B stehen.
    'Die |fffd|berschrift in A1 ist identisch zu der Spalten|fffd|berschrift in Tabelle 1
        
    Dim strHeaderToFind As String  'Spalten|fffd|berschrift
    Dim rng As Range
    Dim rngHead As Range
    Dim rngRow As Range
    Dim rngToRepl As Range
    Dim strSearch As String
    Dim strRepl As String
    Dim rngCol As Range
    Dim iColumn As Integer
    
    'Spalten|fffd|berschrift lesen
    strHeaderToFind = Range("A1").Value
    'Austauschliste identifizieren
    Set rng = ActiveSheet.Range("A2", Range("B2").End(xlDown))
    
    'Eplan Tabelle identifizieren
    Worksheets(1).Activate
    
    'Spalte zum Ersetzen anhand der |fffd|berschrift identifizieren
    Set rngHead = Range(Range("A3"), Range("A3").EntireRow)
    iColumn = 0 'Initialisierung
    For Each rngCol In rngHead.Columns
        If rngCol.Value = strHeaderToFind Then
            iColumn = rngCol.Column 'Spaltennummer
            Exit For    'fertig, wenn gefunden
        End If
    Next rngCol
    If iColumn = 0 Then
        'Abbrechen, wenn Spalte nicht gefunden
        MsgBox "Spalten|fffd|berschrift " & strHeaderToFind & " in " & ActiveSheet.Name & " nicht gefunden!", vbCritical
        Exit Sub
    End If
    
    'Bereichsgr|fffd||fffd|e f|fffd|r Ersetzung anhand Spalte A bestimmen (ohne |fffd|berschrift)
    Set rngToRepl = Range(Range("A5"), Range("A5").End(xlDown))
    'Ersetzungsbereich befindet sich in Spalte iColumn, Range entsprechend verschieben
    Set rngToRepl = rngToRepl.Offset(0, iColumn - rngToRepl.Column)
    'Bearbeitete Zellen gelb f|fffd|rben
    Application.ReplaceFormat.Interior.ColorIndex = 36 'gelb
    
    'Alle Suchwerte durchlaufen und in Eplan Tabelle ersetzen
    For Each rngRow In rng.Rows
        'Suchwert steht in der ersten Spalte
        strSearch = rngRow.Cells(1, 1)
        'Ersetzung steht in der zweiten Spalte
        strRepl = rngRow.Cells(1, 2)
        
        rngToRepl.Replace _
                        What:=strSearch, _
                        Replacement:=strRepl, _
                        LookAt:=xlWhole, _
                        SearchOrder:=xlByColumns, _
                        MatchCase:=False, _
                        MatchByte:=False, _
                        SearchFormat:=False, _
                        ReplaceFormat:=True
        
    Next rngRow
End Sub


Attribute VB_Name = "StlProzessor"
Option Explicit
Sub StlProz()
Attribute StlProz.VB_Description = "Makro am 25.06.2009 von Jarsch aufgezeichnet"
Attribute StlProz.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Aufbereiten der Liste f|fffd|r St|fffd|cklistenprozessor:
' St|fffd|cklistenpositionen nach Artikelnummer aufsteigend eintragen
' Eplan Kopfzeilen l|fffd|schen, St|fffd|cklistenprozessor erlaubt nur eine |fffd|berschriftenzeile
' Erstellt: 25.06.2009 Jarsch, CE-EL
' 1.12.2011 Wiederherstellen der alten Sortierung gel|fffd|scht. Jarsch
'

    'nach Artikelnummern (Spalte B) sortieren
    Range("B5").Select
    'ganze Tabelle selektieren
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    'nach Artikelnummer und Bezeichnung 1 (wg. Exoten ohne Art. Nr.) sortieren
    Selection.Sort Key1:=Range("B5"), Order1:=xlAscending, _
        Key2:=Range("D5"), Order1:=xlAscending, _
        Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    'Positionsnummer 1 eintragen
    Range("A5").Value = 1
    'in Spalte B zum Ende der Liste springen
    Range("B5").Select
    Selection.End(xlDown).Select
    'zur|fffd|ck ans Ende von Spalte A
    Selection.Offset(0, -1).Range("A1").Select
    'Spalte A markieren und hochz|fffd|hlen, das sind die endg|fffd|ltigen Positionsnummern, sortiert nach Artikelnummer
    Range(Selection, Selection.End(xlUp)).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
    
    'Cursor auf erste Zelle setzen
    Range("A2").Select
End Sub


Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
