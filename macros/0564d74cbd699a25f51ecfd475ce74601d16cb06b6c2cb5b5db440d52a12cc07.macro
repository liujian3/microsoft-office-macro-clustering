Attribute VB_Name = "Module1"
Option Explicit
Option Base 0

Const VBG_MAX = 10


Private Type tVBGList
    vbg As tVBarGraph
    sname As String
    gname As String
    direc As Long
End Type

Dim vbglist(VBG_MAX) As tVBGList

Dim VBGCount As Long

Private Function VBarGraphInit(sname As String, gname As String, rng As Range, direc As Long) As Long
    Dim i As Long
    Static ini As Variant
    If IsEmpty(ini) Then
        VBGCount = 1
        ini = "initialized"
        GoTo Init
    Else
        For i = 1 To VBGCount
            If sname = vbglist(i).sname And gname = vbglist(i).gname And direc = vbglist(i).direc Then
                VBarGraphInit = i
                Exit Function
            End If
        Next
        If i > VBGCount Then
            VBGCount = VBGCount + 1
            GoTo Init
        End If
    End If
    Exit Function
Init:
    With vbglist(VBGCount)
        .sname = sname
        .gname = gname
        .direc = direc
        Set .vbg = New tVBarGraph
        .vbg.direc = direc
        Call .vbg.initialize(sname, gname, rng)
    End With
    VBarGraphInit = VBGCount
End Function

Private Function VBarGraphExec(sname As String, gname As String, rng As Range, dt As Range, hdt As Range, tatebai As Double, direc As Long) As String
    ' |fffd||348||342||311||50ab||fffd||fffd||fffd|m|fffd|F
    If dt.Columns.Count < 3 Then
        VBarGraphExec = "|fffd||50502||fffd||fffd||fffd||fffd||209||7c2||fffd||fffd||702||fffd|."
        Exit Function
    End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim no As Long
    no = VBarGraphInit(sname, gname, rng, direc)
    ' |fffd|`|fffd||fffd||fffd||fffd|s
    Call vbglist(no).vbg.DrawGraph(dt, hdt, rng, tatebai)
    ' |fffd||7c2||fffd|l
    With vbglist(no).vbg
        VBarGraphExec = dt.Rows.Count & "|fffd|s" & dt.Columns.Count & "|fffd||fffd|"
    End With
End Function
Public Function VBarGraphH(sname As String, gname As String, rng As Range, dt As Range, hdt As Range, tatebai As Double) As String
    'Application.Calculation = xlCalculationManual
    'ActiveSheet.Shapes("VBarGraph1").Select
    VBarGraphH = VBarGraphExec(sname, gname, rng, dt, hdt, tatebai, 2)
    'Application.Calculation = xlCalculationAutomatic
End Function


Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "tVBarGraph"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Base 0

Const MAX_BARS As Long = 100
Const MAX_ITEMS As Long = 2
Const MAX_TITLES As Long = 5
Const VBAR_SCALE As Long = 500
Const VBAR_DIREC As Long = 1

' |fffd||81|X|fffd||316|_
Private Type tItem
    w As Double  '|fffd||fffd|
    y As Double   '|fffd|l
    color As Long   '|fffd|F
    ptn As Long '|fffd|h|fffd||fffd||82||502||fffd|
    shp As Shape   '|fffd|}
End Type

' |fffd||3c2||74f|d|fffd||2d6|_|fffd||303|Z|fffd|b|fffd|g
Private Type tBar
    name As String ' |fffd||fffd||fffd||696||fffd|
    item(MAX_ITEMS) As tItem '|fffd||3c2||74f|d|fffd||2d6|_MAX_ITEMS|fffd|w
End Type

' |fffd||81|X|fffd||316|_
Private Type tHojo
    y As Double   '|fffd|l
    color As Long   '|fffd|F
    shp As Shape   '|fffd|}
End Type

' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
Dim title(MAX_TITLES) As Shape
Dim bar(MAX_BARS) As tBar    '|fffd|_|fffd||fffd||fffd||151||fffd|MAX_BARS|fffd|{
Dim bar_count As Long   '|fffd||fffd||fffd||6c2||316|_|fffd||310||fffd|
Dim item_count As Long  '|fffd||fffd||fffd||6c2||310||3c2||74f|d|fffd||2c2||310||fffd|
Dim x_min As Double   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim x_max As Double   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim y_min As Double   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim y_max As Double   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim y_div As Double   '|fffd||fffd||fffd||fffd||fffd||690||fffd||fffd||fffd|
Dim hojo(MAX_ITEMS) As tHojo   '|fffd||fffd||fffd||23d5||fffd||fffd|
Dim panel As Shape  ' |fffd|w|fffd|iPanel|fffd||30e||fffd||fffd||fffd|
Dim area As Shape   ' |fffd|_|fffd|`|fffd||fffd|Area|fffd||30e||fffd||fffd||fffd|
Public p_left As Double
Public p_top As Double
Public p_height As Double
Public p_width As Double


Dim margin_top As Double ' Panel|fffd||fffd|Area|fffd||30a||502||303|}|fffd|[|fffd|W|fffd||fffd|
Dim margin_left As Double
Dim margin_bottom As Double
Dim margin_right As Double
Dim item_color(MAX_ITEMS) As Long
Public direc As Long

Sub DrawGraph(dt As Range, hdt As Range, rng As Range, tatebai As Double)
    ' |fffd|_|fffd|`|fffd||fffd|G|fffd||fffd||fffd|A|fffd||752||fffd|
    panel.Left = rng.Left
    panel.Top = rng.Top
    panel.Width = rng.Width
    panel.Height = rng.Height
    With area
        .Top = panel.Top + margin_top
        .Left = panel.Left + margin_left
        .Height = (panel.Height - margin_top - margin_bottom) * tatebai
        .Width = panel.Width - margin_left - margin_right
        .Fill.ForeColor.RGB = RGB(255, 255, 255)
    End With
    ' |fffd|f|fffd|[|fffd|^|fffd||348||342||fffd||fffd||fffd|l|fffd||fffd||1c2||74d||fffd||fffd||fffd|
    Dim r As Long
    Dim c As Long
    Dim dx As Double
    Dim dy As Double
    Dim exceed As Boolean
    x_min = 0
    x_max = 0
    y_min = 0
    y_max = -1E+100
    For bar_count = 1 To dt.Rows.Count
        If dt.Cells(bar_count, 1) = "" Then
            bar_count = bar_count - 1
            Exit For
        End If
    Next
    For r = 1 To MAX_BARS
        For c = 1 To MAX_ITEMS
            bar(r).item(c).shp.Visible = msoFalse
        Next
    Next
    For r = 1 To bar_count
        bar(r).name = dt.Cells(r, 1)
        With bar(r).item(1).shp.TextFrame
            .Characters.Text = bar(r).name
            If direc = 1 Then
                .Orientation = msoTextOrientationUpward
                .VerticalAlignment = xlVAlignCenter
                .HorizontalAlignment = xlHAlignLeft
            Else
                .Orientation = msoTextOrientationHorizontal
                .VerticalAlignment = xlVAlignCenter
                .HorizontalAlignment = xlHAlignLeft
            End If
            
        End With
        dy = 0
        For c = 1 To dt.Columns.Count - 2
            With bar(r).item(c)
                .w = dt.Cells(r, 2)
                .y = dt.Cells(r, c + 2)
                dy = dy + .y
            End With
        Next
        x_max = x_max + bar(r).item(1).w
        If y_max < dy Then y_max = dy
    Next
    ' |fffd||23d5||fffd||fffd|
    For c = 1 To hdt.Columns.Count
        With hojo(c)
            If hdt.Cells(1, c) <> "" Then
                .y = hdt.Cells(1, c)
                .shp.Visible = msoTrue
            Else
                .shp.Visible = msoFalse
            End If
            
            If y_max < .y Then y_max = .y
        End With
    Next
    
    Dim x_scale As Double
    Dim y_scale As Double
    If x_min = x_max Then x_max = x_min + 100
    If y_min = y_max Then y_max = y_min + 100
        
    ' |fffd|c|fffd|_|fffd|O|fffd||fffd||fffd|t
    If direc = 1 Then
        ' x|fffd||fffd|y|fffd||302|P|fffd|P|fffd||293||fffd||fffd||fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd|v|fffd|Z
        x_scale = area.Width / (x_max - x_min)
        y_max = 200
        y_scale = area.Height / (y_max - y_min) 'y|fffd||30f||fffd||fffd||fffd||342|P|fffd||fffd||fffd||fffd||fffd||fffd|
        ' |fffd||fffd||fffd|W|fffd|v|fffd|Z|fffd||fffd||fffd|_|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
        dx = area.Left
        For r = 1 To bar_count
            dy = area.Top + area.Height
            For c = 1 To dt.Columns.Count - 2
                With bar(r).item(c)
                    If .y > 100 Then
                        .y = 100
                        .shp.Fill.ForeColor.RGB = RGB(255, 0, 0)
                    Else
                        .shp.Fill.ForeColor.RGB = item_color(c)
                    End If
                    .shp.Height = .y * y_scale
                    .shp.Width = .w * x_scale
                    .shp.Top = dy - .y * y_scale
                    .shp.Left = dx
                    .shp.Visible = msoTrue
                    dy = dy - .y * y_scale
                End With
            Next
            dx = dx + bar(r).item(1).w * x_scale
        Next
        For c = 1 To hdt.Columns.Count
            With hojo(c)
                .shp.Left = area.Left
                .shp.Width = area.Width
                .shp.Top = area.Top + area.Height - .y * y_scale
            End With
        Next
    ' |fffd||fffd||fffd|_|fffd|O|fffd||fffd||fffd|t
    Else
        ' x|fffd||fffd|y|fffd||302|P|fffd|P|fffd||293||fffd||fffd||fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd|v|fffd|Z
        x_scale = area.Height / (x_max - x_min)
        y_max = 200
        y_scale = area.Width / (y_max - y_min) 'y|fffd||30f||fffd||fffd||fffd||342|P|fffd||fffd||fffd||fffd||fffd||fffd|
        ' |fffd||fffd||fffd|W|fffd|v|fffd|Z|fffd||fffd||fffd|_|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
        dx = area.Top
        For r = 1 To bar_count
            dy = area.Left
            For c = 1 To dt.Columns.Count - 2
                With bar(r).item(c)
                    If .y > 100 Then
                        .shp.TextFrame.HorizontalAlignment = xlHAlignRight
                        .shp.TextFrame.VerticalAlignment = xlVAlignCenter
                        .shp.TextFrame.Characters.Text = 100 + Round(.y, 1)
                        .y = 100
                        .shp.Fill.ForeColor.RGB = RGB(255, 0, 0)
                    Else
                        If c = 2 Then .shp.TextFrame.Characters.Text = ""
                        .shp.Fill.ForeColor.RGB = item_color(c)
                    End If
                    .shp.Width = .y * y_scale
                    .shp.Height = .w * x_scale
                    .shp.Left = dy
                    .shp.Top = dx
                    .shp.Visible = msoTrue
                    dy = dy + .y * y_scale
                End With
            Next
            dx = dx + bar(r).item(1).w * x_scale
        Next
        For c = 1 To hdt.Columns.Count
            With hojo(c)
                .shp.Top = area.Top
                .shp.Height = area.Height
                .shp.Left = area.Left + .y * y_scale
            End With
        Next
        With title(1)
            .TextFrame.Characters.Text = "|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||fffd|(SMR)"
            .TextFrame.Characters.Font.Size = 14
            .Height = 30
            .Width = 150
            .Left = panel.Left + panel.Width / 2 - .Width / 2
            .Top = panel.Top
            .Visible = msoTrue
        End With
        With title(2)
            .TextFrame.Characters.Text = "0"
            .TextFrame.Characters.Font.Size = 12
            .Height = 20
            .Width = 20
            .Left = area.Left - 10
            .Top = area.Top - .Height
            .Visible = msoTrue
        End With
        With title(3)
            .TextFrame.Characters.Text = "100(=|fffd|S|fffd||fffd|)"
            .TextFrame.Characters.Font.Size = 12
            .Height = 20
            .Width = 100
            .Left = area.Left + 100 * y_scale - .Width / 3.2
            .Top = area.Top - .Height
            .Visible = msoTrue
        End With
        With title(4)
            .TextFrame.Characters.Text = "200"
            .TextFrame.Characters.Font.Size = 12
            .Height = 20
            .Width = 40
            .Left = area.Left + 200 * y_scale - .Width / 2
            .Top = area.Top - .Height
            .Visible = msoTrue
        End With
    End If
End Sub

Sub initialize(sname As String, gname As String, rng As Range)
    Dim b As Long, i As Long, h As Long, t As Long
    Dim grp As Shape
    Dim shp As Shape
    
    Set grp = Worksheets(sname).Shapes(gname)
    
    b = 1
    i = MAX_ITEMS
    h = 1
    t = 1
    For Each shp In grp.GroupItems
        If shp.name = "panel" Then
            Set panel = shp
        ElseIf shp.name = "area" Then
            Set area = shp
        End If
    Next
    panel.Left = rng.Left
    panel.Top = rng.Top
    panel.Width = rng.Width
    panel.Height = rng.Height
    For Each shp In grp.GroupItems
        If Left(shp.name, 3) = "bar" And b <= MAX_BARS Then
            Set bar(b).item(i).shp = shp
            With shp
                .Top = panel.Top: .Left = panel.Left: .Height = 10: .Width = 10
                .TextFrame.Characters.Text = ""
                .TextFrame.Characters.Font.color = RGB(255, 255, 255)
                .TextFrame.HorizontalOverflow = 1
                .TextFrame2.WordWrap = msoFalse
                .Visible = msoFalse
            End With
            i = i - 1
            If i <= 0 Then
                i = MAX_ITEMS
                b = b + 1
            End If
        ElseIf Left(shp.name, 5) = "hojoh" Then
            shp.Visible = msoFalse
            With shp
                .Top = panel.Top: .Left = panel.Left
            End With
            If direc = 1 And h <= MAX_ITEMS Then
                Set hojo(h).shp = shp
                h = h + 1
            End If
        ElseIf Left(shp.name, 5) = "hojov" Then
            shp.Visible = msoFalse
            With shp
                .Top = panel.Top: .Left = panel.Left
            End With
            If direc = 2 And h <= MAX_ITEMS Then
                Set hojo(h).shp = shp
                h = h + 1
            End If
        ElseIf Left(shp.name, 5) = "title" Then
            shp.Visible = msoTrue
            If t <= MAX_TITLES Then
                Set title(t) = shp
                With shp
                    .Top = panel.Top: .Left = panel.Left
                End With
                t = t + 1
            End If
        End If
    Next
    
    margin_top = 50
    margin_left = 20
    margin_bottom = 20
    margin_right = 20
    
    item_color(1) = RGB(91, 155, 213)
    item_color(2) = RGB(237, 125, 49)
    'item_color(3) = RGB(165, 165, 165)
    
End Sub




INQUEST-PP=macro
