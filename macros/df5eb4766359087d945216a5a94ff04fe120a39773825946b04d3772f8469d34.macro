Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Const sheetFilter As String = "Benutzereingaben"
Const sheetDaten As String = "Daten"
Const sheetRegie As String = "Regieschein"

'KONSTANTEN FILTER-BLATT
Const cellType As String = "B17"
Const cellClearDatum As String = "B18"


'KONSTANTEN DATEN-BLATT
'Erster Eintrag in Datentabelle
Const startCellDaten As String = "A3"

'Offsets in Datentabelle
Const offsetDatenDatum = 0
Const offsetDatenZeitVon = 1
Const offsetDatenZeitBis = 2
Const offsetDatenKuerzel = 3
Const offsetDatenVorname = 4
Const offsetDatenNachname = 5
Const offsetDatenTaetigkeit = 6
Const offsetDatenOrt = 7
Const offsetDatenPrjNr = 8
Const offsetDatenAG = 9
Const offsetDatenDetPrj = 10
Const offsetDatenAGBestNr = 11
Const offsetDatenLieLei = 12
Const offsetDatenLieLeiDesc = 13
Const offsetDatenPersEins = 14
Const offsetDatenACID = 15
Const offsetDatenLocCode = 16
Const offsetDatenKmHin = 17
Const offsetDatenKmRet = 18
Const offsetDatenKmGes = 19
Const offsetDatenWorkTime = 20
Const offsetDatenMinTime = 21
Const offsetDatenMaxTime = 22
Const offsetDatenName = 23


'KONSTANTEN REGIE-BLATT
'Erster Eintrag in Regiezettel
Const startCellRegieInt As Integer = 16
Const startCellRegie As String = "A16"
Const cellNamen As String = "H14"
Const cellAG As String = "B3"
Const cellMtAuftragsNr As String = "B8"
Const cellAuftrag As String = "B9"
Const cellAGBestNr As String = "B4"
Const cellAGProjDesc As String = "B5"
Const cellAGKontierung As String = "B6"
Const cellLeistungszeitraum As String = "B10"

'Offsets in Regiezettel
Const offsetRegieDatum = 0
Const offsetRegieZeitVon = 2
Const offsetRegieZeitBis = 3
Const offsetRegiePause = 4
Const offsetRegieStunden = 5
Const offsetRegieTaetigkeit = 6
Const offsetRegieName = 7
Const offsetRegieOrt = 8
Const offsetRegieKm = 9

Dim vActiveSheet

Sub final()
    refreshDataTables
    regiezettelErstellen
End Sub

Sub regiezettelErstellen()
    Application.ScreenUpdating = False
    
    Dim typ As String
    Dim clearDat
    
    Dim alleNamen
    Dim anzNamen
    Dim firstDate
    Dim aktDatum
    Dim aktName
    Dim aktMinTime
    Dim aktMaxTime
    Dim aktWorkTime
    Dim aktPause
    Dim aktTaetigkeit
    Dim aktOrt
    Dim aktKm
    
    Dim aktOffsetDaten
    Dim aktOffsetRegie
    
    Dim AG
    Dim mtAuftragsNr
    Dim Auftrag
    Dim AGBestNr
    Dim AGProjDesc
    Dim AGKontierung
    Dim fistDate
    Dim lastDate
    
    aktOffsetDaten = 0
    aktOffsetRegie = 0
    
    
    'einzeilig oder mehrzeilig
    typ = Range(cellType).Value
    clearDat = Range(cellClearDatum).Value
    
    Sheets(sheetRegie).Select
    Range("A16:L1000").ClearContents
    Range(cellNamen).ClearContents
    
    vActiveSheet = sheetDaten
    Sheets(sheetDaten).Visible = True
    Sheets(vActiveSheet).Select
    
    firstDate = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum)
    lastDate = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum)
    
    If typ = "Variante 1 - mehrzeilig" Then
    
        Do While Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum) <> ""

                aktDatum = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum)
                aktMinTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMinTime) / 24
                aktMaxTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMaxTime) / 24
                aktWorkTime = Round(Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenWorkTime), 2)
                aktTaetigkeit = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit)
                aktName = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenName)
                aktOrt = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt)
                aktKm = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenKmGes)

                vActiveSheet = sheetRegie
                Sheets(vActiveSheet).Select
                
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieDatum).Value = aktDatum
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieZeitVon).Value = aktMinTime
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieZeitBis).Value = aktMaxTime
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieStunden).Value = aktWorkTime
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieTaetigkeit).Value = aktTaetigkeit
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieName).Value = aktName
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieOrt).Value = aktOrt
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieKm).Value = aktKm

                Zeilenh|fffd|he startCellRegieInt + aktOffsetRegie
                
                aktOffsetRegie = aktOffsetRegie + 1
                
                vActiveSheet = sheetDaten
                Sheets(vActiveSheet).Select
                
                aktOffsetDaten = aktOffsetDaten + 1

                If alleNamen <> "" Then
                    If alleNamen Like "*" & aktName & "*" Then
                        'Name schon vorhanden
                    Else
                        alleNamen = alleNamen & "; " & aktName
                        anzNamen = anzNamen + 1
                    End If
                Else
                    alleNamen = aktName
                    anzNamen = anzNamen + 1
                End If
                
                If AG <> "" Then
                    If AG Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG) & "*" Then
                        'AG schon vorhanden
                    Else
                        AG = AG & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG)
                    End If
                Else
                    AG = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG)
                End If
                
                If mtAuftragsNr <> "" Then
                    If mtAuftragsNr Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr) & "*" Then
                        'mtAuftragsNr schon vorhanden
                    Else
                        mtAuftragsNr = mtAuftragsNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr)
                    End If
                Else
                    mtAuftragsNr = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr)
                End If
                
                If Auftrag <> "" Then
                    If Auftrag Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj) & "*" Then
                        'Auftrag schon vorhanden
                    Else
                        Auftrag = mtAuftragsNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj)
                    End If
                Else
                    Auftrag = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj)
                End If
                
                If AGBestNr <> "" Then
                    If AGBestNr Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr) & "*" Then
                        'AGBestNr schon vorhanden
                    Else
                        AGBestNr = AGBestNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr)
                    End If
                Else
                    AGBestNr = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr)
                End If
                
                'MsgBox Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
                If AGProjDesc <> "" Then
                    If AGProjDesc Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei) & "*" Then
                        'AGProjDesc schon vorhanden
                    Else
                        AGProjDesc = AGProjDesc & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
                    End If
                Else
                    AGProjDesc = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
                End If
                
                If AGKontierung <> "" Then
                    If AGKontierung Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc) & "*" Then
                        'AGKontierung schon vorhanden
                    Else
                        AGKontierung = AGKontierung & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc)
                    End If
                Else
                    AGKontierung = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc)
                End If
                
                If firstDate > aktDatum Then
                    firstDate = aktDatum
                End If
                
                If lastDate < aktDatum Then
                    lastDate = aktDatum
                End If
                    
        Loop
        
        vActiveSheet = sheetRegie
        Sheets(vActiveSheet).Select
        
        If anzNamen > 2 Then
            Range(cellNamen).Value = "Projekt-Team"
        Else
            Range(cellNamen).Value = alleNamen
        End If
    End If
    
    If typ = "Variante 2 - einzeilig" Then
    
        'INIT -> Erste Zeile einlesen
        aktDatum = Range(startCellDaten).Offset(0, offsetDatenDatum).Value
        aktName = Range(startCellDaten).Offset(0, offsetDatenName).Value
        aktMinTime = Range(startCellDaten).Offset(0, offsetDatenMinTime).Value
        aktMaxTime = Range(startCellDaten).Offset(0, offsetDatenMaxTime).Value
        aktWorkTime = Range(startCellDaten).Offset(0, offsetDatenWorkTime).Value
        aktTaetigkeit = Range(startCellDaten).Offset(0, offsetDatenTaetigkeit).Value
        aktOrt = Range(startCellDaten).Offset(0, offsetDatenOrt).Value
        aktKm = Range(startCellDaten).Offset(0, offsetDatenKmGes).Value
        aktPause = 0#
        
        firstDate = aktDatum
        alleNamen = aktName
        anzNamen = 1
        
        aktOffsetDaten = aktOffsetDaten + 1
        
        'Gehe durch alle Zeilen in der Datentabelle
        Do While Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum) <> ""
        
            If AG <> "" Then
                If AG Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG) & "*" Then
                    'AG schon vorhanden
                Else
                    AG = AG & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG)
                End If
            Else
                AG = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG)
            End If
            
            If mtAuftragsNr <> "" Then
                If mtAuftragsNr Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr) & "*" Then
                    'mtAuftragsNr schon vorhanden
                Else
                    mtAuftragsNr = mtAuftragsNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr)
                End If
            Else
                mtAuftragsNr = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr)
            End If
            
            If Auftrag <> "" Then
                If Auftrag Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj) & "*" Then
                    'Auftrag schon vorhanden
                Else
                    Auftrag = mtAuftragsNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj)
                End If
            Else
                Auftrag = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj)
            End If
            
            If AGBestNr <> "" Then
                If AGBestNr Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr) & "*" Then
                    'AGBestNr schon vorhanden
                Else
                    AGBestNr = AGBestNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr)
                End If
            Else
                AGBestNr = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr)
            End If
            
            If AGProjDesc <> "" Then
                If AGProjDesc Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei) & "*" Then
                    'AGProjDesc schon vorhanden
                Else
                    AGProjDesc = AGProjDesc & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
                End If
            Else
                AGProjDesc = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
            End If
            
            If AGKontierung <> "" Then
                If AGKontierung Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc) & "*" Then
                    'AGKontierung schon vorhanden
                Else
                    AGKontierung = AGKontierung & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc)
                End If
            Else
                AGKontierung = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc)
            End If
            
            'Datum und Name gleich wie in der Vorzeile
            If Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum) = aktDatum And Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenName) = aktName Then

                If aktMinTime > Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMinTime) Then
                    aktMinTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMinTime)
                End If
                    
                If aktMaxTime < Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMaxTime) Then
                    aktMaxTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMaxTime)
                End If
                
                aktPause = aktPause + Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMinTime) - Range(startCellDaten).Offset(aktOffsetDaten - 1, offsetDatenMaxTime)
                aktWorkTime = Round(aktWorkTime + Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenWorkTime), 2)
                aktKm = aktKm + Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenKmGes)
                
                If aktTaetigkeit <> "" Then
                    If aktTaetigkeit Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit) & "*" Then
                    Else
                        aktTaetigkeit = aktTaetigkeit & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit)
                    End If
                Else
                    aktTaetigkeit = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit)
                End If
                
                If aktOrt <> "" Then
                    If aktOrt Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt) & "*" Then
                    Else
                        aktOrt = aktOrt & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt)
                    End If
                Else
                    aktOrt = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt)
                End If
                    
                aktOffsetDaten = aktOffsetDaten + 1
                
            'Datum oder Name unterschiedlich -> neue Zeile im Regiezettel anlegen
            Else
                vActiveSheet = sheetRegie
                Sheets(vActiveSheet).Select
            
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieDatum).Value = aktDatum
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieName).Value = aktName
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieZeitVon).Value = aktMinTime / 24
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieZeitBis).Value = aktMaxTime / 24
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegiePause).Value = aktPause / 24
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieStunden).Value = aktWorkTime
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieTaetigkeit).Value = aktTaetigkeit
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieKm).Value = aktKm
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieOrt).Value = aktOrt
                
                Zeilenh|fffd|he startCellRegieInt + aktOffsetRegie
                
                aktOffsetRegie = aktOffsetRegie + 1
                
                vActiveSheet = sheetDaten
                Sheets(vActiveSheet).Select
                
                
                aktDatum = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum).Value
                aktName = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenName).Value
                aktMinTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMinTime).Value
                aktMaxTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenMaxTime).Value
                aktWorkTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenWorkTime).Value
                aktTaetigkeit = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit).Value
                aktOrt = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt).Value
                aktKm = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenKmGes).Value
                aktPause = 0#
                
                If firstDate > aktDatum Then
                    firstDate = aktDatum
                End If
                
                If lastDate < aktDatum Then
                    lastDate = aktDatum
                End If
                
                If alleNamen <> "" Then
                    If alleNamen Like "*" & aktName & "*" Then
                        'Name schon vorhanden
                    Else
                        alleNamen = alleNamen & "; " & aktName
                        anzNamen = anzNamen + 1
                    End If
                Else
                    alleNamen = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenName)
                    anzNamen = anzNamen + 1
                End If
                
                aktOffsetDaten = aktOffsetDaten + 1
            End If
        Loop
        
        vActiveSheet = sheetRegie
        Sheets(vActiveSheet).Select
        
        'Letzte Zeile eintragen
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieDatum).Value = aktDatum
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieName).Value = aktName
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieZeitVon).Value = aktMinTime / 24
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieZeitBis).Value = aktMaxTime / 24
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegiePause).Value = aktPause / 24
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieStunden).Value = aktWorkTime
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieTaetigkeit).Value = aktTaetigkeit
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieKm).Value = aktKm
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieOrt).Value = aktOrt
        
        Zeilenh|fffd|he startCellRegieInt + aktOffsetRegie
                
        aktOffsetRegie = aktOffsetRegie + 1
        
        If clearDat = "JA" Then
            clearDatums (sheetRegie)
        End If
        
        If anzNamen > 2 Then
            Range(cellNamen).Value = "Projekt-Team"
        Else
            Range(cellNamen).Value = alleNamen
        End If
    End If
    
    If typ = "Variante 3 - einzeilig - Projektteam" Then
        
        aktName = "Projekt-Team"
        
        'INIT -> Erste Zeile einlesen
        aktDatum = Range(startCellDaten).Offset(0, offsetDatenDatum).Value
        aktMinTime = Range(startCellDaten).Offset(0, offsetDatenMinTime).Value
        aktMaxTime = Range(startCellDaten).Offset(0, offsetDatenMaxTime).Value
        aktWorkTime = Range(startCellDaten).Offset(0, offsetDatenWorkTime).Value
        aktTaetigkeit = Range(startCellDaten).Offset(0, offsetDatenTaetigkeit).Value
        aktOrt = Range(startCellDaten).Offset(0, offsetDatenOrt).Value
        aktKm = Range(startCellDaten).Offset(0, offsetDatenKmGes).Value
        aktPause = 0#
        
        aktOffsetDaten = aktOffsetDaten + 1
        
        'Gehe durch alle Zeilen in der Datentabelle
        Do While Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum) <> ""
            
            If AG <> "" Then
                If AG Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG) & "*" Then
                    'AG schon vorhanden
                Else
                    AG = AG & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG)
                End If
            Else
                AG = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAG)
            End If
            
            If mtAuftragsNr <> "" Then
                If mtAuftragsNr Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr) & "*" Then
                    'mtAuftragsNr schon vorhanden
                Else
                    mtAuftragsNr = mtAuftragsNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr)
                End If
            Else
                mtAuftragsNr = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenPrjNr)
            End If
            
            If Auftrag <> "" Then
                If Auftrag Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj) & "*" Then
                    'Auftrag schon vorhanden
                Else
                    Auftrag = mtAuftragsNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj)
                End If
            Else
                Auftrag = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDetPrj)
            End If
            
            If AGBestNr <> "" Then
                If AGBestNr Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr) & "*" Then
                    'AGBestNr schon vorhanden
                Else
                    AGBestNr = AGBestNr & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr)
                End If
            Else
                AGBestNr = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenAGBestNr)
            End If
            
            If AGProjDesc <> "" Then
                If AGProjDesc Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei) & "*" Then
                    'AGProjDesc schon vorhanden
                Else
                    AGProjDesc = AGProjDesc & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
                End If
            Else
                AGProjDesc = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLei)
            End If
            
            If AGKontierung <> "" Then
                If AGKontierung Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc) & "*" Then
                    'AGKontierung schon vorhanden
                Else
                    AGKontierung = AGKontierung & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc)
                End If
            Else
                AGKontierung = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenLieLeiDesc)
            End If
                
            'Datum gleich wie in der Vorzeile
            If Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum) = aktDatum Then
            
                aktWorkTime = aktWorkTime + Round(Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenWorkTime), 2)
                aktKm = aktKm + Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenKmGes)
                
                If aktTaetigkeit <> "" Then
                    If aktTaetigkeit Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit) & "*" Then
                    Else
                        aktTaetigkeit = aktTaetigkeit & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit)
                    End If
                Else
                    aktTaetigkeit = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit)
                End If
                
                If aktOrt <> "" Then
                    If aktOrt Like "*" & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt) & "*" Then
                    Else
                        aktOrt = aktOrt & "; " & Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt)
                    End If
                Else
                    aktOrt = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt)
                End If
    
                aktOffsetDaten = aktOffsetDaten + 1
                
            'Datum unterschiedlich -> neue Zeile im Regiezettel anlegen
            Else
                vActiveSheet = sheetRegie
                Sheets(vActiveSheet).Select
            
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieDatum).Value = aktDatum
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieName).Value = aktName
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieStunden).Value = aktWorkTime
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieTaetigkeit).Value = aktTaetigkeit
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieKm).Value = aktKm
                Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieOrt).Value = aktOrt
                
                Zeilenh|fffd|he startCellRegieInt + aktOffsetRegie
                
                aktOffsetRegie = aktOffsetRegie + 1
                
                vActiveSheet = sheetDaten
                Sheets(vActiveSheet).Select
                
                
                aktDatum = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenDatum).Value
                aktWorkTime = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenWorkTime).Value
                aktTaetigkeit = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenTaetigkeit).Value
                aktOrt = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenOrt).Value
                aktKm = Range(startCellDaten).Offset(aktOffsetDaten, offsetDatenKmGes).Value
                aktPause = 0#
                
                If firstDate > aktDatum Then
                    firstDate = aktDatum
                End If
                
                If lastDate < aktDatum Then
                    lastDate = aktDatum
                End If
                
                aktOffsetDaten = aktOffsetDaten + 1
            End If
        Loop
        
        vActiveSheet = sheetRegie
        Sheets(vActiveSheet).Select
        
        'Letzte Zeile eintragen
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieDatum).Value = aktDatum
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieName).Value = aktName
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieStunden).Value = aktWorkTime
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieTaetigkeit).Value = aktTaetigkeit
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieKm).Value = aktKm
        Range(startCellRegie).Offset(aktOffsetRegie, offsetRegieOrt).Value = aktOrt
        
        Zeilenh|fffd|he startCellRegieInt + aktOffsetRegie
        
        aktOffsetRegie = aktOffsetRegie + 1
        
        Range(cellNamen).Value = aktName
        
        If clearDat = "JA" Then
            clearDatums (sheetRegie)
        End If
    End If
    
    vActiveSheet = sheetRegie
    Sheets(vActiveSheet).Select
    
    'Kopfbereich ausf|fffd|llen
    Range(cellAG).Value = AG
    Range(cellMtAuftragsNr).Value = "'" & mtAuftragsNr
    Range(cellAuftrag).Value = Auftrag
    Range(cellAGBestNr).Value = AGBestNr
    Range(cellAGProjDesc).Value = AGProjDesc
    Range(cellAGKontierung).Value = AGKontierung
    Range(cellLeistungszeitraum).Value = "von " & firstDate & " bis " & lastDate
    
    'Druckbereich setzen
    'setDruckbereich

    Sheets(sheetDaten).Visible = False
    Application.ScreenUpdating = True
End Sub

Private Sub clearDatums(sheet)
    Dim aktRowOffset
    Dim lastDate
    
    Sheets(sheet).Select
    
    lastDate = Range(startCellRegie).Offset(aktRowOffset, 0).Value
    aktRowOffset = aktRowOffset + 1
    
    Do While Range(startCellRegie).Offset(aktRowOffset, 0).Value <> ""
        
        If Range(startCellRegie).Offset(aktRowOffset, 0).Value = lastDate Then
            Range(startCellRegie).Offset(aktRowOffset, 0).Value = ""
        Else
            lastDate = Range(startCellRegie).Offset(aktRowOffset, 0).Value
        End If
        aktRowOffset = aktRowOffset + 1
    Loop
    
End Sub

Sub refreshDataTables()

    Dim ws As Worksheet
    Dim lstObj As ListObject

    UpdateSqlConnectionPersonFilter

    For Each ws In ThisWorkbook.Worksheets
        If ws.Name = "Daten" Then
            For Each lstObj In ws.ListObjects
                lstObj.QueryTable.Refresh BackgroundQuery:=False
            Next lstObj
        End If
    Next ws
    
End Sub

Private Sub UpdateSqlConnectionPersonFilter()
    Dim updQuery As String
    Dim newFilter As String
    Dim persons As String
    
    Sheets(sheetFilter).Select
    
    If (Range("J4").Value <> "") Then
        persons = VBA.Left(Range("J4").Value, Len(Range("J4").Value) - 1)
        newFilter = " AND (METINF_korpste_Regie_Actions.Kuerzel In (" & persons & "))"
    Else
        newFilter = ""
    End If
    
    updQuery = "SELECT METINF_korpste_Regie_Actions.Datum, METINF_korpste_Regie_Actions.""Zeit Von"", METINF_korpste_Regie_Actions.""Zeit Bis"", METINF_korpste_Regie_Actions.Kuerzel, METINF_korpste_Regie_Actions.Vorname, METINF_korpste_Regie_Actions.Nachname, METINF_korpste_Regie_Actions.Taetigkeit, METINF_korpste_Regie_Actions.Ort, METINF_korpste_Regie_Actions.ProjektNr, METINF_korpste_Regie_Actions.Auftraggeber, METINF_korpste_Regie_Actions.Detailprojekt, METINF_korpste_Regie_Actions.""Auftraggeber BestNr"", METINF_korpste_Regie_Actions.Lieferleistung, METINF_korpste_Regie_Actions.""Lieferleistung Beschreibung"", METINF_korpste_Regie_Actions.Personaleinsatz, METINF_korpste_Regie_Actions.ACID, METINF_korpste_Regie_Actions.LocCode, METINF_korpste_Regie_Actions.""KM hin"", METINF_korpste_Regie_Actions.""KM zurueck""" & vbLf & _
            "FROM EDMMT.dbo.METINF_korpste_Regie_Actions METINF_korpste_Regie_Actions" & vbLf & _
            "WHERE (METINF_korpste_Regie_Actions.Datum Between ? And ?) AND (METINF_korpste_Regie_Actions.ACID<>?)" & newFilter & "AND (METINF_korpste_Regie_Actions.ProjektNr=?) AND (METINF_korpste_Regie_Actions.Detailprojekt Like '%'+?+'%') AND (METINF_korpste_Regie_Actions.Lieferleistung Like '%'+?+'%') AND (METINF_korpste_Regie_Actions.Personaleinsatz Like '%'+?+'%') AND (METINF_korpste_Regie_Actions.LocCode Like '%'+?+'%')" & vbLf '& _

    UpdateQueryConnectionString "Abfrage von smetgrz0113 - Actions", updQuery
    
End Sub

Private Sub UpdateQueryConnectionString(ConnectionString As String, SqlQuery As String)

  Dim cn As WorkbookConnection
  Dim odbcCn As ODBCConnection
  Set cn = ThisWorkbook.Connections(ConnectionString)
  Set odbcCn = cn.ODBCConnection
    odbcCn.CommandText = SqlQuery

End Sub

Private Function GetSqlQueryFromConnection(ConnectionString As String)

  Dim Temp As String
  Dim cn As WorkbookConnection
  Dim odbcCn As ODBCConnection
  Set cn = ThisWorkbook.Connections(ConnectionString)
  Set odbcCn = cn.ODBCConnection
  Temp = odbcCn.CommandText
  GetSqlQueryFromConnection = Temp

End Function

Public Function VerkettenMAFilter(ByRef bereich As Range, Trennzeichen As String) As String

Dim rng As Range

   For Each rng In bereich
      If rng <> "" Then
      VerkettenMAFilter = VerkettenMAFilter & rng & Trennzeichen
      End If
   Next

If Len(VerkettenMAFilter) > 0 Then _
VerkettenMAFilter = VBA.Left(VerkettenMAFilter, Len(VerkettenMAFilter) - Len(Trennzeichen))

End Function

Sub Zeilenh|fffd|he(zeile As Integer)
    Rows(zeile).EntireRow.AutoFit
    Rows(zeile).RowHeight = Application.WorksheetFunction.Max(Rows(zeile).RowHeight, 15)
End Sub

Sub setDruckbereich()
    For Each nm In ActiveWorkbook.Names
        If nm.Name = sheetRegie & "!Druckbereich" Then
            nm.Delete
        End If
    Next
    
    ActiveWorkbook.Names.Add _
        Name:=sheetRegie & "!Druckbereich", _
        RefersTo:="=INDIREKT(" & sheetRegie & "!$P$1)"

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Bei |fffd|nderung der Projektnummer sollen die Unterfilter gel|fffd|scht werden
Private Sub Worksheet_Change(ByVal Target As Excel.Range)
  If Not Intersect(Target, Range("B4")) Is Nothing Then
    Range("B5").Value = ""
    Range("B6").Value = ""
    Range("B7").Value = ""
    Range("G4", "G100").Value = ""
    Range("J4").FormulaLocal = "=VerkettenMAFilter(INDIREKT(J1);"""")"
    Else
      Exit Sub
  End If
End Sub
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True




INQUEST-PP=macro
