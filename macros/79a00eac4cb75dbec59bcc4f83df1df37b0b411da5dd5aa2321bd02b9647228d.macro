Attribute VB_Name = "Auto_Open"
Option Explicit

Sub Auto_Open()
    If ModoDeMantenimiento Then Exit Sub
    Real_Auto_Open
End Sub

Sub Real_Auto_Open()
    Dim BkSU As Boolean: BkSU = Pantalla(False)

    Application.Calculation = xlAutomatic
    'AddIns("Herramientas para an|fffd|lisis").Installed = True
    'AddIns("Herramientas para an|fffd|lisis - VBA").Installed = True
    
    Limpiar_Paso1
    Limpiar_Paso2
    Limpiar_Paso3
    Limpiar_Paso3a
    Limpiar_Paso4
    Limpiar_Paso5
    Limpiar_Paso5a
    Limpiar_Paso6
    Limpiar_PasoSeguros
    Limpiar_PasoTasas
    Limpiar_PasoValorDestructible
    
    ProtegerHoja Sheets("PASO6 APOYO")
    ProtegerHoja Sheets("PASO6 COFINAVIT")
    ProtegerHoja Sheets("PASO6 FOVISSSTE")
    ProtegerHoja Sheets("PASO7 TRAD")
    
    Sheets("PASO1").Select
    Auto_Fecha_Inicial
    ProtegerHoja
    ActiveSheet.EnableSelection = xlUnlockedCells
    
    Pantalla BkSU
End Sub

'Valida el D|fffd|a, Mes y A|fffd|o seleccionados y verifica si es una fecha correcta; de no serlo, arroja la alerta.
Private Sub Alerta_Fecha()
    DesprotegerHoja
    If Range("K2").Value = "SI" Then
    MsgBox "Capture una fecha v|fffd|lida", vbCritical = vbOKOnly, "Fecha de Cotizaci|fffd|n"
    End If
    
    ProtegerHoja
End Sub

'Al abrir el archivo, la fecha actual se selecciona autom|fffd|ticamente.
Sub Auto_Fecha_Inicial()
    Sheets("PASO1").Select
    DesprotegerHoja
    Range("H2").Select
    ActiveCell.FormulaR1C1 = "=DAY(TODAY())"
    Range("I2").Select
    ActiveCell.FormulaR1C1 = "=MONTH(TODAY())"
    Range("J2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("H2:J2").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("C2").Select
    Application.CutCopyMode = False
    ProtegerHoja
End Sub

'Auxiliar de impresi|fffd|n.
Private Sub Imprimir()
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True
End Sub
Attribute VB_Name = "Branding"

'|~) _ _  _  _|. _ _
'|_)| (_|| |(_||| |(_|
'                   _|

'Rutinas que tienen que ver con los Logos y las Marcas

Option Explicit

'Nombres de las 'Shapes' de las im|fffd|genes
Public Const LOGO_BANORTE = "LogoBanorte"
Public Const LOGO_IXE = "LogoIxe"
Public Const LOGO_FOVISSSTE = "LOGO_Opci|fffd|nFovissste"
Public Const LOGO_INFONAVIT = "LogoInfonavit"
Public Const LOGO_APOYO = "LogoApoyo"
Public Const LOGO_COFI = "LogoCofinavit"
Public Const LOGO_ALIADOS = "LogoAliados"
Public Const LOGO_RESPAL = "LogoRespaldados"

'Muestra el Logo Correspondiente
Sub MuestraLogoSegunEsquema()
    Select Case Range("Nombre_Esquema_Especial")
        Case "":
            Muestra_Logo_Trad
            
        Case "Apoyo INFONAVIT":
            Muestra_Logo_Apoyo
            
        Case "Cofinavit":
            Muestra_Logo_Cofinavit
            
        Case "Cofinavit AG":
            Muestra_Logo_CofinavitAG
            
        Case "Alia2+":
            Muestra_Logo_Alia2
            
        Case "Respalda2":
            Muestra_Logo_Respalda2
            
    End Select
End Sub

Sub Muestra_Logo_Trad()
    ProtegerHoja
    If CA_Servicios.Marca() = "BANORTE" Then
        ActiveSheet.Shapes.Range(LOGO_BANORTE).ZOrder msoBringToFront
    Else
        ActiveSheet.Shapes.Range(LOGO_IXE).ZOrder msoBringToFront
    End If
End Sub

Sub Muestra_Logo_Apoyo()
    ProtegerHoja
    ActiveSheet.Shapes.Range(LOGO_APOYO).ZOrder msoBringToFront
End Sub

Sub Muestra_Logo_Cofinavit()
    ProtegerHoja
    ActiveSheet.Shapes.Range(LOGO_COFI).ZOrder msoBringToFront
End Sub

Sub Muestra_Logo_CofinavitAG()
    DesprotegerHoja
    ActiveSheet.Shapes("Picture 20").Select
    Selection.ShapeRange.ZOrder msoBringToFront
End Sub

Sub Muestra_Logo_Alia2()
    ProtegerHoja
    ActiveSheet.Shapes.Range(LOGO_ALIADOS).ZOrder msoBringToFront
End Sub

Sub Muestra_Logo_Respalda2()
    ProtegerHoja
    ActiveSheet.Shapes(LOGO_RESPAL).ZOrder msoBringToFront
End Sub

Private Sub Muestra_Logo_Cofinavitingresosad()
    Muestra_Logo_Cofinavit
    Exit Sub
    If Range("F20") = 2 Then
        ProtegerHoja
        ActiveSheet.Shapes.Range("Picture 21").ZOrder msoBringToFront
    End If
    If Range("F20") = 1 Then Muestra_Logo_Cofinavit

End Sub
Attribute VB_Name = "CA_Servicios"
Option Explicit

Private Const HOJA_CA_SVC = "CA_Servicios"

Public Const ND_BRANDING = "CA_Servicios!CA.Branding"

Public Const ND_RT_MODO_MANTENIMIENTO = "CA_Servicios!CA.ModoMantenimiento"
Public Const ND_RT_CONTRASE|fffd|A_EN_HOJA = "CA_Servicios!CA.UsarContrase|fffd|aEnHojasRT"

Public Const ND_STAMP_SUFIJO = "CA_Servicios!CA.Stamp_Sufijo"
Public Const ND_STAMP_MENSAJE = "CA_Servicios!CA.Stamp_Mensaje"
Public Const ND_STAMP_VERSION = "CA_Servicios!CA.Stamp_Version_MCA"

Private ThisWorksheet As Worksheet

'Regresa el estado de la bandera de Modo de Mantenimiento.
Function ModoDeMantenimiento() As Boolean
    InitThisWorksheet
    ModoDeMantenimiento = ThisWorksheet.Range(ND_RT_MODO_MANTENIMIENTO)
End Function

'Asigna la bandera del modo de mantenimiento.
Sub ModoDeMantenimiento_Set(Value As Boolean)
    InitThisWorksheet
    ThisWorksheet.Range(ND_RT_MODO_MANTENIMIENTO) = Value
End Sub

'Regresa la marca que est|fffd| vigente, en may|fffd|sculas.
Function Marca() As String
    InitThisWorksheet
    Marca = UCase(ThisWorksheet.Range(ND_BRANDING))
End Function

'Inicializa la referencia a la hoja de servicios, en caso de que sea nula.
Sub InitThisWorksheet()
    If ThisWorksheet Is Nothing Then Set ThisWorksheet = ThisWorkbook.Worksheets(HOJA_CA_SVC)
End Sub

'Funci|fffd|n "de alto nivel" que despliega mensaje si el libro est|fffd| en modo de solo lectura y lo cierra.
'S|fffd|lo procede en caso de que no sea modo de mantenimiento.
Sub CheckReadOnly(Optional CloseIfTrue = False)
    If CA_Servicios.ModoDeMantenimiento Then Exit Sub
    If Not ThisWorkbook.ReadOnly Then Exit Sub
    
    Dim Mensaje As String
    Dim Icono As VbMsgBoxStyle
    
    Mensaje = "El Simulador se abri|fffd| en Modo de S|fffd|lo Lectura." & vbCrLf _
              & "Para que funcione correctamente, debe de ser copiado a la PC."
    Icono = vbInformation
    
    If CloseIfTrue Then
        Mensaje = Mensaje & vbCrLf & "El Simulador se cerrar|fffd|."
        Icono = vbCritical
    End If
              
    MsgBox Mensaje, Icono, "Simuladores"
    
    If CloseIfTrue Then ThisWorkbook.Close False
End Sub

'Informa las versiones y arquitectura de Windows y Office.
Public Sub DisplayRunningEnvironment()
Attribute DisplayRunningEnvironment.VB_ProcData.VB_Invoke_Func = "q\n14"
    Dim OSInfo As String, _
        OfficeInfo As String, _
        ReadOnly As String, _
        SimInfo As String, Release As String
    
    Release = Range(ND_STAMP_SUFIJO): If Release = "" Then Release = "- N/A -"
    SimInfo = "No. Release " & Release
    SimInfo = SimInfo & " | MCA v" & Range(ND_STAMP_VERSION) & vbCrLf & vbCrLf
    
    If ThisWorkbook.ReadOnly Then ReadOnly = "El Simulador est|fffd| operando en Modo de S|fffd|lo Lectura." & vbCrLf
        
    On Error Resume Next: OSInfo = GetOperatingSystem()
    If Err.Number <> 0 Then OSInfo = Application.OperatingSystem & " [" & GetOSArch & " bit]": On Error GoTo 0
    
    OfficeInfo = "Excel: " & Application.Version & "  Build: " & Application.Build & " - " & GetOfficeArch() & " bits. "
    
    MsgBox SimInfo & ReadOnly & OSInfo & vbCrLf & OfficeInfo, vbInformation, "Simuladores - Ambiente de ejecuci|fffd|n"
End Sub

'Protege una hoja respetando el modo de mantenimiento Y el setting Proteger Hojas con Contrase|fffd|a establecido en el Cierre.
Sub ProtegerHoja(Optional sheet)
    If ModoDeMantenimiento() Then Exit Sub
    If [CA_Servicios!CA.UsarContrase|fffd|aEnHojasRT] Then
        ProtegerHojaAuto sheet
    Else
        ProtegerHojaAuto sheet, ""
    End If
End Sub

Attribute VB_Name = "CA_Utils"
'====================================================================================================
'M|fffd|dulo con funciones y rutinas |fffd|tiles
'====================================================================================================
Option Explicit

Private Const INTEGER_MAX_VALUE As Integer = 32767

'====================================================================================================
'STRINGS

'Regresa un string sin lo que aparece despu|fffd|s de un punto (.) si existe.
Function GetFilenameWithoutExtension(ByVal FileName) As String
    Dim Result, i
    Result = FileName
    i = InStrRev(FileName, ".")
    If (i > 0) Then Result = Mid(FileName, 1, i - 1)
    GetFilenameWithoutExtension = Result
End Function

'Regresa un string con lo que aparece despu|fffd|s del |fffd|ltimo punto (.) si existe.
Function GetExtension(ByVal FileName) As String
    Dim Result, i
    i = InStrRev(FileName, ".")
    If (i > 0) Then Result = Right(FileName, Len(FileName) - i)
    GetExtension = Result
End Function

'Regresa un string con lo que aparece despu|fffd|s de la |fffd|ltima diagonal(\).
Function GetFileName(ByVal FileName As String) As String
    Dim Result, i
    Result = FileName
    i = InStrRev(FileName, "\")
    If (i > 0) Then Result = Right(FileName, Len(FileName) - i)
    GetFileName = Result
End Function

'Regresa un string a partir de la fecha y la hora: AAAAMMDDHHMMSS
Function GeneraSufijoDeFecha()
    Dim Separator As String: Separator = ""
    GeneraSufijoDeFecha = Year(Date) _
    & Separator & PadCeros(Month(Date)) _
    & Separator & PadCeros(Day(Date)) _
    & "_" _
    & Separator & PadCeros(Hour(Time)) _
    & Separator & PadCeros(Minute(Time)) _
    & Separator & PadCeros(Second(Time))
End Function

'Funci|fffd|n simple para generar una contrase|fffd|a a partir del nombre de la hoja.
Function GeneraContrase|fffd|aDeHoja(sh As Worksheet)
    GeneraContrase|fffd|aDeHoja = Left(StrReverse(sh.name) & StrReverse(sh.name), 15)
End Function

'Rellena ceros a la izquierda.
Function PadCeros(s)
    PadCeros = Right(String(2, "0") & s, 2)
End Function

'Genera una contrase|fffd|a a partir del nombre del libro y la fecha.
Function GenerarContrase|fffd|a()
    Dim ar, ix, nComponentes, ar2(0 To 2)
    
    ar = Split(ThisWorkbook.name, , 3) 'Obtenemos las palabras del nombre separados por espacios.
    nComponentes = UBound(ar) + 1 'Cuantas palabras son?
    For ix = 0 To 2
        ar2(ix) = "X": If ix < nComponentes Then ar2(ix) = Left(ar(ix), 1)
    Next
    GenerarContrase|fffd|a = ar2(0) & PadCeros(Day(Date)) & _
        ar2(1) & PadCeros(Month(Date)) & _
        ar2(2) & PadCeros(Year(Date))
End Function

'Compara dos strings que se interpretan como versiones. Ej. ("2.3" vs "0.8.2")
'Guiones se asumen separadores: "1.3.Dev" = "1.3-Dev")
'"Dev" tiene significado especial: Valor M|fffd|ximo del tipo Integer: "1.3-Dev" = "1.3.32767"
'El resto de los elementos se interpretan como n|fffd|meros (0 en caso de elementos no num|fffd|ricos) "1.a" = "1.0"
'Elementos faltantes se asumen 0. (ej. "a.b" vs "1.0.b" = "0.0.0" vs "1.0.0")
'Resultado:
' v1 > v2 : 1
' v1 < v2 : -1
' v1 = v2 : 0
Function VersionComparer(ByVal v1 As String, ByVal v2 As String) As Integer
    Dim arV1, arV2, _
        nComp1, nComp2, nCompMax, _
        c1 As Integer, c2 As Integer, _
        ix
    
    'Guiones como separadores
    v1 = Replace(v1, "-", ".")
    v2 = Replace(v2, "-", ".")
    
    'Arreglos de elementos
    arV1 = Split(v1, ".")
    arV2 = Split(v2, ".")
    
    'N|fffd|mero de elementos m|fffd|ximo
    nComp1 = UBound(arV1) - LBound(arV1) + 1
    nComp2 = UBound(arV2) - LBound(arV2) + 1
    nCompMax = WorksheetFunction.Max(nComp1, nComp2)
    
    'Comparaci|fffd|n de elemento por elemento. La primera diferencia determina el resultado.
    On Error Resume Next
    For ix = 0 To nCompMax - 1
        c1 = 0: c2 = 0
        c1 = ObtenElementoDeVersion(arV1(ix)): If Err.Number = 9 Then Err.Clear
        c2 = ObtenElementoDeVersion(arV2(ix)): If Err.Number = 9 Then Err.Clear
        If c1 > c2 Then
            VersionComparer = 1
            Exit For
        ElseIf c1 < c2 Then
            VersionComparer = -1
            Exit For
        End If
    Next
    On Error GoTo 0
    
End Function

'Asigna los valores especiales a los elementos de versi|fffd|n, como 'Dev'
Function ObtenElementoDeVersion(e)
    ObtenElementoDeVersion = e
    If UCase(Trim(CStr(e))) = "DEV" Then ObtenElementoDeVersion = INTEGER_MAX_VALUE
End Function

Function GenNombreDeMacroRemota(nomLibro As String, nomMacro As String) As String
    GenNombreDeMacroRemota = "'" & nomLibro & "'!" & nomMacro
End Function

'Agrega un sufijo a un nombre de archivo con extensi|fffd|n.
Function AgregaSufijo(Ruta As String, Sufijo As String, Optional Separador As Variant)
    Dim Sep As String: Sep = IIf(IsMissing(Separador), " ", Separador)
    AgregaSufijo = GetFilenameWithoutExtension(Ruta) & Sep & Sufijo & "." & GetExtension(Ruta)
End Function

'Agrega un bullet al inicio de un string
Function StringConBullet(str As String) As String
    StringConBullet = Chr(149) & " " & str
End Function

'Regresa una cadena con una duraci|fffd|n "amigable"
Function FriendlySeconds(Seconds As Long) As String
    Dim strResultado As String: strResultado = FormatNumber(Seconds, 0) + "s"
    If Seconds > 60 Then strResultado = strResultado & " (" + CStr(Int(Seconds / 60)) & ":" & PadCeros(Seconds - (60 * Int(Seconds / 60))) & "m)"
    FriendlySeconds = strResultado
End Function

'====================================================================================================
'FECHAS

'Le agrega un n|fffd|mero de meses a una fecha.
Function SumarMes(tdFecha As Date, tnMeses As Byte) As Date
    SumarMes = DateAdd("m", tnMeses, tdFecha)
End Function

'====================================================================================================
'OBJETOS EXCEL

'Regresa si existe un Nombre Definido con scope local a la hoja proporcionada.
Function ExisteNombreDefinidoLocal(Nombre As String, ws As Worksheet)
    ExisteNombreDefinidoLocal = False
    Dim nm As name
    On Error Resume Next
    Set nm = ws.Names(Nombre)
    ExisteNombreDefinidoLocal = Not nm Is Nothing
End Function

'Esconde todas las filas y columnas m|fffd|s all|fffd| de una celda proporcionada.
Sub OcultaCeldasMasAlla(UltimaCelda As Range)
    Dim UC As Range, Primera As Long, Ultima As Long
    Set UC = UltimaCelda.Offset(1, 1)
    
    Primera = UC.Column
    Ultima = UC.EntireRow.Cells.Count
    Range(Cells.Columns(Primera), Cells.Columns(Ultima)).EntireColumn.Hidden = True
    
    Primera = UC.Row
    Ultima = UC.EntireColumn.Cells.Count
    Range(Cells.Rows(Primera), Cells.Rows(Ultima)).EntireRow.Hidden = True
End Sub

'Protege una hoja. Se genera una contrase|fffd|a basada en el nombre de la hoja.
'Si no se proporciona una hoja, se protege la hoja actual.
Sub ProtegerHojaAuto(Optional sheet, Optional passwd)
    Dim sh As Worksheet, pwd As String
    Set sh = ActiveSheet: If Not IsMissing(sheet) Then Set sh = sheet
    pwd = GeneraContrase|fffd|aDeHoja(sh): If Not IsMissing(passwd) Then pwd = passwd
    sh.Protect Password:=pwd, DrawingObjects:=True, Contents:=True, Scenarios:=True, UserInterfaceOnly:=True
    sh.EnableSelection = xlNoRestrictions
End Sub

'Desprotege una hoja con contrase|fffd|a autom|fffd|tica.
Sub DesprotegerHoja(Optional sheet)
    Dim sh As Worksheet, pwd As String
    Set sh = ActiveSheet: If Not IsMissing(sheet) Then Set sh = sheet
    pwd = GeneraContrase|fffd|aDeHoja(sh)
    sh.Unprotect Password:=pwd
End Sub

'Elimina una hoja del libro, sin que se pida confirmaci|fffd|n.
'Apaga las alertas temporalmente en caso de ser necesario.
Sub BorrarHojaSinConfirmacion(sh As Worksheet)
    Dim DAbk As Boolean: DAbk = Application.DisplayAlerts
    Application.DisplayAlerts = False
    sh.Visible = xlSheetHidden 'por si est|fffd| VeryHidden, as|fffd| no truena.
    sh.Delete
    Application.DisplayAlerts = DAbk
End Sub

'Asigna el color de un rango.
'Si no se manda color, se elimina el fill
Sub PintaRango(Rango As Range, Optional clr)
    Rango.Interior.Pattern = xlNone
    If Not IsMissing(clr) Then Rango.Interior.Color = clr
End Sub

'Asigna el color del texto en un rango.
Sub PintaTexto(Rango As Range, clr As Long)
    Rango.Font.Color = clr
End Sub

'Regresa si una hoja existe por nombre. No importan may|fffd|sculas y min|fffd|sculas.
'Si se proporciona el segundo par|fffd|metro, que sea un objeto tipo Workbook.
Function ExisteHoja(Nombre As String, Optional libro) As Boolean
    Dim QueLibro As Workbook: Set QueLibro = ThisWorkbook
    If Not IsMissing(libro) Then Set QueLibro = libro
    ExisteHoja = False
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = QueLibro.Worksheets(Nombre)
    ExisteHoja = Not ws Is Nothing
End Function

'Verifica si un libro est|fffd| abierto a partir de un path completo
'Si se proporciona un segundo par|fffd|metro, y el libro est|fffd| abierto, se regresa la referencia ah|fffd|.
Function LibroEstaAbierto(FullName As String, Optional ReferenciaAlLibro) As Boolean
    Dim wbk As Workbook: For Each wbk In Workbooks
        If UCase(wbk.FullName) = UCase(FullName) Then
            LibroEstaAbierto = True
            Set ReferenciaAlLibro = wbk
            Exit For
        End If
    Next
End Function

'====================================================================================================
'VBA

'Copia un m|fffd|dulo del libro actual (o de otro libro) a otro libro.
Sub CopiarModuloVBA(moduleName As String, destination As Workbook, Optional source)
    Dim swb As Workbook, sourcecomponent, component
    Set swb = ThisWorkbook: If Not IsMissing(source) Then Set swb = source
    Set sourcecomponent = swb.VBProject.VBComponents(moduleName)
    Set component = destination.VBProject.VBComponents.Add(sourcecomponent.Type)
    With component
        .name = moduleName 'Renombramos
        .CodeModule.DeleteLines 1, component.CodeModule.CountOfLines 'Realmente vac|fffd|o
        .CodeModule.AddFromString sourcecomponent.CodeModule.Lines(1, sourcecomponent.CodeModule.CountOfLines)
    End With
End Sub

'Regresa si existe un componente VBA por nombre. No importan may|fffd|sculas/min|fffd|sculas.
'Si se proporciona el segundo par|fffd|metro, que sea un objeto tipo Workbook.
Function ExisteComponenteVB(Nombre As String, Optional libro) As Boolean
    Dim QueLibro As Workbook: Set QueLibro = ThisWorkbook
    If Not IsMissing(libro) Then Set QueLibro = libro
    ExisteComponenteVB = False
    Dim vbC
    On Error Resume Next
    Set vbC = QueLibro.VBProject.VBComponents(Nombre)
    ExisteComponenteVB = Not vbC Is Nothing
End Function

'Elimina un m|fffd|dulo del libro actual (o de otro libro).
Sub EliminarModuloVBA(moduleName As String, Optional source)
    Dim swb As Workbook, component
    Set swb = ThisWorkbook: If Not IsMissing(source) Then Set swb = source
    Set component = swb.VBProject.VBComponents(moduleName)
    swb.VBProject.VBComponents.Remove component
End Sub

'====================================================================================================
'Arrays

'Regresa si un arreglo est|fffd| allocated o no. Ver http://www.cpearson.com/excel/vbaarrays.htm
Public Function IsArrayAllocated(Arr As Variant) As Boolean
    Dim N As Long
    On Error Resume Next
    If IsArray(Arr) = False Then
        IsArrayAllocated = False
        Exit Function
    End If
    N = UBound(Arr, 1)
    If (Err.Number = 0) Then
        If LBound(Arr) <= UBound(Arr) Then
            IsArrayAllocated = True
        Else
            IsArrayAllocated = False
        End If
    Else
        IsArrayAllocated = False
    End If
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' NumberOfArrayDimensions
' This function returns the number of dimensions of an array. An unallocated dynamic array
' has 0 dimensions. This condition can also be tested with IsArrayEmpty.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Ver http://www.cpearson.com/excel/vbaarrays.htm
Public Function NumberOfArrayDimensions(Arr As Variant) As Integer
    Dim Ndx As Integer, Res As Integer
    On Error Resume Next
    Do
        Ndx = Ndx + 1
        Res = UBound(Arr, Ndx)
    Loop Until Err.Number <> 0
    NumberOfArrayDimensions = Ndx - 1
End Function

'Usa WMI para obtener el tipo de sistema operativo.
Public Function GetOperatingSystem()
    Dim objWMIService, colOperatingSystems, objOperatingSystem As Variant
    
    Set objWMIService = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2")
    Set colOperatingSystems = objWMIService.ExecQuery("Select * from Win32_OperatingSystem")
    
    For Each objOperatingSystem In colOperatingSystems
        GetOperatingSystem = objOperatingSystem.Caption & " " & objOperatingSystem.Version & " " & objOperatingSystem.OSArchitecture
        Exit Function
    Next
End Function

'Purpose: Regresa un n|fffd|mero (32 o 64) que indica la arquitectura de Windows.
Function GetOSArch() As Integer
    GetOSArch = 32
    If Environ("ProgramW6432") <> "" Then GetOSArch = 64
End Function

'Regresa un n|fffd|mero (32 o 64) que indica la arquitectura de Office.
Function GetOfficeArch() As Integer
    GetOfficeArch = 32
    #If Win64 Then
        GetOfficeArch = 64
    #End If
End Function

'Auxiliar para que no se refresque la pantalla en operaciones de limpia y ajuste.
'Regresa el valor que ten|fffd|a antes de aplicar el setting.
Function Pantalla(Estado As Boolean) As Boolean
    Pantalla = Application.ScreenUpdating
    Application.ScreenUpdating = Estado
End Function

'Auxiliar para cambiar el modo de c|fffd|lculo.
'Regresa el valor que ten|fffd|a antes de aplicar el setting.
'No cambia el estado de la bandera Saved del libro actual.
Function C|fffd|lculo(Estado As XlCalculation) As XlCalculation
    Dim SavedStatusBackup: SavedStatusBackup = ActiveWorkbook.Saved
    C|fffd|lculo = Application.Calculation
    Application.Calculation = Estado
    ActiveWorkbook.Saved = SavedStatusBackup
End Function

'Auxiliar para activar/desactivar los eventos.
'Regresa el valor que ten|fffd|a antes de aplicar el setting.
Function Eventos(Estado As Boolean) As Boolean
    Eventos = Application.EnableEvents
    Application.EnableEvents = Estado
End Function

Attribute VB_Name = "CA_Utils_ComboDV"
'========================================================================================
'M|fffd|dulo con rutinas auxiliares para trabajar con "Combos" implementados
'con la funcionalidad de Data Validation - List de Excel.
'========================================================================================

Option Explicit

'Indica si el valor actual de un combo DV es v|fffd|lido o no.
Function ComboDV_Selecci|fffd|nEsV|fffd|lida(AValidar As Range) As Boolean
    ComboDV_Selecci|fffd|nEsV|fffd|lida = AValidar.Validation.Value
End Function

'Indica si el rango que contiene la lista de opciones, es v|fffd|lida.
Function ComboDV_ListaDeOpcionesEsV|fffd|lida(AValidar As Range) As Boolean
    ComboDV_ListaDeOpcionesEsV|fffd|lida = True
    On Error GoTo invalid
    Dim rg: Set rg = Range(AValidar.Validation.Formula1)
    Exit Function
invalid:
    ComboDV_ListaDeOpcionesEsV|fffd|lida = False
End Function

'Selecciona la primera de las Opciones v|fffd|lidas.
Function ComboDV_AsignaPrimera(AValidar As Range) As Boolean
    ComboDV_Asigna|fffd|ndice AValidar, 1
End Function

'Le asigna el elemento n|fffd|mero <|fffd|ndice> de la Lista de Opciones.
Function ComboDV_Asigna|fffd|ndice(AValidar As Range, ix As Integer) As Boolean
    Dim Ref: Ref = AValidar.Validation.Formula1
    Ref = TraduceFormulas(CStr(Ref))
    Dim rg As Range: Set rg = Range(Ref)
    AValidar.Value = rg.Cells(ix)
End Function

Attribute VB_Name = "CA_Utils_Lang"
Option Explicit

'=======================================================================================
' Procedure : TraduceFormulas
' Author    : +
' Date      : 17/08/2012
' Purpose   : Traduce algunos nombres de f|fffd|rmulas integradas de Excel del espa|fffd|ol al ingl|fffd|s.
'=======================================================================================
Public Function TraduceFormulas(Cadena$) As String
On Error GoTo TraduceFormulas_Error
    
    Dim sResult As String
    sResult = Cadena
    sResult = Replace(sResult, "DESREF(", "OFFSET(", , , vbTextCompare)
    sResult = Replace(sResult, "INDIRECTO(", "INDIRECT(", , , vbTextCompare)
    TraduceFormulas = sResult
    
    If sResult <> Cadena Then
        Debug.Print " Se realiz|fffd| traducci|fffd|n de nombres de funciones:"
        Debug.Print "  - Cadena original: " & Cadena
        Debug.Print "  - Cadena final: " & sResult
    End If

On Error GoTo 0
Exit Function

TraduceFormulas_Error:
    Debug.Print "Error en TraduceFormulas().", Cadena
End Function
Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja45"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja47"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja48"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja49"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja50"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja51"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja54"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HojaCA_Servicios"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
    If Not Intersect(Target, Range(CA_Servicios.ND_BRANDING)) Is Nothing Then
        'Intenta correr la macro que avisa del cambio de marca.
        On Error Resume Next
        Application.Run "AsignaMarca"
        On Error GoTo 0
    End If
End Sub
Attribute VB_Name = "Mensajes"

'|\/| _  _  _ _ . _ _
'|  |(/_| |_\(_||(/__\
'              L|

'Textos que se presentan durante el transcurso del uso del simulador.

Option Explicit

Sub Mensaje_Tipo_Simulaci|fffd|n()
    Select Case Range("Tipo_simulaci|fffd|n")
        Case Range("Por_aval|fffd|o")
            MsgBox "Capturar el valor aproximado de la vivienda y seleccionar las condiciones deseadas (Plazo, Comisi|fffd|n por apertura, etc.)", vbInformation + vbOKOnly, "PASO 1"
            MsgBox "Dar clic en Cotizaci|fffd|n.", vbInformation + vbOKOnly, "PASO 2"
        
        Case Range("Por_cr|fffd|dito")
            MsgBox "Capturar el monto de cr|fffd|dito deseado y seleccionar las condiciones deseadas (Plazo, Comisi|fffd|n por apertura, etc.)", vbInformation + vbOKOnly, "PASO 1"
            MsgBox "Dar clic en Cotizaci|fffd|n.", vbInformation + vbOKOnly, "PASO 2"
        
        Case Range("Por_Pago_Mensual")
            MsgBox "Capturar monto de pago mensual y seleccionar las condiciones deseadas (Plazo, Comisi|fffd|n por apertura, etc.)", vbInformation + vbOKOnly, "PASO 1"
            MsgBox "Dar clic en Calcular.", vbInformation + vbOKOnly, "PASO 2"
            MsgBox "Dar clic en Cotizaci|fffd|n.", vbInformation + vbOKOnly, "PASO 3"
        
        Case Range("Por_Ingreso_Mensual")
            MsgBox "Capturar ingreso mensual y seleccionar las condiciones deseadas (Plazo, Comisi|fffd|n por apertura, etc.)", vbInformation + vbOKOnly, "PASO 1"
            MsgBox "Dar clic en Calcular.", vbInformation + vbOKOnly, "PASO 2"
            MsgBox "Dar clic en Cotizaci|fffd|n.", vbInformation + vbOKOnly, "PASO 3"
    End Select
End Sub

Sub Mensaje_Cofinavit()
    Dim BkSU As Boolean: BkSU = Pantalla(True) 'Nos aseguramos que la pantalla est|fffd| prendida.
    
    Dim Mensaje As String
    Mensaje = "Para realizar la cotizaci|fffd|n con este esquema recuerda que:" + vbCrLf + vbCrLf + _
        StringConBullet("Debes contar con la precalificaci|fffd|n Cofinavit o Cofinavit Ingresos Adicionales vigente, es decir que NO tenga una antig|fffd|edad mayor a 30 d|fffd|as.") + vbCrLf + _
        StringConBullet("La suma de los recursos que otorgan ambas instituciones (INFONAVIT y Banorte) no debe exceder:") + vbCrLf + _
        StringConBullet("Del 110% del valor comercial de aval|fffd|o cuando este valor es igual o menor a 7 mdp.") + vbCrLf + _
        StringConBullet("Del valor comercial de aval|fffd|o cuando este valor es mayor a 7 mdp.")
        
    MsgBox Mensaje, vbCritical + vbOKOnly, "AVISO IMPORTANTE"
    
    Pantalla BkSU
End Sub

Sub Mensaje_Cotizaci|fffd|n_Cofinavit()
    Dim Mensaje As String
    Mensaje = "En esquema Cofinavit, Banorte te puede prestar HASTA el 110% del valor comercial de aval|fffd|o cuando este valor es igual o menor a 7 mdp." + vbCrLf + vbCrLf + _
        "En caso de necesitar un menor monto de cr|fffd|dito Banorte, lo puedes disminuir  capturando el monto deseado en el Campo ""Aportaci|fffd|n Adicional (Opcional)"""
        
    MsgBox Mensaje, vbInformation + vbOKOnly, "Informaci|fffd|n"
End Sub
Attribute VB_Name = "Module1"
Option Explicit



Attribute VB_Name = "Navegaci|fffd|n"

'|\ | _    _  _  _  _. _ _
'| \|(_|\/(/_(_|(_|(_|(_)| |
'             _|

'En este m|fffd|dulo vamos a dejar las macros de los botones que determinan los pasos siguientes, seg|fffd|n las opciones seleccionadas.

Option Explicit

'Determina el siguiente paso seg|fffd|n el Destino.
Private Sub Bot|fffd|n_ContinuarPASO1()
Attribute Bot|fffd|n_ContinuarPASO1.VB_ProcData.VB_Invoke_Func = " \n14"
    If Range("Destino") = 0 Then Exit Sub
    
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_ProgramasEspeciales
    
    Pantalla BkSU
End Sub

'Determina el siguiente paso seg|fffd|n la Instituci|fffd|n donde se cotiza.
Private Sub Bot|fffd|n_Continuar_PASO2()
Attribute Bot|fffd|n_Continuar_PASO2.VB_ProcData.VB_Invoke_Func = " \n14"
    If Range("Sel_Donde_Cotiza") = 0 Then Exit Sub
    
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_Instituci|fffd|nEspec|fffd|fica
    
    Pantalla BkSU
End Sub

'Contin|fffd|a al Paso 4.
Private Sub Bot|fffd|n_ContinuarPASO3()
    If Range("SelProgramaEspecial") = 0 Then Exit Sub
    
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_RangoVivienda
    
    Pantalla BkSU
End Sub

'Contin|fffd|a al Paso de los Productos.
Private Sub Bot|fffd|n_ContinuarPASO4()
    If Range("Rango_de_Vivienda") = 0 Then Exit Sub
    
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_Productos
    
    Pantalla BkSU
End Sub

'Se salta el paso 6 (tipo simulaci|fffd|n) en caso de que cotize en esquema especial.
Sub Bot|fffd|n_ContinuarPASO5()
    If Range("SelProducto") = 0 Then Exit Sub
    
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_TipoSimulaci|fffd|n
    
    Pantalla BkSU
End Sub

'Contin|fffd|a a la selecci|fffd|n de seguros.
Sub Bot|fffd|n_ContinuarPASO6()
    If Range("Tipo_simulaci|fffd|n") = 0 Then Exit Sub
    
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_Seguros
    
    Pantalla BkSU
End Sub

'Se ejecuta cuando se hace click en el bot|fffd|n "Continuar" en la hoja PasoSeguros.
Sub btContinuar_PasoSeguros()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    IrA_DatosDelCr|fffd|dito
    
    Pantalla BkSU
End Sub

'Calcula el valor del Cr|fffd|dito Tradicional v|fffd|a GoalSeek.
'Aplica para las simulaciones Por Pago o Por Ingreso.
'DONDE: Se dispara en el bot|fffd|n "Calcular" en la hoja 'PASO7 TRAD'
Private Sub Bot|fffd|n_Calcular()
    ProtegerHoja
    
    'Ejecuta el GoalSeek correspondiente. No es necesario limpiar antes. Se tarda m|fffd|s.
    Select Case Range("Tipo_simulaci|fffd|n")
        Case Range("Por_Pago_Mensual"):
            Range("C57").GoalSeek Goal:=Range("C34"), ChangingCell:=Range("C37")
        Case Range("Por_Ingreso_Mensual"):
            Range("D57").GoalSeek Goal:=Range("D34"), ChangingCell:=Range("D37")
    End Select
    
    If Range("Cr|fffd|dito_Tradicional_Definitivo") < Range("M|fffd|nimo_a_financiar_GoalSeek") Then
        Dim Mensaje As String
        Mensaje = "Con los datos proporcionados, el valor del cr|fffd|dito resultante es de " & FormatCurrency(Range("Cr|fffd|dito_Tradicional_Definitivo").Value, 2) & vbCrLf _
            & "El monto m|fffd|nimo a financiar es de " & FormatCurrency(Range("M|fffd|nimo_a_financiar_GoalSeek").Value, 2) & vbCrLf _
            & "Capture un monto mayor."
        MsgBox Mensaje, vbCritical + vbOKOnly, "M|fffd|nimo a Financiar"
    Else
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = False 'Adecuamos la visibilidad de los botones.
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = True
        Valida_Cr|fffd|dito 'En lugar de pedirle que haga click, nosotros mismos hacemos click.
    End If
End Sub

'Selecciona y configura la Tabla Cliente.
Private Sub Bot|fffd|n_Continuar_Cotizaci|fffd|n()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    Sheets("Tabla Cliente").Select
    ProtegerHoja
    MuestraLogoSegunEsquema

    Select Case Range("Nombre_Esquema_Especial")
        Case ""
            Range("A13:A23").EntireRow.Hidden = True
            Range("A24:A25").EntireRow.Hidden = False
        Case "Apoyo INFONAVIT"
            Range("A13:A23").EntireRow.Hidden = True
            Range("A24:A25").EntireRow.Hidden = False
        Case "Cofinavit"
            Range("A13:A23").EntireRow.Hidden = False
            'Range("A21").EntireRow.Hidden = True
            Range("A24:A25").EntireRow.Hidden = True
        Case "Cofinavit AG"
            Range("A13:A23").EntireRow.Hidden = False
            Range("A24:A25").EntireRow.Hidden = True
        Case "Alia2+"
            Range("A13:A23").EntireRow.Hidden = False
            Range("A21").EntireRow.Hidden = True
            Range("A24:A25").EntireRow.Hidden = True
        Case "Respalda2"
            Range("A13:A23").EntireRow.Hidden = False
            Range("A21").EntireRow.Hidden = True
            Range("A24:A25").EntireRow.Hidden = True
    End Select
    
    AjustaFilasPlazo
    Oculta_Columnas_Tabla_Cliente
    
    'Verifica una condici|fffd|n de la hoja de Aclaraciones, para determinar si se muestran los BPP
    If [Comportamiento_Tasa_Fuerte] Then
        Range("TablaCliente.BeneficiosPagoPuntual").EntireRow.Hidden = False
    Else
        Range("TablaCliente.BeneficiosPagoPuntual").EntireRow.Hidden = True
    End If
    
    
    Range("B30").Select
    Pantalla BkSU
End Sub

'Selecciona y configura la Tabla Notar|fffd|a.
Private Sub Bot|fffd|n_Tabla_Notar|fffd|a()
    Sheets("Tabla Notar|fffd|a").Select
    ProtegerHoja
    MuestraLogoSegunEsquema
    Range("B30").Select
    AjustaFilasPlazo
    ProtegerHoja
End Sub

'Selecciona y configura la Oferta Vinculante.
Private Sub Oferta_Vinculante()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
        Sheets("Oferta Vinculante").Select
        ProtegerHoja
        
        'Configuraci|fffd|n de la OV
        With Sheets("Oferta Vinculante")
            .Names("OV.CapturaNombreCliente").RefersToRange.MergeArea.Formula = "=Nombre_Cliente"
            If .Names("Captura_Completa?").RefersToRange Then
                .Names("OV.CapturaNombreCliente").RefersToRange.MergeArea.Locked = True
            Else
                .Names("OV.CapturaNombreCliente").RefersToRange.MergeArea.Locked = False
            End If
        
            'Escondemos todo
            .Names("RANGO_INCISOS_GRAVAMEN_SEPARADO").RefersToRange.EntireRow.Hidden = True
            .Names("RANGO_INCISO_COFINAVIT").RefersToRange.EntireRow.Hidden = True
            .Names("RANGO_INCISOS_APOYO").RefersToRange.EntireRow.Hidden = True
            
            'Mostramos lo que aplique
            If .Names("i.Gravamen_Cancela_Separado").RefersToRange Then _
                .Names("RANGO_INCISOS_GRAVAMEN_SEPARADO").RefersToRange.EntireRow.Hidden = False
            
            If .Names("_Programa_Cofinavit?").RefersToRange Then _
                .Names("RANGO_INCISO_COFINAVIT").RefersToRange.EntireRow.Hidden = False
            
            If .Names("_Programa_Apoyo_Infonavit?").RefersToRange Then _
                .Names("RANGO_INCISOS_APOYO").RefersToRange.EntireRow.Hidden = False
        End With
        
        'Preparaci|fffd|n de Impresi|fffd|n
        ConfiguraImpresi|fffd|nOfertaVinculante Sheets("Oferta Vinculante")
        
        Range("B6").MergeArea.FormulaHidden = True
        Range("D2").Select
    
    Pantalla BkSU
End Sub

'Datos -> Tasas
Sub DatosApoyo_btContinuar()
    IrA_Tasas
End Sub

'Datos -> Tasas
Sub DatosCofi_btContinuar()
    If Not Valida_Captura_Instituci|fffd|n Then Exit Sub
    
    IrA_Tasas
End Sub

'Datos -> Tasas
Sub DatosFovi_btContinuar()
    If Not Valida_Captura_Instituci|fffd|n Then Exit Sub
    
    IrA_Tasas
End Sub

'Datos -> Tasas
Sub DatosTrad_btContinuar()
    If Not Valida_Cr|fffd|dito Then Exit Sub
    
    IrA_Tasas
End Sub

'ValorDestructible -> Cotizaci|fffd|n
Sub ValorDestructible_btContinuar()
    IrA_Cotizaci|fffd|n
End Sub

'Revisa condiciones que se deben de cumplir, antes de ir a la Cotizaci|fffd|n.
'Si no se cumplen, informa y no se mueve a la Cotizaci|fffd|n.
'DE DONDE:
'Desde bot|fffd|n "Continuar" de la hoja 'PASO7 TRAD'
Function Valida_Cr|fffd|dito() As Boolean
    Dim Foul As Boolean
    ProtegerHoja
    
    '--------------------------------------------------
    'Regla: El C|fffd|lculo del Cr|fffd|dito Banorte no puede ser menor al Valor m|fffd|nimo del cr|fffd|dito.
    If Range("Cr|fffd|dito_Banorte") < Range("Valor_m|fffd|nimo_de_Cr|fffd|dito") Then
        MsgBox "El monto m|fffd|nimo a financiar es de " & FormatCurrency(Range("Valor_m|fffd|nimo_de_Cr|fffd|dito").Value, 2), vbCritical + vbOKOnly, "M|fffd|nimo a Financiar"
        Foul = True
    End If
    
    '--------------------------------------------------
    'Regla: Seg|fffd|n el Valor Aval|fffd|o, Los Recursos para adquirir la vivienda no pueden superar un porcentaje del Valor del Aval|fffd|o.
    If Range("Esquema_especial") = Range("Cofinavit") Or Range("Esquema_especial") = Range("Cofinavit_AG") Then
        Dim MontoAComparar
        If Range("Valor_aval|fffd|o") <= Range("UmbralRecursosExcedidosCofi") Then
            MontoAComparar = Range("Valor_aval|fffd|o_con_incremento_directo")
        Else
            MontoAComparar = Range("Valor_aval|fffd|o")
        End If
        If Range("Recursos_para_adquirir_la_vivienda") > MontoAComparar Then
            MsgBox Range("LeyendaRecursosExcedidosCofinavit"), vbCritical + vbOKOnly, "Recursos para adquirir la vivienda excedidos."
            Foul = True
        End If
    End If
    
    If Range("Esquema_especial") = Range("Alia2_") Or Range("Esquema_especial") = Range("Respalda2") Then
        If Range("Recursos_para_adquirir_la_vivienda") > Range("VAA") Then
            MsgBox Range("LeyendaRecursosExcedidosCofinavit"), vbCritical + vbOKOnly, "Recursos para adquirir la vivienda excedidos."
            Foul = True
        End If
    End If
    '--------------------------------------------------

    Valida_Cr|fffd|dito = Not Foul
End Function

'Valida las captura de Titular y C|fffd|nyuge en Cofinavit y FOVISSSTE
'Se manda a llamar desde los botones "Cotizaci|fffd|n" de las hojas 'PASO6 COFINAVIT' y 'PASO6 FOVISSSTE'
Function Valida_Captura_Instituci|fffd|n() As Boolean
    Dim Foul As Boolean
    ProtegerHoja
    
    If Not CapturaInstituci|fffd|nSegunEsquemaEsCorrecta Then Foul = True
    
    If Range("CPI") < Range("CD") Then _
        If MsgBox("El Ingreso capturado no es suficiente para cubrir el Monto M|fffd|nimo de Cr|fffd|dito." & vbCrLf _
        & "|fffd|Desea continuar?", vbQuestion + vbYesNo + vbDefaultButton1, "Simulador") _
        = vbNo Then Foul = True
        
    Valida_Captura_Instituci|fffd|n = Not Foul
End Function

'Tasas -> ValorDestructible
Sub Tasas_btContinuar()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    CalculaAhorroBPP
    
    IrA_ValorDestructible
    
    Pantalla BkSU
End Sub
Attribute VB_Name = "Navegaci|fffd|n_Ayudantes"

'|\ | _    _  _  _  _. _  _    /\       _| _  _ _|_ _ _
'| \|(_|\/(/_(_|(_|(_|(_)| |__/~~\\/|_|(_|(_|| | | (/__\
'             _|                  /

'Macros que NO se llaman directamente de los botones, pero que se usan dentro de esas (Y que no son las de 'Limpieza').

Option Explicit

Sub RegresarA_Destinos()
    Sheets("Paso1").Select
End Sub

Sub IrA_ProgramasEspeciales()
    If Not Aplica_ProgramasEspeciales() Then
        IrA_RangoVivienda
        
    Else
        Limpiar_Paso2
            
        Dim Visible As Boolean
        
        'Fovissste aplica s|fffd|lo en Banorte, y si no es CVTO, T+C, Mejora o Construcci|fffd|n.
        If CA_Servicios.Marca() = "BANORTE" _
            And Not Range("Destino") = Range("CVTO") _
            And Not Range("Destino") = Range("Terreno_M|fffd|s_Construcci|fffd|n") _
            And Not Range("Destino") = Range("Mejora") _
            And Not Range("Destino") = Range("Construcci|fffd|n") Then Visible = True
        
        AjustarVis Visible, "Opci|fffd|nFovissste", "FOVISSSTE"
    End If
End Sub

Sub RegresarA_ProgramasEspeciales()
    If Not Aplica_ProgramasEspeciales() Then
        RegresarA_Destinos
    
    Else
        Sheets("Paso2").Select
    End If
End Sub

Sub IrA_Instituci|fffd|nEspec|fffd|fica()
    If Not Aplica_Instituci|fffd|nEspec|fffd|fica() Then
        IrA_RangoVivienda
    
    Else
        Select Case Range("Cotiza_en")
            Case Range("INFONAVIT"):
                IrA_Infonavit
            
            Case Range("FOVISSSTE"):
                IrA_Fovissste
        End Select
    End If
End Sub

Sub RegresarA_Instituci|fffd|nEspec|fffd|fica()
    If Not Aplica_Instituci|fffd|nEspec|fffd|fica() Then
        RegresarA_ProgramasEspeciales
        
    Else
        Select Case Range("Cotiza_en")
            Case Range("INFONAVIT"):
                IrA_Infonavit
            
            Case Range("FOVISSSTE"):
                IrA_Fovissste
        End Select
    End If
End Sub

Sub IrA_Infonavit()
    Limpiar_Paso3
        
    Dim Visible As Boolean
    
    'Cofinavit
    If Range("Destino") <> Range("CVTO") _
        And Range("Destino") <> Range("Terreno_M|fffd|s_Construcci|fffd|n") _
        And Not Range("Destino") = Range("Mejora") _
        And Not Range("Destino") = Range("Construcci|fffd|n") Then Visible = True
    
    AjustarVis Visible, "Opci|fffd|nCofinavit", "Cofinavit"
    
    'Si se esconde Cofinavit, entonces s|fffd|lo queda Apoyo, por lo que se selecciona por default:
    If Not Visible Then ActiveSheet.OptionButtons("Opci|fffd|nApoyo").Value = 1
End Sub

Sub IrA_Fovissste()
    Limpiar_Paso3a
End Sub

Sub IrA_RangoVivienda()
    '==========================================================================================
    'NOTA: Este ajuste siguiente, ya no debe de aplicar, ya que quitamos la posibilidad de mover la selecci|fffd|n cuando eliminamos los Option Buttons del Paso 4
    'Entonces, si Range("Rango_de_Vivienda") nunca se mueve en otro lado, se puede eliminar.
    '------------------------------------------------------------------------------------------
    'Ajuste para T+C:
    'If Range("Destino") = Range("Terreno_M|fffd|s_Construcci|fffd|n") Then Range("Rango_de_Vivienda") = Range("RangoViv_Premium")
    'Explicaci|fffd|n:
    'T+C Ignora Rangos de Vivienda, PERO Soporta Productos. Es el |fffd|nico destino que lo hace.
    'Liquidez, Terreno y Subroga ignoran rangos, pero NO soportan productos.
    'Las f|fffd|rmulas de b|fffd|squeda de los CATs fijos del Comparativo en la Cotizaci|fffd|n, asumen que
    'si el Destino Soporta Productos, hay Rango de Vivienda.
    'Haremos como si se hace click en el Rango Premium, para que m|fffd|s adelante las f|fffd|rmulas funcionen.
    'Nota: el [C|fffd|digo_Rango_de_Vivienda] no se afecta: sigue siendo "00"
    '------------------------------------------------------------------------------------------
    
    IrA_Productos
End Sub

Sub RegresarA_RangoVivienda()
    RegresarA_Instituci|fffd|nEspec|fffd|fica
End Sub

Sub IrA_Productos()
    If Not Aplica_Productos() Then
        IrA_TipoSimulaci|fffd|n
        
    Else
        Limpiar_Paso5
        MuestraLogoSegunEsquema
    End If
End Sub

Sub RegresarA_Productos()
    If Not Aplica_Productos() Then
        RegresarA_RangoVivienda
        
    Else
        Sheets("Paso5").Select
    End If
End Sub

Sub IrA_TipoSimulaci|fffd|n()
    If Not Aplica_TipoSimulaci|fffd|n() Then
        IrA_Seguros
        
    Else
        Limpiar_Paso6
        
        'Para que no haya referencias circulares temporales en lo que se establecen las f|fffd|rmulas correctas en PrepararPasoTrad()
        Range("Cr|fffd|dito_Tradicional") = 0
        Range("Valor_Vivienda_Tradicional") = 0
    End If
End Sub

Sub RegresarA_TipoSimulaci|fffd|n()
    If Not Aplica_TipoSimulaci|fffd|n() Then
        RegresarA_Productos
    
    Else
        Sheets("Paso6").Select
        
        'Para que no haya referencias circulares temporales en lo que se establecen las f|fffd|rmulas correctas en PrepararPasoTrad()
        Range("Cr|fffd|dito_Tradicional") = 0
        Range("Valor_Vivienda_Tradicional") = 0
    End If
End Sub

Sub IrA_Seguros()
    Sheets("PasoSeguros").Select
    Activar_Seguros
End Sub

Sub RegresarA_Seguros()
    Sheets("PasoSeguros").Select
End Sub

Sub IrA_DatosDelCr|fffd|dito()
    Select Case Range("Nombre_Esquema_Especial")
        Case "":
            PrepararPasoTrad
        
        Case "Apoyo INFONAVIT":
            PrepararPasoApoyo
        
        Case "Cofinavit", "Cofinavit AG":
            PrepararPasoCofinavit
            Mensaje_Cofinavit
        
        Case "Alia2+", "Respalda2":
            PrepararPasoFovissste
    End Select
End Sub

Sub RegresarA_Datos()
    Select Case Range("Nombre_Esquema_Especial")
    Case ""
        Sheets("PASO7 TRAD").Select
        Ocultar_Botones
    Case "Apoyo INFONAVIT"
        Sheets("PASO6 APOYO").Select
    Case "Cofinavit", "Cofinavit AG"
        Sheets("PASO6 COFINAVIT").Select
    Case "Alia2+", "Respalda2"
        Sheets("PASO6 FOVISSSTE").Select
    End Select
End Sub

'Datos -> Tasas -> ValorDestructible
Sub IrA_Tasas()
    If Not Aplica_ProductoMultiTasa() Then
        IrA_ValorDestructible
    Else
        Pantalla False
        Sheets("PasoTasas").Select
        PasoTasas_CalcularBeneficios
        Range("Sel_Tasa") = 4 'Din|fffd|mica
        Pantalla True
    End If
End Sub

'Datos <- Tasas
Sub RegresarA_Tasas()
    If Not Aplica_ProductoMultiTasa() Then
        RegresarA_Datos
    Else
        Sheets("PasoTasas").Select
    End If
End Sub

'Valor Destructible -> Cotizaci|fffd|n
Sub IrA_ValorDestructible()
    If Not [Variante.Valor_Destructible] Then
        IrA_Cotizaci|fffd|n
    Else
        Sheets("PasoValorDestructible").Select
        Range("Monto_para_seguro_da|fffd|os").Select
    End If
End Sub

'Tasas <- Valor Destructible
Sub RegresarA_ValorDestructible()
    If Not [Variante.Valor_Destructible] Then
        RegresarA_Tasas
    Else
        Sheets("PasoValorDestructible").Select
        Range("Monto_para_seguro_da|fffd|os").Select
    End If
End Sub

'Configura y selecciona la Cotizaci|fffd|n seg|fffd|n el Esquema.
Sub IrA_Cotizaci|fffd|n()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    '----------------------------------------------------------------------------------------------------
    'Reseteo Inicial: Limpia y deja todas las celdas listas para configurarse.
    Sheets("Cotizaci|fffd|n").Select: ProtegerHoja
    MuestraLogoSegunEsquema
    Range("Cotizaci|fffd|n.Filas_Variables").EntireRow.Hidden = False
    Range("Captura_Aportaci|fffd|n_Adicional").Formula = 0
    
    '----------------------------------------------------------------------------------------------------
    'Ajusta las filas a ocultar seg|fffd|n las condiciones
    Configura_Cotizaci|fffd|n
    
    '----------------------------------------------------------------------------------------------------
    'Visibilidad de las tablas de informaci|fffd|n de cr|fffd|dito Y de las notas de los CATs comparativos.
    Dim ComparativoVisible As Boolean
    If Range("Destino_Comparativo_Cotizaci|fffd|n?") Then ComparativoVisible = True
    
    Range("Tabla_Cr|fffd|dito_Sin_Comparativo").EntireRow.Hidden = ComparativoVisible
    Range("Tabla_Cr|fffd|dito_Con_Comparativo").EntireRow.Hidden = Not ComparativoVisible
        
    Range("Cotizaci|fffd|n_CATs_Comparativos").EntireRow.Hidden = Not ComparativoVisible
    
    '----------------------------------------------------------------------------------------------------
    'Termina seleccionando la captura del nombre del cliente.
    Range("Nombre_Cliente").Select
    Pantalla BkSU
    
    '----------------------------------------------------------------------------------------------------
    'Leyenda de Cofinavit
    If Range("Nombre_Esquema_Especial") = "Cofinavit" Then
        Mensaje_Cotizaci|fffd|n_Cofinavit
        Range("Captura_Aportaci|fffd|n_Adicional").Select
    End If
End Sub

'Configura la visibilidad de los botones 'Continuar' y 'Calcular' en el 'PASO7 TRAD' seg|fffd|n el Tipo Simulaci|fffd|n.
'"Bot|fffd|n_117" = Calcular
'"Bot|fffd|n_118" = Cotizaci|fffd|n
Sub Ocultar_Botones()
    Dim Tipo_simulaci|fffd|n As Integer
    Tipo_simulaci|fffd|n = Range("A1")
    Dim Por_aval|fffd|o As Integer
    Por_aval|fffd|o = 1
    Dim Por_cr|fffd|dito As Integer
    Por_cr|fffd|dito = 2
    Dim Por_pago As Integer
    Por_pago = 3
    Dim Por_ingreso As Integer
    Por_ingreso = 4

    If Tipo_simulaci|fffd|n = Por_aval|fffd|o Then
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = False
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = True
    End If

    If Tipo_simulaci|fffd|n = Por_cr|fffd|dito Then
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = False
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = True
    End If

    If Tipo_simulaci|fffd|n = Por_pago Then
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = True
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = False
    End If

    If Tipo_simulaci|fffd|n = Por_ingreso Then
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = True
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = False
    End If
End Sub

Sub Mostrar_Secci|fffd|n_Cotizaci|fffd|n(Apartado As String, Secci|fffd|n As String)

' ""Constantes""
Dim HEADER As String: HEADER = "Encabezado"

'----------------------------------------------------------------------------------------------------
'Determinar el Rango para la b|fffd|squeda.
Dim obRB As Range
Set obRB = Intersect( _
                Range("Cotizaci|fffd|n.Filas_Variables").EntireRow, _
                Union( _
                    Range("_Apartado"), _
                    Range("_Secci|fffd|n") _
                    ) _
                )

'----------------------------------------------------------------------------------------------------
'Recorrer
Dim Fila As Range, |fffd|xito As Boolean
For Each Fila In obRB.Rows
    If Fila.Cells(1) = Apartado And Fila.Cells(2) = Secci|fffd|n Then
        |fffd|xito = True
        Fila.EntireRow.Hidden = False 'Propuesta: En lugar de ir mostrando fila por fila, armar un rango y afectarlo todo de una sola vez.
    End If
Next

'----------------------------------------------------------------------------------------------------
'Mostrar Encabezado
If |fffd|xito And Secci|fffd|n <> HEADER Then Mostrar_Secci|fffd|n_Cotizaci|fffd|n Apartado, HEADER

End Sub

Sub Configura_Cotizaci|fffd|n()
    Dim Fila As Range, Aplica As Boolean
    Dim Apartado As String, Secci|fffd|n As String
    
    'Primero escondemos todas las filas.
    Range("Cotizaci|fffd|n.Filas_Variables").EntireRow.Hidden = True
    
    'Luego iteramos la tabla de secciones para ver cuales aplica mostrar.
    For Each Fila In Range("_Tabla_Secciones_Visibles").Rows
        Apartado = Fila.Cells(1)    'Obtenemos los datos de la fila
        Secci|fffd|n = Fila.Cells(2)     '...
        Aplica = False: If Application.IsLogical(Fila.Cells(4)) Then Aplica = Fila.Cells(4) 'Sanitizamos la celda
        If Aplica Then Mostrar_Secci|fffd|n_Cotizaci|fffd|n Apartado, Secci|fffd|n 'Y si aplica, mostramos la secci|fffd|n.
    Next
End Sub

Sub Cotizaci|fffd|n_Mostrar_Todo()
    Range("Cotizaci|fffd|n.Filas_Variables").EntireRow.Hidden = False
End Sub

'====================================================================================================
'CONDICIONES DE APLICACI|fffd|N DE LOS PASOS
'
'Se ocupan para la navegaci|fffd|n hacia adelante y hacia atr|fffd|s
'----------------------------------------------------------------------------------------------------

Function Aplica_ProgramasEspeciales() As Boolean
    Aplica_ProgramasEspeciales = [Destino_Soporta_Programas_Especiales?]
End Function

Function Aplica_Instituci|fffd|nEspec|fffd|fica() As Boolean
    Aplica_Instituci|fffd|nEspec|fffd|fica = [Cotiza_en] <> [Ninguno]
End Function

Function Aplica_Productos() As Boolean
    Aplica_Productos = [Destino.Aplican_Productos?]
End Function

Function Aplica_TipoSimulaci|fffd|n() As Boolean
    Aplica_TipoSimulaci|fffd|n = [Nombre_Esquema_Especial] = ""
End Function

Function Aplica_ProductoMultiTasa() As Boolean
    Aplica_ProductoMultiTasa = [Producto.Multitasa?_VBA] = True
End Function

Sub PasoTasas_CalcularBeneficios()
    [Sel_Tasa] = 1
    Intersect([PasoTasas.Fil.PagoMensualPromedio], [PasoTasas.Col.TasaPlus]) = [PasoTasas.Helper!o.PagoMensualPromedio]
    Intersect([PasoTasas.Fil.TasaInter|fffd|sPromedio], [PasoTasas.Col.TasaPlus]) = [PasoTasas.Helper!o.TasaInter|fffd|sPromedio]
    
    [Sel_Tasa] = 2
    Intersect([PasoTasas.Fil.PagoMensualPromedio], [PasoTasas.Col.Tasa|fffd|ptima]) = [PasoTasas.Helper!o.PagoMensualPromedio]
    Intersect([PasoTasas.Fil.TasaInter|fffd|sPromedio], [PasoTasas.Col.Tasa|fffd|ptima]) = [PasoTasas.Helper!o.TasaInter|fffd|sPromedio]
    
    [Sel_Tasa] = 3
    Intersect([PasoTasas.Fil.PagoMensualPromedio], [PasoTasas.Col.TasaFlexible]) = [PasoTasas.Helper!o.PagoMensualPromedio]
    Intersect([PasoTasas.Fil.TasaInter|fffd|sPromedio], [PasoTasas.Col.TasaFlexible]) = [PasoTasas.Helper!o.TasaInter|fffd|sPromedio]
    CalculaAhorroBPP
    Intersect([PasoTasas.Fil.Ahorro], [PasoTasas.Col.TasaFlexible]) = [PasoTasas.Helper!o.Ahorro]
    
    [Sel_Tasa] = 4
    Intersect([PasoTasas.Fil.PagoMensualPromedio], [PasoTasas.Col.TasaDin|fffd|mica]) = [PasoTasas.Helper!o.PagoMensualPromedio]
    Intersect([PasoTasas.Fil.TasaInter|fffd|sPromedio], [PasoTasas.Col.TasaDin|fffd|mica]) = [PasoTasas.Helper!o.TasaInter|fffd|sPromedio]
    CalculaAhorroBPP
    Intersect([PasoTasas.Fil.Ahorro], [PasoTasas.Col.TasaDin|fffd|mica]) = [PasoTasas.Helper!o.Ahorro]
End Sub

Sub CalculaAhorroBPP()
    Dim bkMesDctoTasa As String
    bkMesDctoTasa = Range("mes_descto_en_tasa").Formula
    Range("mes_descto_en_tasa").Formula = 10000
    
    Range("PasoTasas.Helper!o.PagoMensualPromedio").Offset(2, 0).CurrentRegion.Copy
    Range("PasoTasas.Helper!o.Ahorro").Offset(2, -1).PasteSpecial xlPasteValues
    Application.CutCopyMode = False
    
    Range("mes_descto_en_tasa").Formula = bkMesDctoTasa
End Sub
Attribute VB_Name = "Navegaci|fffd|n_Datos_Cr|fffd|dito"

'|\ | _    _  _  _  _. _  _   |~\ _ _|_ _  _  /~` _ _  _|._|_ _
'| \|(_|\/(/_(_|(_|(_|(_)| |__|_/(_| | (_)_\__\_,| (/_(_|| | (_)
'             _|

'Macros que seleccionan y preparan los pasos de captura de los Datos del Cr|fffd|dito.
'(Despu|fffd|s de pasar por todos los pasos de selecci|fffd|n)

Option Explicit

'Selecciona y prepara el paso 7 Trad.
'Seg|fffd|n el tipo de simulaci|fffd|n, y el destino, muestra/oculta filas y campos de captura.
'Tambi|fffd|n asigna f|fffd|rmulas a las capturas.
Sub PrepararPasoTrad()
    Sheets("PASO7 TRAD").Select
    ProtegerHoja
    
    '========== Reseteo inicial ======================================================================
    
    'Limpia de capturas, bloquea las celdas y esconde las f|fffd|rmulas.
    Dim RangosCapturas() As String: ReDim RangosCapturas(3)
    RangosCapturas(0) = "F9"    'Aval|fffd|o
    RangosCapturas(1) = "F10"   'Cr|fffd|dito
    RangosCapturas(2) = "F11"   'Pago
    RangosCapturas(3) = "F12"   'Ingreso
    
    Dim Celda: For Each Celda In RangosCapturas
        Range(Celda).MergeArea.Formula = 0
        Range(Celda).MergeArea.Locked = True
        Range(Celda).MergeArea.FormulaHidden = True
        'If Not CA_Servicios.ModoDeMantenimiento() Then
        Range(Celda).EntireRow.Hidden = True
    Next
    
    Range("H1").EntireColumn.Hidden = False
    
    '========== Cambios concernientes al Destino ======================================================
    PrepararDestino
    
    Select Case Range("Tipo_simulaci|fffd|n")
    'SIMULACI|fffd|N POR AVAL|fffd|O
    '====================================================================================================
    Case Range("Por_aval|fffd|o"):
        'Muestra los campos de captura correspondientes.
        Range("A9:A10").EntireRow.Hidden = False 'Muestra captura de Aval|fffd|o y Cr|fffd|dito Banorte
        
        Range("F9").MergeArea.Locked = False 'Queda capturable.
        Range("F10").MergeArea.Locked = False 'Queda capturable.
        
        'Configura las f|fffd|rmulas tipo 'Por Aval|fffd|o'
        Range("F9").MergeArea.Value = Range("Valor_m|fffd|nimo_Vivienda")
        Range("F10").MergeArea.Formula = Range("F|fffd|rmula_De_Cr|fffd|dito_Tradicional_Por_Aval|fffd|o").Text
        
        'Configura las f|fffd|rmulas tipo 'Por Cr|fffd|dito'
        'Range("F9").MergeArea.Formula = Range("F|fffd|rmula_de_Aval|fffd|o_Tradicional_por_Cr|fffd|dito").Text ' "=MAX( Cr|fffd|dito_Tradicional / Aforo_M|fffd|ximo_A_Usar_Tradicional, Valor_m|fffd|nimo_Vivienda )"
        'Range("F10").MergeArea.Value = Range("Valor_m|fffd|nimo_de_Cr|fffd|dito")
        
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = False 'Esconde el bot|fffd|n "Calcular"
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = True 'Muestra el bot|fffd|n "Cotizaci|fffd|n"
        
        Range("F9").Select 'Selecciona la captura.
    
    'SIMULACI|fffd|N POR CR|fffd|DITO
    '====================================================================================================
    Case Range("Por_cr|fffd|dito"):
        'Muestra los campos de captura correspondientes.
        Range("A9:A10").EntireRow.Hidden = False 'Muestra captura de Aval|fffd|o y Cr|fffd|dito Banorte
        
        'Configura las f|fffd|rmulas
        Range("F9").MergeArea.Formula = Range("F|fffd|rmula_de_Aval|fffd|o_Tradicional_por_Cr|fffd|dito").Text ' "=MAX( Cr|fffd|dito_Tradicional / Aforo_M|fffd|ximo_A_Usar_Tradicional, Valor_m|fffd|nimo_Vivienda )"
        Range("F9").MergeArea.Locked = False
        
        Range("F10").MergeArea.Value = Range("Valor_m|fffd|nimo_de_Cr|fffd|dito")
        Range("F10").MergeArea.Locked = False
                
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = False 'Esconde el bot|fffd|n "Calcular"
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = True 'Muestra el bot|fffd|n "Cotizaci|fffd|n"
        
        Range("F10").Select 'Selecciona la captura.
    
    'SIMULACI|fffd|N POR PAGO MENSUAL
    '====================================================================================================
    Case Range("Por_Pago_Mensual"):
    
        'Muestra el campo de captura correspondiente.
        Range("F11").EntireRow.Hidden = False
    
        'Configura las f|fffd|rmulas
        Range("F11").MergeArea.Formula = "=Pago_M|fffd|nimo"
        Range("F11").MergeArea.Locked = False
        
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = True  'Muestra bot|fffd|n "Calcular"
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = False 'Esconde bot|fffd|n "Cotizaci|fffd|n"
        
        Range("F11").Select 'Selecciona la captura.
        
        'Mensaje_Tipo_Simulaci|fffd|n
    
    'SIMULACI|fffd|N POR INGRESO MENSUAL
    '====================================================================================================
    Case Range("Por_Ingreso_Mensual"):
        
        'Muestra el campo de captura correspondiente.
        Range("F12").EntireRow.Hidden = False
        
        'Configura las f|fffd|rmulas
        Range("F12").MergeArea.Formula = "=Ingreso_M|fffd|nimo"
        Range("F12").MergeArea.Locked = False
        
        ActiveSheet.Shapes("Bot|fffd|n_117").Visible = True
        ActiveSheet.Shapes("Bot|fffd|n_118").Visible = False
        
        Range("F12").Select 'Selecciona la captura.
        
        'Mensaje_Tipo_Simulaci|fffd|n
    End Select
End Sub

'Selecciona y "limpia" el Paso Apoyo Infonavit.
Sub PrepararPasoApoyo()
    Sheets("PASO6 APOYO").Select
    ProtegerHoja
    ResetearCapturaApoyo
    
    '========== Cambios concernientes al Destino ======================================================
    PrepararDestino
    
    With Range("Ingreso_Apoyo").MergeArea.Validation
        .ErrorMessage = CStr(Range("M|fffd|nimo_Ingreso_Mensual_Bruto_Leyenda"))
        .InputMessage = CStr(Range("M|fffd|nimo_Ingreso_Mensual_Bruto_Leyenda"))
    End With
End Sub

'Restaura las f|fffd|rmulas en las celdas de captura de Apoyo Infonavit.
'Asume que est|fffd| en la hoja de Apoyo.
Sub ResetearCapturaApoyo()
    With Range("F9")
        .Select
        .Formula = "=Ingreso_M|fffd|nimo"
    End With
    Range("F10").Formula = "=Valor_m|fffd|nimo_Vivienda"
    Range("F11").Formula = "=Valor_vivienda_Apoyo*Aforo_M|fffd|ximo_A_Usar_Apoyo"
End Sub

'Selecciona y "limpia" el Paso Cofinavit en sus dos modalidades.
Sub PrepararPasoCofinavit()
    Sheets("PASO6 COFINAVIT").Select
    ProtegerHoja
    MuestraLogoSegunEsquema
    
    Range("F9").Formula = "=Valor_m|fffd|nimo_Vivienda"
    Range("F9").MergeArea.Locked = False
    
    Range("E22").Formula = "=Ingreso_M|fffd|nimo"
    Range("E22").MergeArea.Locked = False
    
    Range("E23").Formula = 0
    Range("E23").MergeArea.Locked = False
    
    Range("G23").Formula = 0
    Range("G23").MergeArea.Locked = False
    
    Range("E24").Formula = 0
    Range("E24").MergeArea.Locked = False
    
    Range("G24").Formula = 0
    Range("G24").MergeArea.Locked = False
    
    Range("E25").Formula = 0
    Range("E25").MergeArea.Locked = False
    
    Range("G25").Formula = 0
    Range("G25").MergeArea.Locked = False
    
    Range("E26").Formula = 0
    Range("E26").MergeArea.Locked = False
    
    Range("G26").Formula = 1
    Range("G26").MergeArea.Locked = False
    
    Range("E27").Formula = "=Descuento_ecotecnolog|fffd|as"
    Range("E27").MergeArea.Locked = False
    
    On Error Resume Next
    With Range("Ingreso_Titular_Cofinavit").MergeArea.Validation
        .ErrorMessage = Range("M|fffd|nimo_Ingreso_Mensual_Bruto_Leyenda")
        .InputMessage = Range("M|fffd|nimo_Ingreso_Mensual_Bruto_Leyenda")
    End With
    
    Range("Cr|fffd|dito_Titular_Cofinavit").MergeArea.Validation.ErrorMessage = Range("M|fffd|ximo_Cr|fffd|dito_Infonavit_Titular_Leyenda")
    Range("Cr|fffd|dito_C|fffd|nyuge_Cofinavit").MergeArea.Validation.ErrorMessage = Range("M|fffd|ximo_Cr|fffd|dito_Infonavit_C|fffd|nyuge_Leyenda")
    
    Range("Captura_Descuento_ecotecnolog|fffd|as").MergeArea.Validation.ErrorMessage = Range("Leyenda_Descuentos_Ecotecnolog|fffd|as")
        
    If Range("Esquema_especial") = Range("Cofinavit") Then
        Range("A26").EntireRow.Hidden = True
        
    ElseIf Range("Esquema_especial") = Range("Cofinavit_AG") Then
        Range("A26").EntireRow.Hidden = False
        
    End If
    
    Range("Valor_vivienda_Cofinavit").Select
End Sub

'Selecciona y "limpia" el Paso Fovissste en sus dos modalidades.
Sub PrepararPasoFovissste()
    Sheets("PASO6 FOVISSSTE").Select
    ProtegerHoja
    MuestraLogoSegunEsquema
    
    Range("F9").Formula = "=Valor_m|fffd|nimo_Vivienda"
    Range("E22").Formula = "=Ingreso_M|fffd|nimo"
    Range("G22").Formula = 0
    Range("E23").Formula = 0
    Range("G23").Formula = 0
    Range("E24").Formula = 0
    Range("G24").Formula = 0
    Range("E25").Formula = 0
    Range("G25").Formula = 0
    
    Range("F9").MergeArea.Locked = False
    Range("E22").MergeArea.Locked = False
    Range("G22").MergeArea.Locked = False
    Range("E24").MergeArea.Locked = False
    Range("G24").MergeArea.Locked = False
    
    With Range("Ingreso_Titular_Fovissste").MergeArea.Validation
        .ErrorMessage = Range("M|fffd|nimo_Ingreso_Mensual_Bruto_Leyenda")
        .InputMessage = Range("M|fffd|nimo_Ingreso_Mensual_Bruto_Leyenda")
    End With
    
    If Range("Esquema_especial") = Range("Alia2_") Then
        
        Range("E23").MergeArea.Locked = False
        Range("G23").MergeArea.Locked = False
        Range("E25").MergeArea.Locked = False
        Range("G25").MergeArea.Locked = False
        
        Range("A23:A25").EntireRow.Hidden = False
        
        Range("Capacidad_Cr|fffd|dito_Titular_Fovissste").MergeArea.Validation.ErrorMessage = Range("M|fffd|ximo_Cr|fffd|dito_Fovissste_Leyenda")
        Range("Capacidad_Cr|fffd|dito_C|fffd|nyuge_Fovissste").MergeArea.Validation.ErrorMessage = Range("M|fffd|ximo_Cr|fffd|dito_Fovissste_Leyenda")
        
    ElseIf Range("Esquema_especial") = Range("Respalda2") Then
        
        Range("E23").MergeArea.Locked = True
        Range("G23").MergeArea.Locked = True
        Range("E25").MergeArea.Locked = True
        Range("G25").MergeArea.Locked = True
        
        Range("A24:A25").EntireRow.Hidden = False
        Range("A23,A25").EntireRow.Hidden = True
    End If
    
    Range("Valor_vivienda_Fovissste").Select
End Sub

'Configura la visibilidad de los Combos que dependen del destino.
'Se utiliza en el paso PrepararPasoTrad() y PrepararPasoApoyo()
Private Sub PrepararDestino()
    
    'Primeramente se muestra todo.
    AjustarVis True, "Comisi|fffd|nApertura"
    AjustarVis True, "DestinoAnteriorCausaIVA"
    AjustarVis True, "DestinoAnteriorEsTerreno"
    AjustarVis True, "DesembolsoInicial"
    
    'Despues se determina qu|fffd| esconder.
    Dim Visible As Boolean
    
    'Si el porcentaje de comisi|fffd|n por apertura es cero (No aplica) entonces escondemos el combo.
    Visible = True
    On Error Resume Next 'Por si no hay selecci|fffd|n en el layout y es #N/A
    If Range("Porcentaje_Comisi|fffd|n_Apertura") = 0 Then Visible = False 'Solo en subrogaci|fffd|n no aplica.
    On Error GoTo 0
    AjustarVis Visible, "Comisi|fffd|nApertura"
    
    Visible = False
    'Ajuste de la Captura Destino Anterior Causa IVA:
    Range("Sel_IVA_en_Destino_Anterior").Formula = 1                'Reset.
    If Range("Destino_con_IVA_condicional?") Then Visible = True    'Determinar la Visibilidad.
    AjustarVis Visible, "DestinoAnteriorCausaIVA"                   'Aplicar Visibilidad.
    
    Visible = False
    'Ajuste de la Captura Desembolso Inicial
    Range("Sel_Desembolso_Inicial").Formula = 1                     'Reset.
    On Error Resume Next
    If Range("Destino.Financ|fffd|a_Gastos_Iniciales?") And _
       Range("L.Porcentaje_Financiar_Gastos_Iniciales") > 0 Then _
            Visible = True                                          'Determinar la Visibilidad.
    On Error GoTo 0
    AjustarVis Visible, "DesembolsoInicial"                         'Aplicar Visibilidad.
    
    Visible = False
    Range("Sel_Destino_Anterior_Es_Terreno").Formula = 1
    If Range("Destino.Importa_Destino_Anterior?") Then Visible = True
    AjustarVis Visible, "DestinoAnteriorEsTerreno"
End Sub
Attribute VB_Name = "Navegaci|fffd|n_Limpieza"

'|\ | _    _  _  _  _. _  _   | . _ _  _ . _ _ _
'| \|(_|\/(/_(_|(_|(_|(_)| |__|_|| | ||_)|(/_/_(_|
'             _|                      |

'Macros que seleccionan y preparan (limpian) los pasos.

Option Explicit

'Selecciona y Limpia el Paso1.
Sub Limpiar_Paso1()
Attribute Limpiar_Paso1.VB_ProcData.VB_Invoke_Func = " \n14"
    Sheets("PASO1").Select
    ProtegerHoja
    
    Range("Destino") = 0 'Deseleccionamos todas las opciones.
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Limpia el Paso2.
Sub Limpiar_Paso2()
    Sheets("PASO2").Select
    ProtegerHoja
    
    Range("Sel_Donde_Cotiza") = 0 'Deseleccionamos todas las opciones.
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Limpia el Paso3
Sub Limpiar_Paso3()
    Sheets("PASO3").Select
    ProtegerHoja
    
    Range("'Esquema Especial'!A1") = 0 'Deseleccionamos todas las opciones.
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Limpia el Paso3
Sub Limpiar_Paso3a()
    Sheets("PASO3a").Select
    ProtegerHoja
    
    Range("'Esquema Especial'!A1") = 0 'Deseleccionamos todas las opciones.
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Limpia el Paso4
Sub Limpiar_Paso4()
    'Sheets("PASO4").Select
    'ProtegerHoja
    
    'Range("Rango_de_Vivienda") = 0 'Deseleccionamos todas las opciones.
    
    'ActiveSheet.EnableSelection = xlUnlockedCells
    'Range("M1").Select
End Sub

'Selecciona y Limpia el Paso5
Sub Limpiar_Paso5()
    Sheets("PASO5").Select
    ProtegerHoja
    
    Range("SelProducto") = 0 'Deseleccionamos todas las opciones.
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Limpia el Paso5a
Sub Limpiar_Paso5a()
'    Sheets("PASO5a").Select
'    ProtegerHoja
'
'    Range("Productos!A1") = 0 'Deseleccionamos todas las opciones.
'
'    ActiveSheet.EnableSelection = xlUnlockedCells
'    Range("M1").Select
End Sub

'Selecciona y Limpia el Paso6
Sub Limpiar_Paso6()
    Sheets("PASO6").Select
    ProtegerHoja
    
    Range("Tipo_simulaci|fffd|n") = 0 'Deseleccionamos todas las opciones.
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Limpia el PasoSeguros
Sub Limpiar_PasoSeguros()
    Sheets("PasoSeguros").Select
    ProtegerHoja
    
    Range("RG_TipoSeguroBanorte") = Range("Amplio"): cbTipoSeguroBanorte_Change '[SelSegurosBanorte] = [Si]: cbSegurosBanorte_Change 'Esto era antes del nuevo combo TipoSeguroBanorte Amplio/B|fffd|sico
    
    ActiveSheet.EnableSelection = xlUnlockedCells
    Range("M1").Select
End Sub

'Selecciona y Resetea el Paso Tasas
Sub Limpiar_PasoTasas()
    Sheets("PasoTasas").Select
    ProtegerHoja
    
    Range("Sel_Tasa") = 1
    
    ActiveSheet.EnableSelection = xlUnlockedCells
End Sub

Sub Limpiar_PasoValorDestructible()
    Sheets("PasoValorDestructible").Select
    ProtegerHoja
    
    Range("Monto_para_seguro_da|fffd|os").Formula = "=Valor_aval|fffd|o*0.7"
    
    ActiveSheet.EnableSelection = xlUnlockedCells
End Sub

'|fffd|Esta funci|fffd|n se usa en alg|fffd|n lado?
'Limpia campos de captura del c|fffd|nyuge que deben ser cero seg|fffd|n el Tipo de Cr|fffd|dito:
'Range("F11")= Tipo de Cr|fffd|dito Banorte
'Range("F19")= Tipo de Cr|fffd|dito Cofinavit o FOVISSSTE
'   1 = Conyugal
'   2 = Individual
Private Sub Limpiar_Captura_C|fffd|nyuge()
    Dim Esquema_especial As String: Esquema_especial = Range("B1")
    Dim Tipo_Cr|fffd|dito_Banorte As Integer: Tipo_Cr|fffd|dito_Banorte = Range("F11")
    Dim Tipo_Cr|fffd|dito_Cofi_o_Fovi As Integer: Tipo_Cr|fffd|dito_Cofi_o_Fovi = Range("F19")
    Dim Conyugal As Integer: Conyugal = 1
    Dim Individual As Integer: Individual = 2

    ProtegerHoja
    
    ' Individual / Individual
    If Esquema_especial = "Cofinavit" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G23").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
    
    ' Individual / Conyugal
    If Esquema_especial = "Cofinavit" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Conyugal Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
    
    'Conyugal / Individual
    If Esquema_especial = "Cofinavit" Then
    If Tipo_Cr|fffd|dito_Banorte = Conyugal Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G23").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
    
    ' Individual / Individual
    If Esquema_especial = "Cofinavit AG" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G23").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G26").Select
            ActiveCell.FormulaR1C1 = "1"
            Range("E22").Select
        End If
    End If
    End If
    
    ' Individual / Conyugal
    If Esquema_especial = "Cofinavit AG" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Conyugal Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G26").Select
            ActiveCell.FormulaR1C1 = "1"
            Range("E22").Select
        End If
    End If
    End If
    
    'Conyugal / Individual
    If Esquema_especial = "Cofinavit AG" Then
    If Tipo_Cr|fffd|dito_Banorte = Conyugal Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G23").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G26").Select
            ActiveCell.FormulaR1C1 = "1"
            Range("E22").Select
        End If
    End If
    End If
    
   'Inicia FOVISSSTE
   
   ' Individual / Individual
    If Esquema_especial = "Alia2+" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G23").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
        
    ' Individual / Conyugal
    If Esquema_especial = "Alia2+" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Conyugal Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
    
    'Conyugal / Individual
    If Esquema_especial = "Alia2+" Then
    If Tipo_Cr|fffd|dito_Banorte = Conyugal Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G23").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G25").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
        
    ' Individual / Individual
    If Esquema_especial = "Respalda2" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
        
    ' Individual / Conyugal
    If Esquema_especial = "Respalda2" Then
    If Tipo_Cr|fffd|dito_Banorte = Individual Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Conyugal Then
            Range("G22").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
        
     'Conyugal / Individual
    If Esquema_especial = "Respalda2" Then
    If Tipo_Cr|fffd|dito_Banorte = Conyugal Then
        If Tipo_Cr|fffd|dito_Cofi_o_Fovi = Individual Then
            Range("G24").Select
            ActiveCell.FormulaR1C1 = "0"
            Range("E22").Select
        End If
    End If
    End If
End Sub

'Se ejecuta en los botones de "Reiniciar" que est|fffd|n en las hojas de captura de los Datos del Cr|fffd|dito.
Private Sub Limpiar_Hoja()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    Limpiar_Tabla_Cliente

    Select Case Range("Nombre_Esquema_Especial")
    Case "":
        Range("Tipo_simulaci|fffd|n") = 0 'Limpiamos el tipo de simulaci|fffd|n de una vez, para que si es Por Pago o Por Ingreso, NO aparezcan los mensajes de "Da clic en calcular... " etc.
        PrepararPasoTrad
        
    Case "Apoyo INFONAVIT": 'Nos colgamos de la rutina que se usa en la navegaci|fffd|n.
        PrepararPasoApoyo
        
    Case "Cofinavit", "Cofinavit AG":
        PrepararPasoCofinavit
    
    Case "Alia2+", "Respalda2":
        PrepararPasoFovissste
        
    End Select
    
    Range("Cotizaci|fffd|n!Nombre_Cliente").MergeArea.ClearContents 'En la Cotizaci|fffd|n
    Real_Auto_Open

    Pantalla BkSU
End Sub
Attribute VB_Name = "Navegaci|fffd|n_Regreso"

'|\ | _    _  _  _  _. _  _   |~) _  _  _ _  _ _
'| \|(_|\/(/_(_|(_|(_|(_)| |__|~\(/_(_|| (/__\(_)
'             _|                     _|

'Macros de navegaci|fffd|n que se llaman desde los botones 'Regresar'

Option Explicit

Private Sub Bot|fffd|n_RegresarInicio()
Attribute Bot|fffd|n_RegresarInicio.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_Destinos
    
    Pantalla BkSU
End Sub

Private Sub Bot|fffd|n_RegresarPASO3()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_ProgramasEspeciales
    
    Pantalla BkSU
End Sub

Private Sub Bot|fffd|n_RegresarPASO4()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_Instituci|fffd|nEspec|fffd|fica
    
    Pantalla BkSU
End Sub

Private Sub Bot|fffd|n_RegresarPASO5()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_RangoVivienda
    
    Pantalla BkSU
End Sub

Private Sub Bot|fffd|n_RegresarPASO6()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_Productos
    
    Pantalla BkSU
End Sub

Sub btRegresar_PasoSeguros()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_TipoSimulaci|fffd|n
    
    Pantalla BkSU
End Sub

Private Sub Bot|fffd|n_RegresarPASO6_Otros()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_Seguros
    
    Pantalla BkSU
End Sub

Private Sub Bot|fffd|n_RegresarPASO7TRA()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    RegresarA_Seguros
    
    Pantalla BkSU
End Sub

'Tasas <- ValorDestructible
Sub ValorDestructible_btRegresar()
    RegresarA_Tasas
End Sub

'ValorDestructible <- Cotizaci|fffd|n
Sub Cotizaci|fffd|n_btRegresar()
    RegresarA_ValorDestructible
End Sub

'Limpia la Tabla Cliente y regresa a la Cotizaci|fffd|n.
Private Sub Bot|fffd|n_Regresar_TablaCliente()
    Limpiar_Tabla_Cliente
    Sheets("Cotizaci|fffd|n").Select
    Range("Nombre_Cliente").Select
End Sub

'Selecciona la Tabla Cliente
Private Sub Bot|fffd|n_Regresar_TablaNotar|fffd|a()
    Sheets("Tabla Cliente").Select
End Sub

'Selecciona la Tabla Notar|fffd|a
Private Sub Bot|fffd|n_Regresar_OfertaVinculante()
    Sheets("Tabla Notar|fffd|a").Select
End Sub

Sub Tasas_btRegresar()
    'Limpieza TBD
    
    RegresarA_Datos
End Sub
Attribute VB_Name = "PasoSeguros"
Option Explicit

'================================================================================
'Event Handler para Combo de Seguros Banorte
Sub cbSegurosBanorte_Change()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    If Range("RG_SegurosBanorte") = Range("Si") Then
        
        'Banorte SI equivale a Seguro Vida Amplio y Seguro Da|fffd|os Amplio.
        Range("RG_SeguroVida") = Range("Amplio"): cbSeguroVida_Change
        Range("RG_SeguroDa|fffd|os") = Range("Amplio"): cbSeguroDa|fffd|os_Change
        
        'Cuando es Si, no figuran las selecciones de los dem|fffd|s combos, por lo que los escondemos.
        AjustarVis False, "SeguroVida"
        AjustarVis False, "MomentosVida"
        
        AjustarVis False, "SeguroDa|fffd|os"
        AjustarVis False, "ServicioAsistencia"
    Else
        'Cuando vamos a seleccionar individualmente los seguros,
        'discriminar seg|fffd|n el Destino.
        
        'Vida es independiente del destino.
        Range("RG_SeguroVida") = Range("Amplio"): cbSeguroVida_Change
        AjustarVis True, "SeguroVida"
        
        'Da|fffd|os depende del destino:
        If Range("Destino") <> Range("Terreno") Then
            Range("RG_SeguroDa|fffd|os") = Range("Amplio"): cbSeguroDa|fffd|os_Change
            AjustarVis True, "SeguroDa|fffd|os"
        Else
            'En Terreno, no aplica, por lo que se apaga y se esconde.
            Range("RG_SeguroDa|fffd|os") = Range("SinSeguro")
            Range("RG_ServicioAsistencia") = Range("No")
            AjustarVis False, "SeguroDa|fffd|os"
        End If
    End If
    
    Pantalla BkSU
End Sub

'================================================================================
'Event Handler para combo cbTipoSeguroBanorte.
'Asigna los valores correspondientes a los combos de Seguro de Vida y Seguro de Da|fffd|os.
Sub cbTipoSeguroBanorte_Change()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    
    Dim Valor: Valor = Range("Amplio") 'Iniciamos con "Amplio"
    If Range("RG_TipoSeguroBanorte") = Range("Basico") Then Valor = Range("Basico") 'Lo ajustamos si es preciso
    
    'Asignamos valores y disparamos eventos de cambio
    Range("RG_SeguroVida") = Valor: cbSeguroVida_Change
    Range("RG_SeguroDa|fffd|os") = Valor: cbSeguroDa|fffd|os_Change
    
    Pantalla BkSU
End Sub

'================================================================================
'Event Handler para Combo Seguro de Vida.
'Controla la visibilidad y el valor inicial (cuando se muestra) del sub-combo de Momentos de Vida.
Sub cbSeguroVida_Change()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    Dim Mostrar As Boolean, Valor
    
    If Range("RG_SeguroVida") = Range("SinSeguro") Then
        Mostrar = True
        Valor = Range("Si")
    Else
        Mostrar = False
        Valor = Range("No")
    End If
    
    Range("RG_MomentosVida") = Valor
    AjustarVis Mostrar, "MomentosVida"
    
    Pantalla BkSU
End Sub

'================================================================================
'Event Handler para Combo Seguro de Da|fffd|os
'Controla la visibilidad y el valor inicial (cuando se muestra) del sub-combo de Servicio de Asistencia.
Sub cbSeguroDa|fffd|os_Change()
    Dim BkSU As Boolean: BkSU = Pantalla(False)
    Dim Mostrar As Boolean, Valor
    
'    If Range("RG_SeguroDa|fffd|os") = Range("SinSeguro") Then
'        Mostrar = True
'        Valor = Range("Si")
'    Else
'        Mostrar = False
'        Valor = Range("No")
'    End If
    
    Mostrar = False
    Valor = Range("No")
    
    Range("RG_ServicioAsistencia") = Valor
    AjustarVis Mostrar, "ServicioAsistencia"
    
    Pantalla BkSU
End Sub

'================================================================================
'Configura las opciones para la versi|fffd|n de Seguros Ley de Transparencia
Sub Activar_Seguros_Transparencia_()

    'Range("Tipo_Seguro_VBA") = "Transparencia"
    
    'Apagamos 'Seguros Banorte'
    AjustarVis False, "TipoSeguroBanorte"
    
    'Encendemos 'Ley Transparencia'
    AjustarVis True, "SegurosBanorte"
    Range("RG_SegurosBanorte") = Range("Si"): cbSegurosBanorte_Change
End Sub

'================================================================================
'Configura las opciones para la versi|fffd|n de Seguros Banorte
Sub Activar_Seguros_Banorte_()
    
    'Range("Tipo_Seguro_VBA") = "Banorte"

    'Apagamos 'Ley Transparencia'
    Range("RG_SegurosBanorte") = Range("Si"): cbSegurosBanorte_Change 'Aprovechamos el Event Handler para esconder todos los combos...
    Range("RG_SegurosBanorte") = Range("No") '..y al final regresamos al valor No.
    AjustarVis False, "SegurosBanorte"
    
    'Encendemos 'Seguros Banorte'
    AjustarVis True, "TipoSeguroBanorte"
    Range("RG_TipoSeguroBanorte") = Range("Amplio"): cbTipoSeguroBanorte_Change
End Sub

'--------------------------------------------------------------------------------
'Ayudante para mostrar todos los combos del paso seguros.
Sub Mostrar_Todo_Seguros()
    AjustarVis True, "SegurosBanorte"
    AjustarVis True, "TipoSeguroBanorte"
    AjustarVis True, "SeguroVida"
    AjustarVis True, "MomentosVida"
    AjustarVis True, "SeguroDa|fffd|os"
    AjustarVis True, "ServicioAsistencia"
End Sub

Sub Activar_Seguros()
    Select Case Range("Tipo_Seguro_VBA")
    Case "Banorte"
        'Apagamos 'Ley Transparencia'
        Range("RG_SegurosBanorte") = Range("Si"): cbSegurosBanorte_Change 'Aprovechamos el Event Handler para esconder todos los combos...
        Range("RG_SegurosBanorte") = Range("No") '..y al final regresamos al valor No.
        AjustarVis False, "SegurosBanorte"
        
        'Encendemos 'Seguros Banorte'
        AjustarVis True, "TipoSeguroBanorte"
        Range("RG_TipoSeguroBanorte") = Range("Amplio"): cbTipoSeguroBanorte_Change
    
    Case "Transparencia"
        'Apagamos 'Seguros Banorte'
        AjustarVis False, "TipoSeguroBanorte"
        
        'Encendemos 'Ley Transparencia'
        AjustarVis True, "SegurosBanorte"
        Range("RG_SegurosBanorte") = Range("Si"): cbSegurosBanorte_Change
    End Select
End Sub

'================================================================================
'Event Handlers de los botones

Sub btn_MostrarTodoSeguros_Click()
    Mostrar_Todo_Seguros
End Sub

Sub btn_ActivarSeguros_Click()
    Activar_Seguros
End Sub
Attribute VB_Name = "PrintUtils"
Option Explicit

'Realiza la Configuraci|fffd|n de Impresi|fffd|n para la Oferta Vinculante.
Sub ConfiguraImpresi|fffd|nOfertaVinculante(sheet As Worksheet)
Attribute ConfiguraImpresi|fffd|nOfertaVinculante.VB_ProcData.VB_Invoke_Func = " \n14"
    
    With sheet.PageSetup
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.15748031496063)
        .TopMargin = Application.InchesToPoints(0.748031496062992)
        .BottomMargin = Application.InchesToPoints(0.354330708661417)
        
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 100
        
        .CenterHorizontally = True
    End With
    
    ' === Saltos de P|fffd|gina ===
    sheet.ResetAllPageBreaks
    
    ActiveWindow.View = xlPageBreakPreview
    
    sheet.HPageBreaks.Add sheet.Range("B60"): Set sheet.HPageBreaks(1).Location = sheet.Range("B60")
    sheet.HPageBreaks.Add sheet.Range("B130"): Set sheet.HPageBreaks(2).Location = sheet.Range("B130")
    sheet.HPageBreaks.Add sheet.Range("B167"): Set sheet.HPageBreaks(3).Location = sheet.Range("B167")
    
    ActiveWindow.View = xlNormalView
End Sub
Attribute VB_Name = "Revisa_Captura_Datos_Credito"

'|~) _   . _ _   /~` _  _ _|_   _ _   |~\ _ _|_ _  _  /~` _ _  _|._|_ _
'|~\(/_\/|_\(_|__\_,(_||_) ||_|| (_|__|_/(_| | (_)_\__\_,| (/_(_|| | (_)
'                      |

'Rutinas que validan e informan de las capturas de los esquemas especiales en los Datos del Cr|fffd|dito.

Option Explicit

Private Faltantes As String

'Revisa las capturas seg|fffd|n el esquema, y regresa si est|fffd|n correctas, o si hubo faltantes.
Function CapturaInstituci|fffd|nSegunEsquemaEsCorrecta() As Boolean
    Faltantes = "" 'Limpiamos faltantes
    
    Select Case Range("Nombre_Esquema_Especial")
        Case "Cofinavit": RevisaCofinavit
        Case "Cofinavit AG": RevisaCofinavitAG
        Case "Alia2+": RevisaAliadosPlus
        Case "Respalda2": RevisaRespaldados
    End Select
    
    CapturaInstituci|fffd|nSegunEsquemaEsCorrecta = Not PresentaFaltantes
End Function

'Genera lista de datos faltantes.
Sub RevisaCofinavit()
    'TITULAR
    AgregaFaltante Range("E22").Value = 0, "Ingreso Mensual Bruto del Titular"
    AgregaFaltante Range("E23").Value = 0, "Saldo de la Subcuenta de Vivienda del Titular"
    AgregaFaltante Range("E24").Value = 0, "Monto de Cr|fffd|dito INFONAVIT del Titular"
    AgregaFaltante Range("E25").Value = 0, "Descuento Mensual del Titular"

    'BANORTE CONYUGAL
    If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Conyugal") Then
        AgregaFaltante Range("G22").Value = 0, "Ingreso Mensual Bruto del C|fffd|nyuge"
        If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then 'Este dato del esquema especial s|fffd|lo se requiere cuando ambos son conyugales:
            AgregaFaltante Range("G25").Value = 0, "Descuento Mensual del C|fffd|nyuge"
        End If
    End If
    
    'ESQUEMA ESPECIAL CONYUGAL
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then
        AgregaFaltante Range("G23").Value = 0, "Saldo de la Subcuenta de Vivienda del C|fffd|nyuge"
        AgregaFaltante Range("G24").Value = 0, "Monto de Cr|fffd|dito INFONAVIT del C|fffd|nyuge"
    End If
End Sub

'Genera lista de datos faltantes.
Sub RevisaAliadosPlus()
    'Titular
    AgregaFaltante Range("E22").Value = 0, "Ingreso Mensual Bruto del Titular"
    AgregaFaltante Range("E23").Value = 0, "Capacidad M|fffd|xima de Cr|fffd|dito del Titular"
    AgregaFaltante Range("E24").Value = 0, "Saldo SAR del Titular"
    AgregaFaltante Range("E25").Value = 0, "Descuento Mensual del Titular"
    
    'Banorte Conyugal
    If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Conyugal") Then
        AgregaFaltante Range("G22").Value = 0, "Ingreso Mensual Bruto del C|fffd|nyuge"
    End If
    
    'Esquema Especial Conyugal
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then
        AgregaFaltante Range("G23").Value = 0, "Capacidad M|fffd|xima de Cr|fffd|dito del C|fffd|nyuge"
        AgregaFaltante Range("G24").Value = 0, "Saldo SAR del C|fffd|nyuge"
    End If
    
    'Ambos Conyugales
    If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Conyugal") And Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then
        AgregaFaltante Range("G25").Value = 0, "Descuento Mensual del C|fffd|nyuge"
    End If
End Sub

'Genera lista de datos faltantes.
Sub RevisaRespaldados()
    'Titular
    AgregaFaltante Range("E22").Value = 0, "Ingreso Mensual Bruto del Titular"
    AgregaFaltante Range("E24").Value = 0, "Saldo SAR del Titular"
    
    'Banorte Conyugal
    If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Conyugal") Then
        AgregaFaltante Range("G22").Value = 0, "Ingreso Mensual Bruto del C|fffd|nyuge"
    End If
    
    'Esquema Especial Conyugal
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then
        AgregaFaltante Range("G24").Value = 0, "Saldo SAR del C|fffd|nyuge"
    End If
End Sub

'Despliega errores de captura.
Sub RevisaCofinavitAG()
' Individual / Individual
If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Individual") Then
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Individual") Then
        If Range("E22").Value = 0 Then MsgBox "Falta capturar el Ingreso Mensual Bruto del Titular", vbCritical + vbOKOnly, "Ingreso Mensual Bruto (Titular)"
        If Range("E23").Value = 0 Then MsgBox "Falta capturar el Monto Inicial Disponible del Saldo de la Subcuenta de Vivienda del Titular", vbCritical + vbOKOnly, "Monto Inicial Disponible Subcuenta de Vivienda (Titular)"
        If Range("E24").Value = 0 Then MsgBox "Falta capturar el Monto de Cr|fffd|dito INFONAVIT del Titular", vbCritical + vbOKOnly, "Cr|fffd|dito INFONAVIT (Titular)"
        If Range("E25").Value = 0 Then MsgBox "Falta capturar el Descuento Mensual del Titular", vbCritical + vbOKOnly, "Descuento Mensual (Titular)"
        If Range("E26").Value = 0 Then MsgBox "Falta capturar el Monto Remanente del Saldo de la Subcuenta del Titular", vbCritical + vbOKOnly, "Monto Remanente Subcuenta de Vivienda (Titular)"
    End If
End If
' Individual / Conyugal
If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Individual") Then
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then
        If Range("E22").Value = 0 Then MsgBox "Falta capturar el Ingreso Mensual Bruto del Titular", vbCritical + vbOKOnly, "Ingreso Mensual Bruto (Titular)"
        If Range("E23").Value = 0 Then MsgBox "Falta capturar el Saldo de la Subcuenta de Vivienda del Titular", vbCritical + vbOKOnly, "Subcuenta de Vivienda (Titular)"
        If Range("E24").Value = 0 Then MsgBox "Falta capturar el Monto de Cr|fffd|dito INFONAVIT del Titular", vbCritical + vbOKOnly, "Cr|fffd|dito INFONAVIT (Titular)"
        If Range("E25").Value = 0 Then MsgBox "Falta capturar el Descuento Mensual del Titular", vbCritical + vbOKOnly, "Descuento Mensual (Titular)"
        If Range("E26").Value = 0 Then MsgBox "Falta capturar el Monto Remanente del Saldo de la Subcuenta del Titular", vbCritical + vbOKOnly, "Monto Remanente Subcuenta de Vivienda (Titular)"
        If Range("G23").Value = 0 Then MsgBox "Falta capturar el Saldo de la Subcuenta de Vivienda del C|fffd|nyuge", vbCritical + vbOKOnly, "Subcuenta de Vivienda (C|fffd|nyuge)"
        If Range("G24").Value = 0 Then MsgBox "Falta capturar el Monto de Cr|fffd|dito INFONAVIT del C|fffd|nyuge", vbCritical + vbOKOnly, "Cr|fffd|dito INFONAVIT (C|fffd|nyuge)"
        If Range("G26").Value = 0 Then MsgBox "Falta capturar el Monto Remanente del Saldo de la Subcuenta del C|fffd|nyuge", vbCritical + vbOKOnly, "Monto Remanente Subcuenta de Vivienda (C|fffd|nyuge)"
    End If
End If
'Conyugal / Conyugal
If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Conyugal") Then
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Conyugal") Then
        If Range("E22").Value = 0 Then MsgBox "Falta capturar el Ingreso Mensual Bruto del Titular", vbCritical + vbOKOnly, "Ingreso Mensual Bruto (Titular)"
        If Range("E23").Value = 0 Then MsgBox "Falta capturar el Saldo de la Subcuenta de Vivienda del Titular", vbCritical + vbOKOnly, "Subcuenta de Vivienda (Titular)"
        If Range("E24").Value = 0 Then MsgBox "Falta capturar el Monto de Cr|fffd|dito INFONAVIT del Titular", vbCritical + vbOKOnly, "Cr|fffd|dito INFONAVIT (Titular)"
        If Range("E25").Value = 0 Then MsgBox "Falta capturar el Descuento Mensual del Titular", vbCritical + vbOKOnly, "Descuento Mensual (Titular)"
        If Range("E26").Value = 0 Then MsgBox "Falta capturar el Monto Remanente del Saldo de la Subcuenta del Titular", vbCritical + vbOKOnly, "Monto Remanente Subcuenta de Vivienda (Titular)"
        If Range("G22").Value = 0 Then MsgBox "Falta capturar el Ingreso Mensual Bruto del C|fffd|nyuge", vbCritical + vbOKOnly, "Ingreso Mensual Bruto (C|fffd|nyuge)"
        If Range("G23").Value = 0 Then MsgBox "Falta capturar el Saldo de la Subcuenta de Vivienda del C|fffd|nyuge", vbCritical + vbOKOnly, "Subcuenta de Vivienda (C|fffd|nyuge)"
        If Range("G24").Value = 0 Then MsgBox "Falta capturar el Monto de Cr|fffd|dito INFONAVIT del C|fffd|nyuge", vbCritical + vbOKOnly, "Cr|fffd|dito INFONAVIT (C|fffd|nyuge)"
        If Range("G25").Value = 0 Then MsgBox "Falta capturar el Descuento Mensual del C|fffd|nyuge", vbCritical + vbOKOnly, "Descuento Mensual (C|fffd|nyuge)"
        If Range("G26").Value = 0 Then MsgBox "Falta capturar el Monto Remanente del Saldo de la Subcuenta del C|fffd|nyuge", vbCritical + vbOKOnly, "Monto Remanente Subcuenta de Vivienda (C|fffd|nyuge)"
        'If Range("E27").Value = 0 Then 'MsgBox "Falta capturar el Descuento para ecotecnolog|fffd|as", vbCritical + vbOKOnly, "Descuento para ecotecnolog|fffd|as"
    End If
End If
'Conyugal / Individual
If Range("Tipo_Cr|fffd|dito_Banorte") = Range("Conyugal") Then
    If Range("Tipo_Cr|fffd|dito_COF_o_FOV") = Range("Individual") Then
        If Range("E22").Value = 0 Then MsgBox "Falta capturar el Ingreso Mensual Bruto del Titular", vbCritical + vbOKOnly, "Ingreso Mensual Bruto (Titular)"
        If Range("E23").Value = 0 Then MsgBox "Falta capturar el Saldo de la Subcuenta de Vivienda del Titular", vbCritical + vbOKOnly, "Subcuenta de Vivienda (Titular)"
        If Range("E24").Value = 0 Then MsgBox "Falta capturar el Monto de Cr|fffd|dito INFONAVIT del Titular", vbCritical + vbOKOnly, "Cr|fffd|dito INFONAVIT (Titular)"
        If Range("E25").Value = 0 Then MsgBox "Falta capturar el Descuento Mensual del Titular", vbCritical + vbOKOnly, "Descuento Mensual (Titular)"
        If Range("E26").Value = 0 Then MsgBox "Falta capturar el Monto Remanente del Saldo de la Subcuenta del Titular", vbCritical + vbOKOnly, "Monto Remanente Subcuenta de Vivienda (Titular)"
        If Range("G22").Value = 0 Then MsgBox "Falta capturar el Ingreso Mensual Bruto del C|fffd|nyuge", vbCritical + vbOKOnly, "Ingreso Mensual Bruto (C|fffd|nyuge)"
    End If
End If
End Sub

'Auxiliar para construir el mensaje de capturas faltantes.
Sub AgregaFaltante(Aplica As Boolean, Mensaje As String)
    If Aplica Then Faltantes = Faltantes & StringConBullet(Mensaje) & vbCrLf
End Sub

'Auxiliar para desplegar el mensaje de capturas faltantes. Regresa si hubo faltantes y los limpia.
Function PresentaFaltantes() As Boolean
    If Faltantes <> "" Then
        PresentaFaltantes = True
        MsgBox "Favor de capturar los siguientes datos faltantes:" & vbCrLf & vbCrLf & Faltantes, vbCritical + vbOKOnly, "Validaci|fffd|n de Captura"
    End If
    Faltantes = ""
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabla_Cliente"

'~|~ _ |_ | _   /~`|. _  _ _|_ _
' | (_||_)|(_|__\_,||(/_| | | (/_

'Macros que configuran la Tabla Cliente.

Option Explicit

'Deja visibles s|fffd|lo las filas necesarias seg|fffd|n el plazo (n|fffd|mero de pagos).
'Esta macro se llama tambi|fffd|n de la Tabla Notar|fffd|a, y tambi|fffd|n afecta sus filas visibles.
Sub AjustaFilasPlazo()
Attribute AjustaFilasPlazo.VB_ProcData.VB_Invoke_Func = " \n14"
    ProtegerHoja
    Range("G28").Formula = 1 'Tipo de Aportaci|fffd|n a Capital

    'Determinamos el rango a ajustar
    Dim RgAfectar As Range: Set RgAfectar = Range(Range("Filas_Tabla_Cliente").Address(False, False)) '"localizamos" el rango a la hoja actual.
    RgAfectar.EntireRow.Hidden = False 'Mostramos todas las filas.
    
    Dim rgEsconder As Range 'Determinamos el rango de celdas que vamos a esconder
    Set rgEsconder = Intersect(RgAfectar, RgAfectar.Offset(Range("Plazo_Cr|fffd|dito"), 0))
    
    If Not rgEsconder Is Nothing Then rgEsconder.EntireRow.Hidden = True 'Si no est|fffd| vac|fffd|o (Plazo=360), escondemos.
    
    Range("M31").Select
End Sub

'Oculta sets de columnas, dependiendo del escenario en donde se necesiten o no.
Sub Oculta_Columnas_Tabla_Cliente()
Attribute Oculta_Columnas_Tabla_Cliente.VB_ProcData.VB_Invoke_Func = " \n14"
    Sheets("Tabla Cliente").Select
    ProtegerHoja
    
    Range("I:I,K:L,N:O").EntireColumn.Hidden = True 'Escondemos todas las columnas
        
    'Seg|fffd|n el escenario, mostramos las correspondientes.
    If Range("C2").Value = 1 Then
        Range("K29").EntireColumn.Hidden = False
        Range("L29").EntireColumn.Hidden = False
    
    ElseIf Range("C2").Value = 2 Then
        Range("K29").EntireColumn.Hidden = False
        
    ElseIf Range("C2").Value = 3 Then
        Range("K29").EntireColumn.Hidden = False
        Range("L29").EntireColumn.Hidden = False
        Range("N29").EntireColumn.Hidden = False
    
    ElseIf Range("C2").Value = 4 Then
        Range("K29").EntireColumn.Hidden = False
        Range("N29").EntireColumn.Hidden = False
    
    ElseIf Range("C2").Value = 5 Then
        Range("K29").EntireColumn.Hidden = False
        Range("L29").EntireColumn.Hidden = False
        Range("O29").EntireColumn.Hidden = False
    
    ElseIf Range("C2").Value = 6 Then
        Range("K29").EntireColumn.Hidden = False
        Range("O29").EntireColumn.Hidden = False
    
    ElseIf Range("C2").Value = 7 Then
        Range("I29").EntireColumn.Hidden = False
        Range("K29").EntireColumn.Hidden = False
        Range("L29").EntireColumn.Hidden = False
    
    ElseIf Range("C2").Value = 8 Then
        Range("I29").EntireColumn.Hidden = False
    End If
    
    If Range("Nombre_Esquema_Especial") = "Apoyo INFONAVIT" Then
        Range("N29").EntireColumn.Hidden = False
    End If
    
    'Vamos a manejar la columna del IVA de forma independiente
    If [Aplica_IVA?] Then
        Range("I:I").EntireColumn.Hidden = False
    Else
        Range("I:I").EntireColumn.Hidden = True
    End If
End Sub

'Selecciona y reinicializa la Tabla Cliente.
Sub Limpiar_Tabla_Cliente()
    Sheets("Tabla Cliente").Select
    ProtegerHoja
    
    Range("Filas_Tabla_Cliente").EntireRow.Hidden = False 'Mostramos todas las filas.
    
    Range("Filas_Tabla_Cliente").Offset(0, 11).Value = 0 'Dejamos en ceros las Aportaciones a Capital.
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
Auto_Open.Auto_Open
End Sub
Attribute VB_Name = "Variantes"
Option Explicit

Sub AsignaMarca()
    Dim ColorMarca As Long
    If CA_Servicios.Marca() = "BANORTE" Then
        ColorMarca = RGB(155, 45, 42) 'Banorte
    Else
        ColorMarca = RGB(39, 107, 97) 'Ixe
    End If
    
    ColorizaShapes ColorMarca
    MuestraLogo
End Sub
'Sobrepone el logotipo de la marca correspondiente.
Sub MuestraLogo()
    Dim NombreLogo As String
    If CA_Servicios.Marca() = "BANORTE" Then
        NombreLogo = LOGO_BANORTE
    Else
        NombreLogo = LOGO_IXE
    End If
    
    Sheets("Paso1").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("Paso5").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("Paso6").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("Paso7 trad").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("Cotizaci|fffd|n").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("Tabla Cliente").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("Tabla Notar|fffd|a").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("PasoSeguros").Shapes(NombreLogo).ZOrder msoBringToFront
    Sheets("PasoTasas").Shapes(NombreLogo).ZOrder msoBringToFront
End Sub

'Asigna el color a las formas que componen el branding.
Sub ColorizaShapes(ColorMarca As Long)
    Dim NombreShapeEncabezado: NombreShapeEncabezado = "Text Box 12"
    Sheets("Paso1").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso2").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso3").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso3a").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso5").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso6").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso6 Apoyo").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso6 Cofinavit").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso6 Fovissste").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("Paso7 Trad").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("PasoSeguros").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
    Sheets("PasoTasas").Shapes(NombreShapeEncabezado).Fill.ForeColor.RGB = ColorMarca
End Sub

'Se usa para obtener informaci|fffd|n de las Shapes de la hoja activa.
Sub InfoShapes()
    Dim ws As Worksheet
    Dim ix As Integer
    
    Set ws = ActiveSheet
    For ix = 0 To ws.Shapes.Count - 1
        Debug.Print ix, ws.Shapes(ix).ID, ws.Shapes(ix).name, ws.Shapes(ix).Type
    Next
End Sub

'Ejecuta la secuencia de Cambios para inicializar el cierre.
Sub Variante_Inicial()
    Cambio_AsignaMarcaBanorte
    Cambio_EscondeSubrogaci|fffd|n
    [Variante.Selecci|fffd|n] = "Default": Application.Calculate
    Cambio_Activar_Seguros
End Sub

Sub Variante_Transparencia()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Default Transparencia": Application.Calculate
    Cambio_Activar_Seguros
End Sub

Sub Variante_Preaprobados()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Preaprobados"
End Sub

Sub Variante_Preaprobados_Transparencia()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Preaprobados Transparencia": Application.Calculate
    Cambio_Activar_Seguros
End Sub

Sub Variante_Promoci|fffd|n_General()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Promoci|fffd|n General"
End Sub

Sub Variante_Promoci|fffd|n_General_Transparencia()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Promoci|fffd|n General Transparencia"
End Sub

Sub Variante_Promoci|fffd|n_Clientes_Nomina_BTE()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Clientes N|fffd|mina Banorte"
End Sub

Sub Variante_Promoci|fffd|n_Clientes_Nomina_BTE_Transparencia()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Clientes N|fffd|mina Banorte Transparencia"
End Sub

Sub Variante_Apertura_0_Gen|fffd|rica()
    Variante_Inicial
    [Variante.Selecci|fffd|n] = "Promo Apertura 0% Gen|fffd|rica"
End Sub

'Ejecuta la secuencia de Cambios para generar la Variante.
Sub Variante_ConSubrogaci|fffd|n()
    Variante_Inicial
    Cambio_MuestraSubrogaci|fffd|n
End Sub

Sub Cambio_MuestraSubrogaci|fffd|n()
    Dim CurrSheet As Worksheet: Set CurrSheet = ActiveSheet
    Worksheets("Paso1").Activate
    
    AjustarVis True, "Opci|fffd|nSubrogaci|fffd|n", "Subrogaci|fffd|n"
    
    CurrSheet.Activate
End Sub

Sub Cambio_EscondeSubrogaci|fffd|n()
    Dim CurrSheet As Worksheet: Set CurrSheet = ActiveSheet
    Worksheets("Paso1").Activate
    
    AjustarVis False, "Opci|fffd|nSubrogaci|fffd|n", "Subrogaci|fffd|n"
    
    CurrSheet.Activate
End Sub

Sub Cambio_Activar_Seguros()
    Dim CurrSheet As Worksheet: Set CurrSheet = ActiveSheet
    Worksheets("PasoSeguros").Activate
    
    Activar_Seguros
    
    CurrSheet.Activate
End Sub

'Muestra o Esconde la opci|fffd|n de Subrogaci|fffd|n en el PASO1
'Se usa en el bot|fffd|n del PASO1, como ayudante de mantenimiento.
Sub Toggle_DestinoSubrogaci|fffd|n()
    ToggleVis "Opci|fffd|nSubrogaci|fffd|n", "Subrogaci|fffd|n"
End Sub

'Deprecated?
'--------------------------------------------------------------------------------

'Ejecuta la secuencia de Cambios para generar la Variante.
Sub Variante_Ixe()
    Variante_Inicial
    Cambio_AsignaMarcaIxe
End Sub

Sub Cambio_AsignaMarcaIxe()
    Range("CA_Servicios!CA.Branding") = "Ixe"
End Sub

Sub Cambio_AsignaMarcaBanorte()
    Range("CA_Servicios!CA.Branding") = "Banorte"
End Sub

'Ejecuta la secuencia de Cambios para generar la Variante.
Sub Variante_PlanB()
    Variante_Inicial
    Cambio_EliminaHojasPlanB
    Cambio_AjustaBotonesTablaClientePlanB
End Sub

'Eliminamos las hojas innecesarias en Plan B.
Sub Cambio_EliminaHojasPlanB()
    BorrarHojaSinConfirmacion Sheets("Tabla Notar|fffd|a")
    BorrarHojaSinConfirmacion Sheets("Oferta Vinculante")
End Sub

'Ajustamos y eliminamos botones en la Tabla Cliente, acorde al Plan B.
Sub Cambio_AjustaBotonesTablaClientePlanB()
    Sheets("Tabla Cliente").Select
    ActiveSheet.Shapes("Button 305").Delete
    ActiveSheet.Shapes("Button 313").Delete
    ActiveSheet.Shapes("Button 550").Select
    Selection.ShapeRange.IncrementLeft 245.25
End Sub

'Ejecuta la secuencia de Cambios para generar la Variante.
Sub Variante_PlanBIxe()
    Variante_Inicial
    Variante_Ixe
    Variante_PlanB
End Sub

'Ejecuta la secuencia de Cambios para generar la Variante.
Sub Variante_IxeConSubrogaci|fffd|n()
    Variante_Inicial
    Variante_Ixe
    Variante_ConSubrogaci|fffd|n
End Sub
Attribute VB_Name = "Visibilidad"
Option Explicit

Private Const PFX_OBJETO As String = "CP_"
Private Const PFX_LOGO As String = "LOGO_"
Private Const PFX_RANGO As String = "RG_"

Private obj As Shape

'Conmuta la visibilidad de un objeto.
Sub ToggleVis(Identificador As String, Optional Etiqueta)
    'Obtenemos el principal para determinar su visibilidad
    IdentificarPrincipal Identificador
    
    'Llamamos a la rutina que hace el trabajo, con la consideraci|fffd|n de la Etiqueta.
    If Not IsMissing(Etiqueta) Then
        AjustarVis Not obj.Visible, Identificador, Etiqueta
    Else
        AjustarVis Not obj.Visible, Identificador
    End If
End Sub

'Asigna la visibilidad de un objeto.
Sub AjustarVis(Visible As Boolean, Identificador As String, Optional Etiqueta)

    IdentificarPrincipal Identificador
    
    '----------------------------------------------------------------------------------------------------
    '> Rango
    'Buscamos
    Dim objRango As Range: On Error Resume Next: Set objRango = ActiveSheet.Range(PFX_RANGO + Identificador): On Error GoTo 0
    
    'Aplicar Visibilidad si existe.
    If Not objRango Is Nothing Then
        objRango.Cells(1, 1).Resize(2, 1).EntireRow.Hidden = Not Visible
    End If
    
    '----------------------------------------------------------------------------------------------------
    '> Principal
    obj.Visible = Visible
    
    If Not objRango Is Nothing Then
        'Ajustar ubicaci|fffd|n del objeto principal
        obj.Top = objRango.Top + 1
        obj.Left = objRango.Left + objRango.Width + 1
    End If
    
    '----------------------------------------------------------------------------------------------------
    '> Etiqueta
    If Not IsMissing(Etiqueta) Then
        Dim LabelRange As Range
        
        'Ubicaci|fffd|n
        Set LabelRange = obj.TopLeftCell.Offset(0, 1)
        
        'Proceso
        If Visible Then
            LabelRange.Value = Etiqueta
        Else
            LabelRange.Value = ""
        End If
    End If

    '----------------------------------------------------------------------------------------------------
    '> Logo
    'Buscarlo.
    Dim objLogo As Shape
    On Error Resume Next:
    Set objLogo = ActiveSheet.Shapes(PFX_LOGO + Identificador)
    On Error GoTo 0
    
    'Aplicar Visibilidad si existe.
    If Not objLogo Is Nothing Then objLogo.Visible = Visible
    
End Sub

'Busca y asigna la referencia del objeto principal.
Sub IdentificarPrincipal(Identificador As String)
    Set obj = ActiveSheet.Shapes(PFX_OBJETO + Identificador)
End Sub

' InQuest injected base64 decoded content
' jT^r

INQUEST-PP=macro
