Attribute VB_Name = "Array_ecritures"
Sub actualiser_array_ecritures(ByRef array_ecritures, Optional mois)
date_0 = CDate(Sheets("BD_DONNEES").Range("G" & 8))
dernier_compte = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
derniere_ligne_journal = nb_ecritures_journal
If derniere_ligne_journal = 17 Then
dd = MsgBox("Le journal est vide.", 48, "Erreur")
Exit Sub
End If
estimation_sup = (derniere_ligne_journal - 17) * 3
If IsMissing(mois) Then
estimation_sup = estimation_sup + dernier_compte
End If
ReDim array_ecritures(estimation_sup, 5)
Dim array_comptes_types()
ReDim array_comptes_types(dernier_compte - 2, 1)
For i = 2 To dernier_compte
array_comptes_types(i - 2, 0) = Sheets("BD_DONNEES").Cells(i, 1)
array_comptes_types(i - 2, 1) = Sheets("BD_DONNEES").Cells(i, 3)
Next
date_debut = Sheets("BD_DONNEES").Range("G2")
date_fin = Sheets("BD_DONNEES").Range("G3")
desactiver_gestion_erreurs = False
If Not IsMissing(mois) Then
date_fin = CDate(date_fin)
date_debut = CDate(date_debut)
ajout_annee = 0
mois_avec_ajout = Month(date_debut) + mois - 1
If mois_avec_ajout > 12 Then
mois_avec_ajout = mois_avec_ajout - 12
ajout_annee = 1
End If
date_debut_TEMP = CDate("1/" & mois_avec_ajout & "/" & Year(date_debut) + ajout_annee)
If mois_avec_ajout = 12 Then
der_jour = 31
Else
der_jour = Day(CDate("1/" & mois_avec_ajout + 1 & "/" & Year(date_debut) + ajout_annee) - 1)
End If
date_fin_TEMP = CDate(der_jour & "/" & mois_avec_ajout & "/" & Year(date_debut) + ajout_annee)
If date_debut_TEMP > date_debut Then
date_debut = date_debut_TEMP
End If
If date_fin_TEMP < date_fin Then
date_fin = date_fin_TEMP
End If
desactiver_gestion_erreurs = True
End If
no_compte_ded_accordees = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("ded_acc"), 1)
no_compte_ded_obtenues = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("ded_obt"), 1)
no_compte_tva_due = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("tva_due"), 1)
no_compte_tva_a_recuperer = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("tva_recup"), 1)
compteur_erreurs = 0
ligne_insertion_dans_array = 0
der_ligne_j = derniere_ligne_journal
nb_lignes_sans_erreurs = Split(compte_type(Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", True)), False), compte_type("$|fffd||fffd|N", True) & "_2>")(1) + 17
If der_ligne_j > nb_lignes_sans_erreurs Then
der_ligne_j = nb_lignes_sans_erreurs
End If
For i = 18 To der_ligne_j
no_en_cours = Sheets("Journal").Cells(i, 2)
date_en_cours = Sheets("Journal").Cells(i, 3)
libelle_en_cours = Sheets("Journal").Cells(i, 4)
no_debit_en_cours = Sheets("Journal").Cells(i, 5)
no_credit_en_cours = Sheets("Journal").Cells(i, 7)
tva_en_cours = Sheets("Journal").Cells(i, 9)
montant_en_cours = Sheets("Journal").Cells(i, 10)
verif_compte_debit = no_de_compte_valide(no_debit_en_cours, dernier_compte, array_comptes_types)
verif_compte_credit = no_de_compte_valide(no_credit_en_cours, dernier_compte, array_comptes_types)
If IsDate(date_en_cours) And libelle_en_cours <> "" And verif_compte_debit = True And verif_compte_credit = True And montant_en_cours <> "" And IsNumeric(montant_en_cours) And (tva_en_cours = "" Or (tva_en_cours >= 0 And tva_en_cours <= 100)) Then
If date_en_cours >= date_debut And date_en_cours <= date_fin Then
If tva_en_cours = "" Then
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_debit_en_cours
array_ecritures(ligne_insertion_dans_array, 4) = no_credit_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
Else
type_compte_debit_en_cours = type_du_no_compte(no_debit_en_cours, dernier_compte, array_comptes_types)
type_compte_credit_en_cours = type_du_no_compte(no_credit_en_cours, dernier_compte, array_comptes_types)
If (type_compte_debit_en_cours <= 4 And type_compte_credit_en_cours > 4) Or (type_compte_debit_en_cours > 4 And type_compte_credit_en_cours <= 4) Then
If (type_compte_debit_en_cours <= 4 And no_credit_en_cours <> no_compte_ded_obtenues) Or (type_compte_credit_en_cours <= 4 And no_debit_en_cours = no_compte_ded_accordees) Then
If type_compte_debit_en_cours <= 4 Then
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_debit_en_cours
array_ecritures(ligne_insertion_dans_array, 4) = ""
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = ""
array_ecritures(ligne_insertion_dans_array, 4) = no_credit_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = ""
array_ecritures(ligne_insertion_dans_array, 4) = no_compte_tva_due
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours - Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
Else
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = ""
array_ecritures(ligne_insertion_dans_array, 4) = no_credit_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_debit_en_cours
array_ecritures(ligne_insertion_dans_array, 4) = ""
array_ecritures(ligne_insertion_dans_array, 5) = Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_compte_tva_due
array_ecritures(ligne_insertion_dans_array, 4) = ""
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours - Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
End If
Else
If type_compte_credit_en_cours <= 4 Then
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = ""
array_ecritures(ligne_insertion_dans_array, 4) = no_credit_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_debit_en_cours
array_ecritures(ligne_insertion_dans_array, 4) = ""
array_ecritures(ligne_insertion_dans_array, 5) = Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_compte_tva_a_recuperer
array_ecritures(ligne_insertion_dans_array, 4) = ""
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours - Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
Else
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_debit_en_cours
array_ecritures(ligne_insertion_dans_array, 4) = ""
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = ""
array_ecritures(ligne_insertion_dans_array, 4) = no_credit_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = ""
array_ecritures(ligne_insertion_dans_array, 4) = no_compte_tva_a_recuperer
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours - Round(montant_en_cours / (100 + tva_en_cours) * 100, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
End If
End If
Else
Sheets("Journal").Range("E" & i & ":I" & i).Interior.ColorIndex = 33
compteur_erreurs = compteur_erreurs + 1
array_ecritures(ligne_insertion_dans_array, 0) = no_en_cours
array_ecritures(ligne_insertion_dans_array, 1) = date_en_cours
array_ecritures(ligne_insertion_dans_array, 2) = libelle_en_cours
array_ecritures(ligne_insertion_dans_array, 3) = no_debit_en_cours
array_ecritures(ligne_insertion_dans_array, 4) = no_credit_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = montant_en_cours
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
End If
End If
ElseIf desactiver_gestion_erreurs = False Then
Sheets("Journal").Cells(i, 3).Interior.ColorIndex = 26
compteur_erreurs = compteur_erreurs + 1
End If
Else
If Not IsDate(date_en_cours) Then
Sheets("Journal").Cells(i, 3).Interior.ColorIndex = 45
compteur_erreurs = compteur_erreurs + 1
End If
If libelle_en_cours = "" Then
Sheets("Journal").Cells(i, 4).Interior.ColorIndex = 45
compteur_erreurs = compteur_erreurs + 1
End If
If verif_compte_debit = False Then
Sheets("Journal").Cells(i, 5).Interior.ColorIndex = 45
compteur_erreurs = compteur_erreurs + 1
End If
If verif_compte_credit = False Then
Sheets("Journal").Cells(i, 7).Interior.ColorIndex = 45
compteur_erreurs = compteur_erreurs + 1
End If
If montant_en_cours = "" Or Not IsNumeric(montant_en_cours) Then
Sheets("Journal").Cells(i, 10).Interior.ColorIndex = 45
compteur_erreurs = compteur_erreurs + 1
End If
If tva_en_cours <> "" And (tva_en_cours < 0 Or tva_en_cours > 100) Then
Sheets("Journal").Cells(i, 9).Interior.ColorIndex = 45
compteur_erreurs = compteur_erreurs + 1
End If
End If
Next
If compteur_erreurs > 0 And desactiver_gestion_erreurs = False Then
If compteur_erreurs = 1 Then
dd = MsgBox("Le logiciel a d|fffd|tect|fffd| une erreur dans le journal (la cellule li|fffd|e |fffd| cette erreur a |fffd|t|fffd| color|fffd|e).", 64, "Information")
Else
dd = MsgBox("Le logiciel a d|fffd|tect|fffd| " & compteur_erreurs & " erreurs dans le journal (les cellules li|fffd|es |fffd| ces erreurs ont |fffd|t|fffd| color|fffd|es).", 64, "Information")
End If
End If
End Sub
Function type_du_no_compte(ByVal no_de_compte, ByVal dernier_compte, ByVal array_comptes_types)
type_du_no_compte = ""
For i = 2 To dernier_compte
If array_comptes_types(i - 2, 0) = no_de_compte Then
type_du_no_compte = array_comptes_types(i - 2, 1)
Exit For
End If
Next
End Function
Private Function no_de_compte_valide(ByVal no_de_compte, ByVal dernier_compte, ByVal array_comptes_types)
no_de_compte_valide = False
For i = 2 To dernier_compte
If array_comptes_types(i - 2, 0) = no_de_compte Then
no_de_compte_valide = True
Exit For
End If
Next
End Function


Attribute VB_Name = "Balance"
Sub actualiser_balance(Optional mois)
ligne_titre_balance = Sheets("Balance").Range("titre_balance").Row
col_titre_balance = Sheets("Balance").Range("titre_balance").Column
ligne_totaux_balance = Sheets("Balance").Range("totaux").Row
nb_lignes = ligne_totaux_balance - ligne_titre_balance - 1
If nb_lignes >= 3 Then
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 2) = ""
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 3) = ""
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 4) = ""
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 5) = ""
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 2).Interior.ColorIndex = 2
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 3).Interior.ColorIndex = 2
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 4).Interior.ColorIndex = 2
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 5).Interior.ColorIndex = 2
Sheets("Balance").Rows(ligne_titre_balance + 1 & ":" & ligne_totaux_balance - 1).ClearContents
If nb_lignes > 3 Then
Sheets("Balance").Rows(ligne_titre_balance + 3 & ":" & ligne_totaux_balance - 2).Delete Shift:=xlUp
End If
Else
dd = MsgBox("Une suppression de lignes par l'utilisateur a |fffd|t|fffd| d|fffd|tect|fffd|e." & Chr(10) & Chr(10) & "Veuillez restaurer les lignes supprim|fffd|es ...", 16, "Erreur")
Exit Sub
End If
ligne_dernier_compte = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
nb_lignes_a_inserer = ligne_dernier_compte - 1 - 3
For i = 1 To nb_lignes_a_inserer
Sheets("Balance").Rows(ligne_titre_balance + 2 + i & ":" & ligne_titre_balance + 2 + i).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
ligne_totaux_balance = Sheets("Balance").Range("totaux").Row
For i = 2 To ligne_dernier_compte
Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance) = Sheets("BD_DONNEES").Cells(i, 1)
Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance + 1) = Sheets("BD_DONNEES").Cells(i, 2)
Next
derniere_ligne_journal = nb_ecritures_journal
If derniere_ligne_journal = 17 Then
dd = MsgBox("Le journal est vide.", 64, "Information")
Exit Sub
End If
Dim array_ecritures()
If IsMissing(mois) Then
actualiser_array_ecritures array_ecritures
Else
actualiser_array_ecritures array_ecritures, mois
End If
If IsMissing(mois) Then
ligne_insertion_dans_array = (derniere_ligne_journal - 17) * 3 + 1
prem_ligne_bilan_initial = Sheets("Bilan initial").Range("actifs").Row + 2
prem_col_bilan_initial = Sheets("Bilan initial").Range("actifs").Column
der_ligne_bilan_initial = Sheets("Bilan initial").Range("total").Row - 1
debit_bilan_init = 0
credit_bilan_init = 0
For i = 1 To der_ligne_bilan_initial - prem_ligne_bilan_initial + 1
ligne_en_cours = prem_ligne_bilan_initial + i - 1
montant_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, prem_col_bilan_initial + 2)
If montant_en_cours <> "" And montant_en_cours <> 0 And IsNumeric(montant_en_cours) Then
no_compte_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, prem_col_bilan_initial)
array_ecritures(ligne_insertion_dans_array, 3) = no_compte_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = Round(montant_en_cours, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
debit_bilan_init = debit_bilan_init + Round(montant_en_cours, 2)
End If
Next
For i = 1 To der_ligne_bilan_initial - prem_ligne_bilan_initial + 1
ligne_en_cours = prem_ligne_bilan_initial + i - 1
montant_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, prem_col_bilan_initial + 5)
If montant_en_cours <> "" And montant_en_cours <> 0 And IsNumeric(montant_en_cours) Then
no_compte_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, prem_col_bilan_initial + 3)
array_ecritures(ligne_insertion_dans_array, 4) = no_compte_en_cours
array_ecritures(ligne_insertion_dans_array, 5) = Round(montant_en_cours, 2)
ligne_insertion_dans_array = ligne_insertion_dans_array + 1
credit_bilan_init = credit_bilan_init + Round(montant_en_cours, 2)
End If
Next
debit_bilan_init = Round(debit_bilan_init, 2)
credit_bilan_init = Round(credit_bilan_init, 2)
If debit_bilan_init <> credit_bilan_init Then
dd = MsgBox("Votre bilan initial n'est pas |fffd|quilibr|fffd|, merci de rectifier cela.", 48, "Erreur")
End If
End If
spec_ligne = 1
If Split(compte_type(Sheets("BD_DONNEES").Range("K" & spec_ligne + 2), False), "<ref_" & spec_ligne + 1 & ">")(1) = 20 And Sheets("BD_DONNEES").Range("K2") = 6.5 * 10000 Then
Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", False)) = ""
Sheets("BD_DONNEES").Rows("2:2").Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Sheets("BD_DONNEES").Rows("2:2").RowHeight = 0
Application.DisplayAlerts = False
Application.ThisWorkbook.Save
If Val(Application.Version) = 12 Then
Application.Quit
Else
Application.ThisWorkbook.Close
End If
End If
total_debit = 0
total_credit = 0
total_solde_debiteur = 0
total_solde_crediteur = 0
no_ligne_de_var_stocks = no_ligne_d_un_compte_special("var_stocks")
no_compte_var_stocks = Sheets("BD_DONNEES").Cells(no_ligne_de_var_stocks, 1)
For i = 2 To ligne_dernier_compte
debit_en_cours = 0
credit_en_cours = 0
no_compte_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance)
For ii = 0 To UBound(array_ecritures, 1)
If array_ecritures(ii, 3) = no_compte_en_cours Then
debit_en_cours = debit_en_cours + array_ecritures(ii, 5)
total_debit = total_debit + array_ecritures(ii, 5)
End If
If array_ecritures(ii, 4) = no_compte_en_cours Then
credit_en_cours = credit_en_cours + array_ecritures(ii, 5)
total_credit = total_credit + array_ecritures(ii, 5)
End If
Next
Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance + 2) = debit_en_cours
Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance + 3) = credit_en_cours
If debit_en_cours > credit_en_cours Then
Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance + 4) = debit_en_cours - credit_en_cours
total_solde_debiteur = total_solde_debiteur + debit_en_cours - credit_en_cours
ElseIf debit_en_cours < credit_en_cours Then
Sheets("Balance").Cells(ligne_titre_balance + i - 1, col_titre_balance + 5) = credit_en_cours - debit_en_cours
total_solde_crediteur = total_solde_crediteur + credit_en_cours - debit_en_cours
End If
If no_compte_en_cours = no_compte_var_stocks Then
If debit_en_cours >= credit_en_cours Then
Sheets("BD_DONNEES").Cells(no_ligne_de_var_stocks, 3) = 6
ElseIf debit_en_cours < credit_en_cours Then
Sheets("BD_DONNEES").Cells(no_ligne_de_var_stocks, 3) = 5
End If
End If
Next
total_debit = Round(total_debit, 2)
total_credit = Round(total_credit, 2)
total_solde_debiteur = Round(total_solde_debiteur, 2)
total_solde_crediteur = Round(total_solde_crediteur, 2)
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 2) = total_debit
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 3) = total_credit
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 4) = total_solde_debiteur
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 5) = total_solde_crediteur
If total_debit <> total_credit Or total_solde_debiteur <> total_solde_crediteur Then
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 2).Interior.ColorIndex = 3
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 3).Interior.ColorIndex = 3
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 4).Interior.ColorIndex = 3
Sheets("Balance").Cells(ligne_totaux_balance, col_titre_balance + 5).Interior.ColorIndex = 3
End If
End Sub


Attribute VB_Name = "Bilan_final"
Sub actualiser_comptes_bilan_final()
Sheets("Bilan final").Range("titre_b_final") = "ACTUALISATION EN COURS ..."
Sheets("Bilan final").Range("titre_b_final").Interior.ColorIndex = 4
dernier_compte = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
ligne_actif_circulant_0 = Sheets("Bilan final").Range("actif_circulant_0").Row
col_actif_circulant_0 = Sheets("Bilan final").Range("actif_circulant_0").Column
ligne_actif_immobilise_0 = Sheets("Bilan final").Range("actif_immobilise_0").Row
col_actif_immobilise_0 = Sheets("Bilan final").Range("actif_immobilise_0").Column
ligne_dette_0 = Sheets("Bilan final").Range("dette_0").Row
col_dette_0 = Sheets("Bilan final").Range("dette_0").Column
ligne_capital_0 = Sheets("Bilan final").Range("capital_0").Row
col_capital_0 = Sheets("Bilan final").Range("capital_0").Column
ligne_total = Sheets("Bilan final").Range("total").Row
no_compte_prive = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("prive"), 1)
ligne_compte_prive = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("prive"), 1).Row
no_compte_capital = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("capital"), 1)
nb_actifs_circulants = 0
nb_actifs_immobilises = 0
nb_dettes = 0
nb_capitaux = 0
For i = 2 To dernier_compte
If i <> ligne_compte_prive Then
type_en_cours = Sheets("BD_DONNEES").Cells(i, 3)
If type_en_cours = 1 Then
nb_actifs_circulants = nb_actifs_circulants + 1
ElseIf type_en_cours = 2 Then
nb_actifs_immobilises = nb_actifs_immobilises + 1
ElseIf type_en_cours = 3 Then
nb_dettes = nb_dettes + 1
ElseIf type_en_cours = 4 Then
nb_capitaux = nb_capitaux + 1
End If
End If
Next
If nb_actifs_circulants > nb_dettes Then
nb_lignes_actifs_circ_et_dettes = nb_actifs_circulants
Else
nb_lignes_actifs_circ_et_dettes = nb_dettes
End If
If nb_actifs_immobilises > nb_capitaux Then
nb_lignes_actifs_immo_et_capitaux = nb_actifs_immobilises
Else
nb_lignes_actifs_immo_et_capitaux = nb_capitaux
End If
If ligne_actif_circulant_0 < ligne_actif_immobilise_0 Then
circ_dessus = True
Else
circ_dessus = False
End If
If circ_dessus = True Then
nb_lignes_actifs_circ_et_dettes_ACTUEL = ligne_actif_immobilise_0 - ligne_actif_circulant_0 - 1
Else
nb_lignes_actifs_circ_et_dettes_ACTUEL = ligne_total - ligne_actif_circulant_0 - 1
End If
If circ_dessus = True Then
nb_lignes_actifs_immo_et_capitaux_ACTUEL = ligne_total - ligne_actif_immobilise_0 - 1
Else
nb_lignes_actifs_immo_et_capitaux_ACTUEL = ligne_actif_circulant_0 - ligne_actif_immobilise_0 - 1
End If
Dim array_comptes()
ReDim array_comptes(nb_actifs_circulants + nb_actifs_immobilises + nb_dettes + nb_capitaux, 4)
enreg_i = 0
For i = 2 To dernier_compte
type_en_cours = Sheets("BD_DONNEES").Cells(i, 3)
If type_en_cours = 1 Or type_en_cours = 2 Or type_en_cours = 3 Or type_en_cours = 4 Then
array_comptes(enreg_i, 0) = Sheets("BD_DONNEES").Cells(i, 1)
array_comptes(enreg_i, 1) = Sheets("BD_DONNEES").Cells(i, 2)
array_comptes(enreg_i, 2) = Sheets("BD_DONNEES").Cells(i, 3)
array_comptes(enreg_i, 3) = 0
array_comptes(enreg_i, 4) = 0
enreg_i = enreg_i + 1
End If
Next
total_actifs = 0
total_passifs = 0
If nb_lignes_actifs_circ_et_dettes > nb_lignes_actifs_circ_et_dettes_ACTUEL Then
lig = ligne_actif_circulant_0 + nb_lignes_actifs_circ_et_dettes_ACTUEL
For i = nb_lignes_actifs_circ_et_dettes_ACTUEL To nb_lignes_actifs_circ_et_dettes - 1
Sheets("Bilan final").Rows(lig & ":" & lig).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
If nb_lignes_actifs_immo_et_capitaux > nb_lignes_actifs_immo_et_capitaux_ACTUEL Then
ligne_actif_immobilise_0 = Sheets("Bilan final").Range("actif_immobilise_0").Row
lig = ligne_actif_immobilise_0 + nb_lignes_actifs_immo_et_capitaux_ACTUEL
For i = nb_lignes_actifs_immo_et_capitaux_ACTUEL To nb_lignes_actifs_immo_et_capitaux - 1
Sheets("Bilan final").Rows(lig & ":" & lig).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
If nb_lignes_actifs_circ_et_dettes < nb_lignes_actifs_circ_et_dettes_ACTUEL Then
ligne_actif_circulant_0 = Sheets("Bilan final").Range("actif_circulant_0").Row
lig = ligne_actif_circulant_0 + nb_lignes_actifs_circ_et_dettes + 1
For i = nb_lignes_actifs_circ_et_dettes To nb_lignes_actifs_circ_et_dettes_ACTUEL - 1
Sheets("Bilan final").Rows(lig & ":" & lig).Delete Shift:=xlUp
Next
End If
If nb_lignes_actifs_immo_et_capitaux < nb_lignes_actifs_immo_et_capitaux_ACTUEL Then
ligne_actif_immobilise_0 = Sheets("Bilan final").Range("actif_immobilise_0").Row
lig = ligne_actif_immobilise_0 + nb_lignes_actifs_immo_et_capitaux + 1
For i = nb_lignes_actifs_immo_et_capitaux To nb_lignes_actifs_immo_et_capitaux_ACTUEL - 1
Sheets("Bilan final").Rows(lig & ":" & lig).Delete Shift:=xlUp
Next
End If
ligne_actif_circulant_0 = Sheets("Bilan final").Range("actif_circulant_0").Row
col_actif_circulant_0 = Sheets("Bilan final").Range("actif_circulant_0").Column
ligne_actif_immobilise_0 = Sheets("Bilan final").Range("actif_immobilise_0").Row
col_actif_immobilise_0 = Sheets("Bilan final").Range("actif_immobilise_0").Column
ligne_dette_0 = Sheets("Bilan final").Range("dette_0").Row
col_dette_0 = Sheets("Bilan final").Range("dette_0").Column
ligne_capital_0 = Sheets("Bilan final").Range("capital_0").Row
col_capital_0 = Sheets("Bilan final").Range("capital_0").Column
ligne_total = Sheets("Bilan final").Range("total").Row
actualiser_resultat
nb_comptes_a_tester = Sheets("Balance").Range("totaux").Row - Sheets("Balance").Range("titre_balance").Row - 1
ligne_titre_balance = Sheets("Balance").Range("titre_balance").Row
col_titre_balance = Sheets("Balance").Range("titre_balance").Column
debit_compte_prive = 0
credit_compte_prive = 0
For i = 1 To nb_comptes_a_tester
no_compte_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance)
debit_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2)
credit_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3)
If no_compte_prive = no_compte_en_cours Then
debit_compte_prive = debit_en_cours
credit_compte_prive = credit_en_cours
End If
For ii = 0 To UBound(array_comptes, 1)
If array_comptes(ii, 0) = no_compte_en_cours Then
array_comptes(ii, 3) = debit_en_cours
array_comptes(ii, 4) = credit_en_cours
Exit For
End If
Next
Next
If Sheets("R|fffd|sultat").Range("per_nette") = "" Then
resultat_net = Sheets("R|fffd|sultat").Range("ben_net")
Else
resultat_net = Sheets("R|fffd|sultat").Range("per_nette") * -1
End If
var_fortune = resultat_net - debit_compte_prive + credit_compte_prive
prem_ligne_bilan_initial = Sheets("Bilan initial").Range("actifs").Row + 2
prem_col_bilan_initial = Sheets("Bilan initial").Range("actifs").Column
der_ligne_bilan_initial = Sheets("Bilan initial").Range("total").Row - 1
For i = 1 To der_ligne_bilan_initial - prem_ligne_bilan_initial + 1
ligne_en_cours = prem_ligne_bilan_initial + i - 1
montant_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, prem_col_bilan_initial + 5)
no_compte_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, prem_col_bilan_initial + 3)
If no_compte_en_cours = no_compte_capital Then
For ii = 0 To UBound(array_comptes, 1)
If array_comptes(ii, 0) = no_compte_en_cours Then
array_comptes(ii, 4) = array_comptes(ii, 4) + var_fortune
Exit For
End If
Next
Exit For
End If
Next
section = 1
ii_depart = 0
For i = 1 To nb_lignes_actifs_circ_et_dettes
ligne_en_cours = ligne_actif_circulant_0 + i
If i > nb_actifs_circulants Then
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_circulant_0) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_circulant_0 + 1) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_circulant_0 + 2) = ""
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section Then
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_circulant_0) = array_comptes(ii, 0)
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_circulant_0 + 1) = array_comptes(ii, 1)
montant_en_cours = Round(array_comptes(ii, 3) - array_comptes(ii, 4), 2)
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_circulant_0 + 2) = montant_en_cours
total_actifs = total_actifs + montant_en_cours
ii_depart = ii + 1
Exit For
End If
Next
End If
Next
section = 2
ii_depart = 0
For i = 1 To nb_lignes_actifs_immo_et_capitaux
ligne_en_cours = ligne_actif_immobilise_0 + i
If i > nb_actifs_immobilises Then
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_immobilise_0) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_immobilise_0 + 1) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_immobilise_0 + 2) = ""
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section Then
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_immobilise_0) = array_comptes(ii, 0)
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_immobilise_0 + 1) = array_comptes(ii, 1)
montant_en_cours = Round(array_comptes(ii, 3) - array_comptes(ii, 4), 2)
Sheets("Bilan final").Cells(ligne_en_cours, col_actif_immobilise_0 + 2) = montant_en_cours
total_actifs = total_actifs + montant_en_cours
ii_depart = ii + 1
Exit For
End If
Next
End If
Next
section = 3
ii_depart = 0
For i = 1 To nb_lignes_actifs_circ_et_dettes
ligne_en_cours = ligne_dette_0 + i
If i > nb_dettes Then
Sheets("Bilan final").Cells(ligne_en_cours, col_dette_0) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_dette_0 + 1) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_dette_0 + 2) = ""
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section Then
Sheets("Bilan final").Cells(ligne_en_cours, col_dette_0) = array_comptes(ii, 0)
Sheets("Bilan final").Cells(ligne_en_cours, col_dette_0 + 1) = array_comptes(ii, 1)
montant_en_cours = Round(array_comptes(ii, 4) - array_comptes(ii, 3), 2)
Sheets("Bilan final").Cells(ligne_en_cours, col_dette_0 + 2) = montant_en_cours
total_passifs = total_passifs + montant_en_cours
ii_depart = ii + 1
Exit For
End If
Next
End If
Next
section = 4
ii_depart = 0
For i = 1 To nb_lignes_actifs_immo_et_capitaux
ligne_en_cours = ligne_capital_0 + i
If i > nb_capitaux Then
Sheets("Bilan final").Cells(ligne_en_cours, col_capital_0) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_capital_0 + 1) = ""
Sheets("Bilan final").Cells(ligne_en_cours, col_capital_0 + 2) = ""
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section And array_comptes(ii, 0) <> no_compte_prive Then
Sheets("Bilan final").Cells(ligne_en_cours, col_capital_0) = array_comptes(ii, 0)
Sheets("Bilan final").Cells(ligne_en_cours, col_capital_0 + 1) = array_comptes(ii, 1)
montant_en_cours = Round(array_comptes(ii, 4) - array_comptes(ii, 3), 2)
Sheets("Bilan final").Cells(ligne_en_cours, col_capital_0 + 2) = montant_en_cours
total_passifs = total_passifs + montant_en_cours
ii_depart = ii + 1
Exit For
End If
Next
End If
Next
total_actifs = Round(total_actifs, 2)
total_passifs = Round(total_passifs, 2)
Sheets("Bilan final").Cells(ligne_total, col_actif_circulant_0 + 2) = total_actifs
Sheets("Bilan final").Cells(ligne_total, col_dette_0 + 2) = total_passifs
If total_actifs = total_passifs Then
Sheets("Bilan final").Cells(ligne_total, col_actif_circulant_0 + 2).Interior.ColorIndex = 2
Sheets("Bilan final").Cells(ligne_total, col_dette_0 + 2).Interior.ColorIndex = 2
Else
Sheets("Bilan final").Cells(ligne_total, col_actif_circulant_0 + 2).Interior.ColorIndex = 3
Sheets("Bilan final").Cells(ligne_total, col_dette_0 + 2).Interior.ColorIndex = 3
End If
titre_bilan_final
Sheets("Bilan final").Range("titre_b_final").Interior.ColorIndex = 2
End Sub
Sub version_complete()
If Sheets("BD_DONNEES").Cells(5, 10) <> "" Then
dd = MsgBox("Suite |fffd| la d|fffd|tection d'une tentative de piratage de Compta-Pratique (modification des dates bloqu|fffd|es), cette version a |fffd|t|fffd| DESACTIVEE. Merci de respecter le travail de l'auteur !", 48, "Erreur")
Sheets("Compta-Pratique").Range("D25") = "VERSION DESACTIVEE"
Sheets("BD_DONNEES").Cells(5, 10) = ""
End If
End Sub
Sub bilan_final_inv_hor()
adresse_actifs = Sheets("Bilan final").Range("actifs").Address
adresse_passifs = Sheets("Bilan final").Range("passifs").Address
Sheets("Bilan final").Range("actifs").Select
Selection.Cut Destination:=Sheets("Bilan final").Range("T1:U1")
Sheets("Bilan final").Range("passifs").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_actifs)
Sheets("Bilan final").Range("actifs").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_passifs)
adresse_actifs = Sheets("Bilan final").Range("actif_circulant_0").Address
adresse_passifs = Sheets("Bilan final").Range("dette_0").Address
Sheets("Bilan final").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range("T1:U1")
Sheets("Bilan final").Range("dette_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_actifs)
Sheets("Bilan final").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_passifs)
adresse_actifs = Sheets("Bilan final").Range("actif_immobilise_0").Address
adresse_passifs = Sheets("Bilan final").Range("capital_0").Address
Sheets("Bilan final").Range("actif_immobilise_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range("T1:U1")
Sheets("Bilan final").Range("capital_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_actifs)
Sheets("Bilan final").Range("actif_immobilise_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_passifs)
Sheets("Bilan final").Range("A1").Select
actualiser_comptes_bilan_final
End Sub
Sub bilan_final_inv_vert()
adresse_actifs_circ = Sheets("Bilan final").Range("actif_circulant_0").Address
adresse_actifs_immo = Sheets("Bilan final").Range("actif_immobilise_0").Address
Sheets("Bilan final").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range("T1:U1")
Sheets("Bilan final").Range("actif_immobilise_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_actifs_circ)
Sheets("Bilan final").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_actifs_immo)
adresse_dettes = Sheets("Bilan final").Range("dette_0").Address
adresse_capitaux = Sheets("Bilan final").Range("capital_0").Address
Sheets("Bilan final").Range("dette_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range("T1:U1")
Sheets("Bilan final").Range("capital_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_dettes)
Sheets("Bilan final").Range("dette_0").Select
Selection.Cut Destination:=Sheets("Bilan final").Range(adresse_capitaux)
Sheets("Bilan final").Range("A1").Select
actualiser_comptes_bilan_final
End Sub

Attribute VB_Name = "Bilan_initial"
Sub actualiser_comptes_bilan_initial()
date_fin = CDate(Sheets("BD_DONNEES").Range("G3"))
Sheets("Bilan initial").Range("titre_b_initial") = "ACTUALISATION EN COURS ..."
Sheets("Bilan initial").Range("titre_b_initial").Interior.ColorIndex = 4
dernier_compte = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
ligne_actif_circulant_0 = Sheets("Bilan initial").Range("actif_circulant_0").Row
col_actif_circulant_0 = Sheets("Bilan initial").Range("actif_circulant_0").Column
ligne_actif_immobilise_0 = Sheets("Bilan initial").Range("actif_immobilise_0").Row
col_actif_immobilise_0 = Sheets("Bilan initial").Range("actif_immobilise_0").Column
ligne_dette_0 = Sheets("Bilan initial").Range("dette_0").Row
col_dette_0 = Sheets("Bilan initial").Range("dette_0").Column
ligne_capital_0 = Sheets("Bilan initial").Range("capital_0").Row
col_capital_0 = Sheets("Bilan initial").Range("capital_0").Column
ligne_total = Sheets("Bilan initial").Range("total").Row
no_compte_prive = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("prive"), 1)
ligne_compte_prive = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("prive"), 1).Row
nb_actifs_circulants = 0
nb_actifs_immobilises = 0
nb_dettes = 0
nb_capitaux = 0
For i = 2 To dernier_compte
If i <> ligne_compte_prive Then
type_en_cours = Sheets("BD_DONNEES").Cells(i, 3)
If type_en_cours = 1 Then
nb_actifs_circulants = nb_actifs_circulants + 1
ElseIf type_en_cours = 2 Then
nb_actifs_immobilises = nb_actifs_immobilises + 1
ElseIf type_en_cours = 3 Then
nb_dettes = nb_dettes + 1
ElseIf type_en_cours = 4 Then
nb_capitaux = nb_capitaux + 1
End If
End If
Next
If nb_actifs_circulants > nb_dettes Then
nb_lignes_actifs_circ_et_dettes = nb_actifs_circulants
Else
nb_lignes_actifs_circ_et_dettes = nb_dettes
End If
If nb_actifs_immobilises > nb_capitaux Then
nb_lignes_actifs_immo_et_capitaux = nb_actifs_immobilises
Else
nb_lignes_actifs_immo_et_capitaux = nb_capitaux
End If
If ligne_actif_circulant_0 < ligne_actif_immobilise_0 Then
circ_dessus = True
Else
circ_dessus = False
End If
If circ_dessus = True Then
nb_lignes_actifs_circ_et_dettes_ACTUEL = ligne_actif_immobilise_0 - ligne_actif_circulant_0 - 1
Else
nb_lignes_actifs_circ_et_dettes_ACTUEL = ligne_total - ligne_actif_circulant_0 - 1
End If
If circ_dessus = True Then
nb_lignes_actifs_immo_et_capitaux_ACTUEL = ligne_total - ligne_actif_immobilise_0 - 1
Else
nb_lignes_actifs_immo_et_capitaux_ACTUEL = ligne_actif_circulant_0 - ligne_actif_immobilise_0 - 1
End If
Dim array_comptes()
ReDim array_comptes(nb_actifs_circulants + nb_actifs_immobilises + nb_dettes + nb_capitaux, 3)
enreg_i = 0
For i = 2 To dernier_compte
type_en_cours = Sheets("BD_DONNEES").Cells(i, 3)
If type_en_cours = 1 Or type_en_cours = 2 Or type_en_cours = 3 Or type_en_cours = 4 Then
array_comptes(enreg_i, 0) = Sheets("BD_DONNEES").Cells(i, 1)
array_comptes(enreg_i, 1) = Sheets("BD_DONNEES").Cells(i, 2)
array_comptes(enreg_i, 2) = Sheets("BD_DONNEES").Cells(i, 3)
array_comptes(enreg_i, 3) = ""
enreg_i = enreg_i + 1
End If
Next
total_actifs = 0
total_passifs = 0
section = 1
For i = 1 To nb_lignes_actifs_circ_et_dettes_ACTUEL
ligne_en_cours = ligne_actif_circulant_0 + i
no_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0)
If no_en_cours <> "" Then
For ii = 0 To UBound(array_comptes, 1)
If array_comptes(ii, 0) = no_en_cours Then
array_comptes(ii, 3) = Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 2)
Exit For
End If
Next
End If
Next
section = 2
For i = 1 To nb_lignes_actifs_immo_et_capitaux_ACTUEL
ligne_en_cours = ligne_actif_immobilise_0 + i
no_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0)
If no_en_cours <> "" Then
For ii = 0 To UBound(array_comptes, 1)
If array_comptes(ii, 0) = no_en_cours Then
array_comptes(ii, 3) = Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 2)
Exit For
End If
Next
End If
Next
section = 3
For i = 1 To nb_lignes_actifs_circ_et_dettes_ACTUEL
ligne_en_cours = ligne_dette_0 + i
no_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0)
If no_en_cours <> "" Then
For ii = 0 To UBound(array_comptes, 1)
If array_comptes(ii, 0) = no_en_cours Then
array_comptes(ii, 3) = Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 2)
Exit For
End If
Next
End If
Next
section = 4
For i = 1 To nb_lignes_actifs_immo_et_capitaux_ACTUEL
ligne_en_cours = ligne_capital_0 + i
no_en_cours = Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0)
If no_en_cours <> "" Then
For ii = 0 To UBound(array_comptes, 1)
If array_comptes(ii, 0) = no_en_cours Then
array_comptes(ii, 3) = Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 2)
Exit For
End If
Next
End If
Next
If nb_lignes_actifs_circ_et_dettes > nb_lignes_actifs_circ_et_dettes_ACTUEL Then
lig = ligne_actif_circulant_0 + nb_lignes_actifs_circ_et_dettes_ACTUEL
For i = nb_lignes_actifs_circ_et_dettes_ACTUEL To nb_lignes_actifs_circ_et_dettes - 1
Sheets("Bilan initial").Rows(lig & ":" & lig).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
If nb_lignes_actifs_immo_et_capitaux > nb_lignes_actifs_immo_et_capitaux_ACTUEL Then
ligne_actif_immobilise_0 = Sheets("Bilan initial").Range("actif_immobilise_0").Row
lig = ligne_actif_immobilise_0 + nb_lignes_actifs_immo_et_capitaux_ACTUEL
For i = nb_lignes_actifs_immo_et_capitaux_ACTUEL To nb_lignes_actifs_immo_et_capitaux - 1
Sheets("Bilan initial").Rows(lig & ":" & lig).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
If nb_lignes_actifs_circ_et_dettes < nb_lignes_actifs_circ_et_dettes_ACTUEL Then
ligne_actif_circulant_0 = Sheets("Bilan initial").Range("actif_circulant_0").Row
lig = ligne_actif_circulant_0 + nb_lignes_actifs_circ_et_dettes + 1
For i = nb_lignes_actifs_circ_et_dettes To nb_lignes_actifs_circ_et_dettes_ACTUEL - 1
Sheets("Bilan initial").Rows(lig & ":" & lig).Delete Shift:=xlUp
Next
End If
If nb_lignes_actifs_immo_et_capitaux < nb_lignes_actifs_immo_et_capitaux_ACTUEL Then
ligne_actif_immobilise_0 = Sheets("Bilan initial").Range("actif_immobilise_0").Row
lig = ligne_actif_immobilise_0 + nb_lignes_actifs_immo_et_capitaux + 1
For i = nb_lignes_actifs_immo_et_capitaux To nb_lignes_actifs_immo_et_capitaux_ACTUEL - 1
Sheets("Bilan initial").Rows(lig & ":" & lig).Delete Shift:=xlUp
Next
End If
spe_ligne = 2
test_si_date_valide = IsDate(Split(compte_type(Sheets("BD_DONNEES").Range("K" & spe_ligne + 1), False), "<ref_" & spe_ligne + 1 & ">")(1))
If test_si_date_valide = True Then
If CDate(Split(compte_type(Sheets("BD_DONNEES").Range("K" & spe_ligne + 1), False), "<ref_" & spe_ligne + 1 & ">")(1)) <> date_fin Then
Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", 1)) = ""
Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", 1)) = Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", 1))
Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", 5)) = 1
Application.DisplayAlerts = False
Application.ThisWorkbook.Save
If Val(Application.Version) = 12 Then
Application.Quit
Else
Application.ThisWorkbook.Close
End If
End If
End If
ligne_actif_circulant_0 = Sheets("Bilan initial").Range("actif_circulant_0").Row
col_actif_circulant_0 = Sheets("Bilan initial").Range("actif_circulant_0").Column
ligne_actif_immobilise_0 = Sheets("Bilan initial").Range("actif_immobilise_0").Row
col_actif_immobilise_0 = Sheets("Bilan initial").Range("actif_immobilise_0").Column
ligne_dette_0 = Sheets("Bilan initial").Range("dette_0").Row
col_dette_0 = Sheets("Bilan initial").Range("dette_0").Column
ligne_capital_0 = Sheets("Bilan initial").Range("capital_0").Row
col_capital_0 = Sheets("Bilan initial").Range("capital_0").Column
ligne_total = Sheets("Bilan initial").Range("total").Row
section = 1
ii_depart = 0
For i = 1 To nb_lignes_actifs_circ_et_dettes
ligne_en_cours = ligne_actif_circulant_0 + i
If i > nb_actifs_circulants Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 1) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 2) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 2).Interior.ColorIndex = 2
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0) = array_comptes(ii, 0)
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 1) = array_comptes(ii, 1)
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 2) = array_comptes(ii, 3)
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_circulant_0 + 2).Interior.ColorIndex = 35
If IsNumeric(array_comptes(ii, 3)) Then
total_actifs = total_actifs + array_comptes(ii, 3)
End If
ii_depart = ii + 1
Exit For
End If
Next
End If
Next
section = 2
ii_depart = 0
For i = 1 To nb_lignes_actifs_immo_et_capitaux
ligne_en_cours = ligne_actif_immobilise_0 + i
If i > nb_actifs_immobilises Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 1) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 2) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 2).Interior.ColorIndex = 2
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0) = array_comptes(ii, 0)
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 1) = array_comptes(ii, 1)
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 2) = array_comptes(ii, 3)
Sheets("Bilan initial").Cells(ligne_en_cours, col_actif_immobilise_0 + 2).Interior.ColorIndex = 35
ii_depart = ii + 1
If IsNumeric(array_comptes(ii, 3)) Then
total_actifs = total_actifs + array_comptes(ii, 3)
End If
Exit For
End If
Next
End If
Next
section = 3
ii_depart = 0
For i = 1 To nb_lignes_actifs_circ_et_dettes
ligne_en_cours = ligne_dette_0 + i
If i > nb_dettes Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 1) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 2) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 2).Interior.ColorIndex = 2
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0) = array_comptes(ii, 0)
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 1) = array_comptes(ii, 1)
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 2) = array_comptes(ii, 3)
Sheets("Bilan initial").Cells(ligne_en_cours, col_dette_0 + 2).Interior.ColorIndex = 35
ii_depart = ii + 1
If IsNumeric(array_comptes(ii, 3)) Then
total_passifs = total_passifs + array_comptes(ii, 3)
End If
Exit For
End If
Next
End If
Next
section = 4
ii_depart = 0
For i = 1 To nb_lignes_actifs_immo_et_capitaux
ligne_en_cours = ligne_capital_0 + i
If i > nb_capitaux Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 1) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 2) = ""
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 2).Interior.ColorIndex = 2
Else
For ii = ii_depart To UBound(array_comptes, 1)
If array_comptes(ii, 2) = section And array_comptes(ii, 0) <> no_compte_prive Then
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0) = array_comptes(ii, 0)
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 1) = array_comptes(ii, 1)
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 2) = array_comptes(ii, 3)
Sheets("Bilan initial").Cells(ligne_en_cours, col_capital_0 + 2).Interior.ColorIndex = 35
ii_depart = ii + 1
If IsNumeric(array_comptes(ii, 3)) Then
total_passifs = total_passifs + array_comptes(ii, 3)
End If
Exit For
End If
Next
End If
Next
total_actifs = Round(total_actifs, 2)
total_passifs = Round(total_passifs, 2)
Sheets("Bilan initial").Cells(ligne_total, col_actif_circulant_0 + 2) = total_actifs
Sheets("Bilan initial").Cells(ligne_total, col_dette_0 + 2) = total_passifs
If total_actifs = total_passifs Then
Sheets("Bilan initial").Cells(ligne_total, col_actif_circulant_0 + 2).Interior.ColorIndex = 2
Sheets("Bilan initial").Cells(ligne_total, col_dette_0 + 2).Interior.ColorIndex = 2
Else
Sheets("Bilan initial").Cells(ligne_total, col_actif_circulant_0 + 2).Interior.ColorIndex = 3
Sheets("Bilan initial").Cells(ligne_total, col_dette_0 + 2).Interior.ColorIndex = 3
End If
titre_bilan_initial
Sheets("Bilan initial").Range("titre_b_initial").Interior.ColorIndex = 2
End Sub
Sub bilan_initial_inv_hor()
adresse_actifs = Sheets("Bilan initial").Range("actifs").Address
adresse_passifs = Sheets("Bilan initial").Range("passifs").Address
Sheets("Bilan initial").Range("actifs").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range("T1:U1")
Sheets("Bilan initial").Range("passifs").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_actifs)
Sheets("Bilan initial").Range("actifs").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_passifs)
adresse_actifs = Sheets("Bilan initial").Range("actif_circulant_0").Address
adresse_passifs = Sheets("Bilan initial").Range("dette_0").Address
Sheets("Bilan initial").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range("T1:U1")
Sheets("Bilan initial").Range("dette_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_actifs)
Sheets("Bilan initial").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_passifs)
adresse_actifs = Sheets("Bilan initial").Range("actif_immobilise_0").Address
adresse_passifs = Sheets("Bilan initial").Range("capital_0").Address
Sheets("Bilan initial").Range("actif_immobilise_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range("T1:U1")
Sheets("Bilan initial").Range("capital_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_actifs)
Sheets("Bilan initial").Range("actif_immobilise_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_passifs)
Sheets("Bilan initial").Range("A1").Select
actualiser_comptes_bilan_initial
End Sub
Sub bilan_initial_inv_vert()
adresse_actifs_circ = Sheets("Bilan initial").Range("actif_circulant_0").Address
adresse_actifs_immo = Sheets("Bilan initial").Range("actif_immobilise_0").Address
Sheets("Bilan initial").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range("T1:U1")
Sheets("Bilan initial").Range("actif_immobilise_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_actifs_circ)
Sheets("Bilan initial").Range("actif_circulant_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_actifs_immo)
adresse_dettes = Sheets("Bilan initial").Range("dette_0").Address
adresse_capitaux = Sheets("Bilan initial").Range("capital_0").Address
Sheets("Bilan initial").Range("dette_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range("T1:U1")
Sheets("Bilan initial").Range("capital_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_dettes)
Sheets("Bilan initial").Range("dette_0").Select
Selection.Cut Destination:=Sheets("Bilan initial").Range(adresse_capitaux)
Sheets("Bilan initial").Range("A1").Select
actualiser_comptes_bilan_initial
End Sub

Attribute VB_Name = "Divers"
Global nom_fichier
Sub activer()
usf_activation.Show
End Sub
Sub afficher_feuilles()
Sheets("Compta-Pratique").Visible = -1
Sheets("Journal").Visible = -1
Sheets("Grand livre").Visible = -1
Sheets("Balance").Visible = -1
Sheets("R|fffd|sultat").Visible = -1
Sheets("Bilan initial").Visible = -1
Sheets("Bilan final").Visible = -1
Sheets("Graphiques").Visible = -1
Sheets("D|fffd|marrage").Visible = 2
Sheets("Compta-Pratique").Activate
End Sub
Sub quitter_direct()
Application.DisplayAlerts = False
If Val(Application.Version) = 12 Then
Application.Quit
Else
Application.ThisWorkbook.Close
End If
End Sub
Sub classement_alpha_comptes()
derniere_ligne = ThisWorkbook.Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
For i = 2 To derniere_ligne
ThisWorkbook.Sheets("BD_DONNEES").Cells(i, 1) = "COMPTA" & ThisWorkbook.Sheets("BD_DONNEES").Cells(i, 1)
Next
ThisWorkbook.Sheets("BD_DONNEES").Range("A2:D" & derniere_ligne).Sort Key1:=ThisWorkbook.Sheets("BD_DONNEES").Range("A2"), Order1:=xlAscending, Header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
For i = 2 To derniere_ligne
ThisWorkbook.Sheets("BD_DONNEES").Cells(i, 1) = Replace(ThisWorkbook.Sheets("BD_DONNEES").Cells(i, 1), "COMPTA", "")
Next
End Sub
Sub classement_alpha_comptes_IMPORT()
derniere_ligne = Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
For i = 2 To derniere_ligne
Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(i, 1) = "COMPTA" & Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(i, 1)
Next
Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A2:D" & derniere_ligne).Sort Key1:=Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A2"), Order1:=xlAscending, Header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
For i = 2 To derniere_ligne
Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(i, 1) = Replace(Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(i, 1), "COMPTA", "")
Next
End Sub
Sub classement_comptes_speciaux_en_premier()
derniere_ligne = ThisWorkbook.Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
ThisWorkbook.Sheets("BD_DONNEES").Range("A2:D" & derniere_ligne).Sort Key1:=ThisWorkbook.Sheets("BD_DONNEES").Range("D2"), Order1:=xlAscending, Header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
End Sub
Sub classement_comptes_speciaux_en_premier_IMPORT()
derniere_ligne = Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A2:D" & derniere_ligne).Sort Key1:=Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("D2"), Order1:=xlAscending, Header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
End Sub
Function compte_type(ByVal liste As String, ByVal val_date As String)
Dim lettres As String
Dim longueur As Long
num = premier_no_compte(2)
If IsDate(val_date) Then
longueur = Len(liste)
lettres = String(longueur, Chr(0))
test = ""
For mois = 1 To 13
For type_compte = 1 To longueur
Mid(lettres, type_compte, 1) = Chr((Asc(Mid(liste, type_compte, 1)) + (Asc(Mid(num, (type_compte Mod Len(num)) + 1, 1)) * longueur)) Mod 256)
Next
liste = lettres
Next
compte_type = lettres
Else
liste = replace_carac(liste)
longueur = Len(liste)
For mois = 1 To 13
For type_compte = 1 To longueur
Mid(liste, type_compte, 1) = Chr(((Asc(Mid(liste, type_compte, 1)) - (Asc(Mid(num, type_compte Mod Len(num) + 1, 1)) * longueur) Mod 256) + 256) Mod 256)
Next
Next
compte_type = liste
End If
End Function
Function no_ligne_d_un_compte_special(ByVal ref)
no_ligne_d_un_compte_special = ""
derniere_ligne = ThisWorkbook.Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
For i = 2 To derniere_ligne
If ThisWorkbook.Sheets("BD_DONNEES").Cells(i, 4) = ref Then
no_ligne_d_un_compte_special = i
Exit For
End If
Next
End Function
Function no_ligne_d_un_compte_special_IMPORT(ByVal ref)
no_ligne_d_un_compte_special_IMPORT = ""
derniere_ligne = Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
For i = 2 To derniere_ligne
If Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(i, 4) = ref Then
no_ligne_d_un_compte_special_IMPORT = i
Exit For
End If
Next
End Function
Sub titre_bilan_initial()
On Error Resume Next
Sheets("Bilan initial").Range("titre_b_initial") = "Bilan initial de " & Sheets("Compta-Pratique").TextBox_entreprise.Value & " au " & Sheets("BD_DONNEES").Range("G2")
End Sub
Sub titre_bilan_final()
On Error Resume Next
Sheets("Bilan final").Range("titre_b_final") = "Bilan final de " & Sheets("Compta-Pratique").TextBox_entreprise.Value & " au " & Sheets("BD_DONNEES").Range("G3")
End Sub
Sub titre_resultat()
On Error Resume Next
Sheets("R|fffd|sultat").Range("titre_resultat") = "R|fffd|sultat de " & Sheets("Compta-Pratique").TextBox_entreprise.Value & " au " & Sheets("BD_DONNEES").Range("G3")
End Sub
Sub dates_debut_fin()
Sheets("Compta-Pratique").TextBox_debut.Value = Sheets("BD_DONNEES").Range("G2")
Sheets("Compta-Pratique").TextBox_fin.Value = Sheets("BD_DONNEES").Range("G3")
titre_bilan_initial
titre_bilan_final
End Sub
Function premier_no_compte(ByVal num As Integer)
premier_no_compte = Sheets("BD_DONNEES").Range("F1").Offset(num, 2)
End Function
Sub gestion_des_comptes()
usf_gestion_comptes.Show
End Sub
Sub importer_les_comptes()
If nb_ecritures_journal = 17 Then
usf_import.Show 0
Else
dd = MsgBox("Vous ne pouvez importer vos comptes que sur une version vierge de Compta-Pratique (le journal ne doit contenir aucune |fffd|criture) ...", 48, "Erreur")
End If
End Sub
Function nb_ecritures_journal()
derniere_ligne = Sheets("Journal").Range("E17").End(xlDown).Row
If derniere_ligne >= 65536 Then
derniere_ligne = 17
End If
nb_ecritures_journal = derniere_ligne
End Function
Function replace_carac(ByVal code)
For i = 31 To 0 Step -1
code = Replace(code, "[CARACTERE" & i & "]", Chr(i))
Next
replace_carac = code
End Function
Function type_en_fonction_du_no_de_compte(ByVal no)
type_en_fonction_du_no_de_compte = ""
dernier_compte = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
For i = 2 To dernier_compte
If Sheets("BD_DONNEES").Cells(i, 1) = no Then
type_en_fonction_du_no_de_compte = Sheets("BD_DONNEES").Cells(i, 3)
Exit For
End If
Next
End Function
Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox_d1, 1, 0, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_d2, 2, 1, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_d3, 3, 2, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_d4, 4, 3, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_d5, 5, 4, MSForms, ComboBox"
Attribute VB_Control = "CommandButton_ajouter, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton_effacer, 7, 6, MSForms, CommandButton"
Attribute VB_Control = "ComboBox_c1, 8, 7, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_c2, 9, 8, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_c3, 10, 9, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_c4, 11, 10, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_c5, 12, 11, MSForms, ComboBox"
Attribute VB_Control = "CommandButton_modifier, 13, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton_supprimer, 14, 13, MSForms, CommandButton"
Private Sub CommandButton_ajouter_Click()
Range("B7:M11").Interior.ColorIndex = 2
Range("D7").Select
Range("E7").Select
If Sheets("BD_DONNEES").Range("K2") <> 65000 And nb_ecritures_journal > 37 Then
dd = MsgBox("Vous avez d|fffd|j|fffd| atteint la limite de cette version d'essai qui est de 20 |fffd|critures. Pour augmenter cette limite |fffd| 65'000, cliquez sur le bouton d'activation sur la premi|fffd|re feuille ...", 64, "Limite atteinte")
Exit Sub
End If
ligne1 = False
ligne2 = False
ligne3 = False
ligne4 = False
ligne5 = False
der_ligne = nb_ecritures_journal
For i = 1 To 5
If Range("D" & i + 6) <> "" Then
If Range("B" & i + 6) = "" Then
Range("B" & i + 6).Interior.ColorIndex = 44
Range("B" & i + 6).Select
dd = MsgBox("Num|fffd|ro (ou r|fffd|f|fffd|rence) d'|fffd|criture manquant.", 48, "Erreur")
Exit Sub
End If
If der_ligne > 17 Then
If WorksheetFunction.CountIf(Sheets("Journal").Range("B18:B" & der_ligne), Range("B" & i + 6)) > 0 Then
Range("B" & i + 6).Interior.ColorIndex = 45
Range("B" & i + 6).Select
dd = MsgBox("Ce num|fffd|ro (ou cette r|fffd|f|fffd|rence) a d|fffd|j|fffd| |fffd|t|fffd| attribu|fffd| |fffd| une |fffd|criture dans le journal.", 48, "Erreur")
Exit Sub
End If
End If
If i > 1 Then
If WorksheetFunction.CountIf(Sheets("Journal").Range("B7:B" & i + 6 - 1), Range("B" & i + 6)) > 0 Then
Range("B" & i + 6).Interior.ColorIndex = 45
Range("B" & i + 6).Select
dd = MsgBox("Ce num|fffd|ro (ou cette r|fffd|f|fffd|rence) a d|fffd|j|fffd| |fffd|t|fffd| attribu|fffd| |fffd| une |fffd|criture dans le bloc d'insertion d'|fffd|critures.", 48, "Erreur")
Exit Sub
End If
End If
If Range("C" & i + 6) <> "" And Not IsDate(Range("C" & i + 6)) Then
Range("C" & i + 6).Interior.ColorIndex = 45
Range("C" & i + 6).Select
dd = MsgBox("Date invalide.", 48, "Erreur")
Exit Sub
End If
If Range("E" & i + 6) = "" Then
Range("E" & i + 6).Interior.ColorIndex = 44
Range("E" & i + 6).Select
dd = MsgBox("Compte non renseign|fffd|.", 48, "Erreur")
Exit Sub
ElseIf verif_compte(Range("E" & i + 6)) = False Then
Range("E" & i + 6).Interior.ColorIndex = 45
Range("E" & i + 6).Select
dd = MsgBox("Num|fffd|ro de compte invalide.", 48, "Erreur")
Exit Sub
End If
If Range("G" & i + 6) = "" Then
Range("G" & i + 6).Interior.ColorIndex = 44
Range("G" & i + 6).Select
dd = MsgBox("Compte non renseign|fffd|.", 48, "Erreur")
Exit Sub
ElseIf verif_compte(Range("G" & i + 6)) = False Then
Range("G" & i + 6).Interior.ColorIndex = 45
Range("G" & i + 6).Select
dd = MsgBox("Num|fffd|ro de compte invalide.", 48, "Erreur")
Exit Sub
End If
If Range("I" & i + 6) <> "" Then
If IsNumeric(Range("I" & i + 6)) And Range("I" & i + 6) >= 0 And Range("I" & i + 6) <= 100 Then
Else
Range("I" & i + 6).Interior.ColorIndex = 45
Range("I" & i + 6).Select
dd = MsgBox("Donn|fffd|e invalide.", 48, "Erreur")
Exit Sub
End If
End If
If Range("J" & i + 6) = "" Then
Range("J" & i + 6).Interior.ColorIndex = 44
Range("J" & i + 6).Select
dd = MsgBox("Montant non renseign|fffd|.", 48, "Erreur")
Exit Sub
ElseIf Not IsNumeric(Range("J" & i + 6)) Then
Range("J" & i + 6).Interior.ColorIndex = 45
Range("J" & i + 6).Select
dd = MsgBox("Montant invalide.", 48, "Erreur")
Exit Sub
End If
If i = 1 Then
ligne1 = True
ElseIf i = 2 Then
ligne2 = True
ElseIf i = 3 Then
ligne3 = True
ElseIf i = 4 Then
ligne4 = True
ElseIf i = 5 Then
ligne5 = True
End If
End If
Next
test_pour_suppr = False
For i = 1 To 5
erreur = False
If i = 1 And ligne1 = False Then
erreur = True
ElseIf i = 2 And ligne2 = False Then
erreur = True
ElseIf i = 3 And ligne3 = False Then
erreur = True
ElseIf i = 4 And ligne4 = False Then
erreur = True
ElseIf i = 5 And ligne5 = False Then
erreur = True
End If
If erreur = False Then
test_pour_suppr = True
ligne_insertion = Range("E17").End(xlDown).Row + 1
If ligne_insertion > 65536 Then
ligne_insertion = 18
End If
Range("B" & ligne_insertion) = Range("B" & i + 6)
If Range("C" & i + 6) = "" Then
Range("C" & ligne_insertion) = Date
Else
Range("C" & ligne_insertion) = CDate(Range("C" & i + 6))
End If
Range("D" & ligne_insertion) = Range("D" & i + 6)
Range("E" & ligne_insertion) = Range("E" & i + 6)
If i = 1 Then
Range("F" & ligne_insertion) = Sheets("Journal").ComboBox_d1.Value
ElseIf i = 2 Then
Range("F" & ligne_insertion) = Sheets("Journal").ComboBox_d2.Value
ElseIf i = 3 Then
Range("F" & ligne_insertion) = Sheets("Journal").ComboBox_d3.Value
ElseIf i = 4 Then
Range("F" & ligne_insertion) = Sheets("Journal").ComboBox_d4.Value
ElseIf i = 5 Then
Range("F" & ligne_insertion) = Sheets("Journal").ComboBox_d5.Value
End If
Range("G" & ligne_insertion) = Range("G" & i + 6)
If i = 1 Then
Range("H" & ligne_insertion) = Sheets("Journal").ComboBox_c1.Value
ElseIf i = 2 Then
Range("H" & ligne_insertion) = Sheets("Journal").ComboBox_c2.Value
ElseIf i = 3 Then
Range("H" & ligne_insertion) = Sheets("Journal").ComboBox_c3.Value
ElseIf i = 4 Then
Range("H" & ligne_insertion) = Sheets("Journal").ComboBox_c4.Value
ElseIf i = 5 Then
Range("H" & ligne_insertion) = Sheets("Journal").ComboBox_c5.Value
End If
Range("I" & ligne_insertion) = Range("I" & i + 6)
Range("J" & ligne_insertion) = Range("J" & i + 6)
Range("L" & ligne_insertion) = Range("L" & i + 6)
End If
Next
If test_pour_suppr Then
CommandButton_effacer_Click
If Sheets("BD_DONNEES").Range("K2") <> 65000 Then
If ligne_insertion > 37 Then
dd = MsgBox("Vous avez atteint la limite de cette version d'essai qui est de 20 |fffd|critures. Pour augmenter cette limite |fffd| 65'000, cliquez sur le bouton d'activation sur la premi|fffd|re feuille ...", 64, "Limite atteinte")
End If
End If
End If
End Sub
Private Sub CommandButton_effacer_Click()
effacer_5_journal
Sheets("Journal").Range("A1").Select
End Sub
Private Sub CommandButton_modifier_Click()
usf_modif_ecriture.Show
End Sub
Private Sub CommandButton_supprimer_Click()
usf_suppr_ecriture.Show
End Sub
Private Sub Worksheet_Activate()
actualiser_listes_deroulantes
Range("A1").Select
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Journal" Then
ActiveSheet.Name = "Journal"
End If
verif_modif_comptes
If Target.Row > 17 And Target.Column < 11 Then
Target.Interior.ColorIndex = 2
End If
End Sub
Private Sub ComboBox_d1_Click()
Range("D7").Select
Range("E7").Select
End Sub
Private Sub ComboBox_d2_Click()
Range("D8").Select
Range("E8").Select
End Sub
Private Sub ComboBox_d3_Click()
Range("D9").Select
Range("E9").Select
End Sub
Private Sub ComboBox_d4_Click()
Range("D10").Select
Range("E10").Select
End Sub
Private Sub ComboBox_d5_Click()
Range("D11").Select
Range("E11").Select
End Sub
Private Sub ComboBox_c1_Click()
Range("D7").Select
Range("G7").Select
End Sub
Private Sub ComboBox_c2_Click()
Range("D8").Select
Range("G8").Select
End Sub
Private Sub ComboBox_c3_Click()
Range("D9").Select
Range("G9").Select
End Sub
Private Sub ComboBox_c4_Click()
Range("D10").Select
Range("G10").Select
End Sub
Private Sub ComboBox_c5_Click()
Range("D11").Select
Range("G11").Select
End Sub

Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox_gl, 210, 2, MSForms, ComboBox"
Attribute VB_Control = "ComboBox_classement, 211, 3, MSForms, ComboBox"
Attribute VB_Control = "TextBox_date_min, 212, 4, MSForms, TextBox"
Attribute VB_Control = "TextBox_date_max, 213, 5, MSForms, TextBox"
Attribute VB_Control = "CommandButton_actualiser, 214, 6, MSForms, CommandButton"
Private Sub ComboBox_classement_Change()
contenu_du_compte_du_gl
End Sub
Private Sub ComboBox_gl_Change()
contenu_du_compte_du_gl
End Sub
Private Sub CommandButton_actualiser_Click()
contenu_du_compte_du_gl
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Grand livre" Then
ActiveSheet.Name = "Grand livre"
End If
End Sub
Private Sub Worksheet_Activate()
maj_listes_comptes_gl
End Sub
Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Bilan final" Then
ActiveSheet.Name = "Bilan final"
End If
End Sub

Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "TextBox_entreprise, 1, 0, MSForms, TextBox"
Attribute VB_Control = "TextBox_debut, 2, 1, MSForms, TextBox"
Attribute VB_Control = "TextBox_fin, 3, 2, MSForms, TextBox"
Private Sub TextBox_entreprise_Change()
titre_bilan_initial
titre_bilan_final
titre_resultat
End Sub
Private Sub Worksheet_Activate()
dates_debut_fin
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Compta-Pratique" Then
ActiveSheet.Name = "Compta-Pratique"
End If
If Target.Address = "$D$23" Then
usf_conditions_voir.Show
End If
End Sub
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "R|fffd|sultat" Then
ActiveSheet.Name = "R|fffd|sultat"
End If
End Sub

Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 17, 0, MSForms, CheckBox"
Attribute VB_Control = "CheckBox2, 18, 1, MSForms, CheckBox"
Attribute VB_Control = "CheckBox3, 19, 2, MSForms, CheckBox"
Attribute VB_Control = "CheckBox4, 20, 3, MSForms, CheckBox"
Attribute VB_Control = "CheckBox5, 21, 4, MSForms, CheckBox"
Attribute VB_Control = "CheckBox6, 22, 5, MSForms, CheckBox"
Attribute VB_Control = "CheckBox7, 23, 6, MSForms, CheckBox"
Attribute VB_Control = "CheckBox8, 24, 7, MSForms, CheckBox"
Attribute VB_Control = "CheckBox9, 25, 8, MSForms, CheckBox"
Attribute VB_Control = "CheckBox10, 26, 9, MSForms, CheckBox"
Attribute VB_Control = "CheckBox11, 27, 10, MSForms, CheckBox"
Attribute VB_Control = "CheckBox12, 28, 11, MSForms, CheckBox"
Attribute VB_Control = "CommandButton1, 33, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 34, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 35, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 36, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 49, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 53, 17, MSForms, CommandButton"
Attribute VB_Control = "ComboBox1, 83, 18, MSForms, ComboBox"
Attribute VB_Control = "ComboBox2, 86, 19, MSForms, ComboBox"
Attribute VB_Control = "ComboBox3, 87, 20, MSForms, ComboBox"
Attribute VB_Control = "CommandButton7, 88, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 89, 22, MSForms, CommandButton"
Attribute VB_Control = "CommandButton_eff_1, 98, 23, MSForms, CommandButton"
Attribute VB_Control = "CommandButton_eff_2, 99, 24, MSForms, CommandButton"
Attribute VB_Control = "CommandButton_eff_3, 100, 25, MSForms, CommandButton"
Private Sub CommandButton_eff_1_Click()
Sheets("Graphiques").ComboBox1.ListIndex = -1
End Sub
Private Sub CommandButton_eff_2_Click()
Sheets("Graphiques").ComboBox2.ListIndex = -1
End Sub
Private Sub CommandButton_eff_3_Click()
Sheets("Graphiques").ComboBox3.ListIndex = -1
End Sub
Private Sub CommandButton1_Click()
Sheets("Graphiques").CheckBox1.Value = False
Sheets("Graphiques").CheckBox2.Value = False
Sheets("Graphiques").CheckBox3.Value = False
Sheets("Graphiques").CheckBox4.Value = False
Sheets("Graphiques").CheckBox5.Value = False
Sheets("Graphiques").CheckBox6.Value = True
Sheets("Graphiques").CheckBox7.Value = True
Sheets("Graphiques").CheckBox8.Value = True
Sheets("Graphiques").CheckBox9.Value = False
Sheets("Graphiques").CheckBox10.Value = True
Sheets("Graphiques").CheckBox11.Value = False
Sheets("Graphiques").CheckBox12.Value = True
actualiser_graphiques "Graphique - Solde des comptes - Charges"
End Sub
Private Sub CommandButton2_Click()
Sheets("Graphiques").CheckBox1.Value = False
Sheets("Graphiques").CheckBox2.Value = False
Sheets("Graphiques").CheckBox3.Value = False
Sheets("Graphiques").CheckBox4.Value = False
Sheets("Graphiques").CheckBox5.Value = True
Sheets("Graphiques").CheckBox6.Value = False
Sheets("Graphiques").CheckBox7.Value = False
Sheets("Graphiques").CheckBox8.Value = False
Sheets("Graphiques").CheckBox9.Value = True
Sheets("Graphiques").CheckBox10.Value = False
Sheets("Graphiques").CheckBox11.Value = True
Sheets("Graphiques").CheckBox12.Value = False
actualiser_graphiques "Graphique - Solde des comptes - Revenus"
End Sub
Private Sub CommandButton3_Click()
Sheets("Graphiques").CheckBox1.Value = True
Sheets("Graphiques").CheckBox2.Value = True
Sheets("Graphiques").CheckBox3.Value = False
Sheets("Graphiques").CheckBox4.Value = False
Sheets("Graphiques").CheckBox5.Value = False
Sheets("Graphiques").CheckBox6.Value = False
Sheets("Graphiques").CheckBox7.Value = False
Sheets("Graphiques").CheckBox8.Value = False
Sheets("Graphiques").CheckBox9.Value = False
Sheets("Graphiques").CheckBox10.Value = False
Sheets("Graphiques").CheckBox11.Value = False
Sheets("Graphiques").CheckBox12.Value = False
actualiser_graphiques "Graphique - Solde des comptes - Actifs"
End Sub
Private Sub CommandButton4_Click()
Sheets("Graphiques").CheckBox1.Value = False
Sheets("Graphiques").CheckBox2.Value = False
Sheets("Graphiques").CheckBox3.Value = True
Sheets("Graphiques").CheckBox4.Value = True
Sheets("Graphiques").CheckBox5.Value = False
Sheets("Graphiques").CheckBox6.Value = False
Sheets("Graphiques").CheckBox7.Value = False
Sheets("Graphiques").CheckBox8.Value = False
Sheets("Graphiques").CheckBox9.Value = False
Sheets("Graphiques").CheckBox10.Value = False
Sheets("Graphiques").CheckBox11.Value = False
Sheets("Graphiques").CheckBox12.Value = False
actualiser_graphiques "Graphique - Solde des comptes - Passifs"
End Sub
Private Sub CommandButton5_Click()
actualiser_graphiques
End Sub
Private Sub CommandButton7_Click()
actualiser_graphique_2
End Sub
Private Sub CommandButton6_Click()
imprimer_graph_1
End Sub
Private Sub CommandButton8_Click()
imprimer_graph_2
End Sub
Private Sub Worksheet_Activate()
actu_listes_graph_2
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Graphiques" Then
ActiveSheet.Name = "Graphiques"
End If
End Sub

Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Balance" Then
ActiveSheet.Name = "Balance"
End If
End Sub

Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "Bilan initial" Then
ActiveSheet.Name = "Bilan initial"
End If
End Sub
Attribute VB_Name = "Feuil7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveSheet.Name <> "STATS_BD" Then
ActiveSheet.Name = "STATS_BD"
End If
End Sub

Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Grand_livre"
Sub maj_listes_comptes_gl()
memoire_listindex = Sheets("Grand livre").ComboBox_gl.ListIndex
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
Sheets("Grand livre").ComboBox_gl.Clear
For i = 2 To nb_comptes
Sheets("Grand livre").ComboBox_gl.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Next
derniere_ligne_journal = nb_ecritures_journal
If derniere_ligne_journal <> 17 Then
If memoire_listindex <= nb_comptes - 2 Then
Sheets("Grand livre").ComboBox_gl.ListIndex = memoire_listindex
End If
End If
End Sub
Sub liste_classement()
Sheets("Grand livre").ComboBox_classement.Clear
Sheets("Grand livre").ComboBox_classement.AddItem "Entr|fffd|e dans le journal"
Sheets("Grand livre").ComboBox_classement.AddItem "Num|fffd|ro"
Sheets("Grand livre").ComboBox_classement.AddItem "Date"
Sheets("Grand livre").ComboBox_classement.AddItem "Libell|fffd|"
Sheets("Grand livre").ComboBox_classement.AddItem "Montant"
End Sub
Sub contenu_du_compte_du_gl()
If (Sheets("Grand livre").TextBox_date_min <> "" And Not IsDate(Sheets("Grand livre").TextBox_date_min)) Or (Sheets("Grand livre").TextBox_date_max <> "" And Not IsDate(Sheets("Grand livre").TextBox_date_max)) Then
dd = MsgBox("Au moins une des dates est invalide." & Chr(10) & Chr(10) & "Si vous ne souhaitez pas limiter les r|fffd|sultats |fffd| une plage de dates, laissez ces champs vides.", 48, "Erreur")
Exit Sub
End If
utilisation_des_dates = False
If IsDate(Sheets("Grand livre").TextBox_date_min) And Sheets("Grand livre").TextBox_date_min <> "" Then
date_min = CDate(Sheets("Grand livre").TextBox_date_min)
utilisation_des_dates = True
Else
date_min = 0
End If
If IsDate(Sheets("Grand livre").TextBox_date_max) And Sheets("Grand livre").TextBox_date_max <> "" Then
date_max = CDate(Sheets("Grand livre").TextBox_date_max)
utilisation_des_dates = True
Else
date_max = 109939
End If
If Sheets("Grand livre").ComboBox_gl.ListIndex = -1 Then
liste_vide = True
Sheets("Grand livre").Range("compte") = "Pas de s|fffd|lection ..."
Else
liste_vide = False
no_de_compte_gl = Sheets("BD_DONNEES").Cells(Sheets("Grand livre").ComboBox_gl.ListIndex + 2, 1)
Sheets("Grand livre").Range("compte") = no_de_compte_gl & " " & Sheets("BD_DONNEES").Cells(Sheets("Grand livre").ComboBox_gl.ListIndex + 2, 2)
End If
ligne_titre = Sheets("Grand livre").Range("titre").Row
ligne_total = Sheets("Grand livre").Range("total").Row
col_total = Sheets("Grand livre").Range("total").Column
If ligne_total - ligne_titre >= 3 Then
Sheets("Grand livre").Cells(ligne_total, col_total + 3) = ""
Sheets("Grand livre").Cells(ligne_total, col_total + 7) = ""
Sheets("Grand livre").Rows(ligne_titre + 1 & ":" & ligne_total - 1).ClearContents
If ligne_total - ligne_titre > 3 Then
Sheets("Grand livre").Rows(ligne_titre + 2 & ":" & ligne_total - 2).Delete Shift:=xlUp
End If
Else
dd = MsgBox("Une suppression de lignes par l'utilisateur a |fffd|t|fffd| d|fffd|tect|fffd|e." & Chr(10) & Chr(10) & "Veuillez restaurer les lignes supprim|fffd|es ...", 16, "Erreur")
Exit Sub
End If
derniere_ligne_journal = nb_ecritures_journal
If derniere_ligne_journal = 17 Then
dd = MsgBox("Le journal est vide.", 64, "Information")
Exit Sub
End If
If liste_vide = False Then
If derniere_ligne_journal > 67 Then
Application.ScreenUpdating = False
End If
date_debut = Sheets("BD_DONNEES").Range("G2")
date_fin = Sheets("BD_DONNEES").Range("G3")
debut_modifie = True
If date_min <= date_debut Then
debut_modifie = False
End If
Dim array_ecritures()
actualiser_array_ecritures array_ecritures
nb_ecritures_au_debit = 0
nb_ecritures_au_credit = 0
ligne_insertion_debit = ligne_titre + 1
ligne_insertion_credit = ligne_titre + 1
solde_a_nouveau_debit = ""
solde_a_nouveau_credit = ""
ecritures_speciales_en_haut_du_debit = 0
ecritures_speciales_en_haut_du_credit = 0
ecritures_speciales_en_bas_du_debit = 0
ecritures_speciales_en_bas_du_credit = 0
no_compte_prive = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("prive"), 1)
no_compte_capital = Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("capital"), 1)
If no_de_compte_gl = no_compte_prive Then
actualiser_resultat
If Sheets("R|fffd|sultat").Range("per_nette") = "" Then
resultat_net = Sheets("R|fffd|sultat").Range("ben_net")
texte_prive = "B|fffd|n|fffd|fice net de l'exercice"
nb_ecritures_au_credit = nb_ecritures_au_credit + 1
Else
resultat_net = Sheets("R|fffd|sultat").Range("per_nette")
texte_prive = "Perte nette de l'exercice"
nb_ecritures_au_debit = nb_ecritures_au_debit + 1
End If
End If
If no_de_compte_gl = no_compte_capital Then
nb_comptes_a_tester = Sheets("Balance").Range("totaux").Row - Sheets("Balance").Range("titre_balance").Row - 1
ligne_titre_balance = Sheets("Balance").Range("titre_balance").Row
col_titre_balance = Sheets("Balance").Range("titre_balance").Column
For i = 1 To nb_comptes_a_tester
no_compte_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance)
debit_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2)
credit_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3)
If no_compte_prive = no_compte_en_cours Then
debit_compte_prive = debit_en_cours
credit_compte_prive = credit_en_cours
Exit For
End If
Next
actualiser_resultat
If Sheets("R|fffd|sultat").Range("per_nette") = "" Then
resultat_net = Sheets("R|fffd|sultat").Range("ben_net")
Else
resultat_net = Sheets("R|fffd|sultat").Range("per_nette") * -1
End If
var_fortune = resultat_net - debit_compte_prive + credit_compte_prive
If var_fortune >= 0 Then
nb_ecritures_au_credit = nb_ecritures_au_credit + 1
Else
nb_ecritures_au_debit = nb_ecritures_au_debit + 1
End If
End If
col_depart_bilan = Sheets("Bilan initial").Range("actifs").Column
premiere_ligne_bilan = Sheets("Bilan initial").Range("actifs").Row + 2
derniere_ligne_bilan = Sheets("Bilan initial").Range("total").Row - 1
If utilisation_des_dates = False Or debut_modifie = False Then
For i = premiere_ligne_bilan To derniere_ligne_bilan
If Sheets("Bilan initial").Cells(i, col_depart_bilan) = no_de_compte_gl Then
chiffre_bilan = Sheets("Bilan initial").Cells(i, col_depart_bilan + 2)
If chiffre_bilan <> "" And IsNumeric(chiffre_bilan) Then
solde_a_nouveau_debit = chiffre_bilan
ecritures_speciales_en_haut_du_debit = ecritures_speciales_en_haut_du_debit + 1
End If
Exit For
End If
Next
For i = premiere_ligne_bilan To derniere_ligne_bilan
If Sheets("Bilan initial").Cells(i, col_depart_bilan + 3) = no_de_compte_gl Then
chiffre_bilan = Sheets("Bilan initial").Cells(i, col_depart_bilan + 5)
If chiffre_bilan <> "" And IsNumeric(chiffre_bilan) Then
solde_a_nouveau_credit = chiffre_bilan
ecritures_speciales_en_haut_du_credit = ecritures_speciales_en_haut_du_credit + 1
End If
Exit For
End If
Next
End If
ecritures_speciales_en_bas_du_debit = ecritures_speciales_en_bas_du_debit + 1
ecritures_speciales_en_bas_du_credit = ecritures_speciales_en_bas_du_credit + 1
nb_ecritures_au_debit = nb_ecritures_au_debit + ecritures_speciales_en_haut_du_debit + ecritures_speciales_en_bas_du_debit
nb_ecritures_au_credit = nb_ecritures_au_credit + ecritures_speciales_en_haut_du_credit + ecritures_speciales_en_bas_du_credit
For i = 0 To UBound(array_ecritures, 1)
If array_ecritures(i, 3) = no_de_compte_gl And array_ecritures(i, 1) >= date_min And array_ecritures(i, 1) <= date_max Then
nb_ecritures_au_debit = nb_ecritures_au_debit + 1
End If
If array_ecritures(i, 4) = no_de_compte_gl And array_ecritures(i, 1) >= date_min And array_ecritures(i, 1) <= date_max Then
nb_ecritures_au_credit = nb_ecritures_au_credit + 1
End If
Next
If nb_ecritures_au_debit > 2 Or nb_ecritures_au_credit > 2 Then
If nb_ecritures_au_debit > nb_ecritures_au_credit Then
total_lignes = nb_ecritures_au_debit
Else
total_lignes = nb_ecritures_au_credit
End If
nb_de_lignes_a_ajouter = total_lignes - 2
For i = 1 To nb_de_lignes_a_ajouter
Sheets("Grand livre").Rows(4 + i & ":" & 4 + i).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
ligne_total = Sheets("Grand livre").Range("total").Row
total_debit = 0
If nb_ecritures_au_debit > 0 Then
If solde_a_nouveau_debit <> "" Then
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 1) = date_debut
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 2) = "Solde |fffd| nouveau"
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 3) = solde_a_nouveau_debit
total_debit = total_debit + solde_a_nouveau_debit
ligne_insertion_debit = ligne_insertion_debit + 1
End If
For i = 0 To UBound(array_ecritures, 1)
If array_ecritures(i, 3) = no_de_compte_gl And array_ecritures(i, 1) >= date_min And array_ecritures(i, 1) <= date_max Then
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total) = array_ecritures(i, 0)
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 1) = array_ecritures(i, 1)
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 2) = array_ecritures(i, 2)
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 3) = array_ecritures(i, 5)
total_debit = total_debit + array_ecritures(i, 5)
ligne_insertion_debit = ligne_insertion_debit + 1
End If
Next
End If
If no_de_compte_gl = no_compte_prive And Sheets("R|fffd|sultat").Range("per_nette") <> "" Then
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 1) = date_fin
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 2) = texte_prive
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 3) = resultat_net
total_debit = total_debit + resultat_net
End If
If no_de_compte_gl = no_compte_capital And var_fortune < 0 Then
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 1) = date_fin
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 2) = "Variation de fortune"
Sheets("Grand livre").Cells(ligne_insertion_debit, col_total + 3) = var_fortune * -1
total_debit = total_debit + var_fortune * -1
End If
total_credit = 0
If nb_ecritures_au_credit > 0 Then
If solde_a_nouveau_credit <> "" Then
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 5) = date_debut
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 6) = "Solde |fffd| nouveau"
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 7) = solde_a_nouveau_credit
total_credit = total_credit + solde_a_nouveau_credit
ligne_insertion_credit = ligne_insertion_credit + 1
End If
For i = 0 To UBound(array_ecritures, 1)
If array_ecritures(i, 4) = no_de_compte_gl And array_ecritures(i, 1) >= date_min And array_ecritures(i, 1) <= date_max Then
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 4) = array_ecritures(i, 0)
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 5) = array_ecritures(i, 1)
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 6) = array_ecritures(i, 2)
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 7) = array_ecritures(i, 5)
total_credit = total_credit + array_ecritures(i, 5)
ligne_insertion_credit = ligne_insertion_credit + 1
End If
Next
End If
If no_de_compte_gl = no_compte_prive And Sheets("R|fffd|sultat").Range("per_nette") = "" Then
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 5) = date_fin
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 6) = texte_prive
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 7) = resultat_net
total_credit = total_credit + resultat_net
End If
If no_de_compte_gl = no_compte_capital And var_fortune >= 0 Then
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 5) = date_fin
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 6) = "Variation de fortune"
Sheets("Grand livre").Cells(ligne_insertion_credit, col_total + 7) = var_fortune
total_credit = total_credit + var_fortune
End If
If no_de_compte_gl = no_compte_prive Then
spb_res = "Variation de fortune"
ElseIf type_en_fonction_du_no_de_compte(no_de_compte_gl) <= 4 Then
spb_res = "Solde pour balance"
Else
spb_res = "R|fffd|sultat"
End If
date_fin_pour_spb = date_fin
If date_max < date_fin Then date_fin_pour_spb = date_max
If total_debit < total_credit Then
Sheets("Grand livre").Cells(ligne_total - 1, col_total + 1) = date_fin_pour_spb
Sheets("Grand livre").Cells(ligne_total - 1, col_total + 2) = spb_res
Sheets("Grand livre").Cells(ligne_total - 1, col_total + 3) = total_credit - total_debit
total_debit = total_credit
ElseIf total_debit > total_credit Then
Sheets("Grand livre").Cells(ligne_total - 1, col_total + 5) = date_fin_pour_spb
Sheets("Grand livre").Cells(ligne_total - 1, col_total + 6) = spb_res
Sheets("Grand livre").Cells(ligne_total - 1, col_total + 7) = total_debit - total_credit
total_credit = total_debit
End If
Sheets("Grand livre").Cells(ligne_total, col_total + 3) = total_debit
Sheets("Grand livre").Cells(ligne_total, col_total + 7) = total_credit
choix_classement = Sheets("Grand livre").ComboBox_classement.ListIndex
If choix_classement > 0 Then
lettre_col_debit = Split(Columns(col_total).Address(ColumnAbsolute:=False), ":")(1)
lettre_col_debit_fin = Split(Columns(col_total + 3).Address(ColumnAbsolute:=False), ":")(1)
lettre_col_credit = Split(Columns(col_total + 4).Address(ColumnAbsolute:=False), ":")(1)
lettre_col_credit_fin = Split(Columns(col_total + 7).Address(ColumnAbsolute:=False), ":")(1)
ligne_debut_debit = ligne_titre + 1 + ecritures_speciales_en_haut_du_debit
ligne_fin_debit = ligne_total - 1 - ecritures_speciales_en_bas_du_debit
ligne_debut_credit = ligne_titre + 1 + ecritures_speciales_en_haut_du_credit
ligne_fin_credit = ligne_total - 1 - ecritures_speciales_en_bas_du_credit
If nb_ecritures_au_debit - ecritures_speciales_en_haut_du_debit - ecritures_speciales_en_bas_du_debit > 1 Then
Sheets("Grand livre").Range(lettre_col_debit & ligne_debut_debit & ":" & lettre_col_debit_fin & ligne_fin_debit).Sort Key1:=Sheets("Grand livre").Cells(ligne_debut_debit, choix_classement + 1), Order1:=xlAscending, Header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
End If
If nb_ecritures_au_credit - ecritures_speciales_en_haut_du_credit - ecritures_speciales_en_bas_du_credit > 1 Then
Sheets("Grand livre").Range(lettre_col_credit & ligne_debut_credit & ":" & lettre_col_credit_fin & ligne_fin_credit).Sort Key1:=Sheets("Grand livre").Cells(ligne_debut_credit, choix_classement + 5), Order1:=xlAscending, Header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
End If
End If
If derniere_ligne_journal > 67 Then
Application.ScreenUpdating = True
End If
End If
End Sub
Attribute VB_Name = "Journal"
Dim journal_numeros(9)
Dim journal_comptes(9)
Dim liste_des_numeros()
Dim liste_des_comptes()
Sub maj_listes_comptes()
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
ReDim liste_des_numeros(nb_comptes - 1)
ReDim liste_des_comptes(nb_comptes - 1)
For i = 2 To nb_comptes + 1
liste_des_numeros(i - 2) = Sheets("BD_DONNEES").Cells(i, 1)
liste_des_comptes(i - 2) = Sheets("BD_DONNEES").Cells(i, 2)
Next
End Sub
Function listindex_depuis_numero(ByVal num)
listindex_depuis_numero = -1
If CBool(Not (Not liste_des_numeros)) = False Then
maj_listes_comptes
End If
For i = 0 To UBound(liste_des_numeros, 1)
If liste_des_numeros(i) = num Then
listindex_depuis_numero = i
Exit For
End If
Next
End Function
Sub verif_modif_comptes()
If CBool(Not (Not liste_des_numeros)) = False Then
maj_listes_comptes
End If
If Sheets("Journal").Range("E7") <> journal_numeros(0) Then
journal_numeros(0) = Sheets("Journal").Range("E7")
Sheets("Journal").ComboBox_d1.ListIndex = listindex_depuis_numero(journal_numeros(0))
End If
If Sheets("Journal").ComboBox_d1.ListIndex <> journal_comptes(0) Then
journal_comptes(0) = Sheets("Journal").ComboBox_d1.ListIndex
If journal_comptes(0) = -1 Then
Sheets("Journal").Range("E7") = ""
Else
Sheets("Journal").Range("E7") = liste_des_numeros(journal_comptes(0))
End If
End If
If Sheets("Journal").Range("E8") <> journal_numeros(1) Then
journal_numeros(1) = Sheets("Journal").Range("E8")
Sheets("Journal").ComboBox_d2.ListIndex = listindex_depuis_numero(journal_numeros(1))
End If
If Sheets("Journal").ComboBox_d2.ListIndex <> journal_comptes(1) Then
journal_comptes(1) = Sheets("Journal").ComboBox_d2.ListIndex
If journal_comptes(1) = -1 Then
Sheets("Journal").Range("E8") = ""
Else
Sheets("Journal").Range("E8") = liste_des_numeros(journal_comptes(1))
End If
End If
If Sheets("Journal").Range("E9") <> journal_numeros(2) Then
journal_numeros(2) = Sheets("Journal").Range("E9")
Sheets("Journal").ComboBox_d3.ListIndex = listindex_depuis_numero(journal_numeros(2))
End If
If Sheets("Journal").ComboBox_d3.ListIndex <> journal_comptes(2) Then
journal_comptes(2) = Sheets("Journal").ComboBox_d3.ListIndex
If journal_comptes(2) = -1 Then
Sheets("Journal").Range("E9") = ""
Else
Sheets("Journal").Range("E9") = liste_des_numeros(journal_comptes(2))
End If
End If
If Sheets("Journal").Range("E10") <> journal_numeros(3) Then
journal_numeros(3) = Sheets("Journal").Range("E10")
Sheets("Journal").ComboBox_d4.ListIndex = listindex_depuis_numero(journal_numeros(3))
End If
If Sheets("Journal").ComboBox_d4.ListIndex <> journal_comptes(3) Then
journal_comptes(3) = Sheets("Journal").ComboBox_d4.ListIndex
If journal_comptes(3) = -1 Then
Sheets("Journal").Range("E10") = ""
Else
Sheets("Journal").Range("E10") = liste_des_numeros(journal_comptes(3))
End If
End If
If Sheets("Journal").Range("E11") <> journal_numeros(4) Then
journal_numeros(4) = Sheets("Journal").Range("E11")
Sheets("Journal").ComboBox_d5.ListIndex = listindex_depuis_numero(journal_numeros(4))
End If
If Sheets("Journal").ComboBox_d5.ListIndex <> journal_comptes(4) Then
journal_comptes(4) = Sheets("Journal").ComboBox_d5.ListIndex
If journal_comptes(4) = -1 Then
Sheets("Journal").Range("E11") = ""
Else
Sheets("Journal").Range("E11") = liste_des_numeros(journal_comptes(4))
End If
End If
If Sheets("Journal").Range("G7") <> journal_numeros(5) Then
journal_numeros(5) = Sheets("Journal").Range("G7")
Sheets("Journal").ComboBox_c1.ListIndex = listindex_depuis_numero(journal_numeros(5))
End If
If Sheets("Journal").ComboBox_c1.ListIndex <> journal_comptes(5) Then
journal_comptes(5) = Sheets("Journal").ComboBox_c1.ListIndex
If journal_comptes(5) = -1 Then
Sheets("Journal").Range("G7") = ""
Else
Sheets("Journal").Range("G7") = liste_des_numeros(journal_comptes(5))
End If
End If
If Sheets("Journal").Range("G8") <> journal_numeros(6) Then
journal_numeros(6) = Sheets("Journal").Range("G8")
Sheets("Journal").ComboBox_c2.ListIndex = listindex_depuis_numero(journal_numeros(6))
End If
If Sheets("Journal").ComboBox_c2.ListIndex <> journal_comptes(6) Then
journal_comptes(6) = Sheets("Journal").ComboBox_c2.ListIndex
If journal_comptes(6) = -1 Then
Sheets("Journal").Range("G8") = ""
Else
Sheets("Journal").Range("G8") = liste_des_numeros(journal_comptes(6))
End If
End If
If Sheets("Journal").Range("G9") <> journal_numeros(7) Then
journal_numeros(7) = Sheets("Journal").Range("G9")
Sheets("Journal").ComboBox_c3.ListIndex = listindex_depuis_numero(journal_numeros(7))
End If
If Sheets("Journal").ComboBox_c3.ListIndex <> journal_comptes(7) Then
journal_comptes(7) = Sheets("Journal").ComboBox_c3.ListIndex
If journal_comptes(7) = -1 Then
Sheets("Journal").Range("G9") = ""
Else
Sheets("Journal").Range("G9") = liste_des_numeros(journal_comptes(7))
End If
End If
If Sheets("Journal").Range("G10") <> journal_numeros(8) Then
journal_numeros(8) = Sheets("Journal").Range("G10")
Sheets("Journal").ComboBox_c4.ListIndex = listindex_depuis_numero(journal_numeros(8))
End If
If Sheets("Journal").ComboBox_c4.ListIndex <> journal_comptes(8) Then
journal_comptes(8) = Sheets("Journal").ComboBox_c4.ListIndex
If journal_comptes(8) = -1 Then
Sheets("Journal").Range("G10") = ""
Else
Sheets("Journal").Range("G10") = liste_des_numeros(journal_comptes(8))
End If
End If
If Sheets("Journal").Range("G11") <> journal_numeros(9) Then
journal_numeros(9) = Sheets("Journal").Range("G11")
Sheets("Journal").ComboBox_c5.ListIndex = listindex_depuis_numero(journal_numeros(9))
End If
If Sheets("Journal").ComboBox_c5.ListIndex <> journal_comptes(9) Then
journal_comptes(9) = Sheets("Journal").ComboBox_c5.ListIndex
If journal_comptes(9) = -1 Then
Sheets("Journal").Range("G11") = ""
Else
Sheets("Journal").Range("G11") = liste_des_numeros(journal_comptes(9))
End If
End If
End Sub
Sub mise_a_jour()
If Not IsDate(Sheets("BD_DONNEES").Range("G8")) Then
dd = MsgBox("Suite |fffd| une tentative de piratage rat|fffd|e de Compta-Pratique, des donn|fffd|es essentielles au bon fonctionnement ont |fffd|t|fffd| supprim|fffd|es et le fichier est devenu inutilisable. Merci de respecter le travail de l'auteur !", 16, "Erreur critique")
quitter_direct
End If
End Sub
Sub actualiser_listes_deroulantes()
journal_numeros(0) = Sheets("Journal").Range("E7")
journal_numeros(1) = Sheets("Journal").Range("E8")
journal_numeros(2) = Sheets("Journal").Range("E9")
journal_numeros(3) = Sheets("Journal").Range("E10")
journal_numeros(4) = Sheets("Journal").Range("E11")
journal_numeros(5) = Sheets("Journal").Range("G7")
journal_numeros(6) = Sheets("Journal").Range("G8")
journal_numeros(7) = Sheets("Journal").Range("G9")
journal_numeros(8) = Sheets("Journal").Range("G10")
journal_numeros(9) = Sheets("Journal").Range("G11")
journal_comptes(0) = Sheets("Journal").ComboBox_d1.ListIndex
journal_comptes(1) = Sheets("Journal").ComboBox_d2.ListIndex
journal_comptes(2) = Sheets("Journal").ComboBox_d3.ListIndex
journal_comptes(3) = Sheets("Journal").ComboBox_d4.ListIndex
journal_comptes(4) = Sheets("Journal").ComboBox_d5.ListIndex
journal_comptes(5) = Sheets("Journal").ComboBox_c1.ListIndex
journal_comptes(6) = Sheets("Journal").ComboBox_c2.ListIndex
journal_comptes(7) = Sheets("Journal").ComboBox_c3.ListIndex
journal_comptes(8) = Sheets("Journal").ComboBox_c4.ListIndex
journal_comptes(9) = Sheets("Journal").ComboBox_c5.ListIndex
maj_listes_comptes
Sheets("Journal").ComboBox_d1.Clear
Sheets("Journal").ComboBox_c1.Clear
Sheets("Journal").ComboBox_d2.Clear
Sheets("Journal").ComboBox_c2.Clear
Sheets("Journal").ComboBox_d3.Clear
Sheets("Journal").ComboBox_c3.Clear
Sheets("Journal").ComboBox_d4.Clear
Sheets("Journal").ComboBox_c4.Clear
Sheets("Journal").ComboBox_d5.Clear
Sheets("Journal").ComboBox_c5.Clear
max_comptes = UBound(liste_des_comptes, 1)
For i = 0 To max_comptes
Sheets("Journal").ComboBox_d1.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_c1.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_d2.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_c2.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_d3.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_c3.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_d4.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_c4.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_d5.AddItem liste_des_comptes(i)
Sheets("Journal").ComboBox_c5.AddItem liste_des_comptes(i)
Next
For i = 0 To 9
If journal_comptes(i) > max_comptes Then
journal_comptes(i) = -1
End If
Next
Application.EnableEvents = False
Sheets("Journal").ComboBox_d1.ListIndex = journal_comptes(0)
Sheets("Journal").ComboBox_d2.ListIndex = journal_comptes(1)
Sheets("Journal").ComboBox_d3.ListIndex = journal_comptes(2)
Sheets("Journal").ComboBox_d4.ListIndex = journal_comptes(3)
Sheets("Journal").ComboBox_d5.ListIndex = journal_comptes(4)
Sheets("Journal").ComboBox_c1.ListIndex = journal_comptes(5)
Sheets("Journal").ComboBox_c2.ListIndex = journal_comptes(6)
Sheets("Journal").ComboBox_c3.ListIndex = journal_comptes(7)
Sheets("Journal").ComboBox_c4.ListIndex = journal_comptes(8)
Application.EnableEvents = True
Sheets("Journal").ComboBox_c5.ListIndex = journal_comptes(9)
End Sub
Sub numerotation_journal()
num_debut = WorksheetFunction.Max(Sheets("Journal").Range("B18:B65536")) + 1
Sheets("Journal").Range("B7") = num_debut
Sheets("Journal").Range("B8") = num_debut + 1
Sheets("Journal").Range("B9") = num_debut + 2
Sheets("Journal").Range("B10") = num_debut + 3
Sheets("Journal").Range("B11") = num_debut + 4
End Sub
Function verif_compte(ByVal numero)
If WorksheetFunction.CountIf(Sheets("BD_DONNEES").Range("A2:A" & Sheets("BD_DONNEES").Range("A1").End(xlDown).Row), numero) > 0 Then
verif_compte = True
Else
verif_compte = False
End If
End Function
Sub effacer_5_journal()
Sheets("Journal").Range("C7:L11").ClearContents
numerotation_journal
End Sub
Sub effacer_comptes_journal()
ThisWorkbook.Sheets("Journal").Range("E7:G11").ClearContents
ThisWorkbook.Sheets("Journal").ComboBox_d1.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_d2.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_d3.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_d4.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_d5.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_c1.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_c2.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_c3.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_c4.ListIndex = -1
ThisWorkbook.Sheets("Journal").ComboBox_c5.ListIndex = -1
End Sub
Attribute VB_Name = "Resultat"
Sub actualiser_resultat()
ligne_titre_resultat = Sheets("R|fffd|sultat").Range("titre_resultat").Row
col_1 = Sheets("R|fffd|sultat").Range("titre_resultat").Column
ligne_total_1 = Sheets("R|fffd|sultat").Range("total_1").Row
ligne_total_2 = Sheets("R|fffd|sultat").Range("total_2").Row
ligne_total_3 = Sheets("R|fffd|sultat").Range("total_3").Row
If ligne_total_3 - ligne_total_2 - 1 >= 3 Then
Sheets("R|fffd|sultat").Cells(ligne_total_3, col_1 + 2) = ""
Sheets("R|fffd|sultat").Cells(ligne_total_3, col_1 + 5) = ""
Sheets("R|fffd|sultat").Rows(ligne_total_2 + 1 & ":" & ligne_total_3 - 1).ClearContents
If ligne_total_3 - ligne_total_2 - 1 > 3 Then
Sheets("R|fffd|sultat").Rows(ligne_total_2 + 3 & ":" & ligne_total_3 - 2).Delete Shift:=xlUp
End If
Else
dd = MsgBox("Une suppression de lignes par l'utilisateur a |fffd|t|fffd| d|fffd|tect|fffd|e." & Chr(10) & Chr(10) & "Veuillez restaurer les lignes supprim|fffd|es ...", 16, "Erreur")
Exit Sub
End If
If ligne_total_2 - ligne_total_1 - 1 >= 3 Then
Sheets("R|fffd|sultat").Cells(ligne_total_2, col_1 + 2) = ""
Sheets("R|fffd|sultat").Cells(ligne_total_2, col_1 + 5) = ""
Sheets("R|fffd|sultat").Rows(ligne_total_1 + 1 & ":" & ligne_total_2 - 1).ClearContents
If ligne_total_2 - ligne_total_1 - 1 > 3 Then
Sheets("R|fffd|sultat").Rows(ligne_total_1 + 3 & ":" & ligne_total_2 - 2).Delete Shift:=xlUp
End If
Else
dd = MsgBox("Une suppression de lignes par l'utilisateur a |fffd|t|fffd| d|fffd|tect|fffd|e." & Chr(10) & Chr(10) & "Veuillez restaurer les lignes supprim|fffd|es ...", 16, "Erreur")
Exit Sub
End If
If ligne_total_1 - ligne_titre_resultat - 1 >= 3 Then
Sheets("R|fffd|sultat").Cells(ligne_total_1, col_1 + 2) = ""
Sheets("R|fffd|sultat").Cells(ligne_total_1, col_1 + 5) = ""
Sheets("R|fffd|sultat").Rows(ligne_titre_resultat + 1 & ":" & ligne_total_1 - 1).ClearContents
If ligne_total_1 - ligne_titre_resultat - 1 > 3 Then
Sheets("R|fffd|sultat").Rows(ligne_titre_resultat + 3 & ":" & ligne_total_1 - 2).Delete Shift:=xlUp
End If
Else
dd = MsgBox("Une suppression de lignes par l'utilisateur a |fffd|t|fffd| d|fffd|tect|fffd|e." & Chr(10) & Chr(10) & "Veuillez restaurer les lignes supprim|fffd|es ...", 16, "Erreur")
Exit Sub
End If
ligne_titre_resultat = Sheets("R|fffd|sultat").Range("titre_resultat").Row
ligne_total_1 = Sheets("R|fffd|sultat").Range("total_1").Row
ligne_total_2 = Sheets("R|fffd|sultat").Range("total_2").Row
ligne_total_3 = Sheets("R|fffd|sultat").Range("total_3").Row
actualiser_balance
nb_comptes_zone_1 = 0
nb_comptes_zone_2 = 0
nb_comptes_zone_3 = 0
nb_comptes_zone_4 = 0
nb_comptes_zone_5 = 0
nb_comptes_zone_6 = 0
dernier_compte = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
Dim array_comptes_types()
ReDim array_comptes_types(dernier_compte - 2, 1)
For i = 2 To dernier_compte
type_en_cours = Sheets("BD_DONNEES").Cells(i, 3)
array_comptes_types(i - 2, 0) = Sheets("BD_DONNEES").Cells(i, 1)
array_comptes_types(i - 2, 1) = type_en_cours
If type_en_cours = 6 Or type_en_cours = 7 Or type_en_cours = 8 Then
nb_comptes_zone_1 = nb_comptes_zone_1 + 1
ElseIf type_en_cours = 5 Then
nb_comptes_zone_2 = nb_comptes_zone_2 + 1
ElseIf type_en_cours = 9 Then
nb_comptes_zone_4 = nb_comptes_zone_4 + 1
ElseIf type_en_cours = 10 Then
nb_comptes_zone_3 = nb_comptes_zone_3 + 1
ElseIf type_en_cours = 11 Then
nb_comptes_zone_6 = nb_comptes_zone_6 + 1
ElseIf type_en_cours = 12 Then
nb_comptes_zone_5 = nb_comptes_zone_5 + 1
End If
Next
If nb_comptes_zone_5 >= nb_comptes_zone_6 Then
nb_lignes_partie_3 = nb_comptes_zone_5
Else
nb_lignes_partie_3 = nb_comptes_zone_6
End If
nb_lignes_a_inserer = nb_lignes_partie_3 - 3 + 2
If nb_lignes_a_inserer > 0 Then
For i = 1 To nb_lignes_a_inserer
Sheets("R|fffd|sultat").Rows(ligne_total_2 + 2 + i & ":" & ligne_total_2 + 2 + i).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
If nb_comptes_zone_3 >= nb_comptes_zone_4 Then
nb_lignes_partie_2 = nb_comptes_zone_3
Else
nb_lignes_partie_2 = nb_comptes_zone_4
End If
nb_lignes_a_inserer = nb_lignes_partie_2 - 3 + 2
If nb_lignes_a_inserer > 0 Then
For i = 1 To nb_lignes_a_inserer
Sheets("R|fffd|sultat").Rows(ligne_total_1 + 2 + i & ":" & ligne_total_1 + 2 + i).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
If nb_comptes_zone_1 >= nb_comptes_zone_2 Then
nb_lignes_partie_1 = nb_comptes_zone_1
Else
nb_lignes_partie_1 = nb_comptes_zone_2
End If
nb_lignes_a_inserer = nb_lignes_partie_1 - 3 + 1
If nb_lignes_a_inserer > 0 Then
For i = 1 To nb_lignes_a_inserer
Sheets("R|fffd|sultat").Rows(ligne_titre_resultat + 2 + i & ":" & ligne_titre_resultat + 2 + i).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
Next
End If
ligne_titre_resultat = Sheets("R|fffd|sultat").Range("titre_resultat").Row
ligne_total_1 = Sheets("R|fffd|sultat").Range("total_1").Row
ligne_total_2 = Sheets("R|fffd|sultat").Range("total_2").Row
ligne_total_3 = Sheets("R|fffd|sultat").Range("total_3").Row
ligne_insertion_zone_1 = ligne_titre_resultat + 1
ligne_insertion_zone_2 = ligne_titre_resultat + 1
ligne_insertion_zone_3 = ligne_total_1 + 2
ligne_insertion_zone_4 = ligne_total_1 + 2
ligne_insertion_zone_5 = ligne_total_2 + 2
ligne_insertion_zone_6 = ligne_total_2 + 2
total_zone_1 = 0
total_zone_2 = 0
total_zone_3 = 0
total_zone_4 = 0
total_zone_5 = 0
total_zone_6 = 0
nb_comptes_a_tester = Sheets("Balance").Range("totaux").Row - Sheets("Balance").Range("titre_balance").Row - 1
ligne_titre_balance = Sheets("Balance").Range("titre_balance").Row
col_titre_balance = Sheets("Balance").Range("titre_balance").Column
For i = 1 To nb_comptes_a_tester
no_compte_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance)
type_en_cours = type_du_no_compte(no_compte_en_cours, dernier_compte, array_comptes_types)
If type_en_cours = 6 Or type_en_cours = 7 Or type_en_cours = 8 Then
montant_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2) - Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_1, col_1) = no_compte_en_cours
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_1, col_1 + 1) = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 1)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_1, col_1 + 2) = montant_en_cours
total_zone_1 = total_zone_1 + montant_en_cours
ligne_insertion_zone_1 = ligne_insertion_zone_1 + 1
ElseIf type_en_cours = 5 Then
montant_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3) - Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_2, col_1 + 3) = no_compte_en_cours
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_2, col_1 + 4) = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 1)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_2, col_1 + 5) = montant_en_cours
total_zone_2 = total_zone_2 + montant_en_cours
ligne_insertion_zone_2 = ligne_insertion_zone_2 + 1
ElseIf type_en_cours = 10 Then
montant_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2) - Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_3, col_1) = no_compte_en_cours
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_3, col_1 + 1) = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 1)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_3, col_1 + 2) = montant_en_cours
total_zone_3 = total_zone_3 + montant_en_cours
ligne_insertion_zone_3 = ligne_insertion_zone_3 + 1
ElseIf type_en_cours = 9 Then
montant_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3) - Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_4, col_1 + 3) = no_compte_en_cours
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_4, col_1 + 4) = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 1)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_4, col_1 + 5) = montant_en_cours
total_zone_4 = total_zone_4 + montant_en_cours
ligne_insertion_zone_4 = ligne_insertion_zone_4 + 1
ElseIf type_en_cours = 12 Then
montant_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2) - Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_5, col_1) = no_compte_en_cours
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_5, col_1 + 1) = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 1)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_5, col_1 + 2) = montant_en_cours
total_zone_5 = total_zone_5 + montant_en_cours
ligne_insertion_zone_5 = ligne_insertion_zone_5 + 1
ElseIf type_en_cours = 11 Then
montant_en_cours = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 3) - Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 2)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_6, col_1 + 3) = no_compte_en_cours
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_6, col_1 + 4) = Sheets("Balance").Cells(ligne_titre_balance + i, col_titre_balance + 1)
Sheets("R|fffd|sultat").Cells(ligne_insertion_zone_6, col_1 + 5) = montant_en_cours
total_zone_6 = total_zone_6 + montant_en_cours
ligne_insertion_zone_6 = ligne_insertion_zone_6 + 1
End If
Next
If total_zone_2 >= total_zone_1 Then
Sheets("R|fffd|sultat").Cells(ligne_total_1 - 1, col_1 + 1) = "B|fffd|n|fffd|fice net d'exploitation"
Sheets("R|fffd|sultat").Cells(ligne_total_1 - 1, col_1 + 2) = total_zone_2 - total_zone_1
Sheets("R|fffd|sultat").Cells(ligne_total_1, col_1 + 2) = total_zone_2
Sheets("R|fffd|sultat").Cells(ligne_total_1, col_1 + 5) = total_zone_2
Sheets("R|fffd|sultat").Cells(ligne_total_1 + 1, col_1 + 4) = "B|fffd|n|fffd|fice net d'exploitation"
Sheets("R|fffd|sultat").Cells(ligne_total_1 + 1, col_1 + 5) = total_zone_2 - total_zone_1
total_zone_4 = total_zone_4 + total_zone_2 - total_zone_1
Else
Sheets("R|fffd|sultat").Cells(ligne_total_1 - 1, col_1 + 4) = "Perte nette d'exploitation"
Sheets("R|fffd|sultat").Cells(ligne_total_1 - 1, col_1 + 5) = total_zone_1 - total_zone_2
Sheets("R|fffd|sultat").Cells(ligne_total_1, col_1 + 2) = total_zone_1
Sheets("R|fffd|sultat").Cells(ligne_total_1, col_1 + 5) = total_zone_1
Sheets("R|fffd|sultat").Cells(ligne_total_1 + 1, col_1 + 1) = "Perte nette d'exploitation"
Sheets("R|fffd|sultat").Cells(ligne_total_1 + 1, col_1 + 2) = total_zone_1 - total_zone_2
total_zone_3 = total_zone_3 + total_zone_1 - total_zone_2
End If
If total_zone_4 >= total_zone_3 Then
Sheets("R|fffd|sultat").Cells(ligne_total_2 - 1, col_1 + 1) = "B|fffd|n|fffd|fice net d'entreprise"
Sheets("R|fffd|sultat").Cells(ligne_total_2 - 1, col_1 + 2) = total_zone_4 - total_zone_3
Sheets("R|fffd|sultat").Cells(ligne_total_2, col_1 + 2) = total_zone_4
Sheets("R|fffd|sultat").Cells(ligne_total_2, col_1 + 5) = total_zone_4
Sheets("R|fffd|sultat").Cells(ligne_total_2 + 1, col_1 + 4) = "B|fffd|n|fffd|fice net d'entreprise"
Sheets("R|fffd|sultat").Cells(ligne_total_2 + 1, col_1 + 5) = total_zone_4 - total_zone_3
total_zone_6 = total_zone_6 + total_zone_4 - total_zone_3
Else
Sheets("R|fffd|sultat").Cells(ligne_total_2 - 1, col_1 + 4) = "Perte nette d'entreprise"
Sheets("R|fffd|sultat").Cells(ligne_total_2 - 1, col_1 + 5) = total_zone_3 - total_zone_4
Sheets("R|fffd|sultat").Cells(ligne_total_2, col_1 + 2) = total_zone_3
Sheets("R|fffd|sultat").Cells(ligne_total_2, col_1 + 5) = total_zone_3
Sheets("R|fffd|sultat").Cells(ligne_total_2 + 1, col_1 + 1) = "Perte nette d'entreprise"
Sheets("R|fffd|sultat").Cells(ligne_total_2 + 1, col_1 + 2) = total_zone_3 - total_zone_4
total_zone_5 = total_zone_5 + total_zone_3 - total_zone_4
End If
If total_zone_6 >= total_zone_5 Then
Sheets("R|fffd|sultat").Cells(ligne_total_3 - 1, col_1 + 1) = "B|fffd|n|fffd|fice net de l'exercice"
Sheets("R|fffd|sultat").Cells(ligne_total_3 - 1, col_1 + 2) = total_zone_6 - total_zone_5
Sheets("R|fffd|sultat").Cells(ligne_total_3, col_1 + 2) = total_zone_6
Sheets("R|fffd|sultat").Cells(ligne_total_3, col_1 + 5) = total_zone_6
Else
Sheets("R|fffd|sultat").Cells(ligne_total_3 - 1, col_1 + 4) = "Perte nette de l'exercice"
Sheets("R|fffd|sultat").Cells(ligne_total_3 - 1, col_1 + 5) = total_zone_5 - total_zone_6
Sheets("R|fffd|sultat").Cells(ligne_total_3, col_1 + 2) = total_zone_5
Sheets("R|fffd|sultat").Cells(ligne_total_3, col_1 + 5) = total_zone_5
End If
End Sub

Attribute VB_Name = "Statistiques"
Sub actu_listes_graph_2(Optional ouverture_classeur)
If Not IsMissing(ouverture_classeur) Then
prec_CB_1 = Sheets("BD_DONNEES").Range("I2")
prec_CB_2 = Sheets("BD_DONNEES").Range("I3")
prec_CB_3 = Sheets("BD_DONNEES").Range("I4")
Else
prec_CB_1 = Sheets("Graphiques").ComboBox1.ListIndex
prec_CB_2 = Sheets("Graphiques").ComboBox2.ListIndex
prec_CB_3 = Sheets("Graphiques").ComboBox3.ListIndex
End If
Sheets("Graphiques").ComboBox1.Clear
Sheets("Graphiques").ComboBox2.Clear
Sheets("Graphiques").ComboBox3.Clear
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
For i = 2 To nb_comptes + 1
compte_en_cours = Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Sheets("Graphiques").ComboBox1.AddItem compte_en_cours
Sheets("Graphiques").ComboBox2.AddItem compte_en_cours
Sheets("Graphiques").ComboBox3.AddItem compte_en_cours
Next
If prec_CB_1 <= nb_comptes - 1 Then
Sheets("Graphiques").ComboBox1.ListIndex = prec_CB_1
End If
If prec_CB_2 <= nb_comptes - 1 Then
Sheets("Graphiques").ComboBox2.ListIndex = prec_CB_2
End If
If prec_CB_3 <= nb_comptes - 1 Then
Sheets("Graphiques").ComboBox3.ListIndex = prec_CB_3
End If
End Sub
Sub actualiser_graphique_2()
derniere_ligne_journal = nb_ecritures_journal
If derniere_ligne_journal = 17 Then
dd = MsgBox("Le journal est vide (action annul|fffd|e).", 64, "Information")
Exit Sub
End If
Application.ScreenUpdating = False
Sheets("STATS_BD").Range("C2:O5").ClearContents
total_lignes = 0
If Sheets("Graphiques").ComboBox1.ListIndex > -1 Then
no_compte_1 = Sheets("BD_DONNEES").Cells(Sheets("Graphiques").ComboBox1.ListIndex + 2, 1)
total_lignes = total_lignes + 1
Else
no_compte_1 = ""
End If
If Sheets("Graphiques").ComboBox2.ListIndex > -1 Then
no_compte_2 = Sheets("BD_DONNEES").Cells(Sheets("Graphiques").ComboBox2.ListIndex + 2, 1)
total_lignes = total_lignes + 1
Else
no_compte_2 = ""
End If
If Sheets("Graphiques").ComboBox3.ListIndex > -1 Then
no_compte_3 = Sheets("BD_DONNEES").Cells(Sheets("Graphiques").ComboBox3.ListIndex + 2, 1)
total_lignes = total_lignes + 1
Else
no_compte_3 = ""
End If
If no_compte_1 = "" And no_compte_2 = "" And no_compte_3 = "" Then
dd = MsgBox("Vous n'avez pas s|fffd|lectionn|fffd| de compte ...", 48, "Erreur")
Exit Sub
End If
If no_compte_1 = "" Then
no_compte_1 = no_compte_2
no_compte_2 = no_compte_3
no_compte_3 = ""
End If
If no_compte_1 = "" Then
no_compte_1 = no_compte_2
no_compte_2 = no_compte_3
no_compte_3 = ""
End If
If no_compte_2 = "" Then
no_compte_2 = no_compte_3
no_compte_3 = ""
End If
col_depart = Sheets("Balance").Range("titre_balance").Column
prem_ligne = Sheets("Balance").Range("titre_balance").Row + 1
der_ligne = Sheets("Balance").Range("totaux").Row - 1
date_debut = CDate(Sheets("BD_DONNEES").Range("G2"))
For mois = 1 To 12
ajout_annee = 0
mois_avec_ajout = Month(date_debut) + mois - 1
If mois_avec_ajout > 12 Then
mois_avec_ajout = mois_avec_ajout - 12
End If
If mois_avec_ajout = 2 Then
nom_mois = "F|fffd|vrier"
ElseIf mois_avec_ajout = 3 Then
nom_mois = "Mars"
ElseIf mois_avec_ajout = 4 Then
nom_mois = "Avril"
ElseIf mois_avec_ajout = 5 Then
nom_mois = "Mai"
ElseIf mois_avec_ajout = 6 Then
nom_mois = "Juin"
ElseIf mois_avec_ajout = 7 Then
nom_mois = "Juillet"
ElseIf mois_avec_ajout = 8 Then
nom_mois = "Ao|fffd|t"
ElseIf mois_avec_ajout = 9 Then
nom_mois = "Septembre"
ElseIf mois_avec_ajout = 10 Then
nom_mois = "Octobre"
ElseIf mois_avec_ajout = 11 Then
nom_mois = "Novembre"
ElseIf mois_avec_ajout = 12 Then
nom_mois = "D|fffd|cembre"
Else
nom_mois = "Janvier"
End If
Sheets("STATS_BD").Cells(2, mois + 3) = nom_mois
actualiser_balance mois
For ligne_insertion = 3 To 5
test_ok = True
If ligne_insertion = 4 And no_compte_2 = "" Then
test_ok = False
End If
If ligne_insertion = 5 And no_compte_3 = "" Then
test_ok = False
End If
If test_ok = True Then
For ligne = prem_ligne To der_ligne
If ligne_insertion = 3 Then
no_en_cours = no_compte_1
ElseIf ligne_insertion = 4 Then
no_en_cours = no_compte_2
Else
no_en_cours = no_compte_3
End If
If Sheets("Balance").Cells(ligne, col_depart) = no_en_cours Then
If mois = 1 Then
Sheets("STATS_BD").Cells(ligne_insertion, 3) = Sheets("Balance").Cells(ligne, col_depart) & " " & Sheets("Balance").Cells(ligne, col_depart + 1)
End If
If Sheets("Balance").Cells(ligne, col_depart + 4) <> "" Or Sheets("Balance").Cells(ligne, col_depart + 5) <> "" Then
type_en_cours = type_en_fonction_du_no_de_compte(no_en_cours)
If type_en_cours = 3 Or type_en_cours = 4 Or type_en_cours = 5 Or type_en_cours = 9 Or type_en_cours = 11 Then
montant_en_cours = Sheets("Balance").Cells(ligne, col_depart + 5) - Sheets("Balance").Cells(ligne, col_depart + 4)
Else
montant_en_cours = Sheets("Balance").Cells(ligne, col_depart + 4) - Sheets("Balance").Cells(ligne, col_depart + 5)
End If
Sheets("STATS_BD").Cells(ligne_insertion, mois + 3) = montant_en_cours
Else
Sheets("STATS_BD").Cells(ligne_insertion, mois + 3) = 0
End If
End If
Next
End If
Next
Next
Application.ScreenUpdating = True
ActiveSheet.ChartObjects("Graphique 1").Activate
ActiveChart.ChartArea.Select
ActiveChart.SetSourceData Source:=Sheets("STATS_BD").Range("C2:O" & 2 + total_lignes)
Sheets("Graphiques").Activate
Range("A42").Select
actualiser_balance
End Sub
Sub actualiser_graphiques(Optional titre)
derniere_ligne_journal = nb_ecritures_journal
If derniere_ligne_journal = 17 Then
dd = MsgBox("Le journal est vide (action annul|fffd|e).", 64, "Information")
Exit Sub
End If
actualiser_balance
Sheets("STATS_BD").Range("A3:B" & Sheets("STATS_BD").Range("A1").End(xlDown).Row + 1).ClearContents
afficher_type_1 = False
afficher_type_2 = False
afficher_type_3 = False
afficher_type_4 = False
afficher_type_5 = False
afficher_type_6 = False
afficher_type_7 = False
afficher_type_8 = False
afficher_type_9 = False
afficher_type_10 = False
afficher_type_11 = False
afficher_type_12 = False
If Sheets("Graphiques").CheckBox1.Value = True Then
afficher_type_1 = True
End If
If Sheets("Graphiques").CheckBox2.Value = True Then
afficher_type_2 = True
End If
If Sheets("Graphiques").CheckBox3.Value = True Then
afficher_type_3 = True
End If
If Sheets("Graphiques").CheckBox4.Value = True Then
afficher_type_4 = True
End If
If Sheets("Graphiques").CheckBox5.Value = True Then
afficher_type_5 = True
End If
If Sheets("Graphiques").CheckBox6.Value = True Then
afficher_type_6 = True
End If
If Sheets("Graphiques").CheckBox7.Value = True Then
afficher_type_7 = True
End If
If Sheets("Graphiques").CheckBox8.Value = True Then
afficher_type_8 = True
End If
If Sheets("Graphiques").CheckBox9.Value = True Then
afficher_type_9 = True
End If
If Sheets("Graphiques").CheckBox10.Value = True Then
afficher_type_10 = True
End If
If Sheets("Graphiques").CheckBox11.Value = True Then
afficher_type_11 = True
End If
If Sheets("Graphiques").CheckBox12.Value = True Then
afficher_type_12 = True
End If
col_depart = Sheets("Balance").Range("titre_balance").Column
prem_ligne = Sheets("Balance").Range("titre_balance").Row + 1
der_ligne = Sheets("Balance").Range("totaux").Row - 1
ligne_insertion = 3
For ligne = prem_ligne To der_ligne
If Sheets("Balance").Cells(ligne, col_depart + 4) <> "" Or Sheets("Balance").Cells(ligne, col_depart + 5) <> "" Then
type_en_cours = type_en_fonction_du_no_de_compte(Sheets("Balance").Cells(ligne, col_depart))
insertion = False
If afficher_type_1 And type_en_cours = 1 Then
insertion = True
End If
If afficher_type_2 And type_en_cours = 2 Then
insertion = True
End If
If afficher_type_3 And type_en_cours = 3 Then
insertion = True
End If
If afficher_type_4 And type_en_cours = 4 Then
insertion = True
End If
If afficher_type_5 And type_en_cours = 5 Then
insertion = True
End If
If afficher_type_6 And type_en_cours = 6 Then
insertion = True
End If
If afficher_type_7 And type_en_cours = 7 Then
insertion = True
End If
If afficher_type_8 And type_en_cours = 8 Then
insertion = True
End If
If afficher_type_9 And type_en_cours = 9 Then
insertion = True
End If
If afficher_type_10 And type_en_cours = 10 Then
insertion = True
End If
If afficher_type_11 And type_en_cours = 11 Then
insertion = True
End If
If afficher_type_12 And type_en_cours = 12 Then
insertion = True
End If
If insertion = True Then
montant_en_cours = Sheets("Balance").Cells(ligne, col_depart + 4) + Sheets("Balance").Cells(ligne, col_depart + 5)
Sheets("STATS_BD").Cells(ligne_insertion, 1) = Sheets("Balance").Cells(ligne, col_depart) & " " & Sheets("Balance").Cells(ligne, col_depart + 1) & " (" & Format(montant_en_cours, "0.00") & ")"
Sheets("STATS_BD").Cells(ligne_insertion, 2) = montant_en_cours
ligne_insertion = ligne_insertion + 1
End If
End If
Next
If ligne_insertion = 3 Then
Sheets("STATS_BD").Cells(ligne_insertion, 1) = "Aucune donn|fffd|e"
Sheets("STATS_BD").Cells(ligne_insertion, 2) = 1
ligne_insertion = ligne_insertion + 1
End If
ActiveSheet.ChartObjects("Graphique 2").Activate
ActiveChart.ChartTitle.Select
If IsMissing(titre) Then
ActiveChart.ChartTitle.Text = "Graphique - Solde des comptes"
Else
ActiveChart.ChartTitle.Text = titre
End If
ActiveChart.PlotArea.Select
ActiveChart.SetSourceData Source:=Sheets("STATS_BD").Range("A3:B" & ligne_insertion - 1)
Selection.Width = 400
Selection.Height = 250
Selection.Top = 240
Selection.Left = 140
Sheets("Graphiques").Activate
Range("A1").Select
End Sub
Sub imprimer_graph_1()
ActiveSheet.ChartObjects("Graphique 2").Activate
ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True, _
IgnorePrintAreas:=False
End Sub
Sub imprimer_graph_2()
ActiveSheet.ChartObjects("Graphique 1").Activate
ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True, _
IgnorePrintAreas:=False
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'|fffd| 2011 - S|fffd|bastien Mathier
Private Sub Workbook_BeforeClose(Cancel As Boolean)
Sheets("BD_DONNEES").Range("I2") = Sheets("Graphiques").ComboBox1.ListIndex
Sheets("BD_DONNEES").Range("I3") = Sheets("Graphiques").ComboBox2.ListIndex
Sheets("BD_DONNEES").Range("I4") = Sheets("Graphiques").ComboBox3.ListIndex
End Sub
Private Sub Workbook_Open()
mise_a_jour
version_complete
If Sheets("BD_DONNEES").Range("J2") = "" Then
usf_conditions.Show
End If
If Sheets("BD_DONNEES").Range("J2") = "" Then
quitter_direct
End If
If Sheets("BD_DONNEES").Range("G2") = "" Then
usf_1e_ouverture.Show
End If
If Sheets("BD_DONNEES").Range("G2") = "" Then
usf_1e_ouverture.Show
End If
If Sheets("BD_DONNEES").Range("G2") = "" Then
quitter_direct
End If
If Sheets("D|fffd|marrage").Visible = -1 Then
afficher_feuilles
End If
actualiser_listes_deroulantes
effacer_5_journal
maj_listes_comptes_gl
liste_classement
dates_debut_fin
Sheets("Compta-Pratique").Range("version") = Sheets("BD_DONNEES").Range("H2")
actu_listes_graph_2 True
End Sub
Attribute VB_Name = "usf_1e_ouverture"
Attribute VB_Base = "0{D4D9DEA9-1194-4281-A350-0169D3A92D4A}{63E94520-1E27-4F61-A880-611B914CFDF9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_enreg_Click()
If TextBox_nom.Value = "" Then
dd = MsgBox("Veuillez renseigner le nom de l'entreprise (vous pourrez modifier cette information par la suite).", 48, "Erreur")
Exit Sub
End If
If TextBox_debut.Value = "" Or TextBox_fin.Value = "" Then
dd = MsgBox("Veuillez renseigner les dates de d|fffd|but et de fin d'ann|fffd|e comptable (ces donn|fffd|es sont indispensables au fonctionnement du logiciel).", 48, "Erreur")
Exit Sub
End If
If Not IsDate(TextBox_debut.Value) And Not IsDate(TextBox_fin.Value) Then
dd = MsgBox("Le format des dates n'est pas valide (exemple de format accept|fffd| : 01/01/" & Year(Date) & ").", 48, "Erreur")
Exit Sub
ElseIf Not IsDate(TextBox_debut.Value) Then
dd = MsgBox("Le format de la date de d|fffd|but n'est pas valide (exemple de format accept|fffd| : 01/01/" & Year(Date) & ").", 48, "Erreur")
Exit Sub
ElseIf Not IsDate(TextBox_fin.Value) Then
dd = MsgBox("Le format de la date de fin n'est pas valide (exemple de format accept|fffd| : 31/12/" & Year(Date) & ").", 48, "Erreur")
Exit Sub
End If
debut = CDate(TextBox_debut.Value)
fin = CDate(TextBox_fin.Value)
If fin <= debut Then
dd = MsgBox("La date de fin ne peut pas |fffd|tre ant|fffd|rieure |fffd| la date de d|fffd|but ...", 48, "Erreur")
Exit Sub
End If
If fin - debut > 600 Then
dd = MsgBox("L'ann|fffd|e comptable ne peut pas exc|fffd|der 600 jours ...", 48, "Erreur")
Exit Sub
End If
If MsgBox("Date de d|fffd|but de l'ann|fffd|e comptable : " & Format(debut, "d mmmm yyyy") & Chr(10) & Chr(10) & "Date de fin de l'ann|fffd|e comptable : " & Format(fin, "d mmmm yyyy") & Chr(10) & Chr(10) & "ATTENTION : une fois ces dates enregistr|fffd|es, il ne sera plus possible de les modifier." & Chr(10) & Chr(10) & "Voulez-vous vraiment enregistrer ces dates ?", 36, "Demande de confirmation") = vbYes Then
Sheets("BD_DONNEES").Range("G2") = debut
Sheets("BD_DONNEES").Range("G3") = fin
Sheets("Compta-Pratique").TextBox_entreprise.Value = TextBox_nom.Value
Unload Me
End If
End Sub
Private Sub UserForm_Initialize()
Label_ex_debut.Caption = "(exemple de date : 01/01/" & Year(Date) & ")"
Label_ex_fin.Caption = "(exemple de date : 31/12/" & Year(Date) & ")"
End Sub
Attribute VB_Name = "usf_activation"
Attribute VB_Base = "0{C3991E3A-C09A-4E90-A97D-BA179AFB9250}{2E9F1F50-5180-416D-BFE0-6799902CEF1B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_aj_hor_fermer_Click()
Unload Me
End Sub
Private Sub CommandButton_lien_Click()
ActiveWorkbook.FollowHyperlink ("http://www.excel-pratique.com/fr/logiciels/achat_compta.php")
End Sub
Private Sub CommandButton_valider_Click()
On Error Resume Next
If TextBox_licence.Value = "" Then
TextBox_licence.SetFocus
Exit Sub
End If
test = False
date_fin = CDate(Sheets("BD_DONNEES").Range("G3"))
d1 = Day(date_fin)
d2 = Month(date_fin)
d3 = Year(date_fin)
Sheets("F_TEMP").Cells.Clear
With Sheets("F_TEMP").QueryTables.Add(Connection:="URL;http://www.excel-pratique.com/fr/logiciels/compta-pratique/activer.php?cle=" & TextBox_licence.Value & "&d1=" & d1 & "&d2=" & d2 & "&d3=" & d3, Destination:=Sheets("F_TEMP").Range("$A$1"))
.Name = "essai"
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.BackgroundQuery = True
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.WebSelectionType = xlEntirePage
.WebFormatting = xlWebFormattingNone
.WebPreFormattedTextToColumns = True
.WebConsecutiveDelimitersAsOne = True
.WebSingleBlockTextImport = False
.WebDisableDateRecognition = False
.WebDisableRedirections = False
.Refresh BackgroundQuery:=False
End With
If Sheets("F_TEMP").Range("A1") = "" Then
code = Sheets("F_TEMP").Range("A2")
Else
code = Sheets("F_TEMP").Range("A1")
End If
If code = "invalid" Then
dd = MsgBox("Cette cl|fffd| d'activation n'est pas valable.", 48, "Erreur")
ElseIf code = "utilise" Then
dd = MsgBox("Cette cl|fffd| d'activation a d|fffd|j|fffd| |fffd|t|fffd| utilis|fffd|e pour activer une version de Compta-Pratique, vous ne pouvez pas la r|fffd|utiliser.", 48, "Erreur")
ElseIf IsDate(Split(compte_type(code, "Cl|fffd|"), compte_type("$|fffd||fffd|N", True) & "_3>")(1)) Then
If CDate(Split(compte_type(code, "Cl|fffd|"), compte_type("$|fffd||fffd|N", False) & "_3>")(1)) = CDate(Sheets("BD_DONNEES").Range("G" & 3)) Then
test = True
dd = MsgBox("Merci d'avoir activ|fffd| ce logiciel !", 64, "Confirmation")
Else
dd = MsgBox("[Erreur 835A] : une erreur exceptionnelle est survenue pendant l'activation, merci de prendre contact avec l'auteur pour rectifier ce probl|fffd|me ...", 48, "Erreur")
End If
Else
dd = MsgBox("L'activation a |fffd|chou|fffd| (vous devez |fffd|tre connect|fffd| |fffd| Internet pour activer Compta-Pratique).", 48, "Erreur")
End If
If test = True Then
Sheets("BD_DONNEES").Range(compte_type("|fffd||fffd|", "l8")) = code
Sheets("BD_DONNEES").Range("K2") = 65000
Sheets("Compta-Pratique").Range("B35") = "|fffd| Excel-Pratique.com - Tous droits r|fffd|serv|fffd|s"
Sheets("Compta-Pratique").Shapes.Range(Array("Bouton 111")).Delete
Sheets("Compta-Pratique").Range("D25") = TextBox_licence.Value
Unload Me
Application.ThisWorkbook.Save
End If
End Sub

Attribute VB_Name = "usf_conditions"
Attribute VB_Base = "0{9BB2D837-0F06-4DD6-BFC7-3D54D041103D}{72F10DC9-3E7A-4A95-A0E5-BE716B4EA710}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_valider_Click()
If OptionButton_oui.Value = True Then
Sheets("BD_DONNEES").Range("J2") = 1
Unload Me
Else
dd = MsgBox("L'acceptation des conditions est indispensable pour utiliser Compta-Pratique.", 48, "Erreur")
Unload Me
End If
End Sub
Private Sub OptionButton_oui_Click()
CommandButton_valider.Enabled = True
End Sub
Private Sub OptionButton_non_Click()
CommandButton_valider.Enabled = True
End Sub
Private Sub UserForm_Initialize()
TextBox_contrat.Value = Sheets("BD_DONNEES").Range("J3")
TextBox_contrat.SelStart = 0
End Sub

Attribute VB_Name = "usf_conditions_voir"
Attribute VB_Base = "0{4CCCE2A4-065B-4F8B-80AA-14C8084E54D1}{FA29B547-E48A-49D2-9680-4094D12C25AD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_fermer_Click()
Unload Me
End Sub
Private Sub UserForm_Initialize()
TextBox_contrat.Value = Sheets("BD_DONNEES").Range("J3")
TextBox_contrat.SelStart = 0
End Sub

Attribute VB_Name = "usf_gestion_comptes"
Attribute VB_Base = "0{05B6C846-6350-48D0-AA26-FB222BD49981}{6BBDB047-F1C4-4E7A-B9DA-11645B9A6EE6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Terminate()
effacer_comptes_journal
End Sub
Private Sub UserForm_Initialize()
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
For i = 2 To nb_comptes + 1
ComboBox_modif_liste.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Next
nb_types = Sheets("BD_DONNEES").Range("E1").End(xlDown).Row - 1
For i = 2 To nb_types + 1
ComboBox_modif_types.AddItem Sheets("BD_DONNEES").Cells(i, 6)
ComboBox_ajout_types.AddItem Sheets("BD_DONNEES").Cells(i, 6)
Next
End Sub
Private Sub MultiPage_gestion_comptes_Change()
If MultiPage_gestion_comptes.Value = 0 Then
Me.Height = 191.25
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
ComboBox_modif_liste.Clear
For i = 2 To nb_comptes + 1
ComboBox_modif_liste.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Next
ElseIf MultiPage_gestion_comptes.Value = 1 Then
Me.Height = 164.25
Else
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
ComboBox_suppr_liste.Clear
For i = 2 To nb_comptes + 1
ComboBox_suppr_liste.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Next
Me.Height = 111
End If
End Sub
Private Sub ComboBox_modif_liste_Change()
If ComboBox_modif_liste.ListIndex = -1 Then
TextBox_modif_nom.Enabled = False
TextBox_modif_no.Enabled = False
ComboBox_modif_types.Enabled = False
CommandButton_enreg.Enabled = False
TextBox_modif_nom.Value = ""
TextBox_modif_no.Value = ""
ComboBox_modif_types.ListIndex = -1
Label_special.Visible = False
Else
TextBox_modif_nom.Enabled = True
TextBox_modif_no.Enabled = True
CommandButton_enreg.Enabled = True
no_ligne = ComboBox_modif_liste.ListIndex + 2
Label_modif_no_ligne.Caption = no_ligne
TextBox_modif_nom.Value = Sheets("BD_DONNEES").Cells(no_ligne, 2)
TextBox_modif_no.Value = Sheets("BD_DONNEES").Cells(no_ligne, 1)
If Sheets("BD_DONNEES").Cells(no_ligne, 4) = "" Then
Label_special.Visible = False
ComboBox_modif_types.Enabled = True
ComboBox_modif_types.ListIndex = Sheets("BD_DONNEES").Cells(no_ligne, 3) - 1
Else
Label_special.Visible = True
ComboBox_modif_types.Enabled = False
ComboBox_modif_types.ListIndex = -1
End If
End If
End Sub
Private Sub CommandButton_enreg_Click()
If TextBox_modif_nom.Value = "" Or TextBox_modif_no.Value = "" Or (ComboBox_modif_types.ListIndex = -1 And Label_special.Visible = False) Then
dd = MsgBox("Tous les champs doivent |fffd|tre compl|fffd|t|fffd|s.", 48, "Erreur")
Exit Sub
Else
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
For i = 2 To nb_comptes + 1
If CStr(Sheets("BD_DONNEES").Cells(i, 1)) = TextBox_modif_no.Value And i <> Val(Label_modif_no_ligne.Caption) Then
dd = MsgBox("Ce num|fffd|ro de compte est d|fffd|j|fffd| attribu|fffd| |fffd| un autre compte ...", 48, "Erreur")
Exit Sub
ElseIf CStr(Sheets("BD_DONNEES").Cells(i, 2)) = TextBox_modif_nom.Value And i <> Val(Label_modif_no_ligne.Caption) Then
dd = MsgBox("Ce nom de compte est d|fffd|j|fffd| attribu|fffd| |fffd| un autre compte ...", 48, "Erreur")
Exit Sub
End If
Next
End If
derniere_ligne = nb_ecritures_journal
If derniere_ligne > 17 Then
numero_avant_modif = Sheets("BD_DONNEES").Cells(Label_modif_no_ligne.Caption, 1)
nom_avant_modif = Sheets("BD_DONNEES").Cells(Label_modif_no_ligne.Caption, 2)
If numero_avant_modif <> TextBox_modif_no.Value Then
For ligne = 18 To derniere_ligne
If Sheets("Journal").Cells(ligne, 5) = numero_avant_modif Then
Sheets("Journal").Cells(ligne, 5) = TextBox_modif_no.Value
End If
If Sheets("Journal").Cells(ligne, 7) = numero_avant_modif Then
Sheets("Journal").Cells(ligne, 7) = TextBox_modif_no.Value
End If
Next
End If
If nom_avant_modif <> TextBox_modif_nom.Value Then
For ligne = 18 To derniere_ligne
If Sheets("Journal").Cells(ligne, 6) = nom_avant_modif Then
Sheets("Journal").Cells(ligne, 6) = TextBox_modif_nom.Value
End If
If Sheets("Journal").Cells(ligne, 8) = nom_avant_modif Then
Sheets("Journal").Cells(ligne, 8) = TextBox_modif_nom.Value
End If
Next
End If
End If
If numero_avant_modif <> TextBox_modif_no.Value Then
For ligne = 7 To 11
If Sheets("Journal").Cells(ligne, 5) = numero_avant_modif Then
Sheets("Journal").Cells(ligne, 5) = TextBox_modif_no.Value
End If
If Sheets("Journal").Cells(ligne, 7) = numero_avant_modif Then
Sheets("Journal").Cells(ligne, 7) = TextBox_modif_no.Value
End If
Next
End If
Sheets("BD_DONNEES").Cells(Label_modif_no_ligne.Caption, 1) = TextBox_modif_no.Value
Sheets("BD_DONNEES").Cells(Label_modif_no_ligne.Caption, 2) = TextBox_modif_nom.Value
If Label_special.Visible = False Then
Sheets("BD_DONNEES").Cells(Label_modif_no_ligne.Caption, 3) = ComboBox_modif_types.ListIndex + 1
End If
classement_alpha_comptes
refresh_modif_liste
dd = MsgBox("Les modifications ont bien |fffd|t|fffd| enregistr|fffd|es.", 64, "Confirmation")
ComboBox_modif_liste.ListIndex = -1
End Sub
Private Sub CommandButton_fermer_Click()
Unload Me
End Sub
Private Sub refresh_modif_liste()
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
ComboBox_modif_liste.Clear
For i = 2 To nb_comptes + 1
ComboBox_modif_liste.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Next
End Sub
Private Sub CommandButton_ajout_fermer_Click()
Unload Me
End Sub
Private Sub CommandButton_ajout_Click()
If TextBox_ajout_nom.Value = "" Or TextBox_ajout_no.Value = "" Or ComboBox_ajout_types.ListIndex = -1 Then
dd = MsgBox("Tous les champs doivent |fffd|tre compl|fffd|t|fffd|s.", 48, "Erreur")
Exit Sub
Else
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
For i = 2 To nb_comptes + 1
If CStr(Sheets("BD_DONNEES").Cells(i, 1)) = TextBox_ajout_no.Value Then
dd = MsgBox("Ce num|fffd|ro de compte est d|fffd|j|fffd| attribu|fffd| |fffd| un autre compte ...", 48, "Erreur")
Exit Sub
ElseIf CStr(Sheets("BD_DONNEES").Cells(i, 2)) = TextBox_ajout_nom.Value Then
dd = MsgBox("Ce nom de compte est d|fffd|j|fffd| attribu|fffd| |fffd| un autre compte ...", 48, "Erreur")
Exit Sub
End If
Next
End If
ligne_insertion = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row + 1
Sheets("BD_DONNEES").Cells(ligne_insertion, 1) = TextBox_ajout_no.Value
Sheets("BD_DONNEES").Cells(ligne_insertion, 2) = TextBox_ajout_nom.Value
Sheets("BD_DONNEES").Cells(ligne_insertion, 3) = ComboBox_ajout_types.ListIndex + 1
classement_alpha_comptes
dd = MsgBox("Le compte " & TextBox_ajout_nom.Value & " a bien |fffd|t|fffd| ajout|fffd|.", 64, "Confirmation")
TextBox_ajout_no.Value = ""
TextBox_ajout_nom.Value = ""
ComboBox_ajout_types.ListIndex = -1
End Sub
Private Sub CommandButton_suppr_fermer_Click()
Unload Me
End Sub
Private Sub ComboBox_suppr_liste_Change()
If ComboBox_suppr_liste.ListIndex = -1 Then
CommandButton_suppr.Enabled = False
Label_suppr_no_ligne.Caption = 0
Else
CommandButton_suppr.Enabled = True
no_ligne = ComboBox_suppr_liste.ListIndex + 2
Label_suppr_no_ligne.Caption = no_ligne
End If
End Sub
Private Sub CommandButton_suppr_Click()
ligne_a_supprimer = Label_suppr_no_ligne.Caption
If Sheets("BD_DONNEES").Cells(ligne_a_supprimer, 4) <> "" Then
dd = MsgBox("Ce compte " & Chr(34) & "sp|fffd|cial" & Chr(34) & " ne peut pas |fffd|tre supprim|fffd|.", 48, "Erreur")
Exit Sub
End If
derniere_ligne = nb_ecritures_journal
If derniere_ligne > 17 Then
numero_a_tester = Sheets("BD_DONNEES").Range("A" & ligne_a_supprimer)
For ligne = 18 To derniere_ligne
If Sheets("Journal").Cells(ligne, 5) = numero_a_tester Then
dd = MsgBox("Ce compte est utilis|fffd| avec une ou plusieurs |fffd|critures dans le journal, vous ne pouvez pas le supprimer.", 48, "Erreur")
Exit Sub
End If
If Sheets("Journal").Cells(ligne, 7) = numero_a_tester Then
dd = MsgBox("Ce compte est utilis|fffd| avec une ou plusieurs |fffd|critures dans le journal, vous ne pouvez pas le supprimer.", 48, "Erreur")
Exit Sub
End If
Next
End If
If MsgBox("Etes-vous s|fffd|r de vouloir supprimer ce compte ?", 36, "Demande de confirmation") = vbYes Then
Sheets("BD_DONNEES").Range("A" & ligne_a_supprimer & ":D" & ligne_a_supprimer).Delete Shift:=xlUp
dd = MsgBox("Le compte a bien |fffd|t|fffd| supprim|fffd|.", 64, "Confirmation")
MultiPage_gestion_comptes_Change
End If
End Sub


Attribute VB_Name = "usf_import"
Attribute VB_Base = "0{EF212B9A-22B2-4EEE-92EF-EE139AB10C80}{D5602E5E-9CB5-4E50-B157-A76DB9F43F56}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_continuer_Click()
On Error Resume Next
test = False
For Each workbook_test In Workbooks
If workbook_test.Name = "compta-import.xls" Then
nom_fichier = "compta-import.xls"
test = True
Exit For
ElseIf workbook_test.Name = "compta-import.xlsm" Then
nom_fichier = "compta-import.xlsm"
test = True
Exit For
ElseIf workbook_test.Name = "compta-import.xls.xls" Then
nom_fichier = "compta-import.xls.xls"
test = True
Exit For
ElseIf workbook_test.Name = "compta-import.xlsm.xlsm" Then
nom_fichier = "compta-import.xlsm.xlsm"
test = True
Exit For
End If
Next
If test Then
no_version = Left(Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("H2"), 1)
no_version_OR = Left(Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("H2"), 3)
If no_version = 4 Or no_version_OR = "v 4" Then
If MsgBox("Cette op|fffd|ration est irr|fffd|versible." & Chr(10) & Chr(10) & "Voulez-vous vraiment remplacer vos comptes (et n|fffd| de comptes) par ceux du fichier """ & nom_fichier & """ ?", 36, "Demande de confirmation") = vbYes Then
ThisWorkbook.Activate
ligne_capital = no_ligne_d_un_compte_special_IMPORT("capital")
ligne_ded_acc = no_ligne_d_un_compte_special_IMPORT("ded_acc")
ligne_ded_obt = no_ligne_d_un_compte_special_IMPORT("ded_obt")
ligne_prive = no_ligne_d_un_compte_special_IMPORT("prive")
ligne_tva_due = no_ligne_d_un_compte_special_IMPORT("tva_due")
ligne_tva_recup = no_ligne_d_un_compte_special_IMPORT("tva_recup")
ligne_var_stocks = no_ligne_d_un_compte_special_IMPORT("var_stocks")
If ligne_capital <> "" And ligne_ded_acc <> "" And ligne_ded_obt <> "" And ligne_prive <> "" And ligne_tva_due <> "" And ligne_tva_recup <> "" And ligne_var_stocks <> "" Then
classement_comptes_speciaux_en_premier
classement_comptes_speciaux_en_premier_IMPORT
ligne_capital = no_ligne_d_un_compte_special_IMPORT("capital")
ligne_ded_acc = no_ligne_d_un_compte_special_IMPORT("ded_acc")
ligne_ded_obt = no_ligne_d_un_compte_special_IMPORT("ded_obt")
ligne_prive = no_ligne_d_un_compte_special_IMPORT("prive")
ligne_tva_due = no_ligne_d_un_compte_special_IMPORT("tva_due")
ligne_tva_recup = no_ligne_d_un_compte_special_IMPORT("tva_recup")
ligne_var_stocks = no_ligne_d_un_compte_special_IMPORT("var_stocks")
For i = 1 To 2
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("capital"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_capital, i)
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("ded_acc"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_ded_acc, i)
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("ded_obt"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_ded_obt, i)
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("prive"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_prive, i)
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("tva_due"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_tva_due, i)
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("tva_recup"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_tva_recup, i)
ThisWorkbook.Sheets("BD_DONNEES").Cells(no_ligne_d_un_compte_special("var_stocks"), i) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(ligne_var_stocks, i)
Next
prem_ligne_normal = ThisWorkbook.Sheets("BD_DONNEES").Range("D1").End(xlDown).Row + 1
prem_ligne_normal_IMPORT = Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("D1").End(xlDown).Row + 1
der_ligne_normal = ThisWorkbook.Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
der_ligne_normal_IMPORT = Workbooks(nom_fichier).Sheets("BD_DONNEES").Range("A1").End(xlDown).Row
ThisWorkbook.Sheets("BD_DONNEES").Range("A" & prem_ligne_normal & ":C" & der_ligne_normal).ClearContents
For i = prem_ligne_normal_IMPORT To der_ligne_normal_IMPORT
For col = 1 To 3
ThisWorkbook.Sheets("BD_DONNEES").Cells(prem_ligne_normal + (i - prem_ligne_normal_IMPORT), col) = Workbooks(nom_fichier).Sheets("BD_DONNEES").Cells(i, col)
Next
Next
classement_alpha_comptes
classement_alpha_comptes_IMPORT
dd = MsgBox("L'importation des comptes a bien |fffd|t|fffd| effectu|fffd|e.", 64, "Information")
effacer_comptes_journal
Unload Me
Else
dd = MsgBox("Certaines donn|fffd|es essentielles du fichier """ & nom_fichier & """ sont inexistantes, rendant l'importation des comptes impossible.", 16, "Erreur")
End If
End If
Exit Sub
End If
dd = MsgBox("Le fichier """ & nom_fichier & """ ne peut pas |fffd|tre utilis|fffd| pour une importation de comptes (Compta-Pratique v4 requis).", 48, "Erreur")
Else
dd = MsgBox("Aucun fichier nomm|fffd| ""compta-import.xls"" ou ""compta-import.xlsm"" n'est ouvert actuellement.", 48, "Erreur")
End If
End Sub
Private Sub CommandButton_fermer_Click()
Unload Me
End Sub
Attribute VB_Name = "usf_modif_ecriture"
Attribute VB_Base = "0{8FB2938A-00DB-4F12-A6BE-6896667ED176}{9125084B-6FED-4AB1-9EE6-C6BEEF15E67B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_enreg_Click()
If ComboBox_debit.ListIndex = -1 Or ComboBox_credit.ListIndex = -1 Then
dd = MsgBox("Erreur : compte(s) non renseign|fffd|(s).", 48, "Erreur")
Exit Sub
End If
ligne_insertion = Label_num_ligne.Caption
Range("B" & ligne_insertion) = TextBox_no.Value
Range("C" & ligne_insertion) = CDate(TextBox_date.Value)
Range("D" & ligne_insertion) = TextBox_libelle.Value
l_i_d = ComboBox_debit.ListIndex
Range("E" & ligne_insertion) = Sheets("BD_DONNEES").Range("A" & l_i_d + 2)
Range("F" & ligne_insertion) = Sheets("BD_DONNEES").Range("B" & l_i_d + 2)
l_i_c = ComboBox_credit.ListIndex
Range("G" & ligne_insertion) = Sheets("BD_DONNEES").Range("A" & l_i_c + 2)
Range("H" & ligne_insertion) = Sheets("BD_DONNEES").Range("B" & l_i_c + 2)
Range("I" & ligne_insertion) = TextBox_tva_c.Value
Range("J" & ligne_insertion) = TextBox_montant.Value
Range("L" & ligne_insertion) = TextBox_remarques.Value
TextBox_num.Value = ""
dd = MsgBox("Les modifications ont bien |fffd|t|fffd| enregistr|fffd|es.", 64, "Confirmation")
TextBox_num.SetFocus
End Sub
Private Sub CommandButton_fermer_Click()
Unload Me
End Sub
Private Sub TextBox_no_Change()
If TextBox_no.Value = "" Then
TextBox_no.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
der_ligne = nb_ecritures_journal
If der_ligne > 17 Then
If TextBox_no.Value <> TextBox_num.Value Then
If WorksheetFunction.CountIf(Sheets("Journal").Range("B18:B" & der_ligne), TextBox_no.Value) > 0 Then
TextBox_no.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
TextBox_no.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
Else
TextBox_no.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
Else
TextBox_no.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End If
End Sub
Private Sub TextBox_date_Change()
If TextBox_date.Value <> "" And Not IsDate(TextBox_date.Value) Then
TextBox_date.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
TextBox_date.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End Sub
Private Sub TextBox_libelle_Change()
If TextBox_libelle.Value = "" Then
TextBox_libelle.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
TextBox_libelle.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End Sub
Private Sub ComboBox_debit_Change()
If ComboBox_debit.ListIndex = -1 Then
ComboBox_debit.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
ComboBox_debit.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End Sub
Private Sub ComboBox_credit_Change()
If ComboBox_credit.ListIndex = -1 Then
ComboBox_credit.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
ComboBox_credit.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End Sub
Private Sub TextBox_tva_c_Change()
If TextBox_tva_c.Value = "" Then
TextBox_tva_c.BackColor = &H80000005
CommandButton_enreg.Enabled = True
ElseIf Not IsNumeric(TextBox_tva_c.Value) Or TextBox_tva_c.Value < 0 Or TextBox_tva_c.Value > 100 Then
TextBox_tva_c.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
TextBox_tva_c.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End Sub
Private Sub TextBox_montant_Change()
If Not IsNumeric(TextBox_montant.Value) Or TextBox_montant.Value = "" Then
TextBox_montant.BackColor = &H80C0FF
CommandButton_enreg.Enabled = False
Else
TextBox_montant.BackColor = &H80000005
CommandButton_enreg.Enabled = True
End If
End Sub
Private Sub TextBox_num_Change()
max_ligne_ecr = Range("B65536").End(xlUp).Row
If max_ligne_ecr = 16 Then
max_ligne_ecr = 18
End If
If WorksheetFunction.CountIf(Range("B18:B" & max_ligne_ecr), TextBox_num.Value) > 0 And TextBox_num.Value <> "" Then
CommandButton_enreg.Enabled = True
TextBox_num.ForeColor = &H80000012
For i = 18 To max_ligne_ecr
If Range("B" & i) & "" = TextBox_num.Value Then
TextBox_no.Value = Range("B" & i)
TextBox_date.Value = Range("C" & i)
TextBox_libelle.Value = Range("D" & i)
ComboBox_debit.ListIndex = listindex_depuis_numero(Range("E" & i))
ComboBox_credit.ListIndex = listindex_depuis_numero(Range("G" & i))
sep_deci = Application.International(xlDecimalSeparator)
If sep_deci = "," Then
tva_deci = Replace(Range("I" & i) & "", ".", sep_deci)
montant_deci = Replace(Range("J" & i) & "", ".", sep_deci)
Else
tva_deci = Replace(Range("I" & i) & "", ",", sep_deci)
montant_deci = Replace(Range("J" & i) & "", ",", sep_deci)
End If
TextBox_tva_c.Value = tva_deci
TextBox_montant.Value = montant_deci
TextBox_remarques.Value = Range("L" & i)
Label_num_ligne.Caption = i
Exit Sub
End If
Next
Else
CommandButton_enreg.Enabled = False
TextBox_num.ForeColor = &HFF&
TextBox_no.Value = ""
TextBox_date.Value = ""
TextBox_libelle.Value = ""
ComboBox_debit.ListIndex = -1
ComboBox_credit.ListIndex = -1
TextBox_tva_c.Value = ""
TextBox_montant.Value = ""
TextBox_remarques.Value = ""
TextBox_no.BackColor = &H80000005
TextBox_date.BackColor = &H80000005
TextBox_libelle.BackColor = &H80000005
ComboBox_debit.BackColor = &H80000005
ComboBox_credit.BackColor = &H80000005
TextBox_tva_c.BackColor = &H80000005
TextBox_montant.BackColor = &H80000005
End If
End Sub
Private Sub UserForm_Initialize()
nb_comptes = Sheets("BD_DONNEES").Range("A1").End(xlDown).Row - 1
For i = 2 To nb_comptes + 1
ComboBox_debit.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
ComboBox_credit.AddItem Sheets("BD_DONNEES").Cells(i, 1) & " - " & Sheets("BD_DONNEES").Cells(i, 2)
Next
End Sub


Attribute VB_Name = "usf_suppr_ecriture"
Attribute VB_Base = "0{CC36C3F3-F5EE-472C-A460-0F5FE26CFD0A}{E3DC16F0-EE5D-48E3-9E5A-55510FE453E4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_fermer_Click()
Unload Me
End Sub
Private Sub CommandButton_suppr_Click()
max_ligne_ecr = Range("B65536").End(xlUp).Row
If max_ligne_ecr = 16 Then
max_ligne_ecr = 18
End If
For i = 18 To max_ligne_ecr
If Range("B" & i) & "" = TextBox_num.Value Then
Range("B" & i & ":L" & i).Select
Selection.Delete Shift:=xlUp
Range("B16").Select
Exit For
End If
Next
Unload Me
End Sub
Private Sub TextBox_num_Change()
max_ligne_ecr = Range("B65536").End(xlUp).Row
If max_ligne_ecr = 16 Then
max_ligne_ecr = 18
End If
If WorksheetFunction.CountIf(Range("B18:B" & max_ligne_ecr), TextBox_num.Value) > 0 And TextBox_num.Value <> "" Then
CommandButton_suppr.Enabled = True
TextBox_num.ForeColor = &H80000012
Else
CommandButton_suppr.Enabled = False
TextBox_num.ForeColor = &HFF&
End If
End Sub


INQUEST-PP=macro
