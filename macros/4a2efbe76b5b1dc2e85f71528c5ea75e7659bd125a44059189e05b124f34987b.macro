Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Const C_PASSWORD As String = "UCMAutom10"

Private Sub Workbook_Open()
    Dim wks As Worksheet
    Application.ScreenUpdating = False
    
    For Each wks In ThisWorkbook.Worksheets
        If estFeuillePrestationsMensuelle(wks.Name) Then
            wks.Unprotect C_PASSWORD
            wks.EnableOutlining = True
            wks.EnableCalculation = False
            wks.Protect C_PASSWORD, True, True, True, True, True, False, False, False, False, False, False, True, False, False, False
        End If
    Next
    
    Application.ScreenUpdating = True
    
End Sub


Private Sub Workbook_SheetActivate(ByVal Sh As Object)
    Dim wks As Worksheet
    Set wks = Sh
    If estFeuillePrestationsMensuelle(wks.Name) Then
        wks.EnableCalculation = True
    End If
End Sub

Private Sub Workbook_SheetDeactivate(ByVal Sh As Object)
    Dim wks As Worksheet
    Set wks = Sh
    If estFeuillePrestationsMensuelle(wks.Name) Then
        wks.EnableCalculation = False
    End If
End Sub
Attribute VB_Name = "fonctionsWorkSheet"



Public Function calculHrsSupp(ByRef rg As Range, Optional ByRef rg2 As Range = Nothing) As Double
    Dim nbLignes As Long, nbLignes2 As Long
    Dim nbCols As Long, nbCols2 As Long
    Dim lngCol As Long, lngLigne As Long
    
    Dim dblHrsDepassement As Double
    Dim dblHrsSuppSemaine As Double
    Dim dblHrsPrestees As Double
    Dim dblTmp As Double
    
    retVal = 0#
    dblHrsDepassement = 0#
    
    'Validation Nb Lignes et Colonnes
    nbLignes = rg.Rows.Count
    nbCols = rg.Columns.Count
    If rg2 Is Nothing Then
        If nbLignes <> 3 Or nbCols Mod 4 <> 0 Then
           calculHrsSupp = xlErrNA
           Debug.Print "Couverture range incorrecte : 3 lignes et multiple de 4 colonnes" & rg.Address(, , , True)
           Exit Function
        End If
        dblHrsPrestees = calculHrsPrestees(rg)
    Else
        nbLignes2 = rg2.Rows.Count
        nbCols2 = rg2.Columns.Count
        If nbLignes <> 3 Or nbCols Mod 4 <> 0 Or nbLignes2 <> 3 Or nbCols2 Mod 4 <> 0 Then
            calculHrsSupp = xlErrNA
            Debug.Print "Couverture range incorrecte : 3 lignes et multiple de 4 colonnes" & rg.Address(, , , True)
            Exit Function
        End If
        dblHrsPrestees = calculHrsPrestees(rg, rg2)
    End If
    
    
    If dblHrsPrestees - (38# / 24) > 0.00001 Then
        dblHrsSuppSemaine = dblHrsPrestees - (38# / 24)
    Else
        dblHrsSuppSemaine = 0#
    End If
    
    For lngCol = 1 To nbCols Step 4
        dblTmp = 0#
        For lngLigne = 1 To 3
            If Len(Trim(rg.Cells(lngLigne, lngCol))) > 0 Then
                dblTmp = dblTmp + rg.Cells(lngLigne, lngCol + 3)
            End If
        Next
        
        If dblTmp - (9# / 24) > 0.0001 Then
            dblHrsDepassement = dblHrsDepassement + (Round(dblTmp * 24 - (9#), 3))
        End If
    Next
    
    If Not rg2 Is Nothing Then
        For lngCol = 1 To nbCols2 Step 4
            dblTmp = 0#
            For lngLigne = 1 To 3
                If Len(Trim(rg2.Cells(lngLigne, lngCol))) > 0 Then
                    dblTmp = dblTmp + rg2.Cells(lngLigne, lngCol + 3)
                End If
            Next
            
            If dblTmp - (9# / 24) > 0.0001 Then
                dblHrsDepassement = dblHrsDepassement + (Round(dblTmp * 24 - (9#), 3))
            End If
        Next
    End If
    
    'Debug.Print "Sem : " & dblHrsDepassement * 24
        
    calculHrsSupp = Application.WorksheetFunction.Max(dblHrsDepassement / 24, dblHrsSuppSemaine)
End Function



Public Function calculHrsPrestees(ByRef rg As Range, Optional rg2 As Range = Nothing) As Double
    Dim nbLignes As Long
    Dim nbCols As Long
    Dim lngCol As Long, lngLigne As Long
    
    Dim retVal As Double
    Dim rgLigne As Range
    
    retVal = 0#
    
    nbLignes = rg.Rows.Count
    nbCols = rg.Columns.Count
    
    If nbLignes <> 3 Or nbCols Mod 4 <> 0 Then
       'debug.Pri
       calculHrsPrestees = xlErrNA
       Debug.Print "Couverture range incorrecte : 3 lignes et multiple de 4 colonnes"
       Exit Function
    End If
    
    For Each rgLigne In rg.Rows
        With rgLigne
            For lngCol = 1 To nbCols Step 4
                If Len(Trim(.Cells(1, lngCol))) > 0 Then
                    retVal = retVal + .Cells(1, lngCol + 3)
                End If
            Next
        End With
    Next
    
    If rg2 Is Nothing Then
        calculHrsPrestees = retVal
    Else
        calculHrsPrestees = retVal + calculHrsPrestees(rg2)
    End If
    
End Function



Public Function calculCouvertureETP(ByRef rg As Range, lngHeureDebut As Long) As Double
    Dim nbLignes As Long
    Dim nbCols As Long
    Dim LigneActive As Range
    Dim retVal As Double
    Dim strCode As String
    Dim hrDeb As Double, hrFin As Double, dblTmp As Double
    
    nbLignes = rg.Rows.Count
    nbCols = rg.Columns.Count
    retVal = 0#
    
    If nbCols <> 3 Then
        calculCouvertureETP = xlErrNA
        Debug.Print "La fonction n|fffd|cessite trois colonnes dans le range !"
        Exit Function
    End If
    
    
    For Each LigneActive In rg.Rows
        With LigneActive
            strCode = UCase(Trim(.Cells(1, 1).Value))
            
            If strCode = "P" Or strCode = "PR" Then
                hrDeb = .Cells(1, 2).Value * 24
                hrFin = .Cells(1, 3).Value * 24
                If hrFin > lngHeureDebut Then
                    dblTmp = Application.WorksheetFunction.Min(lngHeureDebut + 1, hrFin) - Application.WorksheetFunction.Max(lngHeureDebut, hrDeb)
                    'Debug.Print "hr chk : " & lngHeureDebut & " - hrDeb/Fin : " & hrDeb & "/" & hrFin & " ==> " & dblTmp
                    If dblTmp > EPSILON Then
                        retVal = retVal + dblTmp
                    End If
                End If
            End If
        End With
    Next
    calculCouvertureETP = retVal

End Function







'Teste si le nom d'une feuille est un nom de mois. Si c'est le cas, retourne le premier jour du mois concern|fffd|
Public Function estFeuillePrestationsMensuelle(strSheetName As String) As Boolean
    Dim dtTest As Date
    
    Dim strNomFeuilleTrt() As String
    Dim strTest As String
    Dim blnCorrect As Boolean
    
    On Error GoTo ErrHandler
    
    blnCorrect = False
    
    strNomFeuilleTrt = Split(strSheetName, "-")
    If UBound(strNomFeuilleTrt) - LBound(strNomFeuilleTrt) = 1 Then
        'On a bien deux |fffd|l|fffd|ments s|fffd|par|fffd|s par un tiret
        If strNomFeuilleTrt(1) = Format(CLng(strNomFeuilleTrt(1)), "0000") And strNomFeuilleTrt(0) = Format(CLng(strNomFeuilleTrt(0)), "00") Then
            ' Les deux parties sont bien constitu|fffd|es de deux nombres
            dtTest = DateSerial(CLng(strNomFeuilleTrt(1)), CLng(strNomFeuilleTrt(0)), 1)
            blnCorrect = True
        End If
    End If
    
Sortie:
    estFeuillePrestationsMensuelle = blnCorrect
    Exit Function
    
ErrHandler:
    If Err.Number = 13 Then
        'Erreur de conversion de type de donn|fffd|es, li|fffd| |fffd| la ligne de conversion du nom en type Long
        blnCorrect = False
        Err.Clear
    End If
    Resume Sortie
End Function



INQUEST-PP=macro
