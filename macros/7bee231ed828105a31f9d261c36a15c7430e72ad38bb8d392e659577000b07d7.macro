Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "InputSheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "asset_type, 39, 5, MSForms, ComboBox"
Attribute VB_Control = "clear_button, 52, 6, MSForms, CommandButton"
Attribute VB_Control = "rollforward_button, 77, 7, MSForms, CommandButton"
'Sub numberformat()
'' numberformat Macro
'
'    'Selection.numberformat = "_(* #,##0_);_(* (#,##0);_(* ""-""_);_(@_)"
'End Sub
Private Sub asset_type_DropButtonClick()
If asset_type.ListCount = 0 Then
With asset_type
    .AddItem "cash"
    .AddItem "equity securities with readily determinable fair values or debt securities"
    .AddItem "other investments"
    .AddItem "real property"
    .AddItem "personal property"
    .AddItem "other (specify)"
End With
End If
End Sub

Private Sub asset_type_Click()
    Range("restrict_type").Select
End Sub

Private Sub clear_button_Click()

Dim Msg, Style, TITLE, Response
Beep
Msg = "All input information will be cleared. Do you want to continue?"   ' Define message.
Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
TITLE = "PPC's Workpapers"  ' Define title.
Response = MsgBox(Msg, Style, TITLE)
If Response = vbCancel Then    ' User chose Cancel.
    GoTo Quit
End If

Application.ScreenUpdating = False
Application.EnableEvents = False
Range("inputclear").Value = ""
Range("frequency").Value = ""
asset_type.Value = ""
Range("restrict_type").Value = ""
SubsidiaryLedger.Range("subclear").Value = ""
InputSheet.Range("begin_fy").Formula = "=IF(or(promise_date="""",fsdate=""""),"""",if(AND(promise_date>prioryear,promise_date<=fsdate),fsdate,""""))"
Range("fsdate").Value = "=PPC_GetBalanceSheetDate()"
Range("Client").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
InputSheet.Range("a1").Select
Application.ScreenUpdating = True
Application.EnableEvents = True
Exit Sub

Quit:
End Sub


Private Sub rollforward_button_Click()
    Rollforward
End Sub

Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
    Range("A1").Select
End Sub

Private Sub Worksheet_Deactivate()
If ThisWorkbook.bIsSaving Then Exit Sub
Dim fsdate As Date
Dim plugdate As Date
Dim promise_date As Date
promise_date = Sheets("input").Range("promise_date").Value
plugdate = DateAdd("m", 12, promise_date)
Dim answer
If Range("fsdate").Value = Empty Then
    Range("fsdate").Value = Date
End If
If Range("first_pmt").Value = Empty And Range("promise_date").Value <> Empty Then

'answer = MsgBox("Please enter a date for the first payment of this promise.", vbOKOnly)
    InputSheet.Range("first_pmt").Value = plugdate
End If
If InputSheet.Range("cyactivity").Value = 0 And InputSheet.Range("net_gift").Value <> "" Then
    answer1 = MsgBox("Please be sure to enter any current-period activity related to " & _
     "this promise before continuing (e.g., payments received, changes in fair value, " & _
     "etc.). The rollforward of the promise and any related discount on " & _
     "the ""Subsidiary Ledger"" schedule does not automatically reflect changes in " & _
     "the promise unless entered on the ""Input"" schedule. Click ""OK"" to enter " & _
     "current-period activity. Click ""Cancel"" if there is no current activity or " & _
     "you wish to proceed to the ""Subsidiary Ledger"" without entering " & _
     "activity.", vbOKCancel, "Current period activity has not been entered.")
    If answer1 = vbCancel Then
        SubsidiaryLedger.Activate
    Else
        InputSheet.Activate
        Range("activitytitle").Select
    End If
End If
End Sub

Sub Rollforward()
'
' Rollforward Macro
'
Dim Msg, Style, TITLE, Response
Dim currentdate As Date
Dim newdate As Date
Beep
Msg = "Prior period amounts will be replaced with the later period amounts. Do you want to continue?"   ' Define message.
Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
Response = MsgBox(Msg, Style)
If Response = vbCancel Then    ' User chose Cancel.
    GoTo Quit
    End If
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlManual

With SubsidiaryLedger
    .Activate
    .Range("adj_gift").Select
    .Application.CutCopyMode = False
    Selection.Copy
    .Range("beg_ar").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    
    .Range("adj_unamdisc").Select
    .Application.CutCopyMode = False
    Selection.Copy
    .Range("beg_disc").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    
    .Range("end_allow").Select
    .Application.CutCopyMode = False
    Selection.Copy
    .Range("beg_allow").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
End With
InputSheet.Range("rollforward_clear").Value = ""
If InputSheet.Range("begin_fy").Value <> "" Then
copymacro
End If

InputSheet.Select
Range("fsdate").Value = "=PPC_GetBalanceSheetDate()"
Range("Client").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
Selection.Range("a1").Activate
Quit:
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.Calculate
End Sub

Attribute VB_Name = "Module1"
Sub copymacro()
Attribute copymacro.VB_Description = "Macro recorded 5/29/2002 by jzamboni"
Attribute copymacro.VB_ProcData.VB_Invoke_Func = " \n14"
'
' copymacro Macro
' Macro recorded 5/29/2002 by jzamboni
'

'
    InputSheet.Select
    Range("begin_fy").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("begin_fy").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
End Sub
Sub selectsht()
Attribute selectsht.VB_Description = "Macro recorded 5/29/2002 by jzamboni"
Attribute selectsht.VB_ProcData.VB_Invoke_Func = " \n14"
'
' selectsht Macro
' Macro recorded 5/29/2002 by jzamboni
'

'
    SubsidiaryLedger.Select
End Sub
Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "SubsidiaryLedger"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Dim term
term = Range("term").Value
Dim begindate
begindate = Sheets("input").Range("promise_date").Value
Dim gift_expiration As String
Dim pay_period
Dim pay_months
Dim fsdate
fsdate = Sheets("input").Range("fsdate").Value
Dim answer
If Sheets("input").Range("donor") <> "" Then
Range("term").Value = "Original promise: " & begindate & " - " & Sheets("input").Range("pay_period").Value & " yrs, paid " & Sheets("input").Range("frequency").Value & ", " & Sheets("input").asset_type.Value & ", " & Sheets("input").Range("restrict_type").Value
End If
'Range("adj_unamdisc").Select
'Selection.numberformat = "_(* #,##0_);_(* (#,##0);_(* ""-""_);_(@_)"

'Range("a1").Select
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
