Attribute VB_Name = "Fragebogen"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "img_Logo, 1, 0, MSForms, Image2"
Attribute VB_Control = "cb_Speichern, 2, 1, MSForms, CommandButton2"
Attribute VB_Control = "cb_Drucken, 3, 2, MSForms, CommandButton2"
Attribute VB_Control = "cb_Email, 4, 3, MSForms, CommandButton2"
Attribute VB_Control = "cb_Export, 5, 4, MSForms, CommandButton2"
Attribute VB_Control = "cbx_Geschlecht, 6, 5, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Familienstand, 7, 6, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Schwerbehindert, 8, 7, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Art_der_Beschaeftigung, 9, 8, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Probezeit, 10, 9, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Nebenbeschaeftigung, 11, 10, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Geringfuegig, 12, 11, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Schulabschluss, 13, 12, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Berufsausbildung, 14, 13, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Vertragsform, 15, 14, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Personengruppe, 16, 15, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Art_der_Befristung, 17, 16, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Schriftlicher_Abschluss, 18, 17, MSForms, CheckBox2"
Attribute VB_Control = "cbx_Weiterbeschaeftigung, 19, 18, MSForms, CheckBox2"
Attribute VB_Control = "cbx_Konfession, 20, 19, MSForms, ComboBox2"
Attribute VB_Control = "cbx_Elterneigenschaft, 21, 20, MSForms, ComboBox2"
Attribute VB_Control = "cbx_KV, 22, 21, MSForms, ComboBox2"
Attribute VB_Control = "cbx_RV, 23, 22, MSForms, ComboBox2"
Attribute VB_Control = "cbx_AV, 24, 23, MSForms, ComboBox2"
Attribute VB_Control = "cbx_PV, 25, 24, MSForms, ComboBox2"
Option Explicit

Private Sub cb_Speichern_Click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Der Speichern-Button ruft die Methode Speichern_unter (ver|fffd|nderte Version zum normalen Speichern_unter) auf
    Call mdl_Main.Speichern_unter
End Sub

Private Sub cb_Drucken_Click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Der Drucken-Button ruft die Druckvorschau (ver|fffd|nderte Version zur normalen Druckvorschau) auf
    Call Mdl_Druck.Druckaufbereitung
End Sub

Private Sub cb_Export_Click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Der Export-Button ruft die Methode Dialogwechsel auf um zum Exportdialog zu wechseln
    Call Mdl_Dialoge.Dialogwechsel(kein_Dialog, Export)
End Sub

Private Sub cb_Email_Click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Der E-Mail-Button ruft die Methode Dialogwechsel auf um zum E-Mail-Dialog zu wechseln
    Call Mdl_Dialoge.Dialogwechsel(kein_Dialog, Email)
End Sub

Private Sub img_Logo_click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Das Logo wechselt mit Hilfe des Dialogwechsels beim anclicken in den Dialog der es einem erlaub das Logo zu wechseln
    Call Mdl_Dialoge.Dialogwechsel(kein_Dialog, Logo)
End Sub

Private Sub cbx_wB_Option_Ja_click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Im Abschnitt "Weitere Besch|fffd|ftigungen" wird f|fffd|r die Checkboxen der 450|fffd|-Option sichergestellt, dass nur jeweils ein K|fffd|stchen angekreuzt ist
    If cbx_wB_Option_Ja.Object.Value = False Then
        'Um nach einer Auswahl die M|fffd|glichkeit zu haben beide K|fffd|stchen wieder unausgew|fffd|hlt zu bekommen ist die erste Variante weggelassen
        'cbx_wB_Option_Nein.Object.Value = True
    Else
        cbx_wB_Option_Nein.Object.Value = False
    End If
End Sub

Private Sub cbx_wB_Option_Nein_click()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Im Abschnitt "Weitere Besch|fffd|ftigungen" wird f|fffd|r die Checkboxen der 450|fffd|-Option sichergestellt, dass nur jeweils ein K|fffd|stchen angekreuzt ist
    If cbx_wB_Option_Nein.Object.Value = False Then
        'Um nach einer Auswahl die M|fffd|glichkeit zu haben beide K|fffd|stchen wieder unausgew|fffd|hlt zu bekommen ist die erste Variante weggelassen
        'cbx_wB_Option_Ja.Object.Value = True
    Else
        cbx_wB_Option_Ja.Object.Value = False
    End If
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
End Sub

Private Sub Worksheet_Calculate()
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
End Sub

Public Sub Worksheet_Change(ByVal Target As Excel.Range)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    'Bei jeder |fffd|nderung wird die passende Eingabepr|fffd|fung aufgerufen
    On Error Resume Next
    If Not Target = "" Then
        If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
            Call Mdl_Pruefungen.Eingabepruefung_Minijob(Target.Address(False, False))
        ElseIf ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
            Call Mdl_Pruefungen.Eingabepruefung_Azubi(Target.Address(False, False))
        Else
            Call Mdl_Pruefungen.Eingabepruefung(Target.Address(False, False))
        End If
    End If
    On Error GoTo 0
    
    'Der Name, Vorname und die Personalnummer werden in der Zeile am Dokumentenanfang |fffd|bernommen
    With ws_Assistent
        rng1 = Split(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";")(0)
        rng2 = .Cells(Vorname, clm_Range).Value
        rng3 = .Cells(Familienname, clm_Range).Value
    End With
    With Fragebogen
        If rng2 = Target.Address(False, False) Or rng3 = Target.Address(False, False) Then
            .Range(rng1).Value = .Range(rng2).Value & " " & .Range(rng3).Value
        End If
    End With
    
    'Blattschutz und Eingabepr|fffd|fung wieder aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
    'Rechtsklick deaktivieren
    Cancel = True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    'Falls der Speichern-Button hervorgehoben ist wird dieser wieder auf Normalfarbe ge|fffd|ndert
    Fragebogen.cb_Speichern.BackColor = Fragebogen.cb_Drucken.BackColor
End Sub
Attribute VB_Name = "Mdl_Dialoge"
Option Explicit
Public Dialog_Email As uf_Email
Public Dialog_Export As uf_Export
Public Dialog_Export_Speichern_unter As uf_Export_Speichern_unter
Public Dialog_Logo As uf_Logo

Public Sub Dialogwechsel(von As Dialog, zu As Dialog)
    Select Case zu
        Case Email
            Call Dialog_Email_zeigen(von)
        Case Export
            Call Dialog_Export_zeigen(von)
        Case Export_Speichern_unter
            Call Dialog_Export_Speichern_unter_zeigen(von)
        Case Logo
            Call Dialog_Logo_zeigen(von)
        Case kein_Dialog
            Call Dialoge_entladen(von)
    End Select
End Sub

Public Sub Dialoge_entladen(von)
    Select Case von
        Case Email
            Dialog_Email.Hide
            Set Dialog_Email = Nothing
        Case Export
            Dialog_Export.Hide
            Set Dialog_Export = Nothing
        Case Export_Speichern_unter
            Dialog_Export_Speichern_unter.Hide
            Set Dialog_Export_Speichern_unter = Nothing
        Case Logo
            Dialog_Logo.Hide
            Set Dialog_Logo = Nothing
    End Select
End Sub

Private Sub Dialog_Email_zeigen(von As Dialog)
    Select Case von
        Case kein_Dialog
            If Dialog_Email Is Nothing Then
                Set Dialog_Email = New uf_Email
            End If
        Case Export
            Dialog_Export.Hide
    End Select
    Dialog_Email.cb_Weiter.SetFocus
    Dialog_Email.Show False
End Sub

Private Sub Dialog_Export_zeigen(von As Dialog)
    Select Case von
        Case kein_Dialog
            If Dialog_Export Is Nothing Then
                Set Dialog_Export = New uf_Export
            End If
            Dialog_Export.bln_Email = False
        Case Email
            If Dialog_Export Is Nothing Then
                Set Dialog_Export = New uf_Export
            End If
            Dialog_Email.Hide
            Dialog_Export.bln_Email = True
        Case Export_Speichern_unter
            Dialog_Export_Speichern_unter.Hide
    End Select
    Dialog_Export.cb_Weiter.SetFocus
    Dialog_Export.Show False
End Sub

Private Sub Dialog_Export_Speichern_unter_zeigen(von As Dialog)
    Select Case von
        Case Export
            If Dialog_Export_Speichern_unter Is Nothing Then
                Set Dialog_Export_Speichern_unter = New uf_Export_Speichern_unter
            End If
            Dialog_Export.Hide
    End Select
    Dialog_Export_Speichern_unter.cb_Erzeugen.SetFocus
    Dialog_Export_Speichern_unter.Show False
End Sub

Private Sub Dialog_Logo_zeigen(von As Dialog)
    Select Case von
        Case kein_Dialog
            If Dialog_Logo Is Nothing Then
                Set Dialog_Logo = New uf_Logo
            End If
    End Select
    Dialog_Logo.cb_Einfuegen.SetFocus
    Dialog_Logo.Show False
End Sub
Attribute VB_Name = "Mdl_Druck"
Option Explicit
Const Monat_Stand As String = "11/2015"

Sub Druckaufbereitung()
    Dim shp As Shape
    Dim adr As String
    Dim str As String
    Dim rng As String
    Dim dat As String
    Dim valdat As String
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim tmp_brk As Integer
    Dim tmp As Integer
    Dim rng_brk As String
    
    'Beginn Geschwindigkeitsoptimierung ****************
    Dim updateMode As Boolean
    updateMode = Application.ScreenUpdating
    Application.ScreenUpdating = False
    '***************************************************
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    'Tempor|fffd|res Durckblatt anlegen
    Call Druckblatt_loeschen 'evtl. bereits vorhandenes Druckblatt l|fffd|schen
    Fragebogen.Copy After:=Fragebogen
    ActiveSheet.Name = "Druckansicht"
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Worksheets("Druckansicht"))
    
    'Werte auslesen
    Call mdl_Main.Werte_auslesen
    
    'Alle ComboBoxen und CommandButtons aus der Druckansicht entfernen
    On Error Resume Next
    With Worksheets("Druckansicht")
        For Each shp In .Shapes
            shp.Delete
        Next shp
    End With
    On Error GoTo 0
    
    Call Mdl_Steuerelemente.Image_Logo_erzeugen(Worksheets("Druckansicht"))
    
    If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
        Worksheets("Druckansicht").Range("D10").Value = ""
    ElseIf ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
        Worksheets("Druckansicht").Range("D10").Value = ""
    Else
        Worksheets("Druckansicht").Range("D8").Value = ""
    End If

    'Rahmen f|fffd|r den Druck anpassen und Werte aus ComboBoxen |fffd|bernehmen
    With ws_Assistent
        adr = .Cells(Rows.count, clm_Bezeichnung).End(xlUp).Address(True, False)
        j = VBA.Mid(adr, InStr(adr, "$") + 1)
        
        For i = 1 To j
            If .Cells(i, clm_Position).Value = "" Or i = Probezeit Or i >= weitere_Beschaeftigungen And i <= weitere_Beschaeftigungen_5 Then
                str = .Cells(i, clm_Range).Value
                
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                    Else
                        rng = VBA.Left(str, InStr(str, ";") - 1)    'die Aktuelle Position (als String der eine Range Angabe darstellt)
                        str = VBA.Mid(str, InStr(str, ";") + 1)     'die restlichen Positionen mit Strichpunkten als Trennzeichen
                    End If
                    
                    'Es muessen fuer alle Eingaben die Rahmen entfernt werden (der Text an sich steht schon an der richtigen Stelle)
                    Worksheets("Druckansicht").Range(rng).Select
                    With Selection
                        .Borders(xlEdgeLeft).LineStyle = xlNone
                        .Borders(xlEdgeTop).LineStyle = xlNone
                        .Borders(xlEdgeBottom).LineStyle = xlNone
                        .Borders(xlEdgeRight).LineStyle = xlNone
                    End With
                    If VBA.Left(rng, 2) = "AF" And i >= weitere_Beschaeftigungen And i <= weitere_Beschaeftigungen_5 Then
                        Worksheets("Druckansicht").Range(rng).Value = .Cells(i, clm_Wert_2).Value
                    End If
                Loop
            Else
                If Not i = CheckBoxen_Befristung Then
                    str = .Cells(i, clm_Range).Value
                    dat = .Cells(i, clm_Wert).Value
                    Do Until str = ""
                        If InStr(str, ";") = 0 Then
                            rng = str
                            str = ""
                            valdat = dat
                        Else
                            rng = VBA.Left(str, InStr(str, ";") - 1)
                            str = VBA.Mid(str, InStr(str, ";") + 1)
                            If Not dat = "" Then
                                valdat = VBA.Left(dat, InStr(dat, ";") - 1)
                                dat = VBA.Mid(dat, InStr(dat, ";") + 1)
                            Else
                                valdat = ""
                            End If
                        End If
                        Worksheets("Druckansicht").Range(rng).Value = valdat
                    Loop
                End If
            End If
        Next i
        If Not .Cells(CheckBoxen_Befristung, clm_Bezeichnung) = "" Then
            Call Mdl_Steuerelemente.CheckBoxen_Befristung_erzeugen(Worksheets("Druckansicht"))
        End If
        If Not .Cells(RV_Option, clm_Bezeichnung) = "" Then
            Call Mdl_Steuerelemente.CheckBox_RV_Option_erzeugen(Worksheets("Druckansicht"))
        End If
        If Not .Cells(EUR450_Option, clm_Bezeichnung) = "" And _
                ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
            Call Mdl_Steuerelemente.CheckBox_weitere_Beschaeftigungen_Option_erzeugen(Worksheets("Druckansicht"))
        End If
    End With
    
    'Angaben f|fffd|r Bea_nur_Druck hinzuf|fffd|gen
    Call Angaben_zu_Bea_nur_Druck_einfuegen
    Call Mdl_Steuerelemente.CheckBoxen_Angaben_zu_Bea_nur_Druck
    
    'Angaben zu den Arbeitspapieren hinzuf|fffd|gen
    If Not ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 1).Value = "" Then
        If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
            Call Angaben_zu_den_Arbeitspapieren_Minijob_einfuegen
            Call Mdl_Steuerelemente.CheckBoxen_Angaben_zu_den_Arbeitspapieren_Minijob_erzeugen
        ElseIf ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
            Call Angaben_zu_den_Arbeitspapieren_Auszubildende_einfuegen
            Call Mdl_Steuerelemente.CheckBoxen_Angaben_zu_den_Arbeitspapieren_Auszubildende_erzeugen
        Else
            Call Angaben_zu_den_Arbeitspapieren_einfuegen
            Call Mdl_Steuerelemente.CheckBoxen_Angaben_zu_den_Arbeitspapieren_erzeugen
        End If
    End If
    
    'Arbeitnehmererkl|fffd|rung und Unterschriftszeile hinzuf|fffd|gen
    Call Arbeitnehmererklaerung_einfuegen
    Call Unterschriftszeile_einfuegen
    
    'Seite einrichten und Fu|fffd|zeile hinzuf|fffd|gen
    With Worksheets("Druckansicht")
        #If VBA7 Then
            Application.PrintCommunication = False
        #End If
        With .PageSetup
            .LeftMargin = Application.InchesToPoints(0.7)
            .RightMargin = Application.InchesToPoints(0.7)
            .TopMargin = Application.InchesToPoints(0.5)
            .BottomMargin = Application.InchesToPoints(0.5)
            .HeaderMargin = Application.InchesToPoints(0.3)
            .FooterMargin = Application.InchesToPoints(0.3)
            If ws_Verwaltung.Cells(Eigenes_Logo, 2).Value = "X" Then
                .BlackAndWhite = False
            Else
                .BlackAndWhite = True
            End If
            .Zoom = 68
        End With
        #If VBA7 Then
            Application.PrintCommunication = True
        #End If
    
    'Ende Geschwindigkeitsoptimierung ******************
    Application.ScreenUpdating = updateMode
    '***************************************************
    
        ActiveWindow.ScrollRow = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht"))
        ActiveWindow.ScrollRow = 1
        For i = 1 To .HPageBreaks.count
            tmp_brk = .HPageBreaks(i).Location.Row
            For k = Blk_Persoenliche_Angaben To Arbeitnehmererklaerung
                If ws_Verwaltung.Cells(k, 2).Value > tmp_brk Then
                    Exit For
                Else
                    If Not ws_Verwaltung.Cells(k, 2).Value = "" Then
                        tmp = ws_Verwaltung.Cells(k, 2).Value
                    End If
                End If
            Next k
            rng_brk = "AZ" & tmp

            .HPageBreaks.Add Before:=Range(rng_brk)
            .VPageBreaks.Add Before:=Range(rng_brk)

            ActiveWindow.ScrollRow = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht"))
            ActiveWindow.ScrollRow = 1
        Next i
        
'        #If VBA7 Then
'            Application.PrintCommunication = False
'        #End If
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .PageSetup.LeftFooter = VBA.Chr(169) & " DATEV eG 2015, alle Rechte vorbehalten"
            .PageSetup.CenterFooter = "Stand " & Monat_Stand
            .PageSetup.RightFooter = "Seite &P von &N"
        Else
            .PageSetup.LeftFooter = VBA.Chr(169) & " DATEV eG 2015, all rights reserved"
            .PageSetup.CenterFooter = Monat_Stand
            .PageSetup.RightFooter = "Page &P of &N"
        End If
'        #If VBA7 Then
'            Application.PrintCommunication = True
'        #End If
    
        'Falls Office Version 2007 oder neuer verwendet wird
        If Not Val(Application.Version) < 12 Then
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
            
            If Not (CommandBars("Ribbon").Controls(1).height < 100) = 0 Then
                CommandBars.ExecuteMso "MinimizeRibbon"
            End If

            .PrintPreview
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        Else
            .PrintPreview
        End If
    End With
    
    'Erstes Eingabefeld ausw|fffd|hlen
    Fragebogen.DisplayPageBreaks = False
    Fragebogen.Select
    Fragebogen.Range(Split(ws_Assistent.Cells(Firma, clm_Range).Value, ";")(0)).Select
    
    'Tempor|fffd|res Durckblatt wieder l|fffd|schen
    Call Druckblatt_loeschen
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
    
End Sub

Private Sub Druckblatt_loeschen()
    Dim ws As Worksheet
    
    For Each ws In Worksheets
        If ws.Name = "Druckansicht" Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
            Exit For
        End If
    Next ws
End Sub

Private Sub Angaben_zu_Bea_nur_Druck_einfuegen()
    Dim pos As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht")) + 6
    ws_Verwaltung.Cells(Blk_BEA, 2).Value = pos
    
    With Worksheets("Druckansicht")
        '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
        .Rows(pos).RowHeight = 5.5
        .Rows(pos + 1).RowHeight = 15
        .Rows(pos + 2).RowHeight = 5.5

        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Range("D" & pos + 1).Value = "Bescheinigungen elektronisch annehmen (Bea) / Electronical acceptance of certificates (Bea)"
        ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
            .Range("D" & pos + 1).Value = "Electronical acceptance of certificates (Bea)"
        Else
            .Range("D" & pos + 1).Value = "Bescheinigungen elektronisch annehmen (Bea)"
        End If
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 12
            .Bold = True
            .ColorIndex = 1
        End With

        'Strich unter der |fffd|berschrift
        With .Range("C" & pos + 3 & ":AW" & pos + 3)
            .RowHeight = 2
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        .Rows(pos + 4).RowHeight = 0
        .Rows(pos + 5).RowHeight = 0
        .Rows(pos + 6).RowHeight = 0
        .Rows(pos + 7).RowHeight = 0

        'Textzeile unterhalb des Striches
        With .Range("D" & pos + 8 & ":AJ" & pos + 8)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .WrapText = True
            .RowHeight = 25.5
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Value = "I object to my income statements (earned and additional) being forwarded electronically to the Bundesagentur f|fffd|r Arbeit (Federal Employment Office)."
            Else
                .Value = "Ich widerspreche der elektronischen |fffd|bermittlung von Arbeits- und Nebeneinkommensbescheinigungen an die Bundesagentur f|fffd|r Arbeit."
                
            End If
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = FontColor
            End With
        End With

        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            With .Range("D" & pos + 9 & ":AJ" & pos + 9)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlCenter
                .MergeCells = True
                .WrapText = True
                .RowHeight = 25.5
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .Value = "I object to my income statements (earned and additional) being forwarded electronically to the Bundesagentur f|fffd|r Arbeit (Federal Employment Office)."
                End If
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = FontColor
                End With
            End With
        Else
            .Rows(pos + 9).RowHeight = 0
        End If
        
        .Rows(pos + 10).RowHeight = 3
        .Rows(pos + 11).RowHeight = 2
        .Rows(pos + 12).RowHeight = 5.5
        
    End With
End Sub

Private Sub Angaben_zu_den_Arbeitspapieren_einfuegen()
    Dim pos, i, j As Integer
    Dim str, str2, rng, rng2 As String
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht")) + 6
    ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 2).Value = pos
    
    With Worksheets("Druckansicht")
        '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
        .Rows(pos).RowHeight = 5.5
        .Rows(pos + 1).RowHeight = 15
        .Rows(pos + 2).RowHeight = 5.5
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren / Employment documents"
        ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
            .Range("D" & pos + 1).Value = "Employment documents"
        Else
            .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren"
        End If
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 12
            .Bold = True
            .ColorIndex = 1
        End With
        pos = pos + Abstand_Abschnittsueberschrift
    
        'Datenfeld anlegen
        .Rows(pos & ":" & pos).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 2 & ":" & pos + 2).RowHeight = 0
        End If
        .Rows(pos + 3 & ":" & pos + 3).RowHeight = 3
        .Rows(pos + 4 & ":" & pos + 4).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 6 & ":" & pos + 6).RowHeight = 0
        End If
        .Rows(pos + 7 & ":" & pos + 7).RowHeight = 3
        .Rows(pos + 8 & ":" & pos + 8).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 10 & ":" & pos + 10).RowHeight = 0
        End If
        .Rows(pos + 11 & ":" & pos + 11).RowHeight = 3
        .Rows(pos + 12 & ":" & pos + 12).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 14 & ":" & pos + 14).RowHeight = 0
        End If
        .Rows(pos + 15 & ":" & pos + 15).RowHeight = 3
        .Rows(pos + 16 & ":" & pos + 16).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 18 & ":" & pos + 18).RowHeight = 0
        End If
        .Rows(pos + 19 & ":" & pos + 19).RowHeight = 3
        .Rows(pos + 20 & ":" & pos + 20).RowHeight = 2
        
        With .Range("C" & pos & ":AW" & pos + 20)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        j = 1
        For i = pos + 1 To pos + 17 Step 4
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
                str2 = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                str = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            Else
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            End If
            
            rng = "D" & i & ":S" & i
            rng2 = "D" & i + 1 & ":S" & i + 1

            With .Range(rng)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlBottom
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = False
                    .ColorIndex = 1
                End With
            End With
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlTop
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str2
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
        
        For i = pos + 1 To pos + 17 Step 4
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
                str2 = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                str = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            Else
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            End If
            
            rng = "AB" & i & ":AQ" & i
            rng2 = "AB" & i + 1 & ":AQ" & i + 1

            With .Range(rng)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlBottom
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = False
                    .ColorIndex = 1
                End With
            End With
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlTop
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str2
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
    End With
End Sub

Private Sub Angaben_zu_den_Arbeitspapieren_Minijob_einfuegen()
    Dim pos As Integer
    Dim str As String
    Dim str2 As String
    Dim rng As String
    Dim rng2 As String
    Dim i As Integer
    Dim j As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht")) + 6
    ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 2).Value = pos
    
    With Worksheets("Druckansicht")
        '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
        .Rows(pos).RowHeight = 5.5
        .Rows(pos + 1).RowHeight = 15
        .Rows(pos + 2).RowHeight = 5.5
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren / Employment documents"
        ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
            .Range("D" & pos + 1).Value = "Information on employment documents"
        Else
            .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren"
        End If
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 12
            .Bold = True
            .ColorIndex = 1
        End With
        pos = pos + Abstand_Abschnittsueberschrift
    
        'Datenfeld anlegen
        .Rows(pos & ":" & pos).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 2 & ":" & pos + 2).RowHeight = 0
        End If
        .Rows(pos + 3 & ":" & pos + 3).RowHeight = 3
        .Rows(pos + 4 & ":" & pos + 4).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 5 & ":" & pos + 5).RowHeight = 25.5
            .Rows(pos + 6 & ":" & pos + 6).RowHeight = 0
        Else
            .Rows(pos + 5 & ":" & pos + 6).RowHeight = 25.5
        End If
        .Rows(pos + 7 & ":" & pos + 7).RowHeight = 3
        .Rows(pos + 8 & ":" & pos + 8).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 10 & ":" & pos + 10).RowHeight = 0
        End If
        .Rows(pos + 11 & ":" & pos + 11).RowHeight = 3
        .Rows(pos + 12 & ":" & pos + 12).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 14 & ":" & pos + 14).RowHeight = 0
        End If
        .Rows(pos + 15 & ":" & pos + 15).RowHeight = 3
        .Rows(pos + 16 & ":" & pos + 16).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 18 & ":" & pos + 18).RowHeight = 0
        End If
        .Rows(pos + 19 & ":" & pos + 19).RowHeight = 3
        .Rows(pos + 20 & ":" & pos + 20).RowHeight = 2
        
        With .Range("C" & pos & ":AW" & pos + 20)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        j = 1
        For i = pos + 1 To pos + 17 Step 4
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
                str2 = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                str = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            Else
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            End If
            
            rng = "D" & i & ":S" & i
            rng2 = "D" & i + 1 & ":S" & i + 1

            With .Range(rng)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlBottom
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = False
                    .ColorIndex = 1
                End With
            End With
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlTop
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str2
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
        
        For i = pos + 1 To pos + 17 Step 4
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
                str2 = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                str = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            Else
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            End If

            rng = "AB" & i & ":AQ" & i
            rng2 = "AB" & i + 1 & ":AQ" & i + 1

            With .Range(rng)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlBottom
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = False
                    .ColorIndex = 1
                End With
            End With
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlTop
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str2
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
    End With
End Sub

Private Sub Angaben_zu_den_Arbeitspapieren_Auszubildende_einfuegen()
    Dim pos As Integer
    Dim str As String
    Dim str2 As String
    Dim rng As String
    Dim rng2 As String
    Dim i As Integer
    Dim j As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht")) + 6
    ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 2).Value = pos
    
    With Worksheets("Druckansicht")
        '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
        .Rows(pos).RowHeight = 5.5
        .Rows(pos + 1).RowHeight = 15
        .Rows(pos + 2).RowHeight = 5.5
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren / Employment documents"
        ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
            .Range("D" & pos + 1).Value = "Employment documents"
        Else
            .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren"
        End If
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 12
            .Bold = True
            .ColorIndex = 1
        End With
        pos = pos + Abstand_Abschnittsueberschrift
    
        'Datenfeld anlegen
        .Rows(pos & ":" & pos).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 2 & ":" & pos + 2).RowHeight = 0
        End If
        .Rows(pos + 3 & ":" & pos + 3).RowHeight = 3
        .Rows(pos + 4 & ":" & pos + 4).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 6 & ":" & pos + 6).RowHeight = 0
        End If
        .Rows(pos + 7 & ":" & pos + 7).RowHeight = 3
        .Rows(pos + 8 & ":" & pos + 8).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 10 & ":" & pos + 10).RowHeight = 0
        End If
        .Rows(pos + 11 & ":" & pos + 11).RowHeight = 3
        .Rows(pos + 12 & ":" & pos + 12).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 14 & ":" & pos + 14).RowHeight = 0
        End If
        .Rows(pos + 15 & ":" & pos + 15).RowHeight = 3
        .Rows(pos + 16 & ":" & pos + 16).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(pos + 18 & ":" & pos + 18).RowHeight = 0
        End If
        .Rows(pos + 19 & ":" & pos + 19).RowHeight = 3
        .Rows(pos + 20 & ":" & pos + 20).RowHeight = 2
        
        With .Range("C" & pos & ":AW" & pos + 20)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        j = 1
        For i = pos + 1 To pos + 17 Step 4
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
                str2 = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                str = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
            Else
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
            End If
            
            rng = "D" & i & ":S" & i
            rng2 = "D" & i + 1 & ":S" & i + 1

            With .Range(rng)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlBottom
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = False
                    .ColorIndex = 1
                End With
            End With
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlTop
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str2
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
        
        For i = pos + 1 To pos + 17 Step 4
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
                str2 = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                str = ws_Listen_englisch.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
            Else
                str = ws_Listen.Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende).Value
            End If
            
            rng = "AB" & i & ":AQ" & i
            rng2 = "AB" & i + 1 & ":AQ" & i + 1

            With .Range(rng)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlBottom
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = False
                    .ColorIndex = 1
                End With
            End With
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .VerticalAlignment = xlTop
                Else
                    .VerticalAlignment = xlCenter
                End If
                .WrapText = True
                .MergeCells = True
                .Value = str2
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
    End With
End Sub

Private Sub Arbeitnehmererklaerung_einfuegen()
    Dim pos As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht")) + 5
    ws_Verwaltung.Cells(Arbeitnehmererklaerung, 2).Value = pos
    
    With Worksheets("Druckansicht")
        .Rows(pos).RowHeight = 2
        .Rows(pos + 1 & ":" & pos + 3).RowHeight = 12.75
        .Rows(pos + 4).RowHeight = 2
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .Range("D" & pos + 1).Value = "Erkl|fffd|rung des Arbeitnehmers:"
        Else
            .Range("D" & pos + 1).Value = "Declaration by the employee:"
        End If
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = True
            .ColorIndex = 1
        End With
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .Range("D" & pos + 2).Value = "Ich versichere, dass die vorstehenden Angaben der Wahrheit entsprechen." & _
                                          " Ich verpflichte mich, meinem Arbeitgeber alle |fffd|nderungen, insbesondere"
            .Range("D" & pos + 3).Value = "in Bezug auf weitere Besch|fffd|ftigungen (in Bezug auf Art, Dauer und Entgelt)" & _
                                          " unverz|fffd|glich mitzuteilen."
        Else
            .Range("D" & pos + 2).Value = "I affirm that the above information is correct." & _
                                          " I undertake to inform my employer without delay of any changes, in particular"
            .Range("D" & pos + 3).Value = "with regard to further employment (in respect of type, duration and remuneration)."
        End If
        With .Range("D" & pos + 2 & ":D" & pos + 3).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
    End With
End Sub

Private Sub Unterschriftszeile_einfuegen()
    Dim pos As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile(Worksheets("Druckansicht")) + 5
    
    With Worksheets("Druckansicht")
        .Rows(pos).RowHeight = 2
        .Rows(pos + 1).RowHeight = 12.75
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .Range("D" & pos + 1).Value = "Datum (TT.MM.JJJJ)"
        Else
            .Range("D" & pos + 1).Value = "Date (DD.MM.YYYY)"
        End If
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .Range("L" & pos + 1).Value = "Unterschrift Arbeitnehmer"
        Else
            .Range("L" & pos + 1).Value = "Employee signature"
        End If
        With .Range("L" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .Range("AB" & pos + 1).Value = "Datum (TT.MM.JJJJ)"
        Else
            .Range("AB" & pos + 1).Value = "Date (DD.MM.YYYY)"
        End If
        With .Range("AB" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
            .Range("AJ" & pos + 1).Value = "Unterschrift Arbeitgeber"
        Else
            .Range("AJ" & pos + 1).Value = "Employer signature"
        End If
        With .Range("AJ" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        
        If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Or _
            ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
            .Rows(pos + 2).RowHeight = 40
            .Rows(pos + 3).RowHeight = 12.75
            
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D" & pos + 3).Value = "Datum (TT.MM.JJJJ)"
            Else
                .Range("D" & pos + 3).Value = "Date (DD.MM.YYYY)"
            End If
            With .Range("D" & pos + 3).Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("L" & pos + 3).Value = "Bei Minderj|fffd|hrigen Unterschrift des gesetzlichen Vertreters"
            Else
                .Range("L" & pos + 3).Value = "For minors signature of legal representative"
            End If
            With .Range("L" & pos + 3).Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
            
            With .Range("C" & pos + 3 & ":Y" & pos + 3).Borders(xlEdgeTop)
                .LineStyle = xlDash
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End If
        
        With .Range("C" & pos + 1 & ":Y" & pos + 1).Borders(xlEdgeTop)
            .LineStyle = xlDash
            .Weight = xlThin
            .ColorIndex = 1
        End With
        With .Range("AA" & pos + 1 & ":AW" & pos + 1).Borders(xlEdgeTop)
            .LineStyle = xlDash
            .Weight = xlThin
            .ColorIndex = 1
        End With
    End With
End Sub
Attribute VB_Name = "Mdl_Enums"

Public Enum Fragebogen_Art
    Neue_MA
    Minijob
    Auszubildende
End Enum

Public Enum OSArchitecture
    OSA_Unknown = 0
    OSA_x86 = 1     ' 32 bit
    OSA_x64 = 2     ' 64 bit
    OSA_Itanium = 3 ' 64 bit
End Enum

Public Enum Zustand_Dateiname
    OK
    zu_lang
    enthaelt_unerlaubte_Zeichen
End Enum

Public Enum Dialog
    kein_Dialog
    Email
    Export
    Export_Speichern_unter
    Logo
End Enum

Public Enum Datenfeld
    kein_Datenfeld = 0
    Firma = 1
    Name_des_Mitarbeiters_Personalnummer = 2
    Familienname = 3
    Vorname = 4
    Geburtsname = 5
    Geburtsdatum = 6
    Strasse_Hausnr = 7
    PLZ_Ort = 8
    Anschriftenzusatz = 9
    Versicherungsnummer = 10
    Geburtsort = 11
    Geburtsland = 12
    Geschlecht_Familienstand = 13
    Staatsangehoerigkeit = 14
    Schwerbehindert = 15
    Arbeitnehmernummer = 16
    Kontonummer_Bankleitzahl = 17
    Bankbezeichnung = 18
    IBAN = 19
    BIC = 20
    Barzahlung = 21
    Eintrittsdatum_Ersteintrittsdatum = 22
    Betriebsstaette = 23
    Berufsbezeichnung = 24
    Ausgeuebte_Taetigkeit = 25
    Art_der_Beschaeftigung = 26
    Probezeit = 27
    Nebenbeschaeftigung = 28
    Geringfuegige_Beschaeftigung = 29
    Hoechster_Schulabschluss = 30
    Hoechste_Berufsausbildung = 31
    Beginn_der_Ausbildung = 32
    Ende_der_Ausbildung = 33
    Woechentliche_Arbeitszeit_Urlaubsanspruch = 34
    Vertragsform = 35
    Woechentliche_Arbeitszeit = 36
    Kostenstelle = 37
    Abteilungsnummer = 38
    Im_Baugewerbe_beschaeftigt_seit = 39
    Personengruppe = 40
    Status_Beschaeftigung = 41
    Art_der_Befristung = 42
    CheckBoxen_Befristung = 43
    Befristung_Arbeitsvertrag_zum = 44
    Abschluss_Arbeitsvertrag_am = 45
    Befristung_Ausbildungsvertrag_zum = 46
    Abschluss_Ausbildungsvertrag_am = 47
    Finanzamtsnummer_Identifikationsnummer = 48
    Steuerklasse_Faktor = 49
    Kinderfreibetrag = 50
    Konfession = 51
    Pauschalierung = 52
    Abwaelzung_an_Arbeitnehmer = 53
    Gesetzl_Krankenkasse = 54
    Krankenkasse = 55
    Elterneigenschaft = 56
    KV_RV = 57
    AV_PV = 58
    UV_Gefahrtarif = 59
    Krankenversicherung = 60
    Name_Krankenkasse_Private_Versicherung = 61
    RV_Option = 62
    Entlohnung = 63
    Entlohnung_2 = 64
    Entlohnung_3 = 65
    Entlohnung_4 = 66
    Entlohnung_5 = 67
    Ausbildungsverguetung = 68
    Ausbildungsverguetung_2 = 69
    Ausbildungsverguetung_3 = 70
    Empfaenger_VWL = 71
    Betrag_AG_Anteil = 72
    seit_wann = 73
    Vertragsnummer = 74
    Kontonummer_Bankleitzahl_VWL = 75
    Bankbezeichnung_VWL = 76
    IBAN_VWL = 77
    BIC_VWL = 78
    Vorbeschaeftigungszeiten = 79
    Vorbeschaeftigungszeiten_2 = 80
    Vorbeschaeftigungszeiten_3 = 81
    Vorbeschaeftigungszeiten_4 = 82
    Vorbeschaeftigungszeiten_5 = 83
    weitere_Beschaeftigungen = 84
    weitere_Beschaeftigungen_2 = 85
    weitere_Beschaeftigungen_3 = 86
    weitere_Beschaeftigungen_4 = 87
    weitere_Beschaeftigungen_5 = 88
    Bea = 89
    EUR450_Option = 90
End Enum

Public Enum Spalte_Datenfeld
    clm_Bezeichnung = 1
    clm_Bezeichnung_englisch = 2
    clm_Arbeitgeberfeld = 3
    clm_ohne_Eingabefeld = 4
    clm_Range = 5
    clm_Position = 6
    clm_Wert = 7
    clm_Wert_2 = 8
    clm_OO_Name = 9
End Enum

Public Enum Liste
    Lst_Angaben_zu_den_Arbeitspapieren = 1
    Lst_Angaben_zu_den_Arbeitspapieren_Minijob = 2
    Lst_Angaben_zu_den_Arbeitspapieren_Auszubildende = 3
    Lst_Geschlecht = 4
    Lst_Familienstand = 5
    Lst_Schwerbehindert = 6
    Lst_Barzahlung = 7
    Lst_Art_der_Beschaeftigung = 8
    Lst_Probezeit = 9
    Lst_Nebenbeschaeftigung = 10
    Lst_Geringfuegige_Beschaeftigung = 11
    Lst_Hoechster_Schulabschluss = 12
    Lst_Hoechste_Berufsausbildung = 13
    Lst_Vertragsform = 14
    Lst_Personengruppe = 15
    Lst_Status_Beschaeftigung = 16
    Lst_Art_der_Befristung = 17
    Lst_Konfession = 18
    Lst_Pauschalierung = 19
    Lst_Abwaelzung_an_Arbeitnehmer = 20
    Lst_Elterneigenschaft = 21
    Lst_KV = 22
    Lst_RV = 23
    Lst_AV = 24
    Lst_PV = 25
    Lst_RV_Option = 26
    Lst_Krankenversicherung = 27
    Lst_weitere_Beschaeftigungen = 28
    Lst_Bea = 29
    Lst_EUR450_Option = 30
End Enum

Public Enum Verwaltung
    Gewaehlter_Fragebogen = 1
    Sprache_PFB = 2
    Eigenes_Logo = 3
    Initialisierung_durchgefuehrt = 5
    Fragebogen_erzeugt = 6
    Beraternummer = 8
    Mandantennummer = 9
    Blk_Allgemein = 11
    Blk_Persoenliche_Angaben = 12
    Blk_Beschaeftigung = 13
    Blk_Befristung = 14
    Blk_Steuer = 15
    Blk_Sozialversicherung = 16
    Blk_Entlohnung = 17
    Blk_Ausbildungsverguetung = 18
    Blk_VWL = 19
    Blk_Vorbeschaeftigungszeiten = 20
    Blk_weitere_Beschaeftigungen = 21
    Blk_BEA = 22
    Angaben_zu_den_Arbeitspapieren = 23
    Arbeitnehmererklaerung = 24
End Enum
Attribute VB_Name = "Mdl_Export"
Option Explicit

Public Sub Export_Datei_erstellen(Verzeichnis As String, Dateiname As String)
    Dim str_Folder As String
    Dim str_File_Name As String
    Dim str_File As String
    Dim answer As Integer

    'Pfad f|fffd|r Ausgabedatei |fffd|bernehmen
    str_Folder = Verzeichnis
        
    'Name f|fffd|r Ausgabedatei |fffd|bernehmen
    If VBA.Right(Dateiname, 4) = ".txt" Then
        str_File_Name = Dateiname
    Else
        str_File_Name = Dateiname & ".txt"
    End If
    str_File = str_Folder & "\" & str_File_Name
    
    'Pr|fffd|fung ob bereits eine Datei mit dem gew|fffd|hlten Namen existiert
    If Not Mdl_Dialoge.Dialog_Export.bln_Email Then
        If Mdl_Hilfsfunktionen.Datei_exisitiert(str_File) Then
            answer = MsgBox("Es existiert bereits eine Datei mit dem Namen '" & _
                     CStr(Dir(str_File)) & "'." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                     " Soll diese |fffd|berschrieben werden?", _
                     vbYesNo)
            If answer = vbYes Then
                If Mdl_Hilfsfunktionen.Datei_schreibgeschuetzt(str_File) Then GoTo Fehlerbehandlung
            Else
                Call Dialogwechsel(kein_Dialog, Export_Speichern_unter)
                Exit Sub
            End If
        End If
    End If
    
    If Mdl_Dialoge.Dialog_Export.bln_Email Then
        Mdl_Dialoge.Dialog_Export.Hide
    Else
        Mdl_Dialoge.Dialog_Export_Speichern_unter.Hide
    End If
    Application.Wait Now + TimeValue("0:00:01")
    
    'Neue *.txt Datei anlegen
    On Error Resume Next
    Close #1
    On Error GoTo 0
    On Error GoTo Fehlerbehandlung
    Open str_File For Output As 1
    On Error GoTo 0
    
    'Pr|fffd|fen ob Datei angelegt wurde
    If Not Mdl_Hilfsfunktionen.Exportdatei_vorhanden(str_File) Then
        GoTo Fehlerbehandlung
    End If
    
    'Daten in Datei schreiben
    Call Exportdatei_befuellen
    
    'Exportdatei schlie|fffd|en
    Close #1
    
    'Vorschau der importierbaren Stammdaten zur|fffd|cksetzen
    Call Mdl_Formatierung.Markierung_aufheben
    
    Exit Sub
    
Fehlerbehandlung:
    On Error Resume Next
    Close #1
    On Error GoTo 0
    MsgBox "Fehler:" & vbCrLf & vbCrLf & _
            "Es ist ein Fehler beim Anlegen der Exportdatei aufgetreten!" & vbCrLf & _
            "Die Export wurde daher abgebrochen." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
            " F|fffd|hren Sie den Export erneut durch.", _
            vbCritical
    Exit Sub
End Sub

Public Sub Exportdatei_befuellen()
    Dim str_VersionImportDatei_LuG As String
    Dim str_Personalnummer As String
    Dim str_Familienname As String
    Dim str_Vorname As String
    Dim str_Geburtsname As String
    Dim str_Geburtsdatum As String
    Dim str_Strasse As String
    Dim str_Hausnummer As String
    Dim str_PLZ As String
    Dim str_Ort As String
    Dim str_Anschriftenzusatz As String
    Dim str_Versicherungsnummer As String
    Dim str_Geburtsort As String
    Dim str_Geburtsland_LuG As String
    Dim str_Geburtsland_LODAS As String
    Dim str_Geschlecht As String
    Dim str_Geschlecht_LODAS As String
    Dim str_Familienstand As String
    Dim str_Familienstand_LODAS As String
    Dim str_Staatsangehoerigkeit As String
    Dim str_Schwerbehindert As String
    Dim str_Kontonummer As String
    Dim str_Bankleitzahl As String
    Dim str_Bankbezeichnung As String
    Dim str_IBAN As String
    Dim str_BIC As String
    Dim str_Eintrittsdatum As String
    Dim str_Erster_Monat As String
    Dim str_Jahr As String
    Dim str_StammdatenGueltigAb As String
    Dim str_Ersteintrittsdatum As String
    Dim str_Betriebsstaette As String
    Dim str_Berufsbezeichnung As String
    Dim str_Ausgeuebte_Taetigkeit As String
    Dim str_Hoechster_Schulabschluss As String
    Dim str_Hoechste_Berufsausbildung As String
    Dim str_Beginn_der_Ausbildung As String
    Dim str_Ende_der_Ausbildung As String
    Dim str_Arbeitszeit As String
    Dim dbl_Arbeitszeit_Tag As Double
    Dim str_Urlaubsanspruch As String
    Dim str_Vertragsform As String
    Dim str_Arbeitszeit_Mo As String
    Dim str_Arbeitszeit_Di As String
    Dim str_Arbeitszeit_Mi As String
    Dim str_Arbeitszeit_Do As String
    Dim str_Arbeitszeit_Fr As String
    Dim str_Arbeitszeit_Sa As String
    Dim str_Arbeitszeit_So As String
    Dim dbl_Arbeitszeit_Woche As Double
    Dim str_Kostenstelle As String
    Dim str_Abteilungsnummer As String
    Dim str_Personengruppe As String
    Dim str_Art_der_Befristung As String
    Dim str_Befristung_Arbeitsvertrag_zum As String
    Dim str_Steuerklasse As String
    Dim str_Faktor As String
    Dim str_Kinderfreibetrag As String
    Dim str_Finanzamtsnummer As String
    Dim str_Identifikationsnummer As String
    Dim str_Konfession As String
    Dim str_KV As String
    Dim str_RV As String
    Dim str_AV As String
    Dim str_PV As String
    Dim str_Empfaenger_VWL As String
    Dim str_Betrag As String
    Dim str_AG_Anteil As String
    Dim str_seit_wann As String
    Dim str_Vertragsnummer As String
    Dim str_Kontonummer_VWL As String
    Dim str_Bankleitzahl_VWL As String
    Dim str_Bankbezeichnung_VWL As String
    Dim str_IBAN_VWL As String
    Dim str_BIC_VWL As String
    
    Call mdl_Main.Werte_auslesen
    
    On Error GoTo Fehlerbehandlung
    With ws_Assistent
        If Not .Cells(Name_des_Mitarbeiters_Personalnummer, clm_Wert).Value = "" Then
            str_Personalnummer = VBA.Split(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Familienname, clm_Wert).Value = "" Then
            str_Familienname = .Cells(Familienname, clm_Wert).Value
        End If
        
        If Not .Cells(Vorname, clm_Wert).Value = "" Then
            str_Vorname = .Cells(Vorname, clm_Wert).Value
        End If
        
        If Not .Cells(Geburtsname, clm_Wert).Value = "" Then
            str_Geburtsname = .Cells(Geburtsname, clm_Wert).Value
        End If
        
        If Not .Cells(Geburtsdatum, clm_Wert).Value = "" Then
            str_Geburtsdatum = .Cells(Geburtsdatum, clm_Wert).Value
        End If
        
        If Not .Cells(Strasse_Hausnr, clm_Wert).Value = "" Then
            str_Strasse = Split(.Cells(Strasse_Hausnr, clm_Wert).Value, ";")(0)
            str_Hausnummer = Split(.Cells(Strasse_Hausnr, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(PLZ_Ort, clm_Wert).Value = "" Then
            str_PLZ = Split(.Cells(PLZ_Ort, clm_Wert).Value, ";")(0)
            str_Ort = Split(.Cells(PLZ_Ort, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Anschriftenzusatz, clm_Wert).Value = "" Then
            str_Anschriftenzusatz = .Cells(Anschriftenzusatz, clm_Wert).Value
        End If
        
        If Not .Cells(Versicherungsnummer, clm_Wert).Value = "" Then
            str_Versicherungsnummer = .Cells(Versicherungsnummer, clm_Wert).Value
        End If
        
        If Not .Cells(Geburtsort, clm_Wert).Value = "" Then
            str_Geburtsort = .Cells(Geburtsort, clm_Wert).Value
        End If
        
        If .Cells(Geburtsland, clm_Wert).Value = "Deutschland" Or _
            .Cells(Geburtsland, clm_Wert).Value = "D" Or _
            .Cells(Geburtsland, clm_Wert).Value = "d" Then
            
            str_Geburtsland_LuG = "D"
            str_Geburtsland_LODAS = "0"
        Else
            str_Geburtsland_LuG = ""
            str_Geburtsland_LODAS = ""
        End If
        
        If Not .Cells(Geschlecht_Familienstand, clm_Wert).Value = "" Then
            str_Geschlecht = Split(.Cells(Geschlecht_Familienstand, clm_Wert).Value, ";")(0)
            If str_Geschlecht = "weiblich" Or str_Geschlecht = "female" Then
                str_Geschlecht = "weiblich"
                str_Geschlecht_LODAS = "1"
            Else
                str_Geschlecht = "m|fffd|nnlich"
                str_Geschlecht_LODAS = "0"
            End If
            
            str_Familienstand = Split(.Cells(Geschlecht_Familienstand, clm_Wert).Value, ";")(1)
            If str_Familienstand = "verheiratet" Or str_Familienstand = "married" Then
                str_Familienstand = "verheiratet"
                str_Familienstand_LODAS = "1"
            Else
                str_Familienstand_LODAS = "0"
                Select Case str_Familienstand
                    Case "unwed"
                        str_Familienstand = "ledig"
                    Case "divorced"
                        str_Familienstand = "geschieden"
                    Case "widowed"
                        str_Familienstand = "verwitwet"
                    Case "permanently separated"
                        str_Familienstand = "dauernd getrennt"
                End Select
                    
            End If
        End If
        
        If IsNumeric(.Cells(Staatsangehoerigkeit, clm_Wert).Value) Then
            str_Staatsangehoerigkeit = .Cells(Staatsangehoerigkeit, clm_Wert).Value
        Else
            If .Cells(Staatsangehoerigkeit, clm_Wert).Value = "Deutsch" Or _
               .Cells(Staatsangehoerigkeit, clm_Wert).Value = "deutsch" Or _
               .Cells(Staatsangehoerigkeit, clm_Wert).Value = "Deutschland" Or _
               .Cells(Staatsangehoerigkeit, clm_Wert).Value = "D" Or _
               .Cells(Staatsangehoerigkeit, clm_Wert).Value = "d" Then
                
                str_Staatsangehoerigkeit = "0"
            Else
                str_Staatsangehoerigkeit = ""
            End If
        End If
        
        If Not .Cells(Schwerbehindert, clm_Wert).Value = "" Then
            str_Schwerbehindert = .Cells(Schwerbehindert, clm_Wert).Value
            If str_Schwerbehindert = "ja" Or str_Schwerbehindert = "yes" Then
                str_Schwerbehindert = "1"
            Else
                str_Schwerbehindert = "0"
            End If
        End If
        
        If Not .Cells(Kontonummer_Bankleitzahl, clm_Wert).Value = "" Then
            str_Kontonummer = Split(.Cells(Kontonummer_Bankleitzahl, clm_Wert).Value, ";")(0)
            str_Bankleitzahl = Split(.Cells(Kontonummer_Bankleitzahl, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Bankbezeichnung, clm_Wert).Value = "" Then
            str_Bankbezeichnung = .Cells(Bankbezeichnung, clm_Wert).Value
        End If
        
        If Not .Cells(IBAN, clm_Wert).Value = "" Then
            str_IBAN = .Cells(IBAN, clm_Wert).Value
        End If
        
        If Not .Cells(BIC, clm_Wert).Value = "" Then
            str_BIC = .Cells(BIC, clm_Wert).Value
        End If
        
        If Not .Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Wert).Value = "" Then
            str_Eintrittsdatum = Split(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Wert).Value, ";")(0)
            str_Erster_Monat = VBA.Mid(str_Eintrittsdatum, 4, 2) & "/" & VBA.Mid(str_Eintrittsdatum, 7)
            str_Jahr = VBA.Right(str_Eintrittsdatum, 4)
            str_StammdatenGueltigAb = "01." & VBA.Mid(str_Eintrittsdatum, 4)
            
            str_Ersteintrittsdatum = Split(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Wert).Value, ";")(1)
            If str_Ersteintrittsdatum = "" Then
                str_Ersteintrittsdatum = str_Eintrittsdatum
            End If
        End If
        
        If Not .Cells(Betriebsstaette, clm_Wert).Value = "" Then
            str_Betriebsstaette = .Cells(Betriebsstaette, clm_Wert).Value
        End If
        
        If Not .Cells(Berufsbezeichnung, clm_Wert).Value = "" Then
            str_Berufsbezeichnung = .Cells(Berufsbezeichnung, clm_Wert).Value
        End If
        
        If Not .Cells(Ausgeuebte_Taetigkeit, clm_Wert).Value = "" Then
            str_Ausgeuebte_Taetigkeit = .Cells(Ausgeuebte_Taetigkeit, clm_Wert).Value
        End If
        
        If Not .Cells(Hoechster_Schulabschluss, clm_Wert).Value = "" Then
            str_Hoechster_Schulabschluss = VBA.Left(.Cells(Hoechster_Schulabschluss, clm_Wert).Value, 1)
        End If
        
        If Not .Cells(Hoechste_Berufsausbildung, clm_Wert).Value = "" Then
            str_Hoechste_Berufsausbildung = VBA.Left(.Cells(Hoechste_Berufsausbildung, clm_Wert).Value, 1)
        End If
        
        If Not .Cells(Beginn_der_Ausbildung, clm_Wert).Value = "" Then
            str_Beginn_der_Ausbildung = .Cells(Beginn_der_Ausbildung, clm_Wert).Value
        End If
        
        If Not .Cells(Ende_der_Ausbildung, clm_Wert).Value = "" Then
            str_Ende_der_Ausbildung = .Cells(Ende_der_Ausbildung, clm_Wert).Value
        End If
        
        'Falls eine gesamt w|fffd|chentliche Arbeitszeit angegeben wurde wird sie auf 5 Wochentage aufgeteilt und sp|fffd|ter anstelle der einzelnen Wochentagsangaben eingetragen
        If Not .Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Wert).Value = "" Then
            str_Arbeitszeit = Split(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Wert).Value, ";")(0)
            If Not str_Arbeitszeit = "" Then
                dbl_Arbeitszeit_Tag = str_Arbeitszeit / 5
            End If
            str_Urlaubsanspruch = Split(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Vertragsform, clm_Wert).Value = "" Then
            str_Vertragsform = VBA.Left(.Cells(Vertragsform, clm_Wert).Value, 1)
        End If
        
        If Not .Cells(Woechentliche_Arbeitszeit, clm_Wert).Value = "" Then
            str_Arbeitszeit_Mo = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(0)
            str_Arbeitszeit_Di = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(1)
            str_Arbeitszeit_Mi = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(2)
            str_Arbeitszeit_Do = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(3)
            str_Arbeitszeit_Fr = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(4)
            str_Arbeitszeit_Sa = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(5)
            str_Arbeitszeit_So = Split(.Cells(Woechentliche_Arbeitszeit, clm_Wert).Value, ";")(6)
            
            If str_Arbeitszeit_Mo = "" Then
                str_Arbeitszeit_Mo = "0"
            End If
            If str_Arbeitszeit_Di = "" Then
                str_Arbeitszeit_Di = "0"
            End If
            If str_Arbeitszeit_Mi = "" Then
                str_Arbeitszeit_Mi = "0"
            End If
            If str_Arbeitszeit_Do = "" Then
                str_Arbeitszeit_Do = "0"
            End If
            If str_Arbeitszeit_Fr = "" Then
                str_Arbeitszeit_Fr = "0"
            End If
            If str_Arbeitszeit_Sa = "" Then
                str_Arbeitszeit_Sa = "0"
            End If
            If str_Arbeitszeit_So = "" Then
                str_Arbeitszeit_So = "0"
            End If

            dbl_Arbeitszeit_Woche = VBA.CDbl(str_Arbeitszeit_Mo) + VBA.CDbl(str_Arbeitszeit_Di) + VBA.CDbl(str_Arbeitszeit_Mi) _
                                  + VBA.CDbl(str_Arbeitszeit_Do) + VBA.CDbl(str_Arbeitszeit_Fr) + VBA.CDbl(str_Arbeitszeit_Sa) _
                                  + VBA.CDbl(str_Arbeitszeit_So)
        End If
        
        If Not .Cells(Kostenstelle, clm_Wert).Value = "" Then
            str_Kostenstelle = .Cells(Kostenstelle, clm_Wert).Value
        End If
        
        If Not .Cells(Abteilungsnummer, clm_Wert).Value = "" Then
            str_Abteilungsnummer = .Cells(Abteilungsnummer, clm_Wert).Value
        End If
        
        If Not .Cells(Personengruppe, clm_Wert).Value = "" Then
            str_Personengruppe = VBA.Left(.Cells(Personengruppe, clm_Wert).Value, 3)
        End If
        
        If Not .Cells(Art_der_Befristung, clm_Wert).Value = "" Then
            str_Art_der_Befristung = .Cells(Art_der_Befristung, clm_Wert).Value
            Select Case str_Art_der_Befristung
                Case "Fixed-term"
                    str_Art_der_Befristung = "Befristet"
                Case "Permanent"
                    str_Art_der_Befristung = "Unbefristet"
                Case "Fixed-term ending on completion of assignment"
                    str_Art_der_Befristung = "Zweckbefristet"
                Case Else
            End Select
        End If
        
        If Not .Cells(Befristung_Arbeitsvertrag_zum, clm_Wert).Value = "" Then
            str_Befristung_Arbeitsvertrag_zum = .Cells(Befristung_Arbeitsvertrag_zum, clm_Wert).Value
        End If
        
        If Not .Cells(Steuerklasse_Faktor, clm_Wert).Value = "" Then
            str_Steuerklasse = Split(.Cells(Steuerklasse_Faktor, clm_Wert).Value, ";")(0)
            str_Faktor = Split(.Cells(Steuerklasse_Faktor, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Kinderfreibetrag, clm_Wert).Value = "" Then
            str_Kinderfreibetrag = .Cells(Kinderfreibetrag, clm_Wert).Value
        End If
        
        If Not .Cells(Finanzamtsnummer_Identifikationsnummer, clm_Wert).Value = "" Then
            str_Finanzamtsnummer = Split(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Wert).Value, ";")(0)
            str_Identifikationsnummer = Split(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Konfession, clm_Wert).Value = "" Then
            If .Cells(Konfession, clm_Wert).Value = "Konfessionslos" Then
                str_Konfession = " "
            Else
                str_Konfession = .Cells(Konfession, clm_Wert).Value
                Select Case str_Konfession
                    Case "Non-denominational"
                        str_Konfession = "Konfessionslos"
                    Case "rk - Roman-catholic church tax"
                        str_Konfession = "rk - R|fffd|misch-Katholische Kirchensteuer"
                    Case "ev - Protestant church tax"
                        str_Konfession = "ev - Evangelische Kirchensteuer"
                    Case "lt - Protestant Lutheran"
                        str_Konfession = "lt - Evangelisch lutherisch"
                    Case "rf - Protestant reformed"
                        str_Konfession = "rf - Evangelisch reformiert"
                    Case "ak - Old Catholic church tax"
                        str_Konfession = "ak - Altkatholische Kirchensteuer"
                    Case "is - Israelite / Jewish |fffd|Kultussteuer|fffd| (community tax)"
                        str_Konfession = "is - Israelitische / J|fffd|dische Kultussteuer"
                    Case "fb - Non-denominational state parish Baden"
                        str_Konfession = "fb - Freireligi|fffd|se Landesgemeinde Baden"
                    Case "ib - Israelite religious parish Baden"
                        str_Konfession = "ib - Israelitische Religionsgemeinschaft Baden"
                    Case "fo - Non-denominational parish Offenbach/Main"
                        str_Konfession = "fo - Freireligi|fffd|se Gemeinde Offenbach/Main"
                    Case "fp - Non-denominational state parish Palatinate"
                        str_Konfession = "fp - Freireligi|fffd|se Landesgemeinde Pfalz"
                    Case "fm - Non-denominational parish Mainz"
                        str_Konfession = "fm - Freireligi|fffd|se Gemeinde Mainz"
                    Case "j|fffd| - Jewish"
                        str_Konfession = "j|fffd| - J|fffd|disch"
                    Case "iw - Israelite religious parish W|fffd|rttemberg"
                        str_Konfession = "iw - Israelitische Religionsgemeinschaft W|fffd|rttembergs"
                    Case "if - Israelite |fffd|Kultussteuer|fffd| (community tax) Frankfurt"
                        str_Konfession = "if - Israelitische Kultussteuer Frankfurt"
                    Case "il - Israelite |fffd|Kultussteuer|fffd| (community tax) State"
                        str_Konfession = "il - Israelitische Kultussteuer Land"
                    Case "fr - French reformed"
                        str_Konfession = "fr - Franz|fffd|sisch reformiert"
                    Case "fa - Non-denominational parish Alzey"
                        str_Konfession = "fa - Freie Religionsgemeinschaft Alzey"
                    Case "fg - Non-denominational state parish Palatinate"
                        str_Konfession = "fg - Freireligi|fffd|se Landesgemeinde Pfalz"
                    Case "fs - Non-denominational parish Offenbach/Main"
                        str_Konfession = "fs - Freireligi|fffd|se Gemeinde Offenbach/Main"
                    Case "ih - Jewish |fffd|Kultussteuer|fffd| (community tax)"
                        str_Konfession = "ih - J|fffd|dische Kultussteuer"
                    Case "jd - Jewish |fffd|Kultussteuer|fffd| (community tax)"
                        str_Konfession = "jd - J|fffd|dische Kultussteuer"
                    Case "jh - Jewish |fffd|Kultussteuer|fffd| (community tax)"
                        str_Konfession = "jh - J|fffd|dische Kultussteuer"
                    Case Else
                End Select
            End If
        End If
        
        If Not .Cells(KV_RV, clm_Wert).Value = "" Then
            str_KV = Split(.Cells(KV_RV, clm_Wert).Value, ";")(0)
            If Not str_KV = "" Then
                str_KV = VBA.Left(str_KV, 1)
            End If
            str_RV = Split(.Cells(KV_RV, clm_Wert).Value, ";")(1)
            If Not str_RV = "" Then
                str_RV = VBA.Left(str_RV, 1)
            End If
        End If
        
        If Not .Cells(AV_PV, clm_Wert).Value = "" Then
            str_AV = Split(.Cells(AV_PV, clm_Wert).Value, ";")(0)
            If Not str_AV = "" Then
                str_AV = VBA.Left(str_AV, 1)
            End If
            str_PV = Split(.Cells(AV_PV, clm_Wert).Value, ";")(1)
            If Not str_PV = "" Then
                str_PV = VBA.Left(str_PV, 1)
            End If
        End If
        
        If Not .Cells(Empfaenger_VWL, clm_Wert).Value = "" Then
            str_Empfaenger_VWL = .Cells(Empfaenger_VWL, clm_Wert).Value
        End If
        
        If Not .Cells(Betrag_AG_Anteil, clm_Wert).Value = "" Then
            str_Betrag = Split(.Cells(Betrag_AG_Anteil, clm_Wert).Value, ";")(0)
            str_AG_Anteil = Split(.Cells(Betrag_AG_Anteil, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(seit_wann, clm_Wert).Value = "" Then
            str_seit_wann = .Cells(seit_wann, clm_Wert).Value
        End If
        
        If Not .Cells(Vertragsnummer, clm_Wert).Value = "" Then
            str_Vertragsnummer = .Cells(Vertragsnummer, clm_Wert).Value
        End If
        
        If Not .Cells(Kontonummer_Bankleitzahl_VWL, clm_Wert).Value = "" Then
            str_Kontonummer_VWL = Split(.Cells(Kontonummer_Bankleitzahl_VWL, clm_Wert).Value, ";")(0)
            str_Bankleitzahl_VWL = Split(.Cells(Kontonummer_Bankleitzahl_VWL, clm_Wert).Value, ";")(1)
        End If
        
        If Not .Cells(Bankbezeichnung_VWL, clm_Wert).Value = "" Then
            str_Bankbezeichnung_VWL = .Cells(Bankbezeichnung_VWL, clm_Wert).Value
        End If
        
        If Not .Cells(IBAN_VWL, clm_Wert).Value = "" Then
            str_IBAN_VWL = .Cells(IBAN_VWL, clm_Wert).Value
        End If
        
        If Not .Cells(BIC_VWL, clm_Wert).Value = "" Then
            str_BIC_VWL = .Cells(BIC_VWL, clm_Wert).Value
        End If
        
        
        If Mdl_Dialoge.Dialog_Export.ob_LuG Then
            If Len(Trim(Mdl_Registry.VersionImportDatei_LuG_lesen)) = 0 Then
                str_VersionImportDatei_LuG = "18.2"
            Else
                str_VersionImportDatei_LuG = Mdl_Registry.VersionImportDatei_LuG_lesen
            End If
        
            '**********************************
            ' EXPORTDATEI F|fffd|R LOHN UND GEHALT *
            '**********************************
            
            Print #1, "[Allgemein]"
            Print #1, "Ziel                = LuG"
            Print #1, "VersionImportDatei  = " & str_VersionImportDatei_LuG
            Print #1, "Kommentarzeichen    = #"
            Print #1, "Feldtrennzeichen    = ;"
            Print #1, "Zahlenkomma         = ,"
            Print #1, "Kombifeldbegrenzer  = ("
            Print #1, "Datumsformat        = TT/MM/JJJJ"
            Print #1, ""
            Print #1, "[Satzbeschreibung]"
            Print #1, "   1; MandantNeu;     Betriebsstaettenname;Mandantennummer;Beraternummer;ErsteAbrechnung;Basiswaehrung;ErsteAbrechnungEuro"
            Print #1, "   2; MandantSel;     Mandantennummer"
            Print #1, "   3; MitarbeiterNeu; Mitarbeiternummer;Name;Vorname;Eintrittsdatum;ErsterAbzurechnenderMonat"
            Print #1, "   4; MitarbeiterSel; Mitarbeiternummer"
            Print #1, ""
            Print #1, " 100; Mitarbeiter|Stammdaten|Personaldaten|Adresse / Name \"
            Print #1, "    ; Familienname\"
            Print #1, "    ; Geburtsname\"
            Print #1, "    ; Vorname\"
            Print #1, "    ; Stra|fffd|e\"
            Print #1, "    ; Hausnummer\"
            Print #1, "    ; Postleitzahl\"
            Print #1, "    ; Ort\"
            Print #1, "    ; Anschriftenzusatz"
            Print #1, ""
            Print #1, " 101; Mitarbeiter|Stammdaten|Personaldaten|Pers|fffd|nliche Angaben \"
            Print #1, "    ; Geburtsdatum\"
            Print #1, "    ; Geburtsort\"
            Print #1, "    ; Geburtsland(Nationalit|fffd|t Geburtsland;Staatsname)\"
            Print #1, "    ; Geschlecht\"
            Print #1, "    ; Versicherungsnummer(Gueltig_ab;Versicherungsnummer)\"
            Print #1, "    ; Familienstand\"
            Print #1, "    ; Staatsangeh|fffd|rigkeit(Nationenschl|fffd|ssel Staatsangeh.;Staatsname)"
            Print #1, ""
            Print #1, " 102; Mitarbeiter|Stammdaten|Personaldaten|Zahlungsweise \"
'            Print #1, "    ; KtoNr\"
'            Print #1, "    ; Bank(Bankleitzahl)\"
            Print #1, "    ; IBAN\"
            Print #1, "    ; BIC"
            Print #1, ""
            Print #1, " 200; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum \"
            Print #1, "    ; Datum erster Eintritt"
            Print #1, ""
            Print #1, " 201; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum|Besch|fffd|ftigungszeitraum \"
            Print #1, "    ; Eintrittsdatum"
            Print #1, ""
            Print #1, " 202; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum|Besch|fffd|ftigungszeitraum \"
            Print #1, "    ; Austrittsdatum"
            Print #1, ""
            Print #1, " 203; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum|Besch|fffd|ftigungszeitraum \"
            Print #1, "    ; Befristetes Arbeitsverh|fffd|ltnis"
            Print #1, ""
            Print #1, " 300; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Status \"
            Print #1, "    ; PGS(Gueltig_ab;PGS)"
            Print #1, ""
            Print #1, " 301; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Status|Ausbildung \"
            Print #1, "    ; Ausbildungsbeginn\"
            Print #1, "    ; Ausbildungsende"
            Print #1, ""
            Print #1, " 400; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|T|fffd|tigkeitsschl|fffd|ssel \"
            Print #1, "    ; T|fffd|tigkeitsmerkmal 2010(Gueltig_ab;Ausge|fffd|bte T|fffd|tigkeit(Ausge|fffd|bte T|fffd|tigkeit;Berufsbezeichnung;LfdNr BA);H|fffd|chster Schulabschluss;" & _
                            "H|fffd|chster Ausbildungsabschluss;Leiharbeitsverh|fffd|ltnis;Vertragsform)"
            Print #1, ""
            Print #1, " 500; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Organisationseinheiten \"
            Print #1, "    ; Berufsbezeichnung"
            Print #1, ""
            Print #1, " 501; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Organisationseinheiten \"
            Print #1, "    ; Betriebsst|fffd|tte(Gueltig_ab;Betriebsst|fffd|tte(Betriebsst|fffd|ttennummer))"
            Print #1, ""
            Print #1, " 502; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Organisationseinheiten \"
            Print #1, "    ; Abteilung(Abteilungsnummer)"
            Print #1, ""
            Print #1, " 503; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Kostenstellenrechnung \"
            Print #1, "    ; G|fffd|ltig ab\"
            Print #1, "    ; Stammkostenstelle(Stammkostenstellennummer)"
            Print #1, ""
            Print #1, " 600; Mitarbeiter|Stammdaten|Sozialversicherung|Allgemeine SV-Daten|Berechnungsgrundlagen \"
            Print #1, "    ; Beitragsgruppenschl|fffd|ssel(Gueltig_ab;BGS KV;BGS RV;BGS AV;BGS PV)"
            Print #1, ""
            Print #1, " 700; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; Finanzamt(Gueltig_ab;Finanzamt(Finanzamtsnummer))"
            Print #1, ""
            Print #1, " 701; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; St.Klasse/Anzahl Kinderfreib.(Gueltig_ab;Steuerklasse;Faktor_Faktorverfahren;Kinderfreibetrag)"
            Print #1, ""
            Print #1, " 702; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; Konfession AN(Gueltig_ab;Konfession AN)"
            Print #1, ""
            Print #1, " 703; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; IdNr"
            Print #1, ""
            Print #1, " 800; Mitarbeiter|Stammdaten|Arbeitszeiten|Regelm|fffd||fffd|ige/Feste Arbeitszeiten \"
            Print #1, "    ; Regelm|fffd||fffd|ige Arbeitszeit(Gueltig_ab;W|fffd|chentliche Arbeitszeit;Arbeitsstunden Mo;Arbeitsstunden Di;Arbeitsstunden Mi;Arbeitsstunden Do;Arbeitsstunden Fr;Arbeitsstunden Sa;Arbeitsstunden So;W|fffd|. AZ Vollzeit)"
            Print #1, ""
'            Print #1, " 801; Mitarbeiter|Stammdaten|Arbeitszeiten|Urlaubsanspruch \"
'            Print #1, "    ; Urlaubsanspruch pro Jahr"
            Print #1, " 801; Mitarbeiter|Stammdaten|Arbeitszeiten|Urlaubsanspruch|Grundurlaub \"
            Print #1, "    ; G|fffd|ltig ab Jahr\"
            Print #1, "    ; Grundurlaubsanspruch"
            Print #1, ""
            Print #1, "[Mandant]"
            Print #1, "   2; " & Mdl_Dialoge.Dialog_Export.tbx_Mandantennummer.Value
            Print #1, ""
            Print #1, "[Mitarbeiter]"
            Print #1, "   3; " & str_Personalnummer & ";" & str_Familienname & ";" & str_Vorname & ";" & str_Eintrittsdatum & _
                                ";" & str_Erster_Monat
            Print #1, " 100; " & str_Familienname & ";" & str_Geburtsname & ";" & str_Vorname & ";" & str_Strasse & ";" & str_Hausnummer & _
                                ";" & str_PLZ & ";" & str_Ort & ";" & str_Anschriftenzusatz
            Print #1, " 101; " & str_Geburtsdatum & ";" & str_Geburtsort & ";" & str_Geburtsland_LuG & ";" & ";" & str_Geschlecht & _
                                ";" & str_Erster_Monat & ";" & str_Versicherungsnummer & ";" & str_Familienstand & ";" & str_Staatsangehoerigkeit & ";"
'            If Not str_Kontonummer = "" Or Not str_Bankleitzahl = "" Or Not str_IBAN = "" Or Not str_BIC = "" Then
'                Print #1, " 102; " & str_Kontonummer & ";" & str_Bankleitzahl & ";" & str_IBAN & ";" & str_BIC
            If Not str_IBAN = "" Or Not str_BIC = "" Then
                Print #1, " 102; " & str_IBAN & ";" & str_BIC
            End If
            If Not str_Ersteintrittsdatum = "" Then
                Print #1, " 200; " & str_Ersteintrittsdatum
            End If
            If Not str_Eintrittsdatum = "" Then
                Print #1, " 201; " & str_Eintrittsdatum
            End If
            If Not str_Befristung_Arbeitsvertrag_zum = "" Then
                Print #1, " 202; " & str_Befristung_Arbeitsvertrag_zum
            End If
            If Not str_Art_der_Befristung = "" Then
                Print #1, " 203; " & str_Art_der_Befristung
            End If
            If Not str_Personengruppe = "" Then
                Print #1, " 300; " & str_Erster_Monat & ";" & str_Personengruppe
            End If
            If Not str_Beginn_der_Ausbildung = "" Or Not str_Ende_der_Ausbildung = "" Then
                Print #1, " 301; " & str_Beginn_der_Ausbildung & ";" & str_Ende_der_Ausbildung
            End If
            Print #1, " 400; " & str_Erster_Monat & ";" & str_Ausgeuebte_Taetigkeit & ";" & ";" & ";" & str_Hoechster_Schulabschluss & ";" & str_Hoechste_Berufsausbildung & _
                                ";" & 0 & ";" & str_Vertragsform
            If Not str_Berufsbezeichnung = "" Then
                Print #1, " 500; " & str_Berufsbezeichnung
            End If
            If Not str_Betriebsstaette = "" Then
                Print #1, " 501; " & str_Erster_Monat & ";" & str_Betriebsstaette
            End If
            If Not str_Abteilungsnummer = "" Then
                Print #1, " 502; " & str_Abteilungsnummer
            End If
            If Not str_Kostenstelle = "" Then
                Print #1, " 503; " & str_Erster_Monat & ";" & str_Kostenstelle
            End If
            If Not str_KV = "" Or Not str_RV = "" Or Not str_AV = "" Or Not str_PV = "" Then
                Print #1, " 600; " & str_Erster_Monat & ";" & str_KV & ";" & str_RV & ";" & str_AV & ";" & str_PV
            End If
            If Not str_Finanzamtsnummer = "" Then
                Print #1, " 700; " & str_Erster_Monat & ";" & str_Finanzamtsnummer
            End If
            If Not str_Steuerklasse = "" Or Not str_Faktor = "" Or Not str_Kinderfreibetrag = "" Then
                Print #1, " 701; " & str_Erster_Monat & ";" & str_Steuerklasse & ";" & str_Faktor & ";" & str_Kinderfreibetrag
            End If
            If Not str_Konfession = "" Then
                Print #1, " 702; " & str_Erster_Monat & ";" & str_Konfession
            End If
            If Not str_Identifikationsnummer = "" Then
                Print #1, " 703; " & str_Identifikationsnummer
            End If
            If Not str_Arbeitszeit_Mo = "" Or Not str_Arbeitszeit_Di = "" Or Not str_Arbeitszeit_Mi = "" Or _
                Not str_Arbeitszeit_Do = "" Or Not str_Arbeitszeit_Fr = "" Or Not str_Arbeitszeit_Sa = "" Or Not str_Arbeitszeit_So = "" Then
                
                If Not str_Arbeitszeit = "" Then
                    Print #1, " 800; " & str_Erster_Monat & ";" & str_Arbeitszeit & ";" & str_Arbeitszeit_Mo & _
                              ";" & str_Arbeitszeit_Di & ";" & str_Arbeitszeit_Mi & ";" & str_Arbeitszeit_Do & _
                              ";" & str_Arbeitszeit_Fr & ";" & str_Arbeitszeit_Sa & ";" & str_Arbeitszeit_So & ";"
                Else
                    Print #1, " 800; " & str_Erster_Monat & ";" & dbl_Arbeitszeit_Woche & ";" & str_Arbeitszeit_Mo & _
                              ";" & str_Arbeitszeit_Di & ";" & str_Arbeitszeit_Mi & ";" & str_Arbeitszeit_Do & _
                              ";" & str_Arbeitszeit_Fr & ";" & str_Arbeitszeit_Sa & ";" & str_Arbeitszeit_So & ";"
                End If
            Else
                If Not str_Arbeitszeit = "" Then
                    Print #1, " 800; " & str_Erster_Monat & ";" & str_Arbeitszeit & ";" & dbl_Arbeitszeit_Tag & _
                              ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & _
                              ";" & dbl_Arbeitszeit_Tag & ";" & ";" & ";"
                End If
            End If
            If Not str_Urlaubsanspruch = "" Then
'                Print #1, " 801; " & str_Urlaubsanspruch
                Print #1, " 801; " & str_Jahr & ";" & str_Urlaubsanspruch
            End If
        Else
        
            '************************
            ' EXPORTDATEI F|fffd|R LODAS *
            '************************
            
            Print #1, "[Allgemein]"
            Print #1, "Ziel                = LODAS"
            Print #1, "Version_SST         = 1.0"
            Print #1, "Version_DB          = 10.00"
            Print #1, "BeraterNr           = " & Mdl_Dialoge.Dialog_Export.tbx_Beraternummer.Value
            Print #1, "MandantenNr         = " & Mdl_Dialoge.Dialog_Export.tbx_Mandantennummer.Value
            Print #1, "Kommentarzeichen    = *"
            Print #1, "Feldtrennzeichen    = ;"
            Print #1, "Zahlenkomma         = ,"
            Print #1, "Datumsformat        = TT/MM/JJJJ"
            Print #1, "StammdatenGueltigAb = " & str_StammdatenGueltigAb
            Print #1, ""
            Print #1, "[Satzbeschreibung]"
            Print #1, " 100; u_lod_psd_mitarbeiter;pnr#psd;duevo_familienname#psd;duevo_vorname#psd;gebname#psd;adresse_strassenname#psd;adresse_strasse_nr#psd;adresse_plz#psd;adresse_ort#psd;adresse_anschriftenzusatz#psd;"
            Print #1, " 101; u_lod_psd_mitarbeiter;pnr#psd;geburtsdatum_ttmmjj#psd;gebort#psd;geburtsland#psd;geschlecht#psd;sozialversicherung_nr#psd;familienstand#psd;staatsangehoerigkeit#psd;"
'            Print #1, " 102; u_lod_psd_ma_bank;pnr#psd;ma_bank_kto_nr#psd;ma_bank_blz#psd;ma_bank_bezeichnung#psd;ma_iban#psd;ma_bic#psd;"
            Print #1, " 102; u_lod_psd_ma_bank;pnr#psd;ma_iban#psd;ma_bic#psd;"
            Print #1, " 103; u_lod_psd_mitarbeiter;pnr#psd;schwerbeschaedigt#psd"
            Print #1, " 200; u_lod_psd_mitarbeiter;pnr#psd;ersteintrittsdatum#psd;"
            Print #1, " 201; u_lod_psd_beschaeftigung;pnr#psd;eintrittdatum#psd;"
            Print #1, " 300; u_lod_psd_taetigkeit;pnr#psd;persgrs#psd;"
            Print #1, " 301; u_lod_psd_taetigkeit;pnr#psd;ausbildungsbeginn#psd;vorr_ausbildungsende#psd;"
            Print #1, " 400; u_lod_psd_taetigkeit;pnr#psd;berufsbezeichnung#psd;ausg_taetigkeit#psd;schulabschluss#psd;ausbildungsabschluss#psd;arbeitnehmerueberlassung#psd;vertragsform#psd;"
            Print #1, " 502; u_lod_psd_taetigkeit;pnr#psd;kst_abteilungs_nr#psd;"
            Print #1, " 503; u_lod_psd_taetigkeit;pnr#psd;stammkostenstelle#psd;"
            Print #1, " 600; u_lod_psd_sozialversicherung;pnr#psd;kv_bgrs#psd;rv_bgrs#psd;av_bgrs#psd;pv_bgrs#psd;"
            Print #1, " 700; u_lod_psd_steuer;pnr#psd;fa_nr#psd;"
            Print #1, " 701; u_lod_psd_steuer;pnr#psd;st_klasse#psd;faktor#psd;kfb_anzahl#psd;"
            Print #1, " 702; u_lod_psd_steuer;pnr#psd;identifikationsnummer#psd;"
            Print #1, " 800; u_lod_psd_arbeitszeit_regelm;pnr#psd;az_wtl_indiv#psd;regelm_az_mo#psd;regelm_az_di#psd;regelm_az_mi#psd;regelm_az_do#psd;regelm_az_fr#psd;regelm_az_sa#psd;regelm_az_so#psd;"
            Print #1, " 801; u_lod_psd_arbeitszeit_regelm;pnr#psd;url_tage_jhrl#psd;"
            Print #1, " 900; u_lod_psd_vermoegensbildung;pnr#psd;vwl_institut_1#psd;"
            Print #1, " 901; u_lod_psd_vermoegensbildung;pnr#psd;vwl_1_netto_abz_1#psd;vwl_ag_anteil_betrag_1#psd;"
            Print #1, " 902; u_lod_psd_vermoegensbildung;pnr#psd;vwl_1_beginn_mmjj#psd;"
            Print #1, " 903; u_lod_psd_vermoegensbildung;pnr#psd;vwl_vertrag_nr_1#psd;"
'            Print #1, " 904; u_lod_psd_vermoegensbildung;pnr#psd;vwl_bank_kto_nr_1#psd;vwl_bank_blz_1#psd;vwl_bank_bezeichnung_1#psd;"
            Print #1, " 904; u_lod_psd_vermoegensbildung;pnr#psd;vwl_1_iban#psd;vwl_1_bic#psd;"
            Print #1, ""
            Print #1, "[Stammdaten]"
            Print #1, " 100; " & str_Personalnummer & ";" & str_Familienname & ";" & str_Vorname & ";" & str_Geburtsname & ";" & str_Strasse & ";" & str_Hausnummer & _
                                ";" & str_PLZ & ";" & str_Ort & ";" & str_Anschriftenzusatz & ";"
            Print #1, " 101; " & str_Personalnummer & ";" & str_Geburtsdatum & ";" & str_Geburtsort & ";" & str_Geburtsland_LODAS & ";" & str_Geschlecht_LODAS & _
                                ";" & str_Versicherungsnummer & ";" & str_Familienstand_LODAS & ";" & str_Staatsangehoerigkeit & ";"
'            If Not str_Kontonummer = "" Or Not str_Bankleitzahl = "" Or Not str_IBAN = "" Or Not str_BIC = "" Then
'                Print #1, " 102; " & str_Personalnummer & ";" & str_Kontonummer & ";" & str_Bankleitzahl & ";"; str_Bankbezeichnung & ";" & str_IBAN & ";" & str_BIC & ";"
            If Not str_IBAN = "" Or Not str_BIC = "" Then
                Print #1, " 102; " & str_Personalnummer & ";" & str_IBAN & ";" & str_BIC & ";"
            End If
            If Not str_Schwerbehindert = "" Then
                Print #1, " 103; " & str_Personalnummer & ";" & str_Schwerbehindert & ";"
            End If
            If Not str_Ersteintrittsdatum = "" Then
                Print #1, " 200; " & str_Personalnummer & ";" & str_Ersteintrittsdatum & ";"
            End If
            If Not str_Eintrittsdatum = "" Then
                Print #1, " 201; " & str_Personalnummer & ";" & str_Eintrittsdatum & ";"
            End If
            If Not str_Personengruppe = "" Then
                Print #1, " 300; " & str_Personalnummer & ";" & str_Personengruppe & ";"
            End If
            If Not str_Beginn_der_Ausbildung = "" Or Not str_Ende_der_Ausbildung = "" Then
                Print #1, " 301; " & str_Personalnummer & ";" & str_Beginn_der_Ausbildung & ";" & str_Ende_der_Ausbildung & ";"
            End If
            Print #1, " 400; " & str_Personalnummer & ";" & str_Berufsbezeichnung & ";" & str_Ausgeuebte_Taetigkeit & ";" & str_Hoechster_Schulabschluss & ";" & str_Hoechste_Berufsausbildung & _
                                ";" & 0 & ";" & str_Vertragsform & ";"
            If Not str_Abteilungsnummer = "" Then
                Print #1, " 502; " & str_Personalnummer & ";" & str_Abteilungsnummer & ";"
            End If
            If Not str_Kostenstelle = "" Then
                Print #1, " 503; " & str_Personalnummer & ";" & str_Kostenstelle & ";"
            End If
            If Not str_KV = "" Or Not str_RV = "" Or Not str_AV = "" Or Not str_PV = "" Then
                Print #1, " 600; " & str_Personalnummer & ";" & str_KV & ";" & str_RV & ";" & str_AV & ";" & str_PV & ";"
            End If
            If Not str_Finanzamtsnummer = "" Then
                Print #1, " 700; " & str_Personalnummer & ";" & str_Finanzamtsnummer & ";"
            End If
            If Not str_Steuerklasse = "" Or Not str_Faktor = "" Or Not str_Kinderfreibetrag = "" Then
                Print #1, " 701; " & str_Personalnummer & ";" & str_Steuerklasse & ";" & str_Faktor & ";" & str_Kinderfreibetrag & ";"
            End If
            If Not str_Identifikationsnummer = "" Then
                Print #1, " 702; " & str_Personalnummer & ";" & str_Identifikationsnummer & ";"
            End If
            'Falls bei einem oder mehreren Wochentagen ein Wert eingetragen ist werden diese |fffd|bernommen
            If Not str_Arbeitszeit_Mo = "" Or Not str_Arbeitszeit_Di = "" Or Not str_Arbeitszeit_Mi = "" Or _
                Not str_Arbeitszeit_Do = "" Or Not str_Arbeitszeit_Fr = "" Or Not str_Arbeitszeit_Sa = "" Or Not str_Arbeitszeit_So = "" Then
                
                If Not str_Arbeitszeit = "" Then
                    Print #1, " 800; " & str_Personalnummer & ";" & str_Arbeitszeit & ";" & str_Arbeitszeit_Mo & ";" & str_Arbeitszeit_Di & ";" & str_Arbeitszeit_Mi & ";" & str_Arbeitszeit_Do & _
                              ";" & str_Arbeitszeit_Fr & ";" & str_Arbeitszeit_Sa & ";" & str_Arbeitszeit_So & ";"
                Else
                    Print #1, " 800; " & str_Personalnummer & ";" & dbl_Arbeitszeit_Woche & ";" & str_Arbeitszeit_Mo & ";" & str_Arbeitszeit_Di & ";" & str_Arbeitszeit_Mi & ";" & str_Arbeitszeit_Do & _
                              ";" & str_Arbeitszeit_Fr & ";" & str_Arbeitszeit_Sa & ";" & str_Arbeitszeit_So & ";"
                End If
            Else
                If Not str_Arbeitszeit = "" Then
                    Print #1, " 800; " & str_Personalnummer & ";" & str_Arbeitszeit & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & _
                              ";" & dbl_Arbeitszeit_Tag & ";"
                End If
            End If
            If Not str_Urlaubsanspruch = "" Then
                Print #1, " 801; " & str_Personalnummer & ";" & str_Urlaubsanspruch & ";"
            End If
            If Not str_Empfaenger_VWL = "" Then
                Print #1, " 900; " & str_Personalnummer & ";" & str_Empfaenger_VWL & ";"
            End If
            If Not str_Betrag = "" Or Not str_AG_Anteil = "" Then
                Print #1, " 901; " & str_Personalnummer & ";" & str_Betrag & ";" & str_AG_Anteil & ";"
            End If
            If Not str_seit_wann = "" Then
                Print #1, " 902; " & str_Personalnummer & ";" & str_seit_wann & ";"
            End If
            If Not str_Vertragsnummer = "" Then
                Print #1, " 903; " & str_Personalnummer & ";" & str_Vertragsnummer & ";"
            End If
            If Not str_Kontonummer_VWL = "" Or Not str_Bankleitzahl_VWL = "" Or Not str_Bankbezeichnung_VWL = "" Then
'                Print #1, " 904; " & str_Personalnummer & ";" & str_Kontonummer_VWL & ";" & str_Bankleitzahl_VWL & ";" & str_Bankbezeichnung_VWL & ";"
                Print #1, " 904; " & str_Personalnummer & ";" & str_IBAN_VWL & ";" & str_BIC_VWL & ";"
            End If
        End If
    End With
    
    If Not Mdl_Dialoge.Dialog_Export.bln_Email Then
        MsgBox "Exportdatei wurde erfolgreich angelegt!", _
            vbInformation
    End If
    
    On Error GoTo 0
    Exit Sub
    
Fehlerbehandlung:
    On Error Resume Next
    Close #1
    On Error GoTo 0
    MsgBox "Fehler:" & vbCrLf & vbCrLf & _
            "Es ist ein Fehler beim Bef|fffd|llen der Exportdatei aufgetreten!" & vbCrLf & _
            "Die Export wurde daher abgebrochen." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
            " F|fffd|hren Sie den Export erneut durch.", _
            vbCritical
    Exit Sub
End Sub
Attribute VB_Name = "Mdl_Formatierung"
Option Explicit
Public Const FontColor = 1
Public Const BorderColor = 1
Public Const BorderColor_Pflichtfeld = 9

Public Sub Spaltenbreiten_anpassen(ws As Worksheet)
    With ws
        .Columns.ColumnWidth = 6
        .Range("A:C,E:G,I:K,M:O,Q:S,U:W,Y:AA,AC:AE,AG:AI,AK:AM,AO:AQ,AS:AU,AW:AY").ColumnWidth = 0.54
    End With
End Sub

Public Sub Zeilenhoehen_anpassen(Position As Integer)
    With Fragebogen
        .Rows(Position & ":" & Position).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(Position + 2 & ":" & Position + 2).RowHeight = 0
        End If
        .Rows(Position + 3 & ":" & Position + 3).RowHeight = 2
        .Rows(Position + 4 & ":" & Position + 4).RowHeight = 3
        .Rows(Position + 6 & ":" & Position + 6).RowHeight = 3
        .Rows(Position + 7 & ":" & Position + 7).RowHeight = 2
        .Rows(Position + 8 & ":" & Position + 8).RowHeight = 5.5
    End With
End Sub

Public Sub Hintergrundfarbe_setzen(ws As Worksheet)
    With ws.Cells.Interior
        .ColorIndex = 2
        .Pattern = xlSolid
    End With
End Sub

Public Sub Header_formatieren()
    With Fragebogen
        If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
            .Rows("1:2").RowHeight = 5.5
            .Rows("3:3").RowHeight = 19.5
            .Rows("4:4").RowHeight = 5.5
            .Rows("5:5").RowHeight = 15
            .Rows("6:6").RowHeight = 5.5
            .Rows("7:8").RowHeight = 15
            .Rows("9:9").RowHeight = 5.5
            .Rows("10:10").RowHeight = 12.75
            .Rows("11:14").RowHeight = 5.5
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D3").Value = "Personalfragebogen"
                .Range("D5").Value = "f|fffd|r geringf|fffd|gig (Minijob) oder kurzfristig Besch|fffd|ftigte"
            Else
                .Range("D3").Value = "Personnel Questionnaire"
                .Range("D5").Value = "for workers with mini jobs or short-term employment"
            End If
            With .Range("D3").Font
                .Name = "Verdana"
                .Size = 16
                .Bold = True
                .ColorIndex = FontColor
            End With
            With .Range("D5").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D7").Value = "Die mit diesem Balken gekennzeichneten Felder sind"
                .Range("D8").Value = "vom Arbeitgeber auszuf|fffd|llen"
            Else
                .Range("D7").Value = "The fields marked with this bar are to be filled in"
                .Range("D8").Value = "by the employer"
            End If
            With .Range("D7:D8").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = FontColor
            End With
            With .Range("C7:C8").Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D10").Value = "Die rot umrahmten Felder sind f|fffd|r das Erzeugen einer Exportdatei zwingend erforderlich"
            Else
                .Range("D10").Value = "The fields framed in red are stringently required in order to generate an export file"
            End If
            With .Range("D10").Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = BorderColor_Pflichtfeld
            End With
        ElseIf ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
            .Rows("1:2").RowHeight = 5.5
            .Rows("3:3").RowHeight = 19.5
            .Rows("4:4").RowHeight = 5.5
            .Rows("5:5").RowHeight = 15
            .Rows("6:6").RowHeight = 5.5
            .Rows("7:8").RowHeight = 15
            .Rows("9:9").RowHeight = 5.5
            .Rows("10:10").RowHeight = 12.75
            .Rows("11:14").RowHeight = 5.5
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D3").Value = "Personalfragebogen"
                .Range("D5").Value = "f|fffd|r Auszubildende"
            Else
                .Range("D3").Value = "Personnel Questionnaire"
                .Range("D5").Value = "for apprentices"
            End If
            With .Range("D3").Font
                .Name = "Verdana"
                .Size = 16
                .Bold = True
                .ColorIndex = FontColor
            End With
            With .Range("D5").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D7").Value = "Die mit diesem Balken gekennzeichneten Felder sind"
                .Range("D8").Value = "vom Arbeitgeber auszuf|fffd|llen"
            Else
                .Range("D7").Value = "The fields marked with this bar are to be filled in"
                .Range("D8").Value = "by the employer"
            End If
            With .Range("D7:D8").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = FontColor
            End With
            With .Range("C7:C8").Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D10").Value = "Die rot umrahmten Felder sind f|fffd|r das Erzeugen einer Exportdatei zwingend erforderlich"
            Else
                .Range("D10").Value = "The fields framed in red are stringently required in order to generate an export file"
            End If
            With .Range("D10").Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = BorderColor_Pflichtfeld
            End With
        Else
            .Rows("1:2").RowHeight = 5.5
            .Rows("3:3").RowHeight = 19.5
            .Rows("4:4").RowHeight = 5.5
            .Rows("5:6").RowHeight = 15
            .Rows("7:7").RowHeight = 5.5
            .Rows("8:8").RowHeight = 12.75
            .Rows("9:12").RowHeight = 5.5
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D3").Value = "Personalfragebogen"
            Else
                .Range("D3").Value = "Personnel Questionnaire"
            End If
            With .Range("D3").Font
                .Name = "Verdana"
                .Size = 16
                .Bold = True
                .ColorIndex = FontColor
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D5").Value = "Die mit diesem Balken gekennzeichneten Felder sind"
                .Range("D6").Value = "vom Arbeitgeber auszuf|fffd|llen"
            Else
                .Range("D5").Value = "The fields marked with this bar are to be filled in"
                .Range("D6").Value = "by the employer"
            End If
            With .Range("D5:D6").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = FontColor
            End With
            With .Range("C5:C6").Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Range("D8").Value = "Die rot umrahmten Felder sind f|fffd|r das Erzeugen einer Exportdatei zwingend erforderlich"
            Else
                .Range("D8").Value = "The fields framed in red are stringently required in order to generate an export file"
            End If
            With .Range("D8").Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = BorderColor_Pflichtfeld
            End With
        End If
    End With
End Sub

Public Function Abschnittsueberschrift_einfuegen(Abschnittsname As String, Optional Zusatztext As String) As String
    Dim pos As String
    
    pos = mdl_Datenfelder.Position
    
    With Fragebogen
        If Zusatztext = "" Then
            .Rows(pos).RowHeight = 5.5
            .Rows(pos + 1).RowHeight = 15
            .Rows(pos + 2).RowHeight = 5.5
            .Range("D" & pos + 1).Value = Abschnittsname
            With .Range("D" & pos + 1).Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
            With .Range("C" & mdl_Datenfelder.Position & ":AW" & mdl_Datenfelder.Position + 2)
                With .Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = BorderColor
                End With
                With .Interior
                    .ColorIndex = 2
                End With
            End With
        Else
            .Rows(pos).RowHeight = 5.5
            .Rows(pos + 1 & ":" & pos + 2).RowHeight = 15
            .Rows(pos + 3).RowHeight = 5.5
            .Range("D" & pos + 1).Value = Abschnittsname
             With .Range("D" & pos + 1).Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
            .Range("D" & pos + 2).Value = Zusatztext
            With .Range("D" & pos + 2).Font
                .Name = "Verdana"
                .Size = 12
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .Bold = True
                Else
                    .Bold = False
                End If
                .ColorIndex = FontColor
            End With
            With .Range("C" & mdl_Datenfelder.Position & ":AW" & mdl_Datenfelder.Position + 3)
                With .Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = BorderColor
                End With
                With .Interior
                    .ColorIndex = 2
                End With
            End With
        End If
    End With
    
    Abschnittsueberschrift_einfuegen = pos
End Function

Public Sub Datenfeld_Rahmen_formatieren(rng As String, Arbeitgeberfeld As Boolean, Spalte As Integer)
    With Fragebogen
        With .Range(rng)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Or Arbeitgeberfeld Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    If Arbeitgeberfeld Then
                        .Weight = xlThick
                    Else
                        .Weight = xlThin
                    End If
                    .ColorIndex = BorderColor
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = BorderColor
            End With
        End With
    End With
End Sub

Public Sub Datenfeld_Bezeichnungsfeld_formatieren(rng As String, Bezeichnung As String, Optional rng_Zusatz As String, Optional Bezeichnung_Zusatz As String)
    With Fragebogen
        With .Range(rng)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = Bezeichnung
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = FontColor
            End With
        End With

        If Not rng_Zusatz = "" Then
            With .Range(rng_Zusatz)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlCenter
                .MergeCells = True
                .Value = Bezeichnung_Zusatz
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = FontColor
                End With
            End With
        End If
    End With
End Sub

Public Sub Datenfeld_Eingabefeld_formatieren(rng As String, Optional ohne_Eingabefeld As Boolean, Optional Pflichtfeld As Boolean)
    With Fragebogen
        With .Range(rng)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
            If Not ohne_Eingabefeld Then
                .Locked = False
                .NumberFormat = "@"
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    If Pflichtfeld Then
                        .ColorIndex = BorderColor_Pflichtfeld
                    Else
                        .ColorIndex = BorderColor
                    End If
                End With
                With .Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    If Pflichtfeld Then
                        .ColorIndex = BorderColor_Pflichtfeld
                    Else
                        .ColorIndex = BorderColor
                    End If
                End With
                With .Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    If Pflichtfeld Then
                        .ColorIndex = BorderColor_Pflichtfeld
                    Else
                        .ColorIndex = BorderColor
                    End If
                End With
                With .Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    If Pflichtfeld Then
                        .ColorIndex = BorderColor_Pflichtfeld
                    Else
                        .ColorIndex = BorderColor
                    End If
                End With
            Else
                .Locked = True
            End If
        End With
    End With
End Sub

Public Sub Importierbare_Stammdaten_markieren()
    Dim Felder
    Dim i As Integer
    Dim str As String
    Dim str2 As String
    Dim rng As String
    
    Call Markierung_aufheben
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    If Mdl_Dialoge.Dialog_Export.ob_LuG Then
    
        Felder = Array(Name_des_Mitarbeiters_Personalnummer, Familienname, Vorname, Geburtsname, Geburtsdatum, Strasse_Hausnr, _
                 PLZ_Ort, Anschriftenzusatz, Versicherungsnummer, Geburtsort, Geburtsland, Geschlecht_Familienstand, Staatsangehoerigkeit, _
                 IBAN, BIC, Eintrittsdatum_Ersteintrittsdatum, Betriebsstaette, Berufsbezeichnung, Ausgeuebte_Taetigkeit, _
                 Hoechster_Schulabschluss, Hoechste_Berufsausbildung, Beginn_der_Ausbildung, Ende_der_Ausbildung, Woechentliche_Arbeitszeit_Urlaubsanspruch, _
                 Kostenstelle, Vertragsform, Abteilungsnummer, Personengruppe, Art_der_Befristung, Befristung_Arbeitsvertrag_zum, Steuerklasse_Faktor, _
                 Kinderfreibetrag, Finanzamtsnummer_Identifikationsnummer, Konfession, KV_RV, AV_PV)
        
    Else
        
        Felder = Array(Name_des_Mitarbeiters_Personalnummer, Familienname, Vorname, Geburtsname, Geburtsdatum, Strasse_Hausnr, _
                 PLZ_Ort, Anschriftenzusatz, Versicherungsnummer, Geburtsort, Geburtsland, Geschlecht_Familienstand, Staatsangehoerigkeit, _
                 Schwerbehindert, IBAN, BIC, Eintrittsdatum_Ersteintrittsdatum, Berufsbezeichnung, _
                 Ausgeuebte_Taetigkeit, Hoechster_Schulabschluss, Hoechste_Berufsausbildung, Beginn_der_Ausbildung, Ende_der_Ausbildung, _
                 Woechentliche_Arbeitszeit_Urlaubsanspruch, Kostenstelle, Vertragsform, Abteilungsnummer, Personengruppe, Steuerklasse_Faktor, _
                 Kinderfreibetrag, Finanzamtsnummer_Identifikationsnummer, Empfaenger_VWL, Betrag_AG_Anteil, seit_wann, Vertragsnummer, _
                 IBAN_VWL, BIC_VWL, KV_RV, AV_PV)
        
    End If
    
    With ws_Assistent
        For i = 0 To UBound(Felder)
            If Not .Cells(Felder(i), clm_Range).Value = "" And .Cells(Felder(i), clm_Position).Value = "" Then
                If Felder(i) = Name_des_Mitarbeiters_Personalnummer Then
                    str = VBA.Mid(.Cells(Felder(i), clm_Range).Value, InStr(.Cells(Felder(i), clm_Range).Value, ";") + 1)
                Else
                    str = .Cells(Felder(i), clm_Range).Value
                End If
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                    Else
                        rng = VBA.Left(str, InStr(str, ";") - 1)
                        str = VBA.Mid(str, InStr(str, ";") + 1)
                    End If
                    With Fragebogen.Range(rng).Interior
                        .ColorIndex = 4
                        .Pattern = xlSolid
                    End With
                Loop
            ElseIf Not .Cells(Felder(i), clm_Range).Value = "" And Not .Cells(Felder(i), clm_OO_Name).Value = "" Then
                str = .Cells(Felder(i), clm_OO_Name).Value
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        str2 = str
                        str = ""
                    Else
                        str2 = VBA.Left(str, InStr(str, ";") - 1)
                        str = VBA.Mid(str, InStr(str, ";") + 1)
                    End If
                    Fragebogen.OLEObjects(str2).Object.BackColor = &HFF00&
                Loop
            End If
        Next i
    End With
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
    
End Sub

Public Sub Markierung_aufheben()
    Dim i As Integer
    Dim str As String
    Dim str2 As String
    Dim rng As String
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    With ws_Assistent
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, clm_Range).Value = "" And .Cells(i, clm_Position).Value = "" Then
                If i = Name_des_Mitarbeiters_Personalnummer Then
                    str = VBA.Mid(.Cells(i, clm_Range).Value, InStr(.Cells(i, clm_Range).Value, ";") + 1)
                Else
                    str = .Cells(i, clm_Range).Value
                End If
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                    Else
                        rng = VBA.Left(str, InStr(str, ";") - 1)
                        str = VBA.Mid(str, InStr(str, ";") + 1)
                    End If
                    With Fragebogen.Range(rng).Interior
                        .ColorIndex = 2
                        .Pattern = xlSolid
                    End With
                Loop
            ElseIf Not .Cells(i, clm_Range).Value = "" And Not .Cells(i, clm_OO_Name).Value = "" Then
                str = .Cells(i, clm_OO_Name).Value
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        str2 = str
                        str = ""
                    Else
                        str2 = VBA.Left(str, InStr(str, ";") - 1)
                        str = VBA.Mid(str, InStr(str, ";") + 1)
                    End If
                    Fragebogen.OLEObjects(str2).Object.BackColor = &H80000005
                Loop
            End If
        Next i
    End With
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
    
End Sub
Attribute VB_Name = "Mdl_Hilfsfunktionen"
Option Explicit
Private strRange As String
Private strRangeArray As Variant
Private DisplayHeadings As Boolean
Private DisplayWorkbookTabs As Boolean
Private DisplayFormulaBar As Boolean
Private DisplayStatusBar As Boolean
Private CommandBarsEnabled As Boolean

Public Function Exportdatei_vorhanden(File_Path As String) As Boolean
    If (Dir(File_Path) <> "") Then
        Exportdatei_vorhanden = True
    Else
        Exportdatei_vorhanden = False
    End If
End Function

Public Function Worksheet_bereits_vorhanden(ws_Name As String)
    Dim ws As Worksheet
        
    For Each ws In Worksheets
        If ws.Name = ws_Name Then
            Worksheet_bereits_vorhanden = True
            Exit Function
        End If
    Next ws
    Worksheet_bereits_vorhanden = False
End Function

Public Function Letzte_benutzte_Zeile(ws As Worksheet) As Integer
    Dim Spalte1 As Integer
    Dim Spalte2 As Integer
    Dim Spalte3 As Integer
    Dim Spalte4 As Integer
    Dim Spalte5 As Integer
    Dim Spalte6 As Integer
    Dim Spalte7 As Integer
    Dim Spalte8 As Integer
    Dim Spalte9 As Integer
    Dim Spalte10 As Integer
    Dim Spalte11 As Integer
    Dim Spalte12 As Integer
    
    With ws
        Spalte1 = VBA.Mid(.Cells(Rows.count, 4).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 4).End(xlUp).Address(True, False), "$") + 1)
        Spalte2 = VBA.Mid(.Cells(Rows.count, 8).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 8).End(xlUp).Address(True, False), "$") + 1)
        Spalte3 = VBA.Mid(.Cells(Rows.count, 12).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 12).End(xlUp).Address(True, False), "$") + 1)
        Spalte4 = VBA.Mid(.Cells(Rows.count, 16).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 16).End(xlUp).Address(True, False), "$") + 1)
        Spalte5 = VBA.Mid(.Cells(Rows.count, 20).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 20).End(xlUp).Address(True, False), "$") + 1)
        Spalte6 = VBA.Mid(.Cells(Rows.count, 24).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 24).End(xlUp).Address(True, False), "$") + 1)
        Spalte7 = VBA.Mid(.Cells(Rows.count, 28).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 28).End(xlUp).Address(True, False), "$") + 1)
        Spalte8 = VBA.Mid(.Cells(Rows.count, 32).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 32).End(xlUp).Address(True, False), "$") + 1)
        Spalte9 = VBA.Mid(.Cells(Rows.count, 36).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 36).End(xlUp).Address(True, False), "$") + 1)
        Spalte10 = VBA.Mid(.Cells(Rows.count, 40).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 40).End(xlUp).Address(True, False), "$") + 1)
        Spalte11 = VBA.Mid(.Cells(Rows.count, 44).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 44).End(xlUp).Address(True, False), "$") + 1)
        Spalte12 = VBA.Mid(.Cells(Rows.count, 48).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 48).End(xlUp).Address(True, False), "$") + 1)
    End With
    
    Letzte_benutzte_Zeile = WorksheetFunction.Max(Spalte1, Spalte2, Spalte3, Spalte4, Spalte5, Spalte6, _
                                                Spalte7, Spalte8, Spalte9, Spalte10, Spalte11, Spalte12)
End Function

Public Sub Blattschutz_setzen(ws As Worksheet)
    With ws
        .Protect _
        Password:="DATEVeGEB543", _
        DrawingObjects:=True, _
        Contents:=True, _
        Scenarios:=True, _
        AllowFormattingCells:=False, _
        AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, _
        AllowInsertingColumns:=False, _
        AllowInsertingRows:=False, _
        AllowInsertingHyperlinks:=False, _
        AllowDeletingColumns:=False, _
        AllowDeletingRows:=False, _
        AllowSorting:=False, _
        AllowFiltering:=False, _
        AllowUsingPivotTables:=False
        .EnableSelection = xlUnlockedCells
    End With
End Sub

Public Sub Blattschutz_aufheben(ws As Worksheet)
    On Error Resume Next
    With ws
        .Unprotect ("DATEVeGEB543")
    End With
    On Error GoTo 0
End Sub

Public Sub Ansichtsoptionen()
    On Error Resume Next
    With ActiveWindow
        'Zeilen- und Spalten|fffd|berschriften ausblenden
        DisplayHeadings = .DisplayHeadings
        .DisplayHeadings = False
        'Blattregisterkarten ausblenden
        DisplayWorkbookTabs = .DisplayWorkbookTabs
        .DisplayWorkbookTabs = False
    End With
    With Application
        'Bearbeitungsleiste ausblenden
        DisplayFormulaBar = .DisplayFormulaBar
        .DisplayFormulaBar = False
        'Statusleiste ausblenden
        DisplayStatusBar = .DisplayStatusBar
        .DisplayStatusBar = False
        'Kontextmen|fffd| deaktivieren
        .CommandBars("cell").Enabled = False
        'Falls Office Version 2007 oder neuer verwendet wird
        If Not Val(.Version) < 12 Then
            'Ribbons und Men|fffd|zeile ausblenden
            .ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        End If
    End With
    On Error GoTo 0
End Sub

Public Sub Ansichtsoptionen_zuruecksetzen()
    On Error Resume Next
    With Application
        'Bearbeitungsleiste einblenden
        .DisplayFormulaBar = DisplayFormulaBar
        'Statusleiste einblenden
        .DisplayStatusBar = DisplayStatusBar
        'Kontextmen|fffd| wieder aktivieren
        .CommandBars("cell").Enabled = True
        'Falls Office Version 2007 oder neuer verwendet wird
        If Not Val(.Version) < 12 Then
            'Ribbons und Men|fffd|zeile einblenden
            .ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
        End If
    End With
    On Error GoTo 0
End Sub

Public Function Verzeichnis_waehlen() As String
    Dim str_Folder As String
    
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = ""
        .ButtonName = ""
        .InitialFileName = ThisWorkbook.Path & "\"
        .InitialView = msoFileDialogViewDetails
        If .Show = True Then
            str_Folder = .SelectedItems(1)
        Else
            str_Folder = ""
        End If
    End With
    Verzeichnis_waehlen = str_Folder
End Function

Public Function Datei_waehlen() As String
    Dim str_File As String
    
    With Application.FileDialog(msoFileDialogFilePicker)
        .Title = ""
        .ButtonName = ""
        .Filters.Add "Bilddateien", "*.bmp;*.gif;*.jpg"
        .InitialFileName = ThisWorkbook.Path & "\"
        .InitialView = msoFileDialogViewDetails
        If .Show = True Then
            str_File = .SelectedItems(1)
        Else
            str_File = ""
        End If
    End With
    Datei_waehlen = str_File
End Function

Public Function Verzeichnis_existiert(Verzeichnis As String) As Boolean
    Dim fso As FileSystemObject
    Set fso = New FileSystemObject
    
    Verzeichnis_existiert = fso.FolderExists(Verzeichnis)
    Set fso = Nothing
End Function

Public Function Datei_exisitiert(Datei As String) As Boolean
    Dim fso As FileSystemObject
    Set fso = New FileSystemObject
    
    Datei_exisitiert = fso.FileExists(Datei)
    Set fso = Nothing
End Function

Public Function Datei_schreibgeschuetzt(Datei As String) As Boolean
    If FileSystem.GetAttr(Datei) Mod 2 = 1 Then
        Datei_schreibgeschuetzt = True
    Else
        Datei_schreibgeschuetzt = False
    End If
End Function

Public Function Dateinamenspruefung(Dateiname As String) As Zustand_Dateiname
    Dim i As Long

    Dateinamenspruefung = OK
    If Len(Dateiname) > 100 Then
        Dateinamenspruefung = zu_lang
        Exit Function
    End If
  
    For i = 1 To Len(Dateiname)
        If VBA.Mid(Dateiname, i, 1) = "<" _
        Or VBA.Mid(Dateiname, i, 1) = ">" _
        Or VBA.Mid(Dateiname, i, 1) = "?" _
        Or VBA.Mid(Dateiname, i, 1) = """" _
        Or VBA.Mid(Dateiname, i, 1) = ":" _
        Or VBA.Mid(Dateiname, i, 1) = "|" _
        Or VBA.Mid(Dateiname, i, 1) = "\" _
        Or VBA.Mid(Dateiname, i, 1) = "/" _
        Or VBA.Mid(Dateiname, i, 1) = "*" Then
            Dateinamenspruefung = enthaelt_unerlaubte_Zeichen
            Exit Function
        End If
    Next i
End Function

Sub Einfg_Aktion()
    Dim objData As New DataObject
    Dim str As String
    
    On Error Resume Next
    objData.GetFromClipboard
    str = objData.GetText
    str = Replace(str, vbCrLf, "")
    str = Replace(str, vbTab, "")
    ActiveCell.Value = VBA.Trim(str)
    On Error GoTo 0
     
    Set objData = Nothing
End Sub

Sub Tab_Aktion(Richtung As Integer)
    Dim ac As String
    Dim i As Integer
    
    Call strRangeArray_befuellen
    ac = ActiveCell.Address(False, False)
    For i = 0 To UBound(strRangeArray) - 1
        If strRangeArray(i) = ac Then
            If i = 0 And Richtung < 0 Then
                i = UBound(strRangeArray) - 1
            ElseIf i = UBound(strRangeArray) - 1 And Richtung > 0 Then
                i = 0
            Else
                i = i + Richtung
            End If
            Do While Fragebogen.Range(strRangeArray(i)).Locked = True
                If Richtung > 0 Then
                    i = i + 1
                Else
                    i = i - 1
                End If
            Loop
            GoTo Aktion
        End If
    Next i
    Exit Sub
    
Aktion:
    On Error Resume Next
    Application.GoTo Fragebogen.Range(strRangeArray(i))
    On Error GoTo 0
End Sub

Public Sub strRangeArray_befuellen()
    Dim i As Integer
    
    strRange = ""
    With ws_Assistent
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, clm_Range).Value = "" Then
                strRange = strRange + .Cells(i, clm_Range).Value + ";"
            End If
        Next i
    End With
    
    strRangeArray = Split(strRange, ";")
End Sub

Public Sub Zwischenablage_leeren()
    Dim EmptyDat As DataObject
    Set EmptyDat = New DataObject

    'l|fffd|scht Zwischenablage
    On Error Resume Next
    EmptyDat.SetText ""
    EmptyDat.PutInClipboard
    On Error GoTo 0
End Sub
Attribute VB_Name = "Mdl_OS_Architektur"
Private Type SYSTEM_INFO
    wProcessorArchitecture As Integer
    wReserved As Integer
    dwPageSize As Long
    lpMinimumApplicationAddress As Long
    lpMaximumApplicationAddress As Long
    dwActiveProcessorMask As Long
    dwNumberOfProcessors As Long
    dwProcessorType As Long
    dwAllocationGranularity As Long
    wProcessorLevel As Integer
    wProcessorRevision As Long
End Type

#If VBA7 Then
    Private Declare PtrSafe Sub GetNativeSystemInfo Lib "kernel32.dll" (ByRef lpSystemInfo As SYSTEM_INFO)
#Else
    Private Declare Sub GetNativeSystemInfo Lib "kernel32.dll" (ByRef lpSystemInfo As SYSTEM_INFO)
#End If

Private Const PROCESSOR_ARCHITECTURE_AMD64 As Integer = 9
Private Const PROCESSOR_ARCHITECTURE_IA64 As Integer = 6
Private Const PROCESSOR_ARCHITECTURE_INTEL As Integer = 0
Private Const PROCESSOR_ARCHITECTURE_UNKNOWN As Integer = &HFFFF

#If VBA7 Then
    Private Declare PtrSafe Function GetVersionEx Lib "kernel32.dll" Alias "GetVersionExA" (ByRef lpVersionInformation As OSVERSIONINFO) As Long
#Else
    Private Declare Function GetVersionEx Lib "kernel32.dll" Alias "GetVersionExA" (ByRef lpVersionInformation As OSVERSIONINFO) As Long
#End If

Private Type OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As Long
    szCSDVersion As String * 128 'Maintenance string for PSS usage
End Type

Private Const VER_PLATFORM_WIN32_NT As Long = 2
Private Const VER_PLATFORM_WIN32_WINDOWS As Long = 1
Private Const VER_PLATFORM_WIN32s As Long = 0

Public Function GetOsArchitecture() As OSArchitecture
    Dim OSInfo As OSVERSIONINFO
    Dim SInfo As SYSTEM_INFO
    Dim Version As Long

    'OS Plattform und Version auslesen
    OSInfo.dwOSVersionInfoSize = Len(OSInfo)

    Call GetVersionEx(OSInfo)

    'Plattform unterscheiden
    Select Case OSInfo.dwPlatformId
    
        Case VER_PLATFORM_WIN32s
            'win32 layer on win16, veraltet
            GetOsArchitecture = OSA_Unknown
    
        Case VER_PLATFORM_WIN32_WINDOWS
            'Win9x -> 32bit
            GetOsArchitecture = OSA_x86
    
        Case VER_PLATFORM_WIN32_NT
            'NT, XP, Server2k3, ...
            'Versionskomponenten zu Long zusammensetzen; vereinfacht die Pr|fffd|fung
            Version = (OSInfo.dwBuildNumber * &H1000) Or OSInfo.dwMajorVersion
            If (Version = 327680) Then '= 5.0 (w2k)?
                'Win 2k -> 32bit
                GetOsArchitecture = OSA_x86
            ElseIf (Version >= 327681) Then '>= 5.1 (XP, Server2k3, ...)?
                '-> GetNativeSystemInfo vorhanden
                GetNativeSystemInfo SInfo
                'Prozessorarchitektur des OS unterscheiden
                Select Case SInfo.wProcessorArchitecture
                
                    Case PROCESSOR_ARCHITECTURE_AMD64
                        'x64 (AMD Or Intel)
                        GetOsArchitecture = OSA_x64
        
                    Case PROCESSOR_ARCHITECTURE_IA64
                        'Intel Itanium Processor Family (IPF)
                        GetOsArchitecture = OSA_Itanium
                        
                    Case PROCESSOR_ARCHITECTURE_INTEL
                        'x86
                        GetOsArchitecture = OSA_x86
        
                    Case PROCESSOR_ARCHITECTURE_UNKNOWN
                        'unknown
                        GetOsArchitecture = OSA_Unknown
        
                    Case Else
                        GetOsArchitecture = OSA_Unknown
                        
                End Select
            End If
        Case Else
            GetOsArchitecture = OSA_Unknown
            
    End Select
End Function
Attribute VB_Name = "Mdl_Pruefungen"
Option Explicit

Public Function Daten_fuer_Export_vorhanden() As Boolean
    Dim rng_Personalnummer As String
    Dim rng_Strasse As String
    Dim rng_Hausnummer As String
    Dim rng_PLZ As String
    Dim rng_Ort As String
    Dim rng_Eintrittsdatum As String
    
    With ws_Assistent
        rng_Personalnummer = Split(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";")(1)
        rng_Strasse = Split(.Cells(Strasse_Hausnr, clm_Range).Value, ";")(0)
        rng_Hausnummer = Split(.Cells(Strasse_Hausnr, clm_Range).Value, ";")(1)
        rng_PLZ = Split(.Cells(PLZ_Ort, clm_Range).Value, ";")(0)
        rng_Ort = Split(.Cells(PLZ_Ort, clm_Range).Value, ";")(1)
        rng_Eintrittsdatum = Split(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";")(0)
    End With
    
    With Fragebogen
        If .Range(rng_Personalnummer).Value = "" Then
            Call Fehlermeldungen(10)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(ws_Assistent.Cells(Familienname, clm_Range).Value).Value = "" Then
            Call Fehlermeldungen(11)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(ws_Assistent.Cells(Vorname, clm_Range).Value).Value = "" Then
            Call Fehlermeldungen(11)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Eintrittsdatum).Value = "" Then
            Call Fehlermeldungen(12)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Strasse).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Hausnummer).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_PLZ).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Ort).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(ws_Assistent.Cells(Geburtsdatum, clm_Range).Value).Value = "" Then
            Call Fehlermeldungen(14)
            Daten_fuer_Export_vorhanden = False
        Else
            Daten_fuer_Export_vorhanden = True
        End If
    End With
End Function

Public Sub Eingabepruefung(Ziel As String)
    With ws_Assistent
        If Ziel = VBA.Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Familienname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Vorname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsdatum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Strasse_Hausnr, clm_Range).Value, InStr(.Cells(Strasse_Hausnr, clm_Range).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 33)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Strasse_Hausnr, clm_Range).Value, InStr(.Cells(Strasse_Hausnr, clm_Range).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(PLZ_Ort, clm_Range).Value, InStr(.Cells(PLZ_Ort, clm_Range).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(PLZ_Ort, clm_Range).Value, InStr(.Cells(PLZ_Ort, clm_Range).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Anschriftenzusatz, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 40)
            Exit Sub
        End If
        If Ziel = .Cells(Versicherungsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 12)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsort, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsland, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 72)
            Exit Sub
        End If
        If Ziel = .Cells(Staatsangehoerigkeit, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Arbeitnehmernummer, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
'        If Ziel = VBA.Left(.Cells(Kontonummer_Bankleitzahl, clm_Range).Value, InStr(.Cells(Kontonummer_Bankleitzahl, clm_Range).Value, ";") - 1) Then
'            Call AlphaNumerisch(Ziel, 10)
'            Exit Sub
'        End If
'        If Ziel = VBA.Mid(.Cells(Kontonummer_Bankleitzahl, clm_Range).Value, InStr(.Cells(Kontonummer_Bankleitzahl, clm_Range).Value, ";") + 1) Then
'            Call Numerisch(Ziel, 8)
'            Exit Sub
'        End If
'        If Ziel = .Cells(Bankbezeichnung, clm_Range).Value Then
'            Call AlphaNumerisch(Ziel, 27)
'            Exit Sub
'        End If
        If Ziel = .Cells(IBAN, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(BIC, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 11)
            Exit Sub
        End If
            
        If Ziel = VBA.Left(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";") - 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";") + 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Betriebsstaette, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 60)
            Exit Sub
        End If
        If Ziel = .Cells(Berufsbezeichnung, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Ausgeuebte_Taetigkeit, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Probezeit, clm_Range).Value, InStr(.Cells(Probezeit, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel)
        End If
        If Ziel = .Cells(Beginn_der_Ausbildung, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Ende_der_Ausbildung, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 1, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(0) Then 'Mo
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(1) Then 'Di
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(2) Then 'Mi
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(3) Then 'Do
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(4) Then 'Fr
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(5) Then 'Sa
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(6) Then 'So
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = .Cells(Kostenstelle, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Abteilungsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Im_Baugewerbe_beschaeftigt_seit, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Befristung_Arbeitsvertrag_zum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Arbeitsvertrag_am, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Befristung_Ausbildungsvertrag_zum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Ausbildungsvertrag_am, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = VBA.Left(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, ";") - 1) Then
            Call Numerisch(Ziel, 4)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel, 11)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Steuerklasse_Faktor, clm_Range).Value, InStr(.Cells(Steuerklasse_Faktor, clm_Range).Value, ";") - 1) Then
            Call Numerisch(Ziel, 1)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Steuerklasse_Faktor, clm_Range).Value, InStr(.Cells(Steuerklasse_Faktor, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 3, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Kinderfreibetrag, clm_Range).Value Then
            Call Numerisch_VK_NK(Ziel, 1, 2)
            Exit Sub
        End If
            
        If Ziel = .Cells(Gesetzl_Krankenkasse, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Krankenkasse, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(UV_Gefahrtarif, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Name_Krankenkasse_Private_Versicherung, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
            
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(0) Then 'Bezeichnung
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
            
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(0) Then 'Bezeichnung
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Empfaenger_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 22)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Betrag_AG_Anteil, clm_Range).Value, InStr(.Cells(Betrag_AG_Anteil, clm_Range).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Betrag_AG_Anteil, clm_Range).Value, InStr(.Cells(Betrag_AG_Anteil, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = .Cells(seit_wann, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Vertragsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 20)
            Exit Sub
        End If
        If Ziel = .Cells(IBAN_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(BIC_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 11)
            Exit Sub
        End If
        
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(2) Then 'Art der Besch|fffd|ftigung
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(3) Then 'Anzahl der Besch|fffd|ftigungstage
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
        
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(2) Then 'Art der Besch|fffd|ftigung
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(3) Then 'Anzahl der Besch|fffd|ftigungstage
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
        
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(2) Then 'Arbeitgeber
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(4) Then 'W|fffd|chentl. Arbeitszeit
                Call Numerisch_VK_NK(Ziel, 2, 3)
                Exit Sub
            End If
        End If

        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(2) Then 'Arbeitgeber
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(4) Then 'W|fffd|chentl. Arbeitszeit
                Call Numerisch_VK_NK(Ziel, 2, 3)
                Exit Sub
            End If
        End If
    End With
End Sub


Public Sub Eingabepruefung_Minijob(Ziel As String)
    With ws_Assistent
        If Ziel = VBA.Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Familienname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Vorname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsdatum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Strasse_Hausnr, clm_Range).Value, InStr(.Cells(Strasse_Hausnr, clm_Range).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 33)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Strasse_Hausnr, clm_Range).Value, InStr(.Cells(Strasse_Hausnr, clm_Range).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(PLZ_Ort, clm_Range).Value, InStr(.Cells(PLZ_Ort, clm_Range).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(PLZ_Ort, clm_Range).Value, InStr(.Cells(PLZ_Ort, clm_Range).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Anschriftenzusatz, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 40)
            Exit Sub
        End If
        If Ziel = .Cells(Versicherungsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 12)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsort, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsland, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 72)
            Exit Sub
        End If
        If Ziel = .Cells(Staatsangehoerigkeit, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Arbeitnehmernummer, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(IBAN, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(BIC, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 11)
            Exit Sub
        End If
            
        If Ziel = VBA.Left(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";") - 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";") + 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Betriebsstaette, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 60)
            Exit Sub
        End If
        If Ziel = .Cells(Berufsbezeichnung, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Ausgeuebte_Taetigkeit, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Probezeit, clm_Range).Value, InStr(.Cells(Probezeit, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel)
        End If
        If Ziel = .Cells(Beginn_der_Ausbildung, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Ende_der_Ausbildung, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 1, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(0) Then 'Mo
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(1) Then 'Di
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(2) Then 'Mi
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(3) Then 'Do
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(4) Then 'Fr
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(5) Then 'Sa
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Woechentliche_Arbeitszeit, clm_Range).Value, ";")(6) Then 'So
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = .Cells(Kostenstelle, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Abteilungsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Im_Baugewerbe_beschaeftigt_seit, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Befristung_Arbeitsvertrag_zum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Arbeitsvertrag_am, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Befristung_Ausbildungsvertrag_zum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Ausbildungsvertrag_am, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = VBA.Left(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, ";") - 1) Then
            Call Numerisch(Ziel, 4)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel, 11)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Steuerklasse_Faktor, clm_Range).Value, InStr(.Cells(Steuerklasse_Faktor, clm_Range).Value, ";") - 1) Then
            Call Numerisch(Ziel, 1)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Steuerklasse_Faktor, clm_Range).Value, InStr(.Cells(Steuerklasse_Faktor, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 3, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Kinderfreibetrag, clm_Range).Value Then
            Call Numerisch_VK_NK(Ziel, 1, 2)
            Exit Sub
        End If
            
        If Ziel = .Cells(Gesetzl_Krankenkasse, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Krankenkasse, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(UV_Gefahrtarif, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Name_Krankenkasse_Private_Versicherung, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
            
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(0) Then 'Bezeichnung
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
            
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(0) Then 'Bezeichnung
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Empfaenger_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 22)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Betrag_AG_Anteil, clm_Range).Value, InStr(.Cells(Betrag_AG_Anteil, clm_Range).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Betrag_AG_Anteil, clm_Range).Value, InStr(.Cells(Betrag_AG_Anteil, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = .Cells(seit_wann, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Vertragsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 20)
            Exit Sub
        End If
        If Ziel = .Cells(IBAN_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(BIC_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 11)
            Exit Sub
        End If
        
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(2) Then 'Arbeitgeber
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, clm_Range).Value, ";")(4) Then 'W|fffd|chentl. Arbeitszeit
                Call Numerisch_VK_NK(Ziel, 2, 3)
                Exit Sub
            End If
        End If

        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(2) Then 'Arbeitgeber
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, clm_Range).Value, ";")(4) Then 'W|fffd|chentl. Arbeitszeit
                Call Numerisch_VK_NK(Ziel, 2, 3)
                Exit Sub
            End If
        End If
    End With
End Sub

Public Sub Eingabepruefung_Azubi(Ziel As String)
    With ws_Assistent
        If Ziel = VBA.Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Familienname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Vorname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsname, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsdatum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Strasse_Hausnr, clm_Range).Value, InStr(.Cells(Strasse_Hausnr, clm_Range).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 33)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Strasse_Hausnr, clm_Range).Value, InStr(.Cells(Strasse_Hausnr, clm_Range).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(PLZ_Ort, clm_Range).Value, InStr(.Cells(PLZ_Ort, clm_Range).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(PLZ_Ort, clm_Range).Value, InStr(.Cells(PLZ_Ort, clm_Range).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Anschriftenzusatz, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 40)
            Exit Sub
        End If
        If Ziel = .Cells(Versicherungsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 12)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsort, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsland, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 72)
            Exit Sub
        End If
        If Ziel = .Cells(Staatsangehoerigkeit, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Arbeitnehmernummer, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(IBAN, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(BIC, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 11)
            Exit Sub
        End If
            
        If Ziel = VBA.Left(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";") - 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, clm_Range).Value, ";") + 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Betriebsstaette, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 60)
            Exit Sub
        End If
        If Ziel = .Cells(Berufsbezeichnung, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Ausgeuebte_Taetigkeit, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Probezeit, clm_Range).Value, InStr(.Cells(Probezeit, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel)
        End If
        If Ziel = .Cells(Beginn_der_Ausbildung, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Ende_der_Ausbildung, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 1, 3)
            Exit Sub
        End If
        
        If Ziel = .Cells(Kostenstelle, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Abteilungsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Im_Baugewerbe_beschaeftigt_seit, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Befristung_Arbeitsvertrag_zum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Arbeitsvertrag_am, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Befristung_Ausbildungsvertrag_zum, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Ausbildungsvertrag_am, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = VBA.Left(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, ";") - 1) Then
            Call Numerisch(Ziel, 4)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, clm_Range).Value, ";") + 1) Then
            Call Numerisch(Ziel, 11)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Steuerklasse_Faktor, clm_Range).Value, InStr(.Cells(Steuerklasse_Faktor, clm_Range).Value, ";") - 1) Then
            Call Numerisch(Ziel, 1)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Steuerklasse_Faktor, clm_Range).Value, InStr(.Cells(Steuerklasse_Faktor, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 3, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Kinderfreibetrag, clm_Range).Value Then
            Call Numerisch_VK_NK(Ziel, 1, 2)
            Exit Sub
        End If
            
        If Ziel = .Cells(Gesetzl_Krankenkasse, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Krankenkasse, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(UV_Gefahrtarif, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = .Cells(Name_Krankenkasse_Private_Versicherung, clm_Range).Value Then
            'keine Pr|fffd|fung
            Exit Sub
        End If
        
        If Ziel = Split(.Cells(Ausbildungsverguetung, clm_Range).Value, ";")(0) Then 'Ausbildungsjahr
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        
        If Ziel = Split(.Cells(Ausbildungsverguetung_2, clm_Range).Value, ";")(0) Then 'Ausbildungsjahr
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_2, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_2, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_2, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_2, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        
        If Ziel = Split(.Cells(Ausbildungsverguetung_3, clm_Range).Value, ";")(0) Then 'Ausbildungsjahr
            'keine Pr|fffd|fung
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_3, clm_Range).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_3, clm_Range).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_3, clm_Range).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Ausbildungsverguetung_3, clm_Range).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Empfaenger_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 22)
            Exit Sub
        End If
        If Ziel = VBA.Left(.Cells(Betrag_AG_Anteil, clm_Range).Value, InStr(.Cells(Betrag_AG_Anteil, clm_Range).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = VBA.Mid(.Cells(Betrag_AG_Anteil, clm_Range).Value, InStr(.Cells(Betrag_AG_Anteil, clm_Range).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = .Cells(seit_wann, clm_Range).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Vertragsnummer, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 20)
            Exit Sub
        End If
        If Ziel = .Cells(IBAN_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(BIC_VWL, clm_Range).Value Then
            Call AlphaNumerisch(Ziel, 11)
            Exit Sub
        End If
        
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(2) Then 'Art der Besch|fffd|ftigung
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, clm_Range).Value, ";")(3) Then 'Anzahl der Besch|fffd|ftigungstage
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
        
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(2) Then 'Art der Besch|fffd|ftigung
                'keine Pr|fffd|fung
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, clm_Range).Value, ";")(3) Then 'Anzahl der Besch|fffd|ftigungstage
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
    End With
End Sub



Private Sub AlphaNumerisch(Ziel As String, int_len As Integer)
    Dim str As String
    
    With Fragebogen
        str = .Range(Ziel).Value
        
        If Len(str) > int_len Then
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Fragebogen
        Call Fehlermeldungen(1, int_len)
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Numerisch(Ziel As String, Optional int_len As Integer)
    Dim str As String
    Dim err As Integer
    
    With Fragebogen
        str = .Range(Ziel).Value
        
        If IsNumeric(str) Then
            If str < 0 Then
                err = 4
                GoTo Fehlerbehandlung
            Else
                If int_len <> 0 And Len(str) > int_len Then
                    err = 1
                    GoTo Fehlerbehandlung
                End If
            End If
        Else
            err = 3
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Fragebogen
        If int_len <> 0 Then
            Call Fehlermeldungen(err, int_len)
        Else
            Call Fehlermeldungen(err)
        End If
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Numerisch_VK_NK(Ziel As String, int_nk As Integer, Optional int_vk As Integer)
    Dim str As String
    Dim err As Integer
    Dim strFormat As String
    Dim nk As Integer
    
    strFormat = "0."
    nk = int_nk
    Do While nk > 0
        strFormat = strFormat & "0"
        nk = nk - 1
    Loop
    
    With Fragebogen
        str = .Range(Ziel).Value
        
        If IsNumeric(str) Then
            If str < 0 Then
                err = 4
                GoTo Fehlerbehandlung
            Else
                If InStr(str, ",") = 0 Then str = VBA.Format(str, strFormat)
                
                If int_nk <> 0 And Len(Split(str, ",")(1)) > int_nk Then
                    err = 7
                    GoTo Fehlerbehandlung
                ElseIf int_vk <> 0 And Len(Split(str, ",")(0)) > int_vk Then
                    err = 8
                    GoTo Fehlerbehandlung
                Else
                    str = VBA.Format(str, strFormat)
                End If
            End If
        Else
            err = 3
            GoTo Fehlerbehandlung
        End If
        
        .Range(Ziel).Value = str
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Fragebogen
        Select Case err
            Case 7:     Call Fehlermeldungen(err, int_nk)
            Case 8:     Call Fehlermeldungen(err, int_vk)
            Case Else:  Call Fehlermeldungen(err)
        End Select
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Datum(Ziel As String)
    Dim str As String
    
    With Fragebogen
        str = .Range(Ziel).Value
        If InStr(str, ".") = 3 And InStr(VBA.Mid(str, 4), ".") = 3 And Len(str) = 10 Then
            If Not IsNumeric(Split(str, ".")(0)) Or Split(str, ".")(0) > 31 Or Not IsNumeric(Split(str, ".")(1)) Or Split(str, ".")(1) > 12 Or Not IsNumeric(Split(str, ".")(2)) Then
                GoTo Fehlerbehandlung
            End If
        Else
            If InStr(str, ".") = 0 And Len(str) = 8 Then
                If IsNumeric(VBA.Left(str, 2)) And IsNumeric(VBA.Mid(str, 3, 2)) And IsNumeric(VBA.Mid(str, 5)) Then
                    str = VBA.Format(VBA.Left(str, 2), "00") & "." & VBA.Format(VBA.Mid(str, 3, 2), "00") & "." & VBA.Mid(str, 5)
                End If
            ElseIf UBound(Split(str, ".")) = 2 Then
                If IsNumeric(Split(str, ".")(0)) And IsNumeric(Split(str, ".")(1)) And IsNumeric(Split(str, ".")(2)) Then
                    If Len(Split(str, ".")(2)) = 4 Then
                        str = VBA.Format(Split(str, ".")(0), "00") & "." & VBA.Format(Split(str, ".")(1), "00") & "." & Split(str, ".")(2)
                    Else
                        GoTo Fehlerbehandlung
                    End If
                End If
            Else
                GoTo Fehlerbehandlung
            End If
        End If
        
        If IsDate(str) Then
            .Range(Ziel).Value = str
        Else
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Fragebogen
        Call Fehlermeldungen(5)
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Datum_kurz(Ziel As String)
    Dim str As String
    
    With Fragebogen
        str = .Range(Ziel).Value
        If InStr(str, "/") = 3 And Len(str) = 7 Then
            If Not IsNumeric(Split(str, "/")(0)) Or Not IsNumeric(Split(str, "/")(1)) Then
                GoTo Fehlerbehandlung
            End If
        Else
            If InStr(str, ".") = 3 And Len(str) = 7 Then
                If IsNumeric(Split(str, ".")(0)) And IsNumeric(Split(str, ".")(1)) Then
                    str = VBA.Format(Split(str, ".")(0), "00") & "/" & Split(str, ".")(1)
                End If
            ElseIf InStr(str, ".") = 2 And Len(str) = 6 Then
                If IsNumeric(Split(str, ".")(0)) And IsNumeric(Split(str, ".")(1)) Then
                    str = VBA.Format(Split(str, ".")(0), "00") & "/" & Split(str, ".")(1)
                End If
            ElseIf InStr(str, "/") = 2 And Len(str) = 6 Then
                If IsNumeric(Split(str, "/")(0)) And IsNumeric(Split(str, "/")(1)) Then
                    str = VBA.Format(Split(str, "/")(0), "00") & "/" & Split(str, "/")(1)
                End If
            ElseIf InStr(str, "/") = 0 And Len(str) = 6 Then
                If IsNumeric(VBA.Left(str, 2)) And IsNumeric(VBA.Mid(str, 3)) Then
                    str = VBA.Format(VBA.Left(str, 2), "00") & "/" & VBA.Mid(str, 3)
                End If
            Else
                GoTo Fehlerbehandlung
            End If
        End If
        
        If IsDate(str) Then
            .Range(Ziel).Value = str
        Else
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Fragebogen
        Call Fehlermeldungen(6)
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Fehlermeldungen(Fehler_Nr As Integer, Optional int_len As Integer)
    Dim Message As String
    
    Select Case Fehler_Nr
        Case 1
                Message = "Der eingegebene Wert ist zu lang." & vbCrLf & _
                            "Zul|fffd|ssig sind maximal " & int_len & " Zeichen."
                            
        Case 2
                Message = "Der eingegebene Wert ist zu kurz." & vbCrLf & _
                            "Bitte geben sie mindestens " & int_len & " Zeichen ein."
        
        Case 3
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind nur numerische Werte."
                            
        Case 4
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind nur Werte gr|fffd||fffd|er oder gleich 0."
                            
        Case 5
                Message = "Das eingegebene Datum ist ung|fffd|ltig." & vbCrLf & _
                            "Bitte geben Sie ein Datum im Format 'TT.MM.JJJJ' ein."
                            
        Case 6
                Message = "Das eingegebene Datum ist ung|fffd|ltig." & vbCrLf & _
                            "Bitte geben Sie ein Datum im Format 'MM/JJJJ' ein."
                            
        Case 7
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind maximal " & int_len & " Nachkommastellen."
                
        Case 8
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind maximal " & int_len & " Vorkommastellen."
        
        Case 10
                Message = "F|fffd|r den erfassten Mitarbeiter wurde keine Personalnummer angegeben." & vbCrLf & _
                            "Bitte geben Sie eine g|fffd|ltige Personalnummer ein."
        
        Case 11
                Message = "F|fffd|r den erfassten Mitarbeiter wurde kein vollst|fffd|ndiger Name angegeben." & vbCrLf & _
                            "Bitte geben Sie einen vollst|fffd|ndigen Namen ein."
                            
        Case 12
                Message = "F|fffd|r den erfassten Mitarbeiter wurde kein Eintrittsdatum angegeben." & vbCrLf & _
                            "Bitte geben Sie ein g|fffd|ltiges Eintrittsdatum ein."
        
        Case 13
                Message = "F|fffd|r den erfassten Mitarbeiter wurde keine vollst|fffd|ndige Anschrift angegeben." & vbCrLf & _
                            "Bitte geben Sie eine vollst|fffd|ndige Anschrift ein."
                        
        Case 14
                Message = "F|fffd|r den erfassten Mitarbeiter wurde kein Geburtsdatum angegeben." & vbCrLf & _
                            "Bitte geben Sie ein g|fffd|ltiges Geburtsdatum ein."
    End Select
    
    'Hinweismeldung zusammensetzen
    If Fehler_Nr < 10 Then
        MsgBox Message & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Korrigieren Sie Ihre Eingabe.", _
                vbExclamation
    Else
         MsgBox Message, vbExclamation
    End If
End Sub
Attribute VB_Name = "Mdl_Registry"
Option Explicit

Const REG_OPTION_NON_VOLATILE = &H0
Const HKEY_LOCAL_MACHINE = &H80000002

Const KEY_READ = &H20019

#If VBA7 Then
    Declare PtrSafe Function RegOpenKeyEx Lib "advapi32.dll" Alias _
        "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, _
        ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As _
        Long) As Long
    
    Declare PtrSafe Function RegQueryValueEx Lib "advapi32.dll" Alias _
        "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, _
        ByVal lpReserved As Long, lpType As Long, lpData As Any, _
        lpcbData As Long) As Long
    
    Declare PtrSafe Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long

#Else
    Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias _
        "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, _
        ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As _
        Long) As Long
    
    Declare Function RegQueryValueEx Lib "advapi32.dll" Alias _
        "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, _
        ByVal lpReserved As Long, lpType As Long, lpData As Any, _
        lpcbData As Long) As Long
    
    Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long
#End If

Function VersionImportDatei_LuG_lesen()
    Dim vers_nr As String

    Select Case GetOsArchitecture()
        Case OSA_Unknown
            vers_nr = ""
        Case OSA_x86
            vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\DATEVeG\Components\P0000000\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
            If Len(Trim(vers_nr)) = 0 Then
                vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\DATEVeG\Components\P0000041\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
            End If
        Case OSA_x64
            vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\Wow6432Node\DATEVeG\Components\P0000000\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
            If Len(Trim(vers_nr)) = 0 Then
                vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\Wow6432Node\DATEVeG\Components\P0000041\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
            End If
        Case OSA_Itanium
            vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\Wow6432Node\DATEVeG\Components\P0000000\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
            If Len(Trim(vers_nr)) = 0 Then
                vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\Wow6432Node\DATEVeG\Components\P0000041\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
            End If
    End Select

    VersionImportDatei_LuG_lesen = vers_nr
End Function

Function RegRead(ByVal lngHKey As Long, ByVal strSection As String, varValue As Variant) As String

    'Liest String-, Bin|fffd|r- und DWORD-Daten aus der Registry
    Dim lngReturn       As Long             'R|fffd|ckgabewert des ge|fffd|ffneten Schl|fffd|ssels
    Dim lngHandle       As Long             'Handle auf den ge|fffd|ffneten Schl|fffd|ssel
    Dim lngDataType     As Long             'Datentyp des Regestrywerts
    Dim lngBufferSize   As Long             'Speicherbedarf des gelesenen Werts

    On Error GoTo GoOut
    
    'Registryschl|fffd|ssel |fffd|ffnen
    lngReturn = RegOpenKeyEx(lngHKey, strSection, 0&, KEY_READ, lngHandle)
    
    If lngReturn <> 0 Then Exit Function
    
    'Datentyp und Gr|fffd||fffd|e bestimmen
    lngReturn = RegQueryValueEx(lngHandle, varValue, 0, lngDataType, ByVal 0, lngBufferSize)

    If lngReturn <> 0 Then GoTo GoOut
    
    'Je nach Typ werden jetzt die Daten gelesen
    Select Case lngDataType
    
        Case 1:     ' String
            Dim strTmpSNum      As String * 255
            lngReturn = RegQueryValueEx(lngHandle, varValue & VBA.Chr(0), 0&, 1, ByVal strTmpSNum, Len(strTmpSNum))
            If lngReturn = 0 Then RegRead = VBA.Left(strTmpSNum, InStr(1, strTmpSNum, vbNullChar) - 1)
            
        Case 3:     ' Bin|fffd|r
            Dim bytData()       As Byte
            lngReturn = RegQueryValueEx(lngHandle, varValue, 0&, 3, ByVal 0&, lngBufferSize)
            ReDim bytData(lngBufferSize - 1) As Byte
            lngReturn = RegQueryValueEx(lngHandle, varValue, 0&, 3, bytData(0), lngBufferSize)
            If lngReturn = 0 Then RegRead = bytData()
            
        Case 4:     ' DWORD
            Dim lngData         As Long
            lngReturn = RegQueryValueEx(lngHandle, varValue & VBA.Chr(0), 0&, 4, lngData, lngBufferSize)
            If lngReturn = 0 Then RegRead = lngData
            
        Case Else   ' andere Typen werden von dieser Funktion nicht unterst|fffd|tzt
            lngReturn = -1
    
    End Select
    
GoOut:
    'Schl|fffd|ssel wieder schliessen
    lngReturn = RegCloseKey(lngHandle)
  
End Function
Attribute VB_Name = "Mdl_Steuerelemente"
Option Explicit
Public Const ComboBox_Left_Spalte_1 = 15.75
Public Const ComboBox_Left_Spalte_2 = 348.75
Public Const ComboBox_Height = 19.5
Public Const ComboBox_Width = 318
Public Const ComboBox_Small_Width = 151.5
Public Const CheckBox_Left_Spalte_1 = 252
Public Const CheckBox_Left_Spalte_2 = 585
Public Position As Double                               'Y-Achsen-Position (Sprich Zeile) der Steuerelemente, angabe in mm (vermutlich)
Public Standard_Abstand_ComboBox As Double
Public Abstand_Absatz_ComboBox As Double
Public Abstand_Arbeitspapiere_CheckBoxen As Double
Dim Image_Logo As OLEObject
Dim CommandButton_Speichern As OLEObject
Dim CommandButton_Drucken As OLEObject
Dim CommandButton_Export As OLEObject
Dim CommandButton_Email As OLEObject
Dim ComboBox_Geschlecht As OLEObject
Dim ComboBox_Familienstand As OLEObject
Dim ComboBox_Schwerbehindert As OLEObject
Dim ComboBox_Barzahlung As OLEObject
Dim ComboBox_Art_der_Beschaeftigung As OLEObject
Dim ComboBox_Probezeit As OLEObject
Dim ComboBox_Nebenbeschaeftigung As OLEObject
Dim ComboBox_Geringfuegige_Beschaeftigung As OLEObject
Dim ComboBox_Hoechster_Schulabschluss As OLEObject
Dim ComboBox_Hoechste_Berufsausbildung As OLEObject
Dim ComboBox_Vertragsform As OLEObject
Dim ComboBox_Personengruppe As OLEObject
Dim ComboBox_Status_Beschaeftigung As OLEObject
Dim ComboBox_Art_der_Befristung As OLEObject
Dim CheckBox_Schriftlicher_Abschluss As OLEObject
Dim CheckBox_Weiterbeschaeftigung As OLEObject
Dim ComboBox_Konfession As OLEObject
Dim ComboBox_Pauschalierung As OLEObject
Dim ComboBox_Abwaelzung_an_Arbeitnehmer As OLEObject
Dim ComboBox_Elterneigenschaft As OLEObject
Dim ComboBox_KV As OLEObject
Dim ComboBox_RV As OLEObject
Dim ComboBox_AV As OLEObject
Dim ComboBox_PV As OLEObject
Dim CheckBox_RV_Option As OLEObject
Dim ComboBox_Krankenversicherung As OLEObject
Dim ComboBox_weitere_Beschaeftigungen As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_2 As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_3 As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_4 As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_5 As OLEObject
Dim ComboBox_Bea As OLEObject
Dim CheckBox_Arbeitsvertrag As OLEObject
Dim CheckBox_Bea_Yes As OLEObject
Dim CheckBox_Bea_No As OLEObject
Dim CheckBox_Lohnsteuerkarte As OLEObject
Dim CheckBox_SV_Ausweis As OLEObject
Dim CheckBox_Mitgliedsbescheinigung_KK As OLEObject
Dim CheckBox_Bescheinigung_pr_KV As OLEObject
Dim CheckBox_VWL_Vertrag As OLEObject
Dim CheckBox_Nachweis_Elterneigenschaft As OLEObject
Dim CheckBox_Vertrag_Altersversorgung As OLEObject
Dim CheckBox_Schwerbehindertenausweis As OLEObject
Dim CheckBox_Unterlagen_Sozialkasse_Bau As OLEObject
Dim CheckBox_Arbeitsvertrag_MJ As OLEObject
Dim CheckBox_Lohnsteuerkarte_MJ As OLEObject
Dim CheckBox_SV_Ausweis_MJ As OLEObject
Dim CheckBox_Befreiung_RV_MJ As OLEObject
Dim CheckBox_Krankenversicherung_MJ As OLEObject
Dim CheckBox_VWL_Vertrag_MJ As OLEObject
Dim CheckBox_Studienbescheinigung_MJ As OLEObject
Dim CheckBox_Schwerbehindertenausweis_MJ As OLEObject
Dim CheckBox_Unterlagen_Sozialkasse_MJ As OLEObject
Dim CheckBox_wB_Option_Ja As OLEObject
Dim CheckBox_wB_Option_Nein As OLEObject

Public Sub Steuerelemente_initialisieren()
    Dim shp As Shape
    Dim oo As OLEObject

    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    'die alten Button und OLEObjects werden gel|fffd|scht
    On Error Resume Next
    With Fragebogen
        For Each shp In .Shapes
            shp.Delete
        Next shp
    End With
    On Error GoTo 0
    
    'Es werden die verschiedenen Funktionen aufgerufen, welche Button und ActiveX-Elemente erstellen.
    'Welche Objecte erstellt werden m|fffd|ssen wird abgepr|fffd|ft anhand der Namen die im ws_Assistent in
    'der ersten Spalte noch vorhanden sind. Welche absoluten Werte sich hinter "clm_Bezeichnung" oder
    'dergleichen verbergen ist |fffd|ber Rechtsklick auf die Variable und auswahl der QuickInfo m|fffd|glich.
    With ws_Assistent
        Call Image_Logo_erzeugen(Fragebogen)
        Call CommandButton_Speichern_erzeugen
        Call CommandButton_Drucken_erzeugen
        Call CommandButton_Email_erzeugen
        Call CommandButton_Export_erzeugen
        If Not .Cells(Geschlecht_Familienstand, clm_Bezeichnung).Value = "" Then
            Call ComboBoxen_Geschlecht_Familienstand_erzeugen
        End If
        If Not .Cells(Schwerbehindert, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Schwerbehindert_erzeugen
        End If
        If Not .Cells(Barzahlung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Barzahlung_erzeugen
        End If
        If Not .Cells(Art_der_Beschaeftigung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Art_der_Beschaeftigung_erzeugen
        End If
        If Not .Cells(Probezeit, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Probezeit_erzeugen
        End If
        If Not .Cells(Nebenbeschaeftigung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Nebenbeschaeftigung_erzeugen
        End If
        If Not .Cells(Geringfuegige_Beschaeftigung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Geringfuegige_Beschaeftigung_erzeugen
        End If
        If Not .Cells(Hoechster_Schulabschluss, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Hoechster_Schulabschluss_erzeugen
        End If
        If Not .Cells(Hoechste_Berufsausbildung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Hoechste_Berufsausbildung_erzeugen
        End If
        If Not .Cells(Vertragsform, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Vertragsform_erzeugen
        End If
        If Not .Cells(Personengruppe, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Personengruppe_erzeugen
        End If
        If Not .Cells(Status_Beschaeftigung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Status_Beschaeftigung_erzeugen
        End If
        If Not .Cells(Art_der_Befristung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Art_der_Befristung_erzeugen
        End If
        If Not .Cells(CheckBoxen_Befristung, clm_Bezeichnung).Value = "" Then
            Call CheckBoxen_Befristung_erzeugen(Fragebogen)
        End If
        Call ComboBox_Konfession_erzeugen
        If Not .Cells(Pauschalierung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Pauschalierung_erzeugen
        End If
        If Not .Cells(Abwaelzung_an_Arbeitnehmer, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Abwaelzung_an_Arbeitnehmer_erzeugen
        End If
        If Not .Cells(Elterneigenschaft, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Elterneigenschaft_erzeugen
        End If
        If Not .Cells(KV_RV, clm_Bezeichnung).Value = "" And Not .Cells(AV_PV, clm_Bezeichnung).Value = "" Then
            Call ComboBoxen_KV_RV_erzeugen
            Call ComboBoxen_AV_PV_erzeugen
        End If
        If Not .Cells(Krankenversicherung, clm_Bezeichnung).Value = "" Then
            Call ComboBox_Krankenversicherung_erzeugen
        End If
        If Not .Cells(RV_Option, clm_Bezeichnung).Value = "" Then
            Call CheckBox_RV_Option_erzeugen(Fragebogen)
        End If
        If Not .Cells(weitere_Beschaeftigungen, clm_Bezeichnung).Value = "" Then
            Call ComboBoxen_weitere_Beschaeftigungen_erzeugen
        End If
        If Not .Cells(Bea, clm_Bezeichnung).Value = "" Then
            'Call ComboBox_Bea_erzeugen
        End If
        If Not .Cells(EUR450_Option, clm_Bezeichnung).Value = "" Then
            Call CheckBox_weitere_Beschaeftigungen_Option_erzeugen(Fragebogen)
        End If
    End With
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
End Sub

Public Sub Steuerelemente_auslesen()
    Dim oo As OLEObject
    
    'Falls das Dokument gespeichert wird, werden die Werte aller ActiveX-Elemente in ws_Assistent
    'gespeichert.
    'clm_Wert oder clm_Wert_2 sind hierbei die Spalten in denen sich gespeicherte Werte befinden.
    With ws_Assistent
        For Each oo In Fragebogen.OLEObjects
            Select Case (oo.Name)
                Case "cbx_Geschlecht"
                    .Cells(Geschlecht_Familienstand, clm_Wert).Value = oo.Object.Value
                Case "cbx_Familienstand"
                    .Cells(Geschlecht_Familienstand, clm_Wert).Value = .Cells(Geschlecht_Familienstand, clm_Wert).Value & ";" & oo.Object.Value
                Case "cbx_Schwerbehindert"
                    .Cells(Schwerbehindert, clm_Wert).Value = oo.Object.Value
                Case "cbx_Barzahlung"
                    .Cells(Barzahlung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Art_der_Beschaeftigung"
                    .Cells(Art_der_Beschaeftigung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Probezeit"
                    .Cells(Probezeit, clm_Wert).Value = oo.Object.Value
                Case "cbx_Nebenbeschaeftigung"
                    .Cells(Nebenbeschaeftigung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Geringfuegig"
                    .Cells(Geringfuegige_Beschaeftigung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Schulabschluss"
                    .Cells(Hoechster_Schulabschluss, clm_Wert).Value = oo.Object.Value
                Case "cbx_Berufsausbildung"
                    .Cells(Hoechste_Berufsausbildung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Vertragsform"
                    .Cells(Vertragsform, clm_Wert).Value = oo.Object.Value
                Case "cbx_Personengruppe"
                    .Cells(Personengruppe, clm_Wert).Value = oo.Object.Value
                Case "cbx_Status_Beschaeftigung"
                    .Cells(Status_Beschaeftigung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Art_der_Befristung"
                    .Cells(Art_der_Befristung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Schriftlicher_Abschluss"
                    If oo.Object.Value = True Then
                        .Cells(CheckBoxen_Befristung, clm_Wert).Value = "X"
                    Else
                        .Cells(CheckBoxen_Befristung, clm_Wert).Value = ""
                    End If
                Case "cbx_Weiterbeschaeftigung"
                    If oo.Object.Value = True Then
                        .Cells(CheckBoxen_Befristung, clm_Wert).Value = .Cells(CheckBoxen_Befristung, clm_Wert).Value & ";X"
                    Else
                        .Cells(CheckBoxen_Befristung, clm_Wert).Value = .Cells(CheckBoxen_Befristung, clm_Wert).Value & ";"
                    End If
                Case "cbx_Konfession"
                    .Cells(Konfession, clm_Wert).Value = oo.Object.Value
                Case "cbx_Pauschalierung"
                    .Cells(Pauschalierung, clm_Wert).Value = oo.Object.Value
                Case "cbx_Abwaelzung_an_Arbeitnehmer"
                    .Cells(Abwaelzung_an_Arbeitnehmer, clm_Wert).Value = oo.Object.Value
                Case "cbx_Elterneigenschaft"
                    .Cells(Elterneigenschaft, clm_Wert).Value = oo.Object.Value
                Case "cbx_KV"
                    .Cells(KV_RV, clm_Wert).Value = oo.Object.Value
                Case "cbx_RV"
                    .Cells(KV_RV, clm_Wert).Value = .Cells(KV_RV, clm_Wert).Value & ";" & oo.Object.Value
                Case "cbx_AV"
                    .Cells(AV_PV, clm_Wert).Value = oo.Object.Value
                Case "cbx_PV"
                    .Cells(AV_PV, clm_Wert).Value = .Cells(AV_PV, clm_Wert).Value & ";" & oo.Object.Value
                Case "cbx_Krankenversicherung"
                    .Cells(Krankenversicherung, clm_Wert).Value = oo.Object.Value
                Case "cbx_RV_Option"
                    If oo.Object.Value = True Then
                        .Cells(RV_Option, clm_Wert).Value = "X"
                    Else
                        .Cells(RV_Option, clm_Wert).Value = ""
                    End If
                Case "cbx_weitere_Beschaeftigungen"
                    .Cells(weitere_Beschaeftigungen, clm_Wert_2).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_2"
                    .Cells(weitere_Beschaeftigungen_2, clm_Wert_2).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_3"
                    .Cells(weitere_Beschaeftigungen_3, clm_Wert_2).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_4"
                    .Cells(weitere_Beschaeftigungen_4, clm_Wert_2).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_5"
                    .Cells(weitere_Beschaeftigungen_5, clm_Wert_2).Value = oo.Object.Value
                Case "cbx_Bea"
                    .Cells(Bea, clm_Wert).Value = oo.Object.Value
                Case "cbx_wB_Option_Ja"
                    If oo.Object.Value = True Then
                        .Cells(EUR450_Option, clm_Wert_2).Value = "J"
                    End If
                Case "cbx_wB_Option_Nein"
                    If oo.Object.Value = True Then
                        .Cells(EUR450_Option, clm_Wert_2).Value = "N"
                    End If
            End Select
        Next oo
    End With
End Sub

Public Sub Image_Logo_erzeugen(ws As Worksheet)
    'Das Logo wird abh|fffd|ngig von dem angegebenen Worksheet in dieses eingef|fffd|gt
    With ws
        Set Image_Logo = .OLEObjects.Add(ClassType:="Forms.Image.1", _
            DisplayAsIcon:=False, Left:=599.25, Top:=11.25, Width:=72, height:=72)
        Image_Logo.Name = "img_Logo"
        With Image_Logo.Object
            .BackColor = &HFFFFFF
            .BackStyle = 0
            .BorderStyle = 0
            .PictureAlignment = 1
            .PictureSizeMode = 3
            'hier wird gepr|fffd|ft ob ein eigenes Logo angegeben wurde oder ob das
            'Standard DATEV Logo verwendet werden soll.
            If Not ws_Verwaltung.Cells(Eigenes_Logo, 2).Value = "" Then
                .Picture = ws_Logo.img_Eigenes_Logo.Picture
            Else
                .Picture = ws_Logo.img_Datev_Logo.Picture
            End If
        End With
    End With
End Sub

Public Sub Datev_Logo_einfuegen()
    'Wenn das Logo zur|fffd|ckgesetzt wird, wird mit dieser Funktion das Logo direkt wieder ge|fffd|ndert
    Worksheets("Personalfragebogen").img_Logo.Picture = ws_Logo.img_Datev_Logo.Picture
    ws_Verwaltung.Cells(Eigenes_Logo, 2).Value = ""
End Sub

Public Sub Eigenes_Logo_einfuegen(Datei As String)
    'Wenn das Logo per Dialog ver|fffd|ndert wird, wird mit dieser Funktion das Logo ge|fffd|ndert
    On Error GoTo Fehlerbehandlung
    Worksheets("Personalfragebogen").img_Logo.Picture = LoadPicture(Datei)
    ws_Logo.img_Eigenes_Logo.Picture = Worksheets("Personalfragebogen").img_Logo.Picture
    On Error GoTo 0
    ws_Verwaltung.Cells(Eigenes_Logo, 2).Value = "X"
    Exit Sub
    
Fehlerbehandlung:
    MsgBox "Einf|fffd|gen des Logos fehlgeschlagen." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
           " Bitte |fffd|berpr|fffd|fen Sie die Spezifikationen der gew|fffd|hlten Bilddatei und versuchen es erneut.", _
           vbExclamation
    Exit Sub
End Sub

Private Sub CommandButton_Speichern_erzeugen()
    'Der Speichern-Button wird hier erstellt, seine Position ist unabh|fffd|ngig von Spalten und Zeilen.
    With Fragebogen
        Set CommandButton_Speichern = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
            Left:=421.5, Top:=10.5, height:=20.25, Width:=78)
        CommandButton_Speichern.Name = "cb_Speichern"
        With CommandButton_Speichern.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Caption = "Speichern"
            Else
                .Caption = "Save"
            End If
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = True
            End With
        End With
    End With
End Sub

Private Sub CommandButton_Drucken_erzeugen()
    'Der Drucken-Button wird hier erstellt, seine Position ist unabh|fffd|ngig von Spalten und Zeilen.
    With Fragebogen
        Set CommandButton_Drucken = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
                Left:=421.5, Top:=30.75, height:=20.25, Width:=78)
        CommandButton_Drucken.Name = "cb_Drucken"
        With CommandButton_Drucken.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Caption = "Drucken"
            Else
                .Caption = "Print"
            End If
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = True
            End With
        End With
    End With
End Sub

Private Sub CommandButton_Email_erzeugen()
    'Der E-Mail-Button wird hier erstellt, seine Position ist unabh|fffd|ngig von Spalten und Zeilen.
    With Fragebogen
        Set CommandButton_Email = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
                Left:=421.5, Top:=51, height:=20.25, Width:=78)
        CommandButton_Email.Name = "cb_Email"
        With CommandButton_Email.Object
            .Caption = "Email"
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = True
            End With
        End With
    End With
End Sub

Private Sub CommandButton_Export_erzeugen()
    'Der Export-Button wird hier erstellt, seine Position ist unabh|fffd|ngig von Spalten und Zeilen.
    With Fragebogen
        Set CommandButton_Export = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
                Left:=499.5, Top:=10.5, height:=60.75, Width:=78)
        CommandButton_Export.Name = "cb_Export"
        With CommandButton_Export.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .Caption = "Exportdatei f|fffd|r Lohnsoftware erzeugen"
            Else
                .Caption = "Generate export file"
            End If
            .WordWrap = True
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = True
            End With
        End With
    End With
End Sub

Private Sub ComboBoxen_Geschlecht_Familienstand_erzeugen()
    Dim i As Integer
    Dim str, pos_11, pos_21 As String
    Dim pos_lft, pos_top As Double
    Dim pos_12, pos_13, pos_1, pos_22, pos_23, pos_2 As Range

    'Alte Positionsbestimmung: Hier wird die absolut Position unabh|fffd|ngig von Spalten und Zeilen
    'aus ws_Assistent ausgelesen.
    str = ws_Assistent.Cells(Geschlecht_Familienstand, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    'Neue Positionsbestimmung: Bei der absoluten Positionierung wird mit Koordinaten |fffd|ber
    'das gesamte Dokument gearbeitet, die f|fffd|r die Anzeige im letzten Schritt einmal gerundet werden.
    'Die Zeilenh|fffd|hen k|fffd|nnen genau wie alles nur Pixelgenau angezeigt werden, weswegen jede Zeilenh|fffd|he
    'wie auch Zeilenbreite gerundet wird.
    'Bei mehreren hundert Zeilen (also im Verlauf des Dukomentes) kann es vorkommen, dass ein merklicher
    'Unterschied zwischen der einmal gerundeten AbsolutPosition und der mehrfach gerundeten
    'Zeilenposition entsteht.
    'Um diesen Unterschied zu vermeiden werden hier die Zeilenpositionen genutzt um sich deren linken
    'wie auch rechten Rand ausgeben zu lassen. Anhand von dieser Position werden die ActiveX-Elemente
    'im Absatz passend ausgerichtet.
    str = ws_Assistent.Cells(Geschlecht_Familienstand, clm_Range).Value
    pos_11 = Split(str, ";")(0)
    pos_21 = Split(str, ";")(1)
    Set pos_12 = Fragebogen.Range(pos_11)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    Set pos_22 = Fragebogen.Range(pos_21)
    Set pos_23 = Fragebogen.Cells(pos_22.Row + 2, pos_22.Column + 8)
    Set pos_2 = Fragebogen.Range(pos_22, pos_23)

    With Fragebogen
        Set ComboBox_Geschlecht = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Geschlecht.Name = "cbx_Geschlecht"
        ws_Assistent.Cells(Geschlecht_Familienstand, clm_OO_Name).Value = ComboBox_Geschlecht.Name
        With ComboBox_Geschlecht.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Geschlecht).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Geschlecht).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Geschlecht).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Geschlecht).Value
                Next i
            End If
            If Not ws_Assistent.Cells(Geschlecht_Familienstand, clm_Wert).Value = "" Then
                .Value = Split(ws_Assistent.Cells(Geschlecht_Familienstand, clm_Wert).Value, ";")(0)
            End If
        End With

        Set ComboBox_Familienstand = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_2.Left, Top:=pos_2.Top, height:=pos_2.height, Width:=pos_2.Width)
        ComboBox_Familienstand.Name = "cbx_Familienstand"
        ws_Assistent.Cells(Geschlecht_Familienstand, clm_OO_Name).Value = ws_Assistent.Cells(Geschlecht_Familienstand, clm_OO_Name).Value & ";" & ComboBox_Familienstand.Name
        With ComboBox_Familienstand.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Familienstand).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Familienstand).Value
                Next i
            Else
                .ListWidth = 177.75
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Familienstand).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Familienstand).Value
                Next i
            End If
            If Not ws_Assistent.Cells(Geschlecht_Familienstand, clm_Wert).Value = "" Then
                .Value = Split(ws_Assistent.Cells(Geschlecht_Familienstand, clm_Wert).Value, ";")(1)
            End If
        End With
    End With
End Sub

Private Sub ComboBox_Schwerbehindert_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Schwerbehindert, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Schwerbehindert, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Schwerbehindert = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Schwerbehindert.Name = "cbx_Schwerbehindert"
        ws_Assistent.Cells(Schwerbehindert, clm_OO_Name).Value = ComboBox_Schwerbehindert.Name
        With ComboBox_Schwerbehindert.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Schwerbehindert).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Schwerbehindert).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Schwerbehindert).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Schwerbehindert).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Schwerbehindert, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Barzahlung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Barzahlung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Barzahlung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Barzahlung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Barzahlung.Name = "cbx_Barzahlung"
        ws_Assistent.Cells(Barzahlung, clm_OO_Name).Value = ComboBox_Barzahlung.Name
        With ComboBox_Barzahlung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Barzahlung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Barzahlung).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Barzahlung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Barzahlung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Barzahlung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Art_der_Beschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Art_der_Beschaeftigung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Art_der_Beschaeftigung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Art_der_Beschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Art_der_Beschaeftigung.Name = "cbx_Art_der_Beschaeftigung"
        ws_Assistent.Cells(Art_der_Beschaeftigung, clm_OO_Name).Value = ComboBox_Art_der_Beschaeftigung.Name
        With ComboBox_Art_der_Beschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Art_der_Beschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Art_der_Beschaeftigung).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Art_der_Beschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Art_der_Beschaeftigung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Art_der_Beschaeftigung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Probezeit_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_11 As String
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range

    str = ws_Assistent.Cells(Probezeit, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Probezeit, clm_Range).Value
    pos_11 = Split(str, ";")(0)
    Set pos_12 = Fragebogen.Range(pos_11)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)

    With Fragebogen
        Set ComboBox_Probezeit = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Probezeit.Name = "cbx_Probezeit"
        ws_Assistent.Cells(Probezeit, clm_OO_Name).Value = ComboBox_Probezeit.Name
        With ComboBox_Probezeit.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Probezeit).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Probezeit).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Probezeit).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Probezeit).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Probezeit, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Nebenbeschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Nebenbeschaeftigung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Nebenbeschaeftigung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Nebenbeschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Nebenbeschaeftigung.Name = "cbx_Nebenbeschaeftigung"
        ws_Assistent.Cells(Nebenbeschaeftigung, clm_OO_Name).Value = ComboBox_Nebenbeschaeftigung.Name
        With ComboBox_Nebenbeschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Nebenbeschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Nebenbeschaeftigung).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Nebenbeschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Nebenbeschaeftigung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Nebenbeschaeftigung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Geringfuegige_Beschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Geringfuegige_Beschaeftigung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Geringfuegige_Beschaeftigung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Geringfuegige_Beschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Geringfuegige_Beschaeftigung.Name = "cbx_Geringfuegig"
        ws_Assistent.Cells(Geringfuegige_Beschaeftigung, clm_OO_Name).Value = ComboBox_Geringfuegige_Beschaeftigung.Name
        With ComboBox_Geringfuegige_Beschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Geringfuegige_Beschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Geringfuegige_Beschaeftigung).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Geringfuegige_Beschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Geringfuegige_Beschaeftigung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Geringfuegige_Beschaeftigung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Hoechster_Schulabschluss_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Hoechster_Schulabschluss, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Hoechster_Schulabschluss, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Hoechster_Schulabschluss = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Hoechster_Schulabschluss.Name = "cbx_Schulabschluss"
        ws_Assistent.Cells(Hoechster_Schulabschluss, clm_OO_Name).Value = ComboBox_Hoechster_Schulabschluss.Name
        With ComboBox_Hoechster_Schulabschluss.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 333.75
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Hoechster_Schulabschluss).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Hoechster_Schulabschluss).Value
                Next i
            Else
                .ListWidth = 475.5
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Hoechster_Schulabschluss).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Hoechster_Schulabschluss).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Hoechster_Schulabschluss, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Hoechste_Berufsausbildung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Hoechste_Berufsausbildung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Hoechste_Berufsausbildung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Hoechste_Berufsausbildung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Hoechste_Berufsausbildung.Name = "cbx_Berufsausbildung"
        ws_Assistent.Cells(Hoechste_Berufsausbildung, clm_OO_Name).Value = ComboBox_Hoechste_Berufsausbildung.Name
        With ComboBox_Hoechste_Berufsausbildung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 442.5
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Hoechste_Berufsausbildung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Hoechste_Berufsausbildung).Value
                Next i
            Else
                .ListWidth = 531
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Hoechste_Berufsausbildung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Hoechste_Berufsausbildung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Hoechste_Berufsausbildung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Vertragsform_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Vertragsform, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Vertragsform, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Vertragsform = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Vertragsform.Name = "cbx_Vertragsform"
        ws_Assistent.Cells(Vertragsform, clm_OO_Name).Value = ComboBox_Vertragsform.Name
        With ComboBox_Vertragsform.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Vertragsform).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Vertragsform).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Vertragsform).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Vertragsform).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Vertragsform, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Personengruppe_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Personengruppe, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Personengruppe, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Personengruppe = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Personengruppe.Name = "cbx_Personengruppe"
        ws_Assistent.Cells(Personengruppe, clm_OO_Name).Value = ComboBox_Personengruppe.Name
        With ComboBox_Personengruppe.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 610.5
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Personengruppe).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Personengruppe).Value
                Next i
            Else
                .ListWidth = 762
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Personengruppe).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Personengruppe).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Personengruppe, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Status_Beschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Status_Beschaeftigung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Status_Beschaeftigung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Status_Beschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Status_Beschaeftigung.Name = "cbx_Status_Beschaeftigung"
        ws_Assistent.Cells(Status_Beschaeftigung, clm_OO_Name).Value = ComboBox_Status_Beschaeftigung.Name
        With ComboBox_Status_Beschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Status_Beschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Status_Beschaeftigung).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Status_Beschaeftigung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Status_Beschaeftigung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Status_Beschaeftigung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Art_der_Befristung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Art_der_Befristung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Art_der_Befristung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Art_der_Befristung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Art_der_Befristung.Name = "cbx_Art_der_Befristung"
        ws_Assistent.Cells(Art_der_Befristung, clm_OO_Name).Value = ComboBox_Art_der_Befristung.Name
        With ComboBox_Art_der_Befristung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Art_der_Befristung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Art_der_Befristung).Value
                Next i
            Else
                .ListWidth = 335.25
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Art_der_Befristung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Art_der_Befristung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Art_der_Befristung, clm_Wert).Value
        End With
    End With
End Sub

Public Sub CheckBoxen_Befristung_erzeugen(ws As Worksheet)
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim korrektur As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range

    str = ws_Assistent.Cells(CheckBoxen_Befristung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        pos_top = Split(str, ";")(1) - 24 + 0.75
    Else
        pos_top = Split(str, ";")(1) - 15 + 0.75
    End If
    
    str = ws_Assistent.Cells(CheckBoxen_Befristung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        korrektur = -23.25
    Else
        korrektur = -14.25
    End If

    With ws
        Set CheckBox_Schriftlicher_Abschluss = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top + korrektur, height:=18, Width:=317.25)
        CheckBox_Schriftlicher_Abschluss.Name = "cbx_Schriftlicher_Abschluss"
        With CheckBox_Schriftlicher_Abschluss.Object
            If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    .Caption = "Schriftlicher Abschluss des befristeten Ausbildungsvertrags"
                Else
                    .Caption = "Written conclusion of fixed-term vocational training contract"
                End If
            Else
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    .Caption = "Schriftlicher Abschluss des befristeten Arbeitsvertrags"
                Else
                    .Caption = "Written conclusion of a fixed-term employment contract"
                End If
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .Italic = False
            End With
            .TextAlign = 1
            If Not ws_Assistent.Cells(CheckBoxen_Befristung, clm_Wert).Value = "" Then
                If Split(ws_Assistent.Cells(CheckBoxen_Befristung, clm_Wert).Value, ";")(0) = "X" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
        pos_top = pos_top + 14.25

        Set CheckBox_Weiterbeschaeftigung = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=24, Width:=317.25)
        CheckBox_Weiterbeschaeftigung.Name = "cbx_Weiterbeschaeftigung"
        With CheckBox_Weiterbeschaeftigung.Object
            If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Auszubildende" Then
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    .Caption = "Ausbildung ist mit Aussicht auf Weiterbesch|fffd|ftigung nach erfolgreich abgelegter Abschlusspr|fffd|fung"
                Else
                    .Caption = "Apprenticeship with prospect of further employment after passing the final examination"
                End If
            Else
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    .Caption = "Befristete Besch|fffd|ftigung ist f|fffd|r mindestens 2 Monate vorgesehen, mit Aussicht auf Weiterbesch|fffd|ftigung"
                Else
                    .Caption = "Fixed-term employment is planned for at least two months, with prospects of further employment"
                End If
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .Italic = False
            End With
            .TextAlign = 1
            If Not ws_Assistent.Cells(CheckBoxen_Befristung, clm_Wert).Value = "" Then
                If Split(ws_Assistent.Cells(CheckBoxen_Befristung, clm_Wert).Value, ";")(1) = "X" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
    End With
End Sub

Private Sub ComboBox_Konfession_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Konfession, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Konfession, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Konfession = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Konfession.Name = "cbx_Konfession"
        ws_Assistent.Cells(Konfession, clm_OO_Name).Value = ComboBox_Konfession.Name
        With ComboBox_Konfession.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 381.75
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Konfession).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Konfession).Value
                Next i
            Else
                .ListWidth = 380.25
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Konfession).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Konfession).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Konfession, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Pauschalierung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Pauschalierung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Pauschalierung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Pauschalierung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Pauschalierung.Name = "cbx_Pauschalierung"
        ws_Assistent.Cells(Pauschalierung, clm_OO_Name).Value = ComboBox_Pauschalierung.Name
        With ComboBox_Pauschalierung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Pauschalierung).End(xlUp).Row
                    .AddItem VBA.Format(ws_Listen.Cells(i, Lst_Pauschalierung).Value, "Percent")
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Pauschalierung).End(xlUp).Row
                    .AddItem VBA.Format(ws_Listen_englisch.Cells(i, Lst_Pauschalierung).Value, "Percent")
                Next i
            End If
            .Value = ws_Assistent.Cells(Pauschalierung, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Abwaelzung_an_Arbeitnehmer_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Abwaelzung_an_Arbeitnehmer, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Abwaelzung_an_Arbeitnehmer, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Abwaelzung_an_Arbeitnehmer = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Abwaelzung_an_Arbeitnehmer.Name = "cbx_Abwaelzung_an_Arbeitnehmer"
        ws_Assistent.Cells(Abwaelzung_an_Arbeitnehmer, clm_OO_Name).Value = ComboBox_Abwaelzung_an_Arbeitnehmer.Name
        With ComboBox_Abwaelzung_an_Arbeitnehmer.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Abwaelzung_an_Arbeitnehmer).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Abwaelzung_an_Arbeitnehmer).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Abwaelzung_an_Arbeitnehmer).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Abwaelzung_an_Arbeitnehmer).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Abwaelzung_an_Arbeitnehmer, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBox_Elterneigenschaft_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Elterneigenschaft, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Elterneigenschaft, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Elterneigenschaft = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Elterneigenschaft.Name = "cbx_Elterneigenschaft"
        ws_Assistent.Cells(Elterneigenschaft, clm_OO_Name).Value = ComboBox_Elterneigenschaft.Name
        With ComboBox_Elterneigenschaft.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Elterneigenschaft).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Elterneigenschaft).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Elterneigenschaft).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Elterneigenschaft).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Elterneigenschaft, clm_Wert).Value
        End With
    End With
End Sub

Private Sub ComboBoxen_KV_RV_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    Dim pos_11 As String
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    Dim pos_21 As String
    Dim pos_22 As Range
    Dim pos_23 As Range
    Dim pos_2 As Range
    
    str = ws_Assistent.Cells(KV_RV, clm_Position).Value
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(KV_RV, clm_Range).Value
    pos_11 = Split(str, ";")(0)
    pos_21 = Split(str, ";")(1)
    Set pos_12 = Fragebogen.Range(pos_11)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    Set pos_22 = Fragebogen.Range(pos_21)
    Set pos_23 = Fragebogen.Cells(pos_22.Row + 2, pos_22.Column + 8)
    Set pos_2 = Fragebogen.Range(pos_22, pos_23)
    
    With Fragebogen
        Set ComboBox_KV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_KV.Name = "cbx_KV"
        ws_Assistent.Cells(KV_RV, clm_OO_Name).Value = ComboBox_KV.Name
        With ComboBox_KV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 350
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_KV).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_KV).Value
                Next i
            Else
                .ListWidth = 371.75
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_KV).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_KV).Value
                Next i
            End If
            If Not ws_Assistent.Cells(KV_RV, clm_Wert).Value = "" Then
                .Value = Split(ws_Assistent.Cells(KV_RV, clm_Wert).Value, ";")(0)
            End If
        End With
        
        Set ComboBox_RV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_2.Left, Top:=pos_2.Top, height:=pos_2.height, Width:=pos_2.Width)
        ComboBox_RV.Name = "cbx_RV"
        ws_Assistent.Cells(KV_RV, clm_OO_Name).Value = ws_Assistent.Cells(KV_RV, clm_OO_Name).Value & ";" & ComboBox_RV.Name
        With ComboBox_RV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 284.25
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_RV).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_RV).Value
                Next i
            Else
                .ListWidth = 274.5
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_RV).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_RV).Value
                Next i
            End If
            If Not ws_Assistent.Cells(KV_RV, clm_Wert).Value = "" Then
                .Value = Split(ws_Assistent.Cells(KV_RV, clm_Wert).Value, ";")(1)
            End If
        End With
    End With
End Sub

Private Sub ComboBoxen_AV_PV_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    Dim pos_11 As String
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    Dim pos_21 As String
    Dim pos_22 As Range
    Dim pos_23 As Range
    Dim pos_2 As Range
    
    str = ws_Assistent.Cells(AV_PV, clm_Position).Value
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(AV_PV, clm_Range).Value
    pos_11 = Split(str, ";")(0)
    pos_21 = Split(str, ";")(1)
    Set pos_12 = Fragebogen.Range(pos_11)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    Set pos_22 = Fragebogen.Range(pos_21)
    Set pos_23 = Fragebogen.Cells(pos_22.Row + 2, pos_22.Column + 8)
    Set pos_2 = Fragebogen.Range(pos_22, pos_23)
    
    With Fragebogen
        Set ComboBox_AV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_AV.Name = "cbx_AV"
        ws_Assistent.Cells(AV_PV, clm_OO_Name).Value = ComboBox_AV.Name
        With ComboBox_AV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 187.5
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_AV).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_AV).Value
                Next i
            Else
                .ListWidth = 310.5
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_AV).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_AV).Value
                Next i
            End If
            If Not ws_Assistent.Cells(AV_PV, clm_Wert).Value = "" Then
                .Value = Split(ws_Assistent.Cells(AV_PV, clm_Wert).Value, ";")(0)
            End If
        End With

        Set ComboBox_PV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_2.Left, Top:=pos_2.Top, height:=pos_2.height, Width:=pos_2.Width)
        ComboBox_PV.Name = "cbx_PV"
        ws_Assistent.Cells(AV_PV, clm_OO_Name).Value = ws_Assistent.Cells(AV_PV, clm_OO_Name).Value & ";" & ComboBox_PV.Name
        With ComboBox_PV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                .ListWidth = 273
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_PV).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_PV).Value
                Next i
            Else
                .ListWidth = 387
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_PV).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_PV).Value
                Next i
            End If
            If Not ws_Assistent.Cells(AV_PV, clm_Wert).Value = "" Then
                .Value = Split(ws_Assistent.Cells(AV_PV, clm_Wert).Value, ";")(1)
            End If
        End With
    End With
End Sub

Private Sub ComboBox_Krankenversicherung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    str = ws_Assistent.Cells(Krankenversicherung, clm_Position).Value
    pos_lft = Split(str, ";")(0)
    pos_top = Split(str, ";")(1)
    
    str = ws_Assistent.Cells(Krankenversicherung, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_Krankenversicherung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_Krankenversicherung.Name = "cbx_Krankenversicherung"
        ws_Assistent.Cells(Krankenversicherung, clm_OO_Name).Value = ComboBox_Krankenversicherung.Name
        With ComboBox_Krankenversicherung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Krankenversicherung).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Krankenversicherung).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Krankenversicherung).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Krankenversicherung).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Krankenversicherung, clm_Wert).Value
        End With
    End With
End Sub

Public Sub CheckBox_RV_Option_erzeugen(ws As Worksheet)
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    Dim korrektur As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range

    str = ws_Assistent.Cells(RV_Option, clm_Position).Value
    pos_lft = ComboBox_Left_Spalte_2
    pos_top = Split(str, ";")(1)
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        pos_top = pos_top - 25.5
    Else
        pos_top = pos_top - 9.75
    End If
    
    str = ws_Assistent.Cells(RV_Option, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        korrektur = 10 '-25.5
    Else
        korrektur = -9.75
    End If

    With ws
        Set CheckBox_RV_Option = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top + korrektur, height:=27, Width:=317.25)
        CheckBox_RV_Option.Name = "cbx_RV_Option"
        With CheckBox_RV_Option.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "Versicherungsfreiheit in der Rentenversicherung /" & vbCrLf & "Insurance exemption in the statutory pension insurance"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "Insurance exemption in the statutory pension insurance"
            Else
                .Caption = "Versicherungsfreiheit in der Rentenversicherung"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
            If Not ws_Assistent.Cells(RV_Option, clm_Wert).Value = "" Then
                If ws_Assistent.Cells(RV_Option, clm_Wert).Value = "X" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
    End With
End Sub

Private Sub ComboBoxen_weitere_Beschaeftigungen_erzeugen()
    Dim i As Integer
    Dim pos_top As Double
    Dim str As String
    Dim pos_11 As String
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range
    
    pos_top = ws_Assistent.Cells(weitere_Beschaeftigungen, clm_Position).Value
    
    str = ws_Assistent.Cells(weitere_Beschaeftigungen, clm_Range).Value
    pos_11 = Split(str, ";")(3)
    Set pos_12 = Fragebogen.Range(pos_11)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)
    
    With Fragebogen
        Set ComboBox_weitere_Beschaeftigungen = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
        ComboBox_weitere_Beschaeftigungen.Name = "cbx_weitere_Beschaeftigungen"
        ws_Assistent.Cells(weitere_Beschaeftigungen, clm_OO_Name).Value = ComboBox_weitere_Beschaeftigungen.Name
        With ComboBox_weitere_Beschaeftigungen.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            .ListWidth = 192
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_weitere_Beschaeftigungen).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_weitere_Beschaeftigungen).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(weitere_Beschaeftigungen, clm_Wert_2).Value
        End With
    End With

    If Not ws_Assistent.Cells(weitere_Beschaeftigungen_2, clm_Bezeichnung).Value = "" Then
        pos_top = ws_Assistent.Cells(weitere_Beschaeftigungen_2, clm_Position).Value
        str = ws_Assistent.Cells(weitere_Beschaeftigungen_2, clm_Range).Value
        pos_11 = Split(str, ";")(3)
        Set pos_12 = Fragebogen.Range(pos_11)
        Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
        Set pos_1 = Fragebogen.Range(pos_12, pos_13)
        With Fragebogen
            Set ComboBox_weitere_Beschaeftigungen_2 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
            ComboBox_weitere_Beschaeftigungen_2.Name = "cbx_weitere_Beschaeftigungen_2"
            ws_Assistent.Cells(weitere_Beschaeftigungen_2, clm_OO_Name).Value = ComboBox_weitere_Beschaeftigungen_2.Name
            With ComboBox_weitere_Beschaeftigungen_2.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = True
                End With
                .ListWidth = 192
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    For i = 1 To ws_Listen.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                Else
                    For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen_englisch.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                End If
                .Value = ws_Assistent.Cells(weitere_Beschaeftigungen_2, clm_Wert_2).Value
            End With
        End With
    End If
    
    If Not ws_Assistent.Cells(weitere_Beschaeftigungen_3, clm_Bezeichnung).Value = "" Then
        pos_top = ws_Assistent.Cells(weitere_Beschaeftigungen_3, clm_Position).Value
        str = ws_Assistent.Cells(weitere_Beschaeftigungen_3, clm_Range).Value
        pos_11 = Split(str, ";")(3)
        Set pos_12 = Fragebogen.Range(pos_11)
        Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
        Set pos_1 = Fragebogen.Range(pos_12, pos_13)
        With Fragebogen
            Set ComboBox_weitere_Beschaeftigungen_3 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
            ComboBox_weitere_Beschaeftigungen_3.Name = "cbx_weitere_Beschaeftigungen_3"
            ws_Assistent.Cells(weitere_Beschaeftigungen_3, clm_OO_Name).Value = ComboBox_weitere_Beschaeftigungen_3.Name
            With ComboBox_weitere_Beschaeftigungen_3.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = True
                End With
                .ListWidth = 192
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    For i = 1 To ws_Listen.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                Else
                    For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen_englisch.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                End If
                .Value = ws_Assistent.Cells(weitere_Beschaeftigungen_3, clm_Wert_2).Value
            End With
        End With
    End If
    
    If Not ws_Assistent.Cells(weitere_Beschaeftigungen_4, clm_Bezeichnung).Value = "" Then
        pos_top = ws_Assistent.Cells(weitere_Beschaeftigungen_4, clm_Position).Value
        str = ws_Assistent.Cells(weitere_Beschaeftigungen_4, clm_Range).Value
        pos_11 = Split(str, ";")(3)
        Set pos_12 = Fragebogen.Range(pos_11)
        Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
        Set pos_1 = Fragebogen.Range(pos_12, pos_13)
        With Fragebogen
            Set ComboBox_weitere_Beschaeftigungen_4 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
            ComboBox_weitere_Beschaeftigungen_4.Name = "cbx_weitere_Beschaeftigungen_4"
            ws_Assistent.Cells(weitere_Beschaeftigungen_4, clm_OO_Name).Value = ComboBox_weitere_Beschaeftigungen_4.Name
            With ComboBox_weitere_Beschaeftigungen_4.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = True
                End With
                .ListWidth = 192
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    For i = 1 To ws_Listen.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                Else
                    For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen_englisch.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                End If
                .Value = ws_Assistent.Cells(weitere_Beschaeftigungen_4, clm_Wert_2).Value
            End With
        End With
    End If
    
    If Not ws_Assistent.Cells(weitere_Beschaeftigungen_5, clm_Bezeichnung).Value = "" Then
        pos_top = ws_Assistent.Cells(weitere_Beschaeftigungen_5, clm_Position).Value
        str = ws_Assistent.Cells(weitere_Beschaeftigungen_5, clm_Range).Value
        pos_11 = Split(str, ";")(3)
        Set pos_12 = Fragebogen.Range(pos_11)
        Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 8)
        Set pos_1 = Fragebogen.Range(pos_12, pos_13)
        With Fragebogen
            Set ComboBox_weitere_Beschaeftigungen_5 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=pos_1.Left, Top:=pos_1.Top, height:=pos_1.height, Width:=pos_1.Width)
            ComboBox_weitere_Beschaeftigungen_5.Name = "cbx_weitere_Beschaeftigungen_5"
            ws_Assistent.Cells(weitere_Beschaeftigungen_5, clm_OO_Name).Value = ComboBox_weitere_Beschaeftigungen_5.Name
            With ComboBox_weitere_Beschaeftigungen_5.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = True
                End With
                .ListWidth = 192
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                    For i = 1 To ws_Listen.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                Else
                    For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                        .AddItem ws_Listen_englisch.Cells(i, Lst_weitere_Beschaeftigungen).Value
                    Next i
                End If
                .Value = ws_Assistent.Cells(weitere_Beschaeftigungen_5, clm_Wert_2).Value
            End With
        End With
    End If
End Sub

Private Sub ComboBox_Bea_erzeugen() 'nicht geaendert da aktuell nicht genutzt
    Dim i As Integer
    Dim pos_top As Double
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        pos_top = ws_Assistent.Cells(Bea, clm_Position).Value - 25.5
    Else
        pos_top = ws_Assistent.Cells(Bea, clm_Position).Value
    End If

    With Fragebogen
        Set ComboBox_Bea = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=515.25, Top:=pos_top, height:=ComboBox_Height, Width:=ComboBox_Small_Width)
        ComboBox_Bea.Name = "cbx_Bea"
        ws_Assistent.Cells(Bea, clm_OO_Name).Value = ComboBox_Bea.Name
        With ComboBox_Bea.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
            End With
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch" Then
                For i = 1 To ws_Listen.Cells(Rows.count, Lst_Bea).End(xlUp).Row
                    .AddItem ws_Listen.Cells(i, Lst_Bea).Value
                Next i
            Else
                For i = 1 To ws_Listen_englisch.Cells(Rows.count, Lst_Bea).End(xlUp).Row
                    .AddItem ws_Listen_englisch.Cells(i, Lst_Bea).Value
                Next i
            End If
            .Value = ws_Assistent.Cells(Bea, clm_Wert).Value
        End With
    End With
End Sub

'Suchbegriff restlicher Aenderungen ist: Bea_nur_Druck
Public Sub CheckBoxen_Angaben_zu_Bea_nur_Druck()

    Dim pos_top, height, str As Double
    Dim pos1 As Range
    Dim posleft1, postop1 As Double
    
    str = ws_Verwaltung.Cells(Blk_BEA, 2).Value
    Set pos1 = Fragebogen.Range("AN" & VBA.CDbl(str))
    posleft1 = pos1.Left + 10
    postop1 = pos1.Top + 30.75
    
    'not used anymore{
    str = ws_Verwaltung.Cells(Blk_BEA, 3).Value
    pos_top = str
    '}
    
    pos_top = postop1

    With Worksheets("Druckansicht")
        Set CheckBox_Bea_Yes = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", Left:=posleft1, Top:=pos_top, height:=15, Width:=75)
        CheckBox_Bea_Yes.Name = "cbx_Bea_Yes"
        With CheckBox_Bea_Yes.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "Ja/Yes"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "Yes"
            Else
                .Caption = "Ja"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With

        Set CheckBox_Bea_No = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", Left:=posleft1 + 75, Top:=pos_top, height:=15, Width:=75)
        CheckBox_Bea_No.Name = "cbx_Bea_No"
        With CheckBox_Bea_No.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "Nein/No"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "No"
            Else
                .Caption = "Nein"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
    End With
End Sub


Public Sub CheckBoxen_Angaben_zu_den_Arbeitspapieren_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    Dim height As Double
    Dim pos1 As Range
    Dim posleft1, postop1 As Double
    
    str = ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 2).Value
    Set pos1 = Fragebogen.Range("T" & VBA.CDbl(str))
    posleft1 = pos1.Left + 14.25
    
    'not used anymore{
    str = ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 3).Value
    pos_top = str
    '}
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        Abstand_Arbeitspapiere_CheckBoxen = 30
        postop1 = pos1.Top - 50.25
        height = 27.75
    Else
        Abstand_Arbeitspapiere_CheckBoxen = 17.25
        postop1 = pos1.Top - 74.25
        height = 15
    End If
    pos_top = postop1

    With Worksheets("Druckansicht")
        Set CheckBox_Arbeitsvertrag = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Arbeitsvertrag.Name = "cbx_Arbeitsvertrag"
        With CheckBox_Arbeitsvertrag.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Lohnsteuerkarte = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Arbeitsvertrag.Name = "cbx_Lohnsteuerkarte"
        With CheckBox_Lohnsteuerkarte.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_SV_Ausweis = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_SV_Ausweis.Name = "cbx_SV_Ausweis"
        With CheckBox_SV_Ausweis.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Mitgliedsbescheinigung_KK = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Mitgliedsbescheinigung_KK.Name = "cbx_Mitgliedsbescheinigung_KK"
        With CheckBox_Mitgliedsbescheinigung_KK.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        
        Set CheckBox_Bescheinigung_pr_KV = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Bescheinigung_pr_KV.Name = "cbx_Bescheinigung_pr_KV"
        With CheckBox_Bescheinigung_pr_KV.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = postop1

        Set CheckBox_VWL_Vertrag = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_VWL_Vertrag.Name = "cbx_VWL_Vertrag"
        With CheckBox_VWL_Vertrag.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Nachweis_Elterneigenschaft = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Nachweis_Elterneigenschaft.Name = "cbx_Nachweis_Elterneigenschaft"
        With CheckBox_Nachweis_Elterneigenschaft.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Vertrag_Altersversorgung = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Vertrag_Altersversorgung.Name = "cbx_Vertrag_Altersversorgung"
        With CheckBox_Vertrag_Altersversorgung.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Schwerbehindertenausweis = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Schwerbehindertenausweis.Name = "cbx_Schwerbehindertenausweis"
        With CheckBox_Schwerbehindertenausweis.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Unterlagen_Sozialkasse_Bau = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Unterlagen_Sozialkasse_Bau.Name = "cbx_Unterlagen_Sozialkasse"
        With CheckBox_Unterlagen_Sozialkasse_Bau.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
    End With
End Sub

Public Sub CheckBoxen_Angaben_zu_den_Arbeitspapieren_Minijob_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    Dim height As Double
    Dim pos1 As Range
    Dim posleft1, postop1 As Double
    
    str = ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 2).Value
    Set pos1 = Fragebogen.Range("T" & VBA.CDbl(str))
    posleft1 = pos1.Left + 14.25
    
    'not used anymore{
    str = ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 3).Value
    pos_top = str
    '}
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        Abstand_Arbeitspapiere_CheckBoxen = 30
        postop1 = pos1.Top - 50.25
        height = 27.75
    Else
        Abstand_Arbeitspapiere_CheckBoxen = 17.25
        postop1 = pos1.Top - 74.25
        height = 15
    End If
    pos_top = postop1
    
    With Worksheets("Druckansicht")
        Set CheckBox_Arbeitsvertrag_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Arbeitsvertrag_MJ.Name = "cbx_Arbeitsvertrag_MJ"
        With CheckBox_Arbeitsvertrag_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + 42.75
        Else
            pos_top = pos_top + 22.5
        End If
        
        Set CheckBox_Lohnsteuerkarte_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Lohnsteuerkarte_MJ.Name = "cbx_Lohnsteuerkarte_MJ"
        With CheckBox_Lohnsteuerkarte_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + 42.75
        Else
            pos_top = pos_top + 24.75
        End If
        
        Set CheckBox_SV_Ausweis_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_SV_Ausweis_MJ.Name = "cbx_SV_Ausweis_MJ"
        With CheckBox_SV_Ausweis_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        Else
            pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        End If
        
        Set CheckBox_Befreiung_RV_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Befreiung_RV_MJ.Name = "cbx_Befreiung_RV_MJ"
        With CheckBox_Befreiung_RV_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        Else
            pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        End If
        
        Set CheckBox_Krankenversicherung_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Krankenversicherung_MJ.Name = "cbx_Krankenversicherung_MJ"
        With CheckBox_Krankenversicherung_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = postop1
        
        Set CheckBox_VWL_Vertrag_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_VWL_Vertrag_MJ.Name = "cbx_VWL_Vertrag_MJ"
        With CheckBox_VWL_Vertrag_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + 42.75
        Else
            pos_top = pos_top + 22.5
        End If
        
        Set CheckBox_Studienbescheinigung_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Studienbescheinigung_MJ.Name = "cbx_Studienbescheinigung_MJ"
        With CheckBox_Studienbescheinigung_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + 42.75
        Else
            pos_top = pos_top + 24.75
        End If
        
        Set CheckBox_Schwerbehindertenausweis_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Schwerbehindertenausweis_MJ.Name = "cbx_Schwerbehindertenausweis_MJ"
        With CheckBox_Schwerbehindertenausweis_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        Else
            pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen
        End If

        Set CheckBox_Unterlagen_Sozialkasse_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Unterlagen_Sozialkasse_MJ.Name = "cbx_Unterlagen_Sozialkasse_MJ"
        With CheckBox_Unterlagen_Sozialkasse_MJ.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
    End With
End Sub


Public Sub CheckBoxen_Angaben_zu_den_Arbeitspapieren_Auszubildende_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    Dim height As Double
    Dim pos1 As Range
    Dim posleft1, postop1 As Double
    
    str = ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 2).Value
    Set pos1 = Fragebogen.Range("T" & VBA.CDbl(str))
    posleft1 = pos1.Left + 14.25
    
    'not used anymore{
    str = ws_Verwaltung.Cells(Angaben_zu_den_Arbeitspapieren, 3).Value
    pos_top = str
    '}
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        Abstand_Arbeitspapiere_CheckBoxen = 30
        postop1 = pos1.Top - 50.25
        height = 27.75
    Else
        Abstand_Arbeitspapiere_CheckBoxen = 17.25
        postop1 = pos1.Top - 74.25
        height = 15
    End If
    pos_top = postop1

    With Worksheets("Druckansicht")
        Set CheckBox_Arbeitsvertrag = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Arbeitsvertrag.Name = "cbx_Arbeitsvertrag"
        With CheckBox_Arbeitsvertrag.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Lohnsteuerkarte = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Arbeitsvertrag.Name = "cbx_Lohnsteuerkarte"
        With CheckBox_Lohnsteuerkarte.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_SV_Ausweis = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_SV_Ausweis.Name = "cbx_SV_Ausweis"
        With CheckBox_SV_Ausweis.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Mitgliedsbescheinigung_KK = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Mitgliedsbescheinigung_KK.Name = "cbx_Mitgliedsbescheinigung_KK"
        With CheckBox_Mitgliedsbescheinigung_KK.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_VWL_Vertrag = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_VWL_Vertrag.Name = "cbx_VWL_Vertrag"
        With CheckBox_VWL_Vertrag.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = postop1

        Set CheckBox_Nachweis_Elterneigenschaft = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Nachweis_Elterneigenschaft.Name = "cbx_Nachweis_Elterneigenschaft"
        With CheckBox_Nachweis_Elterneigenschaft.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Vertrag_Altersversorgung = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Vertrag_Altersversorgung.Name = "cbx_Vertrag_Altersversorgung"
        With CheckBox_Vertrag_Altersversorgung.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Schwerbehindertenausweis = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Schwerbehindertenausweis.Name = "cbx_Schwerbehindertenausweis"
        With CheckBox_Schwerbehindertenausweis.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + Abstand_Arbeitspapiere_CheckBoxen

        Set CheckBox_Unterlagen_Sozialkasse_Bau = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=posleft1 + 333, Top:=pos_top, height:=height, Width:=91.5)
        CheckBox_Unterlagen_Sozialkasse_Bau.Name = "cbx_Unterlagen_Sozialkasse"
        With CheckBox_Unterlagen_Sozialkasse_Bau.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "liegt vor /" & vbCrLf & "at hand"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "at hand"
            Else
                .Caption = "liegt vor"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
    End With
End Sub

Public Sub CheckBox_weitere_Beschaeftigungen_Option_erzeugen(ws As Worksheet)
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    Dim pos_12 As Range
    Dim pos_13 As Range
    Dim pos_1 As Range

    str = ws_Assistent.Cells(EUR450_Option, clm_Position).Value
    pos_top = Split(str, ";")(0)
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        pos_top = pos_top - 25.5
    Else
        pos_top = pos_top - 9.75
    End If
    
    str = ws_Assistent.Cells(EUR450_Option, clm_Range).Value
    Set pos_12 = Fragebogen.Range(str)
    Set pos_13 = Fragebogen.Cells(pos_12.Row + 2, pos_12.Column + 20)
    Set pos_1 = Fragebogen.Range(pos_12, pos_13)

    With ws
        Set CheckBox_wB_Option_Ja = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_1.Left + 10, Top:=pos_1.Top - 10, height:=15, Width:=75)
        CheckBox_wB_Option_Ja.Name = "cbx_wB_Option_Ja"
        With CheckBox_wB_Option_Ja.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "Ja/Yes"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "Yes"
            Else
                .Caption = "Ja"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
            If Not ws_Assistent.Cells(EUR450_Option, clm_Wert_2).Value = "" Then
                If ws_Assistent.Cells(EUR450_Option, clm_Wert_2).Value = "J" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
        Set CheckBox_wB_Option_Nein = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_1.Left + 10 + 75, Top:=pos_1.Top - 10, height:=15, Width:=75)
        CheckBox_wB_Option_Nein.Name = "cbx_wB_Option_Nein"
        With CheckBox_wB_Option_Nein.Object
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Caption = "Nein/No"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Caption = "No"
            Else
                .Caption = "Nein"
            End If
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
            If Not ws_Assistent.Cells(EUR450_Option, clm_Wert_2).Value = "" Then
                If ws_Assistent.Cells(EUR450_Option, clm_Wert_2).Value = "N" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
    End With
End Sub

Attribute VB_Name = "PFB"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_Activate()
    Call Mdl_Hilfsfunktionen.Ansichtsoptionen
    
    Application.OnKey "^p", "Druckaufbereitung"             'Umleitung von Strg + P zu eigener Druck-Funktion
    Application.OnKey "^v", "Einfg_Aktion"                  'Umleitung von Strg + V zu eigener Einfg-Funktion
    Application.OnKey "+{Insert}", "Einfg_Aktion"           'Umleitung von Einfg zu eigener Einfg-Funktion
    Application.OnKey "{TAB}", "'Tab_Aktion 1'"             'Umleitung von Tab zu eigener Funktion
    Application.OnKey "+{TAB}", "'Tab_Aktion -1'"           'Umleitung von Shift-Tab zu eigener Funktion
    Application.OnKey "^s", "cb_Speichern_Color_Change"     'Umleitung von Strg + S zum Speichern-Button highlighten
    Application.OnKey "{F12}", "cb_Speichern_Color_Change"  'Umleitung von F12 zum Speichern-Button highlighten
    Application.OnKey "%{F2}", "cb_Speichern_Color_Change"  'Umleitung von Alt+F2 zum Speichern-Button highlighten
    Application.OnKey "^{F2}", "Druckaufbereitung"          'Umleitung von Srg+F2 zu eigener Druck-Funktion
    Application.OnKey "+{F3}", ""                           'Abschalten von Shift+F3
    Application.OnKey "%{F8}", ""                           'Abschalten von Alt+F8
    Application.OnKey "+{F11}", ""                          'Abschalten von Shift+F11
End Sub

Function WorkbookOpen(wbook As String)
    'Pr|fffd|ft ob ein Workbook ge|fffd|ffnet ist
    Dim wb As Workbook
    On Error Resume Next
    Set wb = Workbooks(wbook)
    If wb Is Nothing Then           'Das Workbook ist nicht offen
        WorkbookOpen = False
        On Error GoTo 0
    Else
        WorkbookOpen = True         'Das Worbook ist ge|fffd|ffnet
        On Error GoTo 0
    End If
End Function

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    'Deaktiviert die Abfrage ob das Dokument gespeichert werden soll wenn Etwas ge|fffd|ndert wurde.
    If Not WorkbookOpen("Assistent.xls") Then
        ThisWorkbook.Saved = True
    End If
End Sub

Private Sub Workbook_Deactivate()
    'Wenn das Workbook nicht mehr aktiv ist werden die Tastenumleitungen wieder zur|fffd|ckgesetzt
    Call Mdl_Hilfsfunktionen.Ansichtsoptionen_zuruecksetzen
    
    Application.OnKey "^p"
    Application.OnKey "^v"
    Application.OnKey "+{Insert}"
    Application.OnKey "{TAB}"
    Application.OnKey "+{TAB}"
    Application.OnKey "^s"
    Application.OnKey "{F12}"
    Application.OnKey "%{F2}"
    Application.OnKey "^{F2}"
    Application.OnKey "+{F3}"
    Application.OnKey "%{F8}"
    Application.OnKey "+{F11}"
End Sub

Private Sub Workbook_Open()

    'Beginn Geschwindigkeitsoptimierung ****************
    Dim updateMode As Boolean
    updateMode = Application.ScreenUpdating
    Application.ScreenUpdating = False
    '***************************************************
    
    'Pr|fffd|fen ob die Vorlage oder ein erzeugter Fragebogen ge|fffd|ffnet wurde
    If Not ThisWorkbook.Name = "Vorlage.xls" Then
        If ws_Verwaltung.Cells(Initialisierung_durchgefuehrt, 2).Value = "X" Then
            If ws_Verwaltung.Cells(Fragebogen_erzeugt, 2).Value = "" Then
                Call mdl_Main.Fragebogen_erzeugen
            Else
                On Error GoTo Fehlerbehandlung
                Call Mdl_Steuerelemente.Steuerelemente_initialisieren
                Call Mdl_Steuerelemente.Steuerelemente_initialisieren
                Call mdl_Main.Gespeicherte_Werte_eintragen
                On Error GoTo 0
            End If
        End If
    End If

    'Ende Geschwindigkeitsoptimierung ******************
    Application.ScreenUpdating = updateMode
    '***************************************************
    Exit Sub
    
Fehlerbehandlung:
    MsgBox "Um korrekte Funktionsweise zu gew|fffd|hrleisten, werden aktive Makros und ActiveX-Steuerelemente ben|fffd|tigt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
           " Nehmen Sie die notwendigen Einstellungen zur Verwendung von Markos vor und |fffd|ffnen Sie den Fragebogen erneut.", _
           vbCritical
    ThisWorkbook.Saved = True
    Exit Sub
End Sub
Attribute VB_Name = "mdl_Datenfelder"
Option Explicit
Public Const Standard_Abstand = 9                           'Abstand der in Zeilen z|fffd|hlt (unabh|fffd|ngig wie hoch die Zeilen sind)
Public Const Abstand_Abschnittsueberschrift = 3             'Abstand der in Zeilen z|fffd|hlt (unabh|fffd|ngig wie hoch die Zeilen sind)
Public Const Abstand_Abschnittsueberschrift_Zusatztext = 4  'Abstand der in Zeilen z|fffd|hlt (unabh|fffd|ngig wie hoch die Zeilen sind)
Public Const Abstand_Absatz = 9                             'Abstand der in Zeilen z|fffd|hlt (unabh|fffd|ngig wie hoch die Zeilen sind)
Public Position As Integer          'Die erste Freie Zeile am Ende des Fragebogens
Dim Spalte As Integer               'Der Fragebogen hat eine linke und rechte H|fffd|lfte welche respektive Spalte 1 und Spalte 2 sind
Dim Assistent_Anfang As Integer     'Definiert das erste Datenfeld eines Blockes wenn der Block ohne ausgelassene Datenfelder ist
Dim Assistent_Ende As Integer       'Definiert das letzte Datenfeld eines Blockes wenn der Block ohne ausgelassene Datenfelder ist

Public Sub Block_Allgemein()
    Dim i As Integer
    
    'Die Zeile mit der, der Allgemeine Block beginnt wird aus dem ws_Verwaltung ausgelesen
    If Not ws_Verwaltung.Cells(Blk_Allgemein, 1).Value = "" Then
        With ws_Assistent
            'Datenfelder Firma und Personalnummer werden angelegt
            .Cells(Firma, clm_Range).Value = Datenfeld_Firma
            Position = Position + 18
            .Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value = Datenfeld_Name_des_Mitarbeiters_Personalnummer
            'Die letzte Zeile wird aktualisiert
            Position = Position + Abstand_Absatz
        End With
    End If
End Sub

Public Sub Block_Persoenliche_Angaben()
    Dim i As Integer
    
    'Die Anfangszeile wird aus dem ws_Verwaltung ausgelesen
    If Not ws_Verwaltung.Cells(Blk_Persoenliche_Angaben, 1).Value = "" Then
        With ws_Assistent
            'Es wird festgelegt welche Datenfelder in den Block der Pers|fffd|hnlichen Angaben mit aufgenommen werden
            'Familienname, Bic und Barzahlung sind Zahlen die in Mdl_Enums definiert sind und im ws_Assistent in der respektiven Zeile eine Bezeichnung haben, die in Datenfeld gepr|fffd|ft wird
            Assistent_Anfang = Familienname
            If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
                Assistent_Ende = Barzahlung
            Else
                Assistent_Ende = BIC
            End If
            Spalte = 1
            
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen (abh|fffd|ngig von der Gew|fffd|lten Sprache)
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Persoenliche_Angaben, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Pers|fffd|nliche Angaben / Personal data")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Persoenliche_Angaben, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Personal data")
            Else
                ws_Verwaltung.Cells(Blk_Persoenliche_Angaben, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Pers|fffd|nliche Angaben")
            End If
            Position = Position + Abstand_Abschnittsueberschrift    'Die aktuelle Zeilenzahl wird um die |fffd|berschrift weiter gesetzt
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                'Es werden nur die Datenfelder eingef|fffd|gt bei denen die jeweilige Zeile in ws_Assistent einen Eintrag besitzt und die nicht Kontonummer oder Bakbezeichnung sind
                If Not .Cells(i, clm_Bezeichnung).Value = "" And Not i = Kontonummer_Bankleitzahl And Not i = Bankbezeichnung Then
                    'Es wird zwischen den unterschiedlichen Spracheinstellungen unterschieden
                    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, .Cells(i, clm_Bezeichnung_englisch).Value, _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung_englisch).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    Else
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    End If
                    'Falls kein Eingabefeld vorhanden sein soll, wird die Position f|fffd|r ein Steuerelement gespeichert (vermutlich eine Angabe in mm)
                    If .Cells(i, clm_ohne_Eingabefeld).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then          'Falls wir in die rechte Spalte ein neuer Datenfeld eingef|fffd|gt haben gehen wir zur linken zur|fffd|ck und r|fffd|cken ein paar Zeilen weiter
                        Spalte = 1
                        Position = Position + Standard_Abstand              'F|fffd|r ein normales Datenfeld wird Position um einen Standard_Abstand erh|fffd|ht
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox    'genauso wird auch die Steuerelement.Position erh|fffd|ht
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            'Wenn der Block alle Datenfelder besitzt wird passend Abstand gehalten
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Beschaeftigung()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_Beschaeftigung, 1).Value = "" Then
        With ws_Assistent
            Assistent_Anfang = Eintrittsdatum_Ersteintrittsdatum
            If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
                Assistent_Ende = Status_Beschaeftigung
            Else
                Assistent_Ende = Personengruppe
            End If
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Beschaeftigung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Besch|fffd|ftigung / Employment")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Beschaeftigung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Employment")
            Else
                ws_Verwaltung.Cells(Blk_Beschaeftigung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Besch|fffd|ftigung")
            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, .Cells(i, clm_Bezeichnung_englisch).Value, _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung_englisch).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    Else
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    End If
                    If .Cells(i, clm_ohne_Eingabefeld).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Befristung()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_Befristung, 1).Value = "" Then
        With ws_Assistent
            Assistent_Anfang = Art_der_Befristung
            Assistent_Ende = Abschluss_Ausbildungsvertrag_am
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Befristung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Befristung / Temporary employment")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Befristung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Temporary employment")
            Else
                ws_Verwaltung.Cells(Blk_Befristung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Befristung")
            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, .Cells(i, clm_Bezeichnung_englisch).Value, _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung_englisch).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    Else
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    End If
                    If .Cells(i, clm_ohne_Eingabefeld).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Steuer()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_Steuer, 1).Value = "" Then
        With ws_Assistent
            Assistent_Anfang = Finanzamtsnummer_Identifikationsnummer
            If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
                Assistent_Ende = Abwaelzung_an_Arbeitnehmer
            Else
                Assistent_Ende = Konfession
            End If
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Steuer, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Steuer / Taxes")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Steuer, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Taxes")
            Else
                ws_Verwaltung.Cells(Blk_Steuer, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Steuer")
            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, .Cells(i, clm_Bezeichnung_englisch).Value, _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung_englisch).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    Else
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    End If
                    If .Cells(i, clm_ohne_Eingabefeld).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Sozialversicherung()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_Sozialversicherung, 1).Value = "" Then
        With ws_Assistent
            If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
                Assistent_Anfang = Krankenversicherung
                Assistent_Ende = RV_Option
            Else
                Assistent_Anfang = Gesetzl_Krankenkasse
                Assistent_Ende = UV_Gefahrtarif
            End If
            Spalte = 1
            
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Sozialversicherung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Sozialversicherung / Social insurance")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Sozialversicherung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Social insurance")
            Else
                ws_Verwaltung.Cells(Blk_Sozialversicherung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Sozialversicherung")
            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, .Cells(i, clm_Bezeichnung_englisch).Value, _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung_englisch).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    Else
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    End If
                    If .Cells(i, clm_ohne_Eingabefeld).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Entlohnung()
    Dim i As Integer

    If Not ws_Verwaltung.Cells(Blk_Entlohnung, 1).Value = "" Then
        With ws_Assistent
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Entlohnung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Entlohnung / Remuneration")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Entlohnung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Remuneration")
            Else
                ws_Verwaltung.Cells(Blk_Entlohnung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Entlohnung")
            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Entlohnung To Entlohnung_5
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    .Cells(i, clm_Range).Value = Datenfeld_Entlohnung
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Ausbildungsverguetung()
    Dim i As Integer

    If Not ws_Verwaltung.Cells(Blk_Ausbildungsverguetung, 1).Value = "" Then
        With ws_Assistent
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Ausbildungsverguetung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Ausbildungsverg|fffd|tung / Apprenticeship payment")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Ausbildungsverguetung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Apprenticeship payment")
            Else
                ws_Verwaltung.Cells(Blk_Ausbildungsverguetung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Ausbildungsverg|fffd|tung")
            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Ausbildungsverguetung To Ausbildungsverguetung_3
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    .Cells(i, clm_Range).Value = Datenfeld_Ausbildungsverguetung(i - Ausbildungsverguetung + 1)
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_VWL()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_VWL, 1).Value = "" Then
        With ws_Assistent
            Assistent_Anfang = Empfaenger_VWL
            Assistent_Ende = BIC_VWL
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_VWL, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("VWL - nur notwendig, wenn Vertrag vorliegt /", "Capital-forming benefits (VWL) - only required if contract is at hand")
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_VWL, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Capital-forming benefits (VWL) - only required if contract is at hand")
            Else
                ws_Verwaltung.Cells(Blk_VWL, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("VWL - nur notwendig, wenn Vertrag vorliegt")
            End If
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            Else
                Position = Position + Abstand_Abschnittsueberschrift
            End If
        
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, clm_Bezeichnung).Value = "" And Not i = Kontonummer_Bankleitzahl_VWL And Not i = Bankbezeichnung_VWL Then
                    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, .Cells(i, clm_Bezeichnung_englisch).Value, _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung_englisch).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    Else
                        .Cells(i, clm_Range).Value = Datenfeld(.Cells(i, clm_Bezeichnung).Value, "", _
                                                     .Cells(i, clm_Arbeitgeberfeld).Value, .Cells(i, clm_ohne_Eingabefeld).Value)
                    End If
                    If .Cells(i, clm_ohne_Eingabefeld).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, clm_Position).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_Vorbeschaeftigungszeiten()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_Vorbeschaeftigungszeiten, 1).Value = "" Then
        With ws_Assistent
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_Vorbeschaeftigungszeiten, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Angaben zu steuerpflichtigen Vorbesch|fffd|ftigungszeiten im laufenden Kalenderjahr /", "Details of previous periods of taxable employment during current calendar year")
                Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_Vorbeschaeftigungszeiten, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Details of previous periods of taxable employment during current calendar year")
                Position = Position + Abstand_Abschnittsueberschrift
            Else
                ws_Verwaltung.Cells(Blk_Vorbeschaeftigungszeiten, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Angaben zu steuerpflichtigen Vorbesch|fffd|ftigungszeiten im laufenden Kalenderjahr")
                Position = Position + Abstand_Abschnittsueberschrift
            End If
            
            'Datenfelder anlegen
            For i = Vorbeschaeftigungszeiten To Vorbeschaeftigungszeiten_5
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    .Cells(i, clm_Range).Value = Datenfeld_Vorbesch|fffd|ftigungszeiten
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
    End If
End Sub

'|fffd|hnlich aufgebaut wie Block_Persoenliche_Angaben daher keine genauen Kommentare (Block kann mit Strg+F gefunden werden)
Public Sub Block_weitere_Beschaeftigungen()
    Dim i As Integer
    
    If Not ws_Verwaltung.Cells(Blk_weitere_Beschaeftigungen, 1).Value = "" Then
        With ws_Assistent
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                ws_Verwaltung.Cells(Blk_weitere_Beschaeftigungen, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Angaben zu weiteren Besch|fffd|ftigungen / Information on additional employment")
                Position = Position + Abstand_Abschnittsueberschrift
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                ws_Verwaltung.Cells(Blk_weitere_Beschaeftigungen, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Information on additional employment", _
                                                                                        "(for short-term employees, also on previous jobs from the year before)")
                Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            Else
                ws_Verwaltung.Cells(Blk_weitere_Beschaeftigungen, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Angaben zu weiteren Besch|fffd|ftigungen", _
                                                                                        "(bei kurzfristig Besch|fffd|ftigten auch Vorbesch|fffd|ftigungen aus dem Vorjahr)")
                Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            End If
            
            'Datenfelder anlegen
            For i = weitere_Beschaeftigungen To weitere_Beschaeftigungen_5
                If Not .Cells(i, clm_Bezeichnung).Value = "" Then
                    .Cells(i, clm_Range).Value = Datenfeld_weitere_Beschaeftigungen
                    .Cells(i, clm_Position).Value = Mdl_Steuerelemente.Position
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            If Not .Cells(EUR450_Option, clm_Bezeichnung).Value = "" And ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
                .Cells(EUR450_Option, clm_Range).Value = Datenfeld_weitere_Beschaeftigungen_Option
                .Cells(EUR450_Option, clm_Position).Value = Mdl_Steuerelemente.Position
                Position = Position + Standard_Abstand
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position - 9
                End If
            End If
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
    End If
End Sub

'Block Bea ist inaktiv, hei|fffd|t das nicht sichtbares ausgegeben wird aber die Abst|fffd|nde f|fffd|r die folgenden Bl|fffd|cke angepasst werden
Public Sub Block_Bea()
    Dim i As Integer

    If Not ws_Verwaltung.Cells(Blk_BEA, 1).Value = "" Then
        With ws_Assistent
            
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
'            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
'                ws_Verwaltung.Cells(Blk_BEA, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Bescheinigungen elektronisch annehmen (Bea) / Electronical acceptance of certificates (Bea)")
'            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
'                ws_Verwaltung.Cells(Blk_BEA, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Electronical acceptance of certificates (Bea)")
'            Else
'                ws_Verwaltung.Cells(Blk_BEA, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Bescheinigungen elektronisch annehmen (Bea)")
'            End If
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            .Cells(Bea, clm_Range).Value = Datenfeld_Bea 'Die Datenfelder wie auch Steuerelemente sind nur Verschiebungen der Positions Angabe
            .Cells(Bea, clm_Position).Value = Mdl_Steuerelemente.Position - 24
            Position = Position + Standard_Abstand
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - 17.25
        End With
        With ws_Verwaltung
            If Not .Cells(Angaben_zu_den_Arbeitspapieren, 1).Value = "" Then
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .Cells(Blk_BEA, 3).Value = Mdl_Steuerelemente.Position - 82
                    .Cells(Angaben_zu_den_Arbeitspapieren, 3).Value = Mdl_Steuerelemente.Position + 12
                Else
                    .Cells(Blk_BEA, 3).Value = Mdl_Steuerelemente.Position - 60
                    .Cells(Angaben_zu_den_Arbeitspapieren, 3).Value = Mdl_Steuerelemente.Position + 13.5
                End If
            End If
        End With
    End If
End Sub

'Ein Block (z.B. Pers|fffd|hnliche Angaben) besteht aus Datenfeldern welche im Allgemeinen |fffd|ber die Funktion Datenfeld erstellt werden
Private Function Datenfeld(Bezeichnung As String, Bezeichnung_Zusatz As String, Optional Arbeitgeberfeld As Boolean, _
                        Optional ohne_Eingabefeld As Boolean) As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim Pflichtfeld As Boolean
    
    'Hier wird auf spezielle Bezeichnungen gepr|fffd|ft, welche nicht nach dem Standdardmuster erzeugt werden
    If Bezeichnung = "Stra|fffd|e, Hausnr." Or Bezeichnung = "Street, House No." Then 'Die Bezeichnungen stehen in ws_Assistent in der Zeile mit dem dazugeh|fffd|rigen Enum
        Datenfeld = Datenfeld_Strasse_Hausnr() 'z.B. Strasse_Hausnr = 7 steht in Mdl_Enums dazu geh|fffd|rt in ws_Assistent Zeile 7 in der Stra|fffd|e, Hausnr. steht
        Exit Function   'Die Funktion wird verlassen da das Datenfeld mit seiner speziellen Funktion erstellt wurde
    ElseIf Bezeichnung = "PLZ, Ort" Or Bezeichnung = "Postcode, City" Then
        Datenfeld = Datenfeld_PLZ_Ort()
        Exit Function
    ElseIf Bezeichnung = "Geschlecht, Familienstand" Or Bezeichnung = "Gender, Marital status" Then
        Datenfeld = Datenfeld_Geschlecht_Familienstand()
        Exit Function
    ElseIf Bezeichnung = "Kontonummer Bankleitzahl" Or Bezeichnung = "Bank account number Sort code" Then
        Datenfeld = Datenfeld_Kontonummer_Bankleitzahl()
        Exit Function
    ElseIf Bezeichnung = "Eintrittsdatum Ersteintrittsdatum" Or Bezeichnung = "Date employment contract begins First day" Then
        Datenfeld = Datenfeld_Eintrittsdatum_Ersteintrittsdatum()
        Exit Function
    ElseIf Bezeichnung = "Probezeit" Or Bezeichnung = "Probation period" Then
        Datenfeld = Datenfeld_Probezeit()
        Exit Function
    ElseIf Bezeichnung = "W|fffd|chentliche Arbeitszeit Urlaubsanspruch" Or Bezeichnung = "Weekly working hours Holiday entitlement" Then
        Datenfeld = Datenfeld_Woechentliche_Arbeitszeit_Urlaubsanspruch()
        Exit Function
    ElseIf Bezeichnung = "W|fffd|chentliche Arbeitszeit" Or Bezeichnung = "Weekly working hours" Then
        Datenfeld = Datenfeld_Woechentliche_Arbeitszeit
        Exit Function
    ElseIf Bezeichnung = "Steuerklasse, Faktor" Or Bezeichnung = "Tax class, Factor" Then
        Datenfeld = Datenfeld_Steuerklasse_Faktor()
        Exit Function
    ElseIf Bezeichnung = "Finanzamtsnummer Identifikationsnummer" Or Bezeichnung = "Tax office No. Identification No." Then
        Datenfeld = Datenfeld_Finanzamtsnummer_Identifikationsnummer()
        Exit Function
    ElseIf Bezeichnung = "KV RV" Or Bezeichnung = "Health insureance Pension insurance" Then
        Datenfeld = Datenfeld_KV_RV()
        Exit Function
    ElseIf Bezeichnung = "AV PV" Or Bezeichnung = "Retirement insurance Provision insurance" Then
        Datenfeld = Datenfeld_AV_PV()
        Exit Function
    ElseIf Bezeichnung = "RV-Option" Or Bezeichnung = "Pension insurance option" Then
        Datenfeld = Datenfeld_RV_Option
        Exit Function
    ElseIf Bezeichnung = "Betrag, AG-Anteil" Or Bezeichnung = "Amount Employer share" Then
        Datenfeld = Datenfeld_Betrag_AG_Anteil()
        Exit Function
    End If
    
    'falls es keine spezielle Funnktion f|fffd|r das Datenfeld gibt wird als erstes festgestellt ob es sich um ein Pflichfeld f|fffd|r die Exportdatenerstellung handelt
    If Bezeichnung = "Familienname" Then
        Pflichtfeld = True
    ElseIf Bezeichnung = "Vorname" Then
        Pflichtfeld = True
    ElseIf Bezeichnung = "Geburtsdatum (TT.MM.JJJJ)" Then
        Pflichtfeld = True
    End If
    
    'um ein Datenfeld zu erstellen muss erst festgelegt werden ob es auf die linke oder rechte Blatth|fffd|lfte kommt
    If Spalte = 1 Then 'Die Variable Spalte ist global und muss nach dem erstellen eines Datenfeldes von 1 auf 2 oder von 2 auf 1 ge|fffd|ndert werden
        rng1 = "C" & Position & ":Y" & Position + 7
        rng2 = "D" & Position + 1 & ":X" & Position + 1
        rng3 = "D" & Position + 2 & ":X" & Position + 2
        rng4 = "D" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AW" & Position + 7
        rng2 = "AB" & Position + 1 & ":AV" & Position + 1
        rng3 = "AB" & Position + 2 & ":AV" & Position + 2
        rng4 = "AB" & Position + 4 & ":AV" & Position + 6
    End If

    'Wenn eine Bezeichnung existiert dann wird hier tats|fffd|chlich das Datenfeld erstellt
    If Not Bezeichnung = "[leer]" Then
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, Arbeitgeberfeld, Spalte)
        Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, Bezeichnung, rng3, Bezeichnung_Zusatz)
        Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng4, ohne_Eingabefeld, Pflichtfeld)
        'rng4 ist das Eingabefeld (da es ein Zellverbund ist hat es eine Range Abgabe, von der aber nur die erste H|fffd|lfte gespeichert wird, sprich die linke obere Ecke)
        Datenfeld = Split(rng4, ":")(0) 'Datenfeld gibt hier das Eingabefeld zur|fffd|ck an die jeweilige Blockfunktion die in ws_Assistent den Wert vermerkt
    Else
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        With Fragebogen.Range(rng1).Interior
            .ColorIndex = 2
            .Pattern = xlSolid
        End With

        Datenfeld = ""
    End If
End Function

'Die Datenfeld Funktion f|fffd|r das Feld Firma
Private Function Datenfeld_Firma() As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng_Firma As String
    Dim rng_Firma_2 As String
    Dim rng_Firma_3 As String
    
    rng1 = "C" & Position & ":Y" & Position + 7
    rng2 = "D" & Position + 1 & ":X" & Position + 1
    rng3 = "D" & Position + 2 & ":X" & Position + 2
    rng_Firma = ("D" & Position + 4 & ":X" & Position + 6)
    rng_Firma_2 = ("D" & Position + 8 & ":X" & Position + 10)
    rng_Firma_3 = ("D" & Position + 12 & ":X" & Position + 14)
    
    With Fragebogen
        .Rows(Position & ":" & Position).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(Position + 2 & ":" & Position + 2).RowHeight = 0
        End If
        .Rows(Position + 3 & ":" & Position + 3).RowHeight = 2
        .Rows(Position + 4 & ":" & Position + 4).RowHeight = 3
        .Rows(Position + 6 & ":" & Position + 6).RowHeight = 3
        .Rows(Position + 7 & ":" & Position + 7).RowHeight = 3
        .Rows(Position + 8 & ":" & Position + 8).RowHeight = 3
        .Rows(Position + 10 & ":" & Position + 10).RowHeight = 3
        .Rows(Position + 11 & ":" & Position + 11).RowHeight = 3
        .Rows(Position + 12 & ":" & Position + 12).RowHeight = 3
        .Rows(Position + 14 & ":" & Position + 14).RowHeight = 3
        .Rows(Position + 15 & ":" & Position + 15).RowHeight = 2
        .Rows(Position + 16 & ":" & Position + 17).RowHeight = 5.5
    End With

    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Firma", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Company name", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Firma", rng3, "Company name")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Firma)
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Firma_2)
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Firma_3)
    
    Datenfeld_Firma = VBA.Split(rng_Firma, ":")(0) & ";" & _
                      VBA.Split(rng_Firma_2, ":")(0) & ";" & _
                      VBA.Split(rng_Firma_3, ":")(0)
End Function

Private Function Datenfeld_Name_des_Mitarbeiters_Personalnummer() As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_MA_Name As String
    Dim rng_Personalnummer As String
    
    rng1 = "C" & Position & ":AK" & Position + 7
    rng2 = "D" & Position + 1 & ":AJ" & Position + 1
    rng3 = "D" & Position + 2 & ":AJ" & Position + 2
    rng4 = "AM" & Position & ":AW" & Position + 7
    rng5 = "AN" & Position + 1 & ":AV" & Position + 1
    rng6 = "AN" & Position + 2 & ":AV" & Position + 2
    rng_MA_Name = "D" & Position + 4 & ":AJ" & Position + 6
    rng_Personalnummer = "AN" & Position + 4 & ":AV" & Position + 6
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Name des Mitarbeiters
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Name des Mitarbeiters", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Employee name", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Name des Mitarbeiters", rng3, "Employee name")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_MA_Name, True)

    'Personalnummer
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Personalnummer", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Personnel number", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Personalnummer", rng6, "Personnel number")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Personalnummer, False, True)
    
    Datenfeld_Name_des_Mitarbeiters_Personalnummer = VBA.Split(rng_MA_Name, ":")(0) & ";" & _
                                                     VBA.Split(rng_Personalnummer, ":")(0)
End Function

Private Function Datenfeld_Strasse_Hausnr()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng_Str As String
    Dim rng_HNr As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":Y" & Position + 7
        rng2 = "D" & Position + 1 & ":T" & Position + 1
        rng3 = "D" & Position + 2 & ":T" & Position + 2
        rng4 = "V" & Position + 1 & ":X" & Position + 1
        rng5 = "V" & Position + 2 & ":X" & Position + 2
        rng_Str = "D" & Position + 4 & ":T" & Position + 6
        rng_HNr = "V" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AW" & Position + 7
        rng2 = "AB" & Position + 1 & ":AR" & Position + 1
        rng3 = "AB" & Position + 2 & ":AR" & Position + 2
        rng4 = "AT" & Position + 1 & ":AV" & Position + 1
        rng5 = "AT" & Position + 2 & ":AV" & Position + 2
        rng_Str = "AB" & Position + 4 & ":AR" & Position + 6
        rng_HNr = "AT" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    
    'Stra|fffd|e
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Stra|fffd|e", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Street", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Stra|fffd|e", rng3, "Street")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Str, False, True)
    
    'Hausnr.
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Hausnr.", rng5)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "House No.", rng5)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Hausnr.", rng5, "House No.")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_HNr, False, True)
    
    Datenfeld_Strasse_Hausnr = VBA.Split(rng_Str, ":")(0) & ";" & _
                               VBA.Split(rng_HNr, ":")(0)
End Function

Private Function Datenfeld_PLZ_Ort()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng_PLZ As String
    Dim rng_Ort As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":Y" & Position + 7
        rng2 = "D" & Position + 1 & ":F" & Position + 1
        rng3 = "D" & Position + 2 & ":F" & Position + 2
        rng4 = "H" & Position + 1 & ":X" & Position + 1
        rng5 = "H" & Position + 2 & ":X" & Position + 2
        rng_PLZ = "D" & Position + 4 & ":F" & Position + 6
        rng_Ort = "H" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AW" & Position + 7
        rng2 = "AB" & Position + 1 & ":AD" & Position + 1
        rng3 = "AB" & Position + 2 & ":AD" & Position + 2
        rng4 = "AF" & Position + 1 & ":AV" & Position + 1
        rng5 = "AF" & Position + 2 & ":AV" & Position + 2
        rng_PLZ = "AB" & Position + 4 & ":AD" & Position + 6
        rng_Ort = "AF" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    
    'PLZ
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "PLZ", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Postcode", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "PLZ", rng3, "Postcode")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_PLZ, False, True)
    
    'Ort
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Ort", rng5)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "City", rng5)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Ort", rng5, "City")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Ort, False, True)
    
    Datenfeld_PLZ_Ort = VBA.Split(rng_PLZ, ":")(0) & ";" & _
                        VBA.Split(rng_Ort, ":")(0)
End Function

Private Function Datenfeld_Geschlecht_Familienstand()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Geschlecht As String
    Dim rng_Familienstand As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Geschlecht = "D" & Position + 4 & ":L" & Position + 6
        rng_Familienstand = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Geschlecht = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Familienstand = "AN" & Position + 4 & ":AV" & Position + 6
    End If

    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Geschlecht
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Geschlecht", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Gender", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Geschlecht", rng3, "Gender")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Geschlecht, True)
    
    'Familienstand
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, False, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Familienstand", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Marital status", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Familienstand", rng6, "Marital status")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Familienstand, True)
    
    Datenfeld_Geschlecht_Familienstand = VBA.Split(rng_Geschlecht, ":")(0) & ";" & _
                                         VBA.Split(rng_Familienstand, ":")(0)
End Function

Private Function Datenfeld_Kontonummer_Bankleitzahl()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Kontonummer As String
    Dim rng_Bankleitzahl As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Kontonummer = "D" & Position + 4 & ":L" & Position + 6
        rng_Bankleitzahl = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Kontonummer = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Bankleitzahl = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Kontonummer
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Kontonummer", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Bank account number", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Kontonummer", rng3, "Bank account number")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Kontonummer)

    'Bankleitzahl
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, False, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Bankleitzahl", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Sort code", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Bankleitzahl", rng6, "Sort code")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Bankleitzahl)
    
    Datenfeld_Kontonummer_Bankleitzahl = VBA.Split(rng_Kontonummer, ":")(0) & ";" & _
                                         VBA.Split(rng_Bankleitzahl, ":")(0)
End Function

Private Function Datenfeld_Eintrittsdatum_Ersteintrittsdatum()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Eintrittsdatum As String
    Dim rng_Ersteintrittsdatum As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Eintrittsdatum = "D" & Position + 4 & ":L" & Position + 6
        rng_Ersteintrittsdatum = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Eintrittsdatum = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Ersteintrittsdatum = "AN" & Position + 4 & ":AV" & Position + 6
    End If

    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Eintrittsdatum
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Eintrittsdatum (TT.MM.JJJJ)", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Entry date (DD.MM.YYYY)", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Eintrittsdatum (TT.MM.JJJJ)", rng3, "Entry date (DD.MM.YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Eintrittsdatum, False, True)
    
    'Ersteintrittsdatum
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Ersteintrittsdatum (TT.MM.JJJJ)", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "First day (DD.MM.YYYY)", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Ersteintrittsdatum (TT.MM.JJJJ)", rng6, "First day (DD.MM.YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Ersteintrittsdatum)
    
    Datenfeld_Eintrittsdatum_Ersteintrittsdatum = VBA.Split(rng_Eintrittsdatum, ":")(0) & ";" & _
                                                  VBA.Split(rng_Ersteintrittsdatum, ":")(0)
End Function

Private Function Datenfeld_Probezeit()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Probezeit As String
    Dim rng_Dauer_der_Probezeit As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Probezeit = "D" & Position + 4 & ":L" & Position + 6
        rng_Dauer_der_Probezeit = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Probezeit = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Dauer_der_Probezeit = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Probezeit
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, True, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Probezeit", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Probation period", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Probezeit", rng3, "Probation period")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Probezeit, True)
    
    'Dauer der Probezeit
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Dauer der Probezeit", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Duration of probation period", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Dauer der Probezeit", rng6, "Duration of probation period")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Dauer_der_Probezeit)
    
    Datenfeld_Probezeit = VBA.Split(rng_Probezeit, ":")(0) & ";" & _
                          VBA.Split(rng_Dauer_der_Probezeit, ":")(0)
End Function

Private Function Datenfeld_Woechentliche_Arbeitszeit_Urlaubsanspruch()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Woechentliche_Arbeitszeit As String
    Dim rng_Urlaubsanspruch As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Woechentliche_Arbeitszeit = "D" & Position + 4 & ":L" & Position + 6
        rng_Urlaubsanspruch = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Woechentliche_Arbeitszeit = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Urlaubsanspruch = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'W|fffd|chentliche Arbeitszeit
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, True, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "W|fffd|chentliche Arbeitszeit", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Weekly working hours", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "W|fffd|chentliche Arbeitszeit", rng3, "Weekly working hours")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Woechentliche_Arbeitszeit)
    
    'Urlaubsanspruch
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Urlaubsanspruch (Kalenderjahr)", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Holiday entitlement (p.a.)", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Urlaubsanspruch (Kalenderjahr)", rng6, "Holiday entitlement (p.a.)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Urlaubsanspruch)
    
    Datenfeld_Woechentliche_Arbeitszeit_Urlaubsanspruch = VBA.Split(rng_Woechentliche_Arbeitszeit, ":")(0) & ";" & _
                                                          VBA.Split(rng_Urlaubsanspruch, ":")(0)
End Function

Private Function Datenfeld_Woechentliche_Arbeitszeit() As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng7 As String
    Dim rng8 As String
    Dim rng9 As String
    Dim rng10 As String
    Dim rng_Mo As String
    Dim rng_Di As String
    Dim rng_Mi As String
    Dim rng_Do As String
    Dim rng_Fr As String
    Dim rng_Sa As String
    Dim rng_So As String
    
    If Spalte = 2 Then
        Spalte = 1
        Position = Position + Standard_Abstand
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
    Else
        Spalte = 2
    End If
    
    'rng4 - rng10 sind die Positionen der Wochentagsbeschriftungen
    'rng_Mo - rng_So sind die Positionen der Eingabefelder
    rng1 = "C" & Position & ":AW" & Position + 11
    rng2 = "D" & Position + 1 & ":AV" & Position + 1
    rng3 = "D" & Position + 2 & ":AV" & Position + 2
    rng4 = "D" & Position + 4 & ":D" & Position + 6
    rng5 = "P" & Position + 4 & ":P" & Position + 6
    rng6 = "AB" & Position + 4 & ":AB" & Position + 6
    rng7 = "AN" & Position + 4 & ":AN" & Position + 6
    rng8 = "D" & Position + 8 & ":D" & Position + 10
    rng9 = "P" & Position + 8 & ":P" & Position + 10
    rng10 = "AB" & Position + 8 & ":AB" & Position + 10
    rng_Mo = "E" & Position + 4 & ":L" & Position + 6
    rng_Di = "Q" & Position + 4 & ":X" & Position + 6
    rng_Mi = "AC" & Position + 4 & ":AJ" & Position + 6
    rng_Do = "AO" & Position + 4 & ":AV" & Position + 6
    rng_Fr = "E" & Position + 8 & ":L" & Position + 10
    rng_Sa = "Q" & Position + 8 & ":X" & Position + 10
    rng_So = "AC" & Position + 8 & ":AJ" & Position + 10
    
    'Statt "Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)" wird hier eine leicht modifizierte Variante verwendet
    With Fragebogen
        .Rows(Position & ":" & Position).RowHeight = 2
        If Not ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(Position + 2 & ":" & Position + 2).RowHeight = 0
        End If
        .Rows(Position + 3 & ":" & Position + 3).RowHeight = 2
        .Rows(Position + 4 & ":" & Position + 4).RowHeight = 3
        .Rows(Position + 6 & ":" & Position + 6).RowHeight = 3
        .Rows(Position + 7 & ":" & Position + 7).RowHeight = 5.5
        .Rows(Position + 8 & ":" & Position + 8).RowHeight = 3
        .Rows(Position + 10 & ":" & Position + 10).RowHeight = 3
        .Rows(Position + 11 & ":" & Position + 11).RowHeight = 2
        .Rows(Position + 12 & ":" & Position + 12).RowHeight = 5.5
    End With
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, True, Spalte)

    '|fffd|berschrift
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Ggf. Verteilung der w|fffd|chentlichen Arbeitszeit (Std.)", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "If applicable, distribution of weekly working hours", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Ggf. Verteilung der w|fffd|chentlichen Arbeitszeit (Std.)", rng3, "If applicable, distribution of weekly working hours")
    End Select
    
    'Mo
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Mo")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Mon")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "Mo/Mon")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Mo)
    
    With Fragebogen.Range("O" & Position + 4 & ":O" & Position + 6)
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = BorderColor
        End With
    End With
    
    'Di
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Di")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Tue")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Di/Tue")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Di)
    
    With Fragebogen.Range("AA" & Position + 4 & ":AA" & Position + 6)
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = BorderColor
        End With
    End With
    
    'Mi
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Mi")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Wed")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Mi/Wed")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Mi)
    
    With Fragebogen.Range("AM" & Position + 4 & ":AM" & Position + 6)
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = BorderColor
        End With
    End With
    
    'Do
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Do")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Thu")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Do/Thu")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Do)
    
    'Fr
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Fr")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Fri")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Fr/Fri")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Fr)
    
    With Fragebogen.Range("O" & Position + 8 & ":O" & Position + 10)
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = BorderColor
        End With
    End With
    
    'Sa
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "Sa")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "Sat")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "Sa/Sat")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Sa)
    
    With Fragebogen.Range("AA" & Position + 8 & ":AA" & Position + 10)
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = BorderColor
        End With
    End With
    
    'So
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng10, "So")
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng10, "Sun")
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng10, "So/Sun")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_So)
    
    Datenfeld_Woechentliche_Arbeitszeit = VBA.Split(rng_Mo, ":")(0) & ";" & _
                                          VBA.Split(rng_Di, ":")(0) & ";" & _
                                          VBA.Split(rng_Mi, ":")(0) & ";" & _
                                          VBA.Split(rng_Do, ":")(0) & ";" & _
                                          VBA.Split(rng_Fr, ":")(0) & ";" & _
                                          VBA.Split(rng_Sa, ":")(0) & ";" & _
                                          VBA.Split(rng_So, ":")(0)
    
    'f|fffd|r die zus|fffd|tzlich verwendeten Zeilen f|fffd|r die Wochentage Fr, Sa, So muss die Positionsangabe f|fffd|r die Eingabemaske korrigiert werden
    Position = Position + 4
    'durch die zus|fffd|tzlich verwendeten Zeilen f|fffd|r die Wochentage Fr, Sa, So muss die Position der Steuerelemente nach unten korrigiert werden
    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 24
End Function

Private Function Datenfeld_Steuerklasse_Faktor()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Steuerklasse As String
    Dim rng_Faktor As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Steuerklasse = "D" & Position + 4 & ":L" & Position + 6
        rng_Faktor = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Steuerklasse = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Faktor = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Steuerklasse
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Steuerklasse", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Tax class", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Steuerklasse", rng3, "Tax class")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Steuerklasse)
    
    'Faktor
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, False, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Faktor", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Factor", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Faktor", rng6, "Factor")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Faktor)
    
    Datenfeld_Steuerklasse_Faktor = VBA.Split(rng_Steuerklasse, ":")(0) & ";" & _
                                    VBA.Split(rng_Faktor, ":")(0)
End Function

Private Function Datenfeld_Finanzamtsnummer_Identifikationsnummer()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Finanzamtsnummer As String
    Dim rng_Identifikationsnummer As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Finanzamtsnummer = "D" & Position + 4 & ":L" & Position + 6
        rng_Identifikationsnummer = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Finanzamtsnummer = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_Identifikationsnummer = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Finanzamtsnummer
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Finanzamtsnummer", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Tax office No.", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Finanzamtsnummer", rng3, "Tax office No.")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Finanzamtsnummer)
    
    'Identifikationsnummer
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, False, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Identifikationsnummer", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Identification No.", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Identifikationsnummer", rng6, "Identification No.")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Identifikationsnummer)
    
    Datenfeld_Finanzamtsnummer_Identifikationsnummer = VBA.Split(rng_Finanzamtsnummer, ":")(0) & ";" & _
                                                       VBA.Split(rng_Identifikationsnummer, ":")(0)
End Function

Private Function Datenfeld_KV_RV()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_KV As String
    Dim rng_RV As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_KV = "D" & Position + 4 & ":L" & Position + 6
        rng_RV = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_KV = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_RV = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'KV
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, True, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "KV", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Health insurance", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "KV", rng3, "Health insurance")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_KV, True)
    
    'RV
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "RV", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Pension insurance", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "RV", rng6, "Pension insurance")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_RV, True)
    
    Datenfeld_KV_RV = VBA.Split(rng_KV, ":")(0) & ";" & _
                      VBA.Split(rng_RV, ":")(0)
End Function

Private Function Datenfeld_AV_PV()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_AV As String
    Dim rng_PV As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_AV = "D" & Position + 4 & ":L" & Position + 6
        rng_PV = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_AV = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_PV = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'AV
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, True, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "AV", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Retirement insurance", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "AV", rng3, "Retirement insurance")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_AV, True)
    
    'PV
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "PV", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Nursing care insurance", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "PV", rng6, "Nursing care insurance")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_PV, True)
    
    Datenfeld_AV_PV = VBA.Split(rng_AV, ":")(0) & ";" & _
                      VBA.Split(rng_PV, ":")(0)
End Function

Private Function Datenfeld_RV_Option() As String
    Dim rng As String
    Dim rng_RV_Option As String
    
    rng = "C" & Position & ":AW" & Position + 7
    rng_RV_Option = "AB" & Position + 5 & ":AV" & Position + 5
    
    With Fragebogen
        .Rows(Position & ":" & Position).RowHeight = 2
        .Rows(Position + 2 & ":" & Position + 2).RowHeight = 0
        .Rows(Position + 3 & ":" & Position + 3).RowHeight = 2
        .Rows(Position + 4 & ":" & Position + 4).RowHeight = 3
        .Rows(Position + 5 & ":" & Position + 5).RowHeight = 25.5
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(Position + 6 & ":" & Position + 6).RowHeight = 25.5
        Else
            .Rows(Position + 6 & ":" & Position + 6).RowHeight = 0
        End If
        .Rows(Position + 7 & ":" & Position + 7).RowHeight = 3
        .Rows(Position + 8 & ":" & Position + 8).RowHeight = 2
        .Rows(Position + 9 & ":" & Position + 9).RowHeight = 5.5
    
        Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng, False, 1)

        'Beschreibungstext
        With .Range("D" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Value = "Nur bei geringf|fffd|gig Besch|fffd|ftigten / For workers with mini jobs only:"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Value = "For workers with mini jobs only:"
            Else
                .Value = "Nur bei geringf|fffd|gig Besch|fffd|ftigten:"
            End If
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = True
                .ColorIndex = FontColor
            End With
        End With
        With .Range("D" & Position + 5 & ":X" & Position + 5)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .WrapText = True
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Value = "Employee's option for the exemption from the accumulation of pension insurance (acc. to |fffd| 6 sec. 1 b German Social Code VI)"
            Else
                .Value = "Arbeitnehmer-Option zur Befreiung von der Aufstockung in der RV" & vbCrLf & "(gem. |fffd| 6 Abs. 1 b SGB VI)"
            End If
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = FontColor
            End With
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            With .Range("D" & Position + 6 & ":X" & Position + 6)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlCenter
                .MergeCells = True
                .WrapText = True
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .Value = "Employee's option for the exemption from the accumulation of pension insurance (acc. to |fffd| 6 sec. 1 b German Social Code VI)"
                End If
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = FontColor
                End With
            End With
        End If
        
        With .Range(rng_RV_Option)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
        End With
    End With
    
    Position = Position + 1
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 25.5
    Else
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 12.75
    End If
    
    Datenfeld_RV_Option = rng_RV_Option
End Function

Private Function Datenfeld_Entlohnung() As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng7 As String
    Dim rng8 As String
    Dim rng9 As String
    Dim rng10 As String
    Dim rng_Bezeichnung As String
    Dim rng_Betrag As String
    Dim rng_gueltig_ab1 As String
    Dim rng_Stundenlohn As String
    Dim rng_gueltig_ab2 As String
    
    rng1 = "D" & Position + 1 & ":H" & Position + 1
    rng2 = "D" & Position + 2 & ":H" & Position + 2
    rng3 = "L" & Position + 1 & ":P" & Position + 1
    rng4 = "L" & Position + 2 & ":P" & Position + 2
    rng5 = "T" & Position + 1 & ":X" & Position + 1
    rng6 = "T" & Position + 2 & ":X" & Position + 2
    rng7 = "AB" & Position + 1 & ":AJ" & Position + 1
    rng8 = "AB" & Position + 2 & ":AJ" & Position + 2
    rng9 = "AN" & Position + 1 & ":AV" & Position + 1
    rng10 = "AN" & Position + 2 & ":AV" & Position + 2
    rng_Bezeichnung = "D" & Position + 4 & ":H" & Position + 6
    rng_Betrag = "L" & Position + 4 & ":P" & Position + 6
    rng_gueltig_ab1 = "T" & Position + 4 & ":X" & Position + 6
    rng_Stundenlohn = "AB" & Position + 4 & ":AJ" & Position + 6
    rng_gueltig_ab2 = "AN" & Position + 4 & ":AV" & Position + 6
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    With Fragebogen
        With .Range("C" & Position & ":Y" & Position + 7)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
        End With
        With .Range("AA" & Position & ":AW" & Position + 7)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
        End With
        With .Range("C" & Position & ":AW" & Position + 7)
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = BorderColor
            End With
        End With
    End With
        
    'Bezeichnung
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng1, "Bezeichnung", rng2)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng1, "Description", rng2)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng1, "Bezeichnung", rng2, "Description")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Bezeichnung)

    'Betrag
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng3, "Betrag", rng4)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng3, "Amount", rng4)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng3, "Betrag", rng4, "Amount")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Betrag)

    'g|fffd|ltig ab (MM/JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "g|fffd|ltig ab (MM/JJJJ)", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "valid from (MM/YYYY)", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "g|fffd|ltig ab (MM/JJJJ)", rng6, "valid from (MM/YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_gueltig_ab1)
     
    'Stundenlohn
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Stundenlohn", rng8)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Hourly wage", rng8)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Stundenlohn", rng8, "Hourly wage")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Stundenlohn)

    'g|fffd|ltig ab (MM/JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "g|fffd|ltig ab (MM/JJJJ)", rng10)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "valid from (MM/YYYY)", rng10)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "g|fffd|ltig ab (MM/JJJJ)", rng10, "valid from (MM/YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_gueltig_ab2)
    
    Datenfeld_Entlohnung = VBA.Split(rng_Bezeichnung, ":")(0) & ";" & _
                           VBA.Split(rng_Betrag, ":")(0) & ";" & _
                           VBA.Split(rng_gueltig_ab1, ":")(0) & ";" & _
                           VBA.Split(rng_Stundenlohn, ":")(0) & ";" & _
                           VBA.Split(rng_gueltig_ab2, ":")(0)
End Function

Private Function Datenfeld_Ausbildungsverguetung(Ausbildungsjahr As Integer) As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng7 As String
    Dim rng8 As String
    Dim rng9 As String
    Dim rng10 As String
    Dim rng_Ausbildungsjahr As String
    Dim rng_Betrag As String
    Dim rng_gueltig_ab_1 As String
    Dim rng_Stundenlohn As String
    Dim rng_gueltig_ab_2 As String
    
    rng1 = "D" & Position + 1 & ":H" & Position + 1
    rng2 = "D" & Position + 2 & ":H" & Position + 2
    rng3 = "L" & Position + 1 & ":P" & Position + 1
    rng4 = "L" & Position + 2 & ":P" & Position + 2
    rng5 = "T" & Position + 1 & ":X" & Position + 1
    rng6 = "T" & Position + 2 & ":X" & Position + 2
    rng7 = "AB" & Position + 1 & ":AJ" & Position + 1
    rng8 = "AB" & Position + 2 & ":AJ" & Position + 2
    rng9 = "AN" & Position + 1 & ":AV" & Position + 1
    rng10 = "AN" & Position + 2 & ":AV" & Position + 2
    rng_Ausbildungsjahr = "D" & Position + 4 & ":H" & Position + 6
    rng_Betrag = "L" & Position + 4 & ":P" & Position + 6
    rng_gueltig_ab_1 = "T" & Position + 4 & ":X" & Position + 6
    rng_Stundenlohn = "AB" & Position + 4 & ":AJ" & Position + 6
    rng_gueltig_ab_2 = "AN" & Position + 4 & ":AV" & Position + 6
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    With Fragebogen
        With .Range("C" & Position & ":Y" & Position + 7)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
        End With
        With .Range("AA" & Position & ":AW" & Position + 7)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = BorderColor
            End With
        End With
        With .Range("C" & Position & ":AW" & Position + 7)
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = BorderColor
            End With
        End With
    End With
        
    'Ausbildungsjahr
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng1, Ausbildungsjahr & ". Ausbildungsjahr", rng2)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng1, Ausbildungsjahr & ". Year of training", rng2)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng1, Ausbildungsjahr & ". Ausbildungsjahr", rng2, Ausbildungsjahr & ". Year of training")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Ausbildungsjahr)

    'Betrag
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng3, "Betrag", rng4)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng3, "Amount", rng4)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng3, "Betrag", rng4, "Amount")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Betrag)

    'g|fffd|ltig ab (MM/JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "g|fffd|ltig ab (MM/JJJJ)", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "valid from (MM/YYYY)", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "g|fffd|ltig ab (MM/JJJJ)", rng6, "valid from (MM/YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_gueltig_ab_1)
     
    'Stundenlohn
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Stundenlohn", rng8)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Hourly wage", rng8)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng7, "Stundenlohn", rng8, "Hourly wage")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Stundenlohn)

    'g|fffd|ltig ab (MM/JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "g|fffd|ltig ab (MM/JJJJ)", rng10)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "valid from (MM/YYYY)", rng10)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng9, "g|fffd|ltig ab (MM/JJJJ)", rng10, "valid from (MM/YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_gueltig_ab_2)
    
    Datenfeld_Ausbildungsverguetung = VBA.Split(rng_Ausbildungsjahr, ":")(0) & ";" & _
                                      VBA.Split(rng_Betrag, ":")(0) & ";" & _
                                      VBA.Split(rng_gueltig_ab_1, ":")(0) & ";" & _
                                      VBA.Split(rng_Stundenlohn, ":")(0) & ";" & _
                                      VBA.Split(rng_gueltig_ab_2, ":")(0)
End Function

Private Function Datenfeld_Betrag_AG_Anteil()
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng_Betrag As String
    Dim rng_AG_Anteil As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 7
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "D" & Position + 2 & ":L" & Position + 2
        rng4 = "O" & Position & ":Y" & Position + 7
        rng5 = "P" & Position + 1 & ":X" & Position + 1
        rng6 = "P" & Position + 2 & ":X" & Position + 2
        rng_Betrag = "D" & Position + 4 & ":L" & Position + 6
        rng_AG_Anteil = "P" & Position + 4 & ":X" & Position + 6
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 7
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AB" & Position + 2 & ":AJ" & Position + 2
        rng4 = "AM" & Position & ":AW" & Position + 7
        rng5 = "AN" & Position + 1 & ":AV" & Position + 1
        rng6 = "AN" & Position + 2 & ":AV" & Position + 2
        rng_Betrag = "AB" & Position + 4 & ":AJ" & Position + 6
        rng_AG_Anteil = "AN" & Position + 4 & ":AV" & Position + 6
    End If
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
    'Betrag
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Betrag", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Amount", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "Betrag", rng3, "Amount")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Betrag)
    
    'AG-Anteil
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng4, True, 2)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "AG-Anteil (H|fffd|he monatlich)", rng6)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "Employer share (monthly amount)", rng6)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng5, "AG-Anteil (H|fffd|he monatlich)", rng6, "Employer share (monthly amount)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_AG_Anteil)
    
    Datenfeld_Betrag_AG_Anteil = VBA.Split(rng_Betrag, ":")(0) & ";" & _
                                 VBA.Split(rng_AG_Anteil, ":")(0)
End Function

Private Function Datenfeld_Vorbesch|fffd|ftigungszeiten() As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng7 As String
    Dim rng8 As String
    Dim rng9 As String
    Dim rng_von As String
    Dim rng_bis As String
    Dim rng_Art_der_Beschaeftigung As String
    Dim rng_Anzahl_der_Beschaeftigungstage As String
    
    rng1 = "C" & Position & ":AW" & Position + 7
    rng2 = "D" & Position + 1 & ":H" & Position + 1
    rng3 = "D" & Position + 2 & ":H" & Position + 2
    rng4 = "L" & Position + 1 & ":P" & Position + 1
    rng5 = "L" & Position + 2 & ":P" & Position + 2
    rng6 = "T" & Position + 1 & ":AJ" & Position + 1
    rng7 = "T" & Position + 2 & ":AJ" & Position + 2
    rng8 = "AN" & Position + 1 & ":AV" & Position + 1
    rng9 = "AN" & Position + 2 & ":AV" & Position + 2
    rng_von = "D" & Position + 4 & ":H" & Position + 6
    rng_bis = "L" & Position + 4 & ":P" & Position + 6
    rng_Art_der_Beschaeftigung = "T" & Position + 4 & ":AJ" & Position + 6
    rng_Anzahl_der_Beschaeftigungstage = "AN" & Position + 4 & ":AV" & Position + 6
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)

    'von (TT.MM.JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "von (TT.MM.JJJJ)", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "from (DD.MM.YYYY)", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "von (TT.MM.JJJJ)", rng3, "from (DD.MM.YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_von)

    'bis (TT.MM.JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "bis (TT.MM.JJJJ)", rng5)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "to (DD.MM.YYYY)", rng5)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "bis (TT.MM.JJJJ)", rng5, "to (DD.MM.YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_bis)

    'Art der Besch|fffd|ftigung
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Art der Besch|fffd|ftigung", rng7)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Type of employment", rng7)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Art der Besch|fffd|ftigung", rng7, "Type of employment")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Art_der_Beschaeftigung)

    'Anzahl der Besch|fffd|ftigungstage
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Anzahl der Besch|fffd|ftigungstage", rng9)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Number of employment days", rng9)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Anzahl der Besch|fffd|ftigungstage", rng9, "Number of employment days")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Anzahl_der_Beschaeftigungstage)
    
    Datenfeld_Vorbesch|fffd|ftigungszeiten = VBA.Split(rng_von, ":")(0) & ";" & _
                                        VBA.Split(rng_bis, ":")(0) & ";" & _
                                        VBA.Split(rng_Art_der_Beschaeftigung, ":")(0) & ";" & _
                                        VBA.Split(rng_Anzahl_der_Beschaeftigungstage, ":")(0)
End Function

Private Function Datenfeld_weitere_Beschaeftigungen() As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng5 As String
    Dim rng6 As String
    Dim rng7 As String
    Dim rng8 As String
    Dim rng9 As String
    Dim rng10 As String
    Dim rng11 As String
    Dim rng_von As String
    Dim rng_bis As String
    Dim rng_Arbeitgeber As String
    Dim rng_Art_der_Taetigkeit As String
    Dim rng_Woechentliche_Arbeitszeit As String
    
    rng1 = "C" & Position & ":AW" & Position + 7
    rng2 = "D" & Position + 1 & ":H" & Position + 1
    rng3 = "D" & Position + 2 & ":H" & Position + 2
    rng4 = "L" & Position + 1 & ":P" & Position + 1
    rng5 = "L" & Position + 2 & ":P" & Position + 2
    rng6 = "T" & Position + 1 & ":AB" & Position + 1
    rng7 = "T" & Position + 2 & ":AB" & Position + 2
    rng8 = "AF" & Position + 1 & ":AN" & Position + 1
    rng9 = "AF" & Position + 2 & ":AN" & Position + 2
    rng10 = "AR" & Position + 1 & ":AV" & Position + 1
    rng11 = "AR" & Position + 2 & ":AV" & Position + 2
    rng_von = "D" & Position + 4 & ":H" & Position + 6
    rng_bis = "L" & Position + 4 & ":P" & Position + 6
    rng_Arbeitgeber = "T" & Position + 4 & ":AB" & Position + 6
    rng_Art_der_Taetigkeit = "AF" & Position + 4 & ":AN" & Position + 6
    rng_Woechentliche_Arbeitszeit = "AR" & Position + 4 & ":AV" & Position + 6
    
    Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng1, False, Spalte)

    'von (TT.MM.JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "von (TT.MM.JJJJ)", rng3)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "from (DD.MM.YYYY)", rng3)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng2, "von (TT.MM.JJJJ)", rng3, "from (DD.MM.YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_von)

    'bis (TT.MM.JJJJ)
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "bis (TT.MM.JJJJ)", rng5)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "to (DD.MM.YYYY)", rng5)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng4, "bis (TT.MM.JJJJ)", rng5, "to (DD.MM.YYYY)")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_bis)

    'Arbeitgeber
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Arbeitgeber", rng7)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Employer", rng7)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng6, "Arbeitgeber", rng7, "Employer")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Arbeitgeber)

    'Art der T|fffd|tigkeit
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Art der T|fffd|tigkeit", rng9)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Type of work", rng9)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng8, "Art der T|fffd|tigkeit", rng9, "Type of work")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Art_der_Taetigkeit, True)
    
    'W|fffd|chentliche Arbeitszeit
    Select Case (ws_Verwaltung.Cells(Sprache_PFB, 2).Value)
        Case "Deutsch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng10, "W|fffd|chentl. Arbeitszeit", rng11)
        Case "Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng10, "Weekly hours", rng11)
        Case "Deutsch_Englisch"
            Call Mdl_Formatierung.Datenfeld_Bezeichnungsfeld_formatieren(rng10, "W|fffd|chentl. Arbeitszeit", rng11, "Weekly hours")
    End Select
    Call Mdl_Formatierung.Datenfeld_Eingabefeld_formatieren(rng_Woechentliche_Arbeitszeit)
    
    Datenfeld_weitere_Beschaeftigungen = VBA.Split(rng_von, ":")(0) & ";" & _
                                         VBA.Split(rng_bis, ":")(0) & ";" & _
                                         VBA.Split(rng_Arbeitgeber, ":")(0) & ";" & _
                                         VBA.Split(rng_Art_der_Taetigkeit, ":")(0) & ";" & _
                                         VBA.Split(rng_Woechentliche_Arbeitszeit, ":")(0)
End Function

Private Function Datenfeld_Bea() As String
    Dim rng As String
    Dim rng_Bea As String
    
    rng = "C" & Position & ":AW" & Position + 7
    rng_Bea = "AN" & Position + 5 & ":AV" & Position + 5
    
'    With Fragebogen
'        .Rows(Position & ":" & Position).RowHeight = 2
'        .Rows(Position + 1 & ":" & Position + 4).RowHeight = 0
'        .Rows(Position + 5 & ":" & Position + 5).RowHeight = 25.5
'        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
'            .Rows(Position + 6 & ":" & Position + 6).RowHeight = 25.5
'        Else
'            .Rows(Position + 6 & ":" & Position + 6).RowHeight = 0
'        End If
'        .Rows(Position + 7 & ":" & Position + 7).RowHeight = 3
'        .Rows(Position + 8 & ":" & Position + 8).RowHeight = 2
'        .Rows(Position + 9 & ":" & Position + 9).RowHeight = 5.5
'
'        Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng, False, 1)

        'Beschreibungstext
'        With .Range("D" & Position + 5 & ":AJ" & Position + 5)
'            .HorizontalAlignment = xlLeft
'            .VerticalAlignment = xlCenter
'            .MergeCells = True
'            .WrapText = True
'            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
'                .Value = "I object to my income statements (earned and additional) being forwarded electronically to the Bundesagentur f|fffd|r Arbeit (Federal Employment Office)."
'            Else
'                .Value = "Ich widerspreche der elektronischen |fffd|bermittlung von Arbeits- und Nebeneinkommensbescheinigungen an die Bundesagentur f|fffd|r Arbeit."
'            End If
'            With .Font
'                .Name = "Verdana"
'                .Size = 8
'                .Bold = False
'                .ColorIndex = FontColor
'            End With
'        End With
'        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
'            With .Range("D" & Position + 6 & ":AJ" & Position + 6)
'                .HorizontalAlignment = xlLeft
'                .VerticalAlignment = xlCenter
'                .MergeCells = True
'                .WrapText = True
'                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
'                    .Value = "I object to my income statements (earned and additional) being forwarded electronically to the Bundesagentur f|fffd|r Arbeit (Federal Employment Office)."
'                End If
'                With .Font
'                    .Name = "Verdana"
'                    .Size = 8
'                    .Bold = False
'                    .Italic = True
'                    .ColorIndex = FontColor
'                End With
'            End With
'        End If
'
'        With .Range(rng_Bea)
'            .HorizontalAlignment = xlRight
'            .VerticalAlignment = xlCenter
'            .MergeCells = True
'            .Locked = True
'            With .Font
'                .Name = "Verdana"
'                .Size = 12
'                .Bold = True
'                .ColorIndex = FontColor
'            End With
'        End With
'    End With
    
    Position = Position + 1
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 25.5
    Else
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 12.75
    End If
    
    Datenfeld_Bea = rng_Bea
End Function

Private Function Datenfeld_weitere_Beschaeftigungen_Option() As String
    Dim rng As String
    Dim rng_wB_Option As String
    
    rng = "C" & Position & ":AW" & Position + 7
    rng_wB_Option = "AN" & Position + 5 & ":AV" & Position + 5
    
    With Fragebogen
        .Rows(Position & ":" & Position).RowHeight = 2
        .Rows(Position + 2 & ":" & Position + 2).RowHeight = 0
        .Rows(Position + 3 & ":" & Position + 3).RowHeight = 0
        .Rows(Position + 4 & ":" & Position + 4).RowHeight = 0
        .Rows(Position + 5 & ":" & Position + 5).RowHeight = 10
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            .Rows(Position + 1 & ":" & Position + 1).RowHeight = 25.5
            .Rows(Position + 6 & ":" & Position + 6).RowHeight = 10
        Else
            .Rows(Position + 6 & ":" & Position + 6).RowHeight = 0
        End If
        .Rows(Position + 7 & ":" & Position + 7).RowHeight = 3
        .Rows(Position + 8 & ":" & Position + 8).RowHeight = 2
        .Rows(Position + 9 & ":" & Position + 9).RowHeight = 5.5
    
        Call Mdl_Formatierung.Datenfeld_Rahmen_formatieren(rng, False, 1)

        'Beschreibungstext
        With .Range("D" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                .Value = "Ergibt die Zusammenrechnung der monatlichen Arbeitsentgelte mehr als EUR 450? /" & vbCrLf & _
                            "Do the monthly wages sum up to more than EUR 450?"
            ElseIf ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Value = "Do the monthly wages sum up to more than EUR 450?"
            Else
                .Value = "Ergibt die Zusammenrechnung der monatlichen Arbeitsentgelte mehr als EUR 450?"
            End If
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = True
                .ColorIndex = FontColor
            End With
        End With
        With .Range("D" & Position + 5 & ":AM" & Position + 5)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .WrapText = True
            If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Englisch" Then
                .Value = "(Note for employer: verify social security evaluation)"
            Else
                .Value = "(Hinweis f|fffd|r den Arbeitgeber: Sozialversicherungsrechtliche Beurteilung pr|fffd|fen)"
            End If
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = FontColor
            End With
        End With
        If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
            With .Range("D" & Position + 6 & ":X" & Position + 6)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlCenter
                .MergeCells = True
                .WrapText = True
                If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
                    .Value = "(Note for employer: verify social security evaluation)"
                End If
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .Italic = True
                    .ColorIndex = FontColor
                End With
            End With
        End If
        
        With .Range(rng_wB_Option)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            '.Locked = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = FontColor
            End With
        End With
    End With
    
    Position = Position + 1
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
    Else
        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 2
    End If
    
    Datenfeld_weitere_Beschaeftigungen_Option = rng_wB_Option
End Function
Attribute VB_Name = "mdl_Email"
Option Explicit

Public Sub Email_erstellen(Optional str_File As String)
    Dim olApp As Object
    Dim objMail As Object
    Dim objFSO As Object
    Dim i As Integer
    Const olMailItem = 0
    Const olByValue = 1
    
    On Error Resume Next
    Set olApp = CreateObject("Outlook.Application")
    Set objMail = olApp.CreateItem(olMailItem)
    If Not err.Number = 0 Then
        MsgBox "Hinweis:" & vbCrLf & vbCrLf & _
               "Ihr Email-Client wird von der Anwendung nicht unterst|fffd|tzt." & vbCrLf & _
               "Die Generierung der Email ist daher nicht durchf|fffd|hrbar.", _
               vbExclamation
        Exit Sub
    End If
    On Error GoTo 0
    
    On Error GoTo Fehlerbehandlung
    With objMail
        With .Attachments
            If Mdl_Dialoge.Dialog_Email.cbx_PFB Then
                .Add ThisWorkbook.Path & "\" & ThisWorkbook.Name, olByValue, 9999
            End If
            If Mdl_Dialoge.Dialog_Email.cbx_Exportdatei Then
                .Add Environ("TEMP") & "\" & str_File, olByValue, 9999
            End If
        End With
        .Display
    End With
    On Error GoTo 0
    
    Set olApp = Nothing
    Set objMail = Nothing
    
    If Not str_File = "" Then
        If Len(Dir(Environ("TEMP") & "\" & str_File)) > 0 Then
            Kill (Environ("TEMP") & "\" & str_File)
        End If
    End If
     
    Exit Sub
    
Fehlerbehandlung:
    MsgBox "Hinweis:" & vbCrLf & vbCrLf & _
        "Ihr Email-Client ist f|fffd|r die automatische Mail-Generierung nicht korrekt konfiguriert." & vbCrLf & _
        "Die Generierung der Email ist daher nicht durchf|fffd|hrbar und wird abgebrochen.", _
        vbExclamation
    Exit Sub
End Sub
Attribute VB_Name = "mdl_Main"
Option Explicit

Public Sub Fragebogen_erzeugen()

    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    If ws_Verwaltung.Cells(Sprache_PFB, 2).Value = "Deutsch_Englisch" Then
        If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Neue MA" Then
            Mdl_Steuerelemente.Position = 315
            mdl_Datenfelder.Position = 13
        Else
            Mdl_Steuerelemente.Position = 335.25
            mdl_Datenfelder.Position = 15
        End If
        Mdl_Steuerelemente.Standard_Abstand_ComboBox = 54
        Mdl_Steuerelemente.Abstand_Absatz_ComboBox = 79.5
    Else
        If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "Neue MA" Then
            Mdl_Steuerelemente.Position = 276.75
            mdl_Datenfelder.Position = 13
        Else
            Mdl_Steuerelemente.Position = 297
            mdl_Datenfelder.Position = 15
        End If
        Mdl_Steuerelemente.Standard_Abstand_ComboBox = 41.25
        Mdl_Steuerelemente.Abstand_Absatz_ComboBox = 66.75
    End If
    
    'Tabelle formatieren
    Fragebogen.Cells.RowHeight = 12.75
    Call Mdl_Formatierung.Spaltenbreiten_anpassen(Fragebogen)
    Call Mdl_Formatierung.Header_formatieren
    
    'Gew|fffd|hlete Datenbl|fffd|cke einf|fffd|gen
    If ws_Verwaltung.Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
        Call mdl_Datenfelder.Block_Allgemein
        Call mdl_Datenfelder.Block_Persoenliche_Angaben
        Call mdl_Datenfelder.Block_Beschaeftigung
        Call mdl_Datenfelder.Block_Steuer
        Call mdl_Datenfelder.Block_Sozialversicherung
        Call mdl_Datenfelder.Block_Entlohnung
        Call mdl_Datenfelder.Block_VWL
        Call mdl_Datenfelder.Block_weitere_Beschaeftigungen
        Call mdl_Datenfelder.Block_Bea
    Else
        Call mdl_Datenfelder.Block_Allgemein
        Call mdl_Datenfelder.Block_Persoenliche_Angaben
        Call mdl_Datenfelder.Block_Beschaeftigung
        Call mdl_Datenfelder.Block_Befristung
        Call mdl_Datenfelder.Block_Steuer
        Call mdl_Datenfelder.Block_Sozialversicherung
        Call mdl_Datenfelder.Block_Entlohnung
        Call mdl_Datenfelder.Block_Ausbildungsverguetung
        Call mdl_Datenfelder.Block_VWL
        Call mdl_Datenfelder.Block_Vorbeschaeftigungszeiten
        Call mdl_Datenfelder.Block_Bea
    End If
    
    'Steuerelemente hinzuf|fffd|gen
    Call Mdl_Steuerelemente.Steuerelemente_initialisieren
    
    ws_Verwaltung.Cells(Fragebogen_erzeugt, 2).Value = "X"
    
    'Erstes Eingabefeld ausw|fffd|hlen
    Fragebogen.Select
    Fragebogen.Range(Split(ws_Assistent.Cells(Firma, clm_Range).Value, ";")(0)).Select
    Call Startseite_loeschen
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
    
End Sub

Sub Speichern_unter()
    Call Werte_auslesen
    Call Mdl_Formatierung.Markierung_aufheben
    Application.Dialogs(xlDialogSaveAs).Show
End Sub

Public Sub Werte_auslesen()
    Dim i As Integer
    Dim str As String
    Dim rng As String
    Dim dat As String
    
    With ws_Assistent
        'Zuvor gespeicherte Werte l|fffd|schen
        .Columns(clm_Wert).ClearContents
        .Columns(clm_Wert_2).ClearContents
        
        'ComboBoxen auslesen
        Call Mdl_Steuerelemente.Steuerelemente_auslesen
        
        'Datenfelder auslesen
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, clm_Range).Value = "" And .Cells(i, clm_Position).Value = "" Or _
                Not .Cells(i, clm_Range).Value = "" And (i = weitere_Beschaeftigungen Or i = weitere_Beschaeftigungen_2 Or i = weitere_Beschaeftigungen_3 _
                Or i = weitere_Beschaeftigungen_4 Or i = weitere_Beschaeftigungen_5) Then
                str = .Cells(i, clm_Range).Value
                dat = ""
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                    Else
                        rng = VBA.Left(str, InStr(str, ";") - 1)
                        str = VBA.Mid(str, InStr(str, ";") + 1)
                    End If
                    dat = dat & Fragebogen.Range(rng).Value & ";"
                Loop
                .Cells(i, clm_Wert).Value = VBA.Left(dat, Len(dat) - 1)
            End If
        Next i
    End With
End Sub

Public Sub Gespeicherte_Werte_eintragen()
    Dim i As Integer
    Dim str As String
    Dim rng As String
    Dim dat As String
    Dim valdat As String
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben(Fragebogen)
    Application.EnableEvents = False
    
    With ws_Assistent
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, clm_Range).Value = "" And .Cells(i, clm_Position).Value = "" Or _
                Not .Cells(i, clm_Range).Value = "" And (i = weitere_Beschaeftigungen Or i = weitere_Beschaeftigungen_2 Or i = weitere_Beschaeftigungen_3 _
                Or i = weitere_Beschaeftigungen_4 Or i = weitere_Beschaeftigungen_5) Then
                str = .Cells(i, clm_Range).Value
                dat = .Cells(i, clm_Wert).Value
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                        valdat = dat
                    Else
                        rng = VBA.Left(str, InStr(str, ";") - 1)
                        str = VBA.Mid(str, InStr(str, ";") + 1)
                        If Not dat = "" Then
                            valdat = VBA.Left(dat, InStr(dat, ";") - 1)
                            dat = VBA.Mid(dat, InStr(dat, ";") + 1)
                        Else
                            valdat = ""
                        End If
                    End If
                    Fragebogen.Range(rng).Value = valdat
                Loop
            End If
        Next i
    End With
    
    'Erstes Eingabefeld ausw|fffd|hlen
    Fragebogen.Select
    Fragebogen.Range(Split(ws_Assistent.Cells(Firma, clm_Range).Value, ";")(0)).Select
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen(Fragebogen)
    Application.EnableEvents = True
    
End Sub

Private Sub Startseite_loeschen()
    Dim ws As Worksheet
    
    For Each ws In Worksheets
        If ws.Name = "Start" Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
            Exit For
        End If
    Next ws
End Sub

Public Sub cb_Speichern_Color_Change()
    '|fffd|ndert die Hintergrundfarbe des Speichern-Buttons
    Fragebogen.cb_Speichern.BackColor = vbRed
End Sub
Attribute VB_Name = "uf_Email"
Attribute VB_Base = "0{6BA9074D-CE6C-45B5-9131-145FEF189570}{95E346DE-EC5A-4CEE-9A86-2102604B03AC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cb_Weiter_Click()
    Dim answer As Integer
    If cbx_PFB Then
        If Not ThisWorkbook.Saved Then
            answer = MsgBox("Der Fragebogen enth|fffd|lt ungespeicherte |fffd|nderungen," & vbCrLf & _
                     "die vor dem Email Versand gespeichert werden m|fffd|ssen." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                     " Soll der Fragebogen jetzt gespeichert werden?", _
                     vbYesNo)
            If answer = vbYes Then
                Call mdl_Main.Werte_auslesen
                Call Mdl_Formatierung.Markierung_aufheben
                ThisWorkbook.Save
            Else
                cbx_PFB.Value = False
                Exit Sub
            End If
        End If

        If cbx_Exportdatei Then
            If Daten_fuer_Export_vorhanden Then
                Call Mdl_Dialoge.Dialogwechsel(Email, Export)
            Else
                cbx_Exportdatei.Value = False
                Exit Sub
            End If
        Else
            Me.Hide
            Call mdl_Email.Email_erstellen
        End If
    Else
        If cbx_Exportdatei Then
            If Daten_fuer_Export_vorhanden Then
                Call Mdl_Dialoge.Dialogwechsel(Email, Export)
            Else
                cbx_Exportdatei.Value = False
                Exit Sub
            End If
        Else
            MsgBox "Es wurden keine Dateien f|fffd|r den Anhang ausgew|fffd|hlt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                   " Bitte treffen Sie eine Auswahl.", _
                   vbExclamation
        End If
    End If
End Sub

Private Sub cb_Abbrechen_Click()
    Call Mdl_Dialoge.Dialogwechsel(Email, kein_Dialog)
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Cancel = True
    cb_Abbrechen_Click
End Sub
Attribute VB_Name = "uf_Export"
Attribute VB_Base = "0{F938039B-3F83-477A-8A7A-D446BAE662C2}{706597DF-846E-4C6E-8472-04DA757F70CB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public bln_Email As Boolean

Private Sub cb_Vorschau_Click()
    Call Mdl_Formatierung.Importierbare_Stammdaten_markieren
    Me.Hide
End Sub

Private Sub cb_Zuruecksetzen_click()
    Call Mdl_Formatierung.Markierung_aufheben
    Me.Hide
End Sub

Private Sub cb_Weiter_Click()
    Dim rng_Personalnummer As String
    Dim str_File As String
    
    If Not Daten_fuer_Export_vorhanden Then
        Exit Sub
    End If
    
    If Not Me.ob_LuG And Not Me.ob_LODAS Then
        MsgBox "Es wurde kein Programm f|fffd|r den Import ausgew|fffd|hlt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte w|fffd|hlen Sie ein Programm f|fffd|r den Import.", _
                vbExclamation
        Exit Sub
    End If
    If Me.tbx_Beraternummer.Value = "" Then
        MsgBox "Es wurde keine Beraternummer eingegeben." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte geben Sie eine Beraternummer ein.", _
                vbExclamation
        Exit Sub
    End If
    If Me.tbx_Mandantennummer.Value = "" Then
        MsgBox "Es wurde keine Mandantennummer eingegeben." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte geben Sie eine Mandantennummer ein.", _
                vbExclamation
        Exit Sub
    End If
    
    If bln_Email Then
        rng_Personalnummer = Split(ws_Assistent.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";")(1)

        If Me.ob_LuG Then
            str_File = "ANF_LuG_" & Mdl_Dialoge.Dialog_Export.tbx_Beraternummer.Value & "_" & Mdl_Dialoge.Dialog_Export.tbx_Mandantennummer.Value & _
                       "_" & Fragebogen.Range(rng_Personalnummer).Value & ".txt"
        Else
            str_File = "ANF_LODAS_" & Mdl_Dialoge.Dialog_Export.tbx_Beraternummer.Value & "_" & Mdl_Dialoge.Dialog_Export.tbx_Mandantennummer.Value & _
                       "_" & Fragebogen.Range(rng_Personalnummer).Value & ".txt"
        End If
    
        Call Mdl_Export.Export_Datei_erstellen(Environ("TEMP"), str_File)
        Call mdl_Email.Email_erstellen(str_File)
    Else
        Call Mdl_Dialoge.Dialogwechsel(Export, Export_Speichern_unter)
    End If
End Sub

Private Sub cb_Abbrechen_Click()
    If bln_Email Then
        Call Mdl_Dialoge.Dialogwechsel(Export, Email)
    Else
        Call Mdl_Dialoge.Dialogwechsel(Export, kein_Dialog)
    End If
End Sub

Private Sub UserForm_Activate()
    If bln_Email Then
        Me.cb_Abbrechen.Caption = "Zur|fffd|ck"
        cb_Vorschau.Enabled = False
        cb_Zuruecksetzen.Enabled = False
    Else
        Me.cb_Abbrechen.Caption = "Abbrechen"
        cb_Vorschau.Enabled = True
        cb_Zuruecksetzen.Enabled = True
    End If
    
    With ws_Verwaltung
        If Not .Cells(Beraternummer, 2).Value = "" Then
            Me.tbx_Beraternummer.Value = .Cells(Beraternummer, 2).Value
            Me.tbx_Beraternummer.Enabled = False
        End If
        If Not .Cells(Mandantennummer, 2).Value = "" Then
            Me.tbx_Mandantennummer.Value = .Cells(Mandantennummer, 2).Value
            Me.tbx_Mandantennummer.Enabled = False
        End If
    End With
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Cancel = True
    Call Mdl_Dialoge.Dialogwechsel(Export, kein_Dialog)
End Sub
Attribute VB_Name = "uf_Export_Speichern_unter"
Attribute VB_Base = "0{0D906A3B-23FC-4380-967F-F3CD90A81D4C}{5D406F2A-B5E2-4ACC-B570-6BAFD1FF9D69}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cb_Erzeugen_Click()
    Dim zustand As Zustand_Dateiname
    Dim str_Folder As String
    Dim str_File_Name As String
    
    If Me.tbx_Verzeichnis_waehlen.Value = "" Then
        MsgBox "Es wurde kein Verzeichnis ausgew|fffd|hlt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte w|fffd|hlen Sie ein Verzeichnis zum Speichern der Exportdatei.", _
                vbExclamation
        Exit Sub
    ElseIf Not Mdl_Hilfsfunktionen.Verzeichnis_existiert(Me.tbx_Verzeichnis_waehlen.Value) Then
        MsgBox "Das gew|fffd|hlte Verzeichnis existiert nicht." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte w|fffd|hlen Sie ein anderes Verzeichnis zum Speichern der Exportdatei.", _
                vbExclamation
        Exit Sub
    End If

    If Me.tbx_Name.Value = "" Then
        MsgBox "Es wurde kein Name angegeben." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte geben Sie einen Namen f|fffd|r die Exportdatei an.", _
                vbExclamation
        Exit Sub
    Else
        zustand = Mdl_Hilfsfunktionen.Dateinamenspruefung(Me.tbx_Name.Value)
        Select Case zustand
            Case OK
                str_File_Name = Me.tbx_Name.Value
                GoTo Erzeugen
            Case zu_lang
                MsgBox "Der angegebene Name ist zu lang." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                    " Bitte geben Sie maximal 100 Zeichen ein.", _
                    vbExclamation
                Exit Sub
            Case enthaelt_unerlaubte_Zeichen
                MsgBox "Der angegebene Name enth|fffd|lt unzul|fffd|ssige Zeichen." & vbCrLf & _
                    "(Nicht erlaubt sind < > ? "" : | \ / *)" & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                    " Bitte w|fffd|hlen Sie einen anderen Namen.", _
                    vbExclamation
                Exit Sub
        End Select
    End If
    
Erzeugen:
    Call Mdl_Export.Export_Datei_erstellen(Me.tbx_Verzeichnis_waehlen.Value, Me.tbx_Name.Value)
End Sub

Private Sub cb_Waehlen_Click()
    Me.tbx_Verzeichnis_waehlen.Value = Mdl_Hilfsfunktionen.Verzeichnis_waehlen
End Sub

Private Sub cb_Zurueck_Click()
    Call Mdl_Dialoge.Dialogwechsel(Export_Speichern_unter, Export)
End Sub

Private Sub UserForm_Activate()
    Dim rng_Personalnummer As String
    
    rng_Personalnummer = Split(ws_Assistent.Cells(Name_des_Mitarbeiters_Personalnummer, clm_Range).Value, ";")(1)
    Me.tbx_Verzeichnis_waehlen.Value = VBA.Environ("USERPROFILE") & "\Desktop"
    If Mdl_Dialoge.Dialog_Export.ob_LuG Then
        Me.tbx_Name.Value = "ANF_LuG_" & Mdl_Dialoge.Dialog_Export.tbx_Beraternummer.Value & "_" & Mdl_Dialoge.Dialog_Export.tbx_Mandantennummer.Value & "_" & Fragebogen.Range(rng_Personalnummer).Value
    Else
        Me.tbx_Name.Value = "ANF_LODAS_" & Mdl_Dialoge.Dialog_Export.tbx_Beraternummer.Value & "_" & Mdl_Dialoge.Dialog_Export.tbx_Mandantennummer.Value & "_" & Fragebogen.Range(rng_Personalnummer).Value
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Cancel = True
    Call Mdl_Dialoge.Dialogwechsel(Export_Speichern_unter, kein_Dialog)
End Sub
Attribute VB_Name = "uf_Logo"
Attribute VB_Base = "0{1742D2E7-A07C-43EC-A68A-E941D56E944A}{DC1EC446-8CDD-4143-8A1C-DFAEA39017F0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cb_Einfuegen_Click()
    If cbx_Wiederherstellen Then
        Call Mdl_Steuerelemente.Datev_Logo_einfuegen
    Else
        If Me.tbx_Datei_waehlen.Value = "" Then
            MsgBox "Es wurde keine Datei ausgew|fffd|hlt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                    " Bitte w|fffd|hlen Sie ein Bilddatei.", _
                    vbExclamation
            Exit Sub
        End If
        
        Call Mdl_Steuerelemente.Eigenes_Logo_einfuegen(Me.tbx_Datei_waehlen)
    End If
    
    Call Mdl_Dialoge.Dialogwechsel(Logo, kein_Dialog)
End Sub

Private Sub cb_Waehlen_Click()
    Me.tbx_Datei_waehlen = Mdl_Hilfsfunktionen.Datei_waehlen
End Sub

Private Sub cb_Abbrechen_Click()
    Call Mdl_Dialoge.Dialogwechsel(Logo, kein_Dialog)
End Sub

Private Sub cbx_Wiederherstellen_Change()
    If cbx_Wiederherstellen Then
        Me.tbx_Datei_waehlen.Value = ""
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Cancel = True
    cb_Abbrechen_Click
End Sub
Attribute VB_Name = "ws_Assistent"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ws_Listen"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ws_Listen_englisch"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ws_Logo"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "img_Datev_Logo, 197, 0, MSForms, Image"
Attribute VB_Control = "img_Eigenes_Logo, 208, 1, MSForms, Image"
Attribute VB_Name = "ws_Verwaltung"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' v($z+l
' !z{Z

INQUEST-PP=macro
