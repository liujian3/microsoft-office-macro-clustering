Attribute VB_Name = "Module1"
Sub Message()
    MsgBox "Audit Result"
    MsgBox ActiveWorkbook.Name
    'MsgBox Worksheets("Audit Summary").Range("C4").Value
        'Dim a As String
    'a = InputBox("Please input a date", , "test")
    'Worksheets(1).Name = "testing"
End Sub


Sub Send_Range()
   
   ' Select the range of cells on the active worksheet.
   ActiveSheet.Range("A3:AI4").Select
   
   ' Show the envelope on the ActiveWorkbook.
   ActiveWorkbook.EnvelopeVisible = False
   
   ' Set the optional introduction field thats adds
   ' some header text to the email body. It also sets
   ' the To and Subject lines. Finally the message
   ' is sent.
   With ActiveSheet.MailEnvelope
      .Introduction = "This is a sample worksheet."
      .Item.To = "Kilmurray.John@landsend.com"
      .Item.Subject = "My subject"
      .Item.Send
   End With
End Sub

Sub SendActiveWorkbook()
    ActiveWorkbook.SendMail _
    Recipients:=Array("Robert.lange@landsend.com", "Tammy.thielorn@landsend.com", "Cindy.Kane@landsend.com"), _
    Subject:="FINAL AUDIT - [Vendor Name/# - " & ActiveSheet.Range("C4") _
    & "]" & "   [PO# - " & ActiveSheet.Range("B8") _
    & "]" & "   [STYLE# - " & ActiveSheet.Range("B7") _
    & "]" & "   [STATUS: " & ActiveSheet.Range("J10") & "]"
    ' Close the excel and do not save the changes
    ' ActiveWorkbook.Close SaveChanges:=False
     ActiveWorkbook.Close
   
End Sub
Sub SaveWorkbookBackup()
Dim awb As Workbook, BackupFileName As String, i As Integer, OK As Boolean
    If TypeName(ActiveWorkbook) = "Nothing" Then Exit Sub
    Set awb = ActiveWorkbook
    If awb.Path = "" Then
        Application.Dialogs(xlDialogSaveAs).Show
    Else
        BackupFileName = awb.FullName
        i = 0
        While InStr(i + 1, BackupFileName, ".") > 0
            i = InStr(i + 1, BackupFileName, ".")
        Wend
        If i > 0 Then BackupFileName = Left(BackupFileName, i - 1)
        BackupFileName = BackupFileName & ".bak"
        OK = False
        On Error GoTo NotAbleToSave
        With awb
            Application.StatusBar = "Saving this workbook..."
            .Save
            Application.StatusBar = "Saving this workbook backup..."
            .SaveCopyAs BackupFileName
            OK = True
        End With
    End If
NotAbleToSave:
    Set awb = Nothing
    Application.StatusBar = False
    If Not OK Then
        MsgBox "Backup Copy Not Saved!", vbExclamation, ThisWorkbook.Name
    End If
End Sub


Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Function InRange(Range1 As Range, Range2 As Range) As Boolean
' returns True if Range1 is within Range2
Dim InterSectRange As Range
    Set InterSectRange = Application.Intersect(Range1, Range2)
    InRange = Not InterSectRange Is Nothing
    Set InterSectRange = Nothing
End Function

Private Sub Worksheet_Activate()
    Range("D3").Value = Worksheets("Audit Summary").Range("H10")
    Range("W3").Value = Worksheets("Audit Summary").Range("C9")
    Range("D4").Value = Worksheets("Audit Summary").Range("C4")
    Range("R4").Value = Worksheets("Audit Summary").Range("B7")
    Range("AE4").Value = Worksheets("Audit Summary").Range("B8")
    Range("AS1").Value = Worksheets("Audit Summary").Range("A4")
    
  
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
   If InRange(ActiveCell, Range("B12:N36")) _
    Or InRange(ActiveCell, Range("P12:AB36")) _
    Or InRange(ActiveCell, Range("AD12:AP36")) _
    Or InRange(ActiveCell, Range("AR12:BD36")) _
    Or InRange(ActiveCell, Range("B44:N78")) _
    Or InRange(ActiveCell, Range("P44:AB68")) _
    Or InRange(ActiveCell, Range("AD44:AP68")) Or InRange(ActiveCell, Range("AR44:BD68")) Then
    ' code to handle that the active cell is within the right range
    'MsgBox "Active Cell In Range!"
        If Target.Value = "X" Then
           Target.Select
           Selection.ClearContents
        Else
           Target.Value = "X"
        End If
    Else

    ' code to handle that the active cell is not within the right range
    '    MsgBox "Active Cell NOT In Range!"
    End If

     
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
