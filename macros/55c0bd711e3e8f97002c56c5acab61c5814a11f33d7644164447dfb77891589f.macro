Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| WorkBook|fffd||fffd||fffd||fffd|
'  |fffd||c42c||fffd||fffd|
'    Knowlbo Suzuki
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/09/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit
Private m_blnCloseProgress As Boolean ''|fffd|I|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Public m_blnCloseSysQuit As Boolean ''|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Book|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||303|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||fffd||fffd||343|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Workbook_Open()
    ''|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    sg_SetupCondition
    
    m_blnCloseProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    BookClose|fffd|O|fffd||303|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    Cansel:|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd|e|fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
    Dim lngBkCount As Long
    Dim blnCheck As Boolean

'    If m_blnCloseProgress Then Exit Sub
'    m_blnCloseProgress = True

    ThisWorkbook.Saved = True  ''|fffd||6d1||fffd||fffd|m|fffd|F|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|

    If g_blnQuitLaunncher Then Exit Sub

    If m_blnCloseSysQuit Then
        fg_WrapupSheets        ''|fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v
        Exit Sub
    End If

    If Workbooks.Count <> 1 Then  ''|fffd||fffd||fffd||fffd|BookOpen
        For lngBkCount = 1 To Workbooks.Count
            If Workbooks(lngBkCount).Name <> ThisWorkbook.Name Then
                If Workbooks(lngBkCount).Saved = False Then
                    MsgBox c_strMSG_OTHCLOSE, vbExclamation Or vbOKOnly, c_strNAME_SYSTEM
                    ThisWorkbook.Activate
                    Cancel = True
                    Exit Sub
                End If
            End If
        Next
    End If

''    ''|fffd||38f||6cc||fffd||fffd||311|O|fffd||fffd||fffd||fffd||fffd|U|fffd||58d||3c2||743|`|fffd|F|fffd|b|fffd|N
''    If fg_CheckPrepaidTransfer(blnCheck) Then
''        If blnCheck Then
''            If vbNo = MsgBox(c_strMSG_PP_QUESTR_Exit, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
''                 Cancel = True
''                 Exit Sub
''            End If
''        End If
''    End If

    fg_WrapupSheets        ''|fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Book|fffd||6d1||fffd||fffd|O|fffd||303|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    Cansel:|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||6d1||fffd||fffd||fffd||fffd||fffd||fffd||303|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||752||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    ''|fffd||6d1||fffd||fffd||356||fffd||fffd||fffd|
    Cancel = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd||fffd|O|fffd||303|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    Cansel:|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||fffd||fffd||fffd||348||350||752||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Workbook_BeforePrint(Cancel As Boolean)

    Dim objSheet As Worksheet
    Dim lngRowNo As Long
    Dim lngStartRowNo As Long
    Dim lngEndRowNo As Long
    Dim strArea As String
    Dim intColNo As Integer
    
    Set objSheet = ActiveSheet
    
    If objSheet Is Nothing Then
        Cancel = True
        Exit Sub
    End If
    
    intColNo = 2
    Select Case objSheet.Name
    Case "CashBook"
        lngStartRowNo = c_intCBDetailRowST
        lngEndRowNo = 70
    Case "BankBook"
        lngStartRowNo = c_intBBDetailRowST
        lngEndRowNo = 70
    Case "TransferSheet"
        lngStartRowNo = c_intTRDetailRowST
        lngEndRowNo = 70
    Case "LED04"
        Exit Sub
    Case "LED05"
        lngStartRowNo = c_intInvDetailRowST
        lngEndRowNo = 49
        intColNo = 21
    Case "LED06"
        lngStartRowNo = c_intASDetailRowST
        lngEndRowNo = 31
    Case "LED07"
        lngStartRowNo = c_intSCDetailRowST
        lngEndRowNo = 31
    Case "LED08"
        lngStartRowNo = 20
        lngEndRowNo = 29
    Case "LED09"
        lngStartRowNo = 35
        lngEndRowNo = 52
    Case "LED11"
        lngStartRowNo = 11
        lngEndRowNo = 40
    Case "LED12"
        lngStartRowNo = 10
        lngEndRowNo = 39
    Case "LED13"
        lngStartRowNo = 10
        lngEndRowNo = 39
    Case "LED14"
        lngStartRowNo = 17
        lngEndRowNo = 81
        
        '---- 2015/6/8 katoh
        'lngStartRowNo = 16
        'lngEndRowNo = 77
        '---------------
    Case "LED15"
        lngStartRowNo = 6
        lngEndRowNo = 61
    End Select
    
    lngRowNo = lngStartRowNo
    Do While lngRowNo <= 65536
        If objSheet.Cells(lngRowNo, intColNo).Value = "" Then
            Exit Do
        End If
        lngRowNo = lngRowNo + 1
    Loop
    
    ''|fffd||348||342||fffd||752||fffd|
    If objSheet.PageSetup.PrintArea = "" Then Exit Sub
    strArea = Left$(objSheet.PageSetup.PrintArea, InStrRev(objSheet.PageSetup.PrintArea, "$"))
    If lngRowNo - 1 > lngEndRowNo Then
        strArea = strArea & CStr(lngRowNo - 1)
    Else
        strArea = strArea & CStr(lngEndRowNo)
    End If
    objSheet.PageSetup.PrintArea = strArea

End Sub

Attribute VB_Name = "clsDBAccess"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd|A|fffd|N|fffd|Z|fffd|X|fffd|N|fffd||fffd||fffd|X
'  |fffd||c42c||fffd||fffd|
'    (|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{|fffd|@|fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'    |fffd|i|fffd||fffd||fffd|\|fffd||fffd||fffd||1d7||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd|@|fffd||fffd||fffd||283|N|fffd||fffd||fffd|X
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Option Explicit

Private Const m_strMSGTitle As String = "DB Access Class"               '|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|^|fffd|C|fffd|g|fffd||fffd|
Private Const m_strProviderSQL As String = "SQLOLEDB.1"                 'Provider|fffd||fffd| - SQL Server
''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
#If Win64 Then
    Private Const m_strProviderJET As String = "Microsoft.Ace.OLEDB.12.0"    'Provider|fffd||fffd| - Excel Book
    Private Const m_strExtndProp As String = "Excel 8.0;Jet OLEDB:Engine Type=35;HDR=YES"
#Else
    Private Const m_strProviderJET As String = "Microsoft.Jet.OLEDB.4.0"    'Provider|fffd||fffd| - Excel Book
    Private Const m_strExtndProp As String = "Excel 8.0;Jet OLEDB:Engine Type=35;HDR=YES"
#End If
'Private Const m_strProviderJET As String = "Microsoft.Jet.OLEDB.4.0"    'Provider|fffd||fffd| - Excel Book
'Private Const m_strExtndProp As String = "Excel 8.0;Jet OLEDB:Engine Type=35;HDR=YES"
''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
Private m_strServerName As String                                       '|fffd|T|fffd|[|fffd|o|fffd||fffd|
Private m_strDBName As String                                           'DB|fffd||fffd|
Private m_strUserID As String                                           'UserID
Private m_strPassword As String                                         'Password
Private m_strSQL As String                                              'SQL
Private m_lngCallPlace As enumCallPlace                                    '|fffd|{|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd|
Private m_bolProviderType As Boolean                                    'ProviderType True:SQL False:Excel
Private m_objErrLog As clsGErrorLog                                     '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
Private m_bLoging As Boolean                                            'True:|fffd||fffd||fffd|O|fffd||fffd||fffd|L|fffd|^|fffd|AFalse|fffd|F|fffd||fffd||fffd|O|fffd||fffd||fffd|L|fffd|^|fffd||fffd||fffd||202||fffd|

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)ServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    String - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|ServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get ServerName() As String
    ServerName = m_strServerName
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)ServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let ServerName(ByVal vNewValue As String)
    m_strServerName = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    DBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)DBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    String - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|DBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get DBName() As String
    DBName = m_strDBName
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    DBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FDBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)DBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let DBName(ByVal vNewValue As String)
    m_strDBName = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    String - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get UserID() As String
    UserID = m_strUserID
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FUserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let UserID(ByVal vNewValue As String)
    m_strUserID = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    Password|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)Password|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    String - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|Password|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get Password() As String
    UserID = m_strPassword
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    Password|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FPassword|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)Password|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let Password(ByVal vNewValue As String)
    m_strPassword = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    SQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)SQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    String - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|SQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get SQLString() As String
    SQLString = m_strSQL
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    SQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FSQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)SQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let SQLString(ByVal vNewValue As String)
    m_strSQL = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get CallPlace() As Long
    CallPlace = m_lngCallPlace
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FCallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let CallPlace(ByVal vNewValue As enumCallPlace)
    m_lngCallPlace = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ProviderType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)ProviderType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Boolean - |fffd||fffd||fffd||750||752||80b3||fffd||fffd||102||fffd||fffd||fffd|ProviderType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get ProviderType() As Boolean
    ProviderType = m_bolProviderType
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ProviderType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FCallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)ProviderType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let ProviderType(ByVal vNewValue As Boolean)
    m_bolProviderType = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    IsLoging|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Get)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1) SQL|fffd||303||fffd||fffd|O|fffd||fffd||fffd||20b7||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    (1)IsLoging|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2004/04/15|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Get IsLoging() As Boolean
    IsLoging = m_bLoging
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    IsLoging|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Let)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    vNewValue|fffd|FIsLoging|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1) SQL|fffd||303||fffd||fffd|O|fffd||fffd||fffd||20b7||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2004/04/15|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Property Let IsLoging(ByVal vNewValue As Boolean)
    m_bLoging = vNewValue
End Property

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Open|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADOConnection|fffd|FADODB.Connection|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Open|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd||fffd|B
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||316||7c2||fffd|l|fffd||fffd||502||fffd||fffd|B
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function openADOConnection( _
    ByRef m_objADOConnection As ADODB.Connection _
) As Long
    
On Error GoTo openADOConnection_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-openADOConnection"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    If m_strServerName = "" Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-openADOConnection"")", vbExclamation, m_strMSGTitle
'        MsgBox "ServerName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
'    If m_strDBName = "" Then
'        MsgBox "DBName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
'        Exit Function
'    End If
    
    With m_objADOConnection
        '.ConnectionTimeout = 30
        .ConnectionTimeout = 0
        .CommandTimeout = 0
        If (ProviderType) Then
            .Provider = m_strProviderSQL
            .Properties("Initial Catalog").Value = m_strDBName
        Else
            .Provider = m_strProviderJET
            .Properties("Extended Properties").Value = m_strExtndProp
        End If
        
' KnI 02/12/06 >>
        .Properties("Data Source").Value = m_strServerName
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||101|AMDB|fffd||30f||a347||fffd||142||fffd||fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|FilePath|fffd||fffd||fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|I
'        .Properties("Data Source").Value = "C:\2002JOB-DATA\NKFolder-|fffd|i|fffd||fffd||fffd|\|fffd||fffd|\|fffd|i|fffd||fffd||fffd|\|fffd||fffd|\Src\|fffd||fffd||fffd||6c1|||fffd|{|fffd||fffd|\PBAM.mdb"
' KnI 02/12/06 <<

        If m_strUserID = "" Then
            If (ProviderType) Then
                .Properties("USER ID").Value = "sa"
            Else
                '.Properties("USER ID").Value = "Admin"
            End If
        Else
            .Properties("USER ID").Value = m_strUserID
        End If
        If m_strPassword = "" Then
            '.Properties("Password").Value = ""
        Else
            .Properties("Password").Value = m_strPassword
        End If
        
        .Open
    End With
    
    openADOConnection = 0
    
    Exit Function
    
openADOConnection_Err:
    openADOConnection = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "openADOConnection " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Close|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADORecordset |fffd|FADODB.Recordset|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Close|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function closeADOConnection( _
    ByRef m_objADOConnection As ADODB.Connection _
) As Long
    
On Error GoTo closeADOConnection_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-closeADOConnection"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    m_objADOConnection.Close
    
    closeADOConnection = 0
    
    Exit Function
    
closeADOConnection_Err:
    closeADOConnection = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "closeADOConnection " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Transaction|fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADOConnection|fffd|FADODB.Connection|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Transaction|fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function startTransaction( _
    ByRef m_objADOConnection As ADODB.Connection _
) As Long
    
On Error GoTo startTransaction_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-startTransaction"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    m_objADOConnection.BeginTrans
    
    startTransaction = 0
    
    Exit Function
    
startTransaction_Err:
    startTransaction = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "startTransaction " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Transaction|fffd||fffd|commit|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADOConnection|fffd|FADODB.Connection|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Transaction|fffd||fffd|commit|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function commitTransaction( _
    ByRef m_objADOConnection As ADODB.Connection _
) As Long
    
On Error GoTo commitTransaction_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-commitTransaction"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    m_objADOConnection.CommitTrans
    
    commitTransaction = 0
    
    Exit Function
    
commitTransaction_Err:
    commitTransaction = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "commitTransaction " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Transaction|fffd||fffd|Rollback|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADOConnection|fffd|FADODB.Connection|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Transaction|fffd||fffd|Rollback|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function rollbackTransaction( _
    ByRef m_objADOConnection As ADODB.Connection _
) As Long
    
On Error GoTo rollbackTransaction_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-rollbackTransaction"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    m_objADOConnection.RollbackTrans
    
    rollbackTransaction = 0
    
    Exit Function
    
rollbackTransaction_Err:
    rollbackTransaction = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "rollbackTransaction " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Recordset|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Open|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADOConnection|fffd|FADODB.Connection|fffd||fffd||fffd||c2bce||fffd||fffd|
'    m_objADORecordset |fffd|FADODB.Recordset|fffd||fffd||fffd||c2bce||fffd||fffd|
'    m_srtSQL          |fffd|FSQL|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Recordset|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Open|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function openRecordset( _
    ByRef m_objADOConnection As ADODB.Connection, _
    ByRef m_objADORecordset As ADODB.Recordset, _
    Optional bIsUpdate As Boolean = True _
) As Long
    
On Error GoTo openRecordset_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-openRecordset"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    If m_strSQL = "" Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-openRecordset"")", vbExclamation, m_strMSGTitle
'        MsgBox "SQLString|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    If (m_bLoging) Then Call sg_InsertSQLLog(m_strSQL)
    
    ''DEBUG|fffd|p|fffd||241|A|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|SQL|fffd||fffd||fffd||fffd|LOG|fffd||242||342||fffd||fffd||102||fffd||fffd||fffd||fffd|B
    Call m_objErrLog.PrintOut(m_lngCallPlace, m_strSQL, Err, LEVEL_SQL)
       
    If (bIsUpdate) Then
        m_objADORecordset.Open m_strSQL, m_objADOConnection, adOpenDynamic, adLockOptimistic
    Else
        m_objADORecordset.Open m_strSQL, m_objADOConnection, adOpenStatic, adLockReadOnly
    End If
    
    openRecordset = 0
    
    Exit Function
    
openRecordset_Err:
    openRecordset = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "openRecordset " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||251||382||fffd||fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADOConnection|fffd|FADODB.Connection|fffd||fffd||fffd||c2bce||fffd||fffd|
'    m_srtSQL          |fffd|FSQL|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Recordset|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||251||382||fffd||fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'    Update, Insert, Delete
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function ExecuteSQL( _
    ByRef m_objADOConnection As ADODB.Connection _
) As Long
    
On Error GoTo ExecuteSQL_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-ExecuteSQL"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    If m_strSQL = "" Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-ExecuteSQL"")", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    If (m_bLoging) Then Call sg_InsertSQLLog(m_strSQL)
    
    ''Call m_objErrLog.PrintOut(m_lngCallPlace, m_strSQL, Err, LEVEL_SQL)
    
    m_objADOConnection.Execute m_strSQL
    
    ExecuteSQL = 0
    
    Exit Function
    
ExecuteSQL_Err:
    ExecuteSQL = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "ExecuteSQL " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    ADODB.Recordset|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Close|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    m_objADORecordset |fffd|FADODB.Recordset|fffd||fffd||fffd||c2bce||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||c2bce||fffd||fffd||fffd||fffd|ADODB.Recordset|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|Close|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    Long - |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd||242||fffd|0|fffd||fffd||502||fffd|
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||20a|O|fffd||30f||a347||fffd||242||fffd|Err.Number|fffd|l|fffd||fffd||502||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/08|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2016/08/01|fffd|FY.Watanabe          |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function closeRecordset( _
    ByRef m_objADORecordset As ADODB.Recordset _
) As Long
    
On Error GoTo closeRecordset_Err
    
    If m_lngCallPlace = ID_NULL Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "An exceptional error occurred. (Error code: ""M-clsDBAccess-closeRecordset"")", vbExclamation, m_strMSGTitle
'        MsgBox "CallPlace|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B", vbExclamation, m_strMSGTitle
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Function
    End If
    
    m_objADORecordset.Close
    
    closeRecordset = 0
    
    Exit Function
    
closeRecordset_Err:
    closeRecordset = Err.number
    
    Call m_objErrLog.PrintOut(m_lngCallPlace, "closeRecordset " & CStr(Err.number) & _
                            "-" & Err.Description, Err, LEVEL_ERROR)
    
End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    Class Initialize
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)Class Initialize
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Private Sub Class_Initialize()
    
    m_strServerName = ""
    m_strDBName = ""
    m_strUserID = ""
    m_strPassword = ""
    m_strSQL = ""
    m_lngCallPlace = ID_NULL
    ProviderType = True
    m_bLoging = True
    
    Set m_objErrLog = New clsGErrorLog
    
End Sub

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    Class Terminate
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)Class Terminate
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Private Sub Class_Terminate()
    
    Set m_objErrLog = Nothing
    
End Sub


Attribute VB_Name = "clsGErrorLog"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|O|fffd|o|fffd||343|N|fffd||fffd||fffd|X
'  |fffd||c42c||fffd||fffd|
'    |fffd||fffd||fffd||fffd||fffd|`|fffd|M
'  |fffd||fffd||fffd|l
'    |fffd||fffd||fffd|O|fffd||fffd||fffd|o|fffd||342||fffd||fffd||90bd||fffd||7c2||303|N|fffd||fffd||fffd|X
'-------------------------------------------------------------------------------
Option Explicit
'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|O|fffd||30d||c42c|
'
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd||fffd|B
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd||fffd|B
'  |fffd||fffd||fffd|l
'       |fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||148||fffd||fffd||fffd||fffd|l|fffd||315||3cd|X|fffd||342||fffd||fffd||202||fffd||fffd|A|fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10a2||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||113||fffd||fffd|e|fffd||142||fffd||fffd||fffd||fffd|A
'       |fffd||702||fffd|ByVal|fffd||242||fffd||fffd||103||fffd||fffd||fffd||fffd||fffd||fffd||308||fffd||fffd||fffd||182||fffd|K|fffd|v|fffd||302||fffd||fffd||fffd||fffd||fffd||302||142||fffd||fffd||202||fffd||fffd||302||141|A|fffd||fffd||fffd||fffd||fffd||142||fffd|
'       ByRef|fffd||142||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||1c2||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||80b5||fffd||701|[|fffd||fffd||fffd|B
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/08/07|fffd|FKnowlbo Y.Inomata|fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2002/10/15|fffd|FKnowlbo Y.Inomata|fffd|F|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
'   2002/11/01|fffd|FKnowlbo Y.Inomata|fffd|FExcel|fffd||fffd||fffd|s|fffd||8b||fffd||fffd|p|fffd||241|AApp.Path|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||702||fffd||fffd||fffd|
'   2016/08/01|fffd|FY.Watanabe       |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function PrintOut( _
    ByRef iCallNo As enumCallPlace, _
    ByRef strLog As String, _
    ByRef objErr As ErrObject, _
    Optional ByRef enumLevel As LOGLEVEL = LEVEL_ERROR _
) As Boolean
    
    Dim strFilePath As String
    Dim strCurDir As String
    Dim strCallPlace As String
    Dim intFile As Integer
    Dim strMode As String

    PrintOut = False

On Error GoTo Error
    '***********************************************
    'LOG|fffd|f|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|
    '***********************************************
    
    '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||383|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|I
    'strCurDir = ActiveWorkbook.Path & Application.PathSeparator & "LOG"
    ' 2003/06/26 |fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd|p|fffd|X|fffd||255||3cd|X suzuki
    strCurDir = g_strAppPath & "LOG"
    
    If Dir(strCurDir, vbDirectory) = "" Then
       MkDir strCurDir
    End If
   
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||381|A|fffd|V|fffd|K|fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|I
    strFilePath = strCurDir & Application.PathSeparator & Format$(Date, "yyyymmdd") & ".log"
'    strFilePath = strCurDir & "\" & Format$(Date, "yyyymmdd") & ".log"
    If Dir(strFilePath) = "" Then
        intFile = FreeFile
        Open strFilePath For Output As #1
'        Print #1, Date & ":" & Time & " |fffd||c42c||fffd||fffd| " & strFilePath & " |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||142||fffd|"
        Print #1, Date & ":" & Time & " Create " & strFilePath
        Close #1
    End If

    Select Case iCallNo
'        Case ID_NULL
'                strCallPlace = "<Error>"
'        Case ID_DomesticEdition
'                strCallPlace = "<|fffd||fffd||fffd||fffd||fffd||fffd|>"
'        Case ID_InternationalMainEdition
'                strCallPlace = "<|fffd||fffd||fffd||6d6|{|fffd||414||fffd|>"
'        Case ID_InternationalLocalEdition
'                strCallPlace = "<|fffd||fffd||fffd||6cc||fffd||fffd|n|fffd||fffd|>"
'        Case ID_AdministratorOnly
'                strCallPlace = "<|fffd||1d7||fffd||fffd||497|p>"
'        Case ID_MonthlyReport
'                strCallPlace = "<|fffd||fffd||18d|H|fffd||fffd||fffd||fffd||fffd||fffd||4d40f||fffd|>"
'        Case ID_ProfitPlan
'                strCallPlace = "<|fffd||fffd||fffd|v|fffd|v|fffd||fffd||394||fffd|\>"
'        Case ID_WorkTotal
'                strCallPlace = "<|fffd||493||fffd||fffd|W|fffd|v|fffd|\>"
'        Case ID_OutputProfitTotalChange
'                strCallPlace = "<|fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||74c|v|fffd||fffd||fffd||695|\>"
'        Case ID_OneYearExpectChange
'                strCallPlace = "<|fffd|P|fffd|N|fffd|x|fffd|\|fffd|z|fffd||fffd||fffd||fffd|>"
'        Case ID_Budget
'                strCallPlace = "<|fffd||fffd||fffd|s|fffd|\|fffd|Z>"
'        Case ID_FAADomesticEdition
'                strCallPlace = "<|fffd||fffd||fffd|n|fffd||756|{|fffd||414||fffd|>"
'        Case ID_FAALocalEdition
'                strCallPlace = "<|fffd||fffd||fffd|n|fffd||74c||fffd||fffd|n|fffd||fffd|>"
'        Case ID_TestCase
'                strCallPlace = "<|fffd|e|fffd|X|fffd|g|fffd|I>"
'        Case Else
'            Exit Function
        Case ID_NULL
                strCallPlace = "<Error>"
                
        Case ID_NKFAS_SS   'ID_|fffd||fffd||fffd|n|fffd||756|{|fffd||414||fffd|
                strCallPlace = "<NKFAS_SS>"
        Case ID_NKFAS      'ID_|fffd||fffd||fffd|n|fffd||74c||fffd||fffd|n|fffd||fffd|
                strCallPlace = "<NKFAS>"
        Case ID_TEST
                strCallPlace = "<TEST!>"
        Case Else
            Exit Function
    End Select
    
    Select Case enumLevel
    Case LEVEL_ERROR
        strMode = "[ERR]"
    Case LEVEL_LOG
        strMode = "[DBLOG]"
    Case LEVEL_DEBUG
        strMode = "[DBG]"
    End Select
    
    'LOG|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||255||fffd||fffd||fffd||fffd||fffd||311|}|fffd||fffd||fffd|E|fffd|E|fffd|E
    intFile = FreeFile
    Open strFilePath For Append As #1
    
    Print #1, strMode & strCallPlace & Format$(Now, "yyyy/mm/dd-hh:nn:ss") & ":" & strLog
    Close #1

' KnI 2002.10.15 >>
'    ' |fffd||fffd||fffd||fffd||fffd||142||fffd|MsgBox|fffd||355|s|fffd|v|fffd||182||fffd||fffd||702||fffd||fffd|B
'    ' |fffd||102||44f|o|fffd||fffd||fffd||303|l|fffd|X|fffd|g|fffd||14f||fffd||282||14a|e|fffd|X|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||34f|o|fffd||fffd||fffd||60a4||fffd||255||3cd|X|fffd||3cd|X|fffd||3cd|X|fffd|E|fffd|E|fffd|E
'
'    '***********************************************
'    'ErrObject|fffd||fffd||fffd|g|fffd||fffd||fffd||103||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd|
'    '***********************************************
'    If enumLevel = vbError Then
'       Dim msg As String
'       msg = "|fffd|G|fffd||fffd||fffd|[|fffd||50d||fffd| " & Str(objErr.Number) & objErr.Source & " |fffd||143|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & Chr$(13) & objErr.Description
'       MsgBox msg, vbExclamation, "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|", objErr.HelpFile, objErr.HelpContext
'    End If
' KnI 2002.10.15 <<

    PrintOut = True
    Exit Function
    
' KnI 2002.10.15 >>
Error:
    ' LOG|fffd|N|fffd||fffd||fffd|X|fffd||312||fffd||fffd||142||303|G|fffd||fffd||fffd|[|fffd||fffd||292|m|fffd||fffd||fffd||702||fffd|
    Dim msg As String
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    msg = "Errors in the clsGErrorLog [ErrNum&Src]" & Str(objErr.number) & objErr.Source & Chr$(13) & objErr.Description
    Call MsgBox(msg, vbExclamation)
'    msg = "clsGErrorLog|fffd||143|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B[ErrNum&Src]" & Str(objErr.number) & objErr.Source & Chr$(13) & objErr.Description
'    Call MsgBox(msg, vbExclamation, "clsGErrorLog|fffd||143|G|fffd||fffd||fffd|[")
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
' KnI 2002.10.15 <<

End Function

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd||fffd||fffd|X|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd|b|fffd|h
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd||fffd|B
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd||fffd|B
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/08/07|fffd|FKnowlbo Y.Inomata|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Private Sub Class_Initialize()
    
End Sub

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd||fffd||fffd|X|fffd||30f|I|fffd||fffd||fffd||fffd||fffd|\|fffd|b|fffd|h
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd||fffd|B
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|N|fffd||fffd||fffd|[|fffd|Y|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd||fffd|B
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2001/08/07|fffd|FKnowlbo Y.Inomata|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Private Sub Class_Terminate()

    Dim b As Boolean
    b = False
    
End Sub


Attribute VB_Name = "frmASEdit"
Attribute VB_Base = "0{5D8C4F3D-8DF9-41EF-BC3B-0F28BD2EA751}{AA25B714-F831-42A2-94E4-701B987DE54A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/02 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnASEditCancel_Click()
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Associate|fffd||fffd||fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|Associate|fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/02 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/03 : Knowlbo Nakarai : UpdateDate|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/15 : Knowlbo Nakarai : |fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a3c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub btnASEditOK_Click()

    Dim strASInfo As String     ''|fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||fffd|Associate|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim strASName As String     ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Associate|fffd||fffd|Name
    Dim strMSG As String        ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||142||303|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtASName.Value, "Name Of Associate", 0, 64) = True) Then
        txtASName.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtASCont.Value, "Contract Amount", 1) = True) Then
        txtASCont.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtASAdvance.Value, "Contract Advance", 1) = True) Then
        txtASAdvance.SetFocus
        Exit Sub
    End If
    
    ''|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||355|K|fffd|v|fffd||202||fffd||fffd||fffd||fffd||a25e||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
'    If (cboASCur.Value <> frmSetting_Main.cboPJTCur.Value) Then
'        MsgBox c_strMSG_NOEQUALCUR, vbOKOnly + vbCritical, c_strNAME_SYSTEM
'        cboASCur.Value = frmSetting_Main.cboPJTCur.Value
'        Exit Sub
'    End If

    ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
    If (checkData(strMSG) = True) Then
        If (g_blnBtnAdd = False) Then   ''Edit|fffd||30f||a347|
            g_blnASBtnOk = True
        End If
    ElseIf (checkData(strMSG) = False) Then
        MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Sub
    End If
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
    ''ADD|fffd||30f||a347||fffd||fffd||fffd|AEDIT|fffd||155||3cd|X|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||a347|(|fffd||fffd||fffd||30e||fffd||fffd|_|fffd||fffd| g_blnASBtnOk = True )
    If (g_blnBtnAdd = True Or g_blnASBtnOk = True) Then
        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||341|A|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||fffd|
        If (g_blnBtnAdd = True) Then
            ReDim Preserve g_typAryAsoInfoEdit(g_intASItemIndex)
        End If
        g_typAryAsoInfoEdit(g_intASItemIndex).m_strCode = lblAsoCode.Caption
        g_typAryAsoInfoEdit(g_intASItemIndex).m_strName = txtASName.Value
        g_typAryAsoInfoEdit(g_intASItemIndex).m_curContract = txtASCont.Value
        g_typAryAsoInfoEdit(g_intASItemIndex).m_curAdvance = txtASAdvance.Value
        g_typAryAsoInfoEdit(g_intASItemIndex).m_strCurrency = lblASCurrency.Caption
        g_typAryAsoInfoEdit(g_intASItemIndex).m_blnDirty = True
        
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||602||fffd||242||fffd||fffd||103||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
        ''Name|fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||fffd|
        strASName = fg_strUnity(g_typAryAsoInfoEdit(g_intASItemIndex).m_strName, 15, 0)
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
        strASInfo = g_typAryAsoInfoEdit(g_intASItemIndex).m_strCode & Space$(2) & strASName & _
                    Space$(2) & g_typAryAsoInfoEdit(g_intASItemIndex).m_strCurrency & Space$(1) & String(3, ".")
        If (g_blnBtnAdd = True) Then        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.ASList.AddItem (strASInfo)
        ElseIf (g_blnBtnAdd = False) Then   ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.ASList.List(g_intASItemIndex) = strASInfo
        End If
    End If

    ''|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    frmSetting_Main.ASList.ListIndex = 0
    
    ''OK|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd|A|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||82||fffd||fffd||fffd|
    If (g_blnBtnAdd = True) Then
        g_blnASBtnOk = True
    End If
    frmSetting_Main.btnASEdit.Enabled = True
    Unload Me
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function checkData(strMSG As String) As Boolean

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    
    ''|fffd||48f|W|fffd|`|fffd|F|fffd|b|fffd|N(Edit|fffd||30f||a347|)
    If (g_blnBtnAdd = False) Then
        If (g_typAryAsoInfoEdit(g_intASItemIndex).m_strName = txtASName.Value And _
            g_typAryAsoInfoEdit(g_intASItemIndex).m_curContract = txtASCont.Value And _
            g_typAryAsoInfoEdit(g_intASItemIndex).m_curAdvance = txtASAdvance.Value And _
            g_typAryAsoInfoEdit(g_intASItemIndex).m_strCurrency = lblASCurrency.Caption) Then
            
            strMSG = c_strMSG_NOEDIT
            checkData = False
            Exit Function
        End If
    End If
    ''|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
    If (frmSetting_Main.ASList.ListCount > 0) Then
        For intCount = LBound(g_typAryAsoInfoEdit) To UBound(g_typAryAsoInfoEdit)
            If (g_typAryAsoInfoEdit(intCount).m_strName = txtASName.Value) Then
                If (g_blnBtnAdd = False) And (frmSetting_Main.ASList.ListIndex = intCount) Then
                    Exit For
                End If
                strMSG = c_strMSGTr_EXISTDATA
                checkData = False
                Exit Function
            End If
        Next
    End If
    
    checkData = True
    
End Function

Attribute VB_Name = "frmBBEdit"
Attribute VB_Base = "0{3CE25C6F-E7C5-4B62-8BE9-E4F5C0E5CE12}{54A2038E-47E8-4FAF-A3D6-4803BB679179}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnBBEditCancel_Click()
    Unload Me
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd||fffd||fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|BankBook|fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/26 : Knowlbo Nakarai : UseRemittance|fffd||752||83c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/01/03 : Knowlbo Nakarai : UpdateDate|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/15 : Knowlbo Nakarai : |fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a3c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2005/04/25 : Knowlbo Suzuki  : Cash Bank Book|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd|10->16|fffd||24f|C|fffd||fffd|
'   2018/12/07 : Y.Watanabe      : Ticket3 BBMaster|fffd||fffd|BeneficiaryName|fffd||315||fffd||fffd||fffd||fffd||52dc2||fffd||3cd|X|fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
Private Sub btnBBEditOK_Click()
    Dim intCount As Integer                     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strBBInfo As String                     ''|fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||fffd|BankBook|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim strName As String                       ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd|BankName
    Dim strUseRemit As String                   ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd|UseRemittance
    Dim strPurpose As String                    ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd|Purpose
    Dim blnSetUseRemit As Boolean               ''UseRemittance|fffd||752||fffd|t|fffd||fffd||fffd|O
    Dim blnCreateTr As Boolean                  ''Transfer|fffd||c42c||fffd|t|fffd||fffd||fffd|O
    Dim strTRCurrency As String                 ''Transfer|fffd|pCurrency
    Dim intTRPurpose As Integer                 ''Transfer|fffd|pPurpose(NK/JV)
    Dim strMSG As String                        ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||142||303|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtBBBank.Value, "Name Of Bank", 0, 128) = True) Then
        txtBBBank.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtBBBranch.Value, "Branch", 0, 128) = True) Then
        txtBBBranch.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtBBAddress.Value, "Address", 0, 128) = True) Then
        txtBBAddress.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtBBAcountT.Value, "Type Of Account", 0, 32) = True) Then
        txtBBAcountT.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtBBAccountNo.Value, "Account No.", 0, 32) = True) Then
        txtBBAccountNo.SetFocus
        Exit Sub
    ''<<<2018.12.07 Mod By Y.Watanabe Ticket3 BBMaster|fffd||fffd|BeneficiaryName|fffd||315||fffd||fffd||fffd||fffd||52dc2||fffd||3cd|X|fffd||fffd||fffd||fffd|
    ElseIf (fg_InputCheck(txtBBBenefic.Value, "Beneficiary's Name", 0, 256) = True) Then
'    ElseIf (fg_InputCheck(txtBBBenefic.Value, "Beneficiary's Name", 0, 64) = True) Then
    ''>>>2018.12.07 Mod By Y.Watanabe Ticket3 BBMaster|fffd||fffd|BeneficiaryName|fffd||315||fffd||fffd||fffd||fffd||52dc2||fffd||3cd|X|fffd||fffd||fffd||fffd|
        txtBBBenefic.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtBBSigner.Value, "Signer Of A/C", 0, 128) = True) Then
        txtBBSigner.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtBBMemo.Value, "FreeMemo", 3, 128) = True) Then
        txtBBMemo.SetFocus
        Exit Sub
    End If
    
    ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
    If (checkData(strMSG) = True) Then
        If (g_blnBtnAdd = False) Then   ''Edit|fffd||30f||a347|
            g_blnBBBtnOk = True
        End If
    ElseIf (checkData(strMSG) = False) Then
        MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Sub
    End If
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
    ''ADD|fffd||30f||a347||fffd||fffd||fffd|AEDIT|fffd||155||3cd|X|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||a347|(|fffd||fffd||fffd||30e||fffd||fffd|_|fffd||fffd| g_blnBBBtnOk = True )
    If (g_blnBtnAdd = True Or g_blnBBBtnOk = True) Then
        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||341|A|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||fffd|
        If (g_blnBtnAdd = True) Then
            ReDim Preserve g_typAryBBInfoEdit(g_intBBItemIndex)
        End If
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strCode = lblBBLedger.Caption
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strCurrency = cboBBCur.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strName = txtBBBank.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strBranch = txtBBBranch.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strAdress = txtBBAddress.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strAccountType = txtBBAcountT.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strAccountNo = txtBBAccountNo.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strBeneficiaryName = txtBBBenefic.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strSigner = txtBBSigner.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose = cboBBPurpose.ListIndex
        ''|fffd||fffd|UseRemittance|fffd||fffd|
        If (chkUseRemit.Value = True) Then  'Check|fffd||fffd||fffd||fffd||fffd||a347|
            ''|fffd||752||80b3||fffd||fffd||102||fffd||fffd||93ca||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|A|fffd||752||80b3||fffd||fffd||102||fffd||fffd||9340||fffd||682||315||48f|W|fffd||30f||a347||fffd||341|A|fffd|`|fffd|F|fffd|b|fffd|NOK
            If (g_blnUseRemit = False) Or (g_intUseRemitIndex = g_intBBItemIndex) Then
                g_typAryBBInfoEdit(g_intBBItemIndex).m_blnUseRemittance = chkUseRemit.Value
                g_intUseRemitIndex = g_intBBItemIndex
                ''UseRemittance|fffd||310||752||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
                g_blnUseRemit = True
            Else
            ''|fffd||fffd||fffd||250||752||80b3||fffd||fffd||102||93ca||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|o|fffd||fffd|
                If MsgBox(c_strMSG_USEREMIT, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbOK Then ''|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||a347|
                    g_typAryBBInfoEdit(g_intBBItemIndex).m_blnUseRemittance = chkUseRemit.Value
                    ''|fffd||fffd||fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|UseRemittance|fffd||fffd|False|fffd||242||fffd||fffd||202||fffd||fffd||fffd||382||202||fffd||202||fffd|
                    g_typAryBBInfoEdit(g_intUseRemitIndex).m_blnUseRemittance = False
                    g_typAryBBInfoEdit(g_intUseRemitIndex).m_blnDirty = True
                    ''BankBook|fffd||fffd||fffd|X|fffd|g|fffd||242||fffd||fffd||fffd||fffd|f|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||382||202||fffd||202||fffd|
                    strName = fg_strUnity(g_typAryBBInfoEdit(g_intUseRemitIndex).m_strName, 13, 0)
                    ''NK/JV|fffd||fffd||752||fffd|(|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p)
                    If g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose = 0 Then
                        strPurpose = "NK main"
                    Else
                        strPurpose = "JV main"
                    End If
                    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
                    strBBInfo = g_typAryBBInfoEdit(g_intUseRemitIndex).m_strCode & Space$(2) & _
                                g_typAryBBInfoEdit(g_intUseRemitIndex).m_strCurrency & Space$(2) & strName & _
                                Space$(2) & strPurpose & Space$(2) & Space$(3) & Space$(1) & String(3, ".")
                    frmSetting_Main.BBList.List(g_intUseRemitIndex) = strBBInfo
                    g_intUseRemitIndex = g_intBBItemIndex
                    ''UseRemittance|fffd||fffd||fffd||752||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
                    g_blnUseRemit = True
                Else    ''|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||a347|
                    Exit Sub
                End If
            End If
        ElseIf (chkUseRemit.Value = False) Then 'Check|fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347|
            g_typAryBBInfoEdit(g_intBBItemIndex).m_blnUseRemittance = chkUseRemit.Value
            ''UseRemittance|fffd||310||752||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
            blnSetUseRemit = False
            If (g_blnBBNoArray = False) Then
                For intCount = LBound(g_typAryBBInfoEdit) To UBound(g_typAryBBInfoEdit)
                    If (g_typAryBBInfoEdit(intCount).m_blnUseRemittance = True) Then
                        blnSetUseRemit = True
                    End If
                Next
                If (blnSetUseRemit = False) Then
                    g_blnUseRemit = False
                End If
            End If
        End If
        g_typAryBBInfoEdit(g_intBBItemIndex).m_strMemo = txtBBMemo.Value
        g_typAryBBInfoEdit(g_intBBItemIndex).m_blnDirty = True
        
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||602||fffd||242||fffd||fffd||103||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
        ''BankName|fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||fffd|
        strName = fg_strUnity(g_typAryBBInfoEdit(g_intBBItemIndex).m_strName, 13, 0)
        ''NK/JV|fffd||fffd||752||fffd|(|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p)
        If g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose = 0 Then
            strPurpose = "NK main"
        Else
            strPurpose = "JV main"
        End If
        ''UseRimittance|fffd||fffd||752||fffd|(|fffd|\|fffd||fffd||fffd|p)
        If (g_typAryBBInfoEdit(g_intBBItemIndex).m_blnUseRemittance = True) Then
            strUseRemit = "Rem"
        Else
            strUseRemit = Space$(3)
        End If
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
        strBBInfo = g_typAryBBInfoEdit(g_intBBItemIndex).m_strCode & Space$(2) & _
                    g_typAryBBInfoEdit(g_intBBItemIndex).m_strCurrency & Space$(2) & strName & _
                    Space$(2) & strPurpose & Space$(2) & strUseRemit & Space$(1) & String(3, ".")
        If (g_blnBtnAdd = True) Then        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.BBList.AddItem (strBBInfo)
        ElseIf (g_blnBtnAdd = False) Then   ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.BBList.List(g_intBBItemIndex) = strBBInfo
        End If
        
        ''|fffd||fffd||fffd||fffd||fffd|z|fffd||42a82|P|fffd||90||fffd||382||242||142||fffd||fffd||fffd||302||143|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
        If (g_blnBBNoArray = True) Then
            g_blnBBNoArray = False
        End If
        
        ''|fffd||fffd|Transfer|fffd||fffd||fffd||fffd||fffd||fffd|
        If (g_blnBtnAdd = True) Then ''ADD|fffd||302||182||fffd||fffd||250|V|fffd||fffd||fffd||fffd|Transfer|fffd||fffd||fffd||fffd||fffd|
            ''|fffd||fffd|r|fffd|p|fffd||312||289||742||197|p|fffd|r|fffd||fffd||752||fffd|
            strTRCurrency = g_typAryBBInfoEdit(g_intBBItemIndex).m_strCurrency
            intTRPurpose = g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose
            
            If g_blnTRNoArray = True Then       ''1|fffd||82||fffd|Transfer|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd|
                blnCreateTr = True  ''Transfer|fffd||c42c|
            ElseIf g_blnTRNoArray = False Then  ''Transfer|fffd||fffd||fffd||fffd||fffd||fffd||182||fffd|
                For intCount = LBound(g_typAryTRInfoEdit) To UBound(g_typAryTRInfoEdit)
                    ''|fffd||fffd||fffd||fffd||fffd||289||fffd|,|fffd|p|fffd|r|fffd||fffd|Transfer|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
                    If (g_typAryTRInfoEdit(intCount).m_strCurrency = strTRCurrency) And _
                            (g_typAryTRInfoEdit(intCount).m_intPurpose = intTRPurpose) Then
                        blnCreateTr = False ''Transfer|fffd||c42c||fffd||fffd||fffd||202||fffd|
                        Exit For
                    Else
                        blnCreateTr = True  ''Transfer|fffd||c42c|
                    End If
                Next
            End If
            
            ''Transfer|fffd||c42c|(NK|fffd||fffd|JV|fffd||fffd||fffd||148||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
            If blnCreateTr = True Then
                If (g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose = 0) Then
                    Call sg_SetTransfer(strTRCurrency, intTRPurpose)
                ElseIf (g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose = 1) Then
                    Call sg_SetTransfer(strTRCurrency, intTRPurpose)
                End If
            End If
        End If
    End If
    
    ''|fffd|z|fffd||42a93|o|fffd|^|fffd||fffd||fffd||fffd||20f||30a0||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
    If (frmSetting_Main.BBList.ListCount >= c_lngMAX_CBTLedgerBook) Then
        frmSetting_Main.btnBBAdd.Enabled = False
    End If
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    frmSetting_Main.BBList.ListIndex = 0
    
    ''OK|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    If (g_blnBtnAdd = True) Then
        g_blnBBBtnOk = True
    End If
    
    ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    frmSetting_Main.btnBBEdit.Enabled = True
    
    ''|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||82||fffd||fffd||fffd|
    Unload Me
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c||fffd|i|fffd||690|A|fffd|j
'-----------------------------------------------------------------
Private Function checkData(strMSG As String) As Boolean

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    
    ''|fffd||48f|W|fffd|`|fffd|F|fffd|b|fffd|N(Edit|fffd||30f||a347|)
    If (g_blnBtnAdd = False) Then
        If (g_typAryBBInfoEdit(g_intBBItemIndex).m_strName = txtBBBank.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strBranch = txtBBBranch.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strBranch = txtBBBranch.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strAdress = txtBBAddress.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strAccountType = txtBBAcountT.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strAccountNo = txtBBAccountNo.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strBeneficiaryName = txtBBBenefic.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strSigner = txtBBSigner.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_blnUseRemittance = chkUseRemit.Value) And _
            (g_typAryBBInfoEdit(g_intBBItemIndex).m_strMemo = txtBBMemo.Value) Then
            
            strMSG = c_strMSG_NOEDIT
            checkData = False
            Exit Function
        End If
    End If
    ''|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
    If (g_blnBBNoArray = False) Then
        For intCount = LBound(g_typAryBBInfoEdit) To UBound(g_typAryBBInfoEdit)
            If (g_typAryBBInfoEdit(intCount).m_strCurrency = cboBBCur.Value) And _
                (g_typAryBBInfoEdit(intCount).m_strName = txtBBBank.Value) And _
                (g_typAryBBInfoEdit(intCount).m_strBranch = txtBBBranch.Value) And _
                (g_typAryBBInfoEdit(intCount).m_strAccountType = txtBBAcountT.Value) And _
                (g_typAryBBInfoEdit(intCount).m_strAccountNo = txtBBAccountNo.Value) And _
                (g_typAryBBInfoEdit(intCount).m_intPurpose = cboBBPurpose.ListIndex) Then
                If (g_blnBtnAdd = False) And (frmSetting_Main.BBList.ListIndex = intCount) Then
                    Exit For
                End If
                strMSG = c_strMSGTr_EXISTDATA
                checkData = False
                Exit Function
            End If
        Next
    End If
    ''JVMainUse|fffd||30f||a347||fffd||fffd|UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (cboBBPurpose.ListIndex = 1) Then
        If (chkUseRemit.Value = True) Then
            strMSG = c_strMSGCmn_NOJVUSEREMIT
            checkData = False
            Exit Function
        End If
    End If
    
    checkData = True
    
End Function

Attribute VB_Name = "frmCBEdit"
Attribute VB_Base = "0{86A49844-1ACE-483F-ABDD-E21FDF0A3DCD}{A7C527EB-B6F9-4DC0-ACB4-FB3A3B8379AD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/03 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnCBEditCancel_Click()
    Unload Me
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Sub-Contractor|fffd||fffd||fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|Sub-Contractor|fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|B
'   (2)|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||143||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|B
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/03 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/07 : Knowlbo Nakarai : |fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||109cc||fffd||fffd||fffd||fffd||fffd|,OK|fffd|{|fffd|^|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||1c9||fffd|
'   2002/10/09 : Knowlbo Nakarai : |fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2002/12/20 : knowlbo Nakarai : Remibursable|fffd|R|fffd||fffd||fffd|{|fffd||1c9||fffd|
'   2002/12/26 : Knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||83c8||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/06 : Knowlbo Nakarai : SubConCode|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||d3dc|
'   2003/01/15 : Knowlbo Nakarai : |fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a3c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2005/04/25 : Knowlbo Suzuki  : Cash Bank Book|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd|10->16|fffd||24f|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub btnCBEditOK_Click()

    Dim strCBInfo As String     ''|fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||fffd|CashBook|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim strName As String       ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|CashBook|fffd||fffd|CasherName
    Dim strCBPurpose As String  ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|Purpose|fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim blnCreateTr As Boolean  ''Transfer|fffd||c42c||fffd|t|fffd||fffd||fffd|O
    Dim strTRCurrency As String ''Transfer|fffd|pCurrency
    Dim intTRPurpose As Integer ''Transfer|fffd|pPurpose(NK/JV)
    Dim strMSG As String        ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||142||303|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtCBCasher.Value, "Name Of Casher", 0, 64) = True) Then
        txtCBCasher.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtCBMemo.Value, "FreeMemo", 3, 128) = True) Then
        txtCBMemo.SetFocus
        Exit Sub
    Else    ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
        If (f_CheckData(strMSG) = True) Then
            If (g_blnBtnAdd = False) Then   ''Edit|fffd||30f||a347|
                g_blnCBBtnOk = True
            End If
        ElseIf (f_CheckData(strMSG) = False) Then
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            Exit Sub
        End If
    End If
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
    ''ADD|fffd||30f||a347||fffd||fffd||fffd|AEDIT|fffd||155||3cd|X|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||a347|(|fffd||fffd||fffd||30e||fffd||fffd|_|fffd||fffd| g_blnCBBtnOk = True )
    If (g_blnBtnAdd = True Or g_blnCBBtnOk = True) Then
        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||341|A|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||fffd|
        If (g_blnBtnAdd = True) Then
            ReDim Preserve g_typAryCBInfoEdit(g_intCBItemIndex)
        End If
        g_typAryCBInfoEdit(g_intCBItemIndex).m_strCode = lblLedger.Caption
        g_typAryCBInfoEdit(g_intCBItemIndex).m_strCurrency = cboCBCur.Value
        g_typAryCBInfoEdit(g_intCBItemIndex).m_strCasher = txtCBCasher.Value
        g_typAryCBInfoEdit(g_intCBItemIndex).m_intPurpose = cboCBPurpose.ListIndex
        g_typAryCBInfoEdit(g_intCBItemIndex).m_strMemo = txtCBMemo.Value
        g_typAryCBInfoEdit(g_intCBItemIndex).m_blnDirty = True
        
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||602||fffd||242||fffd||fffd||103||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
        ''CasherName|fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||a0b7||fffd||fffd|
        strName = fg_strUnity(g_typAryCBInfoEdit(g_intCBItemIndex).m_strCasher, 15, 0)
        ''NK/JV|fffd||656a|
        If g_typAryCBInfoEdit(g_intCBItemIndex).m_intPurpose = 0 Then
            strCBPurpose = c_strPurposeNK
        Else
            strCBPurpose = c_strPurposeJV
        End If
        
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
        strCBInfo = g_typAryCBInfoEdit(g_intCBItemIndex).m_strCode & Space$(2) & _
                g_typAryCBInfoEdit(g_intCBItemIndex).m_strCurrency & Space$(2) & _
                strName & Space$(2) & strCBPurpose
                
        If (g_blnBtnAdd = True) Then        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.CBList.AddItem (strCBInfo)
        ElseIf (g_blnBtnAdd = False) Then   ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.CBList.List(g_intCBItemIndex) = strCBInfo
        End If
        
        ''|fffd||fffd||fffd||fffd||fffd|z|fffd||42a82|P|fffd||90||fffd||382||242||142||fffd||fffd||fffd||302||143|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
        If (g_blnCBNoArray = True) Then
            g_blnCBNoArray = False
        End If
        
        ''|fffd||fffd|Transfer|fffd||fffd||fffd||fffd||fffd||fffd|
        If (g_blnBtnAdd = True) Then ''ADD|fffd||302||182||fffd||fffd||250|V|fffd||fffd||fffd||fffd|Transfer|fffd||fffd||fffd||fffd||fffd|
            ''|fffd||fffd|r|fffd|p|fffd||312||289||742||197|p|fffd|r|fffd||fffd||752||fffd|
            strTRCurrency = g_typAryCBInfoEdit(g_intCBItemIndex).m_strCurrency
            intTRPurpose = g_typAryCBInfoEdit(g_intCBItemIndex).m_intPurpose
            
            If g_blnTRNoArray = True Then       ''1|fffd||82||fffd|Transfer|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd|
                blnCreateTr = True  ''Transfer|fffd||c42c|
            ElseIf g_blnTRNoArray = False Then  ''Transfer|fffd||fffd||fffd||fffd||fffd||fffd||182||fffd|
                For intCount = LBound(g_typAryTRInfoEdit) To UBound(g_typAryTRInfoEdit)
                    ''|fffd||fffd||fffd||fffd||fffd||289||fffd|,|fffd|p|fffd|r|fffd||fffd|Transfer|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
                    If (g_typAryTRInfoEdit(intCount).m_strCurrency = strTRCurrency) And _
                            (g_typAryTRInfoEdit(intCount).m_intPurpose = intTRPurpose) Then
                        blnCreateTr = False ''Transfer|fffd||c42c||fffd||fffd||fffd||202||fffd|
                        Exit For
                    Else
                        blnCreateTr = True  ''Transfer|fffd||c42c|
                    End If
                Next
            End If
            
            ''Transfer|fffd||c42c|(NK|fffd||fffd|JV|fffd||fffd||fffd||148||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
            If blnCreateTr = True Then
                If (g_typAryCBInfoEdit(g_intCBItemIndex).m_intPurpose = 0) Then
                    Call sg_SetTransfer(strTRCurrency, intTRPurpose)
                ElseIf (g_typAryCBInfoEdit(g_intCBItemIndex).m_intPurpose = 1) Then
                    Call sg_SetTransfer(strTRCurrency, intTRPurpose)
                End If
            End If
        End If

    End If
    
    ''|fffd|z|fffd||42a93|o|fffd|^|fffd||fffd||fffd||fffd||20f||30a0||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
    If (frmSetting_Main.CBList.ListCount >= c_lngMAX_CBTLedgerBook) Then
        frmSetting_Main.btnCBAdd.Enabled = False
    End If
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    frmSetting_Main.CBList.ListIndex = 0
    
    ''OK|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd|A|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||82||fffd||fffd||fffd|
    If (g_blnBtnAdd = True) Then
        g_blnCBBtnOk = True
    End If
    frmSetting_Main.btnCBEdit.Enabled = True
    Unload Me
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_CheckData(strMSG As String) As Boolean

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^

    ''|fffd||48f|W|fffd|`|fffd|F|fffd|b|fffd|N(Edit|fffd||30f||a347|)
    If (g_blnBtnAdd = False) Then
        If (g_typAryCBInfoEdit(g_intCBItemIndex).m_strCasher = txtCBCasher.Value And _
                    g_typAryCBInfoEdit(g_intCBItemIndex).m_strMemo = txtCBMemo.Value) Then
            strMSG = c_strMSG_NOEDIT
            f_CheckData = False
            Exit Function
        End If
    End If
    ''|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
    If (g_blnCBNoArray = False) Then
        For intCount = LBound(g_typAryCBInfoEdit) To UBound(g_typAryCBInfoEdit)
            If (g_typAryCBInfoEdit(intCount).m_strCurrency = cboCBCur.Value) And _
                (g_typAryCBInfoEdit(intCount).m_strCasher = txtCBCasher.Value) And _
                    (g_typAryCBInfoEdit(intCount).m_intPurpose = cboCBPurpose.ListIndex) Then
                If (g_blnBtnAdd = False) And (frmSetting_Main.CBList.ListIndex = intCount) Then
                    Exit For
                End If
                strMSG = c_strMSGTr_EXISTDATA
                f_CheckData = False
                Exit Function
            End If
        Next
    End If
    
    f_CheckData = True
    
End Function

Attribute VB_Name = "frmCaution"
Attribute VB_Base = "0{87D2CD50-D90C-4D52-9B8E-0A9E958FAB77}{59354431-8FA4-43A0-9D25-EF00904884CE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Caution|fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

Private m_strCause As String          ''|fffd|v|fffd||fffd|
Private m_strTarget As String         ''|fffd||38f||fffd|
Private m_strOutputFile As String     ''|fffd|o|fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|l

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Caution|fffd|\|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Caution|fffd|\|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()
    m_strCause = ""
    m_strTarget = ""
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cause|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Cause|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let pCause(ByRef strValue As String)
    m_strCause = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Target|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Target|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let pTarget(ByRef strValue As String)
    m_strTarget = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OutputFile|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|o|fffd||351||38f||fffd|File
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OutputFile|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let pOutputFile(ByRef strValue As String)
    m_strOutputFile = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Caution|fffd|\|fffd||fffd||fffd|m|fffd|F|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Caution|fffd|\|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdbtnOK_Click()
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Caution|fffd|\|fffd||fffd|Text|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||343|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Caution|fffd|\|fffd||fffd|Text|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdbtnTextOut_Click()
    Dim strOutFile As String
    Dim strDefaultFile As String
    Dim strOutText As String
    Dim intFile As Integer
    
    strDefaultFile = m_strOutputFile

    ''FILEDIALOG|fffd||fffd|LOAD
    ChDrive Left$(g_strAppPath, 1)            ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|h|fffd||fffd||fffd|C|fffd|u|fffd||315||3cd|X
    ChDir Left$(g_strAppPath, Len(g_strAppPath)) ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315||3cd|X
    strOutFile = Application.GetSaveAsFilename(strDefaultFile, c_strFD_TEXTFILETYPE, , "Output File")
    If (strOutFile = "False") Or (strOutFile = "") Then  ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        GoTo LBL_END
    End If
    
    strOutText = m_strCause & vbCrLf & m_strTarget & vbCrLf
    strOutText = strOutText & lbl1.Caption & vbCrLf
    strOutText = strOutText & "-----------------------------------------" & vbCrLf
    strOutText = strOutText & txtMessage.Text
    strOutText = strOutText & vbCrLf
    strOutText = strOutText & "-----------------------------------------" & vbCrLf
    
    intFile = FreeFile
    Open strOutFile For Append As #intFile
    Print #intFile, strOutText     ''|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Close #intFile
    
LBL_END:
    Unload Me
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Caution|fffd|\|fffd||fffd|Text|fffd||fffd||fffd|e|fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||752||8576||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Caution|fffd|\|fffd||fffd|Text|fffd||fffd||fffd|e|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub SetTextValue( _
    ByRef strText As String _
)
    frmCaution.txtMessage.SetFocus
    frmCaution.txtMessage.Text = strText
    frmCaution.txtMessage.CurLine = 0
End Sub

Attribute VB_Name = "frmConnect_Setting"
Attribute VB_Base = "0{06A0B1A3-6704-4CAF-BAA7-88A2510E4B2F}{04A9A188-FA7C-4C84-B110-FBE3B9C046E0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| ConnectionCode|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_typAryConnectInfo() As clsConnectInfo     ''ConnectionCode|fffd||fffd||fffd|z|fffd||fffd|
Private m_typAryAddIndex() As Long                  ''Addition|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|z|fffd||fffd|
Private m_typAryEditIndex() As Long                 ''Edition|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|z|fffd||fffd|
Private m_typAryEditCode() As String                ''EditionCODE|fffd|z|fffd||fffd|(Office,NKStaff|fffd|p)

Private m_lngAddCount As Long                       ''Add|fffd||fffd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Private m_lngEditCount As Long                      ''Edit|fffd||fffd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Private m_intEditItemIndex As Integer               ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X(Edit|fffd||fffd||fffd||24e|g|fffd|p)
Private m_intMaxCode As Integer                     ''|fffd||38f||6c3|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|CODE|fffd||151||fffd|l

Private m_blnConnectInfo As Boolean                 ''ConnectionCode|fffd||fffd||fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Private m_blnAddition As Boolean                    ''Addition|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Private m_blnEdition As Boolean                     ''Edition|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O

Private m_blnDBConnectInfo As Boolean               ''DB|fffd|o|fffd|^|fffd||3c2||fffd|ConnectionCode|fffd||fffd||fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   ConnectionCode|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> CONNECTION CODE
'   (2)<String |fffd|^> CONNECTION NAME
'   (3)<String |fffd|^> CATEGORY
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Type clsConnectInfo    ''ConnectionCode|fffd|\|fffd||fffd|
    m_strCode As String         ''CONNECTION CODE
    m_strName As String         ''CONNECTION NAME
    m_strCategory As String     ''CATEGORY
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||fffd||68f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()

    Dim intCount As Integer     ''|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X

    ''DB|fffd||691||fffd||fffd|p
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||fffd|
    Me.Caption = c_strNAME_SYSTEM
    
    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        cmdOK.Enabled = g_blnLedgerModify
    Else
        cmdOK.Enabled = False
    End If
'    cmdOK.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    ''|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnConnCodeEdit = False
    m_blnAddition = False
    m_blnEdition = False
    
    ''Addition|fffd|EEdition|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_lngAddCount = 0
    m_lngEditCount = 0
    
    Application.Cursor = xlWait
    DoEvents
    
    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
    sg_SetScreenUpdate False
    

On Error GoTo LBL_ERR
    
    ''ConnectionCode|fffd|f|fffd|[|fffd|^|fffd||64fe|
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ConnCode & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.ConnectionCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ConnCode
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        intCount = 0
        ''|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||6c2||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[
        Do Until adoRs.EOF
            ReDim Preserve m_typAryConnectInfo(intCount)
            m_typAryConnectInfo(intCount).m_strCode = adoRs.Fields("ConnectionCode").Value
            m_typAryConnectInfo(intCount).m_strName = adoRs.Fields("ConnectionName").Value
            m_typAryConnectInfo(intCount).m_strCategory = adoRs.Fields("Category").Value
            adoRs.MoveNext
            intCount = intCount + 1
        Loop
        ''ConnectionCode|fffd||fffd||fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
        m_blnConnectInfo = True
    End If
    Call objdba.closeRecordset(adoRs)
    
    
    ''AssociateCode|fffd||64fe||fffd|iAssociate|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a||702||7c2||fffd|j
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.AssociateCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
        GoTo LBL_ERR
    End If
    
    If (adoRs.EOF = False) Then
        Do Until adoRs.EOF
            ReDim Preserve m_typAryConnectInfo(intCount)
            m_typAryConnectInfo(intCount).m_strCode = adoRs.Fields("AssociateCode").Value
            m_typAryConnectInfo(intCount).m_strName = adoRs.Fields("AssociateName").Value
            m_typAryConnectInfo(intCount).m_strCategory = c_strCatAssociate
            adoRs.MoveNext
            intCount = intCount + 1
        Loop
        ''ConnectionCode|fffd||fffd||fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
        m_blnConnectInfo = True
    End If
    Call objdba.closeRecordset(adoRs)
    
    
    ''SubConCode|fffd||64fe||fffd|iSubCon|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a||702||7c2||fffd|j
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.SubConCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        Do Until adoRs.EOF
            ReDim Preserve m_typAryConnectInfo(intCount)
            m_typAryConnectInfo(intCount).m_strCode = adoRs.Fields("SubConCode").Value
            m_typAryConnectInfo(intCount).m_strName = adoRs.Fields("SubConName").Value
            m_typAryConnectInfo(intCount).m_strCategory = c_strCatSubCon
            adoRs.MoveNext
            intCount = intCount + 1
        Loop
        ''ConnectionCode|fffd||fffd||fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
        m_blnConnectInfo = True
    End If

    On Error GoTo 0
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||fffd|Edit|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    If (m_blnConnectInfo = False) Then
        cmdEditOK.Enabled = False
        cmdTableShow.Enabled = False
        m_blnDBConnectInfo = False
    Else
        cmdEditOK.Enabled = True
        cmdTableShow.Enabled = True
        m_blnDBConnectInfo = True
    End If
    
    ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|[|fffd|R|fffd||fffd||fffd|{|fffd||fffd||752||fffd| -----------------
    cboCategory.AddItem c_strCatNK
    cboCategory.AddItem c_strCatNonProper
    cboCategory.AddItem c_strCatLocal
    cboCategory.AddItem c_strCatSubCon
    cboCategory.AddItem c_strCatAssociate
    cboCategory.AddItem c_strCatOther
    cboCategory.AddItem c_strCatOffice

    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd|NKStaff
    cboCategory.ListIndex = 0
    lblConnectCode.Visible = True
    txtConnectCode.Visible = True
    
LBL_END:
    sg_SetScreenUpdate True
    Application.Cursor = xlDefault
    
    frmLauncher.lblInfo.Visible = False
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)

    Call g_objLog.PrintOut(ID_NKFAS_SS, "ConnectSetting Init:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "ConnectSetting Init", strMSG
    GoTo LBL_END
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||315||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|CODE|fffd||fffd|NAME|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/12 : Knowlbo Nakarai : |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2002/12/13 : Knowlbo Nakarai : |fffd||38f||6c3|J|fffd|e|fffd|S|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd|@|fffd||fffd||fffd|C|fffd||fffd|
'   2003/01/06 : Knowlbo Nakarai : Code|fffd||fffd||fffd|x|fffd||fffd|,|fffd|e|fffd|L|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/18 : Knowlbo Nakarai : |fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||303|t|fffd|H|fffd|[|fffd||fffd||fffd||752||83c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub cboCategory_Change()

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim blnGetItem As Boolean   ''ITEM|fffd||317|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O(|fffd||fffd||fffd|X|fffd|g|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd||24e|g|fffd|p)
    Dim strCategory As String   ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|(|fffd||fffd|r|fffd|p)
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    CodeList.Clear
    ''|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||317|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnGetItem = False
    
    ''|fffd||fffd|r|fffd|p|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    strCategory = f_ConvStrCategory(cboCategory.Value, 0)
    
    If (m_blnConnectInfo = True) Then   ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        For intCount = LBound(m_typAryConnectInfo) To UBound(m_typAryConnectInfo)
            ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||303|A|fffd|C|fffd|e|fffd||fffd||fffd||1228f|o
            If (m_typAryConnectInfo(intCount).m_strCategory = strCategory) Then
                ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
                s_SetList m_typAryConnectInfo(intCount).m_strCode, _
                            m_typAryConnectInfo(intCount).m_strName, 1
                ''ITEM|fffd||317|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
                blnGetItem = True
            End If
        Next
        ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|ITEM|fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||fffd||fffd|X|fffd|g|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|AEdit|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|True|fffd||250||752||80b7||fffd||fffd|
        If (blnGetItem = True) Then
            CodeList.ListIndex = 0
            cmdEditOK.Enabled = True
        Else
            ''|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||d4482||242||fffd||fffd|AEdit|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
            txtConnectCode.Value = ""
            txtConnectName.Value = ""
            cmdEditOK.Enabled = False
        End If
    End If

    If (cboCategory.Value = c_strCatNK) Then            ''NKStaff|fffd||30f||a347|
        lblConnectCode.Visible = True
        txtConnectCode.Visible = True
        lblExplain.Visible = True
        lblInputContents.Visible = False
    ElseIf (cboCategory.Value = c_strCatOffice) Then    ''Office|fffd||30f||a347|
        lblConnectCode.Visible = True
        txtConnectCode.Visible = True
        lblExplain.Visible = False
        lblInputContents.Visible = False
    Else        ''NKStaff,Office|fffd||30f||a347|
        lblConnectCode.Visible = False
        txtConnectCode.Visible = False
        lblExplain.Visible = False
        lblInputContents.Visible = True
        Select Case cboCategory.Value
            Case c_strCatNonProper
                lblInputContents.Caption = "Please Input a Non NK Expatriate"
            Case c_strCatLocal
                lblInputContents.Caption = "Please Input a Name Of Local Staff"
            Case c_strCatSubCon
                lblInputContents.Caption = "Code Of Sub-Contractor is Reference Only"
            Case c_strCatAssociate
                lblInputContents.Caption = "Code Of Associate is Reference Only"
            Case c_strCatOther
                lblInputContents.Caption = "Please Input a Name Of Client etc..."
        End Select
    End If
    
    ''Associate,SubCon|fffd||30f||a347||fffd||fffd|Edit,Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    If (cboCategory.Value = c_strCatSubCon) Or (cboCategory.Value = c_strCatAssociate) Then
        cmdEditOK.Enabled = False
        cmdAddOK.Enabled = False
    Else
        cmdAddOK.Enabled = True
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||315||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd|CODE(NKStaff,Office)|fffd||fffd|NAME|fffd||fffd|Edit|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/02 : Knowlbo Nakarai : |fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|S|fffd||30f|C|fffd||fffd|
'   2002/12/12 : Knowlbo Nakarai : |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2002/01/06 : Knowlbo Nakarai : NKStaff|fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CodeList_Click()

    ''NKStaff,Office|fffd||30f||a347||fffd||302||fffd|Code|fffd||752||fffd|
    If (cboCategory.Value = c_strCatNK) Then
        txtConnectCode.Value = Trim$(Mid$(CodeList.Value, 4, 5))
    ElseIf (cboCategory.Value = c_strCatOffice) Then
        txtConnectCode.Value = Trim$(Left$(CodeList.Value, 7))
    End If
    
    txtConnectName.Value = Trim$(Mid$(CodeList.Value, InStr(CodeList.Value, " ")))
    
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode|fffd||fffd|Name|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/06 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/12 : Knowlbo Nakarai : |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2002/12/13 : Knowlbo Nakarai : Addition|fffd|f|fffd|[|fffd|^|fffd||30a|i|fffd|[|fffd||fffd||fffd|@|fffd||fffd||fffd|C|fffd||fffd|
'   2003/01/06 : Knowlbo Nakarai : NKStaff|fffd||a347||fffd||fffd|ConnectionCode|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub cmdAddOK_Click()

    Dim strConnCode As String       ''CODE NO.
    Dim lngAryIndex As Long         ''|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intListIndex As Integer     ''|fffd||fffd||fffd|X|fffd|g|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strMSG As String            ''|fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    Dim strCategory As String       ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|
    
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N--------------------
    ''Code|fffd|`|fffd|F|fffd|b|fffd|N(NKStaff,Office|fffd||30f||a347||fffd||302||fffd|)
    If (cboCategory.Value = c_strCatNK) Or _
            (cboCategory.Value = c_strCatOffice) Then    ''NKStaff,Office|fffd||30f||a347|
        If (fg_InputCheck(txtConnectCode.Value, "Code", 0) = True) Then
            txtConnectCode.SetFocus
            Exit Sub
        End If
        If (f_CheckCode(cboCategory.Value, strMSG, 0) = False) Then
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtConnectCode.SetFocus
            Exit Sub
        End If
    End If
    ''Name|fffd|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtConnectName.Value, "Name", 0) = True) Then
        txtConnectName.SetFocus
        Exit Sub
    End If
    
    ''|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|`|fffd|F|fffd|b|fffd|N
    If (m_blnConnectInfo = False) Then      ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|P|fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        ''|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
        lngAryIndex = 0
    ElseIf (m_blnConnectInfo = True) Then   ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347|
        If (cboCategory.Value <> c_strCatNK) And _
                (cboCategory.Value <> c_strCatOffice) Then
            'If (f_CheckData(cboCategory.Value, strMsg, -1) = False) Then
            If (f_CheckData(cboCategory.Value, strMSG, 0) = False) Then
                MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
                Exit Sub
            End If
        End If
        ''|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
        lngAryIndex = UBound(m_typAryConnectInfo) + 1
    End If
    
    ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    strCategory = f_ConvStrCategory(cboCategory.Value, 0)
    ''|fffd|V|fffd||fffd||fffd||fffd|ConnectionCode|fffd||fffd||fffd||c42c|
    Select Case strCategory
        Case c_strCatNK_Short
            strConnCode = c_strCatNK_Short & txtConnectCode.Value
        Case c_strCatNNK_Short
            strConnCode = c_strCatNNK_Short & Format$(m_intMaxCode + 1, "0000")
        Case c_strCatLocal_Short
            strConnCode = c_strCatLocal_Short & Format$(m_intMaxCode + 1, "0000")
        Case c_strCatOther_Short
            strConnCode = c_strCatOther_Short & Format$(m_intMaxCode + 1, "0000")
        Case c_strCatOffice_Short
            strConnCode = UCase$(txtConnectCode.Value)
    End Select
    
    
    ''|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||6c2||fffd||fffd|A|fffd|z|fffd||fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[
    ReDim Preserve m_typAryConnectInfo(lngAryIndex)
    m_typAryConnectInfo(lngAryIndex).m_strCode = strConnCode
    m_typAryConnectInfo(lngAryIndex).m_strName = txtConnectName.Value
    m_typAryConnectInfo(lngAryIndex).m_strCategory = strCategory
       
    ''|fffd||1c9||fffd|Item|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||252||1c9||fffd|
    s_SetList m_typAryConnectInfo(lngAryIndex).m_strCode, _
                m_typAryConnectInfo(lngAryIndex).m_strName, 1
                
    ''|fffd||fffd||fffd|X|fffd|g|fffd||311|I|fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||80b7||fffd||fffd|
    intListIndex = CodeList.ListCount
    CodeList.ListIndex = intListIndex - 1
    
    ''Add|fffd||fffd||fffd||a0bd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
    ReDim Preserve m_typAryAddIndex(m_lngAddCount)
    m_typAryAddIndex(m_lngAddCount) = lngAryIndex
    
    ''Add|fffd||fffd||fffd||a0bd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
    m_lngAddCount = m_lngAddCount + 1
    
    ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    cmdEditOK.Enabled = True
    
    ''ConnectionCode|fffd||fffd||fffd|L|fffd||fffd||fffd|EAddition|fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    m_blnConnectInfo = True
    m_blnAddition = True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||742||702||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/06 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/11/29 : Knowlbo Suzuki  : Connection|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||752||fffd||1c9||fffd|
'   2002/12/13 : Knowlbo Nakarai : |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd||3cd|X
'   2002/12/24 : Knowlbo Nakarai : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|f|fffd|[|fffd|^|fffd||fffd|OfficeCode,UpDateDate|fffd||fffd||1c9||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub cmdOK_Click()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim intCount As Integer
    Dim strMSG As String
    Dim blnAddEditItem As Boolean   ''Addition|fffd||fffd|Edition|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim intInCount As Integer       ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strSearchCode As String     ''Edit|fffd|p|fffd||38f||6cc||fffd||fffd||fffd|Code
    Dim datPrNow As Date

    datPrNow = Now()
    ''|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If Not (m_blnAddition = True Or m_blnEdition = True) Then
        MsgBox c_strMSG_NOEDIT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Sub
    End If
    
    ''Connection|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||752||fffd|
    g_blnConnCodeEdit = True
    
    ''Addition|fffd||fffd|Edition|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnAddEditItem = False
    
    sg_SetScreenUpdate False
    
    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_ConnCode & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ConnCode
        GoTo LBL_ERR
    End If
    
    ''Add|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
    If (m_blnAddition = True) Then
        For intCount = LBound(m_typAryAddIndex) To UBound(m_typAryAddIndex)
            adoRs.Filter = adFilterNone
            strSearchCode = m_typAryConnectInfo(m_typAryAddIndex(intCount)).m_strCode
            adoRs.Filter = "ConnectionCode=" & fg_AddSingleQuotation(strSearchCode)
            If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                objdba.SQLString = fg_setConnectionCodeHistorySQLString(adoRs, datPrNow)
                If (objdba.ExecuteSQL(adoCn) <> 0) Then
                    strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ConnCode
                    GoTo LBL_ERR
                End If
            Else
                adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
            End If
            adoRs.Fields("OfficeCode").Value = g_strOfficeCode
            adoRs.Fields("ConnectionCode").Value = m_typAryConnectInfo(m_typAryAddIndex(intCount)).m_strCode
            adoRs.Fields("ConnectionName").Value = m_typAryConnectInfo(m_typAryAddIndex(intCount)).m_strName
            adoRs.Fields("Category").Value = m_typAryConnectInfo(m_typAryAddIndex(intCount)).m_strCategory
            adoRs.Fields("InsertDate").Value = datPrNow
            adoRs.Fields("InsertUID").Value = g_strLoginId
            adoRs.Update
            adoRs.MoveFirst
        Next
        adoRs.Filter = adFilterNone
    End If
    
    
    '-----------------------------------------
    ''1.Addition|fffd||fffd|Edition|fffd||fffd||fffd|P|fffd|x|fffd||24d|s|fffd||fffd||a0bd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
    ''2.|fffd||fffd|x|fffd||24d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|Addition|fffd||fffd||fffd||fffd||fffd||152||1c9||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90bd||fffd||fffd|)
    ''2.Edition|fffd||302||742||303|A|fffd|C|fffd|e|fffd||fffd||fffd||202||fffd||38f||6c3|A|fffd|C|fffd|e|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|Name|fffd|Z|fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    '-----------------------------------------
    ''Edit|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
    If (m_blnEdition = True) Then
        For intCount = LBound(m_typAryEditIndex) To UBound(m_typAryEditIndex)
            ''Addition|fffd||fffd|Edition|fffd||fffd||fffd|P|fffd|x|fffd||24d|s|fffd||fffd||fffd||102||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
            If (m_blnAddition = True) Then
                For intInCount = LBound(m_typAryAddIndex) To UBound(m_typAryAddIndex)
                    If (m_typAryEditIndex(intCount) = m_typAryAddIndex(intInCount)) Then
                        blnAddEditItem = True
                    End If
                Next
            End If
            
            ''Edition|fffd||302||742||30f||a347|
            If (blnAddEditItem = False) Then
                ''|fffd|X|fffd|V|fffd||38f||fffd|CODE|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                If (m_typAryConnectInfo(m_typAryEditIndex(intCount)).m_strCategory = c_strCatNK_Short) Or _
                    (m_typAryConnectInfo(m_typAryEditIndex(intCount)).m_strCategory = c_strCatOffice_Short) Then
                    strSearchCode = m_typAryEditCode(intCount)
                Else
                    strSearchCode = m_typAryConnectInfo(m_typAryEditIndex(intCount)).m_strCode
                End If
                adoRs.Filter = adFilterNone
                adoRs.Filter = "ConnectionCode=" & fg_AddSingleQuotation(strSearchCode)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setConnectionCodeHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ConnCode
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If

                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("ConnectionCode").Value = m_typAryConnectInfo(m_typAryEditIndex(intCount)).m_strCode
                adoRs.Fields("ConnectionName").Value = m_typAryConnectInfo(m_typAryEditIndex(intCount)).m_strName
                adoRs.Fields("Category").Value = m_typAryConnectInfo(m_typAryEditIndex(intCount)).m_strCategory
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
    End If
    
    Call objdba.closeRecordset(adoRs)
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    If (m_blnDBConnectInfo = False) Then
        cmdTableShow.Enabled = True
        m_blnDBConnectInfo = True
    End If
    
    ''|fffd|f|fffd|[|fffd|^|fffd||30d|X|fffd|V|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3cd|X|fffd|E|fffd||1c9||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd|A|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd|
    m_lngAddCount = 0
    m_lngEditCount = 0
    m_blnEdition = False
    m_blnAddition = False
    Erase m_typAryEditIndex
    Erase m_typAryAddIndex
    
    sg_SetScreenUpdate True
    
    If g_blnConnCodeEdit = True Then sg_GetConnectionCodeList    ''ConnectionCode |fffd||113||1c2||74d||fffd||fffd||fffd|
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Unload Me    ''|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    Exit Sub
    
LBL_ERR:
    sg_SetScreenUpdate True
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "frmConnect_Setting cmdOK_Click:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "frmConnect_Setting cmdOK_Click", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode(Name)|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/12 : Knowlbo Nakarai : |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2002/12/13 : Knowlbo Nakarai : Edition|fffd|f|fffd|[|fffd|^|fffd||30a|i|fffd|[|fffd||fffd||fffd|@|fffd||fffd||fffd|C|fffd||fffd|
'   2002/01/06 : Knowlbo Nakarai : NKStaff|fffd||30f||a347||fffd||30f||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub cmdEditOK_Click()

    Dim strCode As String       ''|fffd||3cd|X|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd|ConnectionCode
    Dim lngCount As Long        ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intListIndex As Integer ''|fffd||fffd||fffd|X|fffd|g|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngCodeIndex As Long    ''|fffd|I|fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||314|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strMSG As String        ''|fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    Dim blnFindIndex As Boolean ''|fffd||fffd||fffd||fffd|Edit|fffd||3c2||742||fffd||fffd||1c2||fffd||fffd||fffd||fffd||314||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim lngInCount As Long      ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^

    ''|fffd||3cd|X|fffd||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|(|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd|g|fffd|p)
    m_intEditItemIndex = CodeList.ListIndex
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    ''Code|fffd|`|fffd|F|fffd|b|fffd|N(NKStaff,Office|fffd||30f||a347||fffd||302||fffd|)
    If (cboCategory.Value = c_strCatNK) Or (cboCategory.Value = c_strCatOffice) Then
        ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
        If (fg_InputCheck(txtConnectCode.Value, "Code", 0) = True) Then
            txtConnectCode.SetFocus
            Exit Sub
        End If
        If (fg_InputCheck(txtConnectName.Value, "Name", 0) = True) Then
            txtConnectName.SetFocus
            Exit Sub
        End If
        
        ''Edit|fffd||38f||6c3|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd|ConnectionCode|fffd||fffd||fffd||64fe|
        If (cboCategory.Value = c_strCatNK) Then
            strCode = Trim$(Left$(CodeList.Value, 8))
        ElseIf (cboCategory.Value = c_strCatOffice) Then
            strCode = Trim$(Left$(CodeList.Value, 7))
        End If
        
        ''Edit|fffd||38f||6c3|A|fffd|C|fffd|e|fffd||fffd||fffd||314|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        For lngCount = LBound(m_typAryConnectInfo) To UBound(m_typAryConnectInfo)
            If (m_typAryConnectInfo(lngCount).m_strCode = strCode) Then
                lngCodeIndex = lngCount
                Exit For
            End If
        Next
        
        ''CODE|fffd|`|fffd|F|fffd|b|fffd|N
        If (f_CheckCode(cboCategory.Value, strMSG, 1, lngCodeIndex) = False) Then
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtConnectCode.SetFocus
            Exit Sub
        End If
        
        
        If (m_lngEditCount = 0) Then  ''|fffd|P|fffd||fffd||fffd|
            ''Edit|fffd||fffd||fffd||a0bd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
            ReDim Preserve m_typAryEditIndex(m_lngEditCount)
            m_typAryEditIndex(m_lngEditCount) = lngCodeIndex
            ''Edit|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd|Code|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|(UPDATE|fffd||fffd||fffd|g|fffd|p)
            ReDim Preserve m_typAryEditCode(m_lngEditCount)
            m_typAryEditCode(m_lngEditCount) = strCode
            ''Edit|fffd||fffd||fffd||a0bd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            m_lngEditCount = m_lngEditCount + 1
            ''CODE|fffd||fffd||3cd|X
            If (cboCategory.Value = c_strCatNK) Then    ''NKStaff
                m_typAryConnectInfo(lngCodeIndex).m_strCode = "NKS" & txtConnectCode.Value
            Else    ''Office
                m_typAryConnectInfo(lngCodeIndex).m_strCode = txtConnectCode.Value
            End If
            ''NAME|fffd||fffd||3cd|X
            m_typAryConnectInfo(lngCodeIndex).m_strName = txtConnectName.Value
        ElseIf (m_lngEditCount > 0) Then    ''|fffd|Q|fffd||fffd||688||20d|~
            ''|fffd||fffd||fffd||fffd|EDIT|fffd||fffd||fffd||fffd||102||fffd||fffd||90a9|CHECK
            For lngInCount = LBound(m_typAryEditIndex) To UBound(m_typAryEditIndex)
                If (m_typAryEditIndex(lngInCount) = lngCodeIndex) Then
                    blnFindIndex = True
                    Exit For
                End If
            Next
            If (blnFindIndex = True) Then       ''|fffd||fffd||fffd||fffd|EDIT|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|ITEM|fffd||30f||a347|
                ''CODE|fffd||fffd||3cd|X
                If (cboCategory.Value = c_strCatNK) Then    ''NKStaff
                    m_typAryConnectInfo(lngCodeIndex).m_strCode = "NKS" & txtConnectCode.Value
                Else    ''Office
                    m_typAryConnectInfo(lngCodeIndex).m_strCode = txtConnectCode.Value
                End If
                ''NAME|fffd||fffd||3cd|X
                m_typAryConnectInfo(lngCodeIndex).m_strName = txtConnectName.Value
            ElseIf (blnFindIndex = False) Then  ''|fffd||702||fffd|EDIT|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd|ITEM|fffd||30f||a347|
                ''Edit|fffd||fffd||fffd||a0bd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
                ReDim Preserve m_typAryEditIndex(m_lngEditCount)
                m_typAryEditIndex(m_lngEditCount) = lngCodeIndex
                ''Edit|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd|Code|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|(Office,NKStaff|fffd||fffd|)
                ReDim Preserve m_typAryEditCode(m_lngEditCount)
                m_typAryEditCode(m_lngEditCount) = strCode
                ''Edit|fffd||fffd||fffd||a0bd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
                m_lngEditCount = m_lngEditCount + 1
                ''CODE|fffd||fffd||3cd|X
                If (cboCategory.Value = c_strCatNK) Then    ''NKStaff
                    m_typAryConnectInfo(lngCodeIndex).m_strCode = "NKS" & txtConnectCode.Value
                Else    ''Office
                    m_typAryConnectInfo(lngCodeIndex).m_strCode = txtConnectCode.Value
                End If
                ''NAME|fffd||fffd||3cd|X
                m_typAryConnectInfo(lngCodeIndex).m_strName = txtConnectName.Value
            End If
        End If
        
        ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd||fffd||fffd|
        s_SetList m_typAryConnectInfo(lngCodeIndex).m_strCode, _
                        m_typAryConnectInfo(lngCodeIndex).m_strName, 0
                        
        ''|fffd||fffd||fffd|X|fffd|g|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||752||fffd|
        CodeList.ListIndex = m_intEditItemIndex
        
    Else
        If (fg_InputCheck(txtConnectName.Value, "Name", 0) = True) Then
            txtConnectName.SetFocus
            Exit Sub
        End If
        
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd|CoonectionCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        strCode = Trim$(Left$(CodeList.Value, InStr(CodeList, " ")))
        
        ''Edit|fffd||38f||6c3|A|fffd|C|fffd|e|fffd||fffd||fffd||314|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        For lngCount = LBound(m_typAryConnectInfo) To UBound(m_typAryConnectInfo)
            If (m_typAryConnectInfo(lngCount).m_strCode = strCode) Then
                lngCodeIndex = lngCount
                Exit For
            End If
        Next
        
        ''|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        If (f_CheckData(cboCategory.Value, strMSG, lngCodeIndex) = False) Then
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtConnectName.SetFocus
            Exit Sub
        End If
        
        ''|fffd||38f||6c3|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd|Name|fffd||fffd||3cd|X
        If (m_lngEditCount = 0) Then  ''|fffd|P|fffd||fffd||fffd|
            ''Edit|fffd||fffd||fffd||a0bd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
            ReDim Preserve m_typAryEditIndex(m_lngEditCount)
            m_typAryEditIndex(m_lngEditCount) = lngCodeIndex
            ''Edit|fffd||fffd||fffd||a0bd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            m_lngEditCount = m_lngEditCount + 1
            ''NAME|fffd||fffd||3cd|X
            m_typAryConnectInfo(lngCodeIndex).m_strName = txtConnectName.Value
        ElseIf (m_lngEditCount > 0) Then    ''|fffd|Q|fffd||fffd||688||20d|~
            ''|fffd||fffd||fffd||fffd|EDIT|fffd||fffd||fffd||fffd||102||fffd||fffd||90a9|CHECK
            For lngInCount = LBound(m_typAryEditIndex) To UBound(m_typAryEditIndex)
                If (m_typAryEditIndex(lngInCount) = lngCodeIndex) Then
                    blnFindIndex = True
                    Exit For
                End If
            Next
            If (blnFindIndex = True) Then       ''|fffd||fffd||fffd||fffd|EDIT|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|ITEM|fffd||30f||a347|
                ''NAME|fffd||fffd||3cd|X
                m_typAryConnectInfo(lngCodeIndex).m_strName = txtConnectName.Value
            ElseIf (blnFindIndex = False) Then  ''|fffd||702||fffd|EDIT|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd|ITEM|fffd||30f||a347|
                ''Edit|fffd||fffd||fffd||a0bd||fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
                ReDim Preserve m_typAryEditIndex(m_lngEditCount)
                m_typAryEditIndex(m_lngEditCount) = lngCodeIndex
                ''Edit|fffd||fffd||fffd||a0bd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
                m_lngEditCount = m_lngEditCount + 1
                ''NAME|fffd||fffd||3cd|X
                m_typAryConnectInfo(lngCodeIndex).m_strName = txtConnectName.Value
            End If
        End If
        
        ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd||fffd||fffd|
        s_SetList m_typAryConnectInfo(lngCount).m_strCode, _
                        m_typAryConnectInfo(lngCount).m_strName, 0
        ''|fffd||fffd||fffd|X|fffd|g|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||752||fffd|
        CodeList.ListIndex = m_intEditItemIndex
    End If
    
    ''Edit|fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    m_blnEdition = True
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/11/29 : Knowlbo suzuki  : Connection|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||752||fffd||1c9||fffd|
'   2002/12/12 : Knowlbo Nakarai : |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2002/12/13 : Knowlbo Nakarai : |fffd||3d0||fffd||fffd|E|fffd|t|fffd||fffd||fffd|O|fffd|E|fffd|z|fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub cmdCancel_Click()

    ''|fffd||48f|W|fffd||702||fffd||fffd||352||1c9||fffd||fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If (m_blnEdition = True Or m_blnAddition = True) Then
        If MsgBox(c_strQUESTION_SAVE, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbCancel Then
            Exit Sub
        End If
    End If
    
    ''|fffd||3d0||fffd||fffd|E|fffd|t|fffd||fffd||fffd|O|fffd|E|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_lngAddCount = 0
    m_lngEditCount = 0
    m_blnEdition = False
    m_blnAddition = False
    Erase m_typAryEditIndex
    Erase m_typAryAddIndex

    ''|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    Unload Me
    
    ''Connection|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||752||fffd|
    g_blnConnCodeEdit = False
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||303||fffd||fffd|X|fffd|g|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> ConnectionCode
'   (2)<String |fffd|^> Name
'   (3)<Integer |fffd|^> 0:|fffd||48f|W  1:|fffd||1c9||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetList(strCode As String, strName As String, intType As Integer)
    
    Dim strListUse As String    ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    
    strListUse = strCode & Space$(2) & strName
    
    If (intType = 0) Then       ''|fffd||48f|W|fffd||30f||a347|
        CodeList.List(m_intEditItemIndex) = strListUse
    ElseIf (intType = 1) Then   ''|fffd||1c9||fffd||fffd||30f||a347|
        CodeList.AddItem strListUse
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd||a5d7||fffd|\|fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode|fffd||308||a5d7||fffd|\|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub cmdTableShow_Click()

    Dim ExcelObj As Application
    Dim wsTgtSheet As Worksheet     ''|fffd||a5d7||fffd|p|fffd||303|V|fffd|[|fffd|g
    Dim intRow As Integer           ''|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strLineRange As String      ''|fffd|r|fffd||fffd||fffd|p|fffd||314||348||fffd|
    Dim strCategory As String       ''Category(|fffd||fffd|r|fffd|p)
    Dim intItemCount As Integer     ''|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim strRange As String          ''|fffd|Z|fffd||fffd||fffd||348||fffd|
    Dim intSearchRow As Integer     ''|fffd||fffd||fffd||fffd||fffd|p|fffd||30d|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngSheetCount As Long       ''|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||24e||fffd||fffd||fffd||fffd|I|fffd||251|}|fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|

    ''DB|fffd||691||fffd||fffd|p
    Dim strMSG As String
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRet As Long
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    
    ''ConnectionCode|fffd|f|fffd|[|fffd|^|fffd||64fe|
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ConnCode & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.Category, " & "tb.ConnectionCode ASC"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ConnCode
        GoTo LBL_ERR
    End If
    
    Set ExcelObj = CreateObject("Excel.Application")
    
    '|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||c42c| sheet|fffd||316||fffd||fffd||fffd||fffd|w|fffd||fffd|
    lngSheetCount = ExcelObj.Application.SheetsInNewWorkbook
    ExcelObj.Application.SheetsInNewWorkbook = 1
    
    ''|fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    sg_SetScreenUpdate False

    ''|fffd|V|fffd||fffd||fffd||fffd|BOOK|fffd||fffd||fffd||c42c|
    ExcelObj.Workbooks.Add
    Set wsTgtSheet = ExcelObj.ActiveWorkbook.Worksheets("Sheet1")
    
    ''|fffd||55742||fffd||752||fffd|
    wsTgtSheet.Columns("A:A").ColumnWidth = 2.5
    wsTgtSheet.Columns("B:B").ColumnWidth = 18
    wsTgtSheet.Columns("C:C").ColumnWidth = 15
    wsTgtSheet.Columns("D:D").ColumnWidth = 30
    
    ''|fffd|w|fffd|b|fffd|_|fffd|[|fffd||fffd||fffd||fffd||fffd||c42c|
    wsTgtSheet.Range("B1:D1").Select
    With ExcelObj.Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    ExcelObj.Selection.Merge
    With ExcelObj.Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    wsTgtSheet.Range("B1:D1").Select
    ExcelObj.ActiveCell.FormulaR1C1 = "ConnectionCode Table" & Space$(9) & Format$(Now, "yyyy/mm/dd")
    ExcelObj.Selection.Font.Bold = True
    
    ''Category,Code,Name|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|
    wsTgtSheet.Range("B3").Value = "Category"
    wsTgtSheet.Range("C3").Value = "Code"
    wsTgtSheet.Range("D3").Value = "Name"
    wsTgtSheet.Range("B3:D3").Select
    ExcelObj.Selection.Font.Bold = True
    With ExcelObj.Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With ExcelObj.Selection.Interior
        .ColorIndex = 34
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    
    ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd||fffd||fffd||250||752||fffd|
    intRow = 4
    Do Until adoRs.EOF
        wsTgtSheet.Cells(intRow, 2).Value = f_ConvStrCategory(adoRs.Fields("Category").Value, 1)
        wsTgtSheet.Cells(intRow, 3).Value = adoRs.Fields("ConnectionCode").Value
        wsTgtSheet.Cells(intRow, 4).Value = adoRs.Fields("ConnectionName").Value
        intRow = intRow + 1
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    
    ''Associate
    strSQL = "SELECT " & "tb.AssociateCode, " & "tb.AssociateName "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.AssociateCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
        GoTo LBL_ERR
    End If
    ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd||fffd||fffd||250||752||fffd|
    Do Until adoRs.EOF
        wsTgtSheet.Cells(intRow, 2).Value = c_strCatAssociate
        wsTgtSheet.Cells(intRow, 3).Value = adoRs.Fields("AssociateCode").Value
        wsTgtSheet.Cells(intRow, 4).Value = adoRs.Fields("AssociateName").Value
        intRow = intRow + 1
        adoRs.MoveNext
    Loop

    Call objdba.closeRecordset(adoRs)
    
    ''Sub-Contractor
    strSQL = "SELECT " & "tb.SubConCode, " & "tb.SubConName "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.SubConCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
        GoTo LBL_ERR
    End If
    ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd||fffd||fffd||250||752||fffd|
    Do Until adoRs.EOF
        wsTgtSheet.Cells(intRow, 2).Value = c_strCatSubCon
        wsTgtSheet.Cells(intRow, 3).Value = adoRs.Fields("SubConCode").Value
        wsTgtSheet.Cells(intRow, 4).Value = adoRs.Fields("SubConName").Value
        intRow = intRow + 1
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    
    ''|fffd||fffd|r|fffd|p|fffd||fffd|Category|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strCategory = ""
    intSearchRow = 4
    Do Until wsTgtSheet.Cells(intSearchRow, 2).Value = ""
        If (strCategory = wsTgtSheet.Cells(intSearchRow, 2).Value) Then
            ''|fffd|d|fffd||fffd||fffd||fffd||fffd||102||fffd|f|fffd|[|fffd|^|fffd||30c||90||fffd||fffd||fffd||fffd||64fe|
            intRow = intSearchRow - 1
            Do While wsTgtSheet.Cells(intRow, 2).Value = strCategory
                intItemCount = intItemCount + 1
                intRow = intRow + 1
            Loop
            ''|fffd|d|fffd||fffd||fffd||fffd||fffd||102||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|A
            strRange = "B" & intSearchRow & ":B" & intSearchRow - 1 + intItemCount - 1
            wsTgtSheet.Range(strRange).Value = ""
            ''|fffd|d|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||348||342||fffd||fffd|}|fffd|[|fffd|W
            strRange = "B" & intSearchRow - 1 & ":B" & intSearchRow - 1 + intItemCount - 1
            wsTgtSheet.Range(strRange).Merge
            ''|fffd||fffd||fffd||fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||243|}|fffd|[|fffd|W|fffd|s|fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd|A|fffd||fffd|r|fffd|pCategory|fffd||fffd||752||fffd|
            intSearchRow = intSearchRow - 1 + intItemCount - 1
            strCategory = wsTgtSheet.Cells(intSearchRow, 2).Value
            ''|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            intItemCount = 0
        Else
            strCategory = wsTgtSheet.Cells(intSearchRow, 2).Value
        End If
        intSearchRow = intSearchRow + 1
    Loop

    ''|fffd|}|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3475||fffd||fffd||fffd||242||fffd||fffd||fffd|
    wsTgtSheet.Range("B4:D" & intSearchRow - 1).VerticalAlignment = xlTop
    
    ''|fffd|r|fffd||fffd||fffd||314||348||342||fffd||752||fffd|
    strLineRange = "B3:D" & intSearchRow - 1

    ''|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    wsTgtSheet.Range(strLineRange).Select
    With ExcelObj.Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ExcelObj.Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ExcelObj.Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ExcelObj.Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ExcelObj.Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With ExcelObj.Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    ''|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||752||fffd|
    wsTgtSheet.Columns("B:D").Select
    With ExcelObj.Selection.Font
        .Name = "Times New Roman"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    wsTgtSheet.Range("B1:D1").Characters.Font.Size = 12

    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||143|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||fffd|A1|fffd|Z|fffd||fffd||fffd||250||752||fffd|
    wsTgtSheet.Range("A1").Select

    '|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||c42c||fffd||142||fffd|sheet|fffd||316||fffd||fffd||fffd||fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|
    ExcelObj.Application.SheetsInNewWorkbook = lngSheetCount
    
    ''|fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    sg_SetScreenUpdate True
    
    ''|fffd||c42c||fffd||fffd||fffd||fffd|BOOK|fffd||fffd|Visible|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    ExcelObj.Visible = True
    
    Set ExcelObj = Nothing
    
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
LBL_END:

    Set ExcelObj = Nothing
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:

    If Not ExcelObj Is Nothing Then
        ExcelObj.ActiveWorkbook.Saved = True
        ExcelObj.ActiveWorkbook.Close
        ExcelObj.Application.SheetsInNewWorkbook = lngSheetCount
        Set ExcelObj = Nothing
    End If

    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "cmdTableShow_Click:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "cmdTableShow", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|^Code|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'   (3)<Integer |fffd|^> 0:ADD  1:EDIT
'   (4)<Long |fffd|^> |fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/06 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_CheckCode(ByVal strCatgory As String, ByRef strMSG As String, _
            ByVal intType As Integer, Optional ByVal lngAryIndex As Long) As Boolean
    
    Dim strCode As String       ''CODE
    Dim lngCount As Long        ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    
    ''Office|fffd||30f||a347||fffd|AOfficeCode|fffd|`|fffd|F|fffd|b|fffd|N
    If (strCatgory = c_strCatOffice) Then
        If (Left$(UCase$(txtConnectCode.Value), 1) <> "J") Then
            strMSG = c_strMSG_NOOFFICECODE
            f_CheckCode = False
            Exit Function
        End If
    End If
    
    ''Code|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (strCatgory = c_strCatNK) Then            ''NKStaff|fffd||30f||a347|
        If (Len(txtConnectCode.Value) <> 5) Then
            strMSG = c_strMSGCn_NONKCODE
            f_CheckCode = False
            Exit Function
        End If
    ElseIf (strCatgory = c_strCatOffice) Then    ''Office|fffd||30f||a347|
        If (Len(txtConnectCode.Value) <> 7) Then
            strMSG = c_strMSG_LENGTHOFFICECODE
            f_CheckCode = False
            Exit Function
        End If
    End If
    
    ''|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||303|`|fffd|F|fffd|b|fffd|N(|fffd||408||fffd||fffd||50d||fffd||fffd||702||fffd||fffd||fffd|OfficeCode)
    If (m_blnConnectInfo = True) Then
        If (strCatgory = c_strCatNK) Then
            strCode = c_strCatNK_Short & txtConnectCode.Value
        ElseIf (strCatgory = c_strCatOffice) Then
            strCode = txtConnectCode.Value
        End If
        For lngCount = LBound(m_typAryConnectInfo) To UBound(m_typAryConnectInfo)
            If (m_typAryConnectInfo(lngCount).m_strCode = strCode) Then
                If (intType = 1) Then       ''EDIT
                    If (lngCount <> lngAryIndex) Then
                        strMSG = c_strMSGTr_EXISTDATA
                        f_CheckCode = False
                        Exit Function
                    ElseIf (lngCount = lngAryIndex) And _
                        (m_typAryConnectInfo(lngCount).m_strName = txtConnectName.Value) Then
                        strMSG = c_strMSG_NOEDIT
                        f_CheckCode = False
                        Exit Function
                    End If
                ElseIf (intType = 0) Then   ''ADD
                    strMSG = c_strMSGTr_EXISTDATA
                    f_CheckCode = False
                    Exit Function
                End If
            End If
        Next
    End If
    
    f_CheckCode = True
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'   (3)<Integer |fffd|^> 0:ADD  1:EDIT
'   (4)<Long |fffd|^> |fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/06 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_CheckData(ByRef strCatgory As String, ByRef strMSG As String, _
            ByVal intType As Integer, Optional ByVal lngAryIndex As Long) As Boolean

    Dim lngCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strCategory As String
    Dim intCompCode As Integer  ''|fffd||fffd|r|fffd|pCODE
    
    ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|r|fffd|p|fffd||250||752||fffd|
    strCategory = f_ConvStrCategory(cboCategory.Value, 0)
    
    ''|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    intCompCode = 0
    m_intMaxCode = 0
    
    ''|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||251||fffd||fffd||742||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    For lngCount = LBound(m_typAryConnectInfo) To UBound(m_typAryConnectInfo)
        If (m_typAryConnectInfo(lngCount).m_strCategory = strCategory) Then
            ''CODE|fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
            If (CInt(Right$(m_typAryConnectInfo(lngCount).m_strCode, 4)) > intCompCode) Then
                m_intMaxCode = CInt(Right$(m_typAryConnectInfo(lngCount).m_strCode, 4))
                intCompCode = CInt(Right$(m_typAryConnectInfo(lngCount).m_strCode, 4))
            End If
        End If
        If (m_typAryConnectInfo(lngCount).m_strName = txtConnectName.Value And _
                m_typAryConnectInfo(lngCount).m_strCategory = strCategory) Then
            If (intType = 1) Then       ''EDIT
                If (lngCount <> lngAryIndex) Then
                    strMSG = c_strMSGTr_EXISTDATA
                    f_CheckData = False
                    Exit Function
                ElseIf (lngCount = lngAryIndex) And _
                    (m_typAryConnectInfo(lngCount).m_strName = txtConnectName.Value) Then
                    strMSG = c_strMSG_NOEDIT
                    f_CheckData = False
                    Exit Function
                End If
            ElseIf (intType = 0) Then   ''ADD
                strMSG = c_strMSGTr_EXISTDATA
                f_CheckData = False
                Exit Function
            End If
        End If
    Next
    
    f_CheckData = True
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||317||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|
'   (2)<Integer |fffd|^> 0:|fffd||28f||d068||fffd||fffd||fffd||fffd|  1:|fffd||fffd||fffd||301||fffd||fffd||28f||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||317||fffd||fffd||302||255||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_ConvStrCategory(strSelectCat As String, intConvType As Integer) As String

    If (intConvType = 0) Then       ''|fffd||28f||d068||fffd||fffd||fffd||fffd|
        Select Case strSelectCat
            Case c_strCatNK
                f_ConvStrCategory = c_strCatNK_Short
            Case c_strCatNonProper
                f_ConvStrCategory = c_strCatNNK_Short
            Case c_strCatLocal
                f_ConvStrCategory = c_strCatLocal_Short
            Case c_strCatSubCon, c_strCatAssociate
                f_ConvStrCategory = cboCategory.Value
            Case c_strCatOther
                f_ConvStrCategory = c_strCatOther_Short
            Case c_strCatOffice
                f_ConvStrCategory = c_strCatOffice_Short
        End Select
    ElseIf (intConvType = 1) Then   ''|fffd||fffd||fffd||301||fffd||fffd||28f||fffd|
        Select Case strSelectCat
            Case c_strCatNK_Short
                f_ConvStrCategory = c_strCatNK
            Case c_strCatNNK_Short
                f_ConvStrCategory = c_strCatNonProper
            Case c_strCatLocal_Short
                f_ConvStrCategory = c_strCatLocal
            Case c_strCatOther_Short
                f_ConvStrCategory = c_strCatOther
            Case c_strCatOffice_Short
                f_ConvStrCategory = c_strCatOffice
        End Select
    End If
    
End Function

Attribute VB_Name = "frmFindWBS"
Attribute VB_Base = "0{2628189B-644A-4D3D-82B7-F669FE76544E}{FEB7B61E-E2DA-40B4-B7CC-A66D7E1FD62F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||189||216||68c||fffd||fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||312||fffd|`
' |fffd||c42c||fffd||fffd|
' |fffd|@2002/11/26  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'
'--------------------------------------------------------------------------------
Option Explicit

'--------------------------------------------------------------------------------
'|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd|
'--------------------------------------------------------------------------------
Private m_dba As New clsDBAccess
Private m_conn As New ADODB.Connection
Private m_bSelectedFlag As Boolean          '|fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Private m_bTerminateStatus As Boolean
Private m_dTargetDate As Date
Private m_tWBS() As T_WBS
Private m_InitFlag As Boolean
Private m_Organization() As String

'--------------------------------------------------------------------------------
'|fffd|p|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'--------------------------------------------------------------------------------

'|fffd||fffd||189||216||fffd|
Public Property Get WBS() As String
    WBS = m_tWBS(lstFindResult.ListIndex).strWBS
End Property

'|fffd||fffd||fffd|{|fffd||a30f||fffd||fffd|
Public Property Get JapaneseSubjectName() As String
    JapaneseSubjectName = m_tWBS(lstFindResult.ListIndex).strJapaneseSubjectName
End Property

'|fffd|p|fffd||a30f||fffd||fffd|
Public Property Get EnglishSubjectName() As String
    EnglishSubjectName = m_tWBS(lstFindResult.ListIndex).strEnglishSubjectName
End Property

'|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
Public Property Get SectionCode() As String
    SectionCode = m_tWBS(lstFindResult.ListIndex).strSectionCode
End Property

'|fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Get SectionName() As String
    SectionName = m_tWBS(lstFindResult.ListIndex).strSectionName
End Property

'|fffd||fffd||fffd||4d0||65bc|
Public Property Get SupplierName() As String
    SupplierName = m_tWBS(lstFindResult.ListIndex).strSupplierName
End Property

'|fffd||18e||fffd|Code
Public Property Get TypeOfIndustryCode() As String
    TypeOfIndustryCode = m_tWBS(lstFindResult.ListIndex).strTypeOfIndustryCode
End Property

'|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Get ConclusionOfContractDay() As String
    ConclusionOfContractDay = m_tWBS(lstFindResult.ListIndex).strConclusionOfContractDay
End Property

'|fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public Property Get SelectedFlag() As Boolean
    SelectedFlag = m_bSelectedFlag
End Property

'|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd||fffd||fffd|t
Public Property Let TargetDate(ByVal dparam As Date)
    m_dTargetDate = dparam
End Property
Public Property Get TargetDate() As Date
    TargetDate = m_dTargetDate
End Property

'--------------------------------------------------------------------------------
'|fffd|p|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|\|fffd|b|fffd|h
'--------------------------------------------------------------------------------

'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||283|N|fffd||fffd||fffd|[|fffd|Y
' |fffd||c42c||fffd||fffd|
' |fffd|@2002/11/26  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'--------------------------------------------------------------------------------
Public Sub CloseForm()
    m_bTerminateStatus = True
    Unload Me
End Sub


'--------------------------------------------------------------------------------
'|fffd|v|fffd||fffd||fffd|C|fffd|x|fffd|[|fffd|g|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'--------------------------------------------------------------------------------

'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@WBS|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|SQL|fffd||c42c|
' |fffd||c42c||fffd||fffd|
' |fffd|@2002/11/28  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'
'   2002/04/21 : Knowlbo m.o : NKFAS|fffd||389||fffd|
'   2016/08/01 : Y.Watanabe  : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'   2016/08/05 : Y.Watanabe  : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
'--------------------------------------------------------------------------------
Private Function funcCreateWBSSelectSQL() As String
Dim strSQL As String
Dim iWorkSubjectLength As String
Dim strWorkSubject As String
Dim strWhere As String
'--------------------------------------------------------------------------------
Dim datTarget As Date
'--------------------------------------------------------------------------------

    '|fffd||fffd||189||216||683|`|fffd|F|fffd|b|fffd|N
    txtWorkSubject.Text = Trim(txtWorkSubject.Text)
    iWorkSubjectLength = Len(txtWorkSubject.Text)
    strWorkSubject = StrConv(Mid(txtWorkSubject.Text, 1, 1), vbUpperCase)
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defSearchWBS
    ''<<<2016.08.05 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
    'WBS
    '|fffd||fffd||fffd||fffd|A|fffd||38f||6c2||313||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||241|A|fffd||389||fffd||fffd||fffd||fffd|K|fffd|v|fffd||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd||302||141|A|fffd||fffd||fffd||fffd||fffd||153||fffd||fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||34d|s|fffd||fffd||202||fffd|
    If (iWorkSubjectLength = 0) Then
        strSQL = Replace(strSQL, "@1", "Null")
    ElseIf (iWorkSubjectLength > 9) Then
        MsgBox "WBS Code is wrong. Please confirm it again.", vbOKOnly + vbInformation
        Exit Function
    Else
        strSQL = Replace(strSQL, "@1", "'" & txtWorkSubject.Text & "'")
    End If
    
'    'WBS
'    If (strWorkSubject = "A") Or (strWorkSubject = "B") Or _
'       (strWorkSubject = "C") Or (strWorkSubject = "D") Or _
'       (strWorkSubject = "J") Or (strWorkSubject = "P") Or _
'       (strWorkSubject = "T") Or (strWorkSubject = "R") Then
'        If (iWorkSubjectLength > 9) Then
'            MsgBox "WBS Code is wrong. Please confirm it again.", vbOKOnly + vbInformation
'            Exit Function
'        Else
'            strSQL = Replace(strSQL, "@1", "'" & txtWorkSubject.Text & "'")
'        End If
'    Else
'        strSQL = Replace(strSQL, "@1", "Null")
'    End If
    ''>>>2016.08.05 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
    '|fffd||fffd||fffd||195||fffd|
    If (cmbOrganization.Text <> "") Then
        strSQL = Replace(strSQL, "@2", "'" & Mid(cmbOrganization.Text, 1, InStr(1, cmbOrganization.Text, " ") - 1) & "'")
    Else
        strSQL = Replace(strSQL, "@2", "Null")
    End If
    '|fffd||fffd||fffd||fffd|
    If (cmbSection.Text <> "") Then
        strSQL = Replace(strSQL, "@3", "'" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "'")
    Else
        strSQL = Replace(strSQL, "@3", "Null")
    End If
    '|fffd||fffd||fffd||fffd|
    If (txtName.Text <> "") Then
        strSQL = Replace(strSQL, "@4", "'" & txtName.Text & "'")
    Else
        strSQL = Replace(strSQL, "@4", "Null")
    End If
    If (IsNull(m_dTargetDate) = True) Then
        strSQL = Replace(strSQL, "@5", "'" & Format(Now(), "yyyy/mm/dd") & "'")
    Else
        strSQL = Replace(strSQL, "@5", "'" & Format(m_dTargetDate, "yyyy/mm/dd") & "'")
    End If

'    If (strWorkSubject = "A") Or (strWorkSubject = "B") Or _
'       (strWorkSubject = "C") Or (strWorkSubject = "D") Or _
'       (strWorkSubject = "J") Or (strWorkSubject = "P") Or _
'       (strWorkSubject = "T") Or (strWorkSubject = "R") Then
'        'WBS
'        If (iWorkSubjectLength = 9) Then
'            strWhere = strWhere & "W.WBS|fffd||50d||fffd| = '" & txtWorkSubject.Text & "' "
'        ElseIf (iWorkSubjectLength > 9) Then
'            MsgBox "|fffd||fffd||189||216||682||24b|K|fffd||fffd|O|fffd||303|R|fffd|[|fffd|h|fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKOnly + vbInformation
'            Exit Function
'        Else
'            strWhere = strWhere & "W.WBS|fffd||50d||fffd| Like '" & txtWorkSubject.Text & "%' "
'        End If
'    End If
'    If (cmbSection.Text <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "W.|fffd||fffd||fffd||fffd|Code = '" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "W.|fffd||fffd||fffd||fffd|Code = '" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "' "
'        End If
'    End If
'    If (cmbOrganization.Text <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "SubString(S.|fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code,9,4) = '" & Left(Mid(cmbOrganization.Text, 1, InStr(1, cmbOrganization.Text, " ") - 1), 2) & "--' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "SubString(S.|fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code,9,4) = '" & Left(Mid(cmbOrganization.Text, 1, InStr(1, cmbOrganization.Text, " ") - 1), 2) & "--' "
'        End If
'    End If
''-> Upd 2003/04/01 S.Yabe
''    '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|^|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|U|fffd||fffd||fffd||fffd|
''    If (chkProject.Value = True) Then
''        If (Trim(strWhere) = "") Then
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate() "
''        Else
''            strWhere = strWhere & "AND "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate() "
''        End If
''    End If
''    '|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||702||fffd|
''    If (chkCompletionProject.Value = True) Then
''        If (Trim(strWhere) = "") Then
''            strWhere = strWhere & "((W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| < GetDate()) AND (W.WBS|fffd|I|fffd||fffd||fffd||fffd| >= GetDate())) "
''        Else
''            strWhere = strWhere & "AND "
''            strWhere = strWhere & "((W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| < GetDate()) AND (W.WBS|fffd|I|fffd||fffd||fffd||fffd| >= GetDate()))  "
''        End If
''    End If
''--------------------------------------------------------------------------------
''    '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|^|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|U|fffd||fffd||fffd||fffd|
''    If (chkProject.Value = True) And (chkCompletionProject.Value = False) Then
''        If (Trim(strWhere) = "") Then
''            strWhere = strWhere & "( "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| Is Null "
''            strWhere = strWhere & "OR "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate() "
''            strWhere = strWhere & ") "
''        Else
''            strWhere = strWhere & "AND "
''            strWhere = strWhere & "( "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| Is Null "
''            strWhere = strWhere & "OR "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate() "
''            strWhere = strWhere & ") "
''        End If
''    End If
''    '|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||702||fffd|
''    If (chkProject.Value = False) And (chkCompletionProject.Value = True) Then
''        If (Trim(strWhere) = "") Then
''            strWhere = strWhere & "(W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| < GetDate()) "
''        Else
''            strWhere = strWhere & "AND "
''            strWhere = strWhere & "(W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| < GetDate()) "
''        End If
''    End If
''    '|fffd|u|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|^|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|U|fffd||fffd||fffd||fffd|v|fffd||181|u|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||702||781|v|fffd||311|o|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||a0bd||fffd||a347|
''    If (chkProject.Value = False) And (chkCompletionProject.Value = True) Then
''        If (Trim(strWhere) = "") Then
''            strWhere = strWhere & "( "
''            strWhere = strWhere & "( "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| Is Null "
''            strWhere = strWhere & "OR "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate() "
''            strWhere = strWhere & ") "
''            strWhere = strWhere & "OR "
''            strWhere = strWhere & "(W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| < GetDate()) "
''            strWhere = strWhere & ") "
''        Else
''            strWhere = strWhere & "AND "
''            strWhere = strWhere & "( "
''            strWhere = strWhere & "( "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| Is Null "
''            strWhere = strWhere & "OR "
''            strWhere = strWhere & "W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate() "
''            strWhere = strWhere & ") "
''            strWhere = strWhere & "OR "
''            strWhere = strWhere & "(W.|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| < GetDate()) "
''            strWhere = strWhere & ") "
''        End If
''    End If
''--------------------------------------------------------------------------------
''<- Del
'    If (txtName.Text <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "B.|fffd||fffd||fffd||fffd| Like '%" & Trim(txtName.Text) & "%' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "B.|fffd||fffd||fffd||fffd| Like '%" & Trim(txtName.Text) & "%' "
'        End If
'    End If
'    strSQL = "SELECT "
'    strSQL = strSQL & "W.WBS|fffd||50d||fffd| AS |fffd||fffd||189||216||fffd|, "
'    strSQL = strSQL & "IsNULL(B.|fffd||fffd||fffd||fffd|,'') AS |fffd||fffd||fffd||fffd|, "
'    strSQL = strSQL & "IsNULL(B.|fffd|O|fffd||a30f||fffd||fffd|,'') AS |fffd|O|fffd||a30f||fffd||fffd|, "
'    strSQL = strSQL & "IsNULL(S.|fffd|g|fffd|DCode,'') AS |fffd||fffd||fffd||fffd|Code, "
'    strSQL = strSQL & "IsNULL(S.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,'') AS |fffd||fffd||fffd||fffd||fffd||fffd|, "
'    strSQL = strSQL & "IsNULL(W.|fffd||18e||fffd|Code,'') AS |fffd||18e||fffd|Code "
'    If (strWorkSubject = "J") Then
'        strSQL = strSQL & ", K.|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| AS |fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
'    End If
'    strSQL = strSQL & "FROM "
''-> Upd 2003/03/18 S.Yabe
''    strSQL = strSQL & "(" & defWBS & " W LEFT JOIN " & def|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g & " P ON P.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd| = W.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd|) LEFT JOIN " & def|fffd||fffd|{|fffd||fffd||fffd| & " B ON B.|fffd||fffd|{|fffd||fffd||fffd||50d||fffd| = P.|fffd||fffd|{|fffd||fffd||fffd||50d||fffd| "
'    strSQL = strSQL & "(" & defWBS & " W INNER JOIN " & def|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g & " P ON P.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd| = W.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd|) INNER JOIN " & def|fffd||fffd|{|fffd||fffd||fffd| & " B ON B.|fffd||fffd|{|fffd||fffd||fffd||50d||fffd| = P.|fffd||fffd|{|fffd||fffd||fffd||50d||fffd| "
''<- Upd
'    strSQL = strSQL & "LEFT JOIN " & defSectionMaster & " S ON S.|fffd|g|fffd|DCode = W.|fffd||fffd||fffd||fffd|Code "
'    If (strWorkSubject = "J") Then
'        strSQL = strSQL & "LEFT JOIN "
'        strSQL = strSQL & "(SELECT "
'        strSQL = strSQL & "A.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd|, "
'        strSQL = strSQL & "A.|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
'        strSQL = strSQL & "FROM "
'        strSQL = strSQL & def|fffd||fffd||fffd||6cc|_|fffd||fffd| & " A, "
'        strSQL = strSQL & "(SELECT MIN(|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) AS |fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| FROM " & def|fffd||fffd||fffd||6cc|_|fffd||fffd| & ") B "
'        strSQL = strSQL & "WHERE "
'        strSQL = strSQL & "A.|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = B.|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) "
'        strSQL = strSQL & "K ON K.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd| = P.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd| "
'    End If
'    strSQL = strSQL & "WHERE "
''--M.O---------------------------------------------------------------------------
''    strSQL = strSQL & "IsNULL(W.WBS|fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O,'0') = '0' "
''    strSQL = strSQL & "AND "
''--------------------------------------------------------------------------------
'    If (IsNull(m_dTargetDate) = True) Then
'        strSQL = strSQL & "(S.|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GetDate() AND S.|fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= GetDate()) "
'    Else
'        strSQL = strSQL & "(S.|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= '" & Format(m_dTargetDate, "yyyy/mm/dd") & "' AND S.|fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= '" & Format(m_dTargetDate, "yyyy/mm/dd") & "') "
'    End If
''--M.O---------------------------------------------------------------------------
'    '|fffd||38f||6d3||fffd||fffd||257|L|fffd||fffd||fffd||20f||fffd||502||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'    If (IsNull(m_dTargetDate) = True) Then
'        datTarget = Now '|fffd||28f||fffd||202||fffd||fffd||342||fffd|
'    Else
'        datTarget = m_dTargetDate
'    End If
'    strSQL = strSQL & "AND " & "(W.WBS|fffd|I|fffd||fffd||fffd||fffd| IS NULL OR "
'    strSQL = strSQL & "(W.|fffd||fffd||fffd|{WBS|fffd|J|fffd|n|fffd||fffd| <= '" & Format(datTarget, "yyyy/mm/dd") & "' AND '"
'    strSQL = strSQL & Format$(m_dTargetDate, "yyyy/mm/dd") & "' " & "<= W.WBS|fffd|I|fffd||fffd||fffd||fffd|)) "
''--------------------------------------------------------------------------------
'    If (Trim(strWhere) <> "") Then
'        strSQL = strSQL & "AND " & strWhere
'    End If
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    funcCreateWBSSelectSQL = strSQL
    
End Function

'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|SQL|fffd||c42c|
' |fffd||c42c||fffd||fffd|
' |fffd|@2002/11/28  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'
'   2002/04/21 : Knowlbo m.o : NKFAS|fffd||389||fffd|
'   2016/08/01 : Y.Watanabe  : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'--------------------------------------------------------------------------------
Private Function funcCreateCostCenterSelectSQL() As String
Dim strSQL As String
Dim iWorkSubjectLength As String
Dim strWorkSubject As String
Dim strWhere As String
'--------------------------------------------------------------------------------
Dim datTarget As Date
'--------------------------------------------------------------------------------
    
    '|fffd||fffd||189||216||683|`|fffd|F|fffd|b|fffd|N
    txtWorkSubject.Text = Trim(txtWorkSubject.Text)
    iWorkSubjectLength = Len(txtWorkSubject.Text)
    strWorkSubject = StrConv(Mid(txtWorkSubject.Text, 1, 1), vbUpperCase)
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defSearchCostCenter
    'WBS
    If (strWorkSubject = "X") Or (strWorkSubject = "Z") Then
        If (iWorkSubjectLength > 7) Then
            MsgBox "WBS Code is wrong. Please confirm it again.", vbOKOnly + vbInformation
            Exit Function
        Else
            strSQL = Replace(strSQL, "@1", "'" & txtWorkSubject.Text & "'")
        End If
    Else
        strSQL = Replace(strSQL, "@1", "Null")
    End If
    '|fffd||fffd||fffd||195||fffd|
    strSQL = Replace(strSQL, "@2", "Null")
    '|fffd||fffd||fffd||fffd|
    If (cmbSection.Text <> "") Then
        strSQL = Replace(strSQL, "@3", "'" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "'")
    Else
        strSQL = Replace(strSQL, "@3", "Null")
    End If
    '|fffd||fffd||fffd||fffd|
    If (Trim(txtName.Text) <> "") Then
        strSQL = Replace(strSQL, "@4", "'" & txtName.Text & "'")
    Else
        strSQL = Replace(strSQL, "@4", "Null")
    End If
    If (IsNull(m_dTargetDate) = True) Then
        strSQL = Replace(strSQL, "@5", "'" & Format(Now(), "yyyy/mm/dd") & "'")
    Else
        strSQL = Replace(strSQL, "@5", "'" & Format(m_dTargetDate, "yyyy/mm/dd") & "'")
    End If
    
'    If (strWorkSubject = "X") Or (strWorkSubject = "Z") Then
'        '|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
'        If (iWorkSubjectLength = 7) Then
'            strWhere = strWhere & "G.|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ = '" & txtWorkSubject.Text & "' "
'        ElseIf (iWorkSubjectLength > 7) Then
'            MsgBox "|fffd||fffd||189||216||682||24b|K|fffd||fffd|O|fffd||303|R|fffd|[|fffd|h|fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKOnly + vbInformation
'            Exit Function
'        Else
'            strWhere = strWhere & "G.|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ Like '" & txtWorkSubject.Text & "%' "
'        End If
'    End If
'    If (Trim(txtName.Text) <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "G.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Like '%" & txtName.Text & "%' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "G.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Like '%" & txtName.Text & "%' "
'        End If
'    End If
''-> Add 2003/03/27 S.Yabe
'    If (cmbSection.Text <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "G.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^ = '" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "G.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^ = '" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "' "
'        End If
'    End If
''<- Add
''--------------------------------------------------------------------------------
'    '|fffd||38f||6d3||fffd||fffd||257|L|fffd||fffd||fffd||20f||fffd||502||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'    If (IsNull(m_dTargetDate) = True) Then
'        datTarget = Now '|fffd||28f||fffd||202||fffd||fffd||342||fffd|
'    Else
'        datTarget = m_dTargetDate
'    End If
'    strWhere = strWhere & "AND (G.|fffd|L|fffd||fffd||fffd|J|fffd|n|fffd||fffd| <= '" & Format$(m_dTargetDate, "yyyy/mm/dd") & "' AND '"
'    strWhere = strWhere & Format$(m_dTargetDate, "yyyy/mm/dd") & "' " & "<= G.|fffd|L|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd|) "
''--------------------------------------------------------------------------------
'
'    strSQL = "SELECT "
'    strSQL = strSQL & "G.|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ AS |fffd||fffd||189||216||fffd|, "
'    strSQL = strSQL & "IsNULL(G.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,'') AS |fffd||fffd||fffd||fffd|, "
'    strSQL = strSQL & "'' AS |fffd|O|fffd||a30f||fffd||fffd|, "
'    strSQL = strSQL & "IsNULL(G.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^,'') AS |fffd||fffd||fffd||fffd|Code, "
'    strSQL = strSQL & "IsNULL(S.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,'') AS |fffd||fffd||fffd||fffd||fffd||fffd|, "
'    strSQL = strSQL & "'' AS |fffd||18e||fffd|Code "
'    If (strWorkSubject = "J") Then
'        strSQL = strSQL & ", '' AS |fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
'    End If
'    strSQL = strSQL & "FROM " & def|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ & " G "
'    strSQL = strSQL & "LEFT JOIN " & defSectionMaster & " S ON S.|fffd|g|fffd|DCode = G.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^ "
'    If (Trim(strWhere) <> "") Then
'        strSQL = strSQL & "WHERE " & strWhere
'    End If
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    funcCreateCostCenterSelectSQL = strSQL
    
End Function

'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||fffd||fffd||fffd|w|fffd|}|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|SQL|fffd||c42c|
' |fffd||c42c||fffd||fffd|
' |fffd|@2002/11/28  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'
'   2002/04/21 : Knowlbo m.o : NKFAS|fffd||389||fffd|
'   2016/08/01 : Y.Watanabe  : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'--------------------------------------------------------------------------------
Private Function funcCreateInternalDirectionsSelectSQL() As String
Dim strSQL As String
Dim iWorkSubjectLength As String
Dim strWorkSubject As String
Dim strWhere As String
'--------------------------------------------------------------------------------
Dim datTarget As Date
'--------------------------------------------------------------------------------

    '|fffd||fffd||189||216||683|`|fffd|F|fffd|b|fffd|N
    txtWorkSubject.Text = Trim(txtWorkSubject.Text)
    iWorkSubjectLength = Len(txtWorkSubject.Text)
    strWorkSubject = StrConv(Mid(txtWorkSubject.Text, 1, 1), vbUpperCase)
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defSearchInternalDirect
    'WBS
    If (strWorkSubject = "Y") Then
        If (iWorkSubjectLength > 8) Then
            MsgBox "WBS Code is wrong. Please confirm it again.", vbOKOnly + vbInformation
            Exit Function
        Else
            strSQL = Replace(strSQL, "@1", "'" & txtWorkSubject.Text & "'")
        End If
    Else
        strSQL = Replace(strSQL, "@1", "Null")
    End If
    '|fffd||fffd||fffd||195||fffd|
    strSQL = Replace(strSQL, "@2", "Null")
    '|fffd||fffd||fffd||fffd|
    If (cmbSection.Text <> "") Then
        strSQL = Replace(strSQL, "@3", "'" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "'")
    Else
        strSQL = Replace(strSQL, "@3", "Null")
    End If
    '|fffd||fffd||fffd||fffd|
    If (Trim(txtName.Text) <> "") Then
        strSQL = Replace(strSQL, "@4", "'" & txtName.Text & "'")
    Else
        strSQL = Replace(strSQL, "@4", "Null")
    End If
    If (IsNull(m_dTargetDate) = True) Then
        strSQL = Replace(strSQL, "@5", "'" & Format(Now(), "yyyy/mm/dd") & "'")
    Else
        strSQL = Replace(strSQL, "@5", "'" & Format(m_dTargetDate, "yyyy/mm/dd") & "'")
    End If
    
'    If (strWorkSubject = "Y") Then
'        '|fffd||fffd||fffd||fffd||fffd|w|fffd|}
'        If (iWorkSubjectLength = 8) Then
'            strWhere = strWhere & "N.|fffd||fffd||fffd||fffd||fffd|w|fffd|} = '" & txtWorkSubject.Text & "' "
'        ElseIf (iWorkSubjectLength > 8) Then
'            MsgBox "|fffd||fffd||189||216||682||24b|K|fffd||fffd|O|fffd||303|R|fffd|[|fffd|h|fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKOnly + vbInformation
'            Exit Function
'        Else
'            strWhere = strWhere & "N.|fffd||fffd||fffd||fffd||fffd|w|fffd|} Like'" & txtWorkSubject.Text & "%' "
'        End If
'    End If
'    If (Trim(txtName.Text) <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "N.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Like '%" & txtName.Text & "%' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "N.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Like '%" & txtName.Text & "%' "
'        End If
'    End If
''-> Add 2003/03/27 S.Yabe
'    If (cmbSection.Text <> "") Then
'        If (Trim(strWhere) = "") Then
'            strWhere = strWhere & "N.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^ = '" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "' "
'        Else
'            strWhere = strWhere & "AND "
'            strWhere = strWhere & "N.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^ = '" & Mid(cmbSection.Text, 1, InStr(1, cmbSection.Text, " ") - 1) & "' "
'        End If
'    End If
''<- Add
''--M.O---------------------------------------------------------------------------
'    '|fffd||38f||6d3||fffd||fffd||257|L|fffd||fffd||fffd||20f||fffd||502||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'    If (IsNull(m_dTargetDate) = True) Then
'        datTarget = Now '|fffd||28f||fffd||202||fffd||fffd||342||fffd|
'    Else
'        datTarget = m_dTargetDate
'    End If
'    strWhere = strWhere & "AND (N.|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= '" & Format$(m_dTargetDate, "yyyy/mm/dd") & "' AND '"
'    strWhere = strWhere & Format$(m_dTargetDate, "yyyy/mm/dd") & "' " & "<= N.|fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd|) "
''--------------------------------------------------------------------------------
'
'    strSQL = "SELECT "
'    strSQL = strSQL & "N.|fffd||fffd||fffd||fffd||fffd|w|fffd|} AS |fffd||fffd||189||216||fffd|, "
'    strSQL = strSQL & "IsNULL(N.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,'') AS |fffd||fffd||fffd||fffd|, "
'    strSQL = strSQL & "'' AS |fffd|O|fffd||a30f||fffd||fffd|, "
'    strSQL = strSQL & "IsNULL(N.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^,'') AS |fffd||fffd||fffd||fffd|Code, "
'    strSQL = strSQL & "IsNULL(S.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,'') AS |fffd||fffd||fffd||fffd||fffd||fffd|, "
'    strSQL = strSQL & "'' AS |fffd||18e||fffd|Code "
'    If (strWorkSubject = "J") Then
'        strSQL = strSQL & ", '' AS |fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
'    End If
'    strSQL = strSQL & "FROM " & def|fffd||fffd||fffd||fffd||fffd|w|fffd|} & " N "
'    strSQL = strSQL & "LEFT JOIN " & defSectionMaster & " S ON S.|fffd|g|fffd|DCode = N.|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|^ "
'    If (Trim(strWhere) <> "") Then
'        strSQL = strSQL & "WHERE " & strWhere
'    End If
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    funcCreateInternalDirectionsSelectSQL = strSQL
    
End Function

'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
' |fffd||c42c||fffd||fffd|
' |fffd|@2002/11/26  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'--------------------------------------------------------------------------------
Private Sub funcReadSection()
Dim rsSection As New ADODB.Recordset
Dim i As Integer
Dim iRecordCount As Integer
Dim strSQL As String

    cmbSection.Clear
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetSection
    If (cmbOrganization.ListIndex <> -1) Then
        strSQL = Replace(strSQL, "@1", "'" & m_Organization(cmbOrganization.ListIndex) & "'")
    Else
        strSQL = Replace(strSQL, "@1", "Null")
    End If
    m_dba.SQLString = strSQL
    '|fffd||fffd||fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
    If (m_dba.openRecordset(m_conn, rsSection) <> 0) Then
        Exit Sub
    End If
    
    If (rsSection.EOF) Then
        MsgBox "Selected Department is not registered in a database. Please confirm it again.", vbInformation
    Else
        i = 0
        Do Until rsSection.EOF
            With cmbSection
                .AddItem
                .Column(0, i) = rsSection.Fields("SectionCode").Value & "  " & rsSection.Fields("SectionName").Value
            End With
            i = i + 1
            rsSection.MoveNext
        Loop
    End If
    
'    strSQL = "SELECT Count(*) AS CNT FROM " & _
'             defSectionMaster & _
'             " WHERE " & _
'             "(|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GetDate() AND |fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= GetDate()) " & _
'             "AND " & _
'             "(|fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O <> 1 OR |fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O Is Null ) AND WBS|fffd|t|fffd||fffd||fffd|O = '1' AND (|fffd|K|fffd|w = 4 OR |fffd|K|fffd|w = 5) "
'    If (cmbOrganization.ListIndex <> -1) Then
'        strSQL = strSQL & "AND SUBSTRING(|fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code,1,12) = '" & m_Organization(cmbOrganization.ListIndex) & "' "
'    End If
'    m_dba.SQLString = strSQL
'
'    '|fffd||fffd||fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
'    If (m_dba.openRecordset(m_conn, rsSection) <> 0) Then
'        Exit Sub
'    End If
'    iRecordCount = rsSection.Fields("CNT").Value
'    rsSection.Close
'
'    If (iRecordCount = 0) Then
'        MsgBox "|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||195||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|g|fffd|D|fffd|}|fffd|X|fffd|^|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbInformation
'        Exit Sub
'    End If
'
'    strSQL = "SELECT |fffd|g|fffd|DCode, |fffd||556a||fffd||797||fffd||fffd||fffd||fffd||fffd||fffd||fffd| + ' ' + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| AS |fffd||fffd||fffd||fffd| FROM " & _
'             defSectionMaster & _
'             " WHERE " & _
'             "(|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GetDate() AND |fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= GetDate()) " & _
'             "AND " & _
'             "(|fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O <> 1 OR |fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O Is Null ) AND WBS|fffd|t|fffd||fffd||fffd|O = '1' AND (|fffd|K|fffd|w = 4 OR |fffd|K|fffd|w = 5) "
'    If (cmbOrganization.ListIndex <> -1) Then
'        strSQL = strSQL & "AND SUBSTRING(|fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code,1,12) = '" & m_Organization(cmbOrganization.ListIndex) & "' "
'    End If
'    m_dba.SQLString = strSQL
'
'    '|fffd||fffd||fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
'    If (m_dba.openRecordset(m_conn, rsSection) <> 0) Then
'        Exit Sub
'    End If
'    rsSection.MoveFirst
'
'    For i = 0 To iRecordCount - 1
'        With cmbSection
'            .AddItem
'            .Column(0, i) = rsSection.Fields("|fffd|g|fffd|DCode").Value & "  " & rsSection.Fields("|fffd||fffd||fffd||fffd|").Value
''            .Column(0, i) = rsSection.Fields("SectionCode").Value
''            .Column(1, i) = rsSection.Fields("SectionName").Value
'        End With
'        rsSection.MoveNext
'    Next i
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    rsSection.Close
    Set rsSection = Nothing
    
End Sub

'-> Add 2003/03/27 S.Yabe
'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||fffd||196|{|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
' |fffd||c42c||fffd||fffd|
' |fffd|@2003/03/27  Knowlbo S.Yabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'--------------------------------------------------------------------------------
Private Sub funcReadOrganization()
Dim rs As New ADODB.Recordset
Dim i As Integer
Dim iRecordCount As Integer

    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    m_dba.SQLString = "SELECT * FROM " & defGetOrganization
    '|fffd||fffd||fffd||196|{|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
    If (m_dba.openRecordset(m_conn, rs) <> 0) Then
        Exit Sub
    End If
    
    If (rs.EOF) Then
    Else
        i = 0
        Do Until rs.EOF
            With cmbOrganization
                .AddItem
                .Column(0, i) = rs.Fields("OrganizationCode").Value & "  " & rs.Fields("OrganizationName").Value
                ReDim Preserve m_Organization(i)
                m_Organization(i) = rs.Fields("OrganizationInnerCode").Value
            End With
            i = i + 1
            rs.MoveNext
        Loop
    End If
    
'    m_dba.SQLString = "SELECT Count(*) AS CNT FROM " & _
'                      defSectionMaster & _
'                      " WHERE " & _
'                      "(|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GetDate() AND |fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= GetDate()) " & _
'                      "AND " & _
'                      "(|fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O <> 1 OR |fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O Is Null ) AND |fffd|K|fffd|w = 3 "
'    '|fffd||fffd||fffd||196|{|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
'    If (m_dba.openRecordset(m_conn, rs) <> 0) Then
'        Exit Sub
'    End If
'    iRecordCount = rs.Fields("CNT").Value
'    rs.Close
'    m_dba.SQLString = "SELECT |fffd|g|fffd|DCode, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| AS |fffd||fffd||fffd||fffd|, SUBSTRING(|fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code,1,12) AS |fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code FROM " & _
'                      defSectionMaster & _
'                      " WHERE " & _
'                      "(|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GetDate() AND |fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= GetDate()) " & _
'                      "AND " & _
'                      "(|fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O <> 1 OR |fffd||2cb||fffd|g|fffd|D|fffd|t|fffd||fffd||fffd|O Is Null ) AND |fffd|K|fffd|w = 3 "
'    '|fffd||fffd||fffd||196|{|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
'    If (m_dba.openRecordset(m_conn, rs) <> 0) Then
'        Exit Sub
'    End If
'    rs.MoveFirst
'
'    For i = 0 To iRecordCount - 1
'        With cmbOrganization
'            .AddItem
'            .Column(0, i) = rs.Fields("|fffd|g|fffd|DCode").Value & "  " & rs.Fields("|fffd||fffd||fffd||fffd|").Value
'            ReDim Preserve m_Organization(i)
'            m_Organization(i) = rs.Fields("|fffd|g|fffd|D|fffd||fffd||fffd||fffd|Code").Value
'        End With
'        rs.MoveNext
'    Next i
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    rs.Close
    Set rs = Nothing
    
End Sub
'<- Add

'--------------------------------------------------------------------------------
'|fffd|v|fffd||fffd||fffd|C|fffd|x|fffd|[|fffd|g|fffd||fffd||fffd|\|fffd|b|fffd|h
'--------------------------------------------------------------------------------

'|fffd||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd| Click |fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub cmdFind_Click()
Dim rsResult As New ADODB.Recordset
Dim i As Integer
Dim iRet As Integer
Dim strSQL As String
Dim strSQL2 As String
Dim iRecordCount As Integer
Dim strWorkSubject As String

    On Error GoTo LBL_ERROR
    
    lstFindResult.Clear
    Erase m_tWBS()
    
    '--------------------------------------------------
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    '|fffd||402||182||82||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||343|G|fffd||fffd||fffd|[|fffd||182||fffd||fffd||fffd|
    '--------------------------------------------------
    If (chkProject.Value = False) And _
        (chkOperatingTechnology.Value = False) And _
        (chkPartExpense.Value = False) And _
        (chkCompletionProject.Value = False) And _
        (Trim(txtWorkSubject.Text) = "") And _
        (Trim(cmbSection.Text) = "") And _
        (Trim(cmbOrganization.Text) = "") And _
        (Trim(txtName.Text) = "") Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "Please enter one or more conditions if you search anything.", vbOKOnly + vbInformation
'        MsgBox "|fffd|P|fffd||88||20f||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbInformation
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Sub
    End If
    
    txtWorkSubject.Text = Trim(txtWorkSubject.Text)
    strWorkSubject = StrConv(Mid(txtWorkSubject.Text, 1, 1), vbUpperCase)
    strSQL = ""
    
    ''<<<2016.08.05 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
    '|fffd||fffd||fffd||fffd|AWBS|fffd||311||38f||6c2||313||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||241|A|fffd||389||fffd||fffd||fffd||fffd|K|fffd|v|fffd||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd||302||141|A|fffd||fffd||fffd||fffd||fffd||fffd|WBS|fffd||313||fffd||fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||34d|s|fffd||fffd||202||fffd|
    If (strWorkSubject = "X") Or (strWorkSubject = "Z") Then
        '|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
        strSQL = funcCreateCostCenterSelectSQL()
    ElseIf (strWorkSubject = "Y") Then
        '|fffd||fffd||fffd||fffd||fffd|w|fffd|}
        strSQL = funcCreateInternalDirectionsSelectSQL()
    ElseIf (strWorkSubject <> "") Then
        'WBS
        strSQL = funcCreateWBSSelectSQL()
    ElseIf (strWorkSubject = "") Then
    
'    If (strWorkSubject = "A") Or (strWorkSubject = "B") Or _
'       (strWorkSubject = "C") Or (strWorkSubject = "D") Or _
'       (strWorkSubject = "J") Or (strWorkSubject = "P") Or _
'       (strWorkSubject = "T") Or (strWorkSubject = "R") Then
'        'WBS
'        strSQL = funcCreateWBSSelectSQL()
'    ElseIf (strWorkSubject = "X") Or (strWorkSubject = "Z") Then
'        '|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
'        strSQL = funcCreateCostCenterSelectSQL()
'    ElseIf (strWorkSubject = "Y") Then
'        '|fffd||fffd||fffd||fffd||fffd|w|fffd|}
'        strSQL = funcCreateInternalDirectionsSelectSQL()
'    ElseIf (Trim(strWorkSubject) = "") Then
    ''>>>2016.08.05 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
        '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|`|fffd|F|fffd|b|fffd|N Or |fffd|v|fffd||fffd||fffd|||fffd|[|fffd|U|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N Or |fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||702||fffd|
        If (chkProject.Value = True) Or (chkCompletionProject.Value = True) Then
            strSQL = funcCreateWBSSelectSQL()
        End If
        '|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        If (chkPartExpense.Value = True) Then
            If (strSQL = "") Then
                strSQL = funcCreateCostCenterSelectSQL()
            Else
                strSQL2 = funcCreateCostCenterSelectSQL()
                If (strSQL2 <> "") Then
                    strSQL = strSQL & " UNION " & strSQL2
                End If
            End If
        End If
        '|fffd|Z|fffd|p|fffd|c|fffd||194||fffd|`|fffd|F|fffd|b|fffd|N
        If (chkOperatingTechnology.Value = True) Then
            If (strSQL = "") Then
                strSQL = funcCreateInternalDirectionsSelectSQL()
            Else
                strSQL2 = funcCreateInternalDirectionsSelectSQL()
                If (strSQL2 <> "") Then
                    strSQL = strSQL & " UNION " & strSQL2
                End If
            End If
        End If
'''        '|fffd||fffd||fffd||195||fffd||fffd|I|fffd||fffd|
'''        If cmbOrganization.Text <> "" Then
'''            strSQL = funcCreateWBSSelectSQL()
'''        End If
    Else
        '|fffd|K|fffd||fffd|O|fffd||303|R|fffd|[|fffd|h
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "WBS Code is wrong. Please confirm it again.", vbOKOnly + vbInformation
'        MsgBox "|fffd||fffd||189||216||682||24b|K|fffd||fffd|O|fffd||303|R|fffd|[|fffd|h|fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKOnly + vbInformation
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Exit Sub
    End If
    
    If (strSQL = "") Then
        Exit Sub
    End If
    
    m_dba.SQLString = "SELECT COUNT(*) AS CNT FROM (" & strSQL & ") X "
    iRet = m_dba.openRecordset(m_conn, rsResult)
    If (iRet <> 0) Then
        GoTo LBL_EXIT
    End If
    iRecordCount = rsResult.Fields("CNT").Value
    rsResult.Close
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||28c||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If iRecordCount > 200 Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "It cannot be displayed since the search results are over 200." & vbCrLf & "Narrow search requirement and search again.", _
               vbOKOnly + vbInformation
'        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd|200|fffd||fffd||fffd||12d02||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "200|fffd||fffd||fffd||209||fffd||fffd||242||202||fffd|l|fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", _
'               vbOKOnly + vbInformation, "|fffd||fffd||fffd||fffd|"
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_EXIT
    End If
    
    m_dba.SQLString = strSQL
    iRet = m_dba.openRecordset(m_conn, rsResult)
    If (iRet <> 0) Then
        GoTo LBL_EXIT
    End If
    If (iRecordCount <> 0) Then
        rsResult.MoveFirst
        lstFindResult.ColumnCount = 2
        lstFindResult.ColumnWidths = "60;100"
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        For i = 0 To iRecordCount - 1
            With lstFindResult
                .AddItem
                .Column(0, i) = rsResult.Fields("WBS").Value
                .Column(1, i) = Trim(rsResult.Fields("JapaneseSubjectName").Value) & " (" & rsResult.Fields("SectionCode").Value & " : " & rsResult.Fields("SectionName").Value & ")"
            End With
            ReDim Preserve m_tWBS(i)
            With m_tWBS(i)
                .strWBS = rsResult.Fields("WBS").Value
                .strJapaneseSubjectName = rsResult.Fields("JapaneseSubjectName").Value
                .strEnglishSubjectName = rsResult.Fields("EnglishSubjectName").Value
                .strSectionCode = rsResult.Fields("SectionCode").Value
                .strSectionName = rsResult.Fields("SectionName").Value
                .strSupplierName = ""
                .strConclusionOfContractDay = ""
                ''<<<2016.08.05 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
                .strTypeOfIndustryCode = rsResult.Fields("TypeOfIndustryCode").Value
'                .strTypeOfIndustryCode = ""
'                If (strWorkSubject = "A") Or (strWorkSubject = "B") Or _
'                   (strWorkSubject = "C") Or (strWorkSubject = "D") Or _
'                   (strWorkSubject = "J") Or (strWorkSubject = "P") Or _
'                   (strWorkSubject = "T") Or (strWorkSubject = "R") Then
'                    .strTypeOfIndustryCode = rsResult.Fields("TypeOfIndustryCode").Value
'                End If
                ''>>>2016.08.05 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
                If (strWorkSubject = "J") Then
                    If IsNull(rsResult.Fields("ConclusionOfContractDay").Value) = False Then
                        .strConclusionOfContractDay = Format(rsResult.Fields("ConclusionOfContractDay").Value, "yyyy/mm/dd")
                    End If
                End If
            End With
            rsResult.MoveNext
        Next i
        
'        For i = 0 To iRecordCount - 1
'            With lstFindResult
'                .AddItem
'                .Column(0, i) = rsResult.Fields("|fffd||fffd||189||216||fffd|").Value
'                .Column(1, i) = Trim(rsResult.Fields("|fffd||fffd||fffd||fffd|").Value) & " (" & rsResult.Fields("|fffd||fffd||fffd||fffd|Code").Value & "|fffd|F" & rsResult.Fields("|fffd||fffd||fffd||fffd||fffd||fffd|").Value & ")"
'            End With
'            ReDim Preserve m_tWBS(i)
'            With m_tWBS(i)
'                .strWBS = rsResult.Fields("|fffd||fffd||189||216||fffd|").Value
'                .strJapaneseSubjectName = rsResult.Fields("|fffd||fffd||fffd||fffd|").Value
'                .strEnglishSubjectName = rsResult.Fields("|fffd|O|fffd||a30f||fffd||fffd|").Value
'                .strSectionCode = rsResult.Fields("|fffd||fffd||fffd||fffd|Code").Value
'                .strSectionName = rsResult.Fields("|fffd||fffd||fffd||fffd||fffd||fffd|").Value
'                .strSupplierName = ""
'                .strConclusionOfContractDay = ""
'                .strTypeOfIndustryCode = ""
'                If (strWorkSubject = "A") Or (strWorkSubject = "B") Or _
'                   (strWorkSubject = "C") Or (strWorkSubject = "D") Or _
'                   (strWorkSubject = "J") Or (strWorkSubject = "P") Or _
'                   (strWorkSubject = "T") Or (strWorkSubject = "R") Then
'                    .strTypeOfIndustryCode = rsResult.Fields("|fffd||18e||fffd|Code").Value
'                End If
'                If (strWorkSubject = "J") Then
'                    If IsNull(rsResult.Fields("|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Value) = False Then
'                        .strConclusionOfContractDay = Format(rsResult.Fields("|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Value, "yyyy/mm/dd")
'                    End If
'                End If
'            End With
'            rsResult.MoveNext
'        Next i
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        rsResult.Close
    Else
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        MsgBox "There is no WBS that corresponds to search requirement." & vbCrLf & "Change the search requirement and search again.", vbOKOnly + vbInformation
'        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbOKOnly + vbInformation
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_EXIT
    End If
    
    On Error GoTo 0
   
LBL_ERROR:

LBL_EXIT:
    
    Set rsResult = Nothing
    
End Sub

'|fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd| Click |fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub cmdSelect_Click()
    If (lstFindResult.ListIndex <> -1) Then
        m_bSelectedFlag = True
    End If
    m_bTerminateStatus = True
    Me.Hide
End Sub

'|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd| Click |fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub cmdCancel_Click()
    m_bSelectedFlag = False
    m_bTerminateStatus = True
    Me.Hide
End Sub

Private Sub lstFindResult_Change()
    cmdSelect.Enabled = True
End Sub

'|fffd||fffd||fffd||196|{|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|@Change|fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub cmbOrganization_Change()
    If m_InitFlag = False Then
        '|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|ComboBox|fffd||253||1c2||74d||fffd||fffd||fffd|
        Call funcReadSection
    End If
End Sub

'|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|t|fffd|H|fffd|[|fffd||fffd| Initialize |fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub UserForm_Initialize()

chkCompletionProject.Visible = False 'chkCompletionProject|fffd||355|s|fffd|v 03/04/21

    m_bTerminateStatus = False
    m_bSelectedFlag = False
    m_dTargetDate = Now
    
    m_dba.ServerName = c_strServerName
    m_dba.DBName = c_strDBName
    m_dba.UserID = c_strUserID
    m_dba.Password = c_strPassword
    m_dba.CallPlace = ID_NKFAS_SS
    
    
    m_dba.ProviderType = True

    cmbSection.ColumnCount = 1
    'cmbSection.ColumnWidths = "50;100"

    'DBOpen|fffd|`|fffd|F|fffd|b|fffd|N
    If (m_conn Is Nothing) Or (IsNull(m_conn) = True) Or (m_conn.State = adStateClosed) Then
        If (m_dba.openADOConnection(m_conn) <> 0) Then
            Exit Sub
        End If
    End If
    
    cmdSelect.Enabled = False

    m_InitFlag = True
    
    '|fffd||fffd||fffd||196|{|fffd||fffd||fffd||fffd|CombBox|fffd||253||1c2||74d||fffd||fffd||fffd|
    Call funcReadOrganization
    
    m_InitFlag = False
    
    '|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|ComboBox|fffd||253||1c2||74d||fffd||fffd||fffd|
'    Call funcReadSection
    
End Sub

'|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|t|fffd|H|fffd|[|fffd||fffd| QueryClose |fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    
    If m_bTerminateStatus = False Then
        Cancel = True
        Me.Hide
    Else
        Call m_dba.closeADOConnection(m_conn)
        Set m_conn = Nothing
        Set m_dba = Nothing
    End If
    
End Sub





Attribute VB_Name = "frmLauncher"
Attribute VB_Base = "0{A65FE1CB-43DA-44BA-99C8-3FD094A653C2}{CDEDF614-B517-4C8C-AD50-665131ED8496}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||fffd||fffd||fffd|`|fffd||fffd||fffd|[|fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_datTgtDate As Date                    ''TargetMonth(SQL|fffd||fffd||fffd||fffd||fffd||14e|g|fffd|p)
Private m_blnSetupInProgress As Boolean         ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_strModifyOfficeCode As String         ''ImportCnterData |fffd||fffd||fffd||30f|C|fffd||fffd||fffd||fffd||fffd|c|fffd||18e||fffd||fffd||fffd||fffd||fffd|
Private m_strExchngData As String               ''|fffd||fffd||fffd||fffd|File|fffd||313||fffd||fffd|eData
Private m_strExchngField As String              ''|fffd||fffd||fffd||fffd|File|fffd||313||fffd||fffd|eData|fffd||38f||fffd|Field

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
' Master Input Combo Menu Item String
Private Const mc_strMnu_LEDGERMASTER As String = "Ledger Master Setting"  ''Menu-Ledger Master Setting
Private Const mc_strMnu_CONNECTCODE As String = "Connection Code Setting" ''Menu-Connection Code Setting

' Ledger Input Combo Menu Item String
Private Const mc_strMnu_CASHBOOK As String = "01 CASH BOOK"                       ''Menu-01 CASH BOOK
Private Const mc_strMnu_BANKBOOK As String = "02 BANK BOOK"                       ''Menu-02 BANK BOOK
Private Const mc_strMnu_TRANSFER As String = "03 TRANSFER SHEET"                  ''Menu-03 TRANSFER SHEET
Private Const mc_strMnu_BRINVOICE As String = "04 BREAKDOWN OF INVOICE TO CLIENT" ''Menu-04 BREAKDOWN OF INVOICE TO CLIENT
Private Const mc_strMnu_INVOICE As String = "05 LEDGER FOR INVOICE TO CLIENT"     ''Menu-05 LEDGER FOR INVOICE TO CLIENT
Private Const mc_strMnu_ASSOCIATE As String = "06 LEDGER FOR PAYMENT TO ASSOCIATE" ''Menu-06 LEDGER FOR PAYMENT TO ASSOCIATE
Private Const mc_strMnu_SUBCON As String = "07 LEDGER FOR PAYMENT TO SUB-CONTRACTOR" ''Menu-07 LEDGER FOR PAYMENT TO SUB-CONTRACTOR
Private Const mc_strMnu_PREPAID As String = "08 LEDGER FOR PREPAID EXPENSES"     ''Menu-08 LEDGER FOR PREPAID EXPENSES
Private Const mc_strMnu_REQREMITTANCE As String = "09 REMITTANCE REQUEST"        ''Menu-09 REMITTANCE REQUEST
Private Const mc_strMnu_CASHFLOW As String = "10 CASH FLOW TABLE"                ''Menu-10 CASH FLOW TABLE
Private Const mc_strMnu_HSTREMITTANCE As String = "11 HISTORICAL DATA FOR REMITTANCE" ''Menu-11 HISTORICAL DATA FOR REMITTANCE
Private Const mc_strMnu_BSACCOUNTS As String = "12 BALANCE OF BS ACCOUNTS"            ''Menu-12 BALANCE OF BS ACCOUNTS
Private Const mc_strMnu_PLACCOUNTS As String = "13 BALANCE OF PL ACCOUNTS"            ''Menu-13 BALANCE OF PL ACCOUNTS
Private Const mc_strMnu_SEARCHACCOUNTS As String = "14 SEARCH ACCOUNT DATA"           ''Menu-14 SEARCH ACCOUNT DATA
Private Const mc_strMnu_IMPORTREPORT As String = "15 DATA MODIFICATION CHECKLIST"     ''Menu-15 DATA MODIFICATION CHECKLIST

' Other Processing Menu Item String
Private Const mc_strMnu_MONTHLY As String = "Monthly Processing"                       ''Menu-Monthly Processing
Private Const mc_strMnu_IMPOFFICE As String = "Import Office Data"                     ''Menu-Import Office Data
Private Const mc_strMnu_IMPNKMODIFY As String = "Import NK Data"                       ''Menu-Import NK Data
Private Const mc_strMnu_IMPCNTMODIFY As String = "Import Branch Office Data"           ''Menu-Import Branch Office Data
Private Const mc_strMnu_ANNUAL As String = "Annual Processing"                         ''Menu-Annual Processing

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd|`|fffd||fffd||fffd|[|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/05/20 : |fffd|n|7c97|S|fffd|q       : |fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||389||fffd|
'   2013/11/12 : |fffd|n|7c97|S|fffd|q       : |fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||389||fffd|(|fffd|o|fffd|O|fffd|C|fffd||fffd|)
'   2014/03/05 : |fffd|n|7c97|S|fffd|q       : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()

    Dim intIx As Integer
    Dim strOffCode As String
    Dim strOffName As String
    
    g_blnQuitLaunncher = False ''Launcher|fffd|I|fffd||fffd||fffd||fffd||fffd||28f||fffd||fffd||fffd||fffd||fffd|
    
    m_blnSetupInProgress = True
    
    ''|fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||310||752||fffd|
    For intIx = 0 To UBound(g_intAryYear)
        cboYear.AddItem CStr(g_intAryYear(intIx)), intIx
    Next
    cboYear.Text = CStr(g_intAryYear(UBound(g_intAryYear)))
    
    ''Office Input Combo
    strOffCode = ""
    strOffName = ""
    For intIx = 0 To UBound(g_typAryOfficeInfo)
        cboOfficeCode.AddItem CStr(g_typAryOfficeInfo(intIx).m_strOfficeCode), intIx
        cboOfficeName.AddItem CStr(g_typAryOfficeInfo(intIx).m_strOfficeName), intIx
        If g_strOfficeCode = g_typAryOfficeInfo(intIx).m_strOfficeCode Then
            strOffCode = g_typAryOfficeInfo(intIx).m_strOfficeCode
            strOffName = g_typAryOfficeInfo(intIx).m_strOfficeName
        End If
    Next
    cboOfficeCode.Text = strOffCode
    cboOfficeName.Text = strOffName

    ''Master Input Combo
    cboSetting.AddItem mc_strMnu_LEDGERMASTER, 0
    cboSetting.AddItem mc_strMnu_CONNECTCODE, 1
    cboSetting.Text = mc_strMnu_LEDGERMASTER
    
    ''Ledger Input Combo
    cboInput.AddItem mc_strMnu_CASHBOOK, 0
    cboInput.AddItem mc_strMnu_BANKBOOK, 1
    cboInput.AddItem mc_strMnu_TRANSFER, 2
    cboInput.AddItem mc_strMnu_BRINVOICE, 3
    cboInput.AddItem mc_strMnu_INVOICE, 4
    cboInput.AddItem mc_strMnu_ASSOCIATE, 5
    cboInput.AddItem mc_strMnu_SUBCON, 6
    cboInput.AddItem mc_strMnu_PREPAID, 7
    cboInput.AddItem mc_strMnu_REQREMITTANCE, 8
    'cboInput.AddItem mc_strMnu_CASHFLOW, 9
    cboInput.AddItem mc_strMnu_HSTREMITTANCE, 9
    cboInput.AddItem mc_strMnu_BSACCOUNTS, 10
    cboInput.AddItem mc_strMnu_PLACCOUNTS, 11
    cboInput.AddItem mc_strMnu_SEARCHACCOUNTS, 12
    cboInput.AddItem mc_strMnu_IMPORTREPORT, 13
    
    cboInput.Text = mc_strMnu_CASHBOOK
    
    ''Other Processing
    cboOthers.AddItem mc_strMnu_MONTHLY, 0
    cboOthers.AddItem mc_strMnu_IMPOFFICE, 1
    cboOthers.AddItem mc_strMnu_IMPCNTMODIFY, 2
    cboOthers.AddItem mc_strMnu_ANNUAL, 3
    cboOthers.Text = mc_strMnu_MONTHLY
    
    cmdOfficeEdit.Visible = g_blnOfficeMstModify
    
    ''<<<2013.05.20 Mod By Y.Watanabe |fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||389||fffd|
    ''|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
    ''<<<2013.11.12 Mod By Y.Watanabe |fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||389||fffd|(|fffd|o|fffd|O|fffd|C|fffd||fffd|)
    lblVersion.Caption = "Version:" & ThisWorkbook.CustomDocumentProperties("Version")
'    lblVersion.Caption = "Version:" & ActiveWorkbook.CustomDocumentProperties("Version")
    ''>>>2013.11.12 Mod By Y.Watanabe |fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||389||fffd|(|fffd|o|fffd|O|fffd|C|fffd||fffd|)
    ''>>>2013.05.20 Mod By Y.Watanabe |fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||389||fffd|
    
    ''|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|
    If f_Certification() <> True Then
        GoTo LBL_EXIT
    End If
    
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||755|s|fffd||82||30f||a347||fffd||341|AOther Processing|fffd||351||fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
    If g_blnWrite = False Then
        cboOthers.Enabled = False
        cmdOthers.Enabled = False
    End If
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    m_blnSetupInProgress = False
    
    Exit Sub
    
LBL_EXIT:
    MsgBox c_strMSG_SYSQUIT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    Unload Me
    ThisWorkbook.m_blnCloseSysQuit = True
    ThisWorkbook.Saved = True
    ThisWorkbook.Close
    Exit Sub
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Version|fffd|\|fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Version|fffd|\|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/09 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub lblJapan_Click()
    frmVersion.Show
    cmdOfficeEdit.Visible = g_blnOfficeMstModify
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    OfficeCode/Name|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd|v|fffd|f|fffd|[|fffd|^|fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:Code/1:Name
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeCode/Name|fffd||302||1c2||fffd||fffd||70a9||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||1128e||fffd|R|fffd||fffd||fffd|{|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetOfficeCombo( _
    ByRef intCurrent As Integer _
)
    Dim intIx As Integer
    Dim strOffCode As String
    Dim strOffName As String
    
    m_blnSetupInProgress = True
    strOffCode = ""
    strOffName = ""
    For intIx = 0 To UBound(g_typAryOfficeInfo)
        If intCurrent = 0 Then ''Code
            If cboOfficeCode.Text = g_typAryOfficeInfo(intIx).m_strOfficeCode Then
                strOffCode = g_typAryOfficeInfo(intIx).m_strOfficeCode
                strOffName = g_typAryOfficeInfo(intIx).m_strOfficeName
                Exit For
            End If
        Else
            If cboOfficeName.Text = g_typAryOfficeInfo(intIx).m_strOfficeName Then
                strOffCode = g_typAryOfficeInfo(intIx).m_strOfficeCode
                strOffName = g_typAryOfficeInfo(intIx).m_strOfficeName
                Exit For
            End If
        End If
    Next
    
    If intCurrent = 0 Then ''Code
        cboOfficeName.Text = strOffName
    Else
        cboOfficeCode.Text = strOffCode
    End If

    If Len(cboOfficeCode.Text) <> 7 Then
        m_blnSetupInProgress = False
        Exit Sub
    End If
    
    ''|fffd||38f||6d4|N|fffd|x|fffd||30d||110||752||fffd|
    If g_strOfficeCode <> cboOfficeCode.Text Then
        g_strOfficeCode = cboOfficeCode.Text
        s_SetYearCombo
        s_SetTargetMonthDisp ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd|\|fffd||fffd||fffd||752||fffd|
    End If

    m_blnSetupInProgress = False
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||310||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||310||752||83c8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetYearCombo()
    Dim intIx As Integer
    Dim intLYear As Integer
    Dim intUYear As Integer
    Dim datValue As Date
    Dim datDesMin As Date
    Dim datDesMax As Date
    
'    If sg_GetDecisionTargetMonth(datDesMax, 0) = 0 Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
'        datDesMax = DateValue("2003/04/01")
'    End If

    datDesMin = 0
    datDesMax = 0

    sg_GetDecisionPeriodRange datDesMin, datDesMax
    If datDesMax = DateValue("1900/01/01") Then
        datDesMax = DateValue("2003/04/01")
    End If
    If datDesMin = DateValue("1900/01/01") Then
        datDesMin = DateValue("2003/04/01")
    End If
    
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6d3||fffd||fffd|t|fffd||fffd||fffd|N|fffd|x|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    intUYear = fg_GetFiscalYear(datDesMax)
    intLYear = fg_GetFiscalYear(datDesMin)
    
'    intUYear = Year(datDesMax)
'    intLYear = Year(datDesMin)
'    If Month(datDesMax) <= 3 Then intUYear = intUYear - 1
'    If Month(datDesMin) <= 3 Then intLYear = intLYear - 1
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''|fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
    cboYear.Clear
    For intIx = 0 To intUYear - intLYear
        ReDim Preserve g_intAryYear(intIx)
        g_intAryYear(intIx) = intLYear + intIx
        cboYear.AddItem CStr(g_intAryYear(intIx)), intIx
    Next
    cboYear.Text = CStr(g_intAryYear(UBound(g_intAryYear)))
    g_intTargetSysYear = CInt(cboYear.Text)

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd|\|fffd||fffd||fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||48f|W|fffd||94|\|fffd|F|fffd||81|@|fffd|m|fffd||fffd|F|fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/23 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetTargetMonthDisp()
    Dim datTarget As Date
    Dim intTgtMonth As Integer
    Dim intTgtYear As Integer
    Dim lngColorDef As Long
    
    If sg_GetDecisionTargetMonth(g_datDecisionMonth, 2) = 0 Then ''|fffd|m|fffd||830e||fffd||64fe|
        g_datDecisionMonth = 0
    End If
    If sg_GetDecisionTargetMonth(g_datImportMonth, 1) = 0 Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
        g_datImportMonth = 0
    End If
    
    lngColorDef = RGB(0, 0, 255) ''BLUE Default
    
    ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N---------------------------------------
    datTarget = g_datImportMonth
    intTgtMonth = Month(datTarget)
    intTgtYear = Year(datTarget)
    If datTarget <> 0 Then  ''|fffd|m|fffd||fffd||3c2||fffd|/Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
        If g_datImportMonth = g_datDecisionMonth Then
            ''|fffd||38f||6cc||fffd||fffd|m|fffd||fffd||3c2||fffd|
            lngColorDef = RGB(0, 0, 0)
        End If
    Else
        ''|fffd||fffd|Import|fffd||342||182||80a0||fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd|J|fffd|n|fffd||fffd||fffd||182||fffd||fffd||fffd|
        ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        datTarget = fg_GetStartOfYear(g_intTargetSysYear)
'        datTarget = DateValue(CStr(g_intTargetSysYear) & "/" & "04/01")
        ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    End If
    
    lblTgtMonthInfo.Caption = CStr(Year(datTarget)) & "/" & Format$(Month(datTarget), "00")
    lblTgtMonthInfo.ForeColor = lngColorDef

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    OfficeCode|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|[|fffd|^|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeCode|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|[|fffd|^|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboOfficeCode_Change()
    If m_blnSetupInProgress Then Exit Sub
    s_SetOfficeCombo 0
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    OfficeName|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|[|fffd|^|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeName|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|[|fffd|^|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboOfficeName_Change()
    If m_blnSetupInProgress Then Exit Sub
    s_SetOfficeCombo 1
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    OfficeCode|fffd|R|fffd||fffd||fffd|{|fffd||24e|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||28f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeCode|fffd|R|fffd||fffd||fffd|{|fffd||24e|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||28f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function s_SetMasterInfoByOfficeCode( _
) As Boolean

    Dim intIx As Integer
    
    s_SetMasterInfoByOfficeCode = False
    If cboOfficeCode.Text = "" Or cboOfficeName.Text = "" Then
        MsgBox c_strMSGCmn_REQUESTINPUT & "OfficeCode", vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Function
    End If
    
''    ''|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|
''    If f_Certification() <> True Then Exit Function
    
    If g_strOfficeCode <> g_strPreOfficeCode Then
    
        lblInfo.Caption = "Now Loading Office Information."
        lblInfo.Visible = True
        Call s_UIControl(False)        ' UI|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
        
        g_strPreOfficeCode = g_strOfficeCode
        g_strOfficeCode = cboOfficeCode.Text
        
        sg_GetMasterInfo    ''|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||64fe|
        
        ''LedgerSetUp|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||30f||fffd||fffd||fffd||fffd||fffd|
        For intIx = 0 To 14
            g_blnArySetupSheet(intIx) = False
            g_blnAryCmnMstUpdate(intIx) = False
        Next
        
        lblInfo.Visible = False
        Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
    
    End If
    
    s_SetMasterInfoByOfficeCode = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   MasterInput|fffd|N|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)MasterInput|fffd|R|fffd||fffd||fffd|{|fffd||311|I|fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdMaster_Click()
    
    If s_SetMasterInfoByOfficeCode() <> True Then Exit Sub
    
    Select Case cboSetting.Text
    Case mc_strMnu_LEDGERMASTER ''Menu-Ledger Master Setting
        frmSetting_Main.Show
    Case mc_strMnu_CONNECTCODE ''Menu-Connection Code Setting
        ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
        If fg_IsSetCommonInfo(GCMN_PJ) = False Then
            MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            Exit Sub
        Else
            lblInfo.Caption = "Now Loading Connection-Code."
            lblInfo.Visible = True
            DoEvents
            frmConnect_Setting.Show
        End If
    End Select
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerInput|fffd|N|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerInput|fffd|R|fffd||fffd||fffd|{|fffd||311|I|fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdLedger_Click()

    Dim strSheet As String
    Dim intcboIndex As Integer
    
    If s_SetMasterInfoByOfficeCode() <> True Then Exit Sub
    If cboInput.ListIndex < 0 Then
        Exit Sub
    End If
        
    Me.Hide
    
    ''|fffd|I|fffd||fffd|LedgerId|fffd||fffd||752||fffd|
    intcboIndex = cboInput.ListIndex
    If intcboIndex >= 9 Then intcboIndex = intcboIndex + 1 ''CashFlow|fffd||fffd||fffd||511||38d||fffd|
    g_enmSelectLedgerId = intcboIndex
    
    If fg_StartLedgerInput = False Then
        cboSetting.SetFocus
        cboSetting.Text = "Ledger Master Setting"
        Me.Show
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|[|fffd|U|fffd|F|fffd||602||fffd||fffd|s|fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|[|fffd|U|fffd|F|fffd||602||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Function f_Certification( _
) As Boolean

    Dim intIx As Integer
    
    f_Certification = False
    
    ''|fffd||fffd||fffd|[|fffd|U|fffd|F|fffd||fffd|
    If g_strLoginId = "" Then
        '|fffd|o|fffd|^|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|(|fffd|F|fffd||60a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||70c6||fffd|[|fffd|U|fffd|[|fffd|h|fffd|c|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|)
        g_strEmployeeCode = ""
        frmLogin.Show vbModal
        If frmLogin.IsLogin() Then
            g_strLoginId = frmLogin.UserID
            g_strEmployeeCode = frmLogin.EmployeeCode
            ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
            g_blnWrite = frmLogin.IsWrite
            ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
            frmLogin.CloseForm
        Else
            frmLogin.CloseForm
            Exit Function
        End If
    End If
    
'#If def_intDBPlace = 2 Then     ''|fffd||fffd||fffd|[|fffd|J|fffd||fffd|
'    MsgBox "Local TEST Version!"
'#End If
    f_Certification = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdOfficeEdit_Click()
    Dim intIx As Integer
    Dim strOffCode As String
    Dim blnUpdate As Boolean

    If g_blnOfficeMstModify <> True Then
        MsgBox c_strMSG_DBMstCERT_ERR, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Sub
    End If

    If f_Certification() <> True Then Exit Sub
        
    ''Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|\|fffd||fffd|
    frmOfficeMaster.Show
    
    ''DB|fffd|X|fffd|V|fffd||fffd||502||fffd||fffd||64fe|
    blnUpdate = frmOfficeMaster.Result
    frmOfficeMaster.s_CloseForm
    
    If blnUpdate <> True Then Exit Sub
    
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||113||1c2||74d||fffd||fffd||fffd|
    sg_GetCommonInfo
    
    ''OFFICE|fffd|R|fffd||fffd||fffd|{|fffd||110||752||fffd|
''    strOffCode = cboOfficeCode.Text
    strOffCode = ""
    cboOfficeCode.Clear
    cboOfficeName.Clear
    
    For intIx = 0 To UBound(g_typAryOfficeInfo)
        cboOfficeCode.AddItem CStr(g_typAryOfficeInfo(intIx).m_strOfficeCode), intIx
        cboOfficeName.AddItem CStr(g_typAryOfficeInfo(intIx).m_strOfficeName), intIx
        If g_strOfficeCode = g_typAryOfficeInfo(intIx).m_strOfficeCode Then
            strOffCode = g_typAryOfficeInfo(intIx).m_strOfficeCode
        End If
    Next
    cboOfficeCode.Text = strOffCode

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6d4|N|fffd|x|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboYear_Change()
    Dim intCount As Integer
    If m_blnSetupInProgress Then Exit Sub
    
    If cboYear.ListIndex < 0 Then Exit Sub
    g_intTargetSysYear = CInt(cboYear.Text)

    For intCount = 0 To 14  ''|fffd|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O
        g_blnAryCmnMstUpdate(intCount) = True
    Next

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||1c2||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdOthers_Click()
    If s_SetMasterInfoByOfficeCode() <> True Then Exit Sub
    If cboOthers.ListIndex < 0 Then Exit Sub
    
    If cboYear.Text <> CStr(g_intAryYear(UBound(g_intAryYear))) Then
        MsgBox c_strMSG_SELECT_TARGET_YEAR, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        cboYear.SetFocus
        Exit Sub
    End If
    
    Select Case cboOthers.Text
    Case mc_strMnu_MONTHLY ''Menu-Monthly Processing
        s_MonthlyProc
    Case mc_strMnu_IMPOFFICE ''Menu-Import Office Data
        If (f_ImportOfficeData = True) Then
            MsgBox c_strMSGImp_SUCCESSIMPORT, vbOKOnly + vbInformation, c_strNAME_SYSTEM
        End If
    Case mc_strMnu_IMPCNTMODIFY ''Menu-Import Branch Office Data
        If (f_ImportJWData = True) Then
            MsgBox "Import (Branch Office Data)" & c_strMSGImp_SUCCESSIMPORT, vbOKOnly + vbInformation, c_strNAME_SYSTEM
        End If
    Case mc_strMnu_ANNUAL ''Menu-Annual Processing
        s_AnnualProc
    End Select

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdQuit_Click()
    
'    Dim blnCheck As Boolean
'
'    ''|fffd||38f||6cc||fffd||fffd||311|O|fffd||fffd||fffd||fffd||fffd|U|fffd||58d||3c2||743|`|fffd|F|fffd|b|fffd|N
'    If fg_CheckPrepaidTransfer(blnCheck) Then
'        If blnCheck Then
'            If vbNo = MsgBox(c_strMSG_PP_QUESTR_Exit, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
'                 Exit Sub
'            End If
'        End If
'    End If
    
    Unload Me
    
    g_blnQuitLaunncher = True ''Launcher|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|

    ThisWorkbook.Saved = True  ''|fffd||6d1||fffd||fffd|m|fffd|F|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    fg_WrapupSheets        ''|fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|~|fffd|{|fffd|^|fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|~|fffd|{|fffd|^|fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
   If CloseMode <> vbFormCode Then Cancel = 1
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   IMPORTFileSelect|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd||fffd|File|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)IMPORTFile|fffd|I|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_SelectImportFile(ByRef strFileName As String) As Boolean
    
    Dim strImpFile As String       ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd|
    
    f_SelectImportFile = False
    strFileName = ""
   
    ''IMPORT|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||317|L|fffd||fffd|CHECK
    If Dir(g_strAppPath & c_strImportFolder, vbDirectory) = "" Then
        ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||c42c|
        MkDir g_strAppPath & c_strImportFolder
    End If

    ''FILEDIALOG|fffd||fffd|LOAD
    ChDrive Left$(g_strAppPath, 1)            ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|h|fffd||fffd||fffd|C|fffd|u|fffd||315||3cd|X
    ChDir g_strAppPath & c_strImportFolder  ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315||3cd|X
    strImpFile = Application.GetOpenFilename(c_strFD_TEXTFILETYPE, , c_strFD_IMPORTTITLE)
    If (strImpFile = "False") Or (strImpFile = "") Then  ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        Exit Function
    End If
    
    f_SelectImportFile = True
    strFileName = strImpFile
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   IMPORT|fffd||fffd||fffd||314||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'   (2)<Integer |fffd|^> Mode 0:OfficeData ,1:JW-ModifyData
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)IMPORT|fffd||fffd||fffd||254||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   WBS|fffd||fffd||fffd||fffd||fffd||741|A|fffd||44a0||fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'   |fffd||702||fffd||fffd|ALogFile|fffd||242||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/02/18 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(Sub|fffd||fffd||fffd|[|fffd|`|fffd||fffd||fffd||fffd|)
'   2004/03/05 : Knowlbo Suzuki : PaidStatusData|fffd||33d1||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub s_ShowCautionForm( _
    ByRef strImpFile As String, _
    ByVal intMode As Integer _
)
    Dim strMSG As String
    Dim strValue As String
    Dim strRepValue As String
    Dim strCaution As String
    Dim strCaption As String
    Dim strCautionFile As String
    Dim lngIx As Long
    Dim strImport() As String
    Dim strReplace() As String

    strCaution = ""
    
    If intMode = 0 Then ''OfficeData
        strCautionFile = Right$(strImpFile, 20)
        strCautionFile = Left$(strCautionFile, 16) & "Caution.txt"
        strCaption = "Import Office Data"
    Else                ''JW-ModifyData
        strCautionFile = Right$(strImpFile, 23)
        strCautionFile = Left$(strCautionFile, 19) & "Caution.txt"
        strCaption = "Import Branch-Modify Data"
    End If
    
    ''WBS|fffd||312|u|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
    If g_strImportWBSCodeCSV <> g_strReplaceWBSCodeCSV Then
        strImport = Split(g_strImportWBSCodeCSV, ",")
        strReplace = Split(g_strReplaceWBSCodeCSV, ",")
        For lngIx = LBound(strImport) To UBound(strImport)
            If strImport(lngIx) <> strReplace(lngIx) Then
                If strValue <> "" Then strValue = strValue & vbCrLf
                strValue = strValue & strImport(lngIx)
            End If
        Next
        ''Log|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||c42c|
        strRepValue = Replace(strValue, vbCrLf, ", ")
        strMSG = c_strMSGImp_NotEXISTWBS & "[" & strRepValue & "] "
        strMSG = strMSG & c_strMSGImp_REPLACE_PFX & g_strReplaceWBSCode & c_strMSGImp_REPLACE_SFX
        Call g_objLog.PrintOut(ID_NKFAS_SS, strMSG, Err, LEVEL_LOG) ''Log|fffd|o|fffd||fffd|
        
        ''Form|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||c42c|
        strValue = c_strMSGImp_NotEXISTWBS & vbCrLf & strValue & vbCrLf
        strCaution = strValue & c_strMSGImp_REPLACE_PFX & g_strReplaceWBSCode & c_strMSGImp_REPLACE_SFX
        strValue = ""
        Erase strImport
        Erase strReplace
    End If
    
    ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd|z|fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|Table|fffd||fffd|index|fffd||182||fffd|
    ''|fffd|eTable|fffd||fffd|Import|fffd||fffd||fffd||fffd||fffd||242||117||308||fffd|m|fffd||6c2||fffd||fffd|A|fffd||752||fffd||fffd||fffd||341|ATable|fffd||fffd|:LinkCode [|fffd|K|fffd|X], ....|fffd||182||fffd||fffd||fffd|
    ''InvoiceHeader:@t@ JWID00103IV001 [01]@d@ JWID00103IV003 [03]@d@ JWID00103IV003 [03]
    ''@t@=Table|fffd||fffd||602||fffd| @d@=|fffd|f|fffd|[|fffd|^|fffd||fffd||602||fffd|
    
    ''Ledger|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
    strValue = ""
    If g_intImportInvalidCount >= 0 Then  ''Invalid-Ledger|fffd||fffd||fffd||fffd||fffd||fffd|
    
        If strCaution <> "" Then strCaution = strCaution & vbCrLf
        For lngIx = LBound(g_strAryImportInvalid) To UBound(g_strAryImportInvalid)
            If strValue <> "" Then strValue = strValue & vbCrLf
            strValue = strValue & g_strAryImportInvalid(lngIx)
        Next
        ''Log|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||c42c|
        strRepValue = Replace(strValue, "@t@", " ")
        strRepValue = Replace(strRepValue, "@d@", ", ")
        
        strMSG = c_strMSGImp_LEDGER_INVALID & vbCrLf
        strMSG = strMSG & strRepValue
        Call g_objLog.PrintOut(ID_NKFAS_SS, strMSG, Err, LEVEL_LOG) ''Log|fffd|o|fffd||fffd|
    
        ''Form|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||c42c|
        strRepValue = Replace(strValue, "@t@", "----" & vbCrLf)
        strRepValue = Replace(strRepValue, "@d@", vbCrLf)
        strCaution = strCaution & c_strMSGImp_LEDGER_INVALID & vbCrLf
        strCaution = strCaution & strRepValue
    End If
    
    ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd|z|fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|Ledger|fffd||fffd|index|fffd||182||fffd|
    ''|fffd|eLedger|fffd||fffd|Import|fffd||fffd||fffd||fffd||fffd||242||117||308||fffd|m|fffd||6c2||fffd||fffd|A|fffd||752||fffd||fffd||fffd||341|ALedger|fffd||fffd|:LinkCode [|fffd|K|fffd|X], ....|fffd||182||fffd||fffd||fffd|
    ''[LED.04]:@t@ JWID00103IV001 [01]@d@ JWID00103IV003 [03]@d@ JWID00103IV003 [03]
    ''@t@=Ledger|fffd||fffd||602||fffd| @d@=|fffd|f|fffd|[|fffd|^|fffd||fffd||602||fffd|
    strValue = ""
    If g_intImportFixedReplaceCount >= 0 Then  ''Invalid-Ledger|fffd||fffd||fffd||fffd||fffd||fffd|
    
        For lngIx = LBound(g_strAryImportFixedReplace) To UBound(g_strAryImportFixedReplace)
            If strValue <> "" Then strValue = strValue & vbCrLf
            strValue = strValue & g_strAryImportFixedReplace(lngIx)
        Next
        ''Log|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||c42c|
        strRepValue = Replace(strValue, "@t@", " ")
        strRepValue = Replace(strRepValue, "@d@", ", ")
        
        strMSG = c_strMSGImp_LEDGER_UpdREPLACE & vbCrLf
        strMSG = strMSG & strRepValue
        Call g_objLog.PrintOut(ID_NKFAS_SS, strMSG, Err, LEVEL_LOG) ''Log|fffd|o|fffd||fffd|
    
        ''Form|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||c42c|
        strRepValue = Replace(strValue, "@t@", "----" & vbCrLf)
        strRepValue = Replace(strRepValue, "@d@", vbCrLf)
        strCaution = strCaution & c_strMSGImp_LEDGER_UpdREPLACE & vbCrLf
        strCaution = strCaution & strRepValue
    End If
    
    ''CautionForm|fffd|\|fffd||fffd|
    If strCaution <> "" Then
        frmCaution.lblTitle.Caption = "Caution! " & strCaption
        frmCaution.lbl1.Caption = c_strMSGImp_INVALID_MSG
        frmCaution.SetTextValue strCaution
        frmCaution.pCause = strCaption & " " & g_strOfficeCode
        frmCaution.pTarget = strImpFile
        frmCaution.pOutputFile = strCautionFile
        frmCaution.Show
    End If
    
    g_strImportPJTCode = ""
    g_strImportWBSCodeCSV = ""
    g_strReplaceWBSCodeCSV = ""
    g_strReplaceWBSCode = ""
    g_strImpPaidLinkCodeCSV = ""
    g_strOrgPaidLinkCodeCSV = ""

    Erase g_strAryImportInvalid         ''Invalid-Ledger|fffd||fffd||fffd||309||fffd||fffd|
    Erase g_strAryImportFixedReplace    ''OverWrite-Ledger|fffd||fffd||fffd||309||fffd||fffd|
    g_intImportInvalidCount = -1
    g_intImportFixedReplaceCount = -1
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|c|fffd||18e||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|VDataFile|fffd||fffd|Import|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|c|fffd||18e||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|VDataFile|fffd||fffd|Import|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/02/03 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/26 : Knowlbo Suzuki : FASY Version|fffd|\|fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_ImportJWData() As Boolean

    Dim strImpFile As String       ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd|
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim datPrNow As Date
    Dim strGCurrency As String
    Dim strAcCodeNum As String
    Dim strValue As String
    Dim blnCmnUpdate As Boolean
    Dim lngIx As Long
    
    f_ImportJWData = False
    datPrNow = Now()    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
    m_strModifyOfficeCode = ""
       
    ''R3IF|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347|
    If g_blnR3IfEnable = False Then
        MsgBox c_strMSGImp_DISABLEIMPORT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Function
    End If
       
    ''IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd||fffd|
    If f_SelectImportFile(strImpFile) = False Then
        MsgBox "Import (Branch Office Data)" & c_strMSGImp_FINISHIMPORT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Function
    End If
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (f_CheckImportJWFile(strImpFile, strValue) = False) Then
        Exit Function        ''Msg|fffd||355|\|fffd||fffd||fffd||3c2||fffd|
    End If
    
    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    strMSG = c_strMSGImp_JWIMPORTFUNC & vbCrLf & "--Branch Ver." & strValue
    If (MsgBox(strMSG, vbYesNo + vbQuestion, c_strNAME_SYSTEM) = vbNo) Then
        Exit Function
    End If
    
    ''Log|fffd|o|fffd||fffd|
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_ReadImportJWFile:" & strImpFile, Err, LEVEL_LOG)

    lblInfo.Caption = "Now running Import Branch Office Data."
    lblInfo.Visible = True
    Call s_UIControl(False)        ' UI|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
    
' DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|--------------------------------------------
    strMSG = "DBUpdateProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    ''NW|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||179c2||102||fffd|
    g_intImportKind = 2
    
    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||1c2||74d||fffd||fffd||fffd|
    If (f_ReadImportFile(strImpFile, adoCn, objdba, datPrNow, blnCmnUpdate) = False) Then
        GoTo LBL_ERR
    End If
    
    If blnCmnUpdate Then ''|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd|X|fffd|V
        ''Office/|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||733b||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe|
        If fg_GetCashBankAccountCode(adoCn, objdba, strGCurrency, strAcCodeNum) <> True Then
            strMSG = c_strMSG_DB_GEAcCode
            GoTo LBL_ERR
        End If
        ''CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
        If fg_GetCBMasterInfo(adoCn, objdba, strGCurrency, strAcCodeNum) <> True Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CBMaster
            GoTo LBL_ERR
        End If
        ''BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
        If fg_GetBBMasterInfo(adoCn, objdba, strGCurrency, strAcCodeNum) <> True Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BBMaster
            GoTo LBL_ERR
        End If
        ''Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
        If fg_GetTRMasterInfo(adoCn, objdba) <> True Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_TRMaster
            GoTo LBL_ERR
        End If
    End If
   
    ''|fffd|q|fffd|R|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
    If (fg_CreateR3AccountsData(adoCn, objdba, m_datTgtDate, False) = False) Then
        strMSG = "fg_CreateR3AccountsData Ret Error"
        GoTo LBL_ERR
    End If
   
   ''SummaryAccountData|fffd||c42c|(LED12,13|fffd|p|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^)
    If fg_CreateAccountSummary(adoCn, objdba, m_datTgtDate) <> True Then ''|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||c42c|
        strMSG = "fg_CreateAccountSummary Ret Error"
        GoTo LBL_ERR
    End If
    
    ''Decision|fffd|X|fffd|V
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If (IsNull(adoRs.Fields("JWRetImportDate").Value) = False) Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||74f||a347|
            strMSG = c_strMSGImp_CONFIRMFILE & ":" & c_strTBL_Decision & " Someone already been Done."
            MsgBox strMSG, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("TargetPeriod").Value = m_datTgtDate
    adoRs.Fields("JWRetImportDate").Value = datPrNow
    'adoRs.Fields("DecisionDate").Value = NULL ''|fffd||fffd||fffd||312|i|fffd|K|fffd||142||34a|m|fffd||fffd||182||fffd||fffd||202||fffd|
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    Call objdba.closeRecordset(adoRs)
    
    On Error GoTo 0
    Call objdba.commitTransaction(adoCn)

    If blnCmnUpdate Then
        sg_GetMasterInfo  ''|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||64fe|
        For lngIx = 0 To 14  ''|fffd|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O
            g_blnArySetupSheet(lngIx) = False
        Next
    End If
      
    s_SetTargetMonthDisp ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd|\|fffd||fffd||fffd||752||fffd|
    
    ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|x|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    Call s_ShowCautionForm(strImpFile, 1)
    
    f_ImportJWData = True
    
LBL_END:
    g_intImportKind = 0    ''NK|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
    Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
    
    If g_intImportInvalidCount >= 0 Then ''Invalid-Ledger|fffd||fffd||fffd||309||fffd||fffd|
        Erase g_strAryImportInvalid
        g_intImportInvalidCount = -1
    End If
    If g_intImportFixedReplaceCount >= 0 Then ''OverWrite-Ledger|fffd||fffd||fffd||309||fffd||fffd|
        Erase g_strAryImportFixedReplace
        g_intImportFixedReplaceCount = -1
    End If
    Call objdba.closeADOConnection(adoCn)
    lblInfo.Visible = False
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.rollbackTransaction(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, _
                "f_ImportJWData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox "Import (Branch Office Data) " & c_strMSGImp_FAILIMPORTYFUNC, vbOKOnly + vbCritical, c_strNAME_SYSTEM
    GoTo LBL_END
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   IMPORT|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)IMPORT|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/31 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/26 : Knowlbo Suzuki : FASY Version|fffd|\|fffd||fffd||fffd||1c9||fffd|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function f_ImportOfficeData() As Boolean

    Dim strImpFile As String       ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd|
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim datPrNow As Date
    Dim strGCurrency As String
    Dim strAcCodeNum As String
    Dim strValue As String
    Dim blnCmnUpdate As Boolean
    Dim lngIx As Long
    
    f_ImportOfficeData = False
    datPrNow = Now()    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
    
    ''NK|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
    g_intImportKind = 0
    
    m_strModifyOfficeCode = ""
    
    ''R3IF|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347|
    If g_blnR3IfEnable = False Then
        MsgBox c_strMSGImp_DISABLEIMPORT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Function
    End If
    
    ''IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd||fffd|
    If f_SelectImportFile(strImpFile) = False Then
        MsgBox c_strMSGImp_FINISHIMPORT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Function
    End If
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (f_CheckImportFile(strImpFile, strValue) = False) Then
        ''Msg|fffd||355|\|fffd||fffd||fffd||3c2||fffd|
        Exit Function
    End If
    
    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    strMSG = c_strMSGImp_IMPORTFUNC & vbCrLf & "--Site Ver." & strValue
    If (MsgBox(strMSG, vbYesNo + vbQuestion, c_strNAME_SYSTEM) = vbNo) Then
        Exit Function
    End If
    
    ''Log|fffd|o|fffd||fffd|
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_ReadImportFile:" & strImpFile, Err, LEVEL_LOG)

    lblInfo.Caption = "Now running Import Office Data."
    lblInfo.Visible = True
    Call s_UIControl(False)        ' UI|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
    
' DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|--------------------------------------------
    strMSG = "DBUpdateProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||1c2||74d||fffd||fffd||fffd|
    If (f_ReadImportFile(strImpFile, adoCn, objdba, datPrNow, blnCmnUpdate) = False) Then
        strMSG = c_strMSG_R3_FAILIMPORTFUNC
        GoTo LBL_ERR
    End If
    
    If blnCmnUpdate Then ''|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd|X|fffd|V
        ''Office/|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||733b||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe|
        If fg_GetCashBankAccountCode(adoCn, objdba, strGCurrency, strAcCodeNum) <> True Then
            strMSG = c_strMSG_DB_GEAcCode
            GoTo LBL_ERR
        End If
        ''CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
        If fg_GetCBMasterInfo(adoCn, objdba, strGCurrency, strAcCodeNum) <> True Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CBMaster
            GoTo LBL_ERR
        End If
        ''BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
        If fg_GetBBMasterInfo(adoCn, objdba, strGCurrency, strAcCodeNum) <> True Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BBMaster
            GoTo LBL_ERR
        End If
        ''Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
        If fg_GetTRMasterInfo(adoCn, objdba) <> True Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_TRMaster
            GoTo LBL_ERR
        End If
    End If

    ''|fffd|q|fffd|R|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
    If (fg_CreateR3AccountsData(adoCn, objdba, m_datTgtDate, False) = False) Then
        strMSG = "fg_CreateR3AccountsData Ret Error"
        GoTo LBL_ERR
    End If
        
    ''SummaryAccountData|fffd||c42c|(LED12,13|fffd|p|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^)
    If fg_CreateAccountSummary(adoCn, objdba, m_datTgtDate) <> True Then ''|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||c42c|
        strMSG = "fg_CreateAccountSummary Ret Error"
        GoTo LBL_ERR
    End If
    
    ''Decision|fffd|X|fffd|V
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        If (IsNull(adoRs.Fields("ImportDate").Value) = False) Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||74f||a347|
            strMSG = c_strMSGImp_CONFIRMFILE & ":" & c_strTBL_Decision & " Someone already been Done."
            MsgBox strMSG, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            GoTo LBL_ERR
        End If
        
        objdba.SQLString = fg_setDecisionDataHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_Decision
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("TargetPeriod").Value = m_datTgtDate
    adoRs.Fields("ImportDate").Value = datPrNow
    'adoRs.Fields("DecisionDate").Value = NULL ''|fffd||fffd||fffd||312|i|fffd|K|fffd||142||34a|m|fffd||fffd||182||fffd||fffd||202||fffd|
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    Call objdba.closeRecordset(adoRs)
    
    On Error GoTo 0
    Call objdba.commitTransaction(adoCn)

    If g_datImportMonth = 0 Then ''|fffd||fffd|ImportData|fffd||30f||a347||fffd||354|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||110||752||fffd|
        
        m_blnSetupInProgress = True
        
        cboYear.Clear        ''|fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
        ReDim Preserve g_intAryYear(0)
        
        ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        ' |fffd||38f||6d3||fffd||fffd|t|fffd||fffd||fffd|N|fffd|x|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        g_intAryYear(0) = fg_GetFiscalYear(m_datTgtDate)
        
'        If Month(m_datTgtDate) <= 3 Then
'            g_intAryYear(0) = Year(m_datTgtDate) - 1
'        Else
'            g_intAryYear(0) = Year(m_datTgtDate)
'        End If
        ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        
        cboYear.AddItem CStr(g_intAryYear(0)), 0
        cboYear.Text = CStr(g_intAryYear(UBound(g_intAryYear)))
        g_intTargetSysYear = CInt(cboYear.Text)
    
        m_blnSetupInProgress = False
    
    End If
    g_datImportMonth = m_datTgtDate ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|

    If blnCmnUpdate Then
        sg_GetMasterInfo  ''|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||64fe|
        For lngIx = 0 To 14  ''|fffd|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O
            g_blnArySetupSheet(lngIx) = False
        Next
    End If
      
    s_SetTargetMonthDisp ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd|\|fffd||fffd||fffd||752||fffd|
      
    ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|x|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    Call s_ShowCautionForm(strImpFile, 0)
   
    f_ImportOfficeData = True
    
LBL_END:
    g_intImportKind = 0    ''NK|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
    Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
    If g_intImportInvalidCount >= 0 Then ''Invalid-Ledger|fffd||fffd||fffd||309||fffd||fffd|
        Erase g_strAryImportInvalid
        g_intImportInvalidCount = -1
    End If
    If g_intImportFixedReplaceCount >= 0 Then ''OverWrite-Ledger|fffd||fffd||fffd||309||fffd||fffd|
        Erase g_strAryImportFixedReplace
        g_intImportFixedReplaceCount = -1
    End If
    Call objdba.closeADOConnection(adoCn)
    lblInfo.Visible = False
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.rollbackTransaction(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_ImportOfficeData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSGImp_FAILIMPORTYFUNC, vbOKOnly + vbCritical, c_strNAME_SYSTEM
    GoTo LBL_END
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> FASY Version|fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/26 : Knowlbo Suzuki : FASY Version|fffd|\|fffd||fffd||fffd||1c9||fffd|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function f_CheckImportFile( _
    ByRef strFileName As String, _
    ByRef strVersion As String _
) As Boolean
    
    Dim strMSG As String
    Dim intFile As Integer      ''|fffd|g|fffd|p|fffd||94|\|fffd||203|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim strData As String       ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim datValue As Date
    Dim blnHeader As Boolean    ''HEADER|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim blnFooter As Boolean    ''FOOTER|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim blnTgtTbl As Boolean    ''|fffd||38f||fffd|DB|fffd|V|fffd|[|fffd|g|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim blnAprilStart As Boolean
    
    ''|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnHeader = False
    blnFooter = False
    blnTgtTbl = False
    strVersion = ""
    blnAprilStart = False
    
    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|CHECK(OfficeCode|fffd|`|fffd|F|fffd|b|fffd|N)
    If (Left$(Dir(strFileName), 7) <> g_strOfficeCode) Then
        MsgBox c_strMSGImp_NOIMPORTFILE & "(Other Office file)", vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        f_CheckImportFile = False
        Exit Function
    End If
    
    ''|fffd|w|fffd|b|fffd|_|fffd|[|fffd|E|fffd|t|fffd|b|fffd|^|fffd|[|fffd|EOFFICE|fffd|R|fffd|[|fffd|h|fffd|E|fffd||38f||6c3|V|fffd|[|fffd|gCHECK,TARGETMONTH|fffd||64fe|
    intFile = FreeFile
    Open strFileName For Input As #intFile
    Do Until EOF(intFile)
        Line Input #intFile, strData
        If Left$(strData, 1) = "#" Then
            If Left$(strData, 7) = "#OFFICE" Then    ''|fffd|w|fffd|b|fffd|_|fffd|[|fffd|EOFFICE|fffd|R|fffd|[|fffd|hCHECK
                blnHeader = True
                If (Mid$(strData, 9) <> g_strOfficeCode) Then
                    strMSG = c_strMSGImp_NOIMPORTFILE & "(Other Office file)"
                    GoTo LBL_FILEERR
                End If
            ElseIf Left$(strData, 12) = "#TargetMonth" Then    ''TARGETMONTH|fffd||64fe|
                 m_datTgtDate = CDate(Mid$(strData, 14))
            
            ElseIf Left$(strData, 4) = "#END" Then   ''|fffd|t|fffd|b|fffd|^|fffd|[CHECK
                blnFooter = True
                If Len(strData) >= 14 Then
                    strVersion = "[ " & Mid$(strData, 14) & " ]"
                Else
                    strVersion = "[ V1.0R__ ]"
                End If
            Else
                ''Skip
            End If
        End If
    Loop
    Close #intFile
    ''|fffd|w|fffd|b|fffd|_,|fffd|t|fffd|b|fffd|^|fffd|[|fffd||302||1c2||fffd||fffd||70a9||fffd||fffd||fffd||fffd||fffd||a347||fffd||242||343|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If (blnHeader = False) Or (blnFooter = False) Then
        MsgBox c_strMSGImp_NOIMPORTFILE & "(UnKnown format)", vbOKOnly + vbCritical, c_strNAME_SYSTEM
        f_CheckImportFile = False
        Exit Function
    End If
    
    ''DB|fffd|m|fffd||fffd|A|fffd||fffd||fffd||fffd||443|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|`|fffd|F|fffd|b|fffd|N
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    ''IMPORT|fffd||3c2||fffd|CHECK-------------------------------------------
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If (IsNull(adoRs.Fields("ImportDate").Value) = False) Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||74f||a347|
            MsgBox c_strMSGImp_CONFIRMFILE, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            GoTo LBL_END
        
        Else
            ''|fffd||38f||6cc||fffd||fffd||316||fffd||fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd|i|fffd|N|fffd||fffd||fffd||142||fffd||fffd||30f||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd|j
            blnAprilStart = True
        End If
    End If
    Call objdba.closeRecordset(adoRs)

    ''|fffd|m|fffd||fffd||3c2||fffd|CHECK-------------------------------------------
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = ("
    strSQL = strSQL & " SELECT " & "Max(t.TargetPeriod)"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " t"
    strSQL = strSQL & " WHERE " & "t.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " )"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||743|f|fffd|[|fffd|^|fffd||30d||151||fffd||38f||6cc||fffd|
        If Not IsNull(adoRs.Fields("DecisionDate").Value) Then
            ''|fffd|m|fffd||fffd||3c2||fffd|
            datValue = adoRs.Fields("TargetPeriod").Value
            If datValue >= m_datTgtDate Then ''Desision|fffd|f|fffd|[|fffd|^|fffd||30d||151||fffd||38f||6cc||fffd|
                ''|fffd|m|fffd||fffd||3c2||74f||a347|
                MsgBox c_strMSGImp_CONFIRMFILE, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
                f_CheckImportFile = False
                GoTo LBL_END
            End If
            ''|fffd|m|fffd||830e||fffd|{|fffd|P|fffd||191||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|A|fffd||fffd||fffd||fffd||835e||fffd||742||fffd||fffd|s|fffd||fffd||fffd||fffd|)
            If m_datTgtDate <> DateAdd("m", 1, datValue) Then
                MsgBox c_strMSGImp_NOPASTMONTHFUNC, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
                f_CheckImportFile = False
                GoTo LBL_END
            End If
            
            ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
            ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|N|fffd|x|fffd||fffd||fffd||4c383|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd||fffd|
            If Month(m_datTgtDate) = Month(fg_GetStartOfYear(fg_GetFiscalYear(m_datTgtDate))) And blnAprilStart = False Then
            
'            ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|S|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd||fffd|
'            If Month(m_datTgtDate) = 4 And blnAprilStart = False Then
            ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
                MsgBox c_strMSGTxt_ALLDATADECIDE, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
                f_CheckImportFile = False
                GoTo LBL_END
            End If
        Else
            ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
            If Month(m_datTgtDate) = Month(fg_GetStartOfYear(fg_GetFiscalYear(m_datTgtDate))) And blnAprilStart = True Then
                ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||317||fffd||fffd|N|fffd|x|fffd||fffd||fffd||4c383|f|fffd|[|fffd|^|fffd||fffd||835e||fffd||742||341|A|fffd|X|fffd||fffd||fffd|[
                
'            If Month(m_datTgtDate) = 4 And blnAprilStart = True Then
'                ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||302|S|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||835e||fffd||742||341|A|fffd|X|fffd||fffd||fffd|[
            ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
            Else
                ''|fffd||fffd||fffd|m|fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
                datValue = adoRs.Fields("TargetPeriod").Value
                ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|m|fffd||fffd|)|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
                strMSG = c_strMSGImp_NOMONTHLYFUNC_PFX & Year(datValue) & "/" & Format$(Month(datValue), "00")
                strMSG = strMSG & c_strMSGImp_NOMONTHLYFUNC_SFX
                MsgBox strMSG, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
                f_CheckImportFile = False
                GoTo LBL_END
            End If
        End If
    End If
    f_CheckImportFile = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_CheckImportFile:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_CheckImportFile", strMSG
    GoTo LBL_END
LBL_FILEERR:
    Close #intFile
    MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
    f_CheckImportFile = False
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   IMPORT-Branch Office Data|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> FASY Version|fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)IMPORT|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/30 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/26 : Knowlbo Suzuki : FASY Version|fffd|\|fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_CheckImportJWFile( _
    ByRef strFileName As String, _
    ByRef strVersion As String _
) As Boolean
    
    Dim intFile As Integer      ''|fffd|g|fffd|p|fffd||94|\|fffd||203|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim strData As String       ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim blnHeader As Boolean    ''HEADER|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim blnFooter As Boolean    ''FOOTER|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim strMSG As String        ''|fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    
    ''|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnHeader = False
    blnFooter = False
    strVersion = ""
    f_CheckImportJWFile = False
    
    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|CHECK
    If (Left$(Dir(strFileName), 3) <> "JW2") Then
        MsgBox c_strMSGImp_NOIMPORTFILE & "(Branch Office Data)", vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Function
    End If
    
    ''|fffd|w|fffd|b|fffd|_|fffd|[|fffd|E|fffd|t|fffd|b|fffd|^|fffd|[|fffd|EOFFICE|fffd|R|fffd|[|fffd|h|fffd|E|fffd||38f||6c3|V|fffd|[|fffd|gCHECK,TARGETMONTH|fffd||64fe|
    intFile = FreeFile
    Open strFileName For Input As #intFile
    Do Until EOF(intFile)
        Line Input #intFile, strData
        If Left$(strData, 1) = "#" Then
            If Left$(strData, 7) = "#MODIFY" Then    ''|fffd|w|fffd|b|fffd|_|fffd|[|fffd|EOFFICE|fffd|R|fffd|[|fffd|hCHECK
                blnHeader = True
                If (Mid$(strData, 9, 7) <> g_strOfficeCode) Then
                    strMSG = c_strMSGImp_NOIMPORTFILE
                    GoTo LB_RFError
                End If
                ''|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|SenterOfficeCode |fffd||30e||64fe|
                m_strModifyOfficeCode = Right$(strData, 7)
                If Left$(m_strModifyOfficeCode, 2) <> c_strBranchOfficeTag Then
                    MsgBox c_strMSGImp_NOIMPORTFILE & "(UnKnown format)", vbOKOnly + vbCritical, c_strNAME_SYSTEM
                    GoTo LB_RFError
                End If
            ElseIf Left$(strData, 12) = "#TargetMonth" Then    ''TARGETMONTH|fffd||64fe|
                 m_datTgtDate = CDate(Mid$(strData, 14))
            ElseIf Left$(strData, 4) = "#END" Then   ''|fffd|t|fffd|b|fffd|^|fffd|[CHECK
                blnFooter = True
                If Len(strData) >= 14 Then
                    strVersion = "[ " & Mid$(strData, 14) & " ]"
                Else
                    strVersion = "[ V1.0R__ ]"
                End If
            Else
                ''Skip
            End If
        End If
    Loop
    Close #intFile
    
    ''|fffd|w|fffd|b|fffd|_,TARGETMONTH,|fffd|t|fffd|b|fffd|^|fffd|[|fffd||302||1c2||fffd||fffd||70a9||fffd||fffd||fffd||fffd||fffd||a347||fffd||242||343|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If (blnHeader = False) Or (blnFooter = False) Then
        MsgBox c_strMSGImp_NOIMPORTFILE & "(UnKnown format)", vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Function
    End If
    
    ''DB|fffd|m|fffd||fffd|A|fffd||fffd||fffd||fffd||443|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|`|fffd|F|fffd|b|fffd|N
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''IMPORT|fffd||3c2||fffd|CHECK-------------------------------------------
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then
        ''Branch Office Data|fffd||fffd|Import|fffd||3c2||742||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        If (IsNull(adoRs.Fields("JWRetImportDate").Value) = False) Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||74f||a347|
            MsgBox c_strMSGImp_CONFIRMFILE, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            GoTo LBL_END
        End If
    Else    ''|fffd|J|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||313||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347|
        MsgBox c_strMSGImp_NOSITEMONTHFUNC, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        GoTo LBL_END
    End If
    
    f_CheckImportJWFile = True

    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_CheckImportJWFile:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_CheckImportJWFile", strMSG
    GoTo LBL_END
LB_RFError:
    Close #intFile
    MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
    f_CheckImportJWFile = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_CheckImportJWFile:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   IMPORT|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'   (2)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'   (5)<Boolean |fffd|^> |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||1c2||74d||fffd||fffd||741|ADB|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/05 : Knowlbo Suzuki : DesicionFASY|fffd||303|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||1c9||fffd|
'   2004/02/24 : Knowlbo Suzuki : ImportFile|fffd||fffd||fffd|e|fffd||fffd|DB|fffd||6d1||fffd||fffd||1c9||fffd|
'   2005/10/28 : Knowlbo Suzuki : 2005/12|fffd||fffd||fffd|{|fffd||30a||fffd||fffd||fffd||216||689||fffd||fffd||3d1||389||fffd|
'-----------------------------------------------------------------
Private Function f_ReadImportFile( _
    ByRef strFileName As String, _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datPrNow As Date, _
    ByRef blnCmnUpdate As Boolean _
) As Boolean
    Dim lngPJTMstAryIx As Long                  ''ProjectMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngCBMstAryIx As Long                   ''CBMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngBBMstAryIx As Long                   ''BBMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngTRMstAryIx As Long                   ''TRMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngCCodAryIx As Long                    ''ConnectionCode|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngASMstAryIx As Long                   ''AssociateMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngSCMstAryIx As Long                   ''SubConMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngRMMstAryIx As Long                   ''RMMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngWBSMstAryIx As Long                  ''WBSMaster|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLCodAryIx As Long                    ''LinkcodeNumber|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLCodJWAryIx As Long                  ''LinkcodeNumberJW|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedInvHdAryIx As Long                ''InvoiceHeader|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedInvDtAryIx As Long                ''InvoiceDetail|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedSbPayAryIx As Long                ''SubConPayment|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedAsPayAryIx As Long                ''AsoPayment|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedRmDatAryIx As Long                ''RequestData|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedRmPstAryIx As Long                ''PastRemittanceData|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngLedPrPayAryIx As Long                ''PrePaidExpense|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngCBDtAryIx As Long                    ''CASHBOOK|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngBBDtAryIx As Long                    ''BANKBOOK|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngTRDtAryIx As Long                    ''TRANSFER|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngDecisionAryIx As Long                ''Decision|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    Dim strPJTMstImport() As String             ''ProjectMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strCBMstImport() As String              ''CBMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strBBMstImport() As String              ''BBMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strTRMstImport() As String              ''TRMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strCCodImport() As String               ''ConnectionCode|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strASMstImport() As String              ''AssociateMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strSCMstImport() As String              ''SubConMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strRMMstImport() As String              ''RMMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strWBSMstImport() As String             ''WBSMaster|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLCodImport() As String               ''LinkCodeNumber|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLCodJWImport() As String             ''LinkCodeNumberJW|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedInvHdImport() As String           ''InvoiceHeader|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedInvDtImport() As String           ''InvoiceDetail|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedSbPayImport() As String           ''SubConPayment|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedAsPayImport() As String           ''AsoPayment|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedRmDatImport() As String           ''RequestData|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedRmPstImport() As String           ''PastRemittanceData|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim strLedPrPayImport() As String           ''PrePaidExpense|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim typAryCBDtImport() As clsImportDtData   ''CB|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|(CB01,|fffd||fffd||fffd||fffd||fffd||fffd|...)
    Dim typAryBBDtImport() As clsImportDtData   ''BB|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|(BB01,|fffd||fffd||fffd||fffd||fffd||fffd|...)
    Dim typAryTRDtImport() As clsImportDtData   ''TR|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|(TR01,|fffd||fffd||fffd||fffd||fffd||fffd|...)
    Dim strDecisionImport() As String           ''Decision|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    
'------------------------------------------------------------
    Dim strMSG As String
    Dim blnMstUpdate As Boolean
    Dim lngIx As Long
    Dim lngRowCn As Long                        ''|fffd|s|fffd|J|fffd|E|fffd||fffd||fffd|g(|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd|)
    Dim intFile As Integer                      ''|fffd|g|fffd|p|fffd||94|\|fffd||203|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim blnFindTbl As Boolean                   ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||52182||142||fffd|TABLE|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim strTgtTbl As String                     ''|fffd||38f||6c3|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    Dim strData As String

    ''|fffd|t|fffd||fffd||fffd|O,|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_strExchngData = ""
    blnFindTbl = False
    blnMstUpdate = False
    lngPJTMstAryIx = -1
    lngCBMstAryIx = -1
    lngBBMstAryIx = -1
    lngTRMstAryIx = -1
    lngCCodAryIx = -1
    lngASMstAryIx = -1
    lngSCMstAryIx = -1
    lngRMMstAryIx = -1
    lngWBSMstAryIx = -1
    lngLCodAryIx = -1
    lngLCodJWAryIx = -1
    lngLedInvHdAryIx = -1
    lngLedInvDtAryIx = -1
    lngLedSbPayAryIx = -1
    lngLedAsPayAryIx = -1
    lngLedRmDatAryIx = -1
    lngLedRmPstAryIx = -1
    lngLedPrPayAryIx = -1
    lngCBDtAryIx = -1
    lngBBDtAryIx = -1
    lngTRDtAryIx = -1
    lngDecisionAryIx = -1
    g_intImportInvalidCount = -1
    g_intImportFixedReplaceCount = -1
    
    f_ReadImportFile = False

    ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gWBS|fffd|`|fffd|F|fffd|b|fffd|N|fffd|p|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_strImportPJTCode = ""
    g_strImportWBSCodeCSV = ""
    g_strReplaceWBSCodeCSV = ""
    g_strReplaceWBSCode = ""

    '2005/12|fffd||fffd||fffd|{|fffd||30a||fffd||fffd||fffd||216||689||fffd||fffd||3d1||389||fffd|
    sg_GetReplacePastAcCode     ''|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd||389||fffd|CSV|fffd|z|fffd||fffd||c42c|

' |fffd||38f||6c3|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|,|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|------------------------------
    lngRowCn = 0
    intFile = FreeFile
    Open strFileName For Input As #intFile
    Do Until EOF(intFile)
        Line Input #intFile, strData
        
        m_strExchngData = m_strExchngData & strData & vbCrLf        ''|fffd||fffd||fffd||fffd|File|fffd||fffd||fffd||6d1||fffd|
        
        If (lngRowCn > 1) And (Left$(strData, 4) <> "#END") Then
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
            If (blnFindTbl = True) And (strData <> vbCrLf) Then
                If (Left$(strData, 1) <> "#") Then
                    ''TABLE|fffd||fffd|,Import|fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||c42c|
                    Select Case strTgtTbl
                    Case c_strFAS_TBL_PJTMaster
                        lngPJTMstAryIx = lngPJTMstAryIx + 1
                        ReDim Preserve strPJTMstImport(lngPJTMstAryIx)
                        strPJTMstImport(lngPJTMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_CBMaster
                        lngCBMstAryIx = lngCBMstAryIx + 1
                        ReDim Preserve strCBMstImport(lngCBMstAryIx)
                        strCBMstImport(lngCBMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_BBMaster
                        lngBBMstAryIx = lngBBMstAryIx + 1
                        ReDim Preserve strBBMstImport(lngBBMstAryIx)
                        strBBMstImport(lngBBMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_TRMaster
                        lngTRMstAryIx = lngTRMstAryIx + 1
                        ReDim Preserve strTRMstImport(lngTRMstAryIx)
                        strTRMstImport(lngTRMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_ConnCode
                        lngCCodAryIx = lngCCodAryIx + 1
                        ReDim Preserve strCCodImport(lngCCodAryIx)
                        strCCodImport(lngCCodAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_ASMaster
                        lngASMstAryIx = lngASMstAryIx + 1
                        ReDim Preserve strASMstImport(lngASMstAryIx)
                        strASMstImport(lngASMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_SCMaster
                        lngSCMstAryIx = lngSCMstAryIx + 1
                        ReDim Preserve strSCMstImport(lngSCMstAryIx)
                        strSCMstImport(lngSCMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_RMMaster
                        lngRMMstAryIx = lngRMMstAryIx + 1
                        ReDim Preserve strRMMstImport(lngRMMstAryIx)
                        strRMMstImport(lngRMMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_WBSMaster
                        lngWBSMstAryIx = lngWBSMstAryIx + 1
                        ReDim Preserve strWBSMstImport(lngWBSMstAryIx)
                        strWBSMstImport(lngWBSMstAryIx) = strData
                        blnMstUpdate = True
                    Case c_strFAS_TBL_LinkCodeNum
                        lngLCodAryIx = lngLCodAryIx + 1
                        ReDim Preserve strLCodImport(lngLCodAryIx)
                        strLCodImport(lngLCodAryIx) = strData
                    Case c_strFAS_TBL_LinkCodeJWNum
                        lngLCodJWAryIx = lngLCodJWAryIx + 1
                        ReDim Preserve strLCodJWImport(lngLCodJWAryIx)
                        strLCodJWImport(lngLCodJWAryIx) = strData
                    Case c_strFAS_TBL_InvoiceHeader
                        lngLedInvHdAryIx = lngLedInvHdAryIx + 1
                        ReDim Preserve strLedInvHdImport(lngLedInvHdAryIx)
                        strLedInvHdImport(lngLedInvHdAryIx) = strData
                    Case c_strFAS_TBL_InvoiceDetail
                        lngLedInvDtAryIx = lngLedInvDtAryIx + 1
                        ReDim Preserve strLedInvDtImport(lngLedInvDtAryIx)
                        strLedInvDtImport(lngLedInvDtAryIx) = strData
                    Case c_strFAS_TBL_SubConPayment
                        lngLedSbPayAryIx = lngLedSbPayAryIx + 1
                        ReDim Preserve strLedSbPayImport(lngLedSbPayAryIx)
                        strLedSbPayImport(lngLedSbPayAryIx) = strData
                    Case c_strFAS_TBL_AssociatePayment
                        lngLedAsPayAryIx = lngLedAsPayAryIx + 1
                        ReDim Preserve strLedAsPayImport(lngLedAsPayAryIx)
                        strLedAsPayImport(lngLedAsPayAryIx) = strData
                    Case c_strFAS_TBL_PastRemittance
                        lngLedRmPstAryIx = lngLedRmPstAryIx + 1
                        ReDim Preserve strLedRmPstImport(lngLedRmPstAryIx)
                        strLedRmPstImport(lngLedRmPstAryIx) = strData
                    Case c_strFAS_TBL_RequestData
                        lngLedRmDatAryIx = lngLedRmDatAryIx + 1
                        ReDim Preserve strLedRmDatImport(lngLedRmDatAryIx)
                        strLedRmDatImport(lngLedRmDatAryIx) = strData
                    Case c_strFAS_TBL_PrePaidExpense
                        lngLedPrPayAryIx = lngLedPrPayAryIx + 1
                        ReDim Preserve strLedPrPayImport(lngLedPrPayAryIx)
                        strLedPrPayImport(lngLedPrPayAryIx) = strData
                    Case c_strFAS_TBL_DecisionFASY
                        lngDecisionAryIx = lngDecisionAryIx + 1
                        ReDim Preserve strDecisionImport(lngDecisionAryIx)
                        strDecisionImport(lngDecisionAryIx) = strData
                    Case Else
                        Select Case Left$(strTgtTbl, 2)
                        Case "CB"
                            lngCBDtAryIx = lngCBDtAryIx + 1
                            ReDim Preserve typAryCBDtImport(lngCBDtAryIx)
                            typAryCBDtImport(lngCBDtAryIx).m_strTbl = strTgtTbl
                            typAryCBDtImport(lngCBDtAryIx).m_strData = strData
                        Case "BB"
                            lngBBDtAryIx = lngBBDtAryIx + 1
                            ReDim Preserve typAryBBDtImport(lngBBDtAryIx)
                            typAryBBDtImport(lngBBDtAryIx).m_strTbl = strTgtTbl
                            typAryBBDtImport(lngBBDtAryIx).m_strData = strData
                        Case "TR"
                            lngTRDtAryIx = lngTRDtAryIx + 1
                            ReDim Preserve typAryTRDtImport(lngTRDtAryIx)
                            typAryTRDtImport(lngTRDtAryIx).m_strTbl = strTgtTbl
                            typAryTRDtImport(lngTRDtAryIx).m_strData = strData
                        End Select
                    End Select
                Else
                    blnFindTbl = False
                End If
            End If
            ''|fffd|L|fffd|[|fffd||fffd||fffd|[|fffd|h|fffd||64fe|
            If (blnFindTbl = False) Then
                If (Left$(strData, 1) = "#") Then
                    blnFindTbl = True
                    strTgtTbl = Mid$(strData, 2) ''#|fffd||14c82||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd|TABLE|fffd||fffd|
                End If
            End If
        End If
        lngRowCn = lngRowCn + 1
    Loop
    Close #intFile
    blnCmnUpdate = blnMstUpdate

' DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|--------------------------------------------
    strMSG = "DBUpdateProcError"

On Error GoTo LBL_ERR

    ''|fffd||14f|I|fffd|m|fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd|i|fffd||44a0||fffd|X|fffd|V|fffd||fffd||30a|m|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd||fffd||fffd||90bd||fffd||7c1|j
    Call sg_GetLatestDecisionDate(adoCn, objdba, g_datDecisionMonth, g_datDecisionDate)

    If lngPJTMstAryIx >= 0 Then ''ProjectMaster|fffd|X|fffd|V
        If fg_ImportPJTMaster(adoCn, objdba, strPJTMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    
    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h|fffd||1c2||74d||fffd||fffd||fffd|
    If fg_GetCurrentPJTCode(adoCn, objdba) = False Then GoTo LBL_ERR
   
    g_strReplaceWBSCode = fg_GetReplaceWBS    ''|fffd|G|fffd||fffd||fffd|[WBS|fffd||251||389||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||64fe|
    If g_strReplaceWBSCode = "" Then
        strMSG = "Not found ProjectCode!" & ":[" & g_strImportPJTCode & "]"
        GoTo LBL_ERR
    End If
    If lngLedInvHdAryIx >= 0 Or lngLedInvDtAryIx >= 0 Or lngLedRmPstAryIx >= 0 Or lngLedRmDatAryIx >= 0 Then
        ''InvoiceHeader/RemReqest Paid|fffd||fffd||fffd||fffd||fffd|W
        If fg_LedgerPaidAcquisition(adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    If lngCBMstAryIx >= 0 Then  ''CBMaster|fffd|X|fffd|V
        If fg_ImportCBMaster(adoCn, objdba, strCBMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngBBMstAryIx >= 0 Then  ''BBMaster|fffd|X|fffd|V
        If fg_ImportBBMaster(adoCn, objdba, strBBMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngTRMstAryIx >= 0 Then  ''TBMaster|fffd|X|fffd|V
        If fg_ImportTRMaster(adoCn, objdba, strTRMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngCCodAryIx >= 0 Then  ''ConnectionCode|fffd|X|fffd|V
        If fg_ImportCCodMaster(adoCn, objdba, strCCodImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngASMstAryIx >= 0 Then  ''AssociateMaster|fffd|X|fffd|V
        If fg_ImportASMaster(adoCn, objdba, strASMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngSCMstAryIx >= 0 Then  ''SubconMaster|fffd|X|fffd|V
        If fg_ImportSCMaster(adoCn, objdba, strSCMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngRMMstAryIx >= 0 Then  ''RMMaster|fffd|X|fffd|V
        If fg_ImportRMMaster(adoCn, objdba, strRMMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngWBSMstAryIx >= 0 Then  ''WBSMaster|fffd|X|fffd|V
        If fg_ImportWBSMaster(adoCn, objdba, strWBSMstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLCodAryIx >= 0 Then  ''LinkCodeNumber|fffd|X|fffd|V
        If fg_ImportLCodMaster(adoCn, objdba, strLCodImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLCodJWAryIx >= 0 Then  ''LinkCodeNoJW|fffd|X|fffd|V
        If fg_ImportLCodJWMaster(adoCn, objdba, strLCodJWImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLedInvHdAryIx >= 0 Then  ''InvoiceHeader|fffd|X|fffd|V
        If fg_ImportInvoiceHeader(adoCn, objdba, strLedInvHdImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLedInvDtAryIx >= 0 Then  ''InvoiceDetail|fffd|X|fffd|V
        If fg_ImportInvoiceDetail(adoCn, objdba, strLedInvDtImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLedSbPayAryIx >= 0 Then  ''SubConPayment|fffd|X|fffd|V
        If fg_ImportSubConPayment(adoCn, objdba, strLedSbPayImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLedAsPayAryIx >= 0 Then  ''AssociatePayment|fffd|X|fffd|V
        If fg_ImportAssociatePayment(adoCn, objdba, strLedAsPayImport, datPrNow) = False Then GoTo LBL_ERR
    End If

    If lngLedRmPstAryIx >= 0 Then  ''PastRemittance|fffd|X|fffd|V
        If fg_ImportPastRemittance(adoCn, objdba, strLedRmPstImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLedRmDatAryIx >= 0 Then  ''RequestData|fffd|X|fffd|V
        If fg_ImportRequestData(adoCn, objdba, strLedRmDatImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngLedPrPayAryIx >= 0 Then  ''PrePaidExpense|fffd|X|fffd|V
        If fg_ImportPrePaidExpense(adoCn, objdba, strLedPrPayImport, datPrNow) = False Then GoTo LBL_ERR
    End If
    If lngDecisionAryIx >= 0 Then  ''DecisionFASY|fffd|X|fffd|V
        If fg_ImportDecisionFASY(adoCn, objdba, strDecisionImport, datPrNow) = False Then GoTo LBL_ERR
    End If

    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    If f_GetCurrentRecIDNo(adoCn, objdba) = False Then GoTo LBL_ERR

    If lngCBDtAryIx >= 0 Then  ''CashBookData|fffd|X|fffd|V
        strData = ""
        If fg_ImportCBTLedgerData(adoCn, objdba, typAryCBDtImport, datPrNow) = False Then GoTo LBL_ERR
        ''Account Balance|fffd|X|fffd|V
        For lngIx = LBound(typAryCBDtImport) To UBound(typAryCBDtImport)
            If strData <> typAryCBDtImport(lngIx).m_strTbl Then
                strData = typAryCBDtImport(lngIx).m_strTbl
                If f_UpdateAccountBal(adoCn, objdba, strData, datPrNow) = False Then GoTo LBL_ERR
            End If
        Next
    End If
    If lngBBDtAryIx >= 0 Then  ''BankBookData|fffd|X|fffd|V
        strData = ""
        If fg_ImportCBTLedgerData(adoCn, objdba, typAryBBDtImport, datPrNow) = False Then GoTo LBL_ERR
        ''Account Balance|fffd|X|fffd|V
        For lngIx = LBound(typAryBBDtImport) To UBound(typAryBBDtImport)
            If strData <> typAryBBDtImport(lngIx).m_strTbl Then
                strData = typAryBBDtImport(lngIx).m_strTbl
                If f_UpdateAccountBal(adoCn, objdba, strData, datPrNow) = False Then GoTo LBL_ERR
            End If
        Next
    End If
    If lngTRDtAryIx >= 0 Then  ''TransferData|fffd|X|fffd|V
        If fg_ImportCBTLedgerData(adoCn, objdba, typAryTRDtImport, datPrNow) = False Then GoTo LBL_ERR
    End If

    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd|X|fffd|V
    If lngCBDtAryIx >= 0 Or lngBBDtAryIx >= 0 Or lngTRDtAryIx >= 0 Then  ''TransferData|fffd|X|fffd|V
        If f_UpdateCurrentRecIDNo(adoCn, objdba, datPrNow) = False Then GoTo LBL_ERR
    End If
    
    ''ImportFile|fffd||fffd||fffd|e|fffd||fffd|DB|fffd||6d1||fffd|
    If g_intImportKind = 2 Then
        ''JWImport
        m_strExchngField = "JWModifyData"
    Else
        ''SiteImport
        m_strExchngField = "ImportData"
    End If
    If f_UpdateExchangeData(adoCn, objdba, datPrNow) = False Then GoTo LBL_ERR
    
    On Error GoTo 0

    f_ReadImportFile = True
    
LBL_END:
    ''|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd|
    Erase strPJTMstImport
    Erase strCBMstImport
    Erase strBBMstImport
    Erase strTRMstImport
    Erase strCCodImport
    Erase strASMstImport
    Erase strSCMstImport
    Erase strRMMstImport
    Erase strWBSMstImport
    Erase strLCodImport
    Erase strLCodJWImport
    Erase strLedInvHdImport
    Erase strLedInvDtImport
    Erase strLedSbPayImport
    Erase strLedAsPayImport
    Erase strLedRmPstImport
    Erase strLedRmDatImport
    Erase strLedPrPayImport
    Erase typAryCBDtImport
    Erase typAryBBDtImport
    Erase typAryTRDtImport
    Erase strDecisionImport
    m_strExchngData = ""
    
    g_strPastAcCodeCSV = ""
    g_strReplaceAcCodeCSV = ""
    
    
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_ReadImportFile:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_ReadImportFile", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AccountBalance|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> LedgerCode
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AccountBalance|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/14 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/14 : Knowlbo suzuki : |fffd|V|fffd|K|fffd|i|fffd||690|A|fffd|j
'-----------------------------------------------------------------
Private Function f_UpdateAccountBal( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLedgerCode As String, _
    ByVal prmDate As Date _
) As Boolean

    Dim strDbTable As String
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim curBalance As Currency    ''RECEIVED - PAID
    
    f_UpdateAccountBal = False
    
    Select Case Left$(strLedgerCode, 2)
    Case "CB" ''CashBook
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    End Select
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    strSQL = "SELECT "
    strSQL = strSQL & "Sum(" & "tb.Paid) AS Debit, "
    strSQL = strSQL & "Sum(" & "tb.Received) AS Credit "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
'    strSQL = strSQL & " GROUP BY " & "tb.OfficeCode, tb.LedgerCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        curBalance = adoRs.Fields("Credit").Value - adoRs.Fields("Debit").Value
    End If
    Call objdba.closeRecordset(adoRs)
    
    ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd|AccountBalance|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setAccountBalanceHistorySQLString(adoRs, prmDate)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AcBalance
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
    End If
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("LedgerCode").Value = strLedgerCode
    adoRs.Fields("TargetPeriod").Value = m_datTgtDate
    adoRs.Fields("Balance").Value = curBalance
    adoRs.Fields("InsertDate").Value = prmDate
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    On Error GoTo 0
    
    f_UpdateAccountBal = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpdateAccountBal:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_UpdateAccountBal", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||30e||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Office|fffd||303|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/14 : Knowlbo suzuki : |fffd|V|fffd|K
'-----------------------------------------------------------------
Private Function f_GetCurrentRecIDNo( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    f_GetCurrentRecIDNo = False
    
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    g_lngAryCurRecIDNumber(GLED_CB) = 0
    g_lngAryCurRecIDNumber(GLED_BB) = 0
    g_lngAryCurRecIDNumber(GLED_TR) = 0
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_LedgerRecIDNo & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_LedgerRecIDNo
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields("CashBook").Value) Then
            g_lngAryCurRecIDNumber(GLED_CB) = adoRs.Fields("CashBook").Value
        Else
            g_lngAryCurRecIDNumber(GLED_CB) = 0
        End If
        If Not IsNull(adoRs.Fields("BankBook").Value) Then
            g_lngAryCurRecIDNumber(GLED_BB) = adoRs.Fields("BankBook").Value
        Else
            g_lngAryCurRecIDNumber(GLED_BB) = 0
        End If
        If Not IsNull(adoRs.Fields("Transfer").Value) Then
            g_lngAryCurRecIDNumber(GLED_TR) = adoRs.Fields("Transfer").Value
        Else
            g_lngAryCurRecIDNumber(GLED_TR) = 0
        End If
    End If
    On Error GoTo 0
    
    f_GetCurrentRecIDNo = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetCurrentRecIDNo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_GetCurrentRecIDNo", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||30d|X|fffd|V
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Office|fffd||303|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Cash/Bank/Transfer|fffd||303||fffd||fffd|R|fffd|[|fffd|hID|fffd||182||fffd||fffd||10e|g|fffd|p|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Function f_UpdateCurrentRecIDNo( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_LedgerRecIDNo & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_LedgerRecIDNo
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setRecIDNoHistorySQLString(adoRs, prmDate)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_LedgerRecIDNo
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.Fields("CashBook").Value = 0
        adoRs.Fields("BankBook").Value = 0
        adoRs.Fields("Transfer").Value = 0
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("CashBook").Value = g_lngAryCurRecIDNumber(GLED_CB)
    adoRs.Fields("BankBook").Value = g_lngAryCurRecIDNumber(GLED_BB)
    adoRs.Fields("Transfer").Value = g_lngAryCurRecIDNumber(GLED_TR)
    adoRs.Fields("InsertDate").Value = prmDate
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    On Error GoTo 0
    
    f_UpdateCurrentRecIDNo = True
   
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    f_UpdateCurrentRecIDNo = False
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpdateCurrentRecIDNo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    
    sg_MsgBoxError "f_UpdateCurrentRecIDNo", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd|File|fffd||fffd||fffd||315||6d1||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd|File|fffd||313||fffd||fffd|e|fffd||fffd|DB|fffd||6d1||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Import/JWModify/NKModify|fffd||30a|e|fffd||fffd||fffd||fffd|File|fffd||14b||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/02/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_UpdateExchangeData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    f_UpdateExchangeData = False
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ExchangeData & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ExchangeData
        GoTo LBL_ERR
    End If
    
    If adoRs.EOF Then   ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.AddNew
        adoRs.Fields("OfficeCode").Value = g_strOfficeCode
        adoRs.Fields("TargetPeriod").Value = m_datTgtDate
    End If
    
    adoRs.Fields(m_strExchngField).Value = m_strExchngData
    adoRs.Fields("InsertDate").Value = prmDate
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    On Error GoTo 0
    
    f_UpdateExchangeData = True
   
LBL_END:
    m_strExchngData = ""
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpdateExchangeData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    
    sg_MsgBoxError "f_UpdateExchangeData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||303|e|fffd|L|fffd|X|fffd|g|fffd|A|fffd|E|fffd|g|fffd|ADB|fffd||582||30a|m|fffd||fffd||3c2||742||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub s_MonthlyProc()
    Dim intCount As Integer
    Dim blnCheck As Boolean
    Dim blnCancel As Boolean
    
    lblInfo.Caption = "Now running Monthly Processing."
    lblInfo.Visible = True
    Call s_UIControl(False)        ' UI|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
       
    ''|fffd|e|fffd|L|fffd|X|fffd|g|fffd|A|fffd|E|fffd|g,SendDate|fffd|X|fffd|V
    If f_MonthlyUpdateDataTextOut(blnCancel) = False Then
        If blnCancel = False Then
            MsgBox c_strMSGTxt_FAILMONTHLYFUNC, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        End If
        lblInfo.Visible = False
        Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
        Exit Sub
    End If
    
    For intCount = 0 To 14  ''|fffd|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O
        g_blnArySetupSheet(intCount) = False
    Next
    
    s_SetTargetMonthDisp ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd|\|fffd||fffd||fffd||752||fffd|
    
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    MsgBox c_strMSGTxt_FINISHMONTHLYFUNC, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
    lblInfo.Visible = False
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> |fffd||fffd||fffd|[|fffd|U|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : |fffd||44a0||fffd|X|fffd|V|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||352||1c9||fffd|
'   2004/02/13 : Knowlbo Suzuki : JWRetImportDate, ModifyNK|fffd||1c9||fffd|
'   2004/02/24 : Knowlbo Suzuki : ImportFile|fffd||fffd||fffd|e|fffd||fffd|DB|fffd||6d1||fffd||fffd||1c9||fffd|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function f_MonthlyUpdateDataTextOut( _
    ByRef blnCancel As Boolean _
) As Boolean

    Dim adoCn As ADODB.Connection
    Dim objdba As clsDBAccess
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strCurDir As String         ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|p|fffd|X|fffd||fffd|
    Dim strFilePath As String       ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||fffd|
    Dim intMonth As Integer         ''|fffd|m|fffd||830e|
    Dim intTgtYear As Integer       ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38f||6d4|N
    Dim strData As String           ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim blnAddedSS As Boolean
    Dim datPrNow As Date
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strSQL As String
    
    datPrNow = Now()    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
    blnAddedSS = False
    blnCancel = False
    m_strExchngData = ""
    
    f_MonthlyUpdateDataTextOut = False
    
    ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N---------------------------------------
    m_datTgtDate = g_datImportMonth
    
    intMonth = Month(m_datTgtDate)
    intTgtYear = Year(m_datTgtDate)
    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
        If g_datImportMonth = g_datDecisionMonth Then
            ''|fffd|N|fffd|x|fffd||fffd||fffd|S|fffd||fffd||fffd|m|fffd||fffd||3c2||fffd|
            ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
            If intMonth = Month(fg_GetEndOfYear(fg_GetFiscalYear(m_datTgtDate))) And fg_GetFiscalYear(m_datTgtDate) = g_intTargetSysYear Then
'            If intMonth = 3 And intTgtYear - 1 = g_intTargetSysYear Then
            ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
                strMSG = c_strMSGTxt_ALLDATADECIDE
            Else ''|fffd||14f|IImport|fffd||fffd||fffd||34a|m|fffd||fffd||3c2||fffd|
                strMSG = c_strMSGTxt_CONFIRMTarget
            End If
            blnCancel = True
            MsgBox strMSG, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            Exit Function
        End If
    Else
        ''|fffd||fffd|Import|fffd||343|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|
        MsgBox c_strMSGImp_NOPASTMONTHFUNC, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        blnCancel = True
        Exit Function
    End If

    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    If (MsgBox(c_strMSGTxt_MONTHLYFUNC_PFX & intTgtYear & "/" & intMonth & c_strMSGTxt_MONTHLYFUNC_SFX, _
                            vbQuestion Or vbYesNo, c_strNAME_SYSTEM) = vbNo) Then
        blnCancel = True
        Exit Function
    End If


    ''DB|fffd||691||fffd||fffd||fffd||fffd||fffd|
    strMSG = "DBUpdateProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    '-------------------------------------------------------
    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    '-------------------------------------------------------
    ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c|
    strCurDir = g_strAppPath & c_strExportFolder
    strFilePath = strCurDir & Application.PathSeparator & "NK2" & g_strOfficeCode & "_" & _
                    intTgtYear & Format$(intMonth, "00") & "01" & ".txt"
    If Dir(strCurDir, vbDirectory) = "" Then    ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||c42c|
        MkDir strCurDir
    End If
    If Dir(strFilePath) <> "" Then  ''|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        Kill (strFilePath)
    End If
    If Dir(strFilePath) = "" Then   ''|fffd|V|fffd|K|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
        strData = "#FROMNK_" & g_strOfficeCode & vbCrLf & "#TargetMonth_" _
                  & CStr(intTgtYear) & "/" & Format$(intMonth, "00") & "/01"
        ''|fffd|w|fffd|b|fffd|_|fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        If (s_WriteFile(strFilePath, strData) = False) Then
            strMSG = "s_WriteFile Header Out ERROR"
            GoTo LBL_ERR
        End If
    End If
    
    ''PJTMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdatePJTData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_PJTMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If
    
    ''CBMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateCBData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_CBMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''BBMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateBBData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_BBMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''TRMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateTRData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_TRMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''AssociateMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateASData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_ASMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''SubConMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateSCData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_SCMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''RMMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateRMData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_RMMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''WBSMaster|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateWBSData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_WBSMaster
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If
    
    ''InvoiceHeader|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateInvHdData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_InvoiceHeader
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''InvoiceDetail|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateInvDtData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_InvoiceDetail
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''AssociatePayment|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateAsoPayData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_AssociatePayment
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''SubConPayment|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateSubConPayData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_SubConPayment
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''RequestData|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateReqData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_RequestData
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''PastRemittanceData|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdatePastRemitData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_PastRemittance
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If

    ''PrePaidExpense|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdatePrePaidData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_PrePaidExpense
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If
    
    ''ConnectionCode|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe|
    If (f_GetUpdateConnCodeData(adoCn, objdba, strData, datPrNow) = True) Then
        If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strMSG = "s_WriteFile Update File Out ERROR:" & c_strTBL_ConnCode
            GoTo LBL_ERR
        End If
    Else
        GoTo LBL_ERR
    End If
    
    ''CASHBOOK ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_CB) = True Then
        For intCount = 0 To UBound(g_typAryCBInfo)
            If (f_GetAccountsDetailDataMonthly(adoCn, objdba, _
                    g_typAryCBInfo(intCount).m_strCode, m_datTgtDate, strData) = True) Then
                If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    strMSG = "s_WriteFile Update CashBook File Out ERROR"
                    GoTo LBL_ERR
                End If
            Else
                GoTo LBL_ERR
            End If
        Next
    End If
    
    ''BANKBOOK ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_BB) = True Then
        For intCount = 0 To UBound(g_typAryBBInfo)
            If (f_GetAccountsDetailDataMonthly(adoCn, objdba, _
                    g_typAryBBInfo(intCount).m_strCode, m_datTgtDate, strData) = True) Then
                If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    strMSG = "s_WriteFile Update BankBook File Out ERROR"
                    GoTo LBL_ERR
                End If
            Else
                GoTo LBL_ERR
            End If
        Next
    End If
    
    ''TRANSFER ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_TR) = True Then
        For intCount = 0 To UBound(g_typAryTRInfo)
            If (f_GetAccountsDetailDataMonthly(adoCn, objdba, _
                    g_typAryTRInfo(intCount).m_strCode, m_datTgtDate, strData) = True) Then
                If (s_WriteFile(strFilePath, strData, blnAddedSS) = False) Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    strMSG = "s_WriteFile Update Transfer File Out ERROR"
                    GoTo LBL_ERR
                End If
            Else
                GoTo LBL_ERR
            End If
        Next
    End If

    If blnAddedSS Then ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
        ''|fffd|t|fffd|b|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If (s_WriteFile(strFilePath, "#END_" & g_strOfficeCode) = False) Then
            strMSG = "s_WriteFile File Out Footer ERROR"
            GoTo LBL_ERR
        End If
    
        ''ImportFile|fffd||fffd||fffd|e|fffd||fffd|DB|fffd||6d1||fffd|
        m_strExchngField = "NKModifyData"
        If f_UpdateExchangeData(adoCn, objdba, datPrNow) = False Then GoTo LBL_ERR
    Else
        Call s_DeleteFile(strFilePath)
    End If

    ''Decision|fffd|X|fffd|V
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(m_datTgtDate)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setDecisionDataHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_Decision
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If blnAddedSS Then
        adoRs.Fields("ModifyNK").Value = "1"
    End If
    
    adoRs.Fields("DecisionDate").Value = datPrNow
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    Call objdba.closeRecordset(adoRs)

    Call objdba.commitTransaction(adoCn)
    g_datDecisionMonth = m_datTgtDate ''|fffd|m|fffd||830e||fffd||752||fffd|
    
    On Error GoTo 0
    
    If blnAddedSS Then
        ''TextOut|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
        If Left$(g_strOfficeCode, 2) = c_strBranchOfficeTag Then
            strMSG = c_strMSGTxt_FINISHTEXTOUT_BR_PFX & strFilePath & c_strMSGTxt_FINISHTEXTOUT_BR_SFX
        Else
            strMSG = c_strMSGTxt_FINISHTEXTOUT_PJT_PFX & strFilePath & c_strMSGTxt_FINISHTEXTOUT_PJT_SFX
        End If
        MsgBox strMSG, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    End If
    
    f_MonthlyUpdateDataTextOut = True

LBL_END:
    m_strExchngData = ""
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.rollbackTransaction(adoCn)
    Call s_DeleteFile(strFilePath)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "TextOutError" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd|p|fffd|X|fffd|V|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||64fe|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd|o|fffd||357|p|fffd||30d|X|fffd|V|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|oSQL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_CreateSQLforMonthly(strTable As String)
    
    Dim strSQL As String        ''SQL|fffd||fffd||fffd||fffd||fffd||fffd|
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND (ProofDate Is NULL OR (" & "ProofDate Is NOT NULL AND ProofDate < InsertDate))"
    f_CreateSQLforMonthly = strSQL
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PJTMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PJTMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdatePJTData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdatePJTData = False
    Set adoRs = New ADODB.Recordset
    
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_PJTMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PJTMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_PJTMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPJTMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PJTMaster
                GoTo LBL_ERR
            End If
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ProjectCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ProjectName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("PaymentMethod").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Contract").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContractNK").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContractASO").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("PerCont").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("PerNK").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("PerASO").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Advance").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AdvanceNK").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AdvanceASO").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdatePJTData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdatePJTData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdatePJTData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CBMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CBMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateCBData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateCBData = False
    Set adoRs = New ADODB.Recordset

On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_CBMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CBMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_CBMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setCBMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_CBMaster
                GoTo LBL_ERR
            End If
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Casher").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Purpose").Value) & vbTab
            If (IsNull(adoRs.Fields("Memo").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Memo").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateCBData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateCBData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateCBData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BBMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BBMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateBBData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateBBData = False
    Set adoRs = New ADODB.Recordset

On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_BBMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BBMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_BBMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setBBMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_BBMaster
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("BankName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("BranchName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Address").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AccountType").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AccountNo").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("BeneficiaryName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Signer").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("UseRemittance").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Purpose").Value) & vbTab
            If (IsNull(adoRs.Fields("Memo").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Memo").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    On Error GoTo 0
    f_GetUpdateBBData = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateBBData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateBBData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TRMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (4)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TRMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateTRData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateTRData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_TRMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_TRMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_TRMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setTRMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_TRMaster
                GoTo LBL_ERR
            End If
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Description").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Purpose").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    On Error GoTo 0
    f_GetUpdateTRData = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateTRData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateTRData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociateMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociateMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateASData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateASData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_ASMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_ASMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setAssociateMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ASMaster
                GoTo LBL_ERR
            End If
            
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AssociateCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AssociateName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContractAmount").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContractAdvance").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateASData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateASData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateASData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubConMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubConMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateSCData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateSCData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_SCMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_SCMaster    ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setSubConMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SCMaster
                GoTo LBL_ERR
            End If
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("SubConCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("SubConName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContractAmount").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContractAdvance").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Reimbursable").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateSCData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateSCData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateSCData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RMMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RMMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateRMData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateRMData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_RMMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RMMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_RMMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setRMMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RMMaster
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            If (IsNull(adoRs.Fields("RequestTo1").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("RequestTo1").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("RequestTo2").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("RequestTo2").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("RequestTo3").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("RequestTo3").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("AdviceTo").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("AdviceTo").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateRMData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateRMData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateRMData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBSMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBSMaster|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateWBSData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateWBSData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_WBSMaster)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_WBSMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strFAS_TBL_WBSMaster     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setWBSMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_WBSMaster
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ID").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("WBSCode").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateWBSData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateWBSData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateWBSData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'       2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetUpdateConnCodeData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean

    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    f_GetUpdateConnCodeData = False
    strMSG = "DBSelectProcError"
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_ConnCode)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ConnCode
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_ConnCode     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setConnectionCodeHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ConnCode
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ConnectionCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ConnectionName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Category").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateConnCodeData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateConnCodeData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateConnCodeData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceHeader|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceHeader|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdateInvHdData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateInvHdData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_InvoiceHeader)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_InvoiceHeader     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setInvoiceHeaderHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceHeader
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
              
              ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("InvoiceNo").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Description").Value) & vbTab
            If (IsNull(adoRs.Fields("PeriodStart").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PeriodStart").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("PeriodEnd").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PeriodEnd").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("Status").Value) & vbTab
            If (IsNull(adoRs.Fields("IssuingDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("IssuingDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ApprovalDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("ApprovalDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("PaymentDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PaymentDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("PaymentAmount").Value) & vbTab
            If (IsNull(adoRs.Fields("ReceivedAmount").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ReceivedAmount").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("AdvanceData").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("AdvanceData").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ReverseStatus").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ReverseStatus").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("CorrectionLinkCode").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("CorrectionLinkCode").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateInvHdData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateInvHdData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateInvHdData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceDetail|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceDetail|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdateInvDtData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateInvDtData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_InvoiceDetail)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceDetail
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_InvoiceDetail    ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setInvoiceDetailHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceDetail
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("InvoiceNo").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AsoLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Classify").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AsoCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("InvoiceAmount").Value) & vbTab
            If (IsNull(adoRs.Fields("Repayment").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Repayment").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Retention").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Retention").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Vat").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Vat").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("HoldingTax").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("HoldingTax").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ManageFee").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ManageFee").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("OtherTax").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("OtherTax").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Others").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Others").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("PaymentAmount").Value) & vbTab
            If (IsNull(adoRs.Fields("ReverseStatus").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ReverseStatus").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateInvDtData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateInvDtData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateInvDtData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociatePayment|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociatePayment|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdateAsoPayData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    f_GetUpdateAsoPayData = False
    strMSG = "DBSelectProcError"
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_AssociatePayment)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_AssociatePayment    ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AssociateCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            If (IsNull(adoRs.Fields("ClientInvoice").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ClientInvoice").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("InvRefNo").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("InvRefNo").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Description").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Description").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ReceivedDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("ReceivedDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("PaidDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PaidDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Status").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Status").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("PaymentAmount").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("PaymentAmount").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ActualPayment").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ActualPayment").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("PaymentBalance").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("PaymentBalance").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ReverseStatus").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ReverseStatus").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateAsoPayData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateAsoPayData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateAsoPayData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubConPayment|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubConPayment|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdateSubConPayData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateSubConPayData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_SubConPayment)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_SubConPayment    ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setSubConPaymentHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SubConPayment
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("InvRefNo").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("SubconCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Description").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("ReceivedDate").Value) & vbTab
            If (IsNull(adoRs.Fields("PaidDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PaidDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("Status").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("InvoiceAmount").Value) & vbTab
            If (IsNull(adoRs.Fields("Repayment").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Repayment").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Vat").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Vat").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("HoldingTax").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("HoldingTax").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Others").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Others").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("PaymentAmount").Value) & vbTab
            If (IsNull(adoRs.Fields("AdvanceData").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("AdvanceData").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateSubConPayData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateSubConPayData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateSubConPayData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RequestData|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RequestData|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdateReqData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdateReqData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    strSQL = f_CreateSQLforMonthly(c_strTBL_RequestData)
    ''strSql = strSql & " ORDER BY tb.LedgerLinkCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RequestData
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_RequestData     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setRequestDataHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RequestData
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Item").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Amount").Value) & vbTab
            If (IsNull(adoRs.Fields("Remarks").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Remarks").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdateReqData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdateReqData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdateReqData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PastRemittanceData|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PastRemittanceData|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdatePastRemitData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    f_GetUpdatePastRemitData = False
    strMSG = "DBSelectProcError"
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_PastRemittance)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_PastRemittance     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPastRemittanceDataHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PastRemittance
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("RequestDate").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("RequestCurrency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("RequestAmount").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ContactPlace").Value) & vbTab
            If (IsNull(adoRs.Fields("Comment").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Comment").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ReceiptDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("ReceiptDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ReceiptCurrency").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ReceiptCurrency").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ReceiptAmount").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ReceiptAmount").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    
    f_GetUpdatePastRemitData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdatePastRemitData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdatePastRemitData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PrePaidExpense|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd|X|fffd|V|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PrePaidExpense|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetUpdatePrePaidData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strUpdata As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    strMSG = "DBSelectProcError"
    f_GetUpdatePrePaidData = False
    Set adoRs = New ADODB.Recordset
On Error GoTo LBL_ERR
    ''SQL|fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
    objdba.SQLString = f_CreateSQLforMonthly(c_strTBL_PrePaidExpense)
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & c_strTBL_PrePaidExpense     ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPrePaidExpenseHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PrePaidExpense
                GoTo LBL_ERR
            End If
            
            ''|fffd|X|fffd|V/|fffd||fffd||fffd|M|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|t|fffd||30d|X|fffd|V
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Update
            
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Currency").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Description").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("Purpose").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ConnectionCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("ConnectionName").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AcCategory").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("WBSCode").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PeriodStart").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PeriodEnd").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("PaymentAmount").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("MonthlyAmount").Value) & vbTab
            If (IsNull(adoRs.Fields("PaymentDate").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("PaymentDate").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("TransferAmount").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("TransferMonths").Value) & vbTab
            If (IsNull(adoRs.Fields("LastTransferMonth").Value) = False) Then
                strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("LastTransferMonth").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    f_GetUpdatePrePaidData = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetUpdatePrePaidData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetUpdatePrePaidData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|[|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|(Cash/Bank/Transfer)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> LedgerCode
'   (4)<Date |fffd|^> TargetPeriod
'   (5)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cf|o|fffd|[(Cash/Bank/Transfer)|fffd||30d|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/14 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c||fffd|i|fffd||690|A|fffd|j
'   2004/02/17 : Knowlbo Suzuki : ModifyPlace |fffd|o|fffd||352||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_GetAccountsDetailDataMonthly( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLedgerCode As String, _
    ByRef datTgtDate As Date, _
    ByRef strUpdata As String _
) As Boolean

    Dim strMSG As String
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strDbTable As String
    Dim strData As String
        
    strMSG = "DBSelectProcError"
    f_GetAccountsDetailDataMonthly = False

    Set adoRs = New ADODB.Recordset

    Select Case Left$(strLedgerCode, 2)
    Case "CB" ''CashBook"
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTgtDate)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
    strSQL = strSQL & " AND tb.ImportDate Is NULL"
    strSQL = strSQL & " ORDER BY tb.ID"

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        strUpdata = "#" & strLedgerCode    ''Table|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Do Until adoRs.EOF
            ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c|
            strUpdata = strUpdata & vbCrLf
            strUpdata = strUpdata & CStr(adoRs.Fields("ID").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("OfficeCode").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("TargetPeriod").Value) & vbTab
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("LedgerDate").Value) & vbTab
            If (IsNull(adoRs.Fields("Description").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Description").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Details").Value) = False) Then
                strData = CStr(adoRs.Fields("Details").Value)
                strData = Replace(strData, Chr(10), " ", 1, -1, vbBinaryCompare)
                strData = Replace(strData, Chr(13), " ", 1, -1, vbBinaryCompare)
                strData = Replace(strData, Chr(9), " ", 1, -1, vbBinaryCompare)
                strUpdata = strUpdata & strData & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("WBSCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AccountCode").Value) & vbTab
            strUpdata = strUpdata & CStr(adoRs.Fields("AccountName").Value) & vbTab
            If (IsNull(adoRs.Fields("ConnectionCode").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ConnectionCode").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ConnectionName").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ConnectionName").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("LedgerLinkCode").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("LedgerLinkCode").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("EviNo").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("EviNo").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("CheckNo").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("CheckNo").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & CStr(adoRs.Fields("NKJV").Value) & vbTab
            If (IsNull(adoRs.Fields("Claim").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Claim").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Paid").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Paid").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("Received").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("Received").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                strUpdata = strUpdata & CStr(adoRs.Fields("ModifyPlace").Value) & vbTab
            Else
                strUpdata = strUpdata & vbTab
            End If
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value) & vbTab ''InsertDate
            strUpdata = strUpdata & fg_DatetoString(adoRs.Fields("InsertDate").Value)         ''SendDate
            adoRs.MoveNext
        Loop
    End If
    
    f_GetAccountsDetailDataMonthly = True
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "f_GetAccountsDetailDataMonthly:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetAccountsDetailDataMonthly", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||303|e|fffd|L|fffd|X|fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^
'   (3)<Boolean |fffd|^> |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||742||702||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/24 : Knowlbo Suzuki : ImportFile|fffd||fffd||fffd|e|fffd||fffd|DB|fffd||6d1||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function s_WriteFile( _
    ByVal strFilePath As String, _
    ByRef strData As String, _
    Optional ByRef blnAdded As Boolean _
) As Boolean
                        
    Dim intFile As Integer      ''|fffd|g|fffd|p|fffd||94|\|fffd||203|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    
On Error GoTo LBL_ERR
    If (strData <> "") Then
        intFile = FreeFile
        Open strFilePath For Append As #intFile
        Print #intFile, strData     ''|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Close #intFile
        
        If blnAdded = False Then blnAdded = True
        m_strExchngData = m_strExchngData & strData & vbCrLf        ''|fffd||fffd||fffd||fffd|File|fffd||fffd||fffd||6d1||fffd|
        strData = ""    ''|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    End If
    
    On Error GoTo 0
    s_WriteFile = True
    Exit Function
    
LBL_ERR:
    s_WriteFile = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "WriteFileError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    Exit Function
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_DeleteFile(ByVal strFilePath As String)
                        
    If (strFilePath <> "") Then
        If Dir(strFilePath) <> "" Then  ''|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            Kill (strFilePath)
        End If
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd|V|fffd|K|fffd|c|fffd|a|fffd||c42c||fffd|A|fffd|c|fffd||fffd||fffd||308||68d|s
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_AnnualProc()
    Dim intCount As Integer
    Dim blnCheck As Boolean
    Dim strFName As String

    blnCheck = False

    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If g_datDecisionMonth <> 0 Then  ''|fffd|m|fffd||830e|
        ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        If Month(g_datDecisionMonth) = Month(fg_GetEndOfYear(fg_GetFiscalYear(g_datDecisionMonth))) Then
            If g_intTargetSysYear = fg_GetFiscalYear(g_datDecisionMonth) Then blnCheck = True
        End If
        
'        If Month(g_datDecisionMonth) = 3 Then
'            If g_intTargetSysYear + 1 = Year(g_datDecisionMonth) Then blnCheck = True
'        End If
        ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    End If

    If blnCheck = False Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
        MsgBox c_strMSG_AnnMUSTMonth, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Sub
    End If

    lblInfo.Caption = "Now running Annual Processing."
    lblInfo.Visible = True
    Call s_UIControl(False)        ' UI|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j

    ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    If (MsgBox(c_strMSG_AnnFuncPFX & g_intTargetSysYear & c_strMSG_AnnFuncSFX, _
                            vbQuestion Or vbYesNo, c_strNAME_SYSTEM) = vbNo) Then
        Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
        lblInfo.Visible = False
        Exit Sub
    End If

    ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
    If fg_YearlyProc(g_intTargetSysYear) = False Then
        MsgBox c_strMSG_AnnFAIL, vbExclamation Or vbOKOnly, c_strNAME_SYSTEM
        Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j
        lblInfo.Visible = False
        Exit Sub
    End If

    ''|fffd|V|fffd|N|fffd|x|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    intCount = UBound(g_intAryYear)
    intCount = intCount + 1
    ReDim Preserve g_intAryYear(intCount)
    g_intAryYear(intCount) = g_intTargetSysYear + 1
    
    m_blnSetupInProgress = True
    
    cboYear.AddItem CStr(g_intAryYear(UBound(g_intAryYear))), UBound(g_intAryYear)
    cboYear.Text = CStr(g_intAryYear(UBound(g_intAryYear)))
    g_intTargetSysYear = g_intAryYear(UBound(g_intAryYear))
    m_blnSetupInProgress = False
    
    For intCount = 0 To 14  ''|fffd||103|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd|t|fffd||fffd||fffd|O
        g_blnArySetupSheet(intCount) = False
    Next

    s_SetTargetMonthDisp ''|fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd|\|fffd||fffd||fffd||752||fffd|

    Call s_UIControl(True)         ' UI|fffd||fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|j

    ''|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    MsgBox c_strMSG_AnnCOMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    lblInfo.Visible = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|e|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||311|I|fffd||fffd||fffd||94|\|fffd||fffd||515||3cd|X
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> |fffd|L|fffd||fffd|/|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd|i|fffd|R|fffd||fffd||fffd|{|fffd|j|fffd||311|I|fffd||fffd||fffd||94|\|fffd||fffd||502||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2004/2/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'    2014/3/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub s_UIControl(ByVal blnMode As Boolean)
    cboOfficeCode.Enabled = blnMode
    cboOfficeName.Enabled = blnMode
    If g_blnOfficeMstModify Then
        cmdOfficeEdit.Enabled = blnMode
    End If
    cboYear.Enabled = blnMode
    cboSetting.Enabled = blnMode
    cmdMaster.Enabled = blnMode
    cboInput.Enabled = blnMode
    cmdLedger.Enabled = blnMode
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        cboOthers.Enabled = blnMode
        cmdOthers.Enabled = blnMode
    Else
        cboOthers.Enabled = False
        cmdOthers.Enabled = False
    End If
'    cboOthers.Enabled = blnMode
'    cmdOthers.Enabled = blnMode
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    'cmdQuit.Enabled = blnMode
    If blnMode Then
        Application.Cursor = xlDefault
    Else
        Application.Cursor = xlWait
    End If
    DoEvents
End Sub


Attribute VB_Name = "frmLogin"
Attribute VB_Base = "0{968E40B5-5723-4389-A47C-5ED6553AFDE8}{38CA8403-E7E0-426B-917A-04FCC3B154E0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'--------------------------------------------------------------------------------
' |fffd|T|fffd|v
' |fffd|@|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||312||fffd|`
' |fffd||c42c||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd||fffd||fffd|l
'
'--------------------------------------------------------------------------------
Option Explicit

Private Const LDAP_SERVER = "ldap.n-koei.co.jp"
''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
Private Const m_NO_POST As String = "Getting of organization information failed."
'Private Const m_NO_POST As String = "|fffd||fffd||fffd||fffd||fffd||64fe||fffd|s|fffd||fffd|"
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'--------------------------------------------------------------------------------
'|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd|
'--------------------------------------------------------------------------------
Private m_strUserID As String           ''UserID
Private m_strEmployeeCode As String     ''|fffd||fffd||fffd|R|fffd|[|fffd|h
Private m_blLogin As Boolean            ''|fffd|F|fffd||603|t|fffd||fffd||fffd|O|fffd|iTrue|fffd|F|fffd||fffd||fffd||fffd||fffd|AFalse|fffd|F|fffd||fffd||fffd|s|fffd|j
Private m_intReTryCount As Integer      ''|fffd||fffd||fffd|g|fffd||fffd||fffd|C|fffd|J|fffd|E|fffd||fffd||fffd|^
''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
Private m_blWrite As Boolean            ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|t|fffd||fffd||fffd|O|fffd|iTrue|fffd|FWrite|fffd|AFalse|fffd|FRead|fffd|j
''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd||fffd||fffd|O|fffd|E|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd|@2004/04/05  Knowlbo S.Suzuki|fffd|F|fffd||fffd||fffd|m|fffd||70b9||fffd|\|fffd||fffd||fffd||1c9||fffd|
' |fffd|@2014/03/05  |fffd|n|7c97|S|fffd|q|fffd|F|fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()
    txtNews.Text = g_strAppInfomation
    Me.Caption = c_strNAME_SYSTEM
    m_blLogin = False
    m_intReTryCount = 0
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    m_blWrite = False
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Login|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Login|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub CloseForm()
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)UserID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   UserID
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get UserID() As String
    UserID = m_strUserID
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd|Code|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|Code|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||fffd|Code
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get EmployeeCode() As String
    EmployeeCode = m_strEmployeeCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||310||fffd||fffd||6d6||2347||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||310||fffd||fffd||6c2||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   True:|fffd||fffd||fffd||fffd| / False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get IsLogin() As Boolean
    IsLogin = m_blLogin
End Property

''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||749||94||6d6||2347||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||309||94||6c2||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   True:Write / False:Read
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2004/03/05  |fffd|n|7c97|S|fffd|q|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get IsWrite() As Boolean
    IsWrite = m_blWrite
End Property
''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CommandButtonCancel_Click()
    m_blLogin = False
    Me.Hide
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Login|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Login|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
' |fffd|@2003/01/14  Knowlbo S.Suzuki|fffd|F|fffd|V|fffd|K|fffd||c42c|
' |fffd|@2004/04/19  Knowlbo S.Suzuki|fffd|FLoginAccessLog|fffd||1c9||fffd|
' |fffd|@2013/02/20  |fffd|n|7c97|S|fffd|q|fffd|F|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
' |fffd|@2014/03/05  |fffd|n|7c97|S|fffd|q|fffd|F|fffd|Q|fffd||194||151||389||fffd|]
' |fffd|@2016/02/25  Y.Watanabe|fffd|F64bit|fffd||389||fffd|
' |fffd|@2016/08/01  Y.Watanabe|fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub CommandButtonLogin_Click()
    ''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
'    Dim ocerLogin As Object
'    Dim oemp As Object
    ''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
    
    If TextBoxUserID.Text = "" Or TextBoxPassword.Text = "" Then
        MsgBox c_strMSG_CERT_INPUT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Exit Sub
    End If
    
    m_blLogin = False
    m_intReTryCount = m_intReTryCount + 1
    If m_intReTryCount > 5 Then
        MsgBox c_strMSG_CERT_RETRYERR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Me.Hide
        Exit Sub
    End If
    
On Error GoTo LBL_ERR:
    ''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
'    Set ocerLogin = CreateObject("NKKSOSUB.Certification")
'    Set oemp = CreateObject("NKKSOSUB.Employee")
    ''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
    
    ''Login|fffd|T|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||752||fffd|
    ''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
    If modExcelTools.IsLogin(TextBoxUserID.Text, TextBoxPassword.Text) Then
'    ocerLogin.ServerName = LDAP_SERVER
'    If ocerLogin.IsLogin(TextBoxUserID.Text, TextBoxPassword.Text) Then
    ''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
        m_strUserID = TextBoxUserID.Text
        ''<<<2013.02.20 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        If ComboBoxOrgCode.Value = m_NO_POST Then
            m_strEmployeeCode = ""
        Else
            m_strEmployeeCode = ComboBoxOrgCode.Value
        End If
        
        ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Select Case fg_GetPersonalUseRightsSystem(m_strUserID, m_strEmployeeCode, "Entry")
'        Select Case fg_GetPersonalUseRightsSystem(m_strUserID, m_strEmployeeCode, "|fffd|o|fffd|^")
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
            Case "W"
                Call sg_InsertAccessLog(0, m_strUserID, m_strEmployeeCode)
                m_blLogin = True
                m_blWrite = True
                
            Case "R"
                Call sg_InsertAccessLog(0, m_strUserID, m_strEmployeeCode)
                m_blLogin = True
                m_blWrite = False
                
            Case Else
                Call sg_InsertAccessLog(8, m_strUserID, m_strEmployeeCode)
                MsgBox c_strMSG_DBMstCERT_ERR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                
        End Select
        
'        If fg_GetPersonalUseRightsSystem(m_strUserID, m_strEmployeeCode, "|fffd|o|fffd|^") = "W" Then
'            Call sg_InsertAccessLog(0, m_strUserID, m_strEmployeeCode)
'            m_blLogin = True
'        Else
'            Call sg_InsertAccessLog(8, m_strUserID, m_strEmployeeCode)
'            MsgBox c_strMSG_DBMstCERT_ERR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
'        End If
        ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
        
'        ''|fffd||fffd||fffd||fffd||fffd||64fe||fffd|T|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||752||fffd|
'        oemp.ServerName = LDAP_SERVER
'        If oemp.SetTargetUserID(TextBoxUserID.Text) Then
'            If CStr(oemp.BukaCode) <> "" Then
'                m_strEmployeeCode = Left$(CStr(oemp.BukaCode), 6)
'                Call sg_InsertAccessLog(0, TextBoxUserID.Text, m_strEmployeeCode)
'            Else
'                Call sg_InsertAccessLog(0, TextBoxUserID.Text)
'            End If
'            m_blLogin = True
'        Else
'            Call sg_InsertAccessLog(2, TextBoxUserID.Text)
'            MsgBox c_strMSG_CERT_ERR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
'        End If
        ''>>>2013.02.20 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    Else
        Call sg_InsertAccessLog(1, TextBoxUserID.Text)
        MsgBox c_strMSG_CERT_ERR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    End If

    On Error GoTo 0
    ''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
'    Set ocerLogin = Nothing
'    Set oemp = Nothing
    ''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|

    If m_blLogin Then
        Me.Hide
    End If
    
    Exit Sub
LBL_ERR:
    ''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
'    If ocerLogin Is Nothing Then
'        MsgBox c_strMSG_CERTDLL_ERR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
'    End If
    ''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|~|fffd|{|fffd|^|fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|~|fffd|{|fffd|^|fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
   If CloseMode <> vbFormCode Then Cancel = 1
End Sub

''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    TextBoxUserID|fffd||fffd|Change|fffd|C|fffd|x|fffd||fffd||fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    |fffd||fffd||fffd||342||fffd||fffd||a0bd|UserID|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2013/02/19|fffd|F|fffd|n|7c97|S|fffd|q|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub TextBoxUserID_Change()
    
    Dim strPost As String
    Dim varPost As Variant
    Dim varCode As Variant
    Dim i As Long
    
    If Len(TextBoxUserID.Text) = 5 Then
        strPost = fg_GetPersonalPosts(TextBoxUserID.Text)
        
        With ComboBoxOrgCode
            .Enabled = True
            .Clear
            
            If strPost = "000000: Nothing" Then
                .AddItem m_NO_POST
                .Enabled = False
            Else
                varPost = Split(strPost, ",")
                For i = LBound(varPost) To UBound(varPost)
                    varCode = Split(varPost(i), ":")
                    .AddItem varCode(0)
                Next
            End If
            
            .ListIndex = 0
        End With
    End If
    
End Sub
''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N

Attribute VB_Name = "frmLumpTransfer"
Attribute VB_Base = "0{C20C41F9-5850-43C7-B620-98A87ED4ACD5}{B4017F98-9BF7-4073-837B-84895038687D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Ledger|fffd||fffd||fffd||a287||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_aryContentsID() As String     ''LedgerContentsID|fffd|z|fffd||fffd|
Private m_intPurpose As Integer         ''Purpose(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_strCurrency As String         ''Currency(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_datRefTrTargetMonth As Date   ''TargetMonth
Private m_blnSetupInProgress As Boolean         ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|

Private m_lngCapacity As Long           ''|fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iTransferSeet|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd||fffd|1/2|fffd|j
Private m_strSelectedIDcsv As String    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|ID|fffd||fffd|CSV
Private m_strSrcWBSCode As String       ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|WBS
Private m_strSrcAcCode As String        ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|AccountCode

Private m_strDstWBSCode As String       ''|fffd||3ca||fffd||fffd||fffd||fffd|WBS
Private m_strDstAcCode As String        ''|fffd||3ca||fffd||fffd||fffd||fffd|AccountCode
Private m_strDstAcName As String        ''|fffd||3ca||fffd||fffd||fffd||fffd|AccountName

Private m_strRefTrLedgerCode As String  ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|LedgerCode
Private m_blnBtnRet As Boolean          ''|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O  True:OK|fffd|{|fffd|^|fffd||fffd|  False|fffd|FCansel|fffd|{|fffd|^|fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()

    ''|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnBtnRet = False
    
    ''|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_intPurpose = 0
    m_strCurrency = ""
    m_strSelectedIDcsv = ""
    m_datRefTrTargetMonth = 0
    m_strRefTrLedgerCode = ""
    m_strDstWBSCode = ""
    m_strDstAcCode = ""
    m_strDstAcName = ""
    m_strSrcWBSCode = ""
    m_strSrcAcCode = ""
    m_lngCapacity = 0
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||24f||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/08 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub s_SetUpForm()

    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intMonth As Integer         ''TargetMonth|fffd||30f||fffd||fffd||fffd||fffd|l
    Dim intDecisionYear As Integer
    Dim lngIx As Long
    ''<<<2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim intSYear As Integer
    Dim intEYear As Integer
    Dim intSMonth As Integer
    Dim intEMonth As Integer
    ''>>>2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||fffd|
    Me.Caption = c_strNAME_SYSTEM

    m_blnSetupInProgress = True
    
    ''<<<2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    ' |fffd|N|fffd|x|fffd|z|fffd||fffd||30d||14f||fffd||fffd|N|fffd|x|fffd||30a||fffd||fffd||fffd|N|fffd|`|fffd||151||fffd|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    intSYear = Year(fg_GetStartOfYear(g_intAryYear(LBound(g_intAryYear))))
    intEYear = Year(fg_GetEndOfYear(g_intAryYear(UBound(g_intAryYear))))
    For intCount = intSYear To intEYear
        cboYear.AddItem CStr(intCount)
    Next
    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    cboYear.Value = Format$(CStr(Year(m_datRefTrTargetMonth)), "0000")
    
    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    ' |fffd||38f||6d4|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4c382||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||fffd|N|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    intSMonth = Month(fg_GetStartOfYear(fg_GetFiscalYear(m_datRefTrTargetMonth)))
    intEMonth = intSMonth + 11
    cboMonth.AddItem "*"  ''|fffd|N|fffd|x*
    For intCount = intSMonth To intEMonth
        If (intCount > 12) Then
            cboMonth.AddItem Format$(intCount - 12, "00")
        Else
            cboMonth.AddItem Format$(intCount, "00")
        End If
    Next
    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    cboMonth.Value = Format$(CStr(Month(m_datRefTrTargetMonth)), "00")
    
'    If g_datImportMonth <> 0 Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
'        intDecisionYear = Year(g_datImportMonth)
'    Else
'        intDecisionYear = g_intTargetSysYear
'    End If
'
'    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
'    For intCount = 0 To UBound(g_intAryYear)
'        cboYear.AddItem CStr(g_intAryYear(intCount))
'    Next
'
'    ''|fffd||fffd|v|fffd|N|fffd|x|fffd||fffd||fffd||302|P|fffd|`|fffd|R|fffd||fffd||fffd||fffd||fffd|m|fffd||fffd||3c2||30f||a347||fffd||341|A|fffd|o|fffd|[|fffd|N|fffd||fffd||1c9||fffd|
'    If g_intAryYear(UBound(g_intAryYear)) < intDecisionYear Then
'        cboYear.AddItem CStr(intDecisionYear)
'    End If
'
'    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
'    cboYear.Value = Format$(CStr(Year(m_datRefTrTargetMonth)), "0000")
'
'    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
'    cboMonth.AddItem "*"  ''|fffd|N|fffd|x*
'    For intCount = 4 To 15
'        If (intCount > 12) Then
'            cboMonth.AddItem Format$(intCount - 12, "00")
'        Else
'            cboMonth.AddItem Format$(intCount, "00")
'        End If
'    Next
'    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
'    cboMonth.Value = Format$(CStr(Month(m_datRefTrTargetMonth)), "00")
    ''>>>2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|

    ''Ledger|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|(|fffd||289||742||fffd|NK/JV|fffd||310||fffd||fffd||42802||fffd|)
    ''CASH BOOK
    If (g_blnCBNoArray = False) Then
        For intCount = LBound(g_typAryCBInfo) To UBound(g_typAryCBInfo)
            If (g_typAryCBInfo(intCount).m_strCurrency = m_strCurrency) And _
                    (g_typAryCBInfo(intCount).m_intPurpose = m_intPurpose) Then
                cboLedger.AddItem g_typAryCBInfo(intCount).m_strCode
            End If
        Next
    End If
    ''BANKBOOK
    If (g_blnBBNoArray = False) Then
        For intCount = LBound(g_typAryBBInfo) To UBound(g_typAryBBInfo)
            If (g_typAryBBInfo(intCount).m_strCurrency = m_strCurrency) And _
                    (g_typAryBBInfo(intCount).m_intPurpose = m_intPurpose) Then
                cboLedger.AddItem g_typAryBBInfo(intCount).m_strCode
            End If
        Next
    End If
    ''TRANSFER
    If (g_blnTRNoArray = False) Then
        For intCount = LBound(g_typAryTRInfo) To UBound(g_typAryTRInfo)
            If (g_typAryTRInfo(intCount).m_strCurrency = m_strCurrency) And _
                    (g_typAryTRInfo(intCount).m_intPurpose = m_intPurpose) Then
                cboLedger.AddItem g_typAryTRInfo(intCount).m_strCode
            End If
        Next
    End If
    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    cboLedger.ListIndex = 0
    
    
    '' ExpenseBurden |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    For lngIx = 0 To UBound(g_typAryWBSCode)
        cboSrcWBS.AddItem g_typAryWBSCode(lngIx).m_strCode
        cboDstWBS.AddItem g_typAryWBSCode(lngIx).m_strCode
    Next
    cboSrcWBS.ListIndex = 0
    cboDstWBS.ListIndex = 0
    
    '' AccountCode |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    cboSrcAcCode.AddItem "9000*"  ''9000*
    cboDstAcCode.AddItem "9000*"  ''9000*
    cboSrcAcName.AddItem "All Cost"  ''9000*
    cboDstAcName.AddItem "All Cost"  ''9000*
    
    For lngIx = 0 To UBound(g_strAryAcCode)
        If Left$(g_strAryAcCode(lngIx), 4) = "9000" Then
            cboSrcAcCode.AddItem g_strAryAcCode(lngIx)
            cboDstAcCode.AddItem g_strAryAcCode(lngIx)
            cboSrcAcName.AddItem g_strAryAcName(lngIx)
            cboDstAcName.AddItem g_strAryAcName(lngIx)
        End If
    Next
    cboSrcAcCode.ListIndex = 0
    cboDstAcCode.ListIndex = 0
    cboSrcAcName.ListIndex = 0
    cboDstAcName.ListIndex = 0
    m_blnSetupInProgress = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ExpenseBurden|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||3c2||743|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboSrcWBS_Change()
    If m_blnSetupInProgress Then Exit Sub
    m_blnSetupInProgress = True
    If ListLedger.ListCount <> 0 Then
        ListLedger.Clear
        Erase m_aryContentsID
        cmdOK.Enabled = False
    End If
    m_blnSetupInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|AccountCode|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|v|fffd||fffd||fffd||931f||fffd||fffd||fffd||fffd||fffd||fffd|AccountName|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'   (2)|fffd||fffd||fffd||fffd||fffd||3c2||743|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboSrcAcCode_Change()
    If m_blnSetupInProgress Then Exit Sub
    m_blnSetupInProgress = True
    cboSrcAcName.ListIndex = cboSrcAcCode.ListIndex
    If ListLedger.ListCount <> 0 Then
        ListLedger.Clear
        Erase m_aryContentsID
        cmdOK.Enabled = False
    End If
    m_blnSetupInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|AccountName|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|v|fffd||fffd||fffd||931f||fffd||fffd||fffd||fffd||fffd||fffd|AccountCode|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'   (2)|fffd||fffd||fffd||fffd||fffd||3c2||743|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboSrcAcName_Change()
    If m_blnSetupInProgress Then Exit Sub
    m_blnSetupInProgress = True
    cboSrcAcCode.ListIndex = cboSrcAcName.ListIndex
    If ListLedger.ListCount <> 0 Then
        ListLedger.Clear
        Erase m_aryContentsID
        cmdOK.Enabled = False
    End If
    m_blnSetupInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|U|fffd||fffd|AccountCode|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|v|fffd||fffd||fffd||fffd|U|fffd||fffd|AccountName|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboDstAcCode_Change()
    If m_blnSetupInProgress Then Exit Sub
    m_blnSetupInProgress = True
    cboDstAcName.ListIndex = cboDstAcCode.ListIndex
    m_blnSetupInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|U|fffd||fffd|AccountName|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|v|fffd||fffd||fffd||fffd|U|fffd||fffd|AccountCode|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboDstAcName_Change()
    If m_blnSetupInProgress Then Exit Sub
    m_blnSetupInProgress = True
    cboDstAcCode.ListIndex = cboDstAcName.ListIndex
    m_blnSetupInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|[|fffd||fffd||fffd|X|fffd|g|fffd||64ea||fffd||311|I|fffd||fffd||fffd||16ccc||fffd||fffd||242||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub ListLedger_Change()
    If m_blnSetupInProgress Then Exit Sub

    If ListLedger.Selected(0) = True Then
        m_blnSetupInProgress = True
        ListLedger.Selected(0) = False
        m_blnSetupInProgress = False
    End If

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||fffd|Ledger|fffd||fffd||fffd|e|fffd||303||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Ledger|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdSearch_Click()
    Dim strList As String       ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim lngIx As Long           ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strHead As String       ''|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strSQL As String
    Dim strSQLPeriod As String
    Dim strSQLAccode As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim datValue As Date
    Dim strLed As String
    Dim strDbTable As String
    Dim strMSG As String
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(cboYear.Value, "Target Year", 0) = True) Then
        cboYear.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(cboMonth.Value, "Target Month", 0) = True) Then
        cboMonth.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(cboLedger.Value, "Target Ledger", 0) = True) Then
        cboLedger.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(cboSrcWBS.Value, "ExpenseBurden(Criteria)", 0) = True) Then
        cboSrcWBS.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(cboSrcAcCode.Value, "AccountCode(Criteria)", 0) = True) Then
        cboSrcAcCode.SetFocus
        Exit Sub
    
    End If
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ListLedger.Clear
    strSQLPeriod = ""
    strSQLAccode = ""
    
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
    m_strSrcWBSCode = cboSrcWBS.Value
    m_strSrcAcCode = cboSrcAcCode.Value
    
    ''|fffd||38f||6cc||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    If cboMonth.Value <> "*" Then
        datValue = DateValue(cboYear.Value & "/" & cboMonth.Value & "/01")
        strSQLPeriod = " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datValue)
    Else
        datValue = DateValue(cboYear.Value & "/01/01")
        strSQLPeriod = " AND tb.TargetPeriod >= " & fg_AddSingleQuotation(datValue)
        datValue = DateValue(cboYear.Value & "/12/01")
        strSQLPeriod = strSQLPeriod & " AND tb.TargetPeriod <= " & fg_AddSingleQuotation(datValue)
    End If
    
    '' |fffd||fffd||fffd||fffd||216||682||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    If m_strSrcAcCode = "9000*" Then
        strSQLAccode = strSQL & " AND tb.AccountCode LIKE '9000%'"
    Else
        strSQLAccode = strSQL & " AND tb.AccountCode = " & fg_AddSingleQuotation(m_strSrcAcCode)
    End If
    
    strLed = Left$(cboLedger.Value, 2)
    Select Case strLed
    Case "CB" ''CashBook
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''Book|fffd||fffd||fffd||5cf||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & strSQLPeriod
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(cboLedger.Value)
    strSQL = strSQL & " AND tb.WBSCode = " & fg_AddSingleQuotation(m_strSrcWBSCode)
    strSQL = strSQL & strSQLAccode
    strSQL = strSQL & " ORDER BY tb.ID"
    
    ''|fffd|f|fffd|[|fffd|^|fffd||64fe|
    strSQL = strSQL
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    
    ''|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||fffd||752||fffd|
    strHead = "Date" & Space$(2) & "Description" & Space$(8) & "Details" & Space$(7)
    strHead = strHead & "Expense Burden" & Space$(2) & "AccountCode" & Space$(4)
    strHead = strHead & "AccountName" & Space$(8) & "ConnectionCode" & Space$(2)
    strHead = strHead & "ConnectionName" & Space$(2) & "LedgerLinkCode" & Space$(2)
    strHead = strHead & "Evi.No." & Space$(1) & "NK/JV" & Space$(1) & "Claim" & Space$(1)
    strHead = strHead & "Paid" & Space$(15) & "Received"
    If (adoRs.EOF = False) Then
        ListLedger.AddItem strHead
        ListLedger.Selected(0) = False
    End If

    lngIx = 0
    Do Until adoRs.EOF
        ''Month / Date
        datValue = adoRs.Fields("LedgerDate").Value
        strList = fg_strUnity(Month(datValue) & "/" & Day(datValue), 5, 1) & "|"
        
        ''Description
        If (IsNull(adoRs.Fields("Description").Value) = True) Or (adoRs.Fields("Description").Value = "") Then
            strList = strList & fg_strUnity("", 18, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("Description").Value, 15, 0) & "|"
        End If
        ''Details
        If (IsNull(adoRs.Fields("Details").Value) = True) Or (adoRs.Fields("Details").Value = "") Then
            strList = strList & fg_strUnity("", 13, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("Details").Value, 10, 0) & "|"
        End If
        ''WBSCODE
        If (IsNull(adoRs.Fields("WBSCode").Value) = True) Then
            strList = strList & fg_strUnity("", 15, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("WBSCode").Value, 15, 1) & "|"
        End If
        ''ACCOUNT CODE
        If (IsNull(adoRs.Fields("AccountCode").Value) = True) Then
            strList = strList & fg_strUnity("", 14, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("AccountCode").Value, 14, 1) & "|"
        End If
        ''ACCOUNT NAME
        If (IsNull(adoRs.Fields("AccountName").Value) = True) Then
            strList = strList & fg_strUnity("", 18, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("AccountName").Value, 15, 0) & "|"
        End If
        ''CONNECTION CODE
        If (IsNull(adoRs.Fields("ConnectionCode").Value) = True) Or (adoRs.Fields("ConnectionCode").Value = "") Then
            strList = strList & fg_strUnity("", 15, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("ConnectionCode").Value, 15, 1) & "|"
        End If
        ''CONNECTION NAME
        If (IsNull(adoRs.Fields("ConnectionName").Value) = True) Or (adoRs.Fields("ConnectionName").Value = "") Then
            strList = strList & fg_strUnity("", 15, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("ConnectionName").Value, 12, 0) & "|"
        End If
        ''LEDGER LINK CODE
        If (IsNull(adoRs.Fields("LedgerLinkCode").Value) = True) Or (adoRs.Fields("LedgerLinkCode").Value = "") Then
            strList = strList & fg_strUnity("", 15, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("LedgerLinkCode").Value, 15, 1) & "|"
        End If
        ''EVI.NO
        If (IsNull(adoRs.Fields("EviNo").Value) = True) Then
            strList = strList & fg_strUnity("", 7, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("EviNo").Value, 7, 1) & "|"
        End If
        ''NK/JV
        If (IsNull(adoRs.Fields("NKJV").Value) = True) Then
            strList = strList & fg_strUnity("", 5, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("NKJV").Value, 5, 1) & "|"
        End If
        ''CLAIM
        If (IsNull(adoRs.Fields("Claim").Value) = True) Then
            strList = strList & fg_strUnity("", 5, 1) & "|"
        Else
            If adoRs.Fields("Claim").Value = 1 Then
                strList = strList & Format$("Y", "!" & String(5, "@")) & "|"
            Else
                strList = strList & Format$("N", "!" & String(5, "@")) & "|"
            End If
        End If
        ''PAID
        If (IsNull(adoRs.Fields("Paid").Value) = True) Then
            strList = strList & fg_strUnity("", 18, 1) & "|"
        Else
            If (adoRs.Fields("Paid").Value = 0) Then
                strList = strList & fg_strUnity("", 18, 1) & "|"
            Else
                ''|fffd|J|fffd||fffd||fffd|}|fffd|\|fffd|L|fffd||255||3cd|X
                'strList = strList & fg_strUnity(adoRs.Fields("Paid").Value, 15, 1) & "|"
                strList = strList & fg_strUnityAmount(adoRs.Fields("Paid").Value, 18) & "|"
            End If
        End If
        ''RECEIVED
        If (IsNull(adoRs.Fields("Received").Value) = True) Then
            strList = strList & fg_strUnity("", 18, 1)
        Else
            If (adoRs.Fields("Received").Value = 0) Then
                strList = strList & fg_strUnity("", 18, 1) & "|"
            Else
                ''|fffd|J|fffd||fffd||fffd|}|fffd|\|fffd|L|fffd||255||3cd|X
                'strList = strList & fg_strUnity(adoRs.Fields("Received").Value, 15, 1) & "|"
                strList = strList & fg_strUnityAmount(adoRs.Fields("Received").Value, 18) & "|"
            End If
        End If
        ''|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Add
        ListLedger.AddItem strList

        ''|fffd|e|fffd|R|fffd||fffd||fffd|e|fffd||fffd||fffd|c|fffd||fffd|ID|fffd||fffd|z|fffd||fffd||24a|i|fffd|[
        ReDim Preserve m_aryContentsID(lngIx)
        m_aryContentsID(lngIx) = adoRs.Fields("ID").Value

        adoRs.MoveNext
        lngIx = lngIx + 1
        ListLedger.Selected(lngIx) = True
    Loop
    
    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    If (ListLedger.ListCount = 0) Then
        cmdOK.Enabled = False
    Else
        cmdOK.Enabled = True
    End If
    
    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||fffd|s|fffd||fffd||752||fffd|
    If (cmdOK.Enabled = True) Then
        ListLedger.ListIndex = 1
    End If
    
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "cmdSearchclick:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "cmdSearchclick", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger|fffd||fffd||fffd|e|fffd||315||3d0||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Ledger|fffd||fffd||fffd|e|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdOK_Click()

    Dim lngIx As Long           ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim lngCount As Long        ''|fffd|I|fffd||fffd||fffd||fffd||fffd||690||fffd|
    Dim strCsv As String
    
    If m_strSrcWBSCode = cboDstWBS.Value Then
        If (m_strSrcAcCode = cboDstAcCode.Value) Or (cboDstAcCode.Value = "9000*") Then
            MsgBox c_strMSGTr_LpDestErr, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            cboDstWBS.SetFocus
            Exit Sub
        End If
    End If
    
    lngCount = 0
    strCsv = ""
    For lngIx = 0 To UBound(m_aryContentsID)
        If ListLedger.Selected(lngIx + 1) = True Then
            lngCount = lngCount + 1
            If strCsv <> "" Then strCsv = strCsv & ","
            strCsv = strCsv & m_aryContentsID(lngIx)
        End If
    Next
    
    If (lngCount = 0) Then
        MsgBox c_strMSGTr_LpNOTarget, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        ListLedger.SetFocus
        Exit Sub
    End If
    
    ''|fffd||fffd||fffd||fffd|I|fffd|[|fffd|o|fffd|[
    If m_lngCapacity < lngCount Then
        MsgBox c_strMSGTr_LpMorePFX & CStr(m_lngCapacity) & c_strMSGTr_LpMoreSFX, _
                        vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        ListLedger.SetFocus
        Exit Sub
    End If
    
    ''|fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_strSelectedIDcsv = strCsv
    ''''m_datRefTrTargetMonth = cboYear.Value & "/" & cboMonth.Value & "/01"
    m_strRefTrLedgerCode = cboLedger.Value
    
    m_strDstWBSCode = cboDstWBS.Value
    m_strDstAcCode = cboDstAcCode.Value
    m_strDstAcName = cboDstAcName.Value
    
    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True(OK|fffd|{|fffd|^|fffd||fffd|)|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||fffd||fffd||fffd|
    m_blnBtnRet = True
    Me.Hide

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||242||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdQuit_Click()

    ''|fffd||502||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312|l|fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    m_strSelectedIDcsv = ""
    m_datRefTrTargetMonth = 0
    m_strRefTrLedgerCode = ""
    m_strDstWBSCode = ""
    m_strDstAcCode = ""
    m_strDstAcName = ""

    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False(Cancel|fffd|{|fffd|^|fffd||fffd|)|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||fffd||fffd||fffd|
    m_blnBtnRet = False
    Me.Hide
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub s_CloseForm()
    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    Erase m_aryContentsID
    m_blnBtnRet = True
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Currency|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Currency|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmCurrency(ByVal strValue As String)
    ''Currency|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_strCurrency = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:NK main use  1:JV main use
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmPurpose(ByVal intValue As Integer)
    ''Purpose|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_intPurpose = intValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TargetMonth|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> TargetMonth
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TargetMonth|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmRefTrTargetMonth(ByVal datValue As Date)
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|TargetMonth|fffd||fffd||fffd|i|fffd|[
    m_datRefTrTargetMonth = datValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> Capacity
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmCapacity(ByVal Capacity As Long)
    ''Capacity|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_lngCapacity = Capacity
End Property


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> ID
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get GetSelectedIDcsv() As String
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|ID|fffd||fffd||fffd|i|fffd|[
    GetSelectedIDcsv = m_strSelectedIDcsv
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> LedgerCode
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get GetRefTrLedgerCode() As String
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||5c2||fffd|LedgerCode|fffd||fffd||fffd|i|fffd|[
    GetRefTrLedgerCode = m_strRefTrLedgerCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Result|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:OK  False:CANCEL
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get Result() As Boolean
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd|i|fffd|[
    Result = m_blnBtnRet
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||3ca||fffd||fffd||fffd||fffd|WBSCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3ca||fffd||fffd||fffd||fffd|WBSCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||3ca||fffd||fffd||fffd||fffd|WBSCode
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get DestWBSCode() As String
    DestWBSCode = m_strDstWBSCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||3ca||fffd||fffd||fffd||fffd|AccountCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3ca||fffd||fffd||fffd||fffd|AccountCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||3ca||fffd||fffd||fffd||fffd|AccountCode
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get DestAcCode() As String
    DestAcCode = m_strDstAcCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||3ca||fffd||fffd||fffd||fffd|AccountName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3ca||fffd||fffd||fffd||fffd|AccountName|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||3ca||fffd||fffd||fffd||fffd|AccountCode
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get DestAcName() As String
    DestAcName = m_strDstAcName
End Property

Attribute VB_Name = "frmModifyContents"
Attribute VB_Base = "0{C2841433-92A6-46FE-ACF1-47505825CE08}{76A4C424-B5BC-411C-9467-F18B9ACFEE66}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/04 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_aryContentsID() As String     ''LedgerContentsID|fffd|z|fffd||fffd|
Private m_intPurpose As Integer         ''Purpose(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_strCurrency As String         ''Currency(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_datRefTrTargetMonth As Date   ''TargetMonth
Private m_lngRefTrSrcID As Long         ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|ID
Private m_strRefTrLedgerCode As String  ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|LedgerCode
Private m_blnBtnRet As Boolean          ''|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O  True:OK|fffd|{|fffd|^|fffd||fffd|  False|fffd|FCansel|fffd|{|fffd|^|fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/04 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/05 : Knowlbo Nakarai : Master|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd|C|fffd||fffd|
'   2002/12/06 : Knowlbo Nakarai : |fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|l|fffd||fffd||752||fffd|
'   2003/01/20 : Knowlbo Nakarai : |fffd|R|fffd||fffd||fffd|{|fffd||752||83c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()

    ''|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnBtnRet = False
    
    ''|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_intPurpose = 0
    m_strCurrency = ""
    m_lngRefTrSrcID = 0
    m_datRefTrTargetMonth = 0
    m_strRefTrLedgerCode = ""
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||24f||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/24 : Knowlbo Suzuki  : Year/Month |fffd||30f||fffd||fffd||fffd||fffd|l|fffd||752||fffd||3cd|X
'   2013/03/08 : |fffd|n|7c97|S|fffd|q        : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub s_SetUpForm()

    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intMonth As Integer         ''TargetMonth|fffd||30f||fffd||fffd||fffd||fffd|l
    Dim intDecisionYear As Integer
    ''<<<2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim intSYear As Integer
    Dim intEYear As Integer
    Dim intSMonth As Integer
    Dim intEMonth As Integer
    ''>>>2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||fffd|
    Me.Caption = c_strNAME_SYSTEM
    
    ''<<<2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    ' |fffd|N|fffd|x|fffd|z|fffd||fffd||30d||14f||fffd||fffd|N|fffd|x|fffd||30a||fffd||fffd||fffd|N|fffd|`|fffd||151||fffd|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    intSYear = Year(fg_GetStartOfYear(g_intAryYear(LBound(g_intAryYear))))
    intEYear = Year(fg_GetEndOfYear(g_intAryYear(UBound(g_intAryYear))))
    For intCount = intSYear To intEYear
        cboYear.AddItem CStr(intCount)
    Next
    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    cboYear.Value = Format$(CStr(Year(m_datRefTrTargetMonth)), "0000")
    
    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    ' |fffd||38f||6d4|N|fffd||fffd||fffd||30a||fffd||fffd||4c382||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||fffd|N|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    intSMonth = Month(fg_GetStartOfYear(fg_GetFiscalYear(m_datRefTrTargetMonth)))
    intEMonth = intSMonth + 11
    For intCount = intSMonth To intEMonth
        If (intCount > 12) Then
            cboMonth.AddItem Format$(intCount - 12, "00")
        Else
            cboMonth.AddItem Format$(intCount, "00")
        End If
    Next
    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    cboMonth.Value = Format$(CStr(Month(m_datRefTrTargetMonth)), "00")
    
'    If g_datImportMonth <> 0 Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
'        intDecisionYear = Year(g_datImportMonth)
'    Else
'        intDecisionYear = g_intTargetSysYear
'    End If
'
'    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
'    For intCount = 0 To UBound(g_intAryYear)
'        cboYear.AddItem CStr(g_intAryYear(intCount))
'    Next
'
'    ''|fffd||fffd|v|fffd|N|fffd|x|fffd||fffd||fffd||302|P|fffd|`|fffd|R|fffd||fffd||fffd||fffd||fffd|m|fffd||fffd||3c2||30f||a347||fffd||341|A|fffd|o|fffd|[|fffd|N|fffd||fffd||1c9||fffd|
'    If g_intAryYear(UBound(g_intAryYear)) < intDecisionYear Then
'        cboYear.AddItem CStr(intDecisionYear)
'    End If
'
'    ''Target Year|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
'    cboYear.Value = Format$(CStr(Year(m_datRefTrTargetMonth)), "0000")
'
'    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
'    For intCount = 4 To 15
'        If (intCount > 12) Then
'            cboMonth.AddItem Format$(intCount - 12, "00")
'        Else
'            cboMonth.AddItem Format$(intCount, "00")
'        End If
'    Next
'    ''Target Month|fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
'    cboMonth.Value = Format$(CStr(Month(m_datRefTrTargetMonth)), "00")
    ''>>>2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|

    ''Ledger|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|(|fffd||289||742||fffd|NK/JV|fffd||310||fffd||fffd||42802||fffd|)
    ''CASH BOOK
    If (g_blnCBNoArray = False) Then
        For intCount = LBound(g_typAryCBInfo) To UBound(g_typAryCBInfo)
            If (g_typAryCBInfo(intCount).m_strCurrency = m_strCurrency) And _
                    (g_typAryCBInfo(intCount).m_intPurpose = m_intPurpose) Then
                cboLedger.AddItem g_typAryCBInfo(intCount).m_strCode
            End If
        Next
    End If
    ''BANKBOOK
    If (g_blnBBNoArray = False) Then
        For intCount = LBound(g_typAryBBInfo) To UBound(g_typAryBBInfo)
            If (g_typAryBBInfo(intCount).m_strCurrency = m_strCurrency) And _
                    (g_typAryBBInfo(intCount).m_intPurpose = m_intPurpose) Then
                cboLedger.AddItem g_typAryBBInfo(intCount).m_strCode
            End If
        Next
    End If
    ''TRANSFER
    If (g_blnTRNoArray = False) Then
        For intCount = LBound(g_typAryTRInfo) To UBound(g_typAryTRInfo)
            If (g_typAryTRInfo(intCount).m_strCurrency = m_strCurrency) And _
                    (g_typAryTRInfo(intCount).m_intPurpose = m_intPurpose) Then
                cboLedger.AddItem g_typAryTRInfo(intCount).m_strCode
            End If
        Next
    End If
    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    cboLedger.ListIndex = 0
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||fffd|Ledger|fffd||fffd||fffd|e|fffd||303||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Ledger|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/04 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/18 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub cmdSearch_Click()
    Dim strList As String       ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim intCount As Integer     ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strHead As String       ''|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim datValue As Date
    Dim strLed As String
    Dim strDbTable As String
    Dim strMSG As String
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(cboYear.Value, "Target Year", 0) = True) Then
        cboYear.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(cboMonth.Value, "Target Month", 0) = True) Then
        cboMonth.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(cboLedger.Value, "Target Ledger", 0) = True) Then
        cboLedger.SetFocus
        Exit Sub
    End If
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ListLedger.Clear
    
    ''|fffd||38f||6cc||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    datValue = DateValue(cboYear.Value & "/" & cboMonth.Value & "/01")
    
    strLed = Left$(cboLedger.Value, 2)
    Select Case strLed
    Case "CB" ''CashBook
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''Book|fffd||fffd||fffd||5cf||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datValue)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(cboLedger.Value)
    strSQL = strSQL & " ORDER BY tb.ID"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    
    ''|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||fffd||752||fffd|
    strHead = "Date" & Space$(2) & "Description" & Space$(8) & "Details" & Space$(7)
    strHead = strHead & "Expense Burden" & Space$(2) & "AccountCode" & Space$(4)
    strHead = strHead & "AccountName" & Space$(8) & "ConnectionCode" & Space$(2)
    strHead = strHead & "ConnectionName" & Space$(2) & "LedgerLinkCode" & Space$(2)
    strHead = strHead & "Evi.No." & Space$(1) & "NK/JV" & Space$(1) & "Claim" & Space$(1)
    strHead = strHead & "Paid" & Space$(15) & "Received"
    If (adoRs.EOF = False) Then
        ListLedger.AddItem strHead
    End If

    intCount = 0
    Do Until adoRs.EOF
        ''Month / Date
        datValue = adoRs.Fields("LedgerDate").Value
        strList = fg_strUnity(Month(datValue) & "/" & Day(datValue), 5, 1) & "|"
        
        ''Description
        If (IsNull(adoRs.Fields("Description").Value) = True) Or (adoRs.Fields("Description").Value = "") Then
            strList = strList & fg_strUnity("", 18, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("Description").Value, 15, 0) & "|"
        End If
        ''Details
        If (IsNull(adoRs.Fields("Details").Value) = True) Or (adoRs.Fields("Details").Value = "") Then
            strList = strList & fg_strUnity("", 13, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("Details").Value, 10, 0) & "|"
        End If
        ''WBSCODE
        If (IsNull(adoRs.Fields("WBSCode").Value) = True) Then
            strList = strList & fg_strUnity("", 15, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("WBSCode").Value, 15, 1) & "|"
        End If
        ''ACCOUNT CODE
        If (IsNull(adoRs.Fields("AccountCode").Value) = True) Then
            strList = strList & fg_strUnity("", 14, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("AccountCode").Value, 14, 1) & "|"
        End If
        ''ACCOUNT NAME
        If (IsNull(adoRs.Fields("AccountName").Value) = True) Then
            strList = strList & fg_strUnity("", 18, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("AccountName").Value, 15, 0) & "|"
        End If
        ''CONNECTION CODE
        If (IsNull(adoRs.Fields("ConnectionCode").Value) = True) Or (adoRs.Fields("ConnectionCode").Value = "") Then
            strList = strList & fg_strUnity("", 15, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("ConnectionCode").Value, 15, 1) & "|"
        End If
        ''CONNECTION NAME
        If (IsNull(adoRs.Fields("ConnectionName").Value) = True) Or (adoRs.Fields("ConnectionName").Value = "") Then
            strList = strList & fg_strUnity("", 15, 0) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("ConnectionName").Value, 12, 0) & "|"
        End If
        ''LEDGER LINK CODE
        If (IsNull(adoRs.Fields("LedgerLinkCode").Value) = True) Or (adoRs.Fields("LedgerLinkCode").Value = "") Then
            strList = strList & fg_strUnity("", 15, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("LedgerLinkCode").Value, 15, 1) & "|"
        End If
        ''EVI.NO
        If (IsNull(adoRs.Fields("EviNo").Value) = True) Then
            strList = strList & fg_strUnity("", 7, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("EviNo").Value, 7, 1) & "|"
        End If
        ''NK/JV
        If (IsNull(adoRs.Fields("NKJV").Value) = True) Then
            strList = strList & fg_strUnity("", 5, 1) & "|"
        Else
            strList = strList & fg_strUnity(adoRs.Fields("NKJV").Value, 5, 1) & "|"
        End If
        ''CLAIM
        If (IsNull(adoRs.Fields("Claim").Value) = True) Then
            strList = strList & fg_strUnity("", 5, 1) & "|"
        Else
            If adoRs.Fields("Claim").Value = 1 Then
                strList = strList & Format$("Y", "!" & String(5, "@")) & "|"
            Else
                strList = strList & Format$("N", "!" & String(5, "@")) & "|"
            End If
        End If
        ''PAID
        If (IsNull(adoRs.Fields("Paid").Value) = True) Then
            strList = strList & fg_strUnity("", 18, 1) & "|"
        Else
            If (adoRs.Fields("Paid").Value = 0) Then
                strList = strList & fg_strUnity("", 18, 1) & "|"
            Else
                ''|fffd|J|fffd||fffd||fffd|}|fffd|\|fffd|L|fffd||255||3cd|X
                'strList = strList & fg_strUnity(adoRs.Fields("Paid").Value, 15, 1) & "|"
                strList = strList & fg_strUnityAmount(adoRs.Fields("Paid").Value, 18) & "|"
            End If
        End If
        ''RECEIVED
        If (IsNull(adoRs.Fields("Received").Value) = True) Then
            strList = strList & fg_strUnity("", 18, 1)
        Else
            If (adoRs.Fields("Received").Value = 0) Then
                strList = strList & fg_strUnity("", 18, 1) & "|"
            Else
                ''|fffd|J|fffd||fffd||fffd|}|fffd|\|fffd|L|fffd||255||3cd|X
                'strList = strList & fg_strUnity(adoRs.Fields("Received").Value, 15, 1) & "|"
                strList = strList & fg_strUnityAmount(adoRs.Fields("Received").Value, 18) & "|"
            End If
        End If
        ''|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Add
        ListLedger.AddItem strList

        ''|fffd|e|fffd|R|fffd||fffd||fffd|e|fffd||fffd||fffd|c|fffd||fffd|ID|fffd||fffd|z|fffd||fffd||24a|i|fffd|[
        ReDim Preserve m_aryContentsID(intCount)
        m_aryContentsID(intCount) = adoRs.Fields("ID").Value

        adoRs.MoveNext
        intCount = intCount + 1
    Loop
    
    
    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    If (ListLedger.ListCount = 0) Then
        cmdOK.Enabled = False
    Else
        cmdOK.Enabled = True
    End If
    
    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||fffd|s|fffd||fffd||752||fffd|
    If (cmdOK.Enabled = True) Then
        ListLedger.ListIndex = 1
    End If
    
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "cmdSearchclick:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "cmdSearchclick", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger|fffd||fffd||fffd|e|fffd||315||3d0||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Ledger|fffd||fffd||fffd|e|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/05 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/06 : Knowlbo Nakarai : |fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub cmdOK_Click()

    If (ListLedger.ListIndex = 0) Then
        MsgBox c_strMSGTr_NOSELECT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        ListLedger.ListIndex = 1
        Exit Sub
    End If
    
    ''|fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_lngRefTrSrcID = m_aryContentsID(ListLedger.ListIndex - 1)
    m_datRefTrTargetMonth = cboYear.Value & "/" & cboMonth.Value & "/01"
    m_strRefTrLedgerCode = cboLedger.Value
    
    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True(OK|fffd|{|fffd|^|fffd||fffd|)|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||fffd||fffd||fffd|
    m_blnBtnRet = True
    Me.Hide

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||242||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/05 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdQuit_Click()

    ''|fffd||502||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312|l|fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    m_lngRefTrSrcID = 0
    m_datRefTrTargetMonth = 0
    m_strRefTrLedgerCode = ""

    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False(Cancel|fffd|{|fffd|^|fffd||fffd|)|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||fffd||fffd||fffd|
    m_blnBtnRet = False
    Me.Hide
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger|fffd||fffd||fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub s_CloseForm()
    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    Erase m_aryContentsID
    m_blnBtnRet = True
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Currency|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Currency|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmCurrency(ByVal strValue As String)
    ''Currency|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_strCurrency = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:NK main use  1:JV main use
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmPurpose(ByVal intValue As Integer)
    ''Purpose|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_intPurpose = intValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TargetMonth|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> TargetMonth
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TargetMonth|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmRefTrTargetMonth(ByVal datValue As Date)
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|TargetMonth|fffd||fffd||fffd|i|fffd|[
    m_datRefTrTargetMonth = datValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> ID
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ID|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get GetRefTrSrcID() As Long
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|ID|fffd||fffd||fffd|i|fffd|[
    GetRefTrSrcID = m_lngRefTrSrcID
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TargetMonth|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> TargetMonth
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TargetMonth|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get GetRefTrTargetMonth() As Date
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|TargetMonth|fffd||fffd||fffd|i|fffd|[
    GetRefTrTargetMonth = m_datRefTrTargetMonth
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> LedgerCode
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get GetRefTrLedgerCode() As String
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||5c2||fffd|LedgerCode|fffd||fffd||fffd|i|fffd|[
    GetRefTrLedgerCode = m_strRefTrLedgerCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Result|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:OK  False:CANCEL
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get Result() As Boolean
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd|i|fffd|[
    Result = m_blnBtnRet
End Property

Attribute VB_Name = "frmOfficeEdit"
Attribute VB_Base = "0{A94BD86C-A98F-4D0F-AA58-E717502857AC}{E44CC24A-0733-41F2-8336-BD749303E4A9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_strOfficeCode As String  ''OfficeCode
Private m_strOfficeName As String  ''OfficeName
Private m_strCountryCode As String  ''CountryCode
Private m_strCountryName As String  ''CountryName
Private m_blnBtnRet As Boolean          ''|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O  True:OK|fffd|{|fffd|^|fffd||fffd|  False|fffd|FCansel|fffd|{|fffd|^|fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()
    Me.Caption = c_strNAME_SYSTEM
    m_blnBtnRet = False
    m_strOfficeCode = ""
    m_strOfficeName = ""
    m_strCountryCode = ""
    m_strCountryName = ""
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||24f||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub s_SetUpForm()

    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intMonth As Integer         ''TargetMonth|fffd||30f||fffd||fffd||fffd||fffd|l
    Dim intDecisionYear As Integer
    txtOfCode.Text = m_strOfficeCode
    txtOfName.Text = m_strOfficeName
    
    If m_strCountryCode <> "" Then
        cboCntryCode.Text = m_strCountryCode
''        cboCntryName.Text = m_strCountryName
    End If

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub s_CloseForm()
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||48f|W|fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||242||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||48f|W|fffd|L|fffd||fffd||fffd||341|A|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||154||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/06 : Knowlbo Suzuki : BranchOfficeNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub btnEditOK_Click()
    Dim strCode As String
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtOfCode.Value, "OfficeCode", 0, 7) = True) Then
        txtOfCode.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtOfName.Value, "OfficeName", 0, 64) = True) Then
        txtOfName.SetFocus
        Exit Sub
    End If
    
    strCode = UCase$(txtOfCode.Value)
    txtOfCode.Value = strCode
        
    If Len(txtOfCode.Value) <> 7 Then
        MsgBox c_strMSG_LENGTHOFFICECODE, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        txtOfCode.SetFocus
        Exit Sub
    End If
    
    If (fg_InputCheck(txtOfName.Value, "OfficeName", 0) = True) Then
        txtOfName.SetFocus
        Exit Sub
    End If
    If cboCntryCode.Value = "" Then
        MsgBox c_strMSGCmn_REQUESTINPUT & "Country", vbOKOnly + vbCritical, c_strNAME_SYSTEM
        cboCntryCode.SetFocus
        Exit Sub
    End If
    
    If Mid$(txtOfCode.Value, 3, 2) <> cboCntryCode.Value Then
        MsgBox c_strMSGCmn_REQUESTINPUT & "OfficeCode (Not Match CountryCode)", vbOKOnly + vbCritical, c_strNAME_SYSTEM
        txtOfCode.SetFocus
        Exit Sub
    End If
    
    m_strOfficeCode = txtOfCode.Value
    m_strOfficeName = txtOfName.Value
    m_strCountryCode = cboCntryCode.Value
    m_strCountryName = cboCntryName.Value
    
    m_blnBtnRet = True
    Me.Hide

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||242||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||48f|W|fffd|L|fffd||fffd||fffd||341|A|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||154||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnEditCancel_Click()
    m_blnBtnRet = False
    Me.Hide
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||389||fffd||fffd||fffd||fffd||9351||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboCntryCode_Change()
    cboCntryName.ListIndex = cboCntryCode.ListIndex
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||389||fffd||fffd||fffd||fffd||9351||fffd|R|fffd|[|fffd|h|fffd|R|fffd||fffd||fffd|{|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cboCntryName_Change()
    cboCntryCode.ListIndex = cboCntryName.ListIndex
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Result|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|Q|fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:OK  False:CANCEL
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get Result() As Boolean
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd|i|fffd|[
    Result = m_blnBtnRet
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OfficeCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeCode|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let OfficeCode(ByVal strValue As String)
    m_strOfficeCode = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OfficeCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> OfficeCode
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get OfficeCode() As String
    OfficeCode = m_strOfficeCode
End Property
    
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OfficeName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeName|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let OfficeName(ByVal strValue As String)
    m_strOfficeName = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OfficeName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> OfficeName
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get OfficeName() As String
    OfficeName = m_strOfficeName
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CountryCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CountryCode|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let CountryCode(ByVal strValue As String)
    m_strCountryCode = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CountryCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CountryCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> CountryCode
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get CountryCode() As String
    CountryCode = m_strCountryCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CountryName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CountryName|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let CountryName(ByVal strValue As String)
    m_strCountryName = strValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CountryName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CountryName|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> CountryName
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get CountryName() As String
    CountryName = m_strCountryName
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|~|fffd|{|fffd|^|fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|~|fffd|{|fffd|^|fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
   If CloseMode <> vbFormCode Then Cancel = 1
End Sub

Attribute VB_Name = "frmOfficeMaster"
Attribute VB_Base = "0{F21D511E-92B1-42B4-8087-1F61C11C8CC7}{703D85DD-8E5C-40E0-B432-5EC5F1751E87}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Office Master|fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------

Private m_typAryOfficeData() As m_clsOfficeInfo     ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||48f|W|fffd|z|fffd||fffd|
Private m_frmOfEdit As frmOfficeEdit                ''Office|fffd||fffd||fffd||48f|W|fffd|T|fffd|u|fffd|t|fffd|H|fffd|[|fffd||fffd|
Private m_blnModfy As Boolean                       ''|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O
Private m_blnDBUpdate As Boolean                    ''|fffd|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O

Private Type m_clsOfficeInfo
    m_strOfficeCodeSv As String
    m_strOfficeCode As String
    m_strOfficeName As String
    m_strCountry As String
    m_strCountryName As String
    m_intBranchOfficeNo As Integer
    m_blnEdit As Boolean
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd||fffd||fffd|O|fffd|E|fffd|e|fffd|y|fffd|[|fffd|W|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/06 : Knowlbo Suzuki : BranchOfficeNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()
    Dim intIx As Integer
    Dim strLstValue As String
    Dim strCName As String
    Dim strOName As String

    ''Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Set m_frmOfEdit = New frmOfficeEdit

    Me.Caption = c_strNAME_SYSTEM
    
    m_blnModfy = False
    m_blnDBUpdate = False
    
    
    setCountryCombo ''Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|

    For intIx = 0 To UBound(g_typAryOfficeInfo)
        ReDim Preserve m_typAryOfficeData(intIx)
        
        m_typAryOfficeData(intIx).m_strOfficeCode = g_typAryOfficeInfo(intIx).m_strOfficeCode
        m_typAryOfficeData(intIx).m_strOfficeCodeSv = g_typAryOfficeInfo(intIx).m_strOfficeCode
        m_typAryOfficeData(intIx).m_strOfficeName = g_typAryOfficeInfo(intIx).m_strOfficeName
        m_typAryOfficeData(intIx).m_strCountry = g_typAryOfficeInfo(intIx).m_strCountry
        m_typAryOfficeData(intIx).m_strCountryName = g_typAryOfficeInfo(intIx).m_strCountryName
        m_typAryOfficeData(intIx).m_intBranchOfficeNo = g_typAryOfficeInfo(intIx).m_intBranchOfficeNo
        m_typAryOfficeData(intIx).m_blnEdit = False
                
        strOName = fg_strUnity(m_typAryOfficeData(intIx).m_strOfficeName, 20, 0)
        strCName = fg_strUnity(m_typAryOfficeData(intIx).m_strCountryName, 15, 0)
        strLstValue = m_typAryOfficeData(intIx).m_strOfficeCode & Space$(2) & _
                        strOName & Space$(2) & m_typAryOfficeData(intIx).m_strCountry & _
                        Space$(2) & strCName
        LstOffice.AddItem strLstValue
    Next
    LstOffice.ListIndex = 0

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|[|fffd|^|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||303|f|fffd|[|fffd|^|fffd||752||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub setCountryCombo()
    ''DB|fffd||691||fffd||fffd|p
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngCount As Long
    Dim strMSG As String
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If


On Error GoTo LBL_ERR

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_CountryMaster & " tb"
    strSQL = strSQL & " WHERE " & "tb.CashAcCode IS NOT NULL"
    strSQL = strSQL & " ORDER BY tb.CountryCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CountryMaster
        GoTo LBL_ERR
    End If
    Do Until adoRs.EOF
        m_frmOfEdit.cboCntryCode.AddItem adoRs.Fields("CountryCode").Value
        m_frmOfEdit.cboCntryName.AddItem adoRs.Fields("EnglishName").Value
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    
    m_frmOfEdit.cboCntryCode.ListIndex = 0
    m_frmOfEdit.cboCntryName.ListIndex = 0

    On Error GoTo 0

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "frmOfficeMaster setCountryCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "setCountryCombo", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd|A|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnDecide_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim intIx As Integer
    Dim strMSG As String
    Dim strValue As String
    Dim datPrNow As Date
    
    datPrNow = Now()
     
    If m_blnModfy Then
        If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
            Exit Sub
        End If
    Else
        MsgBox c_strMSG_NOEDIT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        Exit Sub
    End If
    
    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_OfficeMaster
''    strSQL = strSQL & " ORDER BY OfficeCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_OfficeMaster
        GoTo LBL_ERR
    End If
    
    For intIx = 0 To UBound(m_typAryOfficeData)
        If m_typAryOfficeData(intIx).m_blnEdit Then ''|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            adoRs.Filter = adFilterNone

            If m_typAryOfficeData(intIx).m_strOfficeCodeSv <> "" Then
                ''|fffd|X|fffd|V
                adoRs.Filter = "OfficeCode=" & fg_AddSingleQuotation(m_typAryOfficeData(intIx).m_strOfficeCodeSv)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setOfficeMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_OfficeMasterHst
                        GoTo LBL_ERR
                    End If
                Else
                    strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_OfficeMasterHst
                    GoTo LBL_ERR
                End If
            Else
                adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
            End If
            adoRs.Fields("OfficeCode").Value = m_typAryOfficeData(intIx).m_strOfficeCode
            adoRs.Fields("OfficeName").Value = m_typAryOfficeData(intIx).m_strOfficeName
            adoRs.Fields("Country").Value = m_typAryOfficeData(intIx).m_strCountry
            If Left$(m_typAryOfficeData(intIx).m_strOfficeCode, 2) = c_strBranchOfficeTag Then
                adoRs.Fields("BranchOfficeNo").Value = CStr(m_typAryOfficeData(intIx).m_intBranchOfficeNo)
            End If
            adoRs.Fields("InsertDate").Value = datPrNow
            adoRs.Fields("InsertUID").Value = g_strLoginId
            adoRs.Update
            adoRs.MoveFirst
        End If
    Next
    Call objdba.closeRecordset(adoRs)
    
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    m_blnDBUpdate = True
    m_blnModfy = False
    
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    Me.Hide
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    Call g_objLog.PrintOut(ID_NKFAS_SS, "frmOffice Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnCancel_Click()
    
    ''|fffd||3cd|X|fffd|E|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd|A|fffd||202||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
    If m_blnModfy Then
        If MsgBox(c_strQUESTION_SAVE, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbCancel Then
            Exit Sub
        End If
    End If
    
    Me.Hide

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(EDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnEdit_Click()
    While Not f_ShowEditForm(True)
    Wend
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(ADDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnAdd_Click()
    While Not f_ShowEditForm(False)
    Wend
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/06 : Knowlbo Suzuki : BranchOfficeNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_ShowEditForm( _
    ByRef blnEdit As Boolean _
) As Boolean

    Dim intlstIx As Integer
    Dim intIx As Integer
    Dim strOfCode As String
    Dim strLstValue As String
    Dim strCName As String
    Dim strOName As String
    Dim intBranchMax As Integer
    Dim intBranchNo As Integer
    Dim blnFind As Boolean
    
    intBranchMax = 0
    intBranchNo = 0
    blnFind = False
    
    f_ShowEditForm = True
    intlstIx = LstOffice.ListIndex
    
    If blnEdit Then
        If (LstOffice.ListCount = 0) Then Exit Function
        m_frmOfEdit.OfficeCode = m_typAryOfficeData(intlstIx).m_strOfficeCode
        m_frmOfEdit.OfficeName = m_typAryOfficeData(intlstIx).m_strOfficeName
        m_frmOfEdit.CountryCode = m_typAryOfficeData(intlstIx).m_strCountry
    Else
        m_frmOfEdit.OfficeCode = ""
        m_frmOfEdit.OfficeName = ""
    End If

    m_frmOfEdit.s_SetUpForm
    m_frmOfEdit.Show  ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|ID,TargetMonth,LedgerCode|fffd||fffd||fffd||64fe|
    If (m_frmOfEdit.Result <> True) Then
        Exit Function
    End If
    
    strOfCode = m_frmOfEdit.OfficeCode

    For intIx = 0 To UBound(m_typAryOfficeData)
        If strOfCode = m_typAryOfficeData(intIx).m_strOfficeCode Then
            intBranchNo = m_typAryOfficeData(intIx).m_intBranchOfficeNo
            blnFind = True
        End If
        
        ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||309|c|fffd||18e||fffd||fffd||fffd||fffd||fffd||fffd||151||5414||fffd|`|fffd|F|fffd|b|fffd|N
        If Left$(strOfCode, 4) = Left$(m_typAryOfficeData(intIx).m_strOfficeCode, 4) Then
            If m_typAryOfficeData(intIx).m_intBranchOfficeNo > intBranchMax Then
                intBranchMax = m_typAryOfficeData(intIx).m_intBranchOfficeNo
            End If
        End If
    Next

    ''Branch-Office
    If Left$(strOfCode, 2) = c_strBranchOfficeTag Then
        If blnFind <> True Then intBranchNo = intBranchMax + 1

        If intBranchNo > 5 Then
            ''BranchOffice|fffd||308||a351||fffd||fffd||fffd||fffd||342|T|fffd||702||fffd|
            MsgBox c_strMSGCmn_BrOfficeMax, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            f_ShowEditForm = False
            Exit Function
        End If
    End If
    If blnEdit <> True Then
        If blnFind Then
            MsgBox c_strMSGTr_EXISTDATA, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            f_ShowEditForm = False
            Exit Function
        End If
        intlstIx = UBound(m_typAryOfficeData) + 1
        ReDim Preserve m_typAryOfficeData(intlstIx)
    End If

    m_typAryOfficeData(intlstIx).m_strOfficeCode = m_frmOfEdit.OfficeCode
    m_typAryOfficeData(intlstIx).m_strOfficeName = m_frmOfEdit.OfficeName
    m_typAryOfficeData(intlstIx).m_strCountry = m_frmOfEdit.CountryCode
    m_typAryOfficeData(intlstIx).m_strCountryName = m_frmOfEdit.CountryName
    m_typAryOfficeData(intlstIx).m_intBranchOfficeNo = intBranchNo
    m_typAryOfficeData(intlstIx).m_blnEdit = True
    
    LstOffice.Clear
    For intIx = 0 To UBound(m_typAryOfficeData)
        strOName = fg_strUnity(m_typAryOfficeData(intIx).m_strOfficeName, 20, 0)
        strCName = fg_strUnity(m_typAryOfficeData(intIx).m_strCountryName, 15, 0)
        strLstValue = m_typAryOfficeData(intIx).m_strOfficeCode & Space$(2) & _
                        strOName & Space$(2) & m_typAryOfficeData(intIx).m_strCountry & _
                        Space$(2) & strCName
        LstOffice.AddItem strLstValue
    Next
    LstOffice.ListIndex = intlstIx
    m_blnModfy = True ''|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||752||fffd|

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Form_Terminate()
    
    Erase m_typAryOfficeData
    
    m_frmOfEdit.s_CloseForm
    Set m_frmOfEdit = Nothing
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Office|fffd|}|fffd|X|fffd|^|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub s_CloseForm()
    Form_Terminate
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Result|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|Q|fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd|X|fffd|V|fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd|X|fffd|V|fffd||fffd||fffd||fffd|  False:|fffd|X|fffd|V|fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get Result() As Boolean
    ''DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|i|fffd|[
    Result = m_blnDBUpdate
End Property

Attribute VB_Name = "frmSCEdit"
Attribute VB_Base = "0{6F3AF241-C856-4834-81C8-996934EA151C}{E5F5DA37-8EFC-439E-A97D-A41D0700169F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O
'  |fffd||c42c||fffd||fffd|
'    Knowlbo Nakarai
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/10/3|fffd|FKnowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Sub-Contractor|fffd||48f|W|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||702||fffd||fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||702||fffd||fffd|B
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/7|fffd|FKnowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnSCEditCancel_Click()
    Unload Me
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Sub-Contractor|fffd||fffd||fffd||315||3cd|X|fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||702||fffd||fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    (1)|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|Sub-Contractor|fffd||314|z|fffd||fffd||253||fffd||fffd||fffd||fffd|B
'    (2)|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||308||a554||fffd||fffd|Main|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|B
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/3 |fffd|FKnowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2002/10/7 |fffd|FKnowlbo Nakarai|fffd|F|fffd|{|fffd|^|fffd||fffd||fffd||242||fffd||956a||fffd||8f217||fffd||fffd||fffd||1c9||fffd|
'                                    |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||109cc||fffd||fffd||fffd||fffd||93c8||fffd||fffd||fffd||fffd||1c9||fffd|
'                                 |fffd|@ OK|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||1c9||fffd|
'   2002/10/9 |fffd|FKnowlbo Nakarai|fffd|F|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2002/12/20|fffd|Fknowlbo Nakarai|fffd|FRemibursable|fffd|R|fffd||fffd||fffd|{|fffd||1c9||fffd|
'   2002/12/26|fffd|FKnowlbo Nakarai|fffd|F|fffd||fffd||fffd|X|fffd|g|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||83c8||fffd||fffd||fffd||fffd||1c9||fffd|
'   2002/1/3  |fffd|FKnowlbo Nakarai|fffd|FUpdateDate|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/1/6  |fffd|FKnowlbo Nakarai|fffd|FSubConCode|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||d3dc|
'   2002/1/15 |fffd|FKnowlbo Nakarai|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a3c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub btnSCEditOK_Click()

    Dim strSCInfo As String     ''|fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||fffd|CashBook|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim strName As String       ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Sub-Contractor|fffd||fffd|Name
    Dim strReimbur As String    ''Reimbursable|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strMSG As String        ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||142||303|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    
    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtSCName.Value, "Name Of Sub-Contractor", 0, 64) = True) Then
        txtSCName.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtSCCont.Value, "Contract Amount", 1) = True) Then
        txtSCCont.Value = ""
        txtSCCont.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtSCAdvance.Value, "Contract Advance", 1) = True) Then
        txtSCAdvance.Value = ""
        txtSCAdvance.SetFocus
        Exit Sub
    End If
    
    ''|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
    If (checkData(strMSG) = True) Then
        If (g_blnBtnAdd = False) Then   ''Edit|fffd||30f||a347|
            g_blnSCBtnOk = True
        End If
    ElseIf (checkData(strMSG) = False) Then
        MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Sub
    End If
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
    ''ADD|fffd||30f||a347||fffd||fffd||fffd|AEDIT|fffd||155||3cd|X|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||a347|(|fffd||fffd||fffd||30e||fffd||fffd|_|fffd||fffd| g_blnSCBtnOk = True )
    If (g_blnBtnAdd = True) Or (g_blnSCBtnOk = True) Then
        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||341|A|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||fffd|
        If (g_blnBtnAdd = True) Then
            ReDim Preserve g_typArySConInfoEdit(g_intSCItemIndex)
        End If
        g_typArySConInfoEdit(g_intSCItemIndex).m_strCode = lblSCCode.Caption
        g_typArySConInfoEdit(g_intSCItemIndex).m_strName = txtSCName.Value
        g_typArySConInfoEdit(g_intSCItemIndex).m_curContract = txtSCCont.Value
        g_typArySConInfoEdit(g_intSCItemIndex).m_curAdvance = txtSCAdvance.Value
        g_typArySConInfoEdit(g_intSCItemIndex).m_strCurrency = cboSCCur.Value
        g_typArySConInfoEdit(g_intSCItemIndex).m_intReimbursable = cboReimbursable.ListIndex
        g_typArySConInfoEdit(g_intSCItemIndex).m_blnDirty = True
        
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||602||fffd||242||fffd||fffd||103||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
        ''Name|fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||fffd|
        strName = fg_strUnity(g_typArySConInfoEdit(g_intSCItemIndex).m_strName, 13, 0)
        ''Reimbursable|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
        If (g_typArySConInfoEdit(g_intSCItemIndex).m_intReimbursable = 0) Then
            strReimbur = c_strSbCReimbursable
        Else
            strReimbur = c_strSbCNonReimbursable
        End If
        ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
        strSCInfo = g_typArySConInfoEdit(g_intSCItemIndex).m_strCode & Space$(2) & _
                        strName & Space$(2) & strReimbur & Space$(1) & String(3, ".")
        If (g_blnBtnAdd = True) Then        ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.SCList.AddItem (strSCInfo)
        ElseIf (g_blnBtnAdd = False) Then   ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            frmSetting_Main.SCList.List(g_intSCItemIndex) = strSCInfo
        End If
    End If
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    frmSetting_Main.SCList.ListIndex = 0

    ''OK|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd|A|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||82||fffd||fffd||fffd|
    If (g_blnBtnAdd = True) Then
        g_blnSCBtnOk = True
    End If
    frmSetting_Main.btnSCEdit.Enabled = True
    Unload Me
    
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd|yString|fffd|^|fffd|z |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd|o|fffd|^|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd|yString|fffd|^|fffd|z |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/1/29 |fffd|FKnowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function checkData(strMSG As String) As Boolean

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    
    ''|fffd||48f|W|fffd|`|fffd|F|fffd|b|fffd|N(Edit|fffd||30f||a347|)
    If (g_blnBtnAdd = False) Then
        If (g_typArySConInfoEdit(g_intSCItemIndex).m_strName = txtSCName.Value) And _
            (g_typArySConInfoEdit(g_intSCItemIndex).m_curContract = txtSCCont.Value) And _
            (g_typArySConInfoEdit(g_intSCItemIndex).m_curAdvance = txtSCAdvance.Value) And _
            (g_typArySConInfoEdit(g_intSCItemIndex).m_strCurrency = cboSCCur.Value) And _
            (g_typArySConInfoEdit(g_intSCItemIndex).m_intReimbursable = cboReimbursable.ListIndex) Then
            
            strMSG = c_strMSG_NOEDIT
            checkData = False
            Exit Function
        End If
    End If
    ''|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
    If (frmSetting_Main.SCList.ListCount > 0) Then
        For intCount = LBound(g_typArySConInfoEdit) To UBound(g_typArySConInfoEdit)
            If (g_typArySConInfoEdit(intCount).m_strName = txtSCName.Value) Then
                If (g_blnBtnAdd = False) And (frmSetting_Main.SCList.ListIndex = intCount) Then
                    Exit For
                End If
                strMSG = c_strMSGTr_EXISTDATA
                checkData = False
                Exit Function
            End If
        Next
    End If
    
    checkData = True
    
End Function


Attribute VB_Name = "frmSelectLinkCode"
Attribute VB_Base = "0{5DB8D4E5-12A9-4CDA-88BC-0B55992F02B9}{2776600B-D94F-4EA5-B81F-C5F0CB8DA3A7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| LedgerLinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/19 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

Private m_blnGetData As Boolean         ''|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|t|fffd||fffd||fffd|O
Private m_blnBottomRet As Boolean       ''|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O  True:OK|fffd|{|fffd|^|fffd||fffd|  False|fffd|FCansel|fffd|{|fffd|^|fffd||fffd|
Private m_enmLedgerType As GLNK_CODE    ''LedgerType(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_strCurrency As String         ''|fffd||289||fffd|(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_intCondition As Integer       ''Condition(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_intPurpose As Integer         ''Purpose(|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||250||752||fffd|)
Private m_strSelectLCode As String      ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LedgerLinkCode

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd||fffd||fffd|O|fffd|E|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/17 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()
    ''|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnBottomRet = False
    ''|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_strSelectLCode = ""
    m_intPurpose = -1   ''Prepaid|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||202||fffd|
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerLinkCode|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LedgerLinkCode|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/19 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/20 : knowlbo Nakarai : |fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd|I|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/17 : knowlbo Nakarai : Unload|fffd||fffd||fffd||fffd||fffd||30f|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub cmdOK_Click()

    Dim objSheet As Worksheet
    Dim strSelectLinkCode As String
    
    ''|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||311||38f||fffd|
    If (listLinkCode.ListIndex = 0) Then
        MsgBox c_strMSGTr_NOSELECT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        If (m_blnGetData = True) Then
            listLinkCode.ListIndex = 1
        End If
        Exit Sub
    End If
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LINKCODE|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    strSelectLinkCode = Left$(listLinkCode.Value, 14)
    
    ''SHEET|fffd||fffd||fffd||253||fffd||fffd||fffd|LINKCODE|fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||fffd|CHECK
    'Set objSheet = ThisWorkbook.Sheets(g_strArywsName(GLED_CB))
    Set objSheet = ThisWorkbook.ActiveSheet
    If (fg_CheckSameLinkPayment(objSheet, strSelectLinkCode) = True) Then
        ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
        MsgBox c_strMSG_SAMEPAYLINKCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        m_blnBottomRet = False
        Me.Hide
        Exit Sub
    End If

    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|LedgerLinkCode|fffd||fffd||602||fffd|o|fffd||fffd||fffd|A|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_strSelectLCode = strSelectLinkCode
    
    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True(OK|fffd|{|fffd|^|fffd||fffd|)|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||fffd||fffd||fffd|
    m_blnBottomRet = True
    Me.Hide
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerLinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||242||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/19 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/17 : knowlbo Nakarai : Unload|fffd||fffd||fffd||fffd||fffd||30f|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub cmdQuit_Click()

    ''LedgeLinkCode|fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    m_strSelectLCode = ""

    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False(Cancel|fffd|{|fffd|^|fffd||fffd|)|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|HIDE|fffd||fffd||fffd||fffd|
    m_blnBottomRet = False
    Me.Hide
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerLinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerLinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||24f||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/16 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/23 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Sub setUpForm()

    Dim strList As String       ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    
    ''DB|fffd||691||fffd||fffd|p
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    Me.Caption = c_strNAME_SYSTEM           ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||fffd|
    
    m_blnGetData = False                    ''|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    
    ''LedgerType,|fffd||289||742||fffd||fffd||c2f82||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If (m_enmLedgerType = Null) Or (m_strCurrency = "") Then Exit Sub
    
    strSQL = createSQL(m_enmLedgerType)     ''SQL|fffd||fffd||fffd||c42c|
    
    ''DB|fffd||691||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & "frmSelectLinkcode"
        GoTo LBL_ERR
    End If
    
    ''Ledger|fffd||30e||fffd||782||242||fffd||fffd||fffd||fffd|TITLE|fffd|E|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd|E|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    Select Case m_enmLedgerType
        Case GLNK_IV
            ''TITLE,|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||752||fffd|
            setCaption (GLNK_IV)
            ''|fffd||fffd||fffd|X|fffd|g|fffd||752||fffd|
            If (adoRs.EOF = False) Then
                Do Until adoRs.EOF
                    ''|fffd||289||fffd|,Status|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If (checkData(adoRs.Fields("Currency").Value, adoRs.Fields("Status").Value) = True) Then
                        '|fffd|yLedgerLinkCode|fffd|z
                        strList = adoRs.Fields("LedgerLinkCode").Value & Space$(1) & "|"
                        '|fffd|yInvoiceNo|fffd|z
                        If (IsNull(adoRs.Fields("InvoiceNo").Value) = True) Then
                            strList = strList & Space$(2) & fg_strUnity("", 5, 1) & Space$(2) & "|"
                        Else
                            strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("InvoiceNo").Value, 5, 1) & Space$(2) & "|"
                        End If
                        '|fffd|yDescription|fffd|z
                        If (IsNull(adoRs.Fields("Description").Value) = True) Then
                            strList = strList & Space$(2) & fg_strUnity("", 8, 1) & Space$(2) & "|"
                        Else
                            strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("Description").Value, 8, 1) & Space$(2) & "|"
                        End If
                        '|fffd|yStatus|fffd|z
                        If (IsNull(adoRs.Fields("Status").Value) = True) Then
                            strList = strList & Space$(1) & fg_strUnity("", 8, 1) & Space$(1) & "|"
                        Else
                            strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("Status").Value, 8, 1) & Space$(1) & "|"
                        End If
                        '|fffd|yPaymentAmount|fffd|z
                        If (IsNull(adoRs.Fields("PaymentAmount").Value) = False) Then
                            'strList = strList & Space$(1) & adoRs.Fields("PaymentAmount").Value
                            strList = strList & Space$(1) & fg_strUnityAmount(adoRs.Fields("PaymentAmount").Value, 18)
                        End If
                        ''|fffd||fffd||fffd|X|fffd|g|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
                        listLinkCode.AddItem strList
                        m_blnGetData = True
                    End If
                    adoRs.MoveNext
                Loop
            End If
        Case GLNK_AS
            ''TITLE,|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||752||fffd|
            setCaption (GLNK_AS)
            ''|fffd||fffd||fffd|X|fffd|g|fffd||752||fffd|
            If (adoRs.EOF = False) Then
                Do Until adoRs.EOF
                    ''|fffd||289||fffd|,Status|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If (checkData(adoRs.Fields("Currency").Value, adoRs.Fields("Status").Value) = True) Then
                        '|fffd|yLedgerLinkCode|fffd|z
                        strList = adoRs.Fields("LedgerLinkCode").Value & Space$(1) & "|"
                        '|fffd|yAssociateCode|fffd|z
                        strList = strList & Space$(1) & adoRs.Fields("AssociateCode").Value & Space$(2) & "|"
                        '|fffd|yAssociateName|fffd|z
                        strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("AssociateName").Value, 20, 1) & Space$(1) & "|"
                        '|fffd|yInvRefNo|fffd|z
                        If (IsNull(adoRs.Fields("InvRefNo").Value) = True) Then
                            'strList = strList & Space$(2) & fg_strUnity("", 3, 1) & Space$(3) & "|"
                            strList = strList & Space$(1) & fg_strUnity("", 5, 1) & Space$(2) & "|"
                        Else
                            'strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("InvRefNo").Value, 3, 1) & Space$(3) & "|"
                            strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("InvRefNo").Value, 5, 1) & Space$(2) & "|"
                        End If
                        '|fffd|yDescription|fffd|z
                        If (IsNull(adoRs.Fields("Description").Value) = True) Then
                            strList = strList & Space$(2) & fg_strUnity("", 8, 1) & Space$(2) & "|"
                        Else
                            strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("Description").Value, 8, 1) & Space$(2) & "|"
                        End If
                        '|fffd|yStatus|fffd|z
                        If (IsNull(adoRs.Fields("Status").Value) = True) Then
                            strList = strList & Space$(1) & fg_strUnity("", 8, 1) & Space$(1) & "|"
                        Else
                            strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("Status").Value, 8, 1) & Space$(1) & "|"
                        End If
                        '|fffd|yPaymentAmount|fffd|z
                        If (IsNull(adoRs.Fields("PaymentAmount").Value) = False) Then
                            'strList = strList & Space$(1) & adoRs.Fields("PaymentAmount").Value
                            strList = strList & Space$(1) & fg_strUnityAmount(adoRs.Fields("PaymentAmount").Value, 18)
                        End If
                        ''|fffd||fffd||fffd|X|fffd|g|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
                        listLinkCode.AddItem strList
                        m_blnGetData = True
                    End If
                    adoRs.MoveNext
                Loop
            End If
        Case GLNK_SC
            ''TITLE,|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||752||fffd|
            setCaption (GLNK_SC)
            ''|fffd||fffd||fffd|X|fffd|g|fffd||752||fffd|
            If (adoRs.EOF = False) Then
                Do Until adoRs.EOF
                    ''|fffd||289||fffd|,Status|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If (checkData(adoRs.Fields("Currency").Value, adoRs.Fields("Status").Value) = True) Then
                        '|fffd|yLedgerLinkCode|fffd|z
                        strList = adoRs.Fields("LedgerLinkCode").Value & Space$(1) & "|"
                        '|fffd|ySubContractCode|fffd|z
                        strList = strList & Space$(2) & adoRs.Fields("SubConCode").Value & Space$(3) & "|"
                        '|fffd|ySubContractName|fffd|z
                        strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("SubConName").Value, 20, 1) & Space$(1) & "|"
                        '|fffd|yInvRefNo|fffd|z
                        If (IsNull(adoRs.Fields("InvRefNo").Value) = True) Then
                            'strList = strList & Space$(2) & fg_strUnity("", 3, 1) & Space$(3) & "|"
                            strList = strList & Space$(1) & fg_strUnity("", 5, 1) & Space$(2) & "|"
                        Else
                            'strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("InvRefNo").Value, 3, 1) & Space$(3) & "|"
                            strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("InvRefNo").Value, 5, 1) & Space$(2) & "|"
                        End If
                        '|fffd|yDescription|fffd|z
                        If (IsNull(adoRs.Fields("Description").Value) = True) Then
                            strList = strList & Space$(2) & fg_strUnity("", 8, 1) & Space$(2) & "|"
                        Else
                            strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("Description").Value, 8, 1) & Space$(2) & "|"
                        End If
                        '|fffd|yStatus|fffd|z
                        If (IsNull(adoRs.Fields("Status").Value) = True) Then
                            strList = strList & Space$(1) & fg_strUnity("", 13, 1) & Space$(1) & "|"
                        Else
                            strList = strList & Space$(1) & fg_strUnity(adoRs.Fields("Status").Value, 13, 1) & Space$(1) & "|"
                        End If
                        '|fffd|yPaymentAmount|fffd|z
                        If (IsNull(adoRs.Fields("PaymentAmount").Value) = False) Then
                            'strList = strList & Space$(1) & adoRs.Fields("PaymentAmount").Value
                            strList = strList & Space$(1) & fg_strUnityAmount(adoRs.Fields("PaymentAmount").Value, 18)
                        End If
                        ''|fffd||fffd||fffd|X|fffd|g|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
                        listLinkCode.AddItem strList
                        m_blnGetData = True
                    End If
                    adoRs.MoveNext
                Loop
            End If
        Case GLNK_PP
            ''TITLE,|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||752||fffd|
            setCaption (GLNK_PP)
            ''|fffd||fffd||fffd|X|fffd|g|fffd||752||fffd|
            If (adoRs.EOF = False) Then
                Do Until adoRs.EOF
                    ''|fffd||289||742||fffd||fffd|`|fffd|F|fffd|b|fffd|N(|fffd||fffd||fffd||30e||fffd||fffd|_|fffd||142||fffd|Purpose|fffd||343|R|fffd||fffd||fffd||fffd||fffd|g)
                    If (adoRs.Fields("Currency").Value = m_strCurrency) Then
                        '|fffd|yLedgerLinkCode|fffd|z
                        strList = adoRs.Fields("LedgerLinkCode").Value & Space$(1) & "|"
                        '|fffd|yCurrency|fffd|z
                        strList = strList & Space$(2) & adoRs.Fields("Currency").Value & Space$(3) & "|"
                        '|fffd|yDescription|fffd|z
                        If (IsNull(adoRs.Fields("Description").Value) = True) Then
                            strList = strList & Space$(2) & fg_strUnity("", 8, 1) & Space$(2) & "|"
                        Else
                            strList = strList & Space$(2) & fg_strUnity(adoRs.Fields("Description").Value, 8, 1) & Space$(2) & "|"
                        End If
'''                        '|fffd|yPurpose|fffd|z
'''                        If (adoRs.Fields("Purpose").Value = 0) Then
'''                            strList = strList & "NK main" & "|"
'''                        Else
'''                            strList = strList & "JV main" & "|"
'''                        End If
                        '|fffd|yConectCode|fffd|z
                        strList = strList & adoRs.Fields("ConnectionCode").Value & "|"
                        '|fffd|yConectName|fffd|z
                        strList = strList & fg_strUnity(adoRs.Fields("ConnectionName").Value, 10, 1) & "|"
                        '|fffd|yPeriodStart|fffd|z
                        strList = strList & Space$(1) & Format$(adoRs.Fields("PeriodStart").Value, "yy/mm/dd") & Space$(2) & "|"
                        '|fffd|yPeriodEnd|fffd|z
                        strList = strList & Space$(1) & Format$(adoRs.Fields("PeriodEnd").Value, "yy/mm/dd") & Space$(2) & "|"
                        '|fffd|yPaymentAmount|fffd|z
                        If (IsNull(adoRs.Fields("PaymentAmount").Value) = False) Then
                            'strList = strList & Space$(1) & adoRs.Fields("PaymentAmount").Value
                            strList = strList & Space$(1) & fg_strUnityAmount(adoRs.Fields("PaymentAmount").Value, 18)
                        End If
                        ''|fffd||fffd||fffd|X|fffd|g|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
                        listLinkCode.AddItem strList
                        m_blnGetData = True
                    End If
                    adoRs.MoveNext
                Loop
            End If
        Case GLNK_RM
            ''TITLE,|fffd||fffd||fffd|o|fffd||fffd||fffd|s|fffd||752||fffd|
            setCaption (GLNK_RM)
            ''|fffd||fffd||fffd|X|fffd|g|fffd||752||fffd|
            If (adoRs.EOF = False) Then
                Do Until adoRs.EOF
                    If (IsNull(adoRs.Fields("ReceiptDate").Value) = True) Then
                        '|fffd|yLedgerLinkCode|fffd|z
                        strList = adoRs.Fields("LedgerLinkCode").Value & Space$(1) & "|"
                        '|fffd|yRequest Date|fffd|z
                        strList = strList & Space$(1) & Format$(adoRs.Fields("RequestDate").Value, "yy/mm/dd") & Space$(2) & "|"
                        '|fffd|yCurrency|fffd|z
                        strList = strList & Space$(2) & adoRs.Fields("RequestCurrency").Value & Space$(3) & "|"
                        '|fffd|yAmount|fffd|z
                        'strList = strList & Space$(1) & adoRs.Fields("RequestAmount").Value
                        strList = strList & Space$(1) & fg_strUnityAmount(adoRs.Fields("RequestAmount").Value, 18)
                        ''|fffd||fffd||fffd|X|fffd|g|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
                        listLinkCode.AddItem strList
                        m_blnGetData = True
                    End If
                    adoRs.MoveNext
                Loop
            End If
    End Select

    ''ITEM|fffd||fffd||fffd||fffd||fffd||fffd||fffd|LIST|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||fffd|s|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd|ENABLE|fffd||fffd|FALSE|fffd||242||fffd||fffd||fffd|
    If (m_blnGetData = True) Then
        listLinkCode.ListIndex = 1
    Else
        cmdOK.Enabled = False
    End If
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)

    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "frmSelectLinkCode setUpForm:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "frmSelectLinkCode setUpForm", strMSG
    GoTo LBL_END
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLNK_CODE |fffd|^> LedgerType
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SQL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/24 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/17 : Knowlbo Nakarai : Associate,SubCon|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/02/27 : Knowlbo Nakarai : Prepaid Expense|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/03/23 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Function createSQL(enmLedgerType As GLNK_CODE)

    Dim strSQL As String
    
    ''LedgerType|fffd||242||fffd||fffd||fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||c42c|
    Select Case enmLedgerType
        Case GLNK_IV    ''Invoice
            strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " tb"
            strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
            If (m_intCondition = 0) Then 'Paid|fffd||14ed2|f|fffd||fffd||fffd||fffd||a347|
                strSQL = strSQL & " AND tb.PaymentDate Is NULL"
            End If
        Case GLNK_AS    ''Associate
            strSQL = "SELECT " & "tb.LedgerLinkCode, " & "tb.AssociateCode, "
            strSQL = strSQL & "tb.Currency, " & "tb.InvRefNo, "
            strSQL = strSQL & "tb.Description, " & "tb.Status, "
            strSQL = strSQL & "tb.PaymentAmount, " & "tm.AssociateName "
            strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " tb"
            strSQL = strSQL & " LEFT JOIN " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tm"
            strSQL = strSQL & " ON " & "tb.AssociateCode = " & "tm.AssociateCode"
            strSQL = strSQL & " AND " & "tb.OfficeCode = " & "tm.OfficeCode " & " WHERE "
            strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
            If (m_intCondition = 0) Then 'Paid|fffd||14ed2|f|fffd||fffd||fffd||fffd||a347|
                strSQL = strSQL & " AND tb.PaidDate Is NULL"
            End If
        Case GLNK_SC    ''SubCon
            strSQL = "SELECT " & "tb.LedgerLinkCode, " & "tb.InvRefNo, "
            strSQL = strSQL & "tb.Currency, " & "tb.SubConCode, "
            strSQL = strSQL & "tb.Description, " & "tb.Status, "
            strSQL = strSQL & "tb.PaymentAmount, " & "tm.SubConName "
            strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_SubConPayment & " tb"
            strSQL = strSQL & " LEFT JOIN " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tm"
            strSQL = strSQL & " ON " & "tb.SubConCode = " & "tm.SubConCode"
            strSQL = strSQL & " AND " & "tb.OfficeCode = " & "tm.OfficeCode " & " WHERE "
            strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
            If (m_intCondition = 0) Then 'Paid|fffd||14ed2|f|fffd||fffd||fffd||fffd||a347|
                strSQL = strSQL & " AND tb.PaidDate Is NULL"
            End If
        Case GLNK_PP    ''PrepaidExpense
            If (m_intPurpose = 0) Or (m_intPurpose = 1) Then    ''Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||839e|
                strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
                strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
                strSQL = strSQL & " AND Purpose = " & fg_AddSingleQuotation(m_intPurpose) & " AND PaymentDate Is NULL"
            ElseIf (m_intPurpose = -1) Then     ''Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||752||839e|
                strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
                strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
                strSQL = strSQL & " AND PaymentDate Is NULL"
            End If
        Case GLNK_RM    ''Remittance
            strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
            strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    End Select

    createSQL = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLNK_CODE |fffd|^> LedgerType
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|TITLE,|fffd||fffd||fffd|o|fffd||fffd|,|fffd||fffd||fffd|X|fffd|g|fffd||fffd|ColumnWidth|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/15 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/16 : Knowlbo Nakarai : TITLE|fffd||752||83c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/01/17 : Knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||fffd|ColumnWidth|fffd||752||83c8||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/02/27 : Knowlbo Nakarai : Prepaid Expense|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function setCaption(enmLedgerType As GLNK_CODE)

    Dim strHead As String   ''|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    ''LedgerType|fffd||fffd||fffd||fffd|TITLE,|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||752||fffd|
    Select Case enmLedgerType
        Case GLNK_IV    ''Invoice
            listLinkCode.ColumnWidths = 380
            lblLedgerName.Caption = "LedgerType" & Space$(2) & "INVOICE"
            strHead = "LedgerLinkCode" & Space$(2) & "InvoiceNo" & Space$(2) & "Description"
            strHead = strHead & Space$(3) & "Status" & Space$(3) & "PaymentAmount"
            listLinkCode.AddItem strHead
        Case GLNK_AS    ''Associate
            listLinkCode.ColumnWidths = 540
            lblLedgerName.Caption = "LedgerType" & Space$(2) & "ASSOCIATE"
            strHead = "LedgerLinkCode" & Space$(2) & "Asso.Code" & Space$(7) & "Asso.Name" & Space$(8) & "InvRefNo"
            strHead = strHead & Space$(1) & "Description" & Space$(4) & "Status" & Space$(3) & "PaymentAmount"
            listLinkCode.AddItem strHead
        Case GLNK_SC    ''SubCon
            listLinkCode.ColumnWidths = 570
            lblLedgerName.Caption = "LedgerType" & Space$(2) & "SUB-CONTRACTOR"
            strHead = "LedgerLinkCode" & Space$(2) & "SubCon.Code" & Space$(6) & "SubCon.Name" & Space$(7) & "InvRefNo"
            strHead = strHead & Space$(1) & "Description" & Space$(6) & "Status" & Space$(6) & "PaymentAmount"
            listLinkCode.AddItem strHead
        Case GLNK_PP    ''PrepaidExpense
            listLinkCode.ColumnWidths = 570
            lblLedgerName.Caption = "LedgerType" & Space$(2) & "PREPAID"
            strHead = "LedgerLinkCode" & Space$(2) & "Currency" & Space$(1) & "Description"
'''            strHead = strHead & Space$(2) & "Purpose" & Space$(1) & "C.Code" & Space$(2) & "C.Name"
            strHead = strHead & Space$(2) & "C.Code" & Space$(2) & "C.Name"
            strHead = strHead & Space$(5) & "PeriodStart" & Space$(1) & "PeriodEnd" & Space$(3) & "PaymentAmount"
            listLinkCode.AddItem strHead
        Case GLNK_RM    ''Remittance
            listLinkCode.ColumnWidths = 290
            lblLedgerName.Caption = "LedgerType" & Space$(2) & "REMITTANCE"
            strHead = "LedgerLinkCode" & Space$(2) & "RequestDate"
            strHead = strHead & Space$(1) & "Currency" & Space$(2) & "Amount"
            listLinkCode.AddItem strHead
    End Select
End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||289||741|ESTATUS|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||fffd|
'   (1)<String |fffd|^> STATUS
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||289||742||fffd|STATUS|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/16 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function checkData(ByVal strCur As String, ByVal strStatus As String)

'''    If (m_intCondition = 0) Then        ''Paid|fffd||14ed2|f|fffd||fffd||fffd||fffd||a347|
'''        If (strCur = m_strCurrency) And (strStatus <> "Paid") And _
'''            (InStr(strStatus, "void") = 0) And (InStr(strStatus, "Reverse") = 0) Then
'''            checkData = True
'''            Exit Function
'''        End If
'''    ElseIf (m_intCondition = 1) Then    ''Paid|fffd||14ed2|f|fffd||fffd||fffd||202||fffd||fffd||a347|
'''        If (strCur = m_strCurrency) And _
'''            (InStr(strStatus, "void") = 0) And (InStr(strStatus, "Reverse") = 0) Then
'''            checkData = True
'''            Exit Function
'''        End If
'''    End If
    
    If (strCur = m_strCurrency) And _
        (InStr(strStatus, "void") = 0) And (InStr(strStatus, "Reverse") = 0) Then
        checkData = True
        Exit Function
    End If
    
    ''Check|fffd||fffd||fffd|s|fffd||30f||a347||fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    checkData = False

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerLinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerLinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/17 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub CloseForm()
    ''|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd|A|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    m_blnBottomRet = True
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLNK_CODE |fffd|^> LedgerType
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LedgerType|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/16 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmLedgerType(ByVal enmLedgerType As GLNK_CODE)
    ''LedgerType|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_enmLedgerType = enmLedgerType
End Property


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Currency|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> Currency
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Currency|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/16 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmCurrency(ByVal strCur As String)
    ''|fffd||289||742||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_strCurrency = strCur
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Condition|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:Paid|fffd||fffd||fffd|f|fffd||fffd||fffd||fffd|  1:Paid|fffd||fffd||fffd|f|fffd||fffd||fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Condition|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/16 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmCondition(ByVal intValue As Integer)
    ''Condition|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_intCondition = intValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:NK Main Use  1:JV Main Use
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Purpose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/27 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Let PrmPurpose(ByVal intValue As Integer)
    ''Purpose|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    m_intPurpose = intValue
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerLinkCode|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LedgerLinkCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> LedgerLinkCode
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/17 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get PrmSelectLCode() As String
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LedgerLinkCode|fffd||fffd||fffd|i|fffd|[
    PrmSelectLCode = m_strSelectLCode
End Property

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Result|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:OK  False:CANCEL
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/17 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Property Get Result() As Boolean
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|{|fffd|^|fffd||fffd||fffd||30e||fffd||782||fffd||fffd|i|fffd|[
    Result = m_blnBottomRet
End Property

Attribute VB_Name = "frmSetting_Main"
Attribute VB_Base = "0{57CD11FD-5B24-4630-9CCA-C7643EBC0538}{CFCC7479-E063-43ED-8EDD-C41B92EE29F2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Master|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnEditRemit As Boolean       ''REMITTANCE|fffd|y|fffd|[|fffd|W|fffd||315||48f|W|fffd|t|fffd||fffd||fffd|O
Private m_blnEditPJT As Boolean         ''PROJECT|fffd|y|fffd|[|fffd|W|fffd||315||48f|W|fffd|t|fffd||fffd||fffd|O
Private m_blnNoPJT As Boolean           ''PROJECT|fffd||310||752||fffd|t|fffd||fffd||fffd|O
Private m_blnBtnCancel As Boolean       ''Cansel|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd||fffd||fffd|O|fffd|E|fffd|e|fffd|y|fffd|[|fffd|W|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2005/04/25 : Knowlbo Suzuki  : Cash Bank Book|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd|10->16|fffd||24f|C|fffd||fffd|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()

    Dim IngIx As Long
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strPurpose As String  ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd|Purpose
    Dim strUseRemit As String   ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd|UseRemittance
    Dim strSCReimbur As String  ''|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||fffd|Reimbursable
    Dim strName As String
    Dim strLstValue As String   ''|fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    
    Me.Caption = c_strNAME_SYSTEM    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||fffd|
    
    Application.Cursor = xlWait
    DoEvents
    
    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        btnDecide.Enabled = g_blnLedgerModify
    Else
        btnDecide.Enabled = False
    End If
'    btnDecide.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    ''|fffd|eBook|fffd||fffd|OK|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd|A|fffd||fffd||fffd||343|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    g_blnCBBtnOk = False
    g_blnBBBtnOk = False
    g_blnWBSBtnOk = False
    g_blnASBtnOk = False
    g_blnSCBtnOk = False
    g_blnTRInput = False
    
    ''UseRemittance|fffd|AUseMain|fffd||310||752||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    g_blnUseRemit = False
    g_blnUseMain = False
    
    ''|fffd|z|fffd||fffd||317|L|fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    g_blnCBNoArray = False
    g_blnBBNoArray = False
    m_blnNoPJT = False
    
    ''|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnEditRemit = False
    m_blnEditPJT = False
    
    sg_SetScreenUpdate False

    ''CASHBOOK ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_CB) = True Then
        For intCount = 0 To UBound(g_typAryCBInfo)
            ReDim Preserve g_typAryCBInfoEdit(intCount)
            g_typAryCBInfoEdit(intCount) = g_typAryCBInfo(intCount)
            g_typAryCBInfoEdit(intCount).m_blnDirty = False
            ''CasherName|fffd||fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||a0b7||fffd||fffd|
            strName = fg_strUnity(g_typAryCBInfoEdit(intCount).m_strCasher, 15, 0)
            ''NK/JV|fffd||fffd||752||fffd|(|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p)
            strPurpose = c_strPurposeJV
            If g_typAryCBInfoEdit(intCount).m_intPurpose = 0 Then strPurpose = c_strPurposeNK
            ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            strLstValue = g_typAryCBInfoEdit(intCount).m_strCode & Space$(2) & _
                        g_typAryCBInfoEdit(intCount).m_strCurrency & Space$(2) & _
                        strName & Space$(2) & strPurpose
            frmSetting_Main.CBList.AddItem strLstValue
        Next
        
        ''|fffd|z|fffd||42a93|o|fffd|^|fffd||fffd||fffd||fffd||20f||30a0||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
        If (intCount >= c_lngMAX_CBTLedgerBook) Then btnCBAdd.Enabled = False
        g_blnCBNoArray = False
    Else
        s_SetNewArray (GCMN_CB)
    End If
    
    ''BANKBOOK ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_BB) = True Then
        For intCount = 0 To UBound(g_typAryBBInfo)
            ReDim Preserve g_typAryBBInfoEdit(intCount)
            g_typAryBBInfoEdit(intCount) = g_typAryBBInfo(intCount)
            If g_typAryBBInfoEdit(intCount).m_blnUseRemittance Then
                g_blnUseRemit = True
                g_intUseRemitIndex = intCount
                strUseRemit = "Rem"
            Else
                strUseRemit = Space$(3)
            End If
            g_typAryBBInfoEdit(intCount).m_blnDirty = False
            ''BankName,BranchName|fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||fffd|
            strName = fg_strUnity(g_typAryBBInfoEdit(intCount).m_strName, 13, 0)
            ''NK/JV|fffd||fffd||752||fffd|(|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p)
            strPurpose = "JV main"
            If g_typAryBBInfoEdit(intCount).m_intPurpose = 0 Then strPurpose = "NK main"
            
            ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            strLstValue = g_typAryBBInfoEdit(intCount).m_strCode & Space$(2) & _
                        g_typAryBBInfoEdit(intCount).m_strCurrency & Space$(2) & strName & _
                        Space$(2) & strPurpose & Space$(2) & strUseRemit & Space$(1) & String(3, ".")
            frmSetting_Main.BBList.AddItem strLstValue
        Next
        
        ''|fffd|z|fffd||42a93|o|fffd|^|fffd||fffd||fffd||fffd||20f||30a0||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
        If (intCount >= c_lngMAX_CBTLedgerBook) Then btnBBAdd.Enabled = False
        g_blnBBNoArray = False
    Else
        s_SetNewArray (GCMN_BB)
    End If
    
    ''TRANSFER ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_TR) = True Then
        For intCount = 0 To UBound(g_typAryTRInfo)
            ReDim Preserve g_typAryTRInfoEdit(intCount)
            g_typAryTRInfoEdit(intCount) = g_typAryTRInfo(intCount)
            g_typAryTRInfoEdit(intCount).m_blnDirty = False
            ''NK/JV|fffd||fffd||752||fffd|(|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd|p)
            strPurpose = c_strPurposeJV
            If g_typAryTRInfoEdit(intCount).m_intPurpose = 0 Then strPurpose = c_strPurposeNK
            ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            strLstValue = g_typAryTRInfoEdit(intCount).m_strCode & Space$(2) & _
                        g_typAryTRInfoEdit(intCount).m_strCurrency & Space$(2) & _
                        strPurpose & Space$(2) & _
                        g_typAryTRInfoEdit(intCount).m_strDescript
            frmSetting_Main.TRList.AddItem strLstValue
        Next
    ElseIf g_blnCBNoArray And g_blnBBNoArray Then
        g_blnTRNoArray = True
    End If

    ''ASSOCIATE ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_AS) = True Then
        For intCount = 0 To UBound(g_typAryAsoInfo)
            ReDim Preserve g_typAryAsoInfoEdit(intCount)
            g_typAryAsoInfoEdit(intCount) = g_typAryAsoInfo(intCount)
            g_typAryAsoInfoEdit(intCount).m_blnDirty = False
            ''Name|fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||fffd|
            strName = fg_strUnity(g_typAryAsoInfoEdit(intCount).m_strName, 15, 0)
            ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            strLstValue = g_typAryAsoInfoEdit(intCount).m_strCode & Space$(2) & strName & _
                        Space$(2) & g_typAryAsoInfoEdit(intCount).m_strCurrency & Space$(1) & String(3, ".")
            frmSetting_Main.ASList.AddItem strLstValue
        Next
    Else
        s_SetNewArray (GCMN_AS)
    End If

    ''SUB-CONTRACTOR ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_SC) = True Then
        For intCount = 0 To UBound(g_typArySConInfo)
            ReDim Preserve g_typArySConInfoEdit(intCount)
            g_typArySConInfoEdit(intCount) = g_typArySConInfo(intCount)
            g_typArySConInfoEdit(intCount).m_blnDirty = False
            ''Name|fffd||315|\|fffd||fffd||fffd||fffd||fffd||13748||fffd|
            strName = fg_strUnity(g_typArySConInfoEdit(intCount).m_strName, 13, 0)
            ''Reimbursable|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
            strSCReimbur = c_strSbCNonReimbursable
            If (g_typArySConInfoEdit(intCount).m_intReimbursable = 0) Then strSCReimbur = c_strSbCReimbursable
            ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||14b||fffd||602||fffd||fffd||102||702||182||7c2||101|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            strLstValue = g_typArySConInfoEdit(intCount).m_strCode & Space$(2) & _
                        strName & Space$(2) & strSCReimbur & Space$(1) & String(3, ".")
            frmSetting_Main.SCList.AddItem strLstValue
        Next
    Else
        s_SetNewArray (GCMN_SC)
    End If

    ''REMITTANCE ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_CP) = True Then
        For intCount = 0 To UBound(g_typAryRTInfo)
            ReDim Preserve g_typAryRTInfoEdit(intCount)
            g_typAryRTInfoEdit(intCount) = g_typAryRTInfo(intCount)
            txtRTRequest1.Value = g_typAryRTInfoEdit(intCount).m_strRequestTo1
            txtRTRequest2.Value = g_typAryRTInfoEdit(intCount).m_strRequestTo2
            txtRTRequest3.Value = g_typAryRTInfoEdit(intCount).m_strRequestTo3
            txtRTAdvice.Value = g_typAryRTInfoEdit(intCount).m_strAdviceTo
        Next
    Else
        s_SetNewArray (GCMN_CP)
    End If
    
    ''WBSCode ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_WB) = True Then
        For intCount = 0 To UBound(g_typAryWBSCode)
            ReDim Preserve g_typAryWBSCodeEdit(intCount)
            g_typAryWBSCodeEdit(intCount) = g_typAryWBSCode(intCount)
            g_typAryWBSCodeEdit(intCount).m_blnDirty = False
            frmSetting_Main.WBSList.AddItem g_typAryWBSCodeEdit(intCount).m_strCode
        Next
    Else
        s_SetNewArray (GCMN_WB)
    End If

    ''PROJECT ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_PJ) = True Then
        For intCount = 0 To UBound(g_typAryPJTInfo)
    
            ReDim Preserve g_typAryPJTInfoEdit(intCount)
            g_typAryPJTInfoEdit(intCount) = g_typAryPJTInfo(intCount)
            ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
            txtPJTOfficeCode.Value = g_typAryPJTInfoEdit(intCount).m_strOfficeCode
            txtPJTCode.Value = g_typAryPJTInfoEdit(intCount).m_strPJTCode
            txtPJTName.Value = g_typAryPJTInfoEdit(intCount).m_strPJTName
            ''|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||253||fffd||fffd|e|fffd||fffd||752||fffd|
            With cboPJTPayment
                .AddItem c_strInvPaymentMonth
                .AddItem c_strInvPaymentSched
            End With
            If g_typAryPJTInfoEdit(intCount).m_intPaymentMethod = 0 Then
                cboPJTPayment.ListIndex = 0
            Else
                cboPJTPayment.ListIndex = 1
            End If
            ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe|---------
            ''Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|(|fffd||fffd||fffd||303|y|fffd|[|fffd|W|fffd||fffd|Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||302||193||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd|)
            g_blnBtnAdd = False
            s_GetCurInfo 4, 0
            ''-----------------------
            txtPJTCont.Value = g_typAryPJTInfoEdit(intCount).m_curContract
            txtPJTContNK.Value = g_typAryPJTInfoEdit(intCount).m_curContractNK
            txtPJTContASO.Value = g_typAryPJTInfoEdit(intCount).m_curContractASO
            txtPJTPerCont.Value = g_typAryPJTInfoEdit(intCount).m_curPerCont
            txtPJTPerNK.Value = g_typAryPJTInfoEdit(intCount).m_curPerNK
            txtPJTPerASO.Value = g_typAryPJTInfoEdit(intCount).m_curPerASO
            txtPJTAdvan.Value = g_typAryPJTInfoEdit(intCount).m_curAdvance
            txtPJTAdvanNK.Value = g_typAryPJTInfoEdit(intCount).m_curAdvanceNK
            txtPJTAdvanASO.Value = g_typAryPJTInfoEdit(intCount).m_curAdvanceASO
            ''OfficeCode,ProjectCode,|fffd||289||742||fffd||48f|W|fffd|s|fffd||82||242||fffd||fffd||fffd|
            txtPJTOfficeCode.Enabled = False
            txtPJTCode.Enabled = False
            cboPJTCur.Enabled = False
        Next
    Else
        s_SetNewArray (GCMN_PJ)
    End If
    
    ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|y|fffd|[|fffd|W|fffd||fffd|PROJECT|fffd||250||752||fffd|
    MultiPage1.Value = 0
    sg_SetScreenUpdate True
    Application.Cursor = xlDefault
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CashBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(EDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CashBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/03 : Knowlbo Nakarai : Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||310||752||fffd||fffd||1c9||fffd|
'   2002/10/04 : Knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnCBEdit_Click()

    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|~
    If (CBList.ListCount = 0) Then Exit Sub
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = False

    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90ca||fffd|X|fffd|g|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe|
    g_intCBItemIndex = CBList.ListIndex
    
    ''Edit|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    frmCBEdit.lblLedger.Caption = g_typAryCBInfoEdit(g_intCBItemIndex).m_strCode
    frmCBEdit.txtCBCasher.Value = Trim$(g_typAryCBInfoEdit(g_intCBItemIndex).m_strCasher)
    frmCBEdit.txtCBMemo.Value = g_typAryCBInfoEdit(g_intCBItemIndex).m_strMemo
    
    ''NK/JV|fffd|R|fffd||fffd||fffd|{|fffd||c42c||fffd||fffd||fffd|A|fffd|I|fffd||fffd|s|fffd||82||242||fffd||fffd||fffd|
    frmCBEdit.cboCBPurpose.AddItem c_strPurposeNK
    frmCBEdit.cboCBPurpose.AddItem c_strPurposeJV
    If g_typAryCBInfoEdit(g_intCBItemIndex).m_intPurpose = 0 Then
        frmCBEdit.cboCBPurpose.ListIndex = 0
    Else
        frmCBEdit.cboCBPurpose.ListIndex = 1
    End If
    frmCBEdit.cboCBPurpose.Enabled = False
    
    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd|I|fffd||fffd|s|fffd||82||242||fffd||fffd||fffd|
    s_GetCurInfo 0, g_intCBItemIndex
    frmCBEdit.cboCBCur.Enabled = False
    
    ''Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmCBEdit.Caption = c_strNAME_SYSTEM
    frmCBEdit.Show
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CashBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(ADDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CashBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/03 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnCBAdd_Click()
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = True

    ''|fffd||1c9||fffd||fffd||fffd||fffd||9340||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
    ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd|0|fffd||fffd||fffd||fffd|AListCount|fffd||fffd|1|fffd||fffd||fffd||fffd||202||302||fffd|ListCount|fffd||312|l|fffd||fffd||fffd|V|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||242||202||fffd|
    If CBList.ListCount = 0 Then
        g_intCBItemIndex = 0
    Else
        g_intCBItemIndex = CBList.ListCount
    End If
    
    ''LedgerCode|fffd||312|l|fffd||fffd||752||80b7||fffd||fffd|(User|fffd||242||353||fffd||fffd||342||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|)
    If g_blnCBNoArray = False Then
        frmCBEdit.lblLedger.Caption = "CB" & Format$(CBList.ListCount + 1, "00")
    ElseIf g_blnCBNoArray = True Then
        frmCBEdit.lblLedger.Caption = "CB01"
    End If
    
    ''|fffd|R|fffd||fffd||fffd|{|fffd||c42c|
    frmCBEdit.cboCBPurpose.AddItem c_strPurposeNK
    frmCBEdit.cboCBPurpose.AddItem c_strPurposeJV
    frmCBEdit.cboCBPurpose.ListIndex = 0

    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe|
    s_GetCurInfo 0, g_intCBItemIndex
    
    ''PROJECT|fffd||752||839e||fffd||242||fffd|PROJECT|fffd||289||742||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||242||fffd||fffd||fffd|
    If (m_blnNoPJT = False) Then
        frmCBEdit.cboCBCur = g_typAryPJTInfoEdit(0).m_strCurrency
    End If
    
    ''Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmCBEdit.Caption = c_strNAME_SYSTEM
    frmCBEdit.Show
    
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(EDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/04 : Knowlbo Nakarai : Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||310||752||fffd||fffd||1c9||fffd|
'   2002/10/07 : knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnBBEdit_Click()
        
    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|~
    If (BBList.ListCount = 0) Then
        Exit Sub
    End If
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = False
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90ca||fffd|X|fffd|g|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe|
    g_intBBItemIndex = BBList.ListIndex
    
    ''Edit|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||252|l|fffd||fffd||fffd|Z|fffd|b|fffd|g
    frmBBEdit.lblBBLedger.Caption = g_typAryBBInfoEdit(g_intBBItemIndex).m_strCode
    frmBBEdit.txtBBBank.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strName
    frmBBEdit.txtBBBranch.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strBranch
    frmBBEdit.txtBBAddress.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strAdress
    frmBBEdit.txtBBAcountT.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strAccountType
    frmBBEdit.txtBBAccountNo.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strAccountNo
    frmBBEdit.txtBBBenefic.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strBeneficiaryName
    frmBBEdit.txtBBSigner.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strSigner
    frmBBEdit.chkUseRemit.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_blnUseRemittance
    frmBBEdit.txtBBMemo.Value = g_typAryBBInfoEdit(g_intBBItemIndex).m_strMemo
    
    ''NK/JV|fffd|R|fffd||fffd||fffd|{|fffd||c42c||fffd||fffd||fffd|A|fffd|I|fffd||fffd|s|fffd||82||242||fffd||fffd||fffd|
    frmBBEdit.cboBBPurpose.AddItem c_strPurposeNK
    frmBBEdit.cboBBPurpose.AddItem c_strPurposeJV
    If g_typAryBBInfoEdit(g_intBBItemIndex).m_intPurpose = 0 Then
        frmBBEdit.cboBBPurpose.ListIndex = 0    ''NKMainUse
    Else
        frmBBEdit.cboBBPurpose.ListIndex = 1    ''JVMainUse
        frmBBEdit.chkUseRemit.Enabled = False   ''UseRemittance|fffd||752||fffd|s|fffd||fffd|
    End If
    frmBBEdit.cboBBPurpose.Enabled = False
    
    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||3cd|X|fffd|s|fffd||82||242||fffd||fffd||fffd|
    s_GetCurInfo 1, g_intBBItemIndex
    frmBBEdit.cboBBCur.Enabled = False
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmBBEdit.Caption = c_strNAME_SYSTEM
    frmBBEdit.Show
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(ADDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/04 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnBBAdd_Click()
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = True
    
    ''|fffd||1c9||fffd||fffd||fffd||fffd||9340||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
    ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd|0|fffd||fffd||fffd||fffd|AListCount|fffd||fffd|1|fffd||fffd||fffd||fffd||202||302||fffd|ListCount|fffd||312|l|fffd||fffd||fffd|V|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||242||202||fffd|
    If BBList.ListCount = 0 Then
        g_intBBItemIndex = 0
    Else
        g_intBBItemIndex = BBList.ListCount
    End If
    
    ''LedgerCode|fffd||312|l|fffd||fffd||752||80b7||fffd||fffd|(User|fffd||242||353||fffd||fffd||342||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|)
    If g_blnBBNoArray = False Then
        frmBBEdit.lblBBLedger.Caption = "BB" & Format$(BBList.ListCount + 1, "00")
    ElseIf g_blnBBNoArray = True Then
        frmBBEdit.lblBBLedger.Caption = "BB01"
    End If
    
    ''|fffd|R|fffd||fffd||fffd|{|fffd||c42c|
    frmBBEdit.cboBBPurpose.AddItem c_strPurposeNK
    frmBBEdit.cboBBPurpose.AddItem c_strPurposeJV
    frmBBEdit.cboBBPurpose.ListIndex = 0
    
    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe|
    s_GetCurInfo 1, g_intBBItemIndex
    
    ''PROJECT|fffd||752||839e||fffd||242||fffd|PROJECT|fffd||289||742||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||242||fffd||fffd||fffd|
    If (m_blnNoPJT = False) Then
        frmBBEdit.cboBBCur = g_typAryPJTInfoEdit(0).m_strCurrency
    End If
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmBBEdit.Caption = c_strNAME_SYSTEM
    frmBBEdit.Show

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/11 : Knowlbo Nakarai : |fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2003/01/03 : Knowlbo Nakarai : UpdateDate|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/21 : Knowlbo Nakarai : |fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/22 : Knowlbo Nakarai : |fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||1c9||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/10/07 : Knowlbo Suzuki : WBS|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N(|fffd|c|fffd||fffd|/|fffd|w|fffd||fffd||fffd|j|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub btnWBSEditOK_Click()
    
    Dim strMSG As String    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||142||303|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    Dim strCode As String   ''CODE
    Dim strDumyCode As String
    Dim intWBSItemIndex As Integer
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|WBSCode|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||64fe|
    intWBSItemIndex = WBSList.ListIndex

    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtWBSCode.Value, "WBSCode", 0) = True) Then
        txtWBSCode.SetFocus
        Exit Sub
    Else
        strCode = UCase$(txtWBSCode.Value)
        If (strCode = g_typAryWBSCodeEdit(intWBSItemIndex).m_strCode) Then
            MsgBox c_strMSG_NOEDIT, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            Exit Sub
        ElseIf (f_CheckWBSCode(strCode, Len(strCode), strMSG) = False) Then
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtWBSCode.SetFocus
            Exit Sub
        End If
        ''WBSCode|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
        If fg_CheckWBSExist(strCode, strDumyCode) = False Then
            strMSG = c_strMSGCmn_NotEXISTWBS & "(NK-Sales or NK-Material)"
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtWBSCode.SetFocus
            Exit Sub
        End If
        
    End If
    
    ''|fffd|X|fffd|V|fffd|m|fffd|F|fffd|`|fffd|F|fffd|b|fffd|N
    If (MsgBox(c_strMSGCmn_UPDATEWBSCODE, vbYesNo + vbExclamation, c_strNAME_SYSTEM) = vbNo) Then
        Exit Sub
    End If
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||24a|i|fffd|[
    g_typAryWBSCodeEdit(intWBSItemIndex).m_strCode = strCode
    g_typAryWBSCodeEdit(intWBSItemIndex).m_blnDirty = True
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
    WBSList.List(intWBSItemIndex) = g_typAryWBSCodeEdit(intWBSItemIndex).m_strCode
    
    ''|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||fffd||fffd||fffd|
    g_blnWBSBtnOk = True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/11 : Knowlbo Nakarai : |fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2002/12/26 : Knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||83c8||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/03 : Knowlbo Nakarai : UpdateDate|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/21 : Knowlbo Nakarai : |fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/22 : Knowlbo Nakarai : |fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||1c9||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/10/07 : Knowlbo Suzuki : WBS|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N(|fffd|c|fffd||fffd|/|fffd|w|fffd||fffd||fffd|j|fffd||1c9||fffd|
'   2003/10/21 : Knowlbo Suzuki  : WBS|fffd|V|fffd|KID|fffd||fffd||fffd||50f||fffd||fffd||fffd||fffd||3cd|X(Count|fffd||fffd|p|fffd|~|fffd||fffd||fffd|AMAX(ID)+1|fffd|j
'-----------------------------------------------------------------
Private Sub btnWBSAddOK_Click()

    Dim strMSG As String    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||142||303|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    Dim strCode As String   ''CODE
    Dim strDumyCode As String
    Dim intWBSItemIndex As Integer

    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtWBSCode.Value, "WBSCode", 0) = True) Then
        txtWBSCode.SetFocus
        Exit Sub
    Else
        strCode = UCase$(txtWBSCode.Value)
        If (f_CheckWBSCode(strCode, Len(strCode), strMSG) = False) Then
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtWBSCode.SetFocus
            Exit Sub
        End If
        
        ''WBSCode|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
        If fg_CheckWBSExist(strCode, strDumyCode) = False Then
            strMSG = c_strMSGCmn_NotEXISTWBS & "(NK-Sales or NK-Material)"
            MsgBox strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            txtWBSCode.SetFocus
            Exit Sub
        End If
    End If
    
    
    ''|fffd|X|fffd|V|fffd|m|fffd|F|fffd|`|fffd|F|fffd|b|fffd|N
    If (MsgBox(c_strMSGCmn_UPDATEWBSCODE, vbYesNo + vbExclamation, c_strNAME_SYSTEM) = vbNo) Then
        Exit Sub
    End If
    
    ''|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||752||fffd|(Index|fffd||fffd|0|fffd||fffd||fffd||fffd|AList.ListCount|fffd||fffd|1|fffd||fffd||fffd||fffd||202||302||fffd|
    ''ListCount|fffd||312|l|fffd||fffd||fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||242||202||fffd|)
    intWBSItemIndex = WBSList.ListCount
    
    ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||24a|i|fffd|[(Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||341|A|fffd|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||317||308||fffd||fffd||fffd|m|fffd||fffd|)
    ReDim Preserve g_typAryWBSCodeEdit(intWBSItemIndex)
    g_intWBSmaxID = g_intWBSmaxID + 1
    g_typAryWBSCodeEdit(intWBSItemIndex).m_lngID = g_intWBSmaxID
    g_typAryWBSCodeEdit(intWBSItemIndex).m_strCode = strCode
    g_typAryWBSCodeEdit(intWBSItemIndex).m_blnDirty = True
    
    ''|fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
    WBSList.AddItem g_typAryWBSCodeEdit(intWBSItemIndex).m_strCode
    
    ''|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||303|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||752||fffd|
    WBSList.ListIndex = 0
    
    ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    If (btnWBSEditOK.Enabled = False) Then
        btnWBSEditOK.Enabled = True
    End If
    
    ''|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    g_blnWBSBtnOk = True

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(EDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/02 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/04 : Knowlbo Nakarai : Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||310||752||fffd||fffd||1c9||fffd|
'   2002/10/07 : knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/06 : knowlbo Nakarai : AssociateCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnASEdit_Click()

    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|~
    If (ASList.ListCount = 0) Then Exit Sub
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = False
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90ca||fffd|X|fffd|g|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe|
    g_intASItemIndex = ASList.ListIndex
    
    ''Edit|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||252|l|fffd||fffd||fffd|Z|fffd|b|fffd|g
    frmASEdit.lblAsoCode.Caption = g_typAryAsoInfoEdit(g_intASItemIndex).m_strCode
    frmASEdit.txtASName.Value = g_typAryAsoInfoEdit(g_intASItemIndex).m_strName
    frmASEdit.txtASCont.Value = g_typAryAsoInfoEdit(g_intASItemIndex).m_curContract
    frmASEdit.txtASAdvance.Value = g_typAryAsoInfoEdit(g_intASItemIndex).m_curAdvance
    
    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe|(|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|X|fffd|g|fffd||312||289||742||fffd|I|fffd||fffd||fffd||fffd||fffd|)
    's_GetCurInfo 2, g_intASItemIndex
    frmASEdit.lblASCurrency.Caption = cboPJTCur.Value
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmASEdit.Caption = c_strNAME_SYSTEM
    frmASEdit.Show
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(ADDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Associate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/04 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/06 : Knowlbo Nakarai : AssociateCode|fffd||fffd||fffd||fffd||fffd||454||50f||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/17 : Knowlbo Nakarai : ContractAmount,Advance|fffd||30f||fffd||fffd||fffd||fffd|l|fffd||752||83c8||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnASAdd_Click()
    
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intMaxCode As Integer       ''CODE|fffd||151||fffd|l
    Dim intCompCode As Integer      ''|fffd||fffd|r|fffd|pCODE
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = True
    
    ''|fffd||1c9||fffd||fffd||fffd||fffd||9340||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
    ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd|0|fffd||fffd||fffd||fffd|AListCount|fffd||fffd|1|fffd||fffd||fffd||fffd||202||302||fffd|ListCount|fffd||312|l|fffd||fffd||fffd|V|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||242||202||fffd|
    g_intASItemIndex = ASList.ListCount
    
    intMaxCode = 0
    If ASList.ListCount <> 0 Then
        ''|fffd||fffd||fffd||fffd|CODE|fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        intCompCode = 0
        For intCount = 0 To UBound(g_typAryAsoInfoEdit)
            If (CInt(Right$(g_typAryAsoInfoEdit(intCount).m_strCode, 3)) > intCompCode) Then
                intMaxCode = CInt(Right$(g_typAryAsoInfoEdit(intCount).m_strCode, 3))
                intCompCode = CInt(Right$(g_typAryAsoInfoEdit(intCount).m_strCode, 3))
            End If
        Next
    End If
    ''AssociateCode|fffd||312|l|fffd||fffd||752||80b7||fffd||fffd|(User|fffd||242||353||fffd||fffd||342||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|)
    frmASEdit.lblAsoCode.Caption = "ASO" & Format$(intMaxCode + 1, "000")
    
    ''ContractAmount,ContractAdvance|fffd||24f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||fffd|
    frmASEdit.txtASCont.Value = 0
    frmASEdit.txtASAdvance.Value = 0
    
    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe|
    's_GetCurInfo 2, 0
    frmASEdit.lblASCurrency.Caption = cboPJTCur.Value
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmASEdit.Caption = c_strNAME_SYSTEM
    frmASEdit.Show
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(EDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/03 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/07 : knowlbo Nakarai : |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2002/12/20 : knowlbo Nakarai : Remibursable|fffd|R|fffd||fffd||fffd|{|fffd||1c9||fffd|
'   2003/01/06 : knowlbo Nakarai : SubConCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnSCEdit_Click()

    ''|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|~
    If (SCList.ListCount = 0) Then Exit Sub
    
    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = False
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90ca||fffd|X|fffd|g|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe|
    g_intSCItemIndex = SCList.ListIndex
    
    ''Edit|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||252|l|fffd||fffd||fffd|Z|fffd|b|fffd|g
    frmSCEdit.lblSCCode.Caption = g_typArySConInfoEdit(g_intSCItemIndex).m_strCode
    frmSCEdit.txtSCName.Value = g_typArySConInfoEdit(g_intSCItemIndex).m_strName
    frmSCEdit.txtSCCont.Value = g_typArySConInfoEdit(g_intSCItemIndex).m_curContract
    frmSCEdit.txtSCAdvance.Value = g_typArySConInfoEdit(g_intSCItemIndex).m_curAdvance
    ''Reimbursable|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    frmSCEdit.cboReimbursable.AddItem c_strSbCReimbursable
    frmSCEdit.cboReimbursable.AddItem c_strSbCNonReimbursable
    If (g_typArySConInfoEdit(g_intSCItemIndex).m_intReimbursable = 0) Then
        frmSCEdit.cboReimbursable.ListIndex = 0
    Else
        frmSCEdit.cboReimbursable.ListIndex = 1
    End If
    
    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd|I|fffd||fffd|s|fffd||82||242||fffd||fffd||fffd|
    s_GetCurInfo 3, g_intSCItemIndex
    frmSCEdit.cboSCCur.Enabled = False
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmSCEdit.Caption = c_strNAME_SYSTEM
    frmSCEdit.Show
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|(ADDITION)
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Sub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||243|f|fffd|[|fffd|^|fffd||fffd||752||80b5||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/07 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/20 : knowlbo Nakarai : Remibursable|fffd|R|fffd||fffd||fffd|{|fffd||1c9||fffd|
'   2003/01/06 : Knowlbo Nakarai : Sub-ConCode|fffd||fffd||fffd||fffd||fffd||454||50f||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/17 : Knowlbo Nakarai : ContractAmount,Advance|fffd||24f||fffd||fffd||fffd||fffd|l|fffd||752||83c8||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/01/23 : Knowlbo Nakarai : |fffd||289||743|R|fffd||fffd||fffd|{|fffd||752||83c8||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnSCAdd_Click()

    Dim intCount As Integer
    Dim intListCount As Integer
    Dim blnFindCur As Boolean
    Dim intMaxCode As Integer       ''CODE|fffd||151||fffd|l
    Dim intCompCode As Integer      ''|fffd||fffd|r|fffd|pCODE
    
    ''CashBook,BankBook|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347|
    If (g_blnCBNoArray = True) And (g_blnBBNoArray = True) Then
        MsgBox c_strMSGCmn_NOADDSUBCON, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Sub
    End If

    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
    g_blnBtnAdd = True
    
    ''|fffd||1c9||fffd||fffd||fffd||fffd||9340||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
    ''|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd|0|fffd||fffd||fffd||fffd|AListCount|fffd||fffd|1|fffd||fffd||fffd||fffd||202||302||fffd|ListCount|fffd||312|l|fffd||fffd||fffd|V|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||242||202||fffd|
    g_intSCItemIndex = SCList.ListCount
    
    intMaxCode = 0
    If SCList.ListCount <> 0 Then
        intCompCode = 0
        ''CODE|fffd||314|z|fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|(|fffd||151||fffd|CODE|fffd||fffd||fffd||64fe||fffd||fffd||fffd||90bd||fffd||fffd|)
        For intCount = 0 To UBound(g_typArySConInfoEdit)
            If (CInt(Right$(g_typArySConInfoEdit(intCount).m_strCode, 3)) > intCompCode) Then
                intMaxCode = CInt(Right$(g_typArySConInfoEdit(intCount).m_strCode, 3))
                intCompCode = CInt(Right$(g_typArySConInfoEdit(intCount).m_strCode, 3))
            End If
        Next
    End If
    ''Sub-ConCode|fffd||312|l|fffd||fffd||752||80b7||fffd||fffd|(User|fffd||242||353||fffd||fffd||342||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|)
    frmSCEdit.lblSCCode.Caption = "SBC" & Format$(intMaxCode + 1, "000")
    
    ''ContractAmount,ContractAdvance|fffd||24f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||fffd|
    frmSCEdit.txtSCCont = 0
    frmSCEdit.txtSCAdvance = 0
    
    ''Reimbursable|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    frmSCEdit.cboReimbursable.AddItem c_strSbCReimbursable
    frmSCEdit.cboReimbursable.AddItem c_strSbCNonReimbursable
    frmSCEdit.cboReimbursable.ListIndex = 0
    
'    ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe|
'    s_GetCurInfo 3, g_intSCItemIndex
    
    ''|fffd||289||743|R|fffd||fffd||fffd|{|fffd||fffd||752||fffd|
    blnFindCur = False
    If (m_blnNoPJT = False) Then
        frmSCEdit.cboSCCur.AddItem g_typAryPJTInfoEdit(0).m_strCurrency
    End If
    If (g_blnCBNoArray = False) Then
        For intCount = LBound(g_typAryCBInfoEdit) To UBound(g_typAryCBInfoEdit)
            If (frmSCEdit.cboSCCur.ListCount > 0) Then
                For intListCount = 0 To frmSCEdit.cboSCCur.ListCount - 1
                    If (frmSCEdit.cboSCCur.List(intListCount) = g_typAryCBInfoEdit(intCount).m_strCurrency) Then
                        blnFindCur = True
                    End If
                Next
                If (blnFindCur = False) Then
                    frmSCEdit.cboSCCur.AddItem g_typAryCBInfoEdit(intCount).m_strCurrency
                End If
            Else
                frmSCEdit.cboSCCur.AddItem g_typAryCBInfoEdit(intCount).m_strCurrency
            End If
            blnFindCur = False
        Next
    End If
    If (g_blnBBNoArray = False) Then
        For intCount = LBound(g_typAryBBInfoEdit) To UBound(g_typAryBBInfoEdit)
            If (frmSCEdit.cboSCCur.ListCount > 0) Then
                For intListCount = 0 To frmSCEdit.cboSCCur.ListCount - 1
                    If (frmSCEdit.cboSCCur.List(intListCount) = g_typAryBBInfoEdit(intCount).m_strCurrency) Then
                        blnFindCur = True
                    End If
                Next
                If (blnFindCur = False) Then
                    frmSCEdit.cboSCCur.AddItem g_typAryBBInfoEdit(intCount).m_strCurrency
                End If
            Else
                frmSCEdit.cboSCCur.AddItem g_typAryBBInfoEdit(intCount).m_strCurrency
            End If
            blnFindCur = False
        Next
    End If
    frmSCEdit.cboSCCur.ListIndex = 0
    
    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b5||fffd|A|fffd||fffd||fffd|[|fffd|h
    frmSCEdit.Caption = c_strNAME_SYSTEM
    frmSCEdit.Show
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DBUPDATE|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd|y|fffd|[|fffd|W|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|ADB|fffd|X|fffd|V|fffd||590||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd|
'   (2)|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|z|fffd||fffd||24d||110||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/26 : knowlbo Nakarai : UseRemittance|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub btnDecide_Click()

    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim blnNKBankData As Boolean    ''NKMainUse|fffd||fffd|BANKBOOK|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    
    ''|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnNKBankData = False
    
    ''Cancel|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnBtnCancel = False
    
    ''PROJECTPAGE|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (fg_InputCheck(txtPJTOfficeCode.Value, "Office Code No.", 0, 7) = True) Then
        MultiPage1.Value = 0
        txtPJTOfficeCode.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTCode.Value, "Project Code No.", 0, 10) = True) Then
        MultiPage1.Value = 0
        txtPJTCode.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTName.Value, "Project Name", 0, 128) = True) Then
        MultiPage1.Value = 0
        txtPJTName.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTCont.Value, "Contract Amount / Full Contract", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTCont.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTContNK.Value, "NK Portion / Full Contract", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTContNK.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTContASO.Value, "Associates Portion / Full Contract", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTContASO.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTPerCont.Value, "Contract Amount / % OF ADV", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTPerCont.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTPerNK.Value, "NK Portion / % OF ADV", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTPerNK.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTPerASO.Value, "Associates Portion / % OF ADV", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTPerASO.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTAdvan.Value, "Contract Amount / Advance Payment", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTAdvan.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTAdvanNK.Value, "NK Portion / Advance Payment", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTAdvanNK.SetFocus
        Exit Sub
    ElseIf (fg_InputCheck(txtPJTAdvanASO.Value, "Associates Portion / Advance Payment", 1) = True) Then
        MultiPage1.Value = 0
        txtPJTAdvanASO.SetFocus
        Exit Sub
    End If
    
    ''PROJECT|fffd||313||fffd||fffd||34f||fffd||fffd|CHECK
    ''OFFICE CODE|fffd||310||64ea||fffd||fffd||fffd||fffd|,LENGTH|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (Left$(UCase$(txtPJTOfficeCode.Value), 1) <> "J") Or _
                            (Len(txtPJTOfficeCode.Value) <> 7) Then
        MsgBox c_strMSG_NOOFFICECODE, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        MultiPage1.Value = 0
        txtPJTOfficeCode.SetFocus
        Exit Sub
    End If
' 2003/3/19 Nakarai PROJECTCODE|fffd||30c||fffd||fffd||fffd|CHECK|fffd|p|fffd|~ >>
'''    ''PROJECT CODE|fffd||fffd|LENGTH|fffd||fffd|CHECK
'''    If (Len(txtPJTCode.Value) <> 10) Then
'''        MsgBox c_strMSGCmn_NOPROJECTCODE, vbOKOnly + vbCritical, c_strNAME_SYSTEM
'''        MultiPage1.Value = 0
'''        txtPJTCode.SetFocus
'''        Exit Sub
'''    End If
' 2003/3/19 Nakarai PROJECTCODE|fffd||30c||fffd||fffd||fffd|CHECK|fffd|p|fffd|~ <<
    
    ''PROJECT|fffd|y|fffd|[|fffd|W|fffd||315||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    s_CheckPJTPage
    
    ''PROJECT|fffd||fffd||752||80b5||fffd||202||fffd||fffd||a347|
    If (m_blnNoPJT = True) Then Exit Sub
    
    ''USEREMITTANCE|fffd||fffd|1|fffd||82||142||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (g_blnBBNoArray = False) Then
        ''NKMainUse|fffd||fffd|BANKBOOK|fffd||fffd||fffd||fffd||fffd||90a9||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        For intCount = LBound(g_typAryBBInfoEdit) To UBound(g_typAryBBInfoEdit)
            If (g_typAryBBInfoEdit(intCount).m_intPurpose = 0) Then
                blnNKBankData = True
            End If
        Next
    End If
    If (g_blnBBNoArray = False) And (blnNKBankData = True) Then
        If (g_blnUseRemit = False) Then
            MsgBox c_strMSGCmn_NOUSEREMIT, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            MultiPage1.Value = 2
            Exit Sub
        Else
            ''REMITTANCE|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N(USEREMITTANCE|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||182||fffd||fffd||355|K|fffd|{)
            If Not (txtRTRequest1.Value <> "" Or txtRTRequest2.Value <> "" Or _
                                            txtRTRequest3.Value <> "") Then
                MultiPage1.Value = 7
                MsgBox c_strMSGCmn_NOREQUEST, vbOKOnly + vbCritical, c_strNAME_SYSTEM
                Exit Sub
            Else
                If (fg_InputCheck(txtRTRequest1.Value, "Request1", 3, 64) = True) Then
                    txtRTRequest1.SetFocus
                    Exit Sub
                End If
                If (fg_InputCheck(txtRTRequest2.Value, "Request2", 3, 64) = True) Then
                    txtRTRequest2.SetFocus
                    Exit Sub
                End If
                If (fg_InputCheck(txtRTRequest3.Value, "Request3", 3, 64) = True) Then
                    txtRTRequest3.SetFocus
                    Exit Sub
                End If
            End If
            If Not (txtRTAdvice.Value <> "") Then
                MultiPage1.Value = 7
                MsgBox c_strMSGCmn_NOADVICE, vbOKOnly + vbCritical, c_strNAME_SYSTEM
                Exit Sub
            Else
                If (fg_InputCheck(txtRTAdvice.Value, "AdviceTo", 3, 64) = True) Then
                    txtRTAdvice.SetFocus
                    Exit Sub
                End If
            End If
        End If
    End If
    
    ''REMITTANCE|fffd|y|fffd|[|fffd|W|fffd||315||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    s_CheckRTPage
    
    sg_SetScreenUpdate False
    
    ''|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Dim strValue As String
    strValue = CStr(txtPJTOfficeCode.Value)
    g_strOfficeCode = strValue
    
    
    ''|fffd||3cd|X|fffd||fffd||fffd||a0bd||fffd||fffd||fffd|e|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd|A|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    If (f_UpdateMasterInfo = True) Then
        
        ''|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd|Q|fffd||fffd|
        sg_GetMasterInfo
        
        
        ''|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
        s_EraseEditArray
        
        Unload Me
    End If
    sg_SetScreenUpdate True
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Master|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Master|fffd||fffd||fffd||fffd||fffd||343|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/10 : Knowlbo Nakarai : |fffd||3cd|X|fffd|E|fffd||1c9||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||30f||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub btnCancel_Click()
        
    ''Cancel|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|TRUE|fffd||242||fffd||fffd||fffd|
    m_blnBtnCancel = True
    
    ''PROJECT|fffd|y|fffd|[|fffd|W|fffd||315||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    s_CheckPJTPage
    
    ''REMITTANCE|fffd|y|fffd|[|fffd|W|fffd||315||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    s_CheckRTPage
    
    ''|fffd||3cd|X|fffd|E|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd|A|fffd||202||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
    If (g_blnCBBtnOk = True Or g_blnBBBtnOk = True Or g_blnWBSBtnOk = True Or _
            m_blnEditPJT = True Or g_blnASBtnOk = True Or g_blnSCBtnOk = True Or _
                m_blnEditRemit) Then
        If MsgBox(c_strQUESTION_SAVE, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbCancel Then
            Exit Sub
        End If
    End If
        
    ''|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    s_EraseEditArray
    Unload Me
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CashBook|fffd||fffd||43283|X|fffd|g|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||a347||fffd|ACashBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/17 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CBList_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If Not (CBList.ListIndex = -1) Then
        Call btnCBEdit_Click
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd||fffd||43283|X|fffd|g|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||a347||fffd|ABankBook|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/18 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub BBList_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If Not (BBList.ListIndex = -1) Then
        Call btnBBEdit_Click
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd||fffd||43283|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|I|fffd||fffd|WBSCODE|fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/18 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub WBSList_Click()
    Dim intWBSList As Integer
    intWBSList = WBSList.ListIndex
    If Not (intWBSList = -1) Then
        txtWBSCode.Value = g_typAryWBSCodeEdit(intWBSList).m_strCode
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Associate|fffd||fffd||43283|X|fffd|g|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||a347||fffd|AAssociate|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/18 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub ASList_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If Not (ASList.ListIndex = -1) Then
        Call btnASEdit_Click
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Sub-Contractor|fffd||fffd||43283|X|fffd|g|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||a347||fffd|ASub-Contractor|fffd||fffd||fffd||fffd||fffd||343|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/18 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub SCList_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If Not (SCList.ListIndex = -1) Then
        Call btnSCEdit_Click
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|}|fffd||fffd||fffd|`|fffd|y|fffd|[|fffd|W|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|X|fffd|g|fffd||30d||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||381|A|fffd||64ea||fffd||30d||fffd||fffd||682||fffd|I|fffd||fffd||fffd||fffd||502||242||fffd||fffd||fffd|
'   (2)|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||fffd||fffd||202||fffd||fffd||fffd||381|A|fffd||38f||6c3|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/16 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub MultiPage1_Change()
    Select Case MultiPage1.Value
        Case 0  ''PROJECT
        Case 1  ''CASHBOOK
            If (CBList.ListCount <> 0) Then
                CBList.Selected(0) = True
            End If
        Case 2  ''BANKBOOK
            If (BBList.ListCount <> 0) Then
                BBList.Selected(0) = True
            End If
        Case 3
            ''|fffd||fffd||fffd||fffd|Transfer|fffd||34c||fffd||42d41||fffd||fffd||fffd|
        Case 4
            If (WBSList.ListCount <> 0) Then
                WBSList.Selected(0) = True
            End If
        Case 5
            If (ASList.ListCount <> 0) Then
                ASList.Selected(0) = True
            End If
        Case 6
            If (SCList.ListCount <> 0) Then
                SCList.Selected(0) = True
            End If
    End Select
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||289||74f||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> LedgerType
'   (2)<Integer |fffd|^> |fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||289||74f||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub s_GetCurInfo(intPageNo As Integer, Optional intItemIndex As Integer)
    
    Dim intIx As Integer
    Dim intCurCount As Integer      ''|fffd|I|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd|Currency|fffd||18d||fffd||fffd|v|fffd||fffd||fffd||fffd||289||742||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim ctlCurCombo As ComboBox     ''|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
    Dim strCur As String            ''|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|Currency
    Dim blnASCur As Boolean         ''Associate|fffd||312||289||750||752||fffd||302||fffd||fffd||7c2||303|t|fffd||fffd||fffd|O

    ''|fffd||289||74f||fffd||fffd||64fe|
    Select Case intPageNo
        Case 0
            Set ctlCurCombo = frmCBEdit.cboCBCur
            If (g_blnBtnAdd = False) Then
                strCur = g_typAryCBInfoEdit(intItemIndex).m_strCurrency
            End If
        Case 1
            Set ctlCurCombo = frmBBEdit.cboBBCur
            If (g_blnBtnAdd = False) Then
                strCur = g_typAryBBInfoEdit(intItemIndex).m_strCurrency
            End If
        Case 2
            Set ctlCurCombo = frmASEdit.cboASCur
            strCur = cboPJTCur.Value
            blnASCur = True
        Case 3
            Set ctlCurCombo = frmSCEdit.cboSCCur
            If (g_blnBtnAdd = False) Then
                strCur = g_typArySConInfoEdit(intItemIndex).m_strCurrency
            End If
        Case 4
            Set ctlCurCombo = cboPJTCur
            If (g_blnBtnAdd = False) Then
                strCur = g_typAryPJTInfoEdit(intItemIndex).m_strCurrency
            End If
    End Select
    
    For intIx = 0 To g_lngCurrencyCount - 1
        If (g_blnBtnAdd = False) Or (blnASCur = True) Then  ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            If g_strAryCurrencyCode(intIx) = strCur Then
                intCurCount = intIx
            End If
        End If
        ctlCurCombo.AddItem g_strAryCurrencyCode(intIx)
    Next
    
    If blnASCur = False Then
        ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||341|A|fffd||fffd||fffd|X|fffd|g|fffd||30d||fffd||fffd||682||fffd|Currency|fffd||fffd||fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|\|fffd||fffd|
        If (g_blnBtnAdd = False) Then       ''Edit|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            ctlCurCombo.ListIndex = intCurCount
        ElseIf (g_blnBtnAdd = True) Then    ''Add|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347|
            ctlCurCombo.ListIndex = 0
        End If
    Else
        ctlCurCombo.ListIndex = intCurCount
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> LedgerType
'   (2)<Integer |fffd|^> |fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd|y|fffd|[|fffd|W|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|DB|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||742||702||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/10/02 : Knowlbo Nakarai : BankBook,WBSCode,Project,Associate|fffd||fffd||fffd|X|fffd|V|fffd||fffd||1c9||fffd|
'   2002/10/03 : Knowlbo Nakarai : Sub-Contactor|fffd||fffd||fffd||30d|X|fffd|V|fffd||fffd||1c9||fffd|
'   2002/10/09 : Knowlbo Nakarai : |fffd|X|fffd|V|fffd||fffd||fffd||8f217||fffd||fffd||fffd||1c9||fffd|
'   2002/12/26 : Knowlbo Nakarai : |fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||fffd||1c9||fffd|(OfficeCode,UpDateDate)
'   2002/01/03 : Knowlbo Nakarai : UpdateDate|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Function f_UpdateMasterInfo() As Boolean
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim intCount As Integer
    Dim strMSG As String
    Dim strValue As String
    Dim datPrNow As Date
    
     datPrNow = Now()
   
    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If g_blnCBBtnOk Or g_blnBBBtnOk Or g_blnWBSBtnOk Or _
        m_blnEditPJT Or g_blnASBtnOk Or g_blnSCBtnOk Or m_blnEditRemit Then
        ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
        If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
            f_UpdateMasterInfo = False
            Exit Function
        End If
    Else
        MsgBox c_strMSG_NOEDIT, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        f_UpdateMasterInfo = False
        Exit Function
    End If

    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    If g_blnCBBtnOk Then   ''CashBook|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_CBMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CBMaster
            GoTo LBL_ERR
        End If
        For intCount = 0 To UBound(g_typAryCBInfoEdit)
            If (g_typAryCBInfoEdit(intCount).m_blnDirty = True) Then
                adoRs.Filter = adFilterNone
                adoRs.Filter = "LedgerCode=" & fg_AddSingleQuotation(g_typAryCBInfoEdit(intCount).m_strCode)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setCBMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_CBMaster
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("LedgerCode").Value = g_typAryCBInfoEdit(intCount).m_strCode
                adoRs.Fields("Currency").Value = g_typAryCBInfoEdit(intCount).m_strCurrency
                adoRs.Fields("Casher").Value = g_typAryCBInfoEdit(intCount).m_strCasher
                adoRs.Fields("Purpose").Value = CStr(g_typAryCBInfoEdit(intCount).m_intPurpose)
                If g_typAryCBInfoEdit(intCount).m_strMemo <> "" Then
                    adoRs.Fields("Memo").Value = g_typAryCBInfoEdit(intCount).m_strMemo
                Else
                    adoRs.Fields("Memo").Value = Null
                End If
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        g_blnCBBtnOk = False
    End If

    If g_blnBBBtnOk Then   ''BankBook|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_BBMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BBMaster
            GoTo LBL_ERR
        End If
        For intCount = 0 To UBound(g_typAryBBInfoEdit)
            If (g_typAryBBInfoEdit(intCount).m_blnDirty = True) Then
                adoRs.Filter = adFilterNone
                adoRs.Filter = "LedgerCode=" & fg_AddSingleQuotation(g_typAryBBInfoEdit(intCount).m_strCode)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setBBMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_BBMaster
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("LedgerCode").Value = g_typAryBBInfoEdit(intCount).m_strCode
                adoRs.Fields("Currency").Value = g_typAryBBInfoEdit(intCount).m_strCurrency
                adoRs.Fields("BankName").Value = g_typAryBBInfoEdit(intCount).m_strName
                adoRs.Fields("BranchName").Value = g_typAryBBInfoEdit(intCount).m_strBranch
                adoRs.Fields("Address").Value = g_typAryBBInfoEdit(intCount).m_strAdress
                adoRs.Fields("AccountType").Value = g_typAryBBInfoEdit(intCount).m_strAccountType
                adoRs.Fields("AccountNo").Value = g_typAryBBInfoEdit(intCount).m_strAccountNo
                adoRs.Fields("BeneficiaryName").Value = g_typAryBBInfoEdit(intCount).m_strBeneficiaryName
                adoRs.Fields("Signer").Value = g_typAryBBInfoEdit(intCount).m_strSigner
                If (g_typAryBBInfoEdit(intCount).m_blnUseRemittance = True) Then
                    adoRs.Fields("UseRemittance").Value = "1"
                Else
                    adoRs.Fields("UseRemittance").Value = "0"
                End If
                adoRs.Fields("Purpose").Value = CStr(g_typAryBBInfoEdit(intCount).m_intPurpose)
                If g_typAryBBInfoEdit(intCount).m_strMemo <> "" Then
                    adoRs.Fields("Memo").Value = g_typAryBBInfoEdit(intCount).m_strMemo
                Else
                    adoRs.Fields("Memo").Value = Null
                End If
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        g_blnBBBtnOk = False
    End If

    If g_blnTRInput Then   ''Transfer|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_TRMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_TRMaster
            GoTo LBL_ERR
        End If
        For intCount = 0 To UBound(g_typAryTRInfoEdit)
            If (g_typAryTRInfoEdit(intCount).m_blnDirty = True) Then
                
                adoRs.Filter = adFilterNone
                adoRs.Filter = "LedgerCode=" & fg_AddSingleQuotation(g_typAryTRInfoEdit(intCount).m_strCode)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setTRMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_TRMaster
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("LedgerCode").Value = g_typAryTRInfoEdit(intCount).m_strCode
                adoRs.Fields("Currency").Value = g_typAryTRInfoEdit(intCount).m_strCurrency
                If g_typAryTRInfoEdit(intCount).m_strDescript <> "" Then
                    adoRs.Fields("Description").Value = g_typAryTRInfoEdit(intCount).m_strDescript
                Else
                    adoRs.Fields("Description").Value = Null
                End If
                adoRs.Fields("Purpose").Value = CStr(g_typAryTRInfoEdit(intCount).m_intPurpose)
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        g_blnTRInput = False
    End If

    If g_blnASBtnOk Then   ''Associate|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
            GoTo LBL_ERR
        End If
        For intCount = 0 To UBound(g_typAryAsoInfoEdit)
            If (g_typAryAsoInfoEdit(intCount).m_blnDirty = True) Then
                adoRs.Filter = adFilterNone
                adoRs.Filter = "AssociateCode=" & fg_AddSingleQuotation(g_typAryAsoInfoEdit(intCount).m_strCode)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setAssociateMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ASMaster
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("AssociateCode").Value = g_typAryAsoInfoEdit(intCount).m_strCode
                adoRs.Fields("AssociateName").Value = g_typAryAsoInfoEdit(intCount).m_strName
                adoRs.Fields("ContractAmount").Value = g_typAryAsoInfoEdit(intCount).m_curContract
                adoRs.Fields("ContractAdvance").Value = g_typAryAsoInfoEdit(intCount).m_curAdvance
                adoRs.Fields("Currency").Value = g_typAryAsoInfoEdit(intCount).m_strCurrency
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        g_blnASBtnOk = False
    End If
    
    If g_blnSCBtnOk Then   ''Sub-Contractor|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
            GoTo LBL_ERR
        End If
        For intCount = 0 To UBound(g_typArySConInfoEdit)
            If (g_typArySConInfoEdit(intCount).m_blnDirty = True) Then
                adoRs.Filter = adFilterNone
                adoRs.Filter = "SubConCode=" & fg_AddSingleQuotation(g_typArySConInfoEdit(intCount).m_strCode)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setSubConMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SCMaster
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("SubConCode").Value = g_typArySConInfoEdit(intCount).m_strCode
                adoRs.Fields("SubConName").Value = g_typArySConInfoEdit(intCount).m_strName
                adoRs.Fields("ContractAmount").Value = g_typArySConInfoEdit(intCount).m_curContract
                adoRs.Fields("ContractAdvance").Value = g_typArySConInfoEdit(intCount).m_curAdvance
                adoRs.Fields("Currency").Value = g_typArySConInfoEdit(intCount).m_strCurrency
                adoRs.Fields("Reimbursable").Value = CStr(g_typArySConInfoEdit(intCount).m_intReimbursable)
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        g_blnSCBtnOk = False
    End If
    
    If m_blnEditRemit Then ''Remittance|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_RMMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        adoRs.Filter = ""
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RMMaster
            GoTo LBL_ERR
        End If
        ''|fffd|z|fffd||fffd||24a|i|fffd|[
        g_typAryRTInfoEdit(0).m_strRequestTo1 = CStr(txtRTRequest1.Value)
        g_typAryRTInfoEdit(0).m_strRequestTo2 = CStr(txtRTRequest2.Value)
        g_typAryRTInfoEdit(0).m_strRequestTo3 = CStr(txtRTRequest3.Value)
        g_typAryRTInfoEdit(0).m_strAdviceTo = CStr(txtRTAdvice.Value)
        
        ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setRMMasterHistorySQLString(adoRs, datPrNow)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RMMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = g_strOfficeCode
        If g_typAryRTInfoEdit(0).m_strRequestTo1 <> "" Then
            adoRs.Fields("RequestTo1").Value = g_typAryRTInfoEdit(0).m_strRequestTo1
        Else
            adoRs.Fields("RequestTo1").Value = Null
        End If
        If g_typAryRTInfoEdit(0).m_strRequestTo2 <> "" Then
            adoRs.Fields("RequestTo2").Value = g_typAryRTInfoEdit(0).m_strRequestTo2
        Else
            adoRs.Fields("RequestTo2").Value = Null
        End If
        If g_typAryRTInfoEdit(0).m_strRequestTo3 <> "" Then
            adoRs.Fields("RequestTo3").Value = g_typAryRTInfoEdit(0).m_strRequestTo3
        Else
            adoRs.Fields("RequestTo3").Value = Null
        End If
        If g_typAryRTInfoEdit(0).m_strAdviceTo <> "" Then
            adoRs.Fields("AdviceTo").Value = g_typAryRTInfoEdit(0).m_strAdviceTo
        Else
            adoRs.Fields("AdviceTo").Value = Null
        End If
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        m_blnEditRemit = False
    End If

    If g_blnWBSBtnOk Then  ''WBSCode|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_WBSMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_WBSMaster
            GoTo LBL_ERR
        End If
        For intCount = 0 To UBound(g_typAryWBSCodeEdit)
            If (g_typAryWBSCodeEdit(intCount).m_blnDirty = True) Then
                adoRs.Filter = adFilterNone
                adoRs.Filter = "ID=" & g_typAryWBSCodeEdit(intCount).m_lngID
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setWBSMasterHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_WBSMaster
                        GoTo LBL_ERR
                    End If
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                End If
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode
                adoRs.Fields("ID").Value = g_typAryWBSCodeEdit(intCount).m_lngID
                adoRs.Fields("WBSCode").Value = g_typAryWBSCodeEdit(intCount).m_strCode
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
            End If
        Next
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
        g_blnWBSBtnOk = False
    End If

    If m_blnEditPJT Then      ''Project|fffd|\|fffd||fffd||fffd||fffd||4f442||fffd||fffd||fffd||fffd||fffd|
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PJTMaster & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PJTMaster
            GoTo LBL_ERR
        End If
            
        adoRs.Filter = adFilterNone
        adoRs.Filter = "ProjectCode=" & fg_AddSingleQuotation(g_typAryPJTInfoEdit(0).m_strPJTCode)
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPJTMasterHistorySQLString(adoRs, datPrNow)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PJTMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        g_typAryPJTInfoEdit(0).m_strOfficeCode = CStr(UCase$(txtPJTOfficeCode.Value))
        g_typAryPJTInfoEdit(0).m_strPJTCode = CStr(UCase$(txtPJTCode.Value))
        g_typAryPJTInfoEdit(0).m_strPJTName = txtPJTName.Value
        g_typAryPJTInfoEdit(0).m_intPaymentMethod = cboPJTPayment.ListIndex
        g_typAryPJTInfoEdit(0).m_strCurrency = cboPJTCur.Value
        g_typAryPJTInfoEdit(0).m_curContract = txtPJTCont.Value
        g_typAryPJTInfoEdit(0).m_curContractNK = txtPJTContNK.Value
        g_typAryPJTInfoEdit(0).m_curContractASO = txtPJTContASO.Value
        g_typAryPJTInfoEdit(0).m_curPerCont = txtPJTPerCont.Value
        g_typAryPJTInfoEdit(0).m_curPerNK = txtPJTPerNK.Value
        g_typAryPJTInfoEdit(0).m_curPerASO = txtPJTPerASO.Value
        g_typAryPJTInfoEdit(0).m_curAdvance = txtPJTAdvan.Value
        g_typAryPJTInfoEdit(0).m_curAdvanceNK = txtPJTAdvanNK.Value
        g_typAryPJTInfoEdit(0).m_curAdvanceASO = txtPJTAdvanASO.Value
        
        adoRs.Fields("OfficeCode").Value = g_strOfficeCode
        adoRs.Fields("ProjectCode").Value = g_typAryPJTInfoEdit(0).m_strPJTCode
        adoRs.Fields("ProjectName").Value = g_typAryPJTInfoEdit(0).m_strPJTName
        adoRs.Fields("Currency").Value = g_typAryPJTInfoEdit(0).m_strCurrency
        adoRs.Fields("PaymentMethod").Value = CStr(g_typAryPJTInfoEdit(0).m_intPaymentMethod)
        adoRs.Fields("Contract").Value = g_typAryPJTInfoEdit(0).m_curContract
        adoRs.Fields("ContractNK").Value = g_typAryPJTInfoEdit(0).m_curContractNK
        adoRs.Fields("ContractASO").Value = g_typAryPJTInfoEdit(0).m_curContractASO
        adoRs.Fields("PerCont").Value = g_typAryPJTInfoEdit(0).m_curPerCont
        adoRs.Fields("PerNK").Value = g_typAryPJTInfoEdit(0).m_curPerNK
        adoRs.Fields("PerASO").Value = g_typAryPJTInfoEdit(0).m_curPerASO
        adoRs.Fields("Advance").Value = g_typAryPJTInfoEdit(0).m_curAdvance
        adoRs.Fields("AdvanceNK").Value = g_typAryPJTInfoEdit(0).m_curAdvanceNK
        adoRs.Fields("AdvanceASO").Value = g_typAryPJTInfoEdit(0).m_curAdvanceASO
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        m_blnEditPJT = False
        cboPJTCur.Enabled = False        ''|fffd||289||742||303|R|fffd||fffd||fffd|{|fffd||fffd||48f|W|fffd|s|fffd||82||242||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        Call objdba.closeRecordset(adoRs)
    End If

    Call objdba.commitTransaction(adoCn)
    On Error GoTo 0
    
    Call objdba.closeADOConnection(adoCn)
    f_UpdateMasterInfo = True    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||750||fffd||fffd||fffd|
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
    
LBL_ERR:
    f_UpdateMasterInfo = False
    Call objdba.rollbackTransaction(adoCn)
    If Not adoRs Is Nothing Then adoRs.Filter = adFilterNone
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpdateMasterInfo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    
    sg_MsgBoxError "f_UpdateMasterInfo", strMSG
    
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PROJECT|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_CheckPJTPage()
    
    ''PROJECT|fffd|y|fffd|[|fffd|W|fffd||313||fffd||fffd|e|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (txtPJTOfficeCode.Value <> g_typAryPJTInfoEdit(0).m_strOfficeCode Or _
        txtPJTCode.Value <> g_typAryPJTInfoEdit(0).m_strPJTCode Or _
        txtPJTName.Value <> g_typAryPJTInfoEdit(0).m_strPJTName Or _
        cboPJTPayment.ListIndex <> g_typAryPJTInfoEdit(0).m_intPaymentMethod Or _
        cboPJTCur.Value <> g_typAryPJTInfoEdit(0).m_strCurrency Or _
        txtPJTCont.Value <> g_typAryPJTInfoEdit(0).m_curContract Or _
        txtPJTContNK.Value <> g_typAryPJTInfoEdit(0).m_curContractNK Or _
        txtPJTContASO.Value <> g_typAryPJTInfoEdit(0).m_curContractASO Or _
        txtPJTPerCont.Value <> g_typAryPJTInfoEdit(0).m_curPerCont Or _
        txtPJTPerNK.Value <> g_typAryPJTInfoEdit(0).m_curPerNK Or _
        txtPJTPerASO.Value <> g_typAryPJTInfoEdit(0).m_curPerASO Or _
        txtPJTAdvan.Value <> g_typAryPJTInfoEdit(0).m_curAdvance Or _
        txtPJTAdvanNK.Value <> g_typAryPJTInfoEdit(0).m_curAdvanceNK Or _
        txtPJTAdvanASO.Value <> g_typAryPJTInfoEdit(0).m_curAdvanceASO) Then
        
        ''Cancel|fffd|{|fffd|^|fffd||fffd||fffd||30f||a347||fffd||242||355|K|fffd|v|fffd||202||fffd||fffd||fffd||fffd||fffd|
        If (m_blnBtnCancel = False) Then
            If (m_blnNoPJT = True) Then   ''PROJECT|fffd||fffd||fffd||702||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347|
                If (MsgBox(c_strMSG_CREATEPJT, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbCancel) Then
                    ''|fffd||752||80b5||fffd||202||fffd|
                    m_blnNoPJT = True
                Else
                    ''PROJECT|fffd||fffd||752||80b7||fffd||fffd||302||fffd|FALSE|fffd||242||fffd||fffd||fffd|
                    m_blnNoPJT = False
                End If
            End If
        End If
        
        ''PROJECT|fffd||315||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||fffd|TRUE|fffd||242||fffd||fffd||fffd|
        m_blnEditPJT = True
    End If
    
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   REMITTANCE|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|X|fffd|V|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_CheckRTPage()

    ''REMITTANCE|fffd|y|fffd|[|fffd|W|fffd||313||fffd||fffd|e|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (txtRTRequest1.Value <> g_typAryRTInfoEdit(0).m_strRequestTo1 Or _
        txtRTRequest2.Value <> g_typAryRTInfoEdit(0).m_strRequestTo2 Or _
        txtRTRequest3.Value <> g_typAryRTInfoEdit(0).m_strRequestTo3 Or _
        txtRTAdvice.Value <> g_typAryRTInfoEdit(0).m_strAdviceTo) Then
        
        m_blnEditRemit = True
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|z|fffd||fffd||fffd|ERASE|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|z|fffd||fffd||312||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/11/01 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_EraseEditArray()

    Erase g_typAryCBInfoEdit
    Erase g_typAryBBInfoEdit
    Erase g_typAryTRInfoEdit
    Erase g_typAryAsoInfoEdit
    Erase g_typArySConInfoEdit
    Erase g_typAryRTInfoEdit
    Erase g_typAryWBSCodeEdit
    Erase g_typAryPJTInfoEdit
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Master|fffd|z|fffd||fffd|(EDIT)|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GCMN_MSTARY |fffd|^> |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||4ebd5||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Master|fffd||310|V|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/25 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetNewArray(enmValue As GCMN_MSTARY)

    Select Case enmValue
        Case GCMN_CB
            ReDim Preserve g_typAryCBInfoEdit(0)
            g_typAryCBInfoEdit(0).m_strCode = ""
            g_typAryCBInfoEdit(0).m_strCurrency = ""
            g_typAryCBInfoEdit(0).m_strCasher = ""
            g_typAryCBInfoEdit(0).m_intPurpose = 0
            g_typAryCBInfoEdit(0).m_strMemo = ""
            g_typAryCBInfoEdit(0).m_blnDirty = False
            ''|fffd|z|fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
            g_blnCBNoArray = True
            btnCBEdit.Enabled = False
        Case GCMN_BB
            ReDim Preserve g_typAryBBInfoEdit(0)
            g_typAryBBInfoEdit(0).m_strCode = ""
            g_typAryBBInfoEdit(0).m_strCurrency = ""
            g_typAryBBInfoEdit(0).m_strName = ""
            g_typAryBBInfoEdit(0).m_strBranch = ""
            g_typAryBBInfoEdit(0).m_strAdress = ""
            g_typAryBBInfoEdit(0).m_strAccountType = ""
            g_typAryBBInfoEdit(0).m_strAccountNo = ""
            g_typAryBBInfoEdit(0).m_strBeneficiaryName = ""
            g_typAryBBInfoEdit(0).m_strSigner = ""
            g_typAryBBInfoEdit(0).m_blnUseRemittance = False
            g_typAryBBInfoEdit(0).m_intPurpose = 0
            g_typAryBBInfoEdit(0).m_strMemo = ""
            g_typAryBBInfoEdit(0).m_blnDirty = False
            ''|fffd|z|fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
            g_blnBBNoArray = True
            btnBBEdit.Enabled = False
        Case GCMN_AS
            ReDim Preserve g_typAryAsoInfoEdit(0)
            g_typAryAsoInfoEdit(0).m_strCode = ""
            g_typAryAsoInfoEdit(0).m_strName = ""
            g_typAryAsoInfoEdit(0).m_curContract = 0
            g_typAryAsoInfoEdit(0).m_curAdvance = 0
            g_typAryAsoInfoEdit(0).m_strCurrency = ""
            g_typAryAsoInfoEdit(0).m_blnDirty = False
            btnASEdit.Enabled = False
        Case GCMN_SC
            ReDim Preserve g_typArySConInfoEdit(0)
            g_typArySConInfoEdit(0).m_strCode = ""
            g_typArySConInfoEdit(0).m_strName = ""
            g_typArySConInfoEdit(0).m_curContract = 0
            g_typArySConInfoEdit(0).m_curAdvance = 0
            g_typArySConInfoEdit(0).m_strCurrency = ""
            g_typArySConInfoEdit(0).m_intReimbursable = 0
            g_typArySConInfoEdit(0).m_blnDirty = False
            btnSCEdit.Enabled = False
        Case GCMN_CP
            ReDim Preserve g_typAryRTInfoEdit(0)
            g_typAryRTInfoEdit(0).m_strRequestTo1 = ""
            g_typAryRTInfoEdit(0).m_strRequestTo2 = ""
            g_typAryRTInfoEdit(0).m_strRequestTo3 = ""
            g_typAryRTInfoEdit(0).m_strAdviceTo = ""
            
            txtRTRequest1.Value = g_typAryRTInfoEdit(0).m_strRequestTo1
            txtRTRequest2.Value = g_typAryRTInfoEdit(0).m_strRequestTo2
            txtRTRequest3.Value = g_typAryRTInfoEdit(0).m_strRequestTo3
            txtRTAdvice.Value = g_typAryRTInfoEdit(0).m_strAdviceTo
        Case GCMN_WB
            ReDim Preserve g_typAryWBSCodeEdit(0)
            g_typAryWBSCodeEdit(0).m_lngID = 0
            g_typAryWBSCodeEdit(0).m_strCode = ""
            g_typAryWBSCodeEdit(0).m_blnDirty = False
            btnWBSEditOK.Enabled = False
        Case GCMN_PJ
            ReDim Preserve g_typAryPJTInfoEdit(0)
            ''2003/03/12 Sho OfficeCode|fffd||302||750||752||80b7||fffd||fffd|
            g_typAryPJTInfoEdit(0).m_strOfficeCode = g_strOfficeCode
            'g_typAryPJTInfoEdit(0).m_strOfficeCode = ""
            g_typAryPJTInfoEdit(0).m_strPJTCode = ""
            g_typAryPJTInfoEdit(0).m_strPJTName = ""
            g_typAryPJTInfoEdit(0).m_intPaymentMethod = 0
            g_typAryPJTInfoEdit(0).m_strCurrency = "ADP"
            g_typAryPJTInfoEdit(0).m_curContract = 0
            g_typAryPJTInfoEdit(0).m_curContractNK = 0
            g_typAryPJTInfoEdit(0).m_curContractASO = 0
            g_typAryPJTInfoEdit(0).m_curPerCont = 0
            g_typAryPJTInfoEdit(0).m_curPerNK = 0
            g_typAryPJTInfoEdit(0).m_curPerASO = 0
            g_typAryPJTInfoEdit(0).m_curAdvance = 0
            g_typAryPJTInfoEdit(0).m_curAdvanceNK = 0
            g_typAryPJTInfoEdit(0).m_curAdvanceASO = 0
            ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
            txtPJTOfficeCode.Value = g_typAryPJTInfoEdit(0).m_strOfficeCode
            txtPJTCode.Value = g_typAryPJTInfoEdit(0).m_strPJTCode
            txtPJTName.Value = g_typAryPJTInfoEdit(0).m_strPJTName
            ''|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||253||fffd||fffd|e|fffd||fffd||752||fffd|
            With cboPJTPayment
                .AddItem c_strInvPaymentMonth
                .AddItem c_strInvPaymentSched
            End With
            If g_typAryPJTInfoEdit(0).m_intPaymentMethod = 0 Then
                cboPJTPayment.ListIndex = 0
            Else
                cboPJTPayment.ListIndex = 1
            End If
            ''|fffd||289||74f||fffd||fffd||fffd||fffd||64fe| ----
            ''Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|(|fffd||fffd||fffd||303|y|fffd|[|fffd|W|fffd||fffd|Add|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd|)
            g_blnBtnAdd = True
            s_GetCurInfo 4
            ''------------------
            txtPJTCont.Value = g_typAryPJTInfoEdit(0).m_curContract
            txtPJTContNK.Value = g_typAryPJTInfoEdit(0).m_curContractNK
            txtPJTContASO.Value = g_typAryPJTInfoEdit(0).m_curContractASO
            txtPJTPerCont.Value = g_typAryPJTInfoEdit(0).m_curPerCont
            txtPJTPerNK.Value = g_typAryPJTInfoEdit(0).m_curPerNK
            txtPJTPerASO.Value = g_typAryPJTInfoEdit(0).m_curPerASO
            txtPJTAdvan.Value = g_typAryPJTInfoEdit(0).m_curAdvance
            txtPJTAdvanNK.Value = g_typAryPJTInfoEdit(0).m_curAdvanceNK
            txtPJTAdvanASO.Value = g_typAryPJTInfoEdit(0).m_curAdvanceASO
            
            txtPJTOfficeCode.Enabled = False    ''OfficeCode|fffd||355||48f|W|fffd|s|fffd||82||250||752||80b7||fffd||fffd|
            m_blnNoPJT = True            ''|fffd||702||fffd|PROJECT|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|
    End Select
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBSCode|fffd||fffd||fffd|e|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> WBSCODE
'   (2)<Long |fffd|^> Length
'   (3)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBSCode|fffd||fffd||fffd|e|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/21 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/22 : Knowlbo Nakarai : |fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_CheckWBSCode(strWBSCode As String, lngLen As Long, strMSG As String)
    
    Dim strHead As String
    Dim intCount As Integer
    
    ''|fffd||64ea||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    strHead = Left$(strWBSCode, 1)
    If (strHead = "X") Or (strHead = "Z") Then
        If (lngLen <> 7) Then
            strMSG = c_strMSGCmn_NOCOSTCODE
            f_CheckWBSCode = False
            Exit Function
        End If
    ElseIf (strHead = "Y") Then
        If (lngLen <> 8) Then
            strMSG = c_strMSGCmn_NODIRECTCODE
            f_CheckWBSCode = False
            Exit Function
        End If
    Else
        If (lngLen <> 9) Then
            strMSG = c_strMSGCmn_NOWBSCODE
            f_CheckWBSCode = False
            Exit Function
        End If
    End If
    
    ''|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    If (WBSList.ListCount > 0) Then
        For intCount = LBound(g_typAryWBSCodeEdit) To UBound(g_typAryWBSCodeEdit)
            If (g_typAryWBSCodeEdit(intCount).m_strCode = strWBSCode) Then
                strMSG = c_strMSGTr_EXISTDATA
                f_CheckWBSCode = False
                Exit Function
            End If
        Next
    End If
    
    f_CheckWBSCode = True
    
End Function

Attribute VB_Name = "frmVersion"
Attribute VB_Base = "0{81ECC349-3A21-4CEB-B98D-1D1B75376B6E}{02F3D096-7643-43D3-889E-35A521DDFFCE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Version|fffd|t|fffd|H|fffd|[|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/09 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Version|fffd|\|fffd||fffd||fffd|m|fffd|F|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:Code/1:Name
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Version|fffd|\|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub btnOK_Click()
    Unload Me
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd||fffd|F|fffd||60f||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:Code/1:Name
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd|F|fffd||602||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub lblkey_Click()
    g_blnOfficeMstModify = Not (g_blnOfficeMstModify)
    imgKey.Visible = g_blnOfficeMstModify
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    Version|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> 0:Code/1:Name
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Version|fffd|\|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'    |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub UserForm_Initialize()
    imgKey.Visible = g_blnOfficeMstModify
End Sub
Attribute VB_Name = "modConst"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||8414||fffd||fffd|`
'  |fffd||c42c||fffd||fffd|
'    Knowlbo Suzuki
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|R|fffd||fffd||fffd|p|fffd|C|fffd||fffd||fffd|X|fffd|C|fffd|b|fffd|`
'-----------------------------------------------------------------

'-----------------------------------------------------------------
'  |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||8414|
'-----------------------------------------------------------------
Public Const c_intStartYear As Integer = 2003   ''|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd|J|fffd|n|fffd|N|fffd|x

'-----------------------------------------------------------------
'  |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
' |fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd|32|fffd||fffd||fffd||fffd||fffd||702||fffd|
'Public Const c_strNAME_SYSTEM As String = "NK Finance and Accounting System"
Public Const c_strNAME_SYSTEM As String = "NKFAS_SS HeadOffice"

'-----------------------------------------------------------------
'  |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|A|fffd|p|fffd|X
'-----------------------------------------------------------------
Public Const c_strDataFolder As String = "DBData"               ''DBBook|fffd|t|fffd|H|fffd||fffd||fffd|_
Public Const c_strExportFolder As String = "Export"             ''|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|o|fffd||343|t|fffd|H|fffd||fffd||fffd|_
Public Const c_strLEDMasterFile As String = "LedgerMaster.xls"  ''|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
Public Const c_strYearMasterFile As String = "YearMaster.xlt"   ''|fffd|N|fffd|x|fffd|^|fffd|l|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
Public Const c_strImportFolder As String = "Import"             ''|fffd|{|fffd||403|f|fffd|[|fffd|^|fffd||635e||fffd|t|fffd|H|fffd||fffd||fffd|_
Public Const c_strRequestFolder As String = "Request"           ''Request|fffd|f|fffd|[|fffd|^|fffd|o|fffd||343|t|fffd|H|fffd||fffd||fffd|_

'-----------------------------------------------------------------
'  |fffd|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd|A|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
' NKFA--------------------------------------------------------------------
''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
#If def_intDBPlace = 1 Then
    '' |fffd|{|fffd||50a||8b||fffd|
    Public Const c_strServerName As String = "172.16.10.158"
    Public Const c_strDBName As String = "NKFA"
#ElseIf def_intDBPlace = 2 Then
    '' |fffd||fffd||fffd||60a||8b||fffd|
    Public Const c_strServerName As String = "172.16.2.87"
    Public Const c_strDBName As String = "NKFA"
#ElseIf def_intDBPlace = 3 Then
    '' |fffd|J|fffd||fffd||fffd||8b||fffd|
    Public Const c_strServerName As String = "172.16.2.171"
    Public Const c_strDBName As String = "NKFA"
#Else
    '' |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd||fffd|p|fffd|T|fffd|[|fffd|o|fffd|[
    Public Const c_strServerName As String = "172.16.10.182"
    Public Const c_strDBName As String = "NKFA"
#End If

'''<<<2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'#If def_intDBPlace = 1 Then
'    Public Const c_strServerName As String = "172.16.10.158" ''|fffd|{|fffd||fffd|
'    Public Const c_strDBName As String = "NKFA"
'#Else
'    Public Const c_strServerName As String = "172.16.10.182"  ''|fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd||fffd|p|fffd|T|fffd|[|fffd|o|fffd|[
''    Public Const c_strServerName As String = "172.16.2.165"  ''Test|fffd|T|fffd|[|fffd|o|fffd|[
'    Public Const c_strDBName As String = "NKFA"
'#End If
'
''#If def_intDBPlace = 1 Then    ''|fffd||fffd||fffd|{|fffd|H|fffd|c|fffd|p
''    Public Const c_strServerName As String = "172.16.10.158"    ''|fffd||fffd|p|fffd|T|fffd|[|fffd|o|fffd|[(|fffd|{|fffd||fffd|)
''    Public Const c_strDBName As String = "NKFA"
''#ElseIf def_intDBPlace = 0 Then  ''Test|fffd|T|fffd|[|fffd|o|fffd|[(|fffd|{|fffd||fffd|5F)|fffd|p
''    Public Const c_strServerName As String = "172.16.2.165"    ''Test|fffd|T|fffd|[|fffd|o|fffd|[(|fffd|{|fffd||fffd|5F)
''    Public Const c_strDBName As String = "NKFA"
''#Else ''|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|e|fffd|X|fffd|g|fffd|p
''    Public Const c_strServerName As String = "172.16.9.106" ''Local v0414(4F)
''    'Public Const c_strServerName As String = "(local)" ''Local|fffd|}|fffd|V|fffd||fffd|
''    Public Const c_strDBName As String = "NKFA"
''#End If
'''>>>2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

Public Const c_strUserID As String = "NKFA03"
Public Const c_strPassword As String = "overseasfa"
Public Const c_NKFAOwner As String = "NKFA03"

''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
Public Const defNKFApfx As String = c_strDBName & "." & c_NKFAOwner
''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'Public Const defVersionDefinition As String = defNKFApfx & ".VersionDefinition"
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
Public Const defExcelSessionManagement As String = defNKFApfx & ".ExcelSessionManagement"
''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'Public Const defExcelAccessLog As String = defNKFApfx & ".ExcelAccessLog"
'Public Const defExcelSQLLog As String = defNKFApfx & ".ExcelSQLLog"
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
''<<<2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
Public Const defGetVersionDefinition As String = defNKFApfx & ".GetVersionDefinition('@1', @2)"
Public Const defGetInformation As String = defNKFApfx & ".GetInformation()"
Public Const defGetAuthority As String = defNKFApfx & ".GetAuthority('@1', '@2', '@3', '@4', '@5')"
Public Const defGetPost As String = defNKFApfx & ".GetPost('@1')"
Public Const defGetFiscalYearMaster_FiscalYear As String = defNKFApfx & ".GetFiscalYearMaster_FiscalYear('@1')"
Public Const defGetFiscalYearMaster_StartDateFromFiscalYear As String = defNKFApfx & ".GetFiscalYearMaster_StartDateFromFiscalYear(@1)"
Public Const defGetFiscalYearMaster_EndDateFromFiscalYear As String = defNKFApfx & ".GetFiscalYearMaster_EndDateFromFiscalYear(@1)"
Public Const defInsertExcelSQLLog As String = c_NKFAOwner & ".InsertExcelSQLLog"
Public Const defInsertExcelAccessLog As String = c_NKFAOwner & ".InsertExcelAccessLog"
Public Const defGetKaikeiKikan As String = defNKFApfx & ".GetKaikeiKikan()"
Public Const defInsertKaikeiRenkeiData As String = c_NKFAOwner & ".InsertKaikeiRenkeiData"
Public Const defCheckCostCenter As String = defNKFApfx & ".CheckCostCenter('@1')"
Public Const defCheckInternalDirect As String = defNKFApfx & ".CheckInternalDirect('@1')"
Public Const defCheckWBS As String = defNKFApfx & ".CheckWBS('@1')"
Public Const defGetOrganization As String = defNKFApfx & ".GetOrganization()"
Public Const defGetSection As String = defNKFApfx & ".GetSection(@1)"
Public Const defSearchCostCenter As String = defNKFApfx & ".SearchCostCenter(@1, @2, @3, @4, @5)"
Public Const defSearchInternalDirect As String = defNKFApfx & ".SearchInternalDirect(@1, @2, @3, @4, @5)"
Public Const defSearchWBS As String = defNKFApfx & ".SearchWBS(@1, @2, @3, @4, @5)"
''>>>2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'' NKWF--------------------------------------------------------------------
'''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'' NKWF|fffd||14c||fffd||fffd||102||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|NKFA|fffd||248||682||fffd||fffd||fffd||fffd||302||141|A|fffd|g|fffd||fffd||202||fffd|
''#If def_intDBPlace = 1 Then    ''|fffd||fffd||fffd|{|fffd|H|fffd|c|fffd|p
''    Public Const c_strNKWFServerName As String = "172.16.10.157"  ''|fffd|{|fffd||fffd|
''#ElseIf def_intDBPlace = 0 Then  ''Test|fffd|T|fffd|[|fffd|o|fffd|[(|fffd|{|fffd||fffd|5F)|fffd|p
''    Public Const c_strNKWFServerName As String = "172.16.2.165"    ''Test|fffd|T|fffd|[|fffd|o|fffd|[(|fffd|{|fffd||fffd|5F)
''#Else ''|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|e|fffd|X|fffd|g|fffd|p
''    Public Const c_strNKWFServerName As String = c_strServerName
''    'Public Const c_strNKWFServerName As String = "172.16.9.47" ''Local v0414(4F)
''    'Public Const c_strNKWFServerName As String = "(local)" ''Local|fffd|}|fffd|V|fffd||fffd|
''#End If
''Public Const c_strNKWFDBName As String = "NKWF"
''Public Const c_strNKWF_UserID As String = "NKWF03"
''Public Const c_strNKWF_Password As String = "nkworkflow"
''Public Const c_NKWFOwner As String = "NKWF03"
'''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'
'' HRManager-----------------------------------------------------------------
'''<<<2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'#If def_intDBPlace = 1 Then
'    Public Const c_strNKHRServerName As String = "172.16.10.158" ''|fffd|{|fffd||fffd|
'    Public Const c_strNKHRDBName As String = "NKHR"
'#Else
'    Public Const c_strNKHRServerName As String = "172.16.10.182"  ''|fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd||fffd|p|fffd|T|fffd|[|fffd|o|fffd|[
''    Public Const c_strNKHRServerName As String = "172.16.2.165"  ''Test|fffd|T|fffd|[|fffd|o|fffd|[
'    Public Const c_strNKHRDBName As String = "NKHR"
'#End If
'
''#If def_intDBPlace = 1 Then
''    Public Const c_strNKHRDBName As String = "NKHR"
''#Else   ''|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|e|fffd|X|fffd|g|fffd|p
'''    Public Const c_strNKHRServerName As String = "172.16.10.157"  ''|fffd|{|fffd||fffd|
''    Public Const c_strNKHRDBName As String = "NKHR"
''#End If
'''>>>2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'
'Public Const c_strNKHR_UserID As String = "NKHR"
'Public Const c_strNKHR_Password As String = "nkhr"
'Public Const c_NKHROwner As String = "NKHR03"
'
'Public Const defNKHRpfx As String = c_strNKHRDBName & "." & c_NKHROwner
'''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
''Public Const defSectionMaster As String = defNKHRpfx & ".|fffd|g|fffd|D|fffd|}|fffd|X|fffd|^"
''Public Const defEmployeeMaster As String = defNKHRpfx & ".|fffd|]|fffd||188||fffd||fffd|}|fffd|X|fffd|^"
''Public Const defTitleMaster As String = defNKHRpfx & ".|fffd||fffd|E|fffd|}|fffd|X|fffd|^"
''Public Const defPostMaster As String = defNKHRpfx & ".|fffd||fffd||fffd||fffd||fffd||fffd|E"
''Public Const defLicenceMaster As String = defNKHRpfx & ".|fffd||fffd||fffd|i|fffd|}|fffd|X|fffd|^"
''Public Const c_strTBL_HRFIPeriod As String = defNKHRpfx & ".|fffd||fffd|v|fffd||fffd||fffd||510||fffd||fffd||fffd|}|fffd|X|fffd|^"
''''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
''Public Const defPersonalUseRightsSystem As String = defNKHRpfx & ".|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|p|fffd||90|l|fffd||fffd||fffd||fffd|"
''''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
''''<<<2015.10.09 Add By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|O|fffd|o|fffd||fffd||fffd||242||fffd||fffd||fffd|
''Public Const defFiscalYear As String = defNKHRpfx & ".|fffd|N|fffd|x|fffd||fffd||fffd||fffd|}|fffd|X|fffd|^"
''''>>>2015.10.09 Add By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|O|fffd|o|fffd||fffd||fffd||242||fffd||fffd||fffd|
'''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'
'' SDManager-----------------------------------------------------------------
'Public Const c_strNKSDDBName As String = "NKSD"
'Public Const c_NKSDOwner As String = "NKSD03"
''<<<2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'#If def_intDBPlace = 1 Then
'    Public Const c_strNKSDServerName As String = "172.16.10.158" ''|fffd|{|fffd||fffd| ''|fffd|g|fffd||fffd||fffd||102||202||fffd||fffd||fffd||fffd||1c1|A|fffd|O|fffd||302||fffd||fffd||7d7|p|fffd||fffd|
'    Public Const defNKSDpfx = c_strNKSDDBName & "." & c_NKSDOwner
'    Public Const c_strNKSD_UserID As String = "NKSD"
'    Public Const c_strNKSD_Password As String = "nksd"
'#Else
'    Public Const c_strNKSDServerName As String = "172.16.10.182"  ''|fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd||fffd|p|fffd|T|fffd|[|fffd|o|fffd|[ ''|fffd|g|fffd||fffd||fffd||102||202||fffd||fffd||fffd||fffd||1c1|A|fffd|O|fffd||302||fffd||fffd||7d7|p|fffd||fffd|
''    Public Const c_strNKSDServerName As String = "172.16.2.165"  ''Test|fffd|T|fffd|[|fffd|o|fffd|[ ''|fffd|g|fffd||fffd||fffd||102||202||fffd||fffd||fffd||fffd||1c1|A|fffd|O|fffd||302||fffd||fffd||7d7|p|fffd||fffd|
'    Public Const defNKSDpfx = c_strNKSDDBName & "." & c_NKSDOwner
'    Public Const c_strNKSD_UserID As String = "NKSD"
'    Public Const c_strNKSD_Password As String = "nksd"
'#End If
'
''#If def_intDBPlace = 1 Then
''    Public Const defNKSDpfx = "LINK_NKSD." & c_strNKSDDBName & "." & c_NKSDOwner
''    Public Const c_strNKSD_UserID As String = "NKSD"
''    Public Const c_strNKSD_Password As String = "nksd"
''
''#Else   ''|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|e|fffd|X|fffd|g|fffd|p
''    Public Const c_strNKSDServerName As String = "172.16.10.154"  ''|fffd|w|fffd||fffd||fffd|{|fffd||fffd|
'''    Public Const defNKSDpfx As String = c_strNKSDDBName & "." & c_NKSDOwner
''    Public Const c_strNKSD_UserID As String = "NKSD03"
''    Public Const c_strNKSD_Password As String = "salesmanager"
''    Public Const defNKSDpfx = "LINK_NKSD." & c_strNKSDDBName & "." & c_NKSDOwner
'''    Public Const c_strNKSD_UserID As String = "NKSD"
'''    Public Const c_strNKSD_Password As String = "nksd"
''#End If
'''>>>2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'
'''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
''Public Const defWBS As String = defNKSDpfx & ".WBS"
''Public Const def|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g As String = defNKSDpfx & ".|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g"
''Public Const def|fffd||fffd|{|fffd||fffd||fffd| As String = defNKSDpfx & ".|fffd||fffd|{|fffd||fffd||fffd|"
''Public Const def|fffd||fffd||fffd||6cc|_|fffd||fffd| As String = defNKSDpfx & ".|fffd||fffd||fffd||6cc|_|fffd||fffd|"
'''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'
'' Material-----------------------------------------------------------------
'Public Const c_strNKMMDBName As String = "NKMM"
'''<<<2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'#If def_intDBPlace = 1 Then
'    Public Const c_strNKMMServerName As String = "172.16.10.158" ''|fffd|{|fffd||fffd|
'    Public Const c_NKMMOwner As String = "NKMM03"
'    Public Const defNKMMpfx As String = c_strNKMMDBName & "." & c_NKMMOwner
'#Else
'    Public Const c_strNKMMServerName As String = "172.16.10.182"  ''|fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd||fffd|p|fffd|T|fffd|[|fffd|o|fffd|[
''    Public Const c_strNKMMServerName As String = "172.16.2.165"  ''Test|fffd|T|fffd|[|fffd|o|fffd|[
'    Public Const c_NKMMOwner As String = "NKMM03"
'    Public Const defNKMMpfx As String = c_strNKMMDBName & "." & c_NKMMOwner
'#End If
'
''#If def_intDBPlace = 1 Then
''    Public Const c_NKMMOwner As String = "NKMM03"
''    Public Const defNKMMpfx = "LINK_NKMM." & c_strNKMMDBName & "." & c_NKMMOwner
''#Else   ''|fffd|e|fffd|X|fffd|g|fffd|p
''    Public Const c_strNKMMServerName As String = "172.16.10.154" ''|fffd|{|fffd||fffd|
''    Public Const c_NKMMOwner As String = "NKMM03"
''    Public Const defNKMMpfx As String = c_strNKMMDBName & "." & c_NKMMOwner
'''    Public Const defNKMMpfx = "LINK_NKMM." & c_strNKMMDBName & "." & c_NKMMOwner
''#End If
'''>>>2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'
'Public Const c_strNKMM_UserID As String = "NKMM"
'Public Const c_strNKMM_Password As String = "nkmm"
'''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
''Public Const def|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ As String = defNKMMpfx & ".|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^"
''Public Const def|fffd||fffd||fffd||fffd||fffd|w|fffd|} As String = defNKMMpfx & ".|fffd||fffd||fffd||fffd||fffd|w|fffd|}"
'''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

' NKFA Table ----------------------------------------------------------------
Public Const c_strTBL_OfficeMaster As String = "OfficeMaster"               ''Office|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_CountryMaster As String = "GeCountry"                 ''Country|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_ConnCode As String = "ConnectionCode"                 ''ConnectionCode
Public Const c_strTBL_CBMaster As String = "CBMaster"                       ''CashBook|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_BBMaster As String = "BBMaster"                       ''BankBook|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_TRMaster As String = "TRMaster"                       ''Transfer|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_ASMaster As String = "AssociateMaster"                ''Associate|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_SCMaster As String = "SubConMaster"                   ''SubCon|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_RMMaster As String = "RMMaster"                       ''Remittance|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_WBSMaster As String = "ExpenceBurden"                 ''WBSCode|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_PJTMaster As String = "PJTMaster"                     ''Project|fffd|}|fffd|X|fffd|^
Public Const c_strTBL_CurrncyMaster As String = "CurrencyMaster"            ''|fffd||289||743|}|fffd|X|fffd|^
Public Const c_strTBL_OfficeMasterHst As String = "OfficeMaster_History"    ''Office|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_ConnCodeHst As String = "ConnectionCode_History"      ''ConnectionCode|fffd||fffd||fffd||fffd|
Public Const c_strTBL_CBMasterHst As String = "CBMaster_History"            ''CashBook|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_BBMasterHst As String = "BBMaster_History"            ''BankBook|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_TRMasterHst As String = "TRMaster_History"            ''Transfer|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_ASMasterHst As String = "AssociateMaster_History"     ''Associate|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_SCMasterHst As String = "SubConMaster_History"        ''SubCon|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_RMMasterHst As String = "RMMaster_History"            ''Remittance|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_WBSMasterHst As String = "ExpenceBurden_History"      ''WBSCode|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_PJTMasterHst As String = "PJTMaster_History"          ''Project|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_Decision As String = "Decision"                       ''|fffd|m|fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd|
Public Const c_strTBL_DecisionFASY As String = "DecisionFASY"               ''|fffd|m|fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd|FASY
Public Const c_strTBL_LinkCodeNo As String = "LinkCodeNo"                   ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.
Public Const c_strTBL_LinkCodeNoJW As String = "LinkCodeNoJW"               ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.JW
Public Const c_strTBL_LinkCodeNoNK As String = "LinkCodeNoNK"               ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.NK
Public Const c_strTBL_AcBalance As String = "AccountBalance"                ''|fffd|o|fffd|[|fffd|c|fffd|z
Public Const c_strTBL_LedgerRecIDNo As String = "LedgerRecIDNo"             ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerRecIDNo.
Public Const c_strTBL_AcBalanceHst As String = "AccountBalance_History"     ''|fffd|o|fffd|[|fffd|c|fffd|z|fffd||fffd||fffd||fffd|
Public Const c_strTBL_DecisionHst As String = "Decision_History"            ''|fffd|m|fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strTBL_LinkCodeNoHST As String = "LinkCodeNo_History"        ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.|fffd||fffd||fffd||fffd|
Public Const c_strTBL_LinkCodeNoNKHST As String = "LinkCodeNoNK_History"    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.NK|fffd||fffd||fffd||fffd|
Public Const c_strTBL_LedgerRecIDNoHST As String = "LedgerRecIDNo_History"  ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerRecIDNo.|fffd||fffd||fffd||fffd|
Public Const c_strTBL_CashBook As String = "CashBookData"                   ''CashBookData
Public Const c_strTBL_BankBook As String = "BankBookData"                   ''BankBookData
Public Const c_strTBL_Transfer As String = "TransferData"                   ''TransferData
Public Const c_strTBL_SubConPayment As String = "SubConPayment"             ''|fffd|O|fffd||fffd||fffd|x|fffd||fffd||fffd||44a0|
Public Const c_strTBL_InvoiceHeader As String = "InvoiceHeader"             ''InvoiceHeader
Public Const c_strTBL_InvoiceDetail As String = "InvoiceDetail"             ''InvoiceDetail
Public Const c_strTBL_AssociatePayment As String = "AssociatePayment"       ''|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||44a0|
Public Const c_strTBL_PastRemittance As String = "PastRemittanceData"       ''PastRemittanceData
Public Const c_strTBL_PrePaidExpense As String = "PrePaidExpense"           ''|fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd|f|fffd|[|fffd|^
Public Const c_strTBL_RequestData As String = "RequestData"                 ''RequestData
Public Const c_strTBL_CashBookHST As String = "CashBookData_History"        ''CashBookData|fffd||fffd||fffd||fffd|
Public Const c_strTBL_BankBookHST As String = "BankBookData_History"        ''BankBookData|fffd||fffd||fffd||fffd|
Public Const c_strTBL_TransferHST As String = "TransferData_History"        ''TransferData|fffd||fffd||fffd||fffd|
Public Const c_strTBL_SubConPaymentHST As String = "SubConPayment_History"  ''|fffd|O|fffd||fffd||fffd|x|fffd||fffd||fffd||44a0||fffd||fffd||fffd||fffd|
Public Const c_strTBL_InvoiceHeaderHST As String = "InvoiceHeader_History"  ''InvoiceHeader|fffd||fffd||fffd||fffd|
Public Const c_strTBL_InvoiceDetailHST As String = "InvoiceDetail_History"  ''InvoiceDetail|fffd||fffd||fffd||fffd|
Public Const c_strTBL_AssociatePaymentHST As String = "AssociatePayment_History" ''|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||44a0||fffd||fffd||fffd||fffd|
Public Const c_strTBL_PastRemittanceHST As String = "PastRemittanceData_History" ''PastRemittanceData|fffd||fffd||fffd||fffd|
Public Const c_strTBL_PrePaidExpenseHST As String = "PrePaidExpense_History"    ''|fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
Public Const c_strTBL_RequestDataHST As String = "RequestData_History"          ''RequestData|fffd||fffd||fffd||fffd|
Public Const c_strTBL_SummaryAC As String = "SummaryAccount"                ''|fffd||fffd||fffd||fffd||216||68f|W|fffd|v|fffd|e|fffd|[|fffd|u|fffd||fffd|
Public Const c_strTBL_Version As String = "VersionDefinition"               ''Version|fffd||1d7||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd|
Public Const c_strTBL_ExchangeData As String = "ExchangeData"               ''|fffd||fffd||fffd||fffd|Text|fffd||1d7||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd|


' NKFA View ----------------------------------------------------------------
Public Const c_strView_ConnectCode As String = "ConnectCodeVw"               ''ConnectionCode View

' R3|fffd|A|fffd|g|fffd|pTable -------------------------------------------------------------
''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'Public Const c_strTBL_R3FIData As String = "|fffd||fffd|v|fffd|A|fffd|gData"                   ''|fffd||fffd|v|fffd|A|fffd|gData|fffd|e|fffd|[|fffd|u|fffd||fffd|
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

'NKFAS|fffd||fffd||fffd|n|fffd||142||303|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|`(|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||303|}|fffd|b|fffd|`|fffd||fffd||fffd|O|fffd|p)------------------------
Public Const c_strFAS_TBL_AcBalance As String = "AccountBalance"             ''|fffd|o|fffd|[|fffd|c|fffd|z
Public Const c_strFAS_TBL_DecisionFASY As String = "DecisionFASY"            ''|fffd|m|fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd|
Public Const c_strFAS_TBL_SummaryAC As String = "SummaryAccount"             ''|fffd||fffd||fffd||fffd||216||68f|W|fffd|v|fffd|e|fffd|[|fffd|u|fffd||fffd|
Public Const c_strFAS_TBL_PJTMaster As String = "PJTMaster"                  ''Project|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_CBMaster As String = "CBMaster"                    ''CashBook|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_BBMaster As String = "BBMaster"                    ''BankBook|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_TRMaster As String = "TRMaster"                    ''Transfer|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_ConnCode As String = "ConnectionCode"              ''ConnectionCode
Public Const c_strFAS_TBL_ASMaster As String = "AssociateMaster"             ''Associate|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_SCMaster As String = "SubConMaster"                ''SubCon|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_RMMaster As String = "RMMaster"                    ''Remittance|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_WBSMaster As String = "WBSMaster"                  ''WBSCode|fffd|}|fffd|X|fffd|^
Public Const c_strFAS_TBL_LinkCodeNum As String = "LinkCodeNumber"           ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.
Public Const c_strFAS_TBL_LinkCodeJWNum As String = "LinkCodeNoJW"           ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo.JW
Public Const c_strFAS_TBL_InvoiceHeader As String = "InvoiceHeader"          ''InvoiceHeader
Public Const c_strFAS_TBL_InvoiceDetail As String = "InvoiceDetail"          ''InvoiceDetail
Public Const c_strFAS_TBL_SubConPayment As String = "SubConPayment"          ''|fffd|O|fffd||fffd||fffd|x|fffd||fffd||fffd||44a0|
Public Const c_strFAS_TBL_AssociatePayment As String = "AssociatePayment"    ''|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||44a0|
Public Const c_strFAS_TBL_PastRemittance As String = "PastRemittanceData"    ''PastRemittanceData
Public Const c_strFAS_TBL_RequestData As String = "RequestData"              ''RequestData
Public Const c_strFAS_TBL_PrePaidExpense As String = "PrePaidExpense"        ''|fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd|f|fffd|[|fffd|^

'-----------------------------------------------------------------
'  |fffd|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd|V|fffd|[|fffd|g|fffd|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd|
'-----------------------------------------------------------------
Public Const c_strPROP_Version As String = "Version"                ''Version
Public Const c_strPROP_LocID As String = "Lcid"                     ''LCID|fffd||fffd||fffd|P|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strPROP_DecimalCount As String = "NomalDecimalCount" ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strPROP_ModifyLedger As String = "ModifyLedger"      ''|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
Public Const c_strPROP_EnableR3IF As String = "EnableR3IF"          ''R/3IF|fffd|L|fffd||fffd|


'---------------------------------------------
' Security
'---------------------------------------------
Public Const c_strSysCode As String = "NKFA"
Public Const c_lngSysFileID As Long = 1


'-----------------------------------------------------------------
'  ConnectionCode|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
Public Const c_strCatNK As String = "NK Staff"
Public Const c_strCatNonProper As String = "Non NK expatriate"
Public Const c_strCatLocal As String = "Local staff"
Public Const c_strCatSubCon As String = "Sub-contractor"
Public Const c_strCatAssociate As String = "Associate"
Public Const c_strCatOther As String = "Others"
Public Const c_strCatOffice As String = "Office"
'-----------------------------------------------------------------
'  ConnectionCode|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
Public Const c_strCatNK_Short As String = "NKS"
Public Const c_strCatNNK_Short As String = "NNK"
Public Const c_strCatLocal_Short As String = "LOS"
Public Const c_strCatOther_Short As String = "OTH"
Public Const c_strCatOffice_Short As String = "OFC"
'-----------------------------------------------------------------
'  |fffd|Z|fffd||fffd||fffd|\|fffd||fffd||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
Public Const c_strFORMAT_DEC_CBT_N As String = "#,##0.00_ "
Public Const c_strFORMAT_DEC_CBT_X As String = "#,##0.000_ "
Public Const c_strFORMAT_DEC_N As String = "#,##0.00_ ;-#,##0.00 "
Public Const c_strFORMAT_DEC_X As String = "#,##0.000_ ;-#,##0.000 "
Public Const c_strFORMAT_DECR_N As String = "#,##0.00_ ;[Red]-#,##0.00 "
Public Const c_strFORMAT_DECR_X As String = "#,##0.000_ ;[Red]-#,##0.000 "
Public Const c_strFORMAT_DECZERO_N As String = "#,##0.00_ ;[Red]-#,##0.00_ ;#,##0.00_ ;"
Public Const c_strFORMAT_DECZERO_X As String = "#,##0.000_ ;[Red]-#,##0.000_ ;#,##0.000_ ;"
Public Const c_strFORMAT_DATE As String = "yyyy/mm/dd_ "
Public Const c_strFORMAT_MONTH As String = "yyyy/mm_ "
'-----------------------------------------------------------------
'  |fffd|s|fffd|^|fffd||fffd||50d||fffd|
'-----------------------------------------------------------------
Public Const c_lngMAX_ROWINDEX As Long = 2011                   ''CB/BB/TR|fffd||fffd||fffd||34d||151||fffd|s(2000Line)
Public Const c_intCBDetailRowST As Integer = 12                 ''CashBook|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intBBDetailRowST As Integer = 12                 ''BankBook|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intTRDetailRowST As Integer = 12                 ''Transfer|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intBRInvDetailRowST As Integer = 16              ''BreakeDown|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intInvDetailRowST As Integer = 14                ''Invoice|fffd||44a0||fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intSCDetailRowST As Integer = 13                 ''Subcontractor|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intASDetailRowST As Integer = 13                 ''Associate|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_intDscrptCategorySettingDataRow As Integer = 2   ''|fffd||752||fffd|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Public Const c_lngSumACDbRowST As Integer = 3                   ''|fffd|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
'-----------------------------------------------------------------
'  |fffd|Z|fffd||fffd||fffd|A|fffd|V|fffd|[|fffd|g
'-----------------------------------------------------------------
Public Const c_intMAX_BEFOREVALUE As Integer = 1000                     ''|fffd||fffd||fffd|O|fffd|l|fffd|i|fffd|[|fffd||fffd||fffd|
Public Const c_strCmdBarDescription As String = "CSPopupDescription"    ''Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd|
Public Const c_strPurposeNK As String = "NK main use."                  ''CB/BB This Ledger for...NK
Public Const c_strPurposeJV As String = "JV main use."                  ''CB/BB This Ledger for...JV
Public Const c_strInvPaymentMonth As String = "XX-Monthly Payment"      ''Invoice Payment Monthly
Public Const c_strInvPaymentSched As String = "Scheduled Payment"       ''Invoice Payment Scheduled
Public Const c_strSbCReimbursable As String = "Reimbursable"            ''Subcon Reimbursable
Public Const c_strSbCNonReimbursable As String = "Non Reimbursable"     ''Subcon Reimbursable(Non)
'-----------------------------------------------------------------
'|fffd|@|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||752||fffd|l
'-----------------------------------------------------------------
Public Const c_strFD_IMPORTTITLE As String = "Import File Select"
Public Const c_strFD_TEXTFILETYPE As String = "Text format (*.txt), *.txt"

'-----------------------------------------------------------------
'|fffd|@|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h
'-----------------------------------------------------------------
Public Const c_strSheetPWD As String = "overseas"

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||8414|
'-----------------------------------------------------------------
Public Const c_strBranchOfficeTag As String = "JW"  ''|fffd|c|fffd||18e||fffd||fffd||fffd||fffd||fffd|Code|fffd||fffd||fffd||fffd|
Public Const c_strKwdModifyBR As String = "[BR]"    ''|fffd|C|fffd||fffd||fffd||a3ca|KeyWord-BranchOffice
Public Const c_strKwdModifyNK As String = "[NK]"    ''|fffd|C|fffd||fffd||fffd||a3ca|KeyWord-HeadOffice

'-----------------------------------------------------------------
'|fffd|@|fffd|W|fffd|v|fffd|p|fffd||fffd||fffd||fffd||216||fffd|
'-----------------------------------------------------------------
Public Const c_strBSCODE_BEGIN As String = "20000000" ''BS|fffd|R|fffd|[|fffd|h|fffd||30e|n|fffd||702||fffd|
Public Const c_strPLCODE_BEGIN As String = "80000000" ''PL|fffd|R|fffd|[|fffd|h|fffd||30e|n|fffd||702||fffd|

'-----------------------------------------------------------------
'|fffd|@|fffd|U|fffd||58a||fffd||fffd||fffd||216||fffd| Invoice
'-----------------------------------------------------------------
Public Const c_strACIV_ClaimAmountCode As String = "50185001"               ''|fffd||fffd||fffd|n|fffd||756||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
Public Const c_strACIV_ClaimAmountName As String = "Unset/Income - Client"  ''|fffd||fffd||fffd|n|fffd||756||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||85bc||fffd||fffd|
''Public Const c_strACIV_NKVATCode As String = "50095121"                     ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j
Public Const c_strACIV_NKVATCode As String = "50096121"                     ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j
Public Const c_strACIV_NKVATName As String = "Sus/Rec - VAT(NK)"            ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j|fffd||fffd||fffd||fffd|
Public Const c_strACIV_NKHoldTaxCode As String = "90840201"                 ''|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|
Public Const c_strACIV_NKHoldTaxName As String = "Corp/Tax - Withhold"      ''|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||156||fffd||fffd||fffd|
Public Const c_strACIV_NKSundriesCode As String = "90007079"                ''|fffd|G|fffd||f0bb||fffd||311||fffd||fffd||fffd||6d0||fffd|
Public Const c_strACIV_NKSundriesName As String = "Sund - Others"           ''|fffd|G|fffd||f0bb||fffd||311||fffd||fffd||fffd||6d0||156||fffd||fffd||fffd|
Public Const c_strACIV_NKManagefeeCode As String = "90007075"               ''|fffd|G|fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||8414||fffd||fffd|
Public Const c_strACIV_NKManagefeeName As String = "Sund - M Fee"           ''|fffd|G|fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||8414||fffd||fffd||fffd||fffd||fffd||fffd|
''Public Const c_strACIV_ASVATCode As String = "50095111"                     ''Asso|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j
Public Const c_strACIV_ASVATCode As String = "50096111"                     ''Asso|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j
Public Const c_strACIV_ASVATName As String = "Sus/Rec - VAT(Asso)"          ''Asso|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j|fffd||fffd||fffd||fffd|
''Public Const c_strACIV_ASPortionCode As String = "50095101"                 ''|fffd|i|fffd|u|fffd||fffd||191||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd|
Public Const c_strACIV_ASPortionCode As String = "50096101"                 ''|fffd|i|fffd|u|fffd||fffd||191||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd|
Public Const c_strACIV_ASPortionName As String = "Sus/Rec - JV(Asso)"       ''|fffd|i|fffd|u|fffd||fffd||191||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''Public Const c_strACIV_NKOtherTaxCode As String = "50095125"                ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||311||fffd||fffd||14b||fffd||fffd|j
Public Const c_strACIV_NKOtherTaxCode As String = "50096125"                ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||311||fffd||fffd||14b||fffd||fffd|j
Public Const c_strACIV_NKOtherTaxName As String = "Sus/Rec - O/Tax(NK)"     ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||311||fffd||fffd||14b||fffd||fffd|j|fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'|fffd|@|fffd|U|fffd||58a||fffd||fffd||fffd||216||fffd| SubCon
'-----------------------------------------------------------------
''Public Const c_strACSC_AdvPaymentCode As String = "20105001"                ''|fffd|O|fffd|n|fffd||fffd||fffd|i|fffd|H|fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
Public Const c_strACSC_AdvPaymentCode As String = "20106001"                ''|fffd|O|fffd|n|fffd||fffd||fffd|i|fffd|H|fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
Public Const c_strACSC_AdvPaymentName As String = "A/Pay. Sub Con"          ''|fffd|O|fffd|n|fffd||fffd||fffd|i|fffd|H|fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||85bc||fffd||fffd|
Public Const c_strACSC_PrgPaymentCode As String = "90005262"                ''|fffd|O|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|(|fffd||108||3d1||fffd|)|fffd||fffd||fffd||fffd|
Public Const c_strACSC_PrgPaymentName As String = "Sub Con - Overseas"      ''|fffd|O|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|(|fffd||108||3d1||fffd|)|fffd||fffd||fffd||85bc||fffd||fffd|
Public Const c_strACSC_SdPrgPaymentCode As String = "90005261"              ''|fffd|O|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||f2a8||fffd||fffd|
Public Const c_strACSC_SdPrgPaymentName As String = "Sub Con - Overseas"    ''|fffd|O|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||f2a8||fffd||85bc||fffd||fffd|
''Public Const c_strACSC_VATCode As String = "20165021"                       ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757||fffd||fffd||58b||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j|fffd||fffd||fffd||fffd|
Public Const c_strACSC_VATCode As String = "20166021"                       ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757||fffd||fffd||58b||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j|fffd||fffd||fffd||fffd|
Public Const c_strACSC_VATName As String = "Sus/Pay - VAT (NK)"             ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757||fffd||fffd||58b||fffd||fffd|i|fffd|t|fffd||fffd||fffd||fffd||fffd|l|fffd||141|j|fffd||fffd||fffd||85bc||fffd||fffd|
''Public Const c_strACSC_HoldTaxCode As String = "50095129"                   ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|O|fffd||fffd||fffd||fffd||fffd||14b||fffd||fffd|j|fffd||fffd||fffd||fffd|
Public Const c_strACSC_HoldTaxCode As String = "50096129"                   ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|O|fffd||fffd||fffd||fffd||fffd||14b||fffd||fffd|j|fffd||fffd||fffd||fffd|
Public Const c_strACSC_HoldTaxName As String = "Sus/Rec - O/Tax(Subc)"      ''|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd|n|fffd||757|a|fffd||fffd||fffd||fffd|i|fffd|O|fffd||fffd||fffd||fffd||fffd||14b||fffd||fffd|j|fffd||fffd||fffd||85bc||fffd||fffd|
Public Const c_strACSC_OthersCode As String = "90007079"                    ''|fffd|G|fffd||f0bb||fffd||311||fffd||fffd||fffd||6d0||14a||fffd||fffd||fffd|
Public Const c_strACSC_OthersName As String = "Sund - Others"               ''|fffd|G|fffd||f0bb||fffd||311||fffd||fffd||fffd||6d0||14a||fffd||fffd||85bc||fffd||fffd|

'-----------------------------------------------------------------
'|fffd|@|fffd||152||8391||fffd|Y|fffd||fffd||fffd||fffd||216||fffd| Fixed asset
'-----------------------------------------------------------------
Public Const c_strACFA_BuyCode As String = "20505101"                       ''|fffd||152||8391||fffd|Y|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACFA_SaleCode As String = "20505102"                      ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
'-----------------------------------------------------------------
Public Const c_strACRM_RecHeadCode As String = "20191000"                   ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||310|l|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||c2bce||8464||fffd|{|fffd||402||fffd||fffd||fffd|j
Public Const c_strACRM_RecOtherCode As String = "20193000"                  ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||310|l|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||c2bce||8464||fffd||fffd||fffd||fffd||fffd||fffd|j
Public Const c_strACRM_SndHeadCode As String = "20190000"                   ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||310|l|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||8464||fffd|{|fffd||402||581|j
Public Const c_strACRM_SndOtherCode As String = "20192000"                  ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||310|l|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||8464||fffd||fffd||fffd||581|j
Public Const c_strACEx_MoneySndCode As String = "20194000"                  ''|fffd||289||74c||fffd||fffd||fffd||fffd||fffd||fffd||8457||fffd||8464|
Public Const c_strACR3_AdjustDebtorCode As String = "20196000"              ''FASY-R3|fffd||512||fffd||fffd||fffd||fffd||fffd||fffd||fffd||615||fffd|

'-----------------------------------------------------------------
'|fffd|@|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
'-----------------------------------------------------------------
Public Const c_strACPP_RentOFFICECode As String = "90006660"                  ''|fffd|n|fffd||fffd||192||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACPP_RentOFFICEName As String = "Rental Exp - Rents"        ''|fffd|n|fffd||fffd||192||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||85bc||fffd||fffd|
Public Const c_strACPP_ComTranspCode As String = "90005501"                   ''|fffd||290|M|fffd||fffd||294||f2a8||fffd||fffd|
Public Const c_strACPP_ComTranspName As String = "Comm -Transport"            ''|fffd||290|M|fffd||fffd||294||f2a8||fffd||85bc||fffd||fffd|
Public Const c_strACPP_RentExpCode As String = "90006302"                     ''|fffd||fffd||fffd||fffd||fffd||617||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACPP_RentExpName As String = "Rental Exp"                   ''|fffd||fffd||fffd||fffd||fffd||617||fffd||fffd||fffd||fffd||85bc||fffd||fffd|
''Public Const c_strACPP_MonthRentOfficeCode As String = "20125801"             ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||192||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACPP_MonthRentOfficeCode As String = "20126801"             ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||192||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACPP_MonthRentOfficeName As String = "Pre/Paid House etc."  ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||192||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||85bc||fffd||fffd|
''Public Const c_strACPP_MonthRentCarCode As String = "20126901"                ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||290|M|fffd||fffd||294||f2a8||fffd||fffd|
Public Const c_strACPP_MonthRentCarCode As String = "20127901"                ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||290|M|fffd||fffd||294||f2a8||fffd||fffd|
Public Const c_strACPP_MonthRentCarName As String = "Pre/Paid Others"         ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||290|M|fffd||fffd||294||f2a8||fffd||85bc||fffd||fffd|
''Public Const c_strACPP_MonthRentOtherCode As String = "20126901"              ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACPP_MonthRentOtherCode As String = "20127901"              ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACPP_MonthRentOtherName As String = "Pre/Paid Others"       ''|fffd|e|fffd||fffd||fffd|U|fffd||597|p|fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||85bc||fffd||fffd|

'-----------------------------------------------------------------
'|fffd|@|fffd||fffd|p|fffd||fffd||fffd|S|fffd||6427||fffd||fffd||fffd||30a||fffd||fffd||fffd||216||fffd|
'-----------------------------------------------------------------
Public Const c_strACKND_PriGainCostCode As String = "80575201"                ''|fffd|O|fffd||fffd||fffd||fffd||fffd|v|fffd|C|fffd||fffd||fffd|v_|fffd||fffd|p|fffd||fffd||fffd||fffd|
Public Const c_strACKND_PriGainOtherCode As String = "80575301"               ''|fffd|O|fffd||fffd||fffd||fffd||fffd|v|fffd|C|fffd||fffd||fffd|v_|fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strACKND_PriLossCostCode As String = "90535201"                ''|fffd|O|fffd||fffd||fffd||fffd||fffd|v|fffd|C|fffd||fffd||fffd||fffd|_|fffd||fffd|p|fffd||fffd||fffd||fffd|
Public Const c_strACKND_PriLossOtherCode As String = "90535301"               ''|fffd|O|fffd||fffd||fffd||fffd||fffd|v|fffd|C|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'|fffd|@Cash/Bank Book |fffd|o|fffd|^|fffd||94|\|fffd||151||5414|
'-----------------------------------------------------------------
Public Const c_lngMAX_CBTLedgerBook As Long = 99 ''CB/BB/TR|fffd|o|fffd|^|fffd||fffd||fffd|(99)

'-----------------------------------------------------------------
'|fffd|@Import WBS |fffd|s|fffd||fffd||fffd||fffd||fffd||312|u|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|iSSC|fffd||fffd||fffd|n|fffd||fffd|G|fffd|j2005/05/27|fffd||1c9||fffd|
'|fffd|@Import WBS |fffd|s|fffd||fffd||fffd||fffd||fffd||312|u|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|i|fffd|C|fffd|O|fffd||196||fffd||fffd||fffd||fffd|j2008/07/29|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Const c_strReplaceWBSCode As String = "XJB0100" '|fffd|C|fffd|O|fffd||196||fffd||fffd||fffd|


'-----------------------------------------------------------------
'  |fffd|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
' |fffd||fffd||fffd||fffd|
Public Const c_strMSG_RIGHTCURRENCY As String = "Please input an Appropriate Currency Code." ''#|fffd|L|fffd||fffd||fffd||212||289||743|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_SelectList As String = "Please select an Appropirate list from Combo Box." '#|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_INVOICE_NUM As String = "Please input Invoice Number" ''#InvoiceNo|fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_DESCRIPTION As String = "Please input Description or Memo." ''#|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_DATE_FORMAT As String = "Please input Date (yyyy/mm/dd)." ''#|fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|
Public Const c_strMSG_WHOLE_NUM As String = "Please input an appropriate Number, like Evidence Number and Cheque Number etc."
Public Const c_strMSG_DECEIMAL_NUM As String = "Please input decimal Number (123.45 ...)." ''#|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
Public Const c_strMSG_CANTDELSTATUS As String = "You can't delete Status Code." ''StatusCode|fffd||34d||d3dc||fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_EDITLOCK As String = "You can't revise the confirmed data." ''#|fffd|m|fffd||fffd||3c2||743|f|fffd|[|fffd|^|fffd||355||48f|W|fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_BLANKLINE As String = "This Book can not accept any blank line." & vbCrLf & "Please fill the blank line."
                                            ''#|fffd||d448d|s|fffd||fffd||fffd||58e|~|fffd||fffd||fffd||102||fffd||fffd||702||fffd|
Public Const c_strMSG_BETWEENPERIOD As String = "Please input a past date from a period (end) in a period (start)."
Public Const c_strMSG_PAID_NUM As String = "Please input deceimal number (Paid)."
Public Const c_strMSG_RECV_NUM As String = "Please input deceimal number (Received)."


' Cash / Bank Book / Transfer
Public Const c_strMSG_MONTH As String = "Please input a Target Month." ''#|fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_LEDCODE As String = "Please input a Ledger-Code." '#LedgerCode(CB01..BB01..)
Public Const c_strMSG_WBS As String = "Please input Expense Burden(WBS) Code." ''#Expense Burden
Public Const c_strMSG_PJT As String = "Please input Project-Code." ''#Project-Code
Public Const c_strMSG_NKJV As String = "Please choose NK or JV." ''#NK/JV
Public Const c_strMSG_CLAIM As String = "Please choose Y or N."   ''#Y/N
Public Const c_strMSG_INPVAL As String = "Please input Effective Value." ''#|fffd|L|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
Public Const c_strMSG_SETMON As String = "Please input the Month." ''#|fffd||fffd|
Public Const c_strMSG_SETDAY As String = "Please input the Date."  ''#|fffd||fffd|
Public Const c_strMSG_ERRORDATE As String = "Please input Appropriate Date." ''#|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_ERRORMONTH As String = "Please input Appropriate Month." ''#|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_SETDETAILS As String = "Please input the Description-Details."
Public Const c_strMSG_CONNECT_CODE As String = "Please input Connection-Code."
Public Const c_strMSG_CONNECT_NAME As String = "Please input Connection-Name."
Public Const c_strMSG_ACCOUNT_CODE As String = "Please input Account-Code."
Public Const c_strMSG_ACCOUNT_NAME As String = "Please input Account-Name."
Public Const c_strMSG_IVLinkCODE As String = "Please input (Invoice)LinkCode."
Public Const c_strMSG_ASLinkCODE As String = "Please input (Associate)LinkCode."
Public Const c_strMSG_SBLinkCODE As String = "Please input (Sub-Contractor)LinkCode."
Public Const c_strMSG_RMLinkCODE As String = "Please input (Remittance)LinkCode."
Public Const c_strMSG_SELECTLCODE As String = "Please select a Ledger Link Code." ''#LedgerLinkCode|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
Public Const c_strMSG_PRLinkCODE As String = "Please input (Prepaid)LinkCode."
Public Const c_strMSG_FALinkCODE As String = "Please input (Fixed Assets)LinkCode."
Public Const c_strMSG_CCODE_KIND As String = "Please input appropriate Connection Code." ''#Connection-Code |fffd||30e||fffd||782||fffd||fffd||10a2||fffd||702||fffd|
Public Const c_strMSG_NOLinkCODE As String = "You can't input LinkCode." ''#LinkCode|fffd||353||fffd||fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_RIGHTLCODE As String = "Please input an Appropriate Ledger Link Code(14 digits)." ''#LinkCode|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_ERRLCodeOFFICE As String = "Please input an Appropriate Ledger Link Code." & vbCrLf _
                                                & "Left 7 digits(OfficeCode) Not exist on Master DataBase." ''#LinkCode|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_FA_SaleCode As String = "Please input the Link Code of the Fixed Asset which you will sell or dispose."
                                                ''#|fffd||fffd||fffd|p|fffd||152||8391||fffd|Y|fffd||fffd|LinkCode|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_FA_BuyNEWCode As String = "New Link Code will be issued for this new Fixed Asset you bought." & vbCrLf _
                                                & "Please confirm it."
                                                ''#|fffd||152||8391||fffd|Y|fffd|V|fffd|K|fffd|w|fffd||fffd||fffd||fffd|LinkCode|fffd||14b4d|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_CANT_ACCODE As String = "You can't input this Account-Code." ''#|fffd||fffd||fffd||fffd|AccountCode|fffd||351|I|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|

Public Const c_strMSG_WARNPastMonthPFX As String = "Your entry month is recorded as previous year's transaction."
Public Const c_strMSG_WARNPastMonthSFX As String = vbCrLf & "You can not input the month which is after target month." & vbCrLf _
                                                & "Will you continue it?"
                                                ''#|fffd|O|fffd|N|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||34c|x|fffd||fffd|

Public Const c_strMSG_CHK_CostCenter As String = "Please choose Cost center code (7 digits, starting with X or Z)."
                                                ''#|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd|[Code|fffd|i|fffd||fffd||fffd||fffd||fffd|F7  |fffd||64ea||fffd||fffd||fffd||fffd||fffd|FX |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Z|fffd|j|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B

Public Const c_strMSG_CHK_ExBurden As String = "Please choose Internal instruction code (8 digits, starting with Y)," & vbCrLf & _
                                                " or WBS code (9 digits)."
                                                ''#|fffd||fffd||fffd||fffd||fffd|w|fffd|}Code|fffd|i|fffd||fffd||fffd||fffd||fffd|F8  |fffd||64ea||fffd||fffd||fffd||fffd||fffd|FY|fffd|j|fffd|A
                                                ''#WBSCode|fffd|i|fffd||fffd||fffd||fffd||fffd|F9|fffd|j|fffd||302||fffd||fffd||fffd||fffd||a0a9||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B

Public Const c_strMSG_WARN_NegativeBal As String = "Balance is negative.  Some transaction is missing." & vbCrLf & _
                                             "Please check if you forgot to enter any transaction in this ledger, and add it."
                                            ''#|fffd|c|fffd||fffd||fffd|}|fffd|C|fffd|i|fffd|X
' Associate
Public Const c_strMSG_ASSO_CODE As String = "Please input Associate's Code." ''#AsoCode
Public Const c_strMSG_ASSO_NAME As String = "Please input Associate's name." '#AsoName
Public Const c_strMSG_ASSO_INVOICE As String = "Please input Accosiate's InvoiceNo." '#InvRefNo
Public Const c_strMSG_AS_LINKQUEST As String = "The amount does not match the record in Ledger 6." & vbCrLf _
                                             & "Please check it again." & vbCrLf _
                                             & "If there is no problem for the difference, please update it."
                                                ''#|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||702||fffd||fffd||42a82||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd|?

' Sub-Contractor
Public Const c_strMSG_SUBCON_CODE As String = "Please input Sub-contractor's Code." ''#SubconCode
Public Const c_strMSG_SUBCON_NAME As String = "Please input Sub-contractor's Name." ''#SubconName
Public Const c_strMSG_SUBCON_STATUS As String = "Please choose Status."  ''#SubconStatus
Public Const c_strMSG_SUBCON_InvoiceAmount As String = "Please input Invoiced Amount." ''#SubconInvAmount
Public Const c_strMSG_SUBCON_AdvRepayment As String = "You can't input repayment amount due to no Advance payment."
                                                      ''#|fffd|O|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||14f||fffd||fffd||48a|z|fffd||353||fffd||fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_SUBCON_RepaymentOver As String = "Repayment amount exceeds Advance payment."
                                                        ''#|fffd||fffd||fffd||48a|z|fffd||fffd||fffd|A|fffd|O|fffd|r|fffd||fffd||fffd||12d09||7c2||fffd||fffd||102||fffd||fffd||702||fffd|

Public Const c_strMSG_SUBCON_StatusVoid As String = "You selected void-Status. Are you sure?"
                                              ''#SubconStatus|fffd||16ccc||fffd||fffd||250||752||80b5||fffd||702||fffd|

' Invoice
Public Const c_strMSG_INVBR_SAMENAME_AS As String = "Please input Other Associate Name."
Public Const c_strMSG_INVBR_INVOICE As String = "Please input Invoice No." ''#InvoiceNo|fffd||fffd||fffd||fffd|
Public Const c_strMSG_INVBR_INVOICEDUP As String = "This Invoice Number has been registered already." ''#InvoiceNo|fffd|d|fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_INVBR_REVERSE_AMOUNT As String = "The Amount does not match the Received amount." ''#|fffd||fffd||fffd||fffd||fffd|z|fffd||188||fffd|v|fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_INVBR_MANAGEFEE_ERROR As String = "The Total amount of Management fee for NK and for Association should be zero." _
                                                        & vbCrLf & "Please check again."
                                                        ''#ManageFee|fffd||fffd| NK, ASO|fffd||fffd|Total|fffd||fffd||fffd|[|fffd||fffd||fffd||242||202||fffd||60a4||fffd||253||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Public Const c_strMSG_INVBR_EDITLOCK As String = "You can't modify the data which you have already confirmed as monthly update."
                                                ''#|fffd|m|fffd||fffd|f|fffd|[|fffd|^|fffd||355||3cd|X|fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_INVBR_EDITLOCK_AS As String = "You can't change the Associate's Code."
                                                ''#|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||355||3cd|X|fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_INVBR_NKDATA As String = "Please input NK's Invoice Amount." ''#NKInvoice|fffd||355|K|fffd|{

' Remittance Request
Public Const c_strMSG_DATEINPUT As String = "This column is only used for Date." ''#|fffd||fffd||fffd|t|fffd||20a|O|fffd||fffd||fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSG_NOUPDATE As String = "This field is not Updated item." ''#Update|fffd||311||38f||6c3|f|fffd|[|fffd|^|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSG_REQESTTO As String = "Please input method of Request (e-mail or Fax)"
Public Const c_strMSG_NORECEIVED As String = "The SHOW TABLE function cannot be used after the remittance is made."
                                            ''#Show Table|fffd|@|fffd|\|fffd||34a|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSG_RM_NOCode As String = "No appropriate Link Code on Remittance Request (Ledger 9)."
                                                ''#|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||44a0||fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||fffd|Code|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_RM_LINKQUEST As String = "Please confirm the details of the remittance." & vbCrLf _
                                                & "Is this the remittance by your request?"
                                                ''#|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||251||382||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd|
Public Const c_strMSG_RM_ReqToCode As String = "Please input the Link Code for the receiver of this remittance."
                                                ''#|fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' PrePaid
Public Const c_strMSG_PP_Amount As String = "Is the refundable deposit amount included in this Prepaid Expense ?" & vbCrLf _
                                            & "If so, please separate to transact."
                                            ''#|fffd||fffd||fffd|z|fffd||255||6cf||60b||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_PP_Cat As String = "Please choose Prepaid Expense Category"   ''|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Public Const c_strMSG_PP_BETWEENPERIOD As String = "Please input a past date from a PeriodEnd in a "

Public Const c_strMSG_PP_QUESTR As String = "Are you ready for Transfer the data?"
                                            ''#|fffd|U|fffd||582||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd|?
Public Const c_strMSG_PP_QUESTR_COMP As String = "Transfer is completed." ''#|fffd|U|fffd||582||fffd||fffd||702||fffd||fffd||fffd|

Public Const c_strMSG_PP_QUESTR_Exit As String = "Ledger for Prepaid Expenses includes the Un-allocated data for this month." & vbCrLf _
                                                & "Will you confirm to quit this procedure? "
                                                '#|fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd||256||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd|?
Public Const c_strMSG_PP_QUESTR_ExitMon As String = "Data allocation for Prepaid Expense should be Completed before Monthly Processing."
                                                ''#|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|O|fffd||264||fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd||310|U|fffd||582||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
Public Const c_strMSG_PP_QUESTR_ExitAnnual As String = "Data allocation for Prepaid Expense should be Completed before Annual Processing."
                                                ''#|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|O|fffd||264||fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd||310|U|fffd||582||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"

' Ledger14
Public Const c_strMSG_SEACH_NFound As String = "We can not find any applicable data under the criteria." & vbCrLf _
                                                & "Please change the criteria and search again."
                                            ''#|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|
                                            ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3c2||fffd||fffd||102||fffd||84bc||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Public Const c_strMSG_SEACH_MorePFX As String = "More than ["
Public Const c_strMSG_SEACH_MoreSFX As String = "] data is applicable to the criteria." & vbCrLf _
                                                & "Please change the criteria and select data."
                                                ''#|fffd|u|fffd|v|fffd||fffd||fffd||20f||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||702||fffd||fffd|B
                                                ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3c2||fffd||fffd||103|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd||835e||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Public Const c_strMSG_SEACH_GoPFX As String = "The ["
Public Const c_strMSG_SEACH_GoSFX As String = "] data is applicable to the criteria." & vbCrLf _
                                                & "Will you continue this search?"
                                                ''#|fffd|u|fffd|v|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||702||fffd||fffd|B
                                                ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H

Public Const c_strMSG_COUNTRY_SEARCH As String = "Please input Appropriate Country Name." ''Country
Public Const c_strMSG_OFFCODE_SEARCH As String = "Please input Appropriate Office Code." ''Office Code
Public Const c_strMSG_PRJNAME_SEARCH As String = "Please input Appropriate Project Name." ''Project Name


' Ledger15
Public Const c_strMSG_FOLLOWING_CHECKDATA As String = "Following offices have not imported Modify Data."



'-----------------------------------------------------------------
'  |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||1d7||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSG_FALSEUPDATE As String = "The data has been Failed to update." ''#|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B
Public Const c_strMSG_SYSQUIT As String = "Program is shutting down." ''#|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd|
Public Const c_strMSG_NOYEARDBFILE As String = "Yearly Data Base file does not exist." & vbCrLf & "Will you make it?"
                                                ''#|fffd|N|fffd|x|fffd|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|,|fffd||c42c||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H
Public Const c_strMSG_TARGET_YEAR As String = "Please input TargetYear."
Public Const c_strMSG_QUESYEARDBFILE As String = "Yearly Data Base file will be appeared?  Is it for FY"
                                                ''#|fffd|N|fffd|x|fffd||303|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd||142||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
Public Const c_strMSG_OTHCLOSE As String = "Please select MainMenu [Quit] button."
                                                ''MainMenu|fffd||fffd|Quit|fffd||14f|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_SELECT_TARGET_YEAR As String = "Please select an Appropriate FiscalYear."

Public Const c_strMSG_DB_CONNECTFAIL As String = "Can't Connect DataBase-System."
Public Const c_strMSG_DB_RECSETFAIL As String = "Can't Access DataBase-System."
Public Const c_strMSG_DB_RECSETMATCHFAIL As String = "Can't Find UpdateData."
Public Const c_strMSG_DB_UpdateHIST As String = "Error On Historycal DataBase-System."
Public Const c_strMSG_DB_Update As String = "Error On DataBase-System."

Public Const c_strMSG_DB_GEAcCode As String = "Can't Find Cash/Bank AccountCode Number(GeCountry-CashAccode)."


Public Const c_strMSG_VersionErr As String = "This version cannot be used."
Public Const c_strMSG_Recomnd_LateVer As String = "We recommend the use of latest version."


'-----------------------------------------------------------------
'  |fffd|X|fffd|V|fffd|m|fffd|F|fffd|A|fffd|I|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strQUESTION_UPDATE As String = "Are you ready for Updating the data?"
                                            ''#|fffd||48f|W|fffd||fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd|?
Public Const c_strQUESTION_SAVE As String = "Data has not been updated. Will you quit without updating?"
                                            ''#|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||42a82||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd|?
Public Const c_strQUESTION_COMPLETE As String = "Update is completed." ''#|fffd||48f|W|fffd||fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd||fffd||702||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  Invoice|fffd|t|fffd|`|fffd|[|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
' #InvoiceNo.[nnnnn]|fffd||303|f|fffd|[|fffd|^|fffd||30f|C|fffd||fffd||fffd|`|fffd|[|fffd||fffd||fffd||c42c||fffd||fffd||fffd||702||fffd||fffd||fffd|?"
Public Const c_strQUESTION_REVERSE_PFX As String = "Do you confirm to make a reverse entry for the amendment of past transaction? " & vbCrLf & _
                                                    "If it's OK, prepare a transfer sheet using Invoice No.["
Public Const c_strQUESTION_REVERSE_SFX As String = "]?"
 
'-----------------------------------------------------------------
'  |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||fffd||752||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSG_MASTER_CBOOK As String = "No setting up for CashBook on Common Master. Please check again."
                                            ''#CashBook|fffd||30d|\|fffd||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_MASTER_BBOOK As String = "No setting up for BankBook on Common Master. Please check again."
                                            ''#BankBook|fffd||30d|\|fffd||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
Public Const c_strMSG_MASTER_PROJ As String = "No setting up for Project on Common Master. Please check again."
                                            ''#|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd|Project|fffd||310||752||80aa||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_MASTER_ASSO As String = "No setting up for Associate on Common Master. Please check again."
                                            ''#|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd|Associate|fffd||310||752||80aa||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_MASTER_SUBC As String = "No setting up for Sub-contractor on Common Master. Please check again."
                                            ''#|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd|Sub-contractor|fffd||310||752||80aa||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_MASTER_FILE As String = " Master File does not exist. Please register Master File."  ''#FileXXXX|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|

Public Const c_strMSG_MASTER_CASHorBANK As String = "No setting up for CashBook or BankBook on Common Master. Please check again."
                                            ''#CashBook|fffd||702||fffd||fffd||fffd|BankBook|fffd||30d|\|fffd||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||752||839e||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSG_NOEDIT As String = "There is no modificational or additional Items." ''#|fffd||3cd|X|fffd|E|fffd||1c9||fffd||fffd||4cf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSG_NOCUREDIT As String = "You can't input Currency in this column." ''#|fffd||289||742||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||182||342||142||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSG_USEREMIT As String = "Use Remittance Key has already been registered. Please confirm to replace."
                                            ''#|fffd||fffd||fffd||fffd|UseRemittance|fffd||350||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H
Public Const c_strMSG_NOEQUALCUR As String = "This Currency is not matched to this Project."
                                            ''#PROJECT|fffd||150||752||80b3||fffd||a0bd||fffd||289||742||188||642||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B
Public Const c_strMSG_CREATEPJT As String = "You can't modify Office Code, Project Code or Currency once you register them." _
                                             & vbCrLf & " Are you sure?"
                                            'PROJECT|fffd||fffd||752||80b5||fffd||702||fffd|
                                            '|fffd||752||fffd||fffd|AOfficeCode|fffd|AProjectCode|fffd|A|fffd||fffd||fffd||fffd||452||289||742||315||3cd|X|fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|
                                            '|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
Public Const c_strMSGCmn_NUMINPUT As String = "You can't input any but Numeric item." ''#|fffd||fffd||fffd|l|fffd||20a|O|fffd||353||fffd||fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSGCmn_NOUSEREMIT As String = "Please register Use Remittance key." ''#UseRemittance|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
Public Const c_strMSGCnt_NOTABLE As String = "There is no information list for this item." ''#|fffd||a5d7||fffd||fffd||fffd||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSGCmn_NOADDSUBCON As String = "Please register the components of Cash Book or Bank Book."
                                                ''#CashBook|fffd|A|fffd||702||fffd||fffd||341|ABookBook|fffd||30d|\|fffd||fffd||fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSGCmn_NOCOSTCODE As String = "Cost center code should be filled with 7 digits."
                                                ''#|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd|[Code|fffd||342|V|fffd||fffd||fffd||142||fffd||fffd|B
Public Const c_strMSGCmn_NODIRECTCODE As String = "Internal instruction code should be filled with 8 digits."
                                                ''#|fffd||fffd||fffd||fffd||fffd|w|fffd|}Code|fffd||fffd|8|fffd||fffd||fffd||142||fffd||fffd|B
Public Const c_strMSGCmn_NOWBSCODE As String = "Please choose Cost center code (7 digits, starting with X or Z)," & vbCrLf & _
                                                "Internal instruction code (8 digits, starting with Y)," & vbCrLf & _
                                                " or WBS code (9 digits)."
                                                ''#|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd|[Code|fffd|i|fffd||fffd||fffd||fffd||fffd|F7  |fffd||64ea||fffd||fffd||fffd||fffd||fffd|FX |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Z|fffd|j|fffd|A
                                                ''#|fffd||fffd||fffd||fffd||fffd|w|fffd|}Code|fffd|i|fffd||fffd||fffd||fffd||fffd|F8  |fffd||64ea||fffd||fffd||fffd||fffd||fffd|FY|fffd|j|fffd|A
                                                ''#WBSCode|fffd|i|fffd||fffd||fffd||fffd||fffd|F9|fffd|j|fffd||302||fffd||fffd||fffd||fffd||a0a9||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
Public Const c_strMSGCmn_UPDATEWBSCODE As String = "Expense Burden(WBS) is a substantial code." & vbCrLf & _
                                                    "Do you confirm to revise it?"
                                                ''#ExpenseBurden|fffd||34f|d|fffd|v|fffd||fffd|Code|fffd||142||fffd||fffd|B|fffd|X|fffd|V|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H

Public Const c_strMSGCmn_NotEXISTWBS As String = "Input ExpenseBurden Not exist on MasterDataBase."

Public Const c_strMSG_NOOFFICECODE As String = "Please input 7-digit Office Code starting with J."
                                                ''#|fffd|uJ|fffd|v|fffd||fffd||fffd||fffd||342||fffd||fffd||702||fffd|OfficeCode|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
Public Const c_strMSG_LENGTHOFFICECODE As String = "Office Code should be filled with 7 digits."
                                                ''#OfficeCode|fffd||342|V|fffd||fffd||fffd||142||fffd||fffd|B
Public Const c_strMSGCmn_REQUESTINPUT As String = "Please Input "
Public Const c_strMSGCmn_NOREQUEST As String = "Please input the sender's address of remittance (Request to)."
                                                ''#Request to |fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
Public Const c_strMSGCmn_NOADVICE As String = "Please input the receiver's address of remittance (Advice to)"
                                                ''#Advice to |fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSGCmn_NOJVUSEREMIT As String = "You can't register Use Remittance Key on the Bank Book for JV Main use."
                                                ''#JV main use |fffd||fffd|BANKBOOK|fffd||242||341|AUseRemittance|fffd||350||752||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSGCmn_NOPROJECTCODE As String = "Project Code should be filled with 10 digits." ''#PROJECT CODE|fffd||fffd|10|fffd||fffd||fffd||142||fffd|

Public Const c_strMSGCmn_LENGTHOVER As String = "Data length is too long." & vbCrLf & "Character Max : "

Public Const c_strMSGCmn_BrOfficeMax As String = "Can't Addition Branch-Office (max=5)." ''#|fffd|o|fffd|^|fffd||94|\|fffd||fffd|BranchOffice|fffd||fffd|5|fffd||702||141|B


'-----------------------------------------------------------------
'  ConnectionCode|fffd||752||839e||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSGTr_EXISTDATA As String = "There is already recorded data." ''#|fffd||fffd||fffd||253|o|fffd|^|fffd||3c2||743|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B
Public Const c_strMSGCn_NONKCODE As String = "Employee's Number should be filled with 5 digit." ''#|fffd||fffd||fffd||349||94|\|fffd||30e||408||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd|5|fffd||fffd||fffd||142||fffd||fffd|B

'-----------------------------------------------------------------
'  TRANSFER|fffd|U|fffd||fffd||582||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSGTr_NOSELECT As String = "You can't choose the first Item." ''#|fffd||64ea||fffd||fffd||fffd||682||351|I|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSGTr_NOFILE As String = "Yearly Indication Master File does not exist." ''#|fffd|N|fffd|x|fffd|}|fffd|X|fffd|^|fffd|[|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B
Public Const c_strMSG_EDITLOCKAUTO_TR As String = "You can't modify the automatical transferred data." '#|fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||355||48f|W|fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSGTr_BALACE_ERR As String = "Debit(Dr.) and Credit(Cr.) are not balanced." ''#TransferSheet|fffd||fffd|Balance|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_EDITLOCK_TR As String = "You can't modify the transferred data." ''#|fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||355||48f|W|fffd||142||fffd||fffd||702||fffd||fffd||fffd|

Public Const c_strMSGTr_LpNOSELECT As String = "You can't choose the first Item." ''#|fffd||64ea||fffd||fffd||fffd||682||351|I|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSGTr_LpNOTarget As String = "Please choose any Items." ''#|fffd||fffd||fffd||682||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSGTr_LpDestErr As String = "Please choose the other code." ''#|fffd||fffd||fffd||fffd||fffd||682||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||3ca||fffd||fffd||fffd|Code|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j

Public Const c_strMSGTr_LpMorePFX As String = "More than ["
Public Const c_strMSGTr_LpMoreSFX As String = "] data is selected." & vbCrLf _
                                                & "Please change the select data."
                                                ''#|fffd|u|fffd|v|fffd||fffd||fffd||20f||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B
                                                ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3c2||fffd||fffd||103|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd||835e||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|



'-----------------------------------------------------------------
Public Const c_strMSG_LINK_AMOUNT00 As String = "The amount does not match the Invoiced amount. " ''#|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_LINK_AMOUNT01 As String = "Please choose Partial Payment (Yes) or not," & vbCrLf _
                                                 & "then correct the received amount (No) if it is partial payment ?"
                                                ''#|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|(Yes)|fffd||fffd||fffd|A|fffd||fffd||fffd|z|fffd||fffd||fffd|C|fffd||fffd|(No)|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_LINK_AMOUNT02 As String = "Will you record it as Partial Payment?" ''#|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||90a9||fffd|H
Public Const c_strMSG_LINK_AMOUNT03 As String = "Please choose to modify on this Book (Yes) or on Ledger (No)."
                                                ''#|fffd||fffd||fffd||fffd|Book|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|(Yes)|fffd||fffd||fffd|A|fffd||44a0||fffd||fffd||fffd|C|fffd||fffd|(No)|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const c_strMSG_LINK_AMOUNT04 As String = "Do you want to modify this Book?" ''#|fffd||fffd||fffd||fffd| Book|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H
Public Const c_strMSG_LINK_AMOUNT05 As String = "Do you want to modify Ledger?" ''#|fffd||44a0||fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H

Public Const c_strMSG_LINK_AMOUNT06 As String = "The amount in this book does not enough the total amount " & _
                                                vbCrLf & "of transaction by Transfer Sheet." ''#|fffd||fffd||fffd|z|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd|
Public Const c_strMSG_LINK_AMOUNT07 As String = "The amount in this book exceeds the total amount of transaction by Transfer Sheet."
                                            ''#|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd||102||fffd||fffd||702||fffd|

Public Const c_strMSG_LINK_WBS As String = "The amount does not match the Expense Burden. " ''#WBS|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSG_LINK_CCode As String = "The amount does not match the Connectioncode. " ''#CCode|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||702||fffd||fffd||fffd|

Public Const c_strMSG_SAMEPAYLINKCODE As String = "Same Ledger Link Code has been found in Un-Updated data." & _
                                                vbCrLf & "Please input this transaction after Update procedure."
                                        ''#|fffd||fffd||fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||312||fffd||fffd||253||fffd||fffd||fffd||fffd|LedgerLinkCode|fffd||fffd||fffd||fffd||fffd||83|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|BUpdate|fffd||fffd||fffd||fffd||fffd||fffd||253||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  |fffd||fffd||fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSGTxt_ALLDATADECIDE As String = "All data for this Fiscal Year has been confirmed and proceeded." & vbCrLf _
                                                    & "Please proceed to the Annual processing."
                                                    ''#|fffd|{|fffd|N|fffd|x|fffd||303|f|fffd|[|fffd|^|fffd||351|S|fffd||10a|m|fffd||80b5||fffd||702||fffd||fffd||fffd||fffd|B|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
Public Const c_strMSGTxt_FAILMONTHLYFUNC As String = "Monthly processing has been failed."
                                                    ''#|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||34e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B
Public Const c_strMSGTxt_MONTHLYFUNC_PFX As String = "Monthly processing for ["
Public Const c_strMSGTxt_MONTHLYFUNC_SFX As String = "] will be started.  Will you continue?"
                                                    ''#yyyy/mm|fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H
Public Const c_strMSGTxt_FINISHMONTHLYFUNC As String = "Monthly processing has been completed."
                                                    ''#|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||34f|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B

Public Const c_strMSGTxt_FINISHTEXTOUT_BR_PFX As String = "Data File to be sent to Branch Office was prepared." & vbCrLf _
                                                    & "Please send the File ["
Public Const c_strMSGTxt_FINISHTEXTOUT_BR_SFX As String = "] to Branch Office."
                                                    ''#|fffd|C|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd|p|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B(Branch)

Public Const c_strMSGTxt_FINISHTEXTOUT_PJT_PFX As String = "Data File to be sent to Branch Office and PJT Office was prepared." & vbCrLf _
                                                    & "Please send the File ["
Public Const c_strMSGTxt_FINISHTEXTOUT_PJT_SFX As String = "] to Branch Office and PJT Office."
                                                    ''#|fffd|C|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd|p|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B(Project)
Public Const c_strMSGTxt_CONFIRMTarget As String = "Target Monthly processing has already been Done."
                                                   ''|fffd||38f||6cc||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||34a||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B...|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||202||fffd||fffd||fffd|


'-----------------------------------------------------------------
'  |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSG_AnnMUSTMonth As String = "All monthly Processing should be completed Before Annual Processing."
                                               ''#|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|O|fffd||264||fffd|S|fffd||102||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B

Public Const c_strMSG_AnnFuncPFX As String = "Annual Processing for ["
Public Const c_strMSG_AnnFuncSFX As String = "] will be started.  Will you continue?"
                                                    ''#yyyy/mm|fffd||314|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H

Public Const c_strMSG_AnnCOMPLETE As String = "Annual Processing has been completed."
                                                    ''#|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||34f|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B

Public Const c_strMSG_AnnFAIL As String = "Annual processing has been failed."
                                                    ''#|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||34e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B

'-----------------------------------------------------------------
'  |fffd|{|fffd||403|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSGImp_NOIMPORTFILE As String = "The file you choose is Not Proper for import data procedure."
                                                ''#|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||343|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
Public Const c_strMSGImp_CONFIRMFILE As String = "The file you choose has already been Done of import data procedure."
                                                ''#|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||343|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||742||142||fffd||fffd|B"
Public Const c_strMSGImp_FINISHIMPORT As String = "Import data procedure will be Canceled."
                                                ''#|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
Public Const c_strMSGImp_SUCCESSIMPORT As String = "Import data procedure has been Completed."
                                                ''#|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||34f|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
Public Const c_strMSGImp_FAILIMPORTYFUNC As String = "Import data procedure has been Failed, Not Completed"
                                                ''#|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||34e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
Public Const c_strMSGImp_DISABLEIMPORT As String = "Invalidate operation (Property:EnableR3IF is False)!"
                                                ''#|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||356||fffd||fffd||fffd||fffd||142||fffd||fffd|B"

Public Const c_strMSGImp_NOMONTHLYFUNC As String = "Monthly processing for the target month has Not been executed."
                                                ''#|fffd||38f||6cc||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
                                                
Public Const c_strMSGImp_NOMONTHLYFUNC_PFX As String = "Monthly processing for the target ["
Public Const c_strMSGImp_NOMONTHLYFUNC_SFX As String = "] has Not been executed."
                                                ''#N|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||702||fffd||fffd||fffd|B"

Public Const c_strMSGImp_IMPORTFUNC As String = "Data import procedure will be started soon.  Will you continue?"
                                                ''#|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"

Public Const c_strMSGImp_JWIMPORTFUNC As String = "BranchData import procedure will be started soon.  Will you continue?"
                                                ''#|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"

Public Const c_strMSGImp_NOPASTMONTHFUNC As String = "Import processing for the Past month has Not been executed."
                                                ''#|fffd||211|O|fffd||30c||fffd||fffd||303|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
Public Const c_strMSGImp_NOSITEMONTHFUNC As String = "SiteData Import processing for the Current month has Not been executed."
                                                ''#|fffd|J|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||6cc||fffd||fffd||303|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||702||fffd||fffd||fffd|B"

Public Const c_strMSGImp_NotEXISTMASTER_PFX As String = "Not exist ["
Public Const c_strMSGImp_NotEXISTMASTER_SFX As String = "] on Common Master. Please check again."
                                            ''#(CB01)|fffd||fffd||fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|

Public Const c_strMSGImp_NotEXISTWBS_PFX As String = "Import WBSCode Not exist" & vbCrLf & "["
Public Const c_strMSGImp_NotEXISTWBS_SFX As String = "] on Master DataBase." & vbCrLf
                                            ''#WBS|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
Public Const c_strMSGImp_NotEXISTWBS As String = "Import ExpenseBurden Not exist on MasterDataBase."

Public Const c_strMSGImp_REPLACE_PFX As String = "Replace to ["
Public Const c_strMSGImp_REPLACE_SFX As String = "] ."
                                            ''#|fffd||3ca||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B

Public Const c_strMSGImp_INVALID_MSG As String = "Please check it now!"

Public Const c_strMSGImp_LEDGER_INVALID As String = "Following Data fails to be imported since this office has already fixed (paid) or higher-prioritized corresopnding data."
                                            ''#ImportText|fffd||fffd||fffd||fffd|D|fffd||fffd|x|fffd|f|fffd|[|fffd|^|fffd||316||fffd||fffd||fffd||fffd|B

Public Const c_strMSGImp_LEDGER_UpdREPLACE As String = "Following Data is overwritten with paid-status information by this processing."
                                              ''|fffd|X|fffd|V|fffd||3c2||751||44a0||fffd|f|fffd|[|fffd|^|fffd||fffd|Paid|fffd||fffd||fffd||155||3cd|X|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B

'-----------------------------------------------------------------
'  R3|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Public Const c_strMSG_R3_FAILIMPORTFUNC As String = "R3 Interface data procedure has been Failed, Not Completed"
                                                ''#R3|fffd||582||303|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||34e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
'-----------------------------------------------------------------
'  |fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||60e||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
Public Const c_strMSG_CERT_ERR As String = "Certification is failed." & vbCrLf & "Input the correct User ID and Passowrd again."
Public Const c_strMSG_CERT_RETRYERR As String = "Your ID or Password is not available." & vbCrLf & "Please contact to system administrators."
Public Const c_strMSG_CERT_INPUT As String = "Input User ID or Password."
Public Const c_strMSG_DBMstCERT_ERR As String = "It is not available for you to use this function."

'Public Const c_strMSG_CERT_ERR As String = "|fffd|F|fffd||602||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
'                                          "|fffd||fffd||fffd||fffd||fffd||fffd|x|fffd|AID|fffd||fffd|Password|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||30f||fffd|A|fffd||113|x|fffd|A|fffd|F|fffd||602||fffd||fffd|s|fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B"
'
'Public Const c_strMSG_CERT_RETRYERR As String = "|fffd|F|fffd||602||fffd||fffd|p|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
'                                          "|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||1d7||fffd||fffd||482||242||fffd||fffd||2347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
'''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
''Public Const c_strMSG_CERTDLL_ERR As String = "|fffd|F|fffd||602||255|K|fffd|v|fffd||fffd|DLL|fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
''                                          "[NKKSOSUB.dll],[nsldapssl32v30.dll]|fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
'''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
'Public Const c_strMSG_CERT_INPUT As String = "UserID|fffd|APassword|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
'
'Public Const c_strMSG_DBMstCERT_ERR As String = "|fffd||fffd||fffd||30b|@|fffd|\|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||9320||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

''<<<2013.02.27 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
Public Const c_strMSG_FISCALYEAR_ERR As String = "There is no object data." ' |fffd||38f||6d4|N|fffd|x|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B
''>>>2013.02.27 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|

Attribute VB_Name = "modDBCommon"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd|L|fffd||fffd||590||fffd|
'  |fffd||c42c||fffd||fffd|
'    Knowlbo Suzuki
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Connection/RecordSet/DBAccess |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||10d90||fffd|
'   (2)DBAccess |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd|x|fffd|[|fffd|X|fffd||691||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_setDBACondition( _
    ByRef adoCn As ADODB.Connection, _
    ByRef adoRs As ADODB.Recordset, _
    ByRef objdba As clsDBAccess _
)
    Set adoCn = New ADODB.Connection
    Set adoRs = New ADODB.Recordset
    Set objdba = New clsDBAccess
    objdba.CallPlace = ID_NKFAS_SS
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||14f|I|fffd|m|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> TargetPeriod
'   (4)<Date |fffd|^> DecisionDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||14f|I|fffd|m|fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_GetLatestDecisionDate( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef datTargetPeriod As Date, _
    ByRef datDecision As Date _
)
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    ''DB|fffd||691||fffd|
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    datDecision = 0

On Error GoTo LBL_ERR
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTargetPeriod)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields("DecisionDate").Value) Then
            datDecision = adoRs.Fields("DecisionDate").Value
        End If
    End If
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Sub
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetLatestDecisionDate:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "sg_GetLatestDecisionDate", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OfficeMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/06 : Knowlbo Suzuki : BranchOfficeNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setOfficeMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_OfficeMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "OfficeName, "
    strSQL = strSQL & "Country, "
    strSQL = strSQL & "BranchOfficeNo, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Country").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("BranchOfficeNo").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setOfficeMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CBMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CBMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setCBMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_CBMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerCode, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Casher, "
    strSQL = strSQL & "Purpose, "
    strSQL = strSQL & "Memo, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Casher").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Purpose").Value) & ", "
    If Not IsNull(adoRs.Fields("Memo").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Memo").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setCBMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BBMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BBMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setBBMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_BBMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerCode, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "BankName, "
    strSQL = strSQL & "BranchName, "
    strSQL = strSQL & "Address, "
    strSQL = strSQL & "AccountType, "
    strSQL = strSQL & "AccountNo, "
    strSQL = strSQL & "BeneficiaryName, "
    strSQL = strSQL & "Signer, "
    strSQL = strSQL & "UseRemittance, "
    strSQL = strSQL & "Purpose, "
    strSQL = strSQL & "Memo, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("BankName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("BranchName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Address").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AccountType").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AccountNo").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("BeneficiaryName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Signer").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("UseRemittance").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Purpose").Value) & ", "
    If Not IsNull(adoRs.Fields("Memo").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Memo").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setBBMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TRMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TRMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setTRMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_TRMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerCode, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Description, "
    strSQL = strSQL & "Purpose, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    If Not IsNull(adoRs.Fields("Description").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
    Else
        strSQL = strSQL & ", "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Purpose").Value) & ", "
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setTRMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociateMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociateMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setAssociateMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_ASMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "AssociateCode, "
    strSQL = strSQL & "AssociateName, "
    strSQL = strSQL & "ContractAmount, "
    strSQL = strSQL & "ContractAdvance, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AssociateCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AssociateName").Value) & ", "
    strSQL = strSQL & adoRs.Fields("ContractAmount").Value & ", "
    strSQL = strSQL & adoRs.Fields("ContractAdvance").Value & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setAssociateMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubConMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubConMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setSubConMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_SCMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "SubConCode, "
    strSQL = strSQL & "SubConName, "
    strSQL = strSQL & "ContractAmount, "
    strSQL = strSQL & "ContractAdvance, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Reimbursable, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("SubConCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("SubConName").Value) & ", "
    strSQL = strSQL & adoRs.Fields("ContractAmount").Value & ", "
    strSQL = strSQL & adoRs.Fields("ContractAdvance").Value & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Reimbursable").Value) & ", "
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setSubConMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RMMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RMMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setRMMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_RMMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "RequestTo1, "
    strSQL = strSQL & "RequestTo2, "
    strSQL = strSQL & "RequestTo3, "
    strSQL = strSQL & "AdviceTo, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    If Not IsNull(adoRs.Fields("RequestTo1").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("RequestTo1").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("RequestTo2").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("RequestTo2").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("RequestTo3").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("RequestTo3").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("AdviceTo").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AdviceTo").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setRMMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBSMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBSMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setWBSMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_WBSMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "ID, "
    strSQL = strSQL & "WBSCode, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("WBSCode").Value) & ", "
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setWBSMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PJTMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PJTMaster|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setPJTMasterHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_PJTMasterHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "ProjectCode, "
    strSQL = strSQL & "ProjectName, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "PaymentMethod, "
    strSQL = strSQL & "Contract, "
    strSQL = strSQL & "ContractNK, "
    strSQL = strSQL & "ContractASO, "
    strSQL = strSQL & "PerCont, "
    strSQL = strSQL & "PerNK, "
    strSQL = strSQL & "PerASO, "
    strSQL = strSQL & "Advance, "
    strSQL = strSQL & "AdvanceNK, "
    strSQL = strSQL & "AdvanceASO, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProjectCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProjectName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaymentMethod").Value) & ", "
    strSQL = strSQL & adoRs.Fields("Contract").Value & ", "
    strSQL = strSQL & adoRs.Fields("ContractNK").Value & ", "
    strSQL = strSQL & adoRs.Fields("ContractASO").Value & ", "
    strSQL = strSQL & adoRs.Fields("PerCont").Value & ", "
    strSQL = strSQL & adoRs.Fields("PerNK").Value & ", "
    strSQL = strSQL & adoRs.Fields("PerASO").Value & ", "
    strSQL = strSQL & adoRs.Fields("Advance").Value & ", "
    strSQL = strSQL & adoRs.Fields("AdvanceNK").Value & ", "
    strSQL = strSQL & adoRs.Fields("AdvanceASO").Value & ", "
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setPJTMasterHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCodeMaster|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/10/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setConnectionCodeFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & " ( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "ConnectionCode, "
    strSQL = strSQL & "ConnectionName, "
    strSQL = strSQL & "Category, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setConnectionCodeFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_setConnectionCodeHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setConnectionCodeFieldsSQLString(c_strTBL_ConnCodeHst)
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Category").Value) & ", "
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setConnectionCodeHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/Bank/Transfer|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Cash/Bank/Transfer|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setLedgerCBTFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & "( "
    strSQL = strSQL & "ID, "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerCode, "
    strSQL = strSQL & "TargetPeriod, "
    strSQL = strSQL & "LedgerDate, "
    strSQL = strSQL & "Description, "
    strSQL = strSQL & "Details, "
    strSQL = strSQL & "WBSCode, "
    strSQL = strSQL & "AccountCode, "
    strSQL = strSQL & "AccountName, "
    strSQL = strSQL & "ConnectionCode, "
    strSQL = strSQL & "ConnectionName, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "EviNo, "
    strSQL = strSQL & "CheckNo, "
    strSQL = strSQL & "NKJV, "
    strSQL = strSQL & "Claim, "
    strSQL = strSQL & "Paid, "
    strSQL = strSQL & "Received, "
    strSQL = strSQL & "ImportDate, "
    strSQL = strSQL & "IFSendDate, "
    strSQL = strSQL & "IFRequestNo, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setLedgerCBTFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/Bank/Transfer|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'   (3)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Cash/Bank/Transfer|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setLedgerCBTHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByRef strTblName As String, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setLedgerCBTFieldsSQLString(strTblName)
    strSQL = strSQL & "( "
    strSQL = strSQL & adoRs.Fields("ID").Value & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("TargetPeriod").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerDate").Value) & ", "
    If Not IsNull(adoRs.Fields("Description").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Details").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Details").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("WBSCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AccountCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AccountName").Value) & ", "
    If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionCode").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ConnectionName").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionName").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("LedgerLinkCode").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("EviNo").Value) Then
        strSQL = strSQL & adoRs.Fields("EviNo").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("CheckNo").Value) Then
        strSQL = strSQL & adoRs.Fields("CheckNo").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("NKJV").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Claim").Value) & ", "
    If Not IsNull(adoRs.Fields("Paid").Value) Then
        strSQL = strSQL & adoRs.Fields("Paid").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Received").Value) Then
        strSQL = strSQL & adoRs.Fields("Received").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ImportDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ImportDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("IFSendDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("IFSendDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("IFRequestNo").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("IFRequestNo").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setLedgerCBTHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCodeNo|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<String |fffd|^> |fffd||38f||fffd|Table
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCodeNo|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_setLinkCodeNoHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal strTgtTable As String, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    
    If strTgtTable = c_strTBL_LinkCodeNo Then
        strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_LinkCodeNoHST
    Else
        strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_LinkCodeNoNKHST
    End If
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "TargetYear, "
    strSQL = strSQL & "Invoice, "
    strSQL = strSQL & "Associate, "
    strSQL = strSQL & "Subcontract, "
    strSQL = strSQL & "Remittance, "
    strSQL = strSQL & "Prepaid, "
    strSQL = strSQL & "FixedAssets, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & adoRs.Fields("TargetYear").Value & ", "
    strSQL = strSQL & adoRs.Fields("Invoice").Value & ", "
    strSQL = strSQL & adoRs.Fields("Associate").Value & ", "
    strSQL = strSQL & adoRs.Fields("Subcontract").Value & ", "
    strSQL = strSQL & adoRs.Fields("Remittance").Value & ", "
    strSQL = strSQL & adoRs.Fields("Prepaid").Value & ", "
    strSQL = strSQL & adoRs.Fields("FixedAssets").Value & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setLinkCodeNoHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RecIDNo|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RecIDNo|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_setRecIDNoHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_LedgerRecIDNoHST
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "CashBook, "
    strSQL = strSQL & "BankBook, "
    strSQL = strSQL & "Transfer, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & adoRs.Fields("CashBook").Value & ", "
    strSQL = strSQL & adoRs.Fields("BankBook").Value & ", "
    strSQL = strSQL & adoRs.Fields("Transfer").Value & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setRecIDNoHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AccountBalance|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AccountBalance|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/01 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_setAccountBalanceFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerCode, "
    strSQL = strSQL & "TargetPeriod, "
    strSQL = strSQL & "Balance, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setAccountBalanceFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AccountBalance|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AccountBalance|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_setAccountBalanceHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setAccountBalanceFieldsSQLString(c_strTBL_AcBalanceHst)
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("TargetPeriod").Value) & ", "
    strSQL = strSQL & adoRs.Fields("Balance").Value & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setAccountBalanceHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubConPayment|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubConPayment|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setSubConPaymentHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_SubConPaymentHST
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "SubConCode, "
    strSQL = strSQL & "InvRefNo, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Description, "
    strSQL = strSQL & "ReceivedDate, "
    strSQL = strSQL & "PaidDate, "
    strSQL = strSQL & "Status, "
    strSQL = strSQL & "InvoiceAmount, "
    strSQL = strSQL & "Repayment, "
    strSQL = strSQL & "Vat, "
    strSQL = strSQL & "HoldingTax, "
    strSQL = strSQL & "Others, "
    strSQL = strSQL & "PaymentAmount, "
    strSQL = strSQL & "AdvanceData, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("SubConCode").Value) & ", "
    If Not IsNull(adoRs.Fields("InvRefNo").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InvRefNo").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    If Not IsNull(adoRs.Fields("Description").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReceivedDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReceivedDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PaidDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaidDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Status").Value) & ", "
    strSQL = strSQL & adoRs.Fields("InvoiceAmount").Value & ", "
    If Not IsNull(adoRs.Fields("Repayment").Value) Then
        strSQL = strSQL & adoRs.Fields("Repayment").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Vat").Value) Then
        strSQL = strSQL & adoRs.Fields("Vat").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("HoldingTax").Value) Then
        strSQL = strSQL & adoRs.Fields("HoldingTax").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Others").Value) Then
        strSQL = strSQL & adoRs.Fields("Others").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PaymentAmount").Value) Then
        strSQL = strSQL & adoRs.Fields("PaymentAmount").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("AdvanceData").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AdvanceData").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setSubConPaymentHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceHeader|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceHeader|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setInvoiceHeaderFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "InvoiceNo, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Description, "
    strSQL = strSQL & "PeriodStart, "
    strSQL = strSQL & "PeriodEnd, "
    strSQL = strSQL & "Status, "
    strSQL = strSQL & "IssuingDate, "
    strSQL = strSQL & "ApprovalDate, "
    strSQL = strSQL & "PaymentDate, "
    strSQL = strSQL & "PaymentAmount, "
    strSQL = strSQL & "ReceivedAmount, "
    strSQL = strSQL & "AdvanceData, "
    strSQL = strSQL & "ReverseStatus, "
    strSQL = strSQL & "CorrectionLinkCode, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setInvoiceHeaderFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceHeader|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceHeader|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setInvoiceHeaderHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setInvoiceHeaderFieldsSQLString(c_strTBL_InvoiceHeaderHST)
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InvoiceNo").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    If Not IsNull(adoRs.Fields("Description").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PeriodStart").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PeriodStart").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PeriodEnd").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PeriodEnd").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Status").Value) & ", "
    If Not IsNull(adoRs.Fields("IssuingDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("IssuingDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    
    If Not IsNull(adoRs.Fields("ApprovalDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ApprovalDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PaymentDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaymentDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & adoRs.Fields("PaymentAmount").Value & ", "
    If Not IsNull(adoRs.Fields("ReceivedAmount").Value) Then
        strSQL = strSQL & adoRs.Fields("ReceivedAmount").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("AdvanceData").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AdvanceData").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReverseStatus").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReverseStatus").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("CorrectionLinkCode").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("CorrectionLinkCode").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setInvoiceHeaderHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceDetail|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceDetail|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setInvoiceDetailFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "InvoiceNo, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "AsoLinkCode, "
    strSQL = strSQL & "Classify, "
    strSQL = strSQL & "AsoCode, "
    strSQL = strSQL & "InvoiceAmount, "
    strSQL = strSQL & "Repayment, "
    strSQL = strSQL & "Retention, "
    strSQL = strSQL & "Vat, "
    strSQL = strSQL & "HoldingTax, "
    strSQL = strSQL & "ManageFee, "
    strSQL = strSQL & "OtherTax, "
    strSQL = strSQL & "Others, "
    strSQL = strSQL & "PaymentAmount, "
    strSQL = strSQL & "ReverseStatus, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setInvoiceDetailFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceDetail|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceDetail|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setInvoiceDetailHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setInvoiceDetailFieldsSQLString(c_strTBL_InvoiceDetailHST)
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InvoiceNo").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AsoLinkCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Classify").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AsoCode").Value) & ", "
    strSQL = strSQL & adoRs.Fields("InvoiceAmount").Value & ", "
    If Not IsNull(adoRs.Fields("Repayment").Value) Then
        strSQL = strSQL & adoRs.Fields("Repayment").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Retention").Value) Then
        strSQL = strSQL & adoRs.Fields("Retention").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Vat").Value) Then
        strSQL = strSQL & adoRs.Fields("Vat").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("HoldingTax").Value) Then
        strSQL = strSQL & adoRs.Fields("HoldingTax").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ManageFee").Value) Then
        strSQL = strSQL & adoRs.Fields("ManageFee").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("OtherTax").Value) Then
        strSQL = strSQL & adoRs.Fields("OtherTax").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Others").Value) Then
        strSQL = strSQL & adoRs.Fields("Others").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & adoRs.Fields("PaymentAmount").Value & ", "
    If Not IsNull(adoRs.Fields("ReverseStatus").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReverseStatus").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setInvoiceDetailHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociatePayment|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociatePayment|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setAssociatePaymentFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "AssociateCode, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "ClientInvoice, "
    strSQL = strSQL & "InvRefNo, "
    strSQL = strSQL & "Description, "
    strSQL = strSQL & "ReceivedDate, "
    strSQL = strSQL & "PaidDate, "
    strSQL = strSQL & "Status, "
    strSQL = strSQL & "PaymentAmount, "
    strSQL = strSQL & "ActualPayment, "
    strSQL = strSQL & "PaymentBalance, "
    strSQL = strSQL & "ReverseStatus, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setAssociatePaymentFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociatePayment|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociatePayment|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setAssociatePaymentHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setAssociatePaymentFieldsSQLString(c_strTBL_AssociatePaymentHST)
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AssociateCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ClientInvoice").Value) & ", "
    If Not IsNull(adoRs.Fields("InvRefNo").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InvRefNo").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Description").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReceivedDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReceivedDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PaidDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaidDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Status").Value) & ", "
    strSQL = strSQL & adoRs.Fields("PaymentAmount").Value & ", "
    If Not IsNull(adoRs.Fields("ActualPayment").Value) Then
        strSQL = strSQL & adoRs.Fields("ActualPayment").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("PaymentBalance").Value) Then
        strSQL = strSQL & adoRs.Fields("PaymentBalance").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReverseStatus").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReverseStatus").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setAssociatePaymentHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PrePaidExpense|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PrePaidExpense|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setPrePaidExpenseHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_PrePaidExpenseHST
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Description, "
    strSQL = strSQL & "Purpose, "
    strSQL = strSQL & "ConnectionCode, "
    strSQL = strSQL & "ConnectionName, "
    strSQL = strSQL & "AcCategory, "
    strSQL = strSQL & "WBSCode, "
    strSQL = strSQL & "PeriodStart, "
    strSQL = strSQL & "PeriodEnd, "
    strSQL = strSQL & "PaymentAmount, "
    strSQL = strSQL & "MonthlyAmount, "
    strSQL = strSQL & "PaymentDate, "
    strSQL = strSQL & "TransferAmount, "
    strSQL = strSQL & "TransferMonths, "
    strSQL = strSQL & "LastTransferMonth, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    If Not IsNull(adoRs.Fields("Description").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Purpose").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionName").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AcCategory").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("WBSCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PeriodStart").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PeriodEnd").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaymentAmount").Value) & ", "
    
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("MonthlyAmount").Value) & ", "
    If Not IsNull(adoRs.Fields("PaymentDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaymentDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("TransferAmount").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("TransferAmount").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("TransferMonths").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("TransferMonths").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("LastTransferMonth").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LastTransferMonth").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setPrePaidExpenseHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RequestData|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<String |fffd|^> |fffd||38f||6c3|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RequestData|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setRequestDataFieldsSQLString( _
    ByRef strTable As String _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & strTable
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "Item, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Amount, "
    strSQL = strSQL & "Remarks, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setRequestDataFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RequestData|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RequestData|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setRequestDataHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = fg_setRequestDataFieldsSQLString(c_strTBL_RequestDataHST)
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    If Not IsNull(adoRs.Fields("Item").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Item").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "
    If Not IsNull(adoRs.Fields("Amount").Value) Then
        strSQL = strSQL & adoRs.Fields("Amount").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Remarks").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Remarks").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setRequestDataHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PastRemittanceData|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PastRemittanceData|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/18 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setPastRemittanceDataHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_PastRemittanceHST
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "LedgerLinkCode, "
    strSQL = strSQL & "RequestDate, "
    strSQL = strSQL & "RequestAmount, "
    strSQL = strSQL & "RequestCurrency, "
    strSQL = strSQL & "ContactPlace, "
    strSQL = strSQL & "Comment, "
    strSQL = strSQL & "ReceiptDate, "
    strSQL = strSQL & "ReceiptAmount, "
    strSQL = strSQL & "ReceiptCurrency, "
    strSQL = strSQL & "ModifyPlace, "
    strSQL = strSQL & "ProofDate, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerLinkCode").Value) & ", "
    If Not IsNull(adoRs.Fields("RequestDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("RequestDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & adoRs.Fields("RequestAmount").Value & ", "
    If Not IsNull(adoRs.Fields("RequestCurrency").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("RequestCurrency").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ContactPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ContactPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("Comment").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Comment").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReceiptDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReceiptDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReceiptAmount").Value) Then
        strSQL = strSQL & adoRs.Fields("ReceiptAmount").Value & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ReceiptCurrency").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReceiptCurrency").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyPlace").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyPlace").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ProofDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setPastRemittanceDataHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Decision|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'   (1)<ADODB_Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PastRemittanceData|fffd||fffd||fffd||fffd|}|fffd||fffd|SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/13 : Knowlbo Suzuki : JWRetImportDate, ModifyNK|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_setDecisionDataHistorySQLString( _
    ByRef adoRs As ADODB.Recordset, _
    ByVal prmDate As Date _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_DecisionHst
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "TargetPeriod, "
    strSQL = strSQL & "ImportDate, "
    strSQL = strSQL & "DecisionDate, "
    strSQL = strSQL & "JWRetImportDate , "
    strSQL = strSQL & "ModifyNK , "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    strSQL = strSQL & "( "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("TargetPeriod").Value) & ", "
    If Not IsNull(adoRs.Fields("ImportDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ImportDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("DecisionDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("DecisionDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("JWRetImportDate").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("JWRetImportDate").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    If Not IsNull(adoRs.Fields("ModifyNK").Value) Then
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ModifyNK").Value) & ", "
    Else
        strSQL = strSQL & "Null, "
    End If
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertDate").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InsertUID").Value) & ", "
    strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
    strSQL = strSQL & ") "
    fg_setDecisionDataHistorySQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SummaryAccount|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AccountBalance|fffd|}|fffd||fffd||fffd||fffd||fffd|`SQL|fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/01 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_setSummaryAccountFieldsSQLString( _
) As String
    Dim strSQL As String
    strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_SummaryAC
    strSQL = strSQL & "( "
    strSQL = strSQL & "OfficeCode, "
    strSQL = strSQL & "TargetPeriod, "
    strSQL = strSQL & "LedgerCode, "
    strSQL = strSQL & "Currency, "
    strSQL = strSQL & "Purpose, "
    strSQL = strSQL & "WBSCode, "
    strSQL = strSQL & "AccountCode, "
    strSQL = strSQL & "ConnectionCode, "
    strSQL = strSQL & "Debit, "
    strSQL = strSQL & "Credit, "
    strSQL = strSQL & "Balance, "
    strSQL = strSQL & "InsertDate, "
    strSQL = strSQL & "DeleteDate, "
    strSQL = strSQL & "InsertUID, "
    strSQL = strSQL & "DeleteUID "
    strSQL = strSQL & ") "
    strSQL = strSQL & "VALUES "
    fg_setSummaryAccountFieldsSQLString = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ProjectMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ProjectMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportPJTMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportPJTMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PJTMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PJTMaster
        GoTo LBL_ERR
    End If
        
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "ProjectCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPJTMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PJTMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("ProjectCode").Value = UCase$(strSplit(1))
        adoRs.Fields("ProjectName").Value = strSplit(2)
        adoRs.Fields("PaymentMethod").Value = strSplit(3)
        adoRs.Fields("Currency").Value = strSplit(4)
        adoRs.Fields("Contract").Value = CCur(strSplit(5))
        adoRs.Fields("ContractNK").Value = CCur(strSplit(6))
        adoRs.Fields("ContractASO").Value = CCur(strSplit(7))
        adoRs.Fields("PerCont").Value = CCur(strSplit(8))
        adoRs.Fields("PerNK").Value = CCur(strSplit(9))
        adoRs.Fields("PerASO").Value = CCur(strSplit(10))
        adoRs.Fields("Advance").Value = CCur(strSplit(11))
        adoRs.Fields("AdvanceNK").Value = CCur(strSplit(12))
        adoRs.Fields("AdvanceASO").Value = CCur(strSplit(13))
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        Erase strSplit
    Next
    
    On Error GoTo 0
    
    fg_ImportPJTMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportPJTMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportPJTMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CBMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CBMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportCBMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportCBMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_CBMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CBMaster
        GoTo LBL_ERR
    End If
        
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setCBMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_CBMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerCode").Value = strSplit(1)
        adoRs.Fields("Currency").Value = strSplit(2)
        adoRs.Fields("Casher").Value = strSplit(3)
        adoRs.Fields("Purpose").Value = strSplit(4)
        If strSplit(5) <> "" Then
            adoRs.Fields("Memo").Value = strSplit(5)
        Else
            adoRs.Fields("Memo").Value = Null
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    
    On Error GoTo 0
    
    fg_ImportCBMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportCBMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportCBMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BBMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BBMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportBBMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportBBMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_BBMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BBMaster
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setBBMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_BBMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerCode").Value = strSplit(1)
        adoRs.Fields("Currency").Value = strSplit(2)
        adoRs.Fields("BankName").Value = strSplit(3)
        adoRs.Fields("BranchName").Value = strSplit(4)
        adoRs.Fields("Address").Value = strSplit(5)
        adoRs.Fields("AccountType").Value = strSplit(6)
        adoRs.Fields("AccountNo").Value = strSplit(7)
        adoRs.Fields("BeneficiaryName").Value = strSplit(8)
        adoRs.Fields("Signer").Value = strSplit(9)
        adoRs.Fields("UseRemittance").Value = strSplit(10)
        adoRs.Fields("Purpose").Value = strSplit(11)
        If strSplit(12) <> "" Then
            adoRs.Fields("Memo").Value = strSplit(12)
        Else
            adoRs.Fields("Memo").Value = Null
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportBBMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportBBMaster::" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportBBMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TRMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TRMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportTRMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportTRMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_TRMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_TRMaster
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setTRMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_TRMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerCode").Value = strSplit(1)
        adoRs.Fields("Currency").Value = strSplit(2)
        adoRs.Fields("Description").Value = strSplit(3)
        adoRs.Fields("Purpose").Value = strSplit(4)
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportTRMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportTRMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportTRMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ConnectionCode|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/01/09 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||30d||fffd||fffd||fffd||fffd||fffd|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportCCodMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    Dim blnNewOffice As Boolean
    Dim blnUpd As Boolean
    
'''    Dim sTm As Single
'''    sTm = Timer
    
    fg_ImportCCodMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
   
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_ConnCode & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ConnCode
        GoTo LBL_ERR
    End If
    
    ''|fffd|V|fffd|KOffice|fffd||fffd||fffd||fffd|
    If adoRs.EOF Then blnNewOffice = True
    
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        DoEvents
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        blnUpd = False
        If blnNewOffice = False Then
            If InStr(g_strConnCodeTSV, strSplit(1)) <> 0 Then
                adoRs.Filter = adFilterNone
                adoRs.Filter = "ConnectionCode=" & fg_AddSingleQuotation(strSplit(1))
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setConnectionCodeHistorySQLString(adoRs, prmDate)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ConnCode
                        GoTo LBL_ERR
                    End If
                    blnUpd = True
                End If
                adoRs.MoveFirst
            End If
        End If
        
        If blnUpd Then ''Update Data
            strSQL = "UPDATE " & c_NKFAOwner & "." & c_strTBL_ConnCode
            strSQL = strSQL & " SET "
            strSQL = strSQL & "ConnectionName = " & fg_AddSingleQuotation(strSplit(2)) & ", "
            strSQL = strSQL & "Category = " & fg_AddSingleQuotation(strSplit(3)) & ", "
            strSQL = strSQL & "InsertDate = " & fg_AddSingleQuotation(prmDate) & ", "
            strSQL = strSQL & "ProofDate = " & fg_AddSingleQuotation(prmDate) & ", "
            strSQL = strSQL & "InsertUID = " & fg_AddSingleQuotation(g_strLoginId)
            strSQL = strSQL & " WHERE OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
            strSQL = strSQL & " AND ConnectionCode = " & fg_AddSingleQuotation(strSplit(1))
        Else ''Insert Data
            strSQL = fg_setConnectionCodeFieldsSQLString(c_strTBL_ConnCode)
            strSQL = strSQL & "( "
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(0)) & ", "  'OfficeCode
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(1)) & ", "  ''ConnectionCode
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(2)) & ", "  ''ConnectionName
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(3)) & ", "  ''Category
            strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "      ''ProofDate
            strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "      ''InsertDate
            strSQL = strSQL & "Null, "                                   ''DeleteDate
            strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", " ''InsertUID
            strSQL = strSQL & " Null) "                                  ''DeleteUID
        End If
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & c_strTBL_ConnCode
            GoTo LBL_ERR
        End If
        
        Erase strSplit
    Next
    On Error GoTo 0
    
'''    MsgBox "Sec=" & Timer - sTm
'''    fg_ImportCCodMaster = False
    fg_ImportCCodMaster = True
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportCCodMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportCCodMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociateMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociateMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/01/09|fffd|FKnowlbo Suzuki : |fffd|V|fffd|K|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||30d||fffd||fffd||fffd||fffd||fffd|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportASMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnNewOffice As Boolean
    Dim blnUpd As Boolean
    
    fg_ImportASMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
        GoTo LBL_ERR
    End If
    
    ''|fffd|V|fffd|KOffice|fffd||fffd||fffd||fffd|
    If adoRs.EOF Then blnNewOffice = True
    
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        DoEvents
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        blnUpd = False
        If blnNewOffice = False Then
            adoRs.Filter = adFilterNone
            adoRs.Filter = "AssociateCode=" & fg_AddSingleQuotation(strSplit(1))
            If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                objdba.SQLString = fg_setAssociateMasterHistorySQLString(adoRs, prmDate)
                If (objdba.ExecuteSQL(adoCn) <> 0) Then
                    strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_ASMaster
                    GoTo LBL_ERR
                End If
                blnUpd = True
            End If
        End If
        
        If blnUpd = False Then adoRs.AddNew      ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("AssociateCode").Value = strSplit(1)
        adoRs.Fields("AssociateName").Value = strSplit(2)
        adoRs.Fields("ContractAmount").Value = CCur(strSplit(3))
        adoRs.Fields("ContractAdvance").Value = CCur(strSplit(4))
        adoRs.Fields("Currency").Value = strSplit(5)
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportASMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportASMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportASMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubConMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubConMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/01/09|fffd|FKnowlbo Suzuki : |fffd|V|fffd|K|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||30d||fffd||fffd||fffd||fffd||fffd|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportSCMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnNewOffice As Boolean
    Dim blnUpd As Boolean
    
    fg_ImportSCMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
   
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
        GoTo LBL_ERR
    End If
    
    ''|fffd|V|fffd|KOffice|fffd||fffd||fffd||fffd|
    If adoRs.EOF Then blnNewOffice = True
    
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        DoEvents
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        blnUpd = False
        If blnNewOffice = False Then
            adoRs.Filter = adFilterNone
            adoRs.Filter = "SubConCode=" & fg_AddSingleQuotation(strSplit(1))
            If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                objdba.SQLString = fg_setSubConMasterHistorySQLString(adoRs, prmDate)
                If (objdba.ExecuteSQL(adoCn) <> 0) Then
                    strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SCMaster
                    GoTo LBL_ERR
                End If
                blnUpd = True
            End If
        End If
        
        If blnUpd = False Then adoRs.AddNew      ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("SubConCode").Value = strSplit(1)
        adoRs.Fields("SubConName").Value = strSplit(2)
        adoRs.Fields("ContractAmount").Value = CCur(strSplit(3))
        adoRs.Fields("ContractAdvance").Value = CCur(strSplit(4))
        adoRs.Fields("Currency").Value = strSplit(5)
        adoRs.Fields("Reimbursable").Value = strSplit(6)
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportSCMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportSCMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportSCMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RMMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RMMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportRMMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportRMMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_RMMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RMMaster
        GoTo LBL_ERR
    End If
    
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setRMMasterHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RMMaster
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        If strSplit(1) <> "" Then
            adoRs.Fields("RequestTo1").Value = strSplit(1)
        Else
            adoRs.Fields("RequestTo1").Value = Null
        End If
        If strSplit(2) <> "" Then
            adoRs.Fields("RequestTo2").Value = strSplit(2)
        Else
            adoRs.Fields("RequestTo2").Value = Null
        End If
        If strSplit(3) <> "" Then
            adoRs.Fields("RequestTo3").Value = strSplit(3)
        Else
            adoRs.Fields("RequestTo3").Value = Null
        End If
        If strSplit(4) <> "" Then
            adoRs.Fields("AdviceTo").Value = strSplit(4)
        Else
            adoRs.Fields("AdviceTo").Value = Null
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportRMMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportRMMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportRMMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBSMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBSMaster|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportWBSMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnUpdate As Boolean
    Dim strReplaceWBS As String
    
    fg_ImportWBSMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
   
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_WBSMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_WBSMaster
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        DoEvents
        blnUpdate = False
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        
        ''WBS|fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
        If fg_CheckWBSExist(strSplit(2), strReplaceWBS) = False Then
            ''Replace|fffd||38f||6c2||fffd|WBS
            adoRs.Filter = "WBSCode=" & fg_AddSingleQuotation(strReplaceWBS)
            If adoRs.EOF Then
                blnUpdate = True
                strSplit(2) = strReplaceWBS
                adoRs.Filter = adFilterNone
            Else
                adoRs.Filter = adFilterNone
                adoRs.MoveFirst
            End If
        Else
            blnUpdate = True
        End If
        
        If blnUpdate Then
            adoRs.Filter = "ID=" & fg_AddSingleQuotation(strSplit(1))
            If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                objdba.SQLString = fg_setWBSMasterHistorySQLString(adoRs, prmDate)
                If (objdba.ExecuteSQL(adoCn) <> 0) Then
                    strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_WBSMaster
                    GoTo LBL_ERR
                End If
            Else
                adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
            End If
            adoRs.Fields("OfficeCode").Value = strSplit(0)
            adoRs.Fields("ID").Value = strSplit(1)
            adoRs.Fields("WBSCode").Value = strSplit(2)
            adoRs.Fields("ProofDate").Value = prmDate
            adoRs.Fields("InsertDate").Value = prmDate
            adoRs.Fields("InsertUID").Value = g_strLoginId
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportWBSMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportWBSMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportWBSMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkcodeNumber|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkcodeNumber|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_ImportLCodMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportLCodMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
   
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_LinkCodeNo & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_LinkCodeNo
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "TargetYear=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setLinkCodeNoHistorySQLString(adoRs, c_strTBL_LinkCodeNo, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_LinkCodeNo
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("TargetYear").Value = CLng(strSplit(1))
        If strSplit(2) <> "" Then
            adoRs.Fields("Invoice").Value = CLng(strSplit(2))
        Else
            adoRs.Fields("Invoice").Value = 0
        End If
        If strSplit(3) <> "" Then
            adoRs.Fields("Associate").Value = CLng(strSplit(3))
        Else
            adoRs.Fields("Associate").Value = 0
        End If
        If strSplit(4) <> "" Then
            adoRs.Fields("Subcontract").Value = CLng(strSplit(4))
        Else
            adoRs.Fields("Subcontract").Value = 0
        End If
        If strSplit(5) <> "" Then
            adoRs.Fields("Remittance").Value = CLng(strSplit(5))
        Else
            adoRs.Fields("Remittance").Value = 0
        End If
        If strSplit(6) <> "" Then
            adoRs.Fields("Prepaid").Value = CLng(strSplit(6))
        Else
            adoRs.Fields("Prepaid").Value = 0
        End If
        If strSplit(7) <> "" Then
            adoRs.Fields("FixedAssets").Value = CLng(strSplit(7))
        Else
            adoRs.Fields("FixedAssets").Value = 0
        End If
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportLCodMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportLCodMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportLCodMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkcodeNumberJW|fffd|i|fffd|c|fffd||18e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||501|j|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|c|fffd||18e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCodeNo|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_ImportLCodJWMaster( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportLCodJWMaster = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
   
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_LinkCodeNoJW & " tb "
    strSQL = strSQL & "WHERE tb.OwnerOfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_LinkCodeNoJW
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "OfficeCode=" & fg_AddSingleQuotation(strSplit(1)) & " AND " _
                        & "TargetYear=" & fg_AddSingleQuotation(strSplit(2))
        If adoRs.EOF Then
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OwnerOfficeCode").Value = strSplit(0)
        adoRs.Fields("OfficeCode").Value = strSplit(1)
        adoRs.Fields("TargetYear").Value = CLng(strSplit(2))
        If strSplit(3) <> "" Then
            adoRs.Fields("Invoice").Value = CLng(strSplit(3))
        Else
            adoRs.Fields("Invoice").Value = 0
        End If
        If strSplit(4) <> "" Then
            adoRs.Fields("Associate").Value = CLng(strSplit(4))
        Else
            adoRs.Fields("Associate").Value = 0
        End If
        If strSplit(5) <> "" Then
            adoRs.Fields("Subcontract").Value = CLng(strSplit(5))
        Else
            adoRs.Fields("Subcontract").Value = 0
        End If
        If strSplit(6) <> "" Then
            adoRs.Fields("Remittance").Value = CLng(strSplit(6))
        Else
            adoRs.Fields("Remittance").Value = 0
        End If
        If strSplit(7) <> "" Then
            adoRs.Fields("Prepaid").Value = CLng(strSplit(7))
        Else
            adoRs.Fields("Prepaid").Value = 0
        End If
        
        If strSplit(8) <> "" Then
            adoRs.Fields("FixedAssets").Value = CLng(strSplit(8))
        Else
            adoRs.Fields("FixedAssets").Value = 0
        End If
        adoRs.Fields("UpdateDate").Value = prmDate
        adoRs.Fields("SendDate").Value = prmDate
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportLCodJWMaster = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportLCodJWMaster:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportLCodJWMaster", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PaidStatus|fffd||fffd|Ledger|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|W
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PaidStatus|fffd||fffd|Ledger|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/09 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_LedgerPaidAcquisition( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    fg_LedgerPaidAcquisition = False
    g_strImpPaidLinkCodeCSV = ""
    g_strOrgPaidLinkCodeCSV = ""
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    ''PastRemittance|fffd||fffd|ReceiptDate|fffd||752||fffd||3c2||fffd|LinkCode|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "tb.ReceiptDate Is NOT NULL"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    
    ''PaymentDate|fffd||752||fffd||3c2||fffd|LinkCode|fffd||fffd|CSV|fffd||6d1||fffd|
    Do Until adoRs.EOF
        If g_strOrgPaidLinkCodeCSV <> "" Then g_strOrgPaidLinkCodeCSV = g_strOrgPaidLinkCodeCSV & ","
        g_strOrgPaidLinkCodeCSV = g_strOrgPaidLinkCodeCSV & adoRs.Fields("LedgerLinkCode").Value
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    
    ''InvoiceHeader|fffd||fffd|PaymentDate|fffd||752||fffd||3c2||fffd|LinkCode|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " WHERE " & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "hd.PaymentDate Is NOT NULL"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    
    ''PaymentDate|fffd||752||fffd||3c2||fffd|LinkCode|fffd||fffd|CSV|fffd||6d1||fffd|
    Do Until adoRs.EOF
        If g_strOrgPaidLinkCodeCSV <> "" Then g_strOrgPaidLinkCodeCSV = g_strOrgPaidLinkCodeCSV & ","
        g_strOrgPaidLinkCodeCSV = g_strOrgPaidLinkCodeCSV & adoRs.Fields("LedgerLinkCode").Value
        adoRs.MoveNext
    Loop
    
    fg_LedgerPaidAcquisition = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_LedgerPaidAcquisition:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_LedgerPaidAcquisition", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceHeader|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceHeader|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/11/20 : Knowlbo Suzuki : CorrectionLinkCode|fffd||752||fffd|~|fffd|X|fffd|C|fffd||fffd|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'   2006/01/30 : Knowlbo Suzuki : Description |fffd||fffd|Length|fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportInvoiceHeader( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnPermission As Boolean
    Dim strInvalid As String
    Dim strOverwriten As String
    Dim datUpdchk As Date
    
    fg_ImportInvoiceHeader = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strInvalid = ""
    strOverwriten = ""
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " WHERE " & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update
            ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                If UBound(strSplit) <> 17 And strSplit(16) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                    blnPermission = False
                End If
            End If
            ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|Paid|fffd||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
            If blnPermission = False And strSplit(10) <> "" Then      ''PaymentDate
                If g_strImpPaidLinkCodeCSV <> "" Then g_strImpPaidLinkCodeCSV = g_strImpPaidLinkCodeCSV & ","
                g_strImpPaidLinkCodeCSV = g_strImpPaidLinkCodeCSV & adoRs.Fields("LedgerLinkCode").Value
                blnPermission = True
            End If
            ''PaymentDate|fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N
            If (IsNull(adoRs.Fields("PaymentDate").Value) = False) Then
                If strSplit(14) = "" Then   ''ReverseStatus(|fffd|t|fffd|`|fffd|[|fffd||142||202||fffd|)
                    blnPermission = False
                End If
            End If
            If blnPermission = False Then
                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvoiceNo])
                If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
                strInvalid = strInvalid & strSplit(1) & " [" & strSplit(2) & "]"
                GoTo LBL_NEXT
            End If
            ''|fffd|X|fffd|V|fffd||3c2||fffd|Data|fffd||fffd|PaidStatusData|fffd||33d1||fffd|`|fffd|F|fffd|b|fffd|N
            If strSplit(10) <> "" Then      ''PaymentDate
                If Not IsNull(adoRs.Fields("InsertDate").Value) Then         ''InsertDate
                    datUpdchk = CDate(adoRs.Fields("InsertDate").Value)
                End If
                If Not IsNull(adoRs.Fields("ProofDate").Value) Then           ''ProofDate
                    datUpdchk = CDate(adoRs.Fields("ProofDate").Value)
                End If
                If CDate(adoRs.Fields("InsertDate").Value) > datUpdchk Or _
                   CDate(adoRs.Fields("InsertDate").Value) = g_datDecisionDate Then
                    ''Paid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvoiceNo])
                    If strOverwriten <> "" Then strOverwriten = strOverwriten & "@d@"
                    strOverwriten = strOverwriten & strSplit(1) & " [" & strSplit(2) & "]"
                End If
            End If
            ''|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setInvoiceHeaderHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceHeader
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerLinkCode").Value = strSplit(1)
        adoRs.Fields("InvoiceNo").Value = strSplit(2)
        adoRs.Fields("Currency").Value = strSplit(3)
        
        If strSplit(4) <> "" Then
            If Len(strSplit(4)) > 128 Then
                strSplit(4) = Left$(strSplit(4), 128)
            End If
            adoRs.Fields("Description").Value = strSplit(4)
        Else
            adoRs.Fields("Description").Value = Null
        End If
        If strSplit(5) <> "" Then
            adoRs.Fields("PeriodStart").Value = CDate(strSplit(5))
        Else
            adoRs.Fields("PeriodStart").Value = Null
        End If
        If strSplit(6) <> "" Then
            adoRs.Fields("PeriodEnd").Value = CDate(strSplit(6))
        Else
            adoRs.Fields("PeriodEnd").Value = Null
        End If
        adoRs.Fields("Status").Value = strSplit(7)
        If strSplit(8) <> "" Then
            adoRs.Fields("IssuingDate").Value = CDate(strSplit(8))
        Else
            adoRs.Fields("IssuingDate").Value = Null
        End If
        If strSplit(9) <> "" Then
            adoRs.Fields("ApprovalDate").Value = CDate(strSplit(9))
        Else
            adoRs.Fields("ApprovalDate").Value = Null
        End If
        If strSplit(10) <> "" Then
            adoRs.Fields("PaymentDate").Value = CDate(strSplit(10))
        Else
            adoRs.Fields("PaymentDate").Value = Null
        End If
        If strSplit(11) <> "" Then
            adoRs.Fields("PaymentAmount").Value = CCur(strSplit(11))
        Else
            adoRs.Fields("PaymentAmount").Value = 0
        End If
        If strSplit(12) <> "" Then
            adoRs.Fields("ReceivedAmount").Value = CCur(strSplit(12))
        Else
            adoRs.Fields("ReceivedAmount").Value = 0
        End If
        If strSplit(13) <> "" Then
            adoRs.Fields("AdvanceData").Value = strSplit(13)
        Else
            adoRs.Fields("AdvanceData").Value = Null
        End If
        If strSplit(14) <> "" Then
            adoRs.Fields("ReverseStatus").Value = strSplit(14)
        Else
            adoRs.Fields("ReverseStatus").Value = Null
        End If
        If strSplit(15) <> "" Then
            adoRs.Fields("CorrectionLinkCode").Value = strSplit(15)
        Else
            adoRs.Fields("CorrectionLinkCode").Value = Null
        End If
        If UBound(strSplit) <> 17 Then ''FASY2|fffd||30f||a347|
            If strSplit(16) <> "" Then
                adoRs.Fields("ModifyPlace").Value = strSplit(16)
            Else
                adoRs.Fields("ModifyPlace").Value = Null
            End If
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
LBL_NEXT:
        If blnPermission Then        ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_InvoiceHeader & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    If strOverwriten <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|
        g_intImportFixedReplaceCount = g_intImportFixedReplaceCount + 1
        strOverwriten = "[LED.04] Invoice to Client" & ":" & "@t@" & strOverwriten
        ReDim Preserve g_strAryImportFixedReplace(g_intImportFixedReplaceCount)
        g_strAryImportFixedReplace(g_intImportFixedReplaceCount) = strOverwriten
    End If
    
    fg_ImportInvoiceHeader = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportInvoiceHeader:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportInvoiceHeader", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceDetail|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceDetail|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportInvoiceDetail( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim lngTknIx As Long
    Dim blnPermission As Boolean
    Dim strInvalid As String
    
    fg_ImportInvoiceDetail = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strInvalid = ""
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " WHERE " & "dt.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceDetail
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strSplit(1)) & " AND " _
                        & "AsoLinkCode=" & fg_AddSingleQuotation(strSplit(4))
        If Not adoRs.EOF Then   ''Update
            
            ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                If UBound(strSplit) <> 18 And strSplit(17) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                    blnPermission = False
                End If
            End If
            ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|Paid|fffd||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
            If blnPermission = False Then      ''PaymentDate
                lngTknIx = fg_GetIndexFromTokenInCSV(adoRs.Fields("LedgerLinkCode").Value, g_strImpPaidLinkCodeCSV)
                If lngTknIx >= 0 Then blnPermission = True
            End If
            ''PaymentDate|fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N|fffd||341|AInvoiceHeader|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
            lngTknIx = fg_GetIndexFromTokenInCSV(adoRs.Fields("LedgerLinkCode").Value, g_strOrgPaidLinkCodeCSV)
            If lngTknIx >= 0 Then
                If strSplit(16) = "" Then   ''ReverseStatus(|fffd|t|fffd|`|fffd|[|fffd||142||202||fffd|)
                    blnPermission = False
                End If
            End If
          
            If blnPermission = False Then
                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvoiceNo])
                If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
                strInvalid = strInvalid & strSplit(1) & " [" & strSplit(2) & "]"
                GoTo LBL_NEXT
            End If
            ''|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setInvoiceDetailHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceDetail
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerLinkCode").Value = strSplit(1)
        adoRs.Fields("InvoiceNo").Value = strSplit(2)
        adoRs.Fields("Currency").Value = strSplit(3)
        adoRs.Fields("AsoLinkCode").Value = strSplit(4)
        adoRs.Fields("Classify").Value = strSplit(5)
        adoRs.Fields("AsoCode").Value = strSplit(6)
        If strSplit(7) <> "" Then
            adoRs.Fields("InvoiceAmount").Value = CCur(strSplit(7))
        Else
            adoRs.Fields("InvoiceAmount").Value = 0
        End If
        If strSplit(8) <> "" Then
            adoRs.Fields("Repayment").Value = CCur(strSplit(8))
        Else
            adoRs.Fields("Repayment").Value = 0
        End If
        If strSplit(9) <> "" Then
            adoRs.Fields("Retention").Value = CCur(strSplit(9))
        Else
            adoRs.Fields("Retention").Value = 0
        End If
        If strSplit(10) <> "" Then
            adoRs.Fields("Vat").Value = CCur(strSplit(10))
        Else
            adoRs.Fields("Vat").Value = 0
        End If
        If strSplit(11) <> "" Then
            adoRs.Fields("HoldingTax").Value = CCur(strSplit(11))
        Else
            adoRs.Fields("HoldingTax").Value = 0
        End If
        If strSplit(12) <> "" Then
            adoRs.Fields("ManageFee").Value = CCur(strSplit(12))
        Else
            adoRs.Fields("ManageFee").Value = 0
        End If
        If strSplit(13) <> "" Then
            adoRs.Fields("OtherTax").Value = CCur(strSplit(13))
        Else
            adoRs.Fields("OtherTax").Value = 0
        End If
        If strSplit(14) <> "" Then
            adoRs.Fields("Others").Value = CCur(strSplit(14))
        Else
            adoRs.Fields("Others").Value = 0
        End If
        If strSplit(15) <> "" Then
            adoRs.Fields("PaymentAmount").Value = CCur(strSplit(15))
        Else
            adoRs.Fields("PaymentAmount").Value = 0
        End If
        If strSplit(16) <> "" Then
            adoRs.Fields("ReverseStatus").Value = strSplit(16)
        Else
            adoRs.Fields("ReverseStatus").Value = Null
        End If
        If UBound(strSplit) <> 18 Then ''FASY2|fffd||30f||a347|
            If strSplit(17) <> "" Then
                adoRs.Fields("ModifyPlace").Value = CStr(strSplit(17))
            Else
                adoRs.Fields("ModifyPlace").Value = Null
            End If
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
LBL_NEXT:
        If blnPermission Then        ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_InvoiceDetail & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    fg_ImportInvoiceDetail = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportInvoiceDetail:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportInvoiceDetail", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubConPayment|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubConPayment|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/09/11 : Knowlbo Suzuki : AdvanceData|fffd||310||752||fffd||3cd|X
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportSubConPayment( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnPermission As Boolean
    Dim strInvalid As String
    Dim strOverwriten As String
    Dim datUpdchk As Date
    
    fg_ImportSubConPayment = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strInvalid = ""
    strOverwriten = ""
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SubConPayment & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update
            ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                If UBound(strSplit) <> 17 And strSplit(16) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                    blnPermission = False
                End If
            End If
            ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|Paid|fffd||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
            If blnPermission = False And strSplit(7) <> "" Then      ''PaidDate
                blnPermission = True
            End If
            ''PaidDate|fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N
            If (IsNull(adoRs.Fields("PaidDate").Value) = False) Then
                blnPermission = False
            End If
            If blnPermission = False Then
                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvRefNo]-[SubConCode])
                If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
                strInvalid = strInvalid & strSplit(1) & " [" & strSplit(2) & "]-[" & strSplit(4) & "]"
                GoTo LBL_NEXT
            End If
            
            ''|fffd|X|fffd|V|fffd||3c2||fffd|Data|fffd||fffd|PaidStatusData|fffd||33d1||fffd|`|fffd|F|fffd|b|fffd|N
            If strSplit(7) <> "" Then      ''PaidDate
                If Not IsNull(adoRs.Fields("InsertDate").Value) Then         ''InsertDate
                    datUpdchk = CDate(adoRs.Fields("InsertDate").Value)
                End If
                If Not IsNull(adoRs.Fields("ProofDate").Value) Then           ''ProofDate
                    datUpdchk = CDate(adoRs.Fields("ProofDate").Value)
                End If
                If CDate(adoRs.Fields("InsertDate").Value) > datUpdchk Or _
                   CDate(adoRs.Fields("InsertDate").Value) = g_datDecisionDate Then
                    ''Paid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvRefNo]-[SubConCode])
                    If strOverwriten <> "" Then strOverwriten = strOverwriten & "@d@"
                    strOverwriten = strOverwriten & strSplit(1) & " [" & strSplit(2) & "]-[" & strSplit(4) & "]"
                End If
            End If
            ''|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setSubConPaymentHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SubConPayment
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerLinkCode").Value = strSplit(1)
        adoRs.Fields("InvRefNo").Value = strSplit(2)
        adoRs.Fields("Currency").Value = strSplit(3)
        adoRs.Fields("SubConCode").Value = strSplit(4)
        If strSplit(5) <> "" Then
            adoRs.Fields("Description").Value = strSplit(5)
        Else
            adoRs.Fields("Description").Value = Null
        End If
        If strSplit(6) <> "" Then
            adoRs.Fields("ReceivedDate").Value = CDate(strSplit(6))
        Else
            adoRs.Fields("ReceivedDate").Value = Null
        End If
        If strSplit(7) <> "" Then
            adoRs.Fields("PaidDate").Value = CDate(strSplit(7))
        Else
            adoRs.Fields("PaidDate").Value = Null
        End If
        adoRs.Fields("Status").Value = strSplit(8)
        If strSplit(9) <> "" Then
            adoRs.Fields("InvoiceAmount").Value = CCur(strSplit(9))
        Else
            adoRs.Fields("InvoiceAmount").Value = 0
        End If
        If strSplit(10) <> "" Then
            adoRs.Fields("Repayment").Value = CCur(strSplit(10))
        Else
            adoRs.Fields("Repayment").Value = 0
        End If
        If strSplit(11) <> "" Then
            adoRs.Fields("Vat").Value = CCur(strSplit(11))
        Else
            adoRs.Fields("Vat").Value = 0
        End If
        If strSplit(12) <> "" Then
            adoRs.Fields("HoldingTax").Value = CCur(strSplit(12))
        Else
            adoRs.Fields("HoldingTax").Value = 0
        End If
        If strSplit(13) <> "" Then
            adoRs.Fields("Others").Value = CCur(strSplit(13))
        Else
            adoRs.Fields("Others").Value = 0
        End If
        If strSplit(14) <> "" Then
            adoRs.Fields("PaymentAmount").Value = CCur(strSplit(14))
        Else
            adoRs.Fields("PaymentAmount").Value = 0
        End If
        If strSplit(15) <> "" Then
            adoRs.Fields("AdvanceData").Value = CStr(strSplit(15))
        Else
            adoRs.Fields("AdvanceData").Value = Null
        End If
        If UBound(strSplit) <> 17 Then ''FASY2|fffd||30f||a347|
            If strSplit(16) <> "" Then
                adoRs.Fields("ModifyPlace").Value = CStr(strSplit(16))
            Else
                adoRs.Fields("ModifyPlace").Value = Null
            End If
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
LBL_NEXT:
        If blnPermission Then        ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_SubConPayment & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    If strOverwriten <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|
        g_intImportFixedReplaceCount = g_intImportFixedReplaceCount + 1
        strOverwriten = "[LED.07] Payment to Sub-Contractor" & ":" & "@t@" & strOverwriten
        ReDim Preserve g_strAryImportFixedReplace(g_intImportFixedReplaceCount)
        g_strAryImportFixedReplace(g_intImportFixedReplaceCount) = strOverwriten
    End If
    fg_ImportSubConPayment = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportSubConPayment:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportSubConPayment", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociatePayment|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)AssociatePayment|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportAssociatePayment( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnPermission As Boolean
    Dim strInvalid As String
    Dim strOverwriten As String
    Dim datUpdchk As Date
    
    fg_ImportAssociatePayment = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strInvalid = ""
    strOverwriten = ""
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " WHERE " & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update
            ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                If UBound(strSplit) <> 15 And strSplit(14) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                    blnPermission = False
                End If
            End If
            ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|Paid|fffd||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
            If blnPermission = False And strSplit(8) <> "" Then      ''PaidDate
                blnPermission = True
            End If
            ''PaidDate|fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N
            If (IsNull(adoRs.Fields("PaidDate").Value) = False) Then
                If strSplit(13) = "" Then   ''ReverseStatus(|fffd|t|fffd|`|fffd|[|fffd||142||202||fffd|)
                    blnPermission = False
                End If
            End If
            If blnPermission = False Then
                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvRefNo]-[AssociateCode])
                If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
                strInvalid = strInvalid & strSplit(1) & " [" & strSplit(5) & "]-[" & strSplit(2) & "]"
                GoTo LBL_NEXT
            End If
            ''|fffd|X|fffd|V|fffd||3c2||fffd|Data|fffd||fffd|PaidStatusData|fffd||33d1||fffd|`|fffd|F|fffd|b|fffd|N
            If strSplit(8) <> "" Then      ''PaidDate
                If Not IsNull(adoRs.Fields("InsertDate").Value) Then         ''InsertDate
                    datUpdchk = CDate(adoRs.Fields("InsertDate").Value)
                End If
                If Not IsNull(adoRs.Fields("ProofDate").Value) Then           ''ProofDate
                    datUpdchk = CDate(adoRs.Fields("ProofDate").Value)
                End If
                If CDate(adoRs.Fields("InsertDate").Value) > datUpdchk Or _
                   CDate(adoRs.Fields("InsertDate").Value) = g_datDecisionDate Then
                    ''Paid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [InvRefNo]-[AssociateCode])
                    If strOverwriten <> "" Then strOverwriten = strOverwriten & "@d@"
                    strOverwriten = strOverwriten & strSplit(1) & " [" & strSplit(5) & "]-[" & strSplit(2) & "]"
                End If
            End If
            ''|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerLinkCode").Value = strSplit(1)
        adoRs.Fields("AssociateCode").Value = strSplit(2)
        adoRs.Fields("Currency").Value = strSplit(3)
        adoRs.Fields("ClientInvoice").Value = strSplit(4)
        If strSplit(5) <> "" Then
            adoRs.Fields("InvRefNo").Value = strSplit(5)
        Else
            adoRs.Fields("InvRefNo").Value = Null
        End If
        If strSplit(6) <> "" Then
            adoRs.Fields("Description").Value = strSplit(6)
        Else
            adoRs.Fields("Description").Value = Null
        End If
        If strSplit(7) <> "" Then
            adoRs.Fields("ReceivedDate").Value = CDate(strSplit(7))
        Else
            adoRs.Fields("ReceivedDate").Value = Null
        End If
        If strSplit(8) <> "" Then
            adoRs.Fields("PaidDate").Value = CDate(strSplit(8))
        Else
            adoRs.Fields("PaidDate").Value = Null
        End If
        adoRs.Fields("Status").Value = strSplit(9)
        If strSplit(10) <> "" Then
            adoRs.Fields("PaymentAmount").Value = CCur(strSplit(10))
        Else
            adoRs.Fields("PaymentAmount").Value = 0
        End If
        If strSplit(11) <> "" Then
            adoRs.Fields("ActualPayment").Value = CCur(strSplit(11))
        Else
            adoRs.Fields("ActualPayment").Value = 0
        End If
        If strSplit(12) <> "" Then
            adoRs.Fields("PaymentBalance").Value = CCur(strSplit(12))
        Else
            adoRs.Fields("PaymentBalance").Value = 0
        End If
        If strSplit(13) <> "" Then
            adoRs.Fields("ReverseStatus").Value = strSplit(13)
        Else
            adoRs.Fields("ReverseStatus").Value = Null
        End If
        If UBound(strSplit) <> 15 Then ''FASY2|fffd||30f||a347|
            If strSplit(14) <> "" Then
                adoRs.Fields("ModifyPlace").Value = CStr(strSplit(14))
            Else
                adoRs.Fields("ModifyPlace").Value = Null
            End If
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
LBL_NEXT:
        If blnPermission Then        ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_AssociatePayment & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    If strOverwriten <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|
        g_intImportFixedReplaceCount = g_intImportFixedReplaceCount + 1
        strOverwriten = "[LED.06] Payment to Associate" & ":" & "@t@" & strOverwriten
        ReDim Preserve g_strAryImportFixedReplace(g_intImportFixedReplaceCount)
        g_strAryImportFixedReplace(g_intImportFixedReplaceCount) = strOverwriten
    End If
    fg_ImportAssociatePayment = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportAssociatePayment:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportAssociatePayment", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PastRemittance|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PastRemittance|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportPastRemittance( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnPermission As Boolean
    Dim strInvalid As String
    Dim strOverwriten As String
    Dim datUpdchk As Date
    
    fg_ImportPastRemittance = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strInvalid = ""
    strOverwriten = ""
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update
            ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                If UBound(strSplit) <> 11 And strSplit(10) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                    blnPermission = False
                End If
            End If
            ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|ReceiptDate|fffd||752||fffd||3c2||742||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
            If blnPermission = False And strSplit(7) <> "" Then      ''ReceiptDate
                If g_strImpPaidLinkCodeCSV <> "" Then g_strImpPaidLinkCodeCSV = g_strImpPaidLinkCodeCSV & ","
                g_strImpPaidLinkCodeCSV = g_strImpPaidLinkCodeCSV & adoRs.Fields("LedgerLinkCode").Value
                blnPermission = True
            End If
            ''ReceiptDate|fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N
            If (IsNull(adoRs.Fields("ReceiptDate").Value) = False) Then
                blnPermission = False
            End If
            If blnPermission = False Then
                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [RequestAmount])
                If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
                strInvalid = strInvalid & strSplit(1) & " [" & CCur(strSplit(4)) & "]"
                GoTo LBL_NEXT
            End If
            ''|fffd|X|fffd|V|fffd||3c2||fffd|Data|fffd||fffd|PaidStatusData|fffd||33d1||fffd|`|fffd|F|fffd|b|fffd|N
            If strSplit(7) <> "" Then      ''ReceiptDate
                ''|fffd|X|fffd|V|fffd||3c2||fffd|Data|fffd||fffd|PaidStatusData|fffd||33d1||fffd|`|fffd|F|fffd|b|fffd|N
                If Not IsNull(adoRs.Fields("InsertDate").Value) Then         ''InsertDate
                    datUpdchk = CDate(adoRs.Fields("InsertDate").Value)
                End If
                If Not IsNull(adoRs.Fields("ProofDate").Value) Then           ''ProofDate
                    datUpdchk = CDate(adoRs.Fields("ProofDate").Value)
                End If
                If CDate(adoRs.Fields("InsertDate").Value) > datUpdchk Or _
                   CDate(adoRs.Fields("InsertDate").Value) = g_datDecisionDate Then
                    ''Paid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [RequestAmount])
                    If strOverwriten <> "" Then strOverwriten = strOverwriten & "@d@"
                    strOverwriten = strOverwriten & strSplit(1) & " [" & CCur(strSplit(4)) & "]"
                End If
            End If
            ''|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPastRemittanceDataHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PastRemittance
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerLinkCode").Value = strSplit(1)
        If strSplit(2) <> "" Then
            adoRs.Fields("RequestDate").Value = CDate(strSplit(2))
        Else
            adoRs.Fields("RequestDate").Value = Null
        End If
        adoRs.Fields("RequestCurrency").Value = strSplit(3)
        If strSplit(4) <> "" Then
            adoRs.Fields("RequestAmount").Value = CCur(strSplit(4))
        Else
            adoRs.Fields("RequestAmount").Value = 0
        End If
        adoRs.Fields("ContactPlace").Value = strSplit(5)
        
        If strSplit(6) <> "" Then
            adoRs.Fields("Comment").Value = strSplit(6)
        Else
            adoRs.Fields("Comment").Value = Null
        End If
        If strSplit(7) <> "" Then
            adoRs.Fields("ReceiptDate").Value = CDate(strSplit(7))
        Else
            adoRs.Fields("ReceiptDate").Value = Null
        End If
        If strSplit(8) <> "" Then
            adoRs.Fields("ReceiptCurrency").Value = strSplit(8)
        Else
            adoRs.Fields("ReceiptCurrency").Value = Null
        End If
        If strSplit(9) <> "" Then
            adoRs.Fields("ReceiptAmount").Value = CCur(strSplit(9))
        Else
            adoRs.Fields("ReceiptAmount").Value = Null
        End If
        If UBound(strSplit) <> 11 Then ''FASY2|fffd||30f||a347|
            If strSplit(10) <> "" Then
                adoRs.Fields("ModifyPlace").Value = CStr(strSplit(10))
            Else
                adoRs.Fields("ModifyPlace").Value = Null
            End If
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
LBL_NEXT:
        If blnPermission Then        ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_PastRemittance & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    If strOverwriten <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|
        g_intImportFixedReplaceCount = g_intImportFixedReplaceCount + 1
        strOverwriten = "[LED.09] Remittance Request" & ":" & "@t@" & strOverwriten
        ReDim Preserve g_strAryImportFixedReplace(g_intImportFixedReplaceCount)
        g_strAryImportFixedReplace(g_intImportFixedReplaceCount) = strOverwriten
    End If
    fg_ImportPastRemittance = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportPastRemittance:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportPastRemittance", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   RequestData|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RequestData|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportRequestData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim lngTknIx As Long
    Dim strLinkCode As String
    Dim blnPermission As Boolean
    Dim strInvalid As String
    
    fg_ImportRequestData = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strLinkCode = ""
    strInvalid = ""

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_RequestData & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RequestData
        GoTo LBL_ERR
    End If
    
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        If strLinkCode <> strSplit(1) Then
            strLinkCode = strSplit(1)
            adoRs.Filter = adFilterNone
            adoRs.Requery
            adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strLinkCode)
            If Not adoRs.EOF Then   ''Update
                ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
                If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                    If UBound(strSplit) <> 7 And strSplit(6) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                        blnPermission = False
                    End If
                End If
                ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|ReceiptDate|fffd||752||fffd||3c2||742||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
                If blnPermission = False Then
                    lngTknIx = fg_GetIndexFromTokenInCSV(adoRs.Fields("LedgerLinkCode").Value, g_strImpPaidLinkCodeCSV)
                    If lngTknIx >= 0 Then blnPermission = True
                End If
                ''ReceiptDate|fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N|fffd||341|APastRemittance|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                lngTknIx = fg_GetIndexFromTokenInCSV(adoRs.Fields("LedgerLinkCode").Value, g_strOrgPaidLinkCodeCSV)
                If lngTknIx >= 0 Then blnPermission = False
                
                If blnPermission Then
                    Do Until adoRs.EOF ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
                        objdba.SQLString = fg_setRequestDataHistorySQLString(adoRs, prmDate)
                        If (objdba.ExecuteSQL(adoCn) <> 0) Then
                            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RequestData
                            GoTo LBL_ERR
                        End If
                        adoRs.MoveNext
                    Loop
                    adoRs.MoveFirst
                    ''|fffd||38f||6c3|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc|(|fffd|{|fffd||fffd||fffd||34d||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd|.....|fffd||fffd|)
                    strSQL = "DELETE FROM " & c_NKFAOwner & "." & c_strTBL_RequestData
                    strSQL = strSQL & " WHERE OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
                    strSQL = strSQL & " AND LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
                    objdba.SQLString = strSQL
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RequestData
                        GoTo LBL_ERR
                    End If
                End If
            End If
        End If
        If blnPermission = False Then
            ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [Item]
            If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
            strInvalid = strInvalid & strSplit(1) & " [" & strSplit(2) & "]"
            GoTo LBL_NEXT
        Else
            ''|fffd|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
            strSQL = fg_setRequestDataFieldsSQLString(c_strTBL_RequestData)
            strSQL = strSQL & "( "
            strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", " ''OfficeCode
            strSQL = strSQL & fg_AddSingleQuotation(strLinkCode) & ", "     ''LedgerLinkCode
            If strSplit(2) <> "" Then                                       ''Item
                strSQL = strSQL & fg_AddSingleQuotation(strSplit(2)) & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(3)) & ", "     ''Currency
            strSQL = strSQL & CCur(strSplit(4)) & ", "                      ''Amount
            If strSplit(5) <> "" Then                                       ''Remarks
                strSQL = strSQL & fg_AddSingleQuotation(strSplit(5)) & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
            If UBound(strSplit) <> 7 Then ''FASY2|fffd||30f||a347|
                If strSplit(6) <> "" Then
                    strSQL = strSQL & fg_AddSingleQuotation(strSplit(6)) & ", " ''ModifyPlace
                Else
                    strSQL = strSQL & "Null, "
                End If
            Else
                strSQL = strSQL & "Null, "
            End If
            strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "         ''ProofDate
            strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "         ''InsertDate
            strSQL = strSQL & "Null, "                                      ''DeleteDate
            strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "    ''InsertUID
            strSQL = strSQL & " Null) "                                     ''DeleteUID
            objdba.SQLString = strSQL
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_Update & ":" & c_strTBL_RequestData
                GoTo LBL_ERR
            End If
LBL_NEXT:
        End If
        Erase strSplit
    Next
    On Error GoTo 0
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_RequestData & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    fg_ImportRequestData = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportRequestData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportRequestData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PrePaidExpense|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PrePaidExpense|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/19 : Knowlbo Suzuki : ImportData|fffd||30d|X|fffd|V|fffd|D|fffd||fffd|x|fffd|A|fffd|m|fffd||fffd||3d1||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportPrePaidExpense( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim strReplaceWBS As String
    Dim blnPermission As Boolean
    Dim strInvalid As String
    Dim strOverwriten As String
    Dim datUpdchk As Date
    
    fg_ImportPrePaidExpense = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    strInvalid = ""
    strOverwriten = ""
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        blnPermission = True
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strSplit(1))
        If Not adoRs.EOF Then   ''Update
            
            ''NK/JW|fffd||48f|W|fffd||44a0||fffd||fffd|Site|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N(|fffd|D|fffd||fffd|x |fffd||fffd|<-|fffd|X|fffd|V--|fffd||fffd|j
            If (IsNull(adoRs.Fields("ModifyPlace").Value) = False) Then
                If UBound(strSplit) <> 18 And strSplit(17) = "" Then ''ModifyPlace|fffd||fffd||fffd||752||fffd|
                    blnPermission = False
                End If
            End If
            ''|fffd|D|fffd||fffd|x|fffd||fffd||fffd||10ad||fffd||102||fffd|Paid|fffd||30f||a347||fffd||fffd|Import|fffd||fffd||fffd||fffd|
            If blnPermission = False And strSplit(13) <> "" Then      ''PaymentDate
                blnPermission = True
            End If
            ''PaymentDate|fffd||752||fffd||3c2||742||256||fffd|PaymentDate|fffd||33d1||fffd||fffd||fffd||34b||58e|~|fffd||303|`|fffd|F|fffd|b|fffd|N
            If (IsNull(adoRs.Fields("PaymentDate").Value) = False) And strSplit(13) = "" Then
                blnPermission = False
            End If
            If blnPermission = False Then
                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [PaymentAmount])
                If strInvalid <> "" Then strInvalid = strInvalid & "@d@"
                strInvalid = strInvalid & strSplit(1) & " [" & strSplit(11) & "]"
                GoTo LBL_NEXT
            End If
            ''|fffd|X|fffd|V|fffd||3c2||fffd|Data|fffd||fffd|PaidStatusData|fffd||33d1||fffd|`|fffd|F|fffd|b|fffd|N
            If strSplit(13) <> "" Then      ''PaymentDate
                If Not IsNull(adoRs.Fields("InsertDate").Value) Then         ''InsertDate
                    datUpdchk = CDate(adoRs.Fields("InsertDate").Value)
                End If
                If Not IsNull(adoRs.Fields("ProofDate").Value) Then           ''ProofDate
                    datUpdchk = CDate(adoRs.Fields("ProofDate").Value)
                End If
                If CDate(adoRs.Fields("InsertDate").Value) > datUpdchk Or _
                   CDate(adoRs.Fields("InsertDate").Value) = g_datDecisionDate Then
                    ''Paid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|(LedgerLinkCode [PaymentAmount])
                    If strOverwriten <> "" Then strOverwriten = strOverwriten & "@d@"
                    strOverwriten = strOverwriten & strSplit(1) & " [" & strSplit(11) & "]"
                End If
            End If
            ''|fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPrePaidExpenseHistorySQLString(adoRs, prmDate)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PrePaidExpense
                GoTo LBL_ERR
            End If
        Else
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OfficeCode").Value = strSplit(0)
        adoRs.Fields("LedgerLinkCode").Value = strSplit(1)
        adoRs.Fields("Currency").Value = strSplit(2)
        If strSplit(3) <> "" Then
            adoRs.Fields("Description").Value = strSplit(3)
        Else
            adoRs.Fields("Description").Value = Null
        End If
        adoRs.Fields("Purpose").Value = strSplit(4)
        adoRs.Fields("ConnectionCode").Value = strSplit(5)
        adoRs.Fields("ConnectionName").Value = strSplit(6)
        adoRs.Fields("AcCategory").Value = strSplit(7)
        
        ''WBSCode|fffd||303|`|fffd|F|fffd|b|fffd|N
        If fg_CheckWBSExist(strSplit(8), strReplaceWBS) = False Then
            strSplit(8) = strReplaceWBS
        End If
        adoRs.Fields("WBSCode").Value = strSplit(8)
        If strSplit(9) <> "" Then
            adoRs.Fields("PeriodStart").Value = CDate(strSplit(9))
        Else
            adoRs.Fields("PeriodStart").Value = Null
        End If
        If strSplit(10) <> "" Then
            adoRs.Fields("PeriodEnd").Value = CDate(strSplit(10))
        Else
            adoRs.Fields("PeriodEnd").Value = Null
        End If
        If strSplit(11) <> "" Then
            adoRs.Fields("PaymentAmount").Value = CCur(strSplit(11))
        Else
            adoRs.Fields("PaymentAmount").Value = 0
        End If
        If strSplit(12) <> "" Then
            adoRs.Fields("MonthlyAmount").Value = CCur(strSplit(12))
        Else
            adoRs.Fields("MonthlyAmount").Value = 0
        End If
        If strSplit(13) <> "" Then
            adoRs.Fields("PaymentDate").Value = CDate(strSplit(13))
        Else
            adoRs.Fields("PaymentDate").Value = Null
        End If
        If strSplit(14) <> "" Then
            adoRs.Fields("TransferAmount").Value = CCur(strSplit(14))
        Else
            adoRs.Fields("TransferAmount").Value = 0
        End If
        If strSplit(15) <> "" Then
            adoRs.Fields("TransferMonths").Value = CLng(strSplit(15))
        Else
            adoRs.Fields("TransferMonths").Value = 0
        End If
        If strSplit(16) <> "" Then
            adoRs.Fields("LastTransferMonth").Value = CDate(strSplit(16))
        Else
            adoRs.Fields("LastTransferMonth").Value = Null
        End If
        If UBound(strSplit) <> 18 Then ''FASY2|fffd||30f||a347|
            If strSplit(17) <> "" Then
                adoRs.Fields("ModifyPlace").Value = CStr(strSplit(17))
            Else
                adoRs.Fields("ModifyPlace").Value = Null
            End If
        End If
        adoRs.Fields("ProofDate").Value = prmDate
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
LBL_NEXT:
        If blnPermission Then        ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            adoRs.Update
        End If
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    If strInvalid <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd||592||1c9||fffd|
        g_intImportInvalidCount = g_intImportInvalidCount + 1
        strInvalid = c_strTBL_PrePaidExpense & ":" & "@t@" & strInvalid
        ReDim Preserve g_strAryImportInvalid(g_intImportInvalidCount)
        g_strAryImportInvalid(g_intImportInvalidCount) = strInvalid
    End If
    If strOverwriten <> "" Then ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd||592||1c9||fffd|
        g_intImportFixedReplaceCount = g_intImportFixedReplaceCount + 1
        strOverwriten = "[LED.08] PrePaid Expenses" & ":" & "@t@" & strOverwriten
        ReDim Preserve g_strAryImportFixedReplace(g_intImportFixedReplaceCount)
        g_strAryImportFixedReplace(g_intImportFixedReplaceCount) = strOverwriten
    End If
    fg_ImportPrePaidExpense = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportPrePaidExpense:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportPrePaidExpense", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DecisionFASY|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^(TAB|fffd|f|fffd||fffd||fffd|~|fffd|^)
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DecisionFASY|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/02/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_ImportDecisionFASY( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strAryImpData() As String, _
    ByVal prmDate As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strSplit() As String
    Dim lngIx As Long
    
    fg_ImportDecisionFASY = False

    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_DecisionFASY & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_DecisionFASY
        GoTo LBL_ERR
    End If
    For lngIx = LBound(strAryImpData) To UBound(strAryImpData)
        strSplit = Split(strAryImpData(lngIx), vbTab) ''TAB|fffd||fffd||fffd||fffd|
        adoRs.Filter = adFilterNone
        
        ''FASY1|fffd||30f|o|fffd||fffd|Format|fffd||341|AFASY2|fffd||18d||fffd||fffd||d0b9||fffd||102||fffd||fffd||fffd|
        adoRs.Filter = "OwnerOfficeCode=" & fg_AddSingleQuotation(strSplit(0)) & " AND " _
                    & "TargetPeriod=" & fg_AddSingleQuotation(strSplit(2))
        If adoRs.EOF Then
            adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        End If
        adoRs.Fields("OwnerOfficeCode").Value = strSplit(0)
        adoRs.Fields("OfficeCode").Value = strSplit(1)
        adoRs.Fields("TargetPeriod").Value = CDate(strSplit(2))
        If strSplit(3) <> "" Then
            adoRs.Fields("ImportDate").Value = CDate(strSplit(3))
        Else
            adoRs.Fields("ImportDate").Value = Null
        End If
        If strSplit(4) <> "" Then
            adoRs.Fields("DecisionDate").Value = CDate(strSplit(4))
        Else
            adoRs.Fields("DecisionDate").Value = Null
        End If
        If strSplit(5) <> "" Then
            adoRs.Fields("NKRetImportDate").Value = CDate(strSplit(5))
        Else
            adoRs.Fields("NKRetImportDate").Value = Null
        End If
        If strSplit(6) <> "" Then
            adoRs.Fields("JWRetImportDate").Value = CDate(strSplit(6))
        Else
            adoRs.Fields("JWRetImportDate").Value = Null
        End If
        If strSplit(7) <> "" Then
            adoRs.Fields("UpdateDate").Value = CDate(strSplit(7))
        Else
            adoRs.Fields("UpdateDate").Value = Null
        End If
        If strSplit(8) <> "" Then
            adoRs.Fields("SendDate").Value = CDate(strSplit(8))
        Else
            adoRs.Fields("SendDate").Value = Null
        End If
        adoRs.Fields("InsertDate").Value = prmDate
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveFirst
        Erase strSplit
    Next
    On Error GoTo 0
    fg_ImportDecisionFASY = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportDecisionFASY:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportDecisionFASY", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/Bank/Transfer|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsImportDtData |fffd|^> |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|f|fffd|[|fffd|^
'   (4)<Date |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Cash/Bank/Transfer|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|c|fffd|a|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2005/10/28 : Knowlbo Suzuki : 2005/12|fffd||fffd||fffd|{|fffd||30a||fffd||fffd||fffd||216||689||fffd||fffd||3d1||389||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'   2006/01/30 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||216||692|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||312||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_ImportCBTLedgerData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef typAryDtData() As clsImportDtData, _
    ByVal prmDate As Date _
) As Boolean
    Dim strSQL As String
    Dim strSqlHistory As String
    Dim strMSG As String
    Dim strLedgerCode As String
    Dim strDbTable As String
    Dim strDbTableHistory As String
    Dim strSplit() As String
    Dim lngIx As Long
    Dim blnSetLedger As Boolean
    Dim intLedKind As Integer
    Dim lngRecIDNo As Long
    Dim strReplaceAcCode As String
    Dim strReplaceWbsCode As String
    Dim blnAcCodeReplaced As Boolean
    Dim blnWbsCodeReplaced As Boolean
    Dim strDescription As String
    
    fg_ImportCBTLedgerData = False
    
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    blnSetLedger = False
    
    For lngIx = LBound(typAryDtData) To UBound(typAryDtData)
        DoEvents
        strLedgerCode = typAryDtData(lngIx).m_strTbl
        strSplit = Split(typAryDtData(lngIx).m_strData, vbTab)
        If blnSetLedger = False Then
            Select Case Left$(strLedgerCode, 2)
            Case "CB" ''CashBook
                strDbTable = c_strTBL_CashBook
                strDbTableHistory = c_strTBL_CashBookHST
                intLedKind = GLED_CB
            Case "BB" ''BankBook
                strDbTable = c_strTBL_BankBook
                strDbTableHistory = c_strTBL_BankBookHST
                intLedKind = GLED_BB
            Case "TR" ''Transfer
                strDbTable = c_strTBL_Transfer
                strDbTableHistory = c_strTBL_TransferHST
                intLedKind = GLED_TR
            End Select
        
            blnSetLedger = True
        End If

        blnAcCodeReplaced = False    '' |fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        blnWbsCodeReplaced = False    '' |fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        
        lngRecIDNo = g_lngAryCurRecIDNumber(intLedKind)
        lngRecIDNo = lngRecIDNo + 1
        g_lngAryCurRecIDNumber(intLedKind) = lngRecIDNo

        ''strSql = fg_setLedgerCBTFieldsSQLString(strDbTable)
        
        strSQL = "( "
        strSQL = strSQL & lngRecIDNo & ", "                                 ''ID
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "     ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(strLedgerCode) & ", "       ''LedgerCode
        strSQL = strSQL & fg_AddSingleQuotation(strSplit(2)) & ", "         ''TargetPeriod
        strSQL = strSQL & fg_AddSingleQuotation(strSplit(3)) & ", "         ''LedgerDate
        
        strDescription = ""
        If strSplit(4) <> "" Then                                           ''Description
            If Len(strSplit(4)) > 128 Then
                strSplit(4) = Left$(strSplit(4), 128)
            End If
            strDescription = strSplit(4)
            strSQL = strSQL & "@DESCRIPTION@" & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If strSplit(5) <> "" Then                                           ''Details
            If Len(strSplit(5)) > 128 Then
                strSplit(5) = Left$(strSplit(5), 128)
            End If
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(5)) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        
        ''WBSCode|fffd||303|`|fffd|F|fffd|b|fffd|N
        If fg_CheckWBSExist(strSplit(6), strReplaceWbsCode) = False Then
            blnWbsCodeReplaced = True
            strSQL = strSQL & "@WBSMARK@" & ", "
        Else
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(6)) & ", "         ''WBSCode
        End If
        
        ''2005/10/28...2005/12|fffd||fffd||fffd|{|fffd||30a||fffd||fffd||fffd||216||689||fffd||fffd||3d1||389||fffd|
        ''|fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd||582||315||3ca||fffd|
        If fg_IsExistingAcCode(strSplit(7), strReplaceAcCode) = False Then
            blnAcCodeReplaced = True
            strSQL = strSQL & "@ACCODEMARK@" & ", "
        Else
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(7)) & ", "         ''AccountCode
        End If
        
        strSQL = strSQL & fg_AddSingleQuotation(strSplit(8)) & ", "         ''AccountName
        If strSplit(9) <> "" Then                                           ''ConectCode
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(9)) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If strSplit(10) <> "" Then                                          ''ConectName
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(10)) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If strSplit(11) <> "" Then                                          ''LinkCode
            strSQL = strSQL & fg_AddSingleQuotation(strSplit(11)) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If strSplit(12) <> "" Then                                          ''EviNo
            strSQL = strSQL & CLng(strSplit(12)) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If strSplit(13) <> "" Then                                          ''CheckNo
            strSQL = strSQL & CLng(strSplit(13)) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(strSplit(14)) & ", "        ''NKJV
        strSQL = strSQL & fg_AddSingleQuotation(strSplit(15)) & ", "        ''Claim
        If strSplit(16) <> "" Then                                          ''Paid
            strSQL = strSQL & CCur(strSplit(16)) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If strSplit(17) <> "" Then                                          ''Received
            strSQL = strSQL & CCur(strSplit(17)) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "             ''ImportDate
        strSQL = strSQL & "Null, "                                          ''IFSendDate
        strSQL = strSQL & " -1, "                                           ''IFRequestNo
        If g_intImportKind = 0 Then ''Office Data Import
            strSQL = strSQL & "Null, "                                      ''ModifyPlace
        Else
            strSQL = strSQL & fg_AddSingleQuotation("2") & ", "             ''ModifyPlace
        End If
        strSQL = strSQL & fg_AddSingleQuotation(prmDate) & ", "             ''InsertDate
        strSqlHistory = strSQL
        strSQL = strSQL & "Null, "                                          ''DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "        ''InsertUID
        strSQL = strSQL & " Null) "                                         ''DeleteUID
        
        strSqlHistory = strSqlHistory & fg_AddSingleQuotation(prmDate) & ", "             ''DeleteDate
        strSqlHistory = strSqlHistory & fg_AddSingleQuotation(g_strLoginId) & ", "        ''InsertUID
        strSqlHistory = strSqlHistory & fg_AddSingleQuotation(g_strLoginId) & ") "        ''DeleteUID
        
        '' |fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||317||fffd||fffd||fffd||1c9||fffd|
        If ((blnWbsCodeReplaced = True) Or (blnAcCodeReplaced = True)) Then
            Dim strInsertHist As String
                            
            ''OrignalData Add
            strInsertHist = strSqlHistory
            strInsertHist = Replace(strInsertHist, "@DESCRIPTION@", fg_AddSingleQuotation(strDescription))
            If blnWbsCodeReplaced = True Then
                strInsertHist = Replace(strInsertHist, "@WBSMARK@", fg_AddSingleQuotation(strSplit(6)))
            End If
            If blnAcCodeReplaced = True Then
                strInsertHist = Replace(strInsertHist, "@ACCODEMARK@", fg_AddSingleQuotation(strSplit(7)))
            End If
            
            objdba.SQLString = fg_setLedgerCBTFieldsSQLString(strDbTableHistory) & strInsertHist
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_Update & strDbTableHistory
                GoTo LBL_ERR
            End If
            
            ''ReplaceData Add
            strInsertHist = strSQL
            strInsertHist = Replace(strInsertHist, "@DESCRIPTION@", fg_AddSingleQuotation("[NK]AccountCode or Expense Burden Replaced"))
            If blnWbsCodeReplaced = True Then
                strInsertHist = Replace(strInsertHist, "@WBSMARK@", fg_AddSingleQuotation(strReplaceWbsCode))
            End If
            
            If blnAcCodeReplaced = True Then
                strInsertHist = Replace(strInsertHist, "@ACCODEMARK@", fg_AddSingleQuotation(strReplaceAcCode))
            End If
            objdba.SQLString = fg_setLedgerCBTFieldsSQLString(strDbTableHistory) & strInsertHist
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_Update & strDbTableHistory
                GoTo LBL_ERR
            End If
        
        End If
        strSQL = Replace(strSQL, "@DESCRIPTION@", fg_AddSingleQuotation(strDescription))
        If blnWbsCodeReplaced = True Then
            strSQL = Replace(strSQL, "@WBSMARK@", fg_AddSingleQuotation(strReplaceWbsCode))
        End If
        If blnAcCodeReplaced = True Then
            strSQL = Replace(strSQL, "@ACCODEMARK@", fg_AddSingleQuotation(strReplaceAcCode))
        End If
        
        objdba.SQLString = fg_setLedgerCBTFieldsSQLString(strDbTable) & strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & strDbTable
            GoTo LBL_ERR
        End If
    Next
    
    On Error GoTo 0
    fg_ImportCBTLedgerData = True
LBL_END:
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_ImportCBTLedgerData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_ImportCBTLedgerData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||311||38f||fffd|ProjectCode|fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||311||38f||fffd|ProjectCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|L|fffd||fffd||fffd||24a||582||fffd||70b8||fffd|A|fffd||fffd||fffd||742||fffd|Office|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetCurrentPJTCode( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    fg_GetCurrentPJTCode = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PJTMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PJTMaster
        GoTo LBL_ERR
    End If
        
    If Not adoRs.EOF Then
        g_strImportPJTCode = adoRs.Fields("ProjectCode").Value
    End If
    On Error GoTo 0
    fg_GetCurrentPJTCode = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetCurrentPJTCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetCurrentPJTCode", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||602||fffd|/|fffd||fffd||fffd||fffd||fffd||742||303|C|fffd||fffd||fffd|||fffd|[|fffd|gWBS|fffd||312|u|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||602||fffd|/|fffd||fffd||fffd||fffd||fffd||742||303|C|fffd||fffd||fffd|||fffd|[|fffd|gWBS|fffd||312|u|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|c|fffd||fffd|DB|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2005/05/27 : Knowlbo Suzuki : |fffd||152||fffd|R|fffd|[|fffd|h|fffd||255||3cd|X
'-----------------------------------------------------------------
Public Function _
fg_GetReplaceWBS( _
) As String
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    fg_GetReplaceWBS = ""
    If g_strImportPJTCode = "" Then
        sg_MsgBoxError "fg_GetReplaceWBS", "Not exist ProjectCode!"
        Exit Function
    End If
    
    '' 2005/05/27 |fffd||152||fffd|R|fffd|[|fffd|h|fffd||255||3cd|X
    fg_GetReplaceWBS = c_strReplaceWBSCode
    Exit Function

'    If Len(g_strImportPJTCode) = 7 And _
'       (Left$(g_strImportPJTCode, 1) = "X" Or Left$(g_strImportPJTCode, 1) = "Z") Then
'        fg_GetReplaceWBS = g_strImportPJTCode
'        Exit Function
'    End If
'
'    Set adoCn = New ADODB.Connection
'    Set adoRs = New ADODB.Recordset
'    Set objdba = New clsDBAccess
'    objdba.CallPlace = ID_NKFAS_SS
'
'#If def_intDBPlace = 1 Then
'    objdba.ServerName = c_strServerName
'    objdba.DBName = c_strDBName
'    objdba.UserID = c_strUserID
'    objdba.Password = c_strPassword
'#Else
'    '----------------------------------------
'    objdba.ServerName = c_strNKMMServerName
'    objdba.DBName = c_strNKMMDBName
'    objdba.UserID = c_strNKMM_UserID
'    objdba.Password = c_strNKMM_Password
'    '----------------------------------------
'#End If
'    strMSG = "DataBase Error"
'    If (objdba.openADOConnection(adoCn) <> 0) Then
'        strMSG = c_strMSG_DB_CONNECTFAIL
'        GoTo LBL_ERR
'    End If
'
'On Error GoTo LBL_ERR
'
'    strSql = "SELECT * FROM " & def|fffd||fffd|{|fffd||fffd||fffd| & " tb"
'    strSql = strSql & " WHERE tb.|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||50d||fffd| = " & fg_AddSingleQuotation(g_strImportPJTCode)
'    objdba.SQLString = strSql
'    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & "|fffd||fffd|{|fffd||fffd||fffd|"
'        GoTo LBL_ERR
'    End If
'
'    If Not adoRs.EOF Then
'        fg_GetReplaceWBS = "Z" & adoRs.Fields("|fffd|Z|fffd|p|fffd||fffd||1d5||fffd|Code").Value
'    End If
'
'    On Error GoTo 0
'LBL_END:
'    Call objdba.closeRecordset(adoRs)
'    Call objdba.closeADOConnection(adoCn)
'    Set adoRs = Nothing
'    Set adoCn = Nothing
'    Set objdba = Nothing
'    Exit Function
'LBL_ERR:
'    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetReplaceWBS:" & strMSG & Str(Err.Number) & " - " & Err.Description, Err, LEVEL_ERROR)
'    sg_MsgBoxError "fg_GetReplaceWBS", strMSG
'    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd||30a||fffd||fffd||fffd||fffd||602||fffd|/|fffd||fffd||fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|`|fffd|F|fffd|b|fffd|N|fffd|R|fffd|[|fffd|h
'   (2)<String |fffd|^> |fffd||fffd||583|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBS|fffd||30a||fffd||fffd||fffd||fffd||602||fffd|/|fffd||fffd||fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|c|fffd||fffd|DB|fffd||fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||14a|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|(|fffd|g|fffd|p|fffd||94|\)  False:|fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||602||fffd|i|fffd|g|fffd|p|fffd|s|fffd||81|j
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/02/21 : |fffd|n|7c97|S|fffd|q : DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'   2016/08/01 : Y.Watanabe : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CheckWBSExist( _
    ByRef strCheckCode As String, _
    ByRef strReplaceCode As String _
) As Boolean
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim lngTokenIndex As Long
    Dim strReplace As String
    Dim intCodeLength As Integer
        
    fg_CheckWBSExist = False
    If strCheckCode = "" Then Exit Function
    
    lngTokenIndex = fg_GetIndexFromTokenInCSV(strCheckCode, g_strImportWBSCodeCSV)
    If lngTokenIndex >= 0 Then
        strReplace = fg_GetTokenFromIndexInCSV(lngTokenIndex, g_strReplaceWBSCodeCSV)
        If g_strReplaceWBSCode = strReplace Then
            strReplaceCode = strReplace
            fg_CheckWBSExist = False
        Else
            fg_CheckWBSExist = True
        End If
        Exit Function
    Else
        strReplace = strCheckCode
        If g_strImportWBSCodeCSV <> "" Then
            g_strImportWBSCodeCSV = g_strImportWBSCodeCSV & ","
            g_strReplaceWBSCodeCSV = g_strReplaceWBSCodeCSV & ","
        End If
        g_strImportWBSCodeCSV = g_strImportWBSCodeCSV & strCheckCode
    End If
        
    Set adoCn = New ADODB.Connection
    Set adoRs = New ADODB.Recordset
    Set objdba = New clsDBAccess
    objdba.CallPlace = ID_NKFAS_SS

    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword
    
'''<<<2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'    objdba.ServerName = c_strNKMMServerName
'    objdba.DBName = c_strNKMMDBName
'    objdba.UserID = c_strNKMM_UserID
'    objdba.Password = c_strNKMM_Password
'
''#If def_intDBPlace = 1 Then
''    objdba.ServerName = c_strServerName
''    objdba.DBName = c_strDBName
''    objdba.UserID = c_strUserID
''    objdba.Password = c_strPassword
''#Else
''    '----------------------------------------
''    objdba.ServerName = c_strNKMMServerName
''    objdba.DBName = c_strNKMMDBName
''    objdba.UserID = c_strNKMM_UserID
''    objdba.Password = c_strNKMM_Password
''    '----------------------------------------
''#End If
'''>>>2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

    strMSG = "DataBase Error"
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    intCodeLength = Len(strCheckCode)
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Select Case intCodeLength
    Case 7 ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
        strSQL = "SELECT * FROM " & defCheckCostCenter
        strSQL = Replace(strSQL, "@1", strCheckCode)
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defCheckCostCenter
    Case 8 ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
        strSQL = "SELECT * FROM " & defCheckInternalDirect
        strSQL = Replace(strSQL, "@1", strCheckCode)
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defCheckInternalDirect
    Case 9 ''WBS
        strSQL = "SELECT * FROM " & defCheckWBS
        strSQL = Replace(strSQL, "@1", strCheckCode)
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defCheckWBS
    End Select
    
'    Select Case intCodeLength
'    Case 7 ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
'        strSQL = "SELECT * FROM " & def|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ & " tb"
'        strSQL = strSQL & " WHERE tb.|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^ = " & fg_AddSingleQuotation(strCheckCode)
'        strSQL = strSQL & " AND (tb.|fffd|L|fffd||fffd||fffd|J|fffd|n|fffd||fffd| <= GetDate() AND tb.|fffd|L|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd| >= GetDate())"
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & "|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^"
'    Case 8 ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
'        strSQL = "SELECT * FROM " & def|fffd||fffd||fffd||fffd||fffd|w|fffd|} & " tb"
'        strSQL = strSQL & " WHERE tb.|fffd||fffd||fffd||fffd||fffd|w|fffd|} = " & fg_AddSingleQuotation(strCheckCode)
'        strSQL = strSQL & " AND (tb.|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GetDate() AND tb.|fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd| >= GetDate())"
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & "|fffd||fffd||fffd||fffd||fffd|w|fffd|}"
'    Case 9 ''WBS
'        strSQL = "SELECT * FROM " & defWBS & " tb"
'        strSQL = strSQL & " WHERE tb.WBS|fffd||50d||fffd| = " & fg_AddSingleQuotation(strCheckCode)
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & "WBS"
'    End Select
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        GoTo LBL_ERR
    End If
        
    If Not adoRs.EOF Then
    
        Select Case intCodeLength
        Case 7 ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
            ''|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd|X|fffd||fffd||fffd|[
        Case 8 ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
            ''|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd|X|fffd||fffd||fffd|[
        Case 9 ''WBS
            ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
            If Not IsNull(adoRs.Fields("WBSEndFlag").Value) And adoRs.Fields("WBSEndFlag").Value <> "0" Then
'            If Not IsNull(adoRs.Fields("WBS|fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O").Value) And adoRs.Fields("WBS|fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O").Value <> "0" Then
            ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
                strReplace = g_strReplaceWBSCode
            End If
        Case Else
            strReplace = g_strReplaceWBSCode
        End Select
    Else
        strReplace = g_strReplaceWBSCode
    End If
    
    On Error GoTo 0

    g_strReplaceWBSCodeCSV = g_strReplaceWBSCodeCSV & strReplace

    If g_strReplaceWBSCode = strReplace Then
        strReplaceCode = strReplace
        fg_CheckWBSExist = False
    Else
        fg_CheckWBSExist = True
    End If

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_CheckWBSExist:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_CheckWBSExist", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd|i|fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd|a|fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd||c42c||fffd|j
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> Table|fffd||fffd|
'   (2)<String |fffd|^> LedgerCode
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SQL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|i|fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd|a|fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd||c42c||fffd|j
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CreateSQLLedgerSummary( _
    ByVal strTblName As String, _
    ByVal strLedger As String, _
    ByVal datTarget As Date _
) As String
    Dim strSQL As String
    
    strSQL = "SELECT "
    strSQL = strSQL & "Sum(" & "tb.Paid) AS Debit, "
    strSQL = strSQL & "Sum(" & "tb.Received) AS Credit "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & strTblName & " tb "
    strSQL = strSQL & "WHERE tb.TargetPeriod=" & fg_AddSingleQuotation(datTarget) & " AND "
    strSQL = strSQL & "tb.LedgerCode=" & fg_AddSingleQuotation(strLedger) & " AND "
    strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    
    strSQL = strSQL & " GROUP BY " & "tb.OfficeCode"
    fg_CreateSQLLedgerSummary = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd|i|fffd||38f||6cc||fffd||fffd||fffd|PL|fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd||c42c||fffd|j
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> Table|fffd||fffd|
'   (2)<String |fffd|^> LedgerCode
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd|i|fffd||38f||6cc||fffd||fffd||fffd|PL|fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd||c42c||fffd|j
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CreateSQLPLAccountSummary( _
    ByVal strTblName As String, _
    ByVal strLedger As String, _
    ByVal datTarget As Date _
) As String
    Dim strSQL As String
    
    strSQL = "SELECT " & "LEFT(tb.AccountCode,6) As AccountCode, " & "tb.WBSCode, "
    strSQL = strSQL & "Sum(" & "tb.Paid) AS Debit, "
    strSQL = strSQL & "Sum(" & "tb.Received) AS Credit "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & strTblName & " tb "
    strSQL = strSQL & "WHERE tb.TargetPeriod=" & fg_AddSingleQuotation(datTarget) & " AND "
    strSQL = strSQL & "tb.LedgerCode=" & fg_AddSingleQuotation(strLedger) & " AND "
    strSQL = strSQL & "LEFT(tb.AccountCode, 1) >= 8" & " AND "
    strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " GROUP BY " & "LEFT(tb.AccountCode,6), " & "tb.WBSCode"
    fg_CreateSQLPLAccountSummary = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd|i|fffd||38f||6cc||fffd||fffd||fffd|BS|fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd||c42c||fffd|j
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> Table|fffd||fffd|
'   (2)<String |fffd|^> LedgerCode
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SQL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|i|fffd||38f||6cc||fffd||fffd||fffd|BS|fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd||c42c||fffd|j
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CreateSQLBSAccountSummary( _
    ByVal strTblName As String, _
    ByVal strLedger As String, _
    ByVal datTarget As Date _
) As String
    Dim strSQL As String
    
    strSQL = "SELECT " & "tb.AccountCode, " & "tb.ConnectionCode, "
    strSQL = strSQL & "Sum(" & "tb.Paid) AS Debit, "
    strSQL = strSQL & "Sum(" & "tb.Received) AS Credit "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & strTblName & " tb "
    strSQL = strSQL & "WHERE tb.TargetPeriod=" & fg_AddSingleQuotation(datTarget) & " AND "
    strSQL = strSQL & "tb.LedgerCode=" & fg_AddSingleQuotation(strLedger) & " AND "
    strSQL = strSQL & "LEFT(tb.AccountCode, 1) < 8" & " AND "
    strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " GROUP BY " & "tb.AccountCode, " & "tb.ConnectionCode"
    fg_CreateSQLBSAccountSummary = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|O|fffd|L|fffd|^|fffd||308||5c2||303|Z|fffd|b|fffd|V|fffd||fffd||fffd||fffd|ID|fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd||fffd|B
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||202||fffd|
'  |fffd||7c2||fffd|l
'|fffd|@|fffd|@1|fffd||20f||fffd| - |fffd|Z|fffd|b|fffd|V|fffd||fffd||fffd||fffd|ID
'    0     - |fffd|G|fffd||fffd||fffd|[
'  |fffd||fffd||fffd|l
'    |fffd|Z|fffd|b|fffd|V|fffd||fffd||fffd||fffd|ID|fffd||fffd||fffd||50ab||fffd||fffd||fffd||202||9396||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||101|A
'    |fffd||7c2||fffd|l|fffd||fffd|String|fffd|^|fffd||242||fffd||fffd||102||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2004/04/19|fffd|FKnowlbo K.Watanabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2013/02/22|fffd|F|fffd|n|7c97|S|fffd|q|fffd|FDB|fffd||310||691||fffd||fffd||fffd||3cd|X
'-----------------------------------------------------------------
Public Function fg_CreateSession() As String
    
    Dim sSQL As String
    Dim objCommand As ADODB.Command
    Dim objParameter As ADODB.Parameter
    Dim sLoginName As String

    On Error GoTo ExceptionHandler
    
    fg_CreateSession = "0"
    
    If Not g_adoCnCmn Is Nothing Then
        If g_adoCnCmn.State = adStateOpen Then
            g_adoCnCmn.BeginTrans
            
            ''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
            sSQL = _
                "SET NOCOUNT ON " & vbNewLine & _
                "INSERT " & defExcelSessionManagement & " (" & vbNewLine & _
                "InsertDate " & vbNewLine & _
                ", InsertUID " & vbNewLine & _
                ") VALUES ( " & vbNewLine & _
                "GETDATE() " & vbNewLine & _
                ", ? " & vbNewLine & _
                ")" & vbNewLine & _
                "SET ? = @@IDENTITY " & vbNewLine
            
'            sSQL = _
'                "SET NOCOUNT ON " & vbNewLine & _
'                "INSERT " & c_strNKWFDBName & "." & c_NKWFOwner & ".ExcelSessionManagement (" & vbNewLine & _
'                "InsertDate " & vbNewLine & _
'                ", InsertUID " & vbNewLine & _
'                ") VALUES ( " & vbNewLine & _
'                "GETDATE() " & vbNewLine & _
'                ", ? " & vbNewLine & _
'                ")" & vbNewLine & _
'                "SET ? = @@IDENTITY " & vbNewLine
            ''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
            Set objCommand = New ADODB.Command
            With objCommand
                .ActiveConnection = g_adoCnCmn
                .CommandType = adCmdText
                .CommandText = sSQL
                Set objParameter = .CreateParameter("InsertUID", adVarChar, adParamInput, 5, sLoginName)
                .Parameters.Append objParameter
                Set objParameter = .CreateParameter("@IDENTITY", adDecimal, adParamOutput)
                objParameter.Precision = 18
                objParameter.NumericScale = 0
                .Parameters.Append objParameter
                .Execute
            End With
        
            fg_CreateSession = convertSQLNullToEmpty(objCommand.Parameters(1).Value)
            
            g_adoCnCmn.CommitTrans
        End If
    End If
    
FinallyHandler:
    Set objCommand = Nothing
    Set objParameter = Nothing
    Exit Function

ExceptionHandler:
    Err.Clear
    g_adoCnCmn.RollbackTrans
    GoTo FinallyHandler
    
End Function

''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    ExcelSQLLog|fffd||243|f|fffd|[|fffd|^|fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||702||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    (1) <String |fffd|^> SQL
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||202||fffd|
'  |fffd||7c2||fffd|l
'|fffd|@|fffd|@|fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2013/02/19|fffd|FY.Watanabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_InsertSQLLog(ByVal pstrSQL As String)
    Dim strMSG As String
    Dim cmd As ADODB.Command
    Dim pram As ADODB.Parameter
    Dim strParamXml As String
    
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR

    If Not g_adoCnCmn Is Nothing Then
        Set cmd = New ADODB.Command
        Set pram = New ADODB.Parameter
        
        cmd.CommandType = adCmdStoredProc
        cmd.CommandText = defInsertExcelSQLLog
        cmd.ActiveConnection = g_adoCnCmn
        
        Set pram = cmd.CreateParameter("SessionID", adDecimal, adParamInput, , g_strSessionID)
        cmd.Parameters(1) = pram
        Set pram = cmd.CreateParameter("UID", adVarChar, adParamInput, , g_strLoginId)
        cmd.Parameters(2) = pram
        Set pram = cmd.CreateParameter("ComputerName", adVarChar, adParamInput, , g_strComputerName)
        cmd.Parameters(3) = pram
        Set pram = cmd.CreateParameter("SystemCode", adVarChar, adParamInput, , c_strSysCode)
        cmd.Parameters(4) = pram
        Set pram = cmd.CreateParameter("FileID", adInteger, adParamInput, , c_lngSysFileID)
        cmd.Parameters(5) = pram
        Set pram = cmd.CreateParameter("AppVersion", adVarChar, adParamInput, , g_strAppVersion)
        cmd.Parameters(6) = pram
        Set pram = cmd.CreateParameter("Version", adVarChar, adParamInput, , g_strVersionCode)
        cmd.Parameters(7) = pram
        Set pram = cmd.CreateParameter("SQL", adVarChar, adParamInput, , pstrSQL)
        cmd.Parameters(8) = pram
        
        Call cmd.Execute
    End If
    
LBL_END:
    Set cmd = Nothing
    Set pram = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_InsertSQLLog:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_InsertSQLLog", strMSG
    GoTo LBL_END
    
End Sub

''-----------------------------------------------------------------
''  |fffd|T|fffd|v
''    ExcelSQLLog|fffd||243|f|fffd|[|fffd|^|fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||702||fffd|
''  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
''    (1) <String |fffd|^> SQL
''  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
''|fffd|@|fffd|@|fffd||202||fffd|
''  |fffd||7c2||fffd|l
''|fffd|@|fffd|@|fffd||202||fffd|
''  |fffd||fffd||fffd|l
''    |fffd||202||fffd|
''  |fffd||3cd|X|fffd||fffd||fffd||fffd|
''    2004/04/15|fffd|FKnowlbo K.Watanabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
''    2013/02/19|fffd|F|fffd|n|7c97|S|fffd|q|fffd|F|fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
''-----------------------------------------------------------------
'Public Sub sg_InsertSQLLog(ByVal pstrSQL As String)
'
'    Dim strSQL As String
''    Dim Ret As Long
'
'    ''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'    If Not g_adoCnCmn Is Nothing Then
'        If g_adoCnCmn.State = adStateOpen Then
'
'            strSQL = _
'                "INSERT " & defExcelSQLLog & " (" & vbNewLine & _
'                "SessionID " & vbNewLine & _
'                ", RefDateTime " & vbNewLine & _
'                ", UID " & vbNewLine & _
'                ", ComputerName " & vbNewLine & _
'                ", |fffd|V|fffd|X|fffd|e|fffd||fffd|Code " & vbNewLine & _
'                ", |fffd|t|fffd|@|fffd|C|fffd||fffd|ID " & vbNewLine & _
'                ", AppVersion " & vbNewLine & _
'                ", Version " & vbNewLine & _
'                ", [SQL] " & vbNewLine & _
'                ", Note " & vbNewLine & _
'                ") VALUES ( " & vbNewLine & _
'                "'@1' " & vbNewLine & _
'                ", GETDATE() " & vbNewLine & _
'                ", '@2' " & vbNewLine & vbNewLine & _
'                ", '@3' " & vbNewLine & ", '@4' " & vbNewLine & _
'                ", '@5' " & vbNewLine & ", '@6' " & vbNewLine & _
'                ", '@7' " & vbNewLine & ", '@8' " & vbNewLine & _
'                ", NULL " & vbNewLine & ")" & vbNewLine
'
'            strSQL = Replace$(strSQL, "@1", escapeSQLSpecialChars(g_strSessionID))
'            strSQL = Replace$(strSQL, "@2", escapeSQLSpecialChars(g_strLoginId))
'            strSQL = Replace$(strSQL, "@3", escapeSQLSpecialChars(g_strComputerName))
'            strSQL = Replace$(strSQL, "@4", escapeSQLSpecialChars(c_strSysCode))
'            strSQL = Replace$(strSQL, "@5", c_lngSysFileID)
'            strSQL = Replace$(strSQL, "@6", escapeSQLSpecialChars(g_strAppVersion))
'            strSQL = Replace$(strSQL, "@7", escapeSQLSpecialChars(g_strVersionCode))
'            strSQL = Replace$(strSQL, "@8", escapeSQLSpecialChars(pstrSQL))
'
'            Call g_adoCnCmn.Execute(strSQL)
'        End If
'    End If
'
''    If Not g_adoCnCmn Is Nothing Then
''        If g_adoCnCmn.State = adStateOpen Then
''
''            strSQL = _
''                "INSERT " & c_strNKWFDBName & "." & c_NKWFOwner & ".ExcelSQLLog (" & vbNewLine & _
''                "SessionID " & vbNewLine & _
''                ", RefDateTime " & vbNewLine & _
''                ", UID " & vbNewLine & _
''                ", ComputerName " & vbNewLine & _
''                ", |fffd|V|fffd|X|fffd|e|fffd||fffd|Code " & vbNewLine & _
''                ", |fffd|t|fffd|@|fffd|C|fffd||fffd|ID " & vbNewLine & _
''                ", Version " & vbNewLine & _
''                ", AppVersion " & vbNewLine & _
''                ", [SQL] " & vbNewLine & _
''                ", Note " & vbNewLine & _
''                ") VALUES ( " & vbNewLine & _
''                "'@1' " & vbNewLine & _
''                ", GETDATE() " & vbNewLine & _
''                ", '@2' " & vbNewLine & vbNewLine & _
''                ", '@3' " & vbNewLine & ", '@4' " & vbNewLine & _
''                ", '@5' " & vbNewLine & ", '@6' " & vbNewLine & _
''                ", '@7' " & vbNewLine & ", '@8' " & vbNewLine & _
''                ", NULL " & vbNewLine & ")" & vbNewLine
''
''            strSQL = Replace$(strSQL, "@1", escapeSQLSpecialChars(g_strSessionID))
''            strSQL = Replace$(strSQL, "@2", escapeSQLSpecialChars(g_strLoginId))
''            strSQL = Replace$(strSQL, "@3", escapeSQLSpecialChars(g_strComputerName))
''            strSQL = Replace$(strSQL, "@4", escapeSQLSpecialChars(c_strSysCode))
''            strSQL = Replace$(strSQL, "@5", c_lngSysFileID)
''            strSQL = Replace$(strSQL, "@6", escapeSQLSpecialChars(g_strAppVersion))
''            strSQL = Replace$(strSQL, "@7", escapeSQLSpecialChars(g_strVersionCode))
''            strSQL = Replace$(strSQL, "@8", escapeSQLSpecialChars(pstrSQL))
''
''            Call g_adoCnCmn.Execute(strSQL)
''        End If
''    End If
'    ''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'
'End Sub
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||702||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> |fffd|F|fffd||60c||fffd||fffd||283|R|fffd|[|fffd|h
'   (2)<String |fffd|^> UserID
'   (3)<String |fffd|^> |fffd||fffd||fffd||fffd|Code
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||202||fffd|
'  |fffd||7c2||fffd|l
'|fffd|@|fffd|@|fffd||202||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2016/08/01|fffd|FY.Watanabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_InsertAccessLog(ByVal iResultCode As Integer, ByVal sLoginName As String, Optional ByVal sOrganizationCode As String = "")
    Dim strMSG As String
    Dim cmd As ADODB.Command
    Dim pram As ADODB.Parameter
    Dim strParamXml As String
    
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR

    If Not g_adoCnCmn Is Nothing Then
        Set cmd = New ADODB.Command
        Set pram = New ADODB.Parameter
        
        cmd.CommandType = adCmdStoredProc
        cmd.CommandText = defInsertExcelAccessLog
        cmd.ActiveConnection = g_adoCnCmn
        
        Set pram = cmd.CreateParameter("SessionID", adDecimal, adParamInput, , g_strSessionID)
        cmd.Parameters(1) = pram
        Set pram = cmd.CreateParameter("UID", adVarChar, adParamInput, , sLoginName)
        cmd.Parameters(2) = pram
        Set pram = cmd.CreateParameter("ComputerName", adVarChar, adParamInput, , g_strComputerName)
        cmd.Parameters(3) = pram
        Set pram = cmd.CreateParameter("SelectedSectionCode", adVarChar, adParamInput, , sOrganizationCode)
        cmd.Parameters(4) = pram
        Set pram = cmd.CreateParameter("SelectedTitleCode", adVarChar, adParamInput, , "")
        cmd.Parameters(5) = pram
        Set pram = cmd.CreateParameter("SystemCode", adVarChar, adParamInput, , c_strSysCode)
        cmd.Parameters(6) = pram
        Set pram = cmd.CreateParameter("FileID", adInteger, adParamInput, , c_lngSysFileID)
        cmd.Parameters(7) = pram
        Set pram = cmd.CreateParameter("AppVersion", adVarChar, adParamInput, , g_strAppVersion)
        cmd.Parameters(8) = pram
        Set pram = cmd.CreateParameter("Version", adVarChar, adParamInput, , g_strVersionCode)
        cmd.Parameters(9) = pram
        Set pram = cmd.CreateParameter("ResultCode", adSmallInt, adParamInput, , iResultCode)
        cmd.Parameters(10) = pram
        
        Call cmd.Execute
    End If
    
LBL_END:
    Set cmd = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_InsertAccessLog:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_InsertAccessLog", strMSG
    GoTo LBL_END

End Sub

''-----------------------------------------------------------------
''  |fffd|T|fffd|v
''    |fffd|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||702||fffd|
''  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
''   (1)<Integer |fffd|^> |fffd|F|fffd||60c||fffd||fffd||283|R|fffd|[|fffd|h
''   (2)<String |fffd|^> UserID
''   (3)<String |fffd|^> |fffd||fffd||fffd||fffd|Code
''  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
''|fffd|@|fffd|@|fffd||202||fffd|
''  |fffd||7c2||fffd|l
''|fffd|@|fffd|@|fffd||202||fffd|
''  |fffd||fffd||fffd|l
''    |fffd||202||fffd|
''  |fffd||3cd|X|fffd||fffd||fffd||fffd|
''    2004/02/17|fffd|FKnowlbo K.Watanabe|fffd|F|fffd|V|fffd|K|fffd||c42c|
''    2013/02/18|fffd|F|fffd|n|7c97|S|fffd|q|fffd|F|fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
''-----------------------------------------------------------------
'Public Sub sg_InsertAccessLog( _
'    ByVal iResultCode As Integer _
'  , ByVal sLoginName As String _
'  , Optional ByVal sOrganizationCode As String = "" _
')
'    Dim strSQL As String
'
'    ''<<<2013.02.18 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'    If Not g_adoCnCmn Is Nothing Then
'        If g_adoCnCmn.State = adStateOpen Then
'
'            strSQL = _
'                "INSERT " & defExcelAccessLog & " (" & vbNewLine & _
'                "SessionID " & vbNewLine & _
'                ", RefDateTime " & vbNewLine & _
'                ", UID " & vbNewLine & _
'                ", ComputerName " & vbNewLine & _
'                ", SelectedSectionCode " & vbNewLine & _
'                ", SelectedTitleCode " & vbNewLine & _
'                ", |fffd|V|fffd|X|fffd|e|fffd||fffd|Code " & vbNewLine & _
'                ", |fffd|t|fffd|@|fffd|C|fffd||fffd|ID " & vbNewLine & _
'                ", APPVersion " & vbNewLine & _
'                ", Version " & vbNewLine & _
'                ", ResultCode " & vbNewLine & _
'                ", Note " & vbNewLine & _
'                ") VALUES ( " & vbNewLine & _
'                "'@01' " & vbNewLine & _
'                ", GETDATE() " & vbNewLine & _
'                ", '@02' " & vbNewLine & vbNewLine & _
'                ", '@03' " & vbNewLine & ", '@04' " & vbNewLine & _
'                ", '@05' " & vbNewLine & ", '@06' " & vbNewLine & _
'                ", '@07' " & vbNewLine & ", '@08' " & vbNewLine & _
'                ", '@09' " & vbNewLine & ", '@10' " & vbNewLine & _
'                ", NULL " & vbNewLine & ")" & vbNewLine
'
'            strSQL = Replace$(strSQL, "@01", escapeSQLSpecialChars(g_strSessionID))
'            strSQL = Replace$(strSQL, "@02", escapeSQLSpecialChars(sLoginName))
'            strSQL = Replace$(strSQL, "@03", escapeSQLSpecialChars(g_strComputerName))
'            If sOrganizationCode <> "" Then
'                strSQL = Replace$(strSQL, "@04", escapeSQLSpecialChars(sOrganizationCode))
'            Else
'                strSQL = Replace$(strSQL, "@04", "")
'            End If
'            strSQL = Replace$(strSQL, "@05", "")
'            strSQL = Replace$(strSQL, "@06", escapeSQLSpecialChars(c_strSysCode))
'            strSQL = Replace$(strSQL, "@07", c_lngSysFileID)
'            strSQL = Replace$(strSQL, "@08", escapeSQLSpecialChars(g_strAppVersion))
'            strSQL = Replace$(strSQL, "@09", escapeSQLSpecialChars(g_strVersionCode))
'            strSQL = Replace$(strSQL, "@10", iResultCode)
'
'            Call g_adoCnCmn.Execute(strSQL)
'        End If
'    End If
'
''    If Not g_adoCnCmn Is Nothing Then
''        If g_adoCnCmn.State = adStateOpen Then
''
''            strSql = _
''                "INSERT " & c_strNKWFDBName & "." & c_NKWFOwner & ".ExcelAccessLog (" & vbNewLine & _
''                "SessionID " & vbNewLine & _
''                ", RefDateTime " & vbNewLine & _
''                ", UID " & vbNewLine & _
''                ", ComputerName " & vbNewLine & _
''                ", SelectedSectionCode " & vbNewLine & _
''                ", SelectedTitleCode " & vbNewLine & _
''                ", |fffd|V|fffd|X|fffd|e|fffd||fffd|Code " & vbNewLine & _
''                ", |fffd|t|fffd|@|fffd|C|fffd||fffd|ID " & vbNewLine & _
''                ", APPVersion " & vbNewLine & _
''                ", Version " & vbNewLine & _
''                ", ResultCode " & vbNewLine & _
''                ", Note " & vbNewLine & _
''                ") VALUES ( " & vbNewLine & _
''                "'@01' " & vbNewLine & _
''                ", GETDATE() " & vbNewLine & _
''                ", '@02' " & vbNewLine & vbNewLine & _
''                ", '@03' " & vbNewLine & ", '@04' " & vbNewLine & _
''                ", '@05' " & vbNewLine & ", '@06' " & vbNewLine & _
''                ", '@07' " & vbNewLine & ", '@08' " & vbNewLine & _
''                ", '@09' " & vbNewLine & ", '@10' " & vbNewLine & _
''                ", NULL " & vbNewLine & ")" & vbNewLine
''
''            strSql = Replace$(strSql, "@01", escapeSQLSpecialChars(g_strSessionID))
''            strSql = Replace$(strSql, "@02", escapeSQLSpecialChars(sLoginName))
''            strSql = Replace$(strSql, "@03", escapeSQLSpecialChars(g_strComputerName))
''            If sOrganizationCode <> "" Then
''                strSql = Replace$(strSql, "@04", escapeSQLSpecialChars(sOrganizationCode))
''            Else
''                strSql = Replace$(strSql, "@04", "")
''            End If
''            strSql = Replace$(strSql, "@05", "")
''            strSql = Replace$(strSql, "@06", escapeSQLSpecialChars(c_strSysCode))
''            strSql = Replace$(strSql, "@07", c_lngSysFileID)
''            strSql = Replace$(strSql, "@08", escapeSQLSpecialChars(g_strAppVersion))
''            strSql = Replace$(strSql, "@09", escapeSQLSpecialChars(g_strVersionCode))
''            strSql = Replace$(strSql, "@10", iResultCode)
''
''            Call g_adoCnCmn.Execute(strSql)
''        End If
''    End If
'    ''>>>2013.02.18 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'
'FinalyHabdler:
'
'ExceptionHabdler:
'
'End Sub
''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|

''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Excel|fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd|O|fffd|C|fffd||fffd|UID
'   (2)<String |fffd|^> |fffd||fffd||fffd||fffd|Code
'   (3)<String |fffd|^> |fffd|@|fffd|\|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Excel|fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|NKHR|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||311|S|fffd|g|fffd|D
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2013/02/19 : |fffd|n|7c97|S|fffd|q : |fffd|V|fffd|K|fffd||c42c|
'   2016/08/01 : |fffd|n|7c97|S|fffd|q : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_GetPersonalUseRightsSystem( _
    ByRef strLoginUID As String, _
    ByRef strOrganizationCode As String, _
    ByRef strFunctionName As String _
) As String
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    Set adoCn = New ADODB.Connection
    Set adoRs = New ADODB.Recordset
    Set objdba = New clsDBAccess
    objdba.CallPlace = ID_NKFAS_SS
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword
    
    strMSG = "DataBase Error"
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetAuthority
    strSQL = Replace(strSQL, "@1", strLoginUID)
    strSQL = Replace(strSQL, "@2", strOrganizationCode)
    strSQL = Replace(strSQL, "@3", c_strSysCode)
    strSQL = Replace(strSQL, "@4", strFunctionName)
    strSQL = Replace(strSQL, "@5", Now())
    
'    strSQL = ""
'    strSQL = strSQL & "SELECT * FROM " & defPersonalUseRightsSystem & " P" & vbNewLine
'    strSQL = strSQL & "WHERE" & vbNewLine
'    strSQL = strSQL & " P.|fffd||90|lID = '" & strLoginUID & "'" & vbNewLine
'    strSQL = strSQL & " AND P.|fffd||fffd||fffd||fffd|Code = '" & strOrganizationCode & "'" & vbNewLine
'    strSQL = strSQL & " AND P.|fffd|V|fffd|X|fffd|e|fffd||fffd|Code = '" & c_strSysCode & "'" & vbNewLine
'    strSQL = strSQL & " AND P.|fffd|@|fffd|\ = '" & strFunctionName & "'" & vbNewLine
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        GoTo LBL_ERR
    End If
        
    If Not adoRs.EOF Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        If Not IsNull(adoRs.Fields("AllOrg").Value) Then
            fg_GetPersonalUseRightsSystem = adoRs.Fields("AllOrg").Value
'        If Not IsNull(adoRs.Fields("|fffd|S|fffd|g|fffd|D").Value) Then
'            fg_GetPersonalUseRightsSystem = adoRs.Fields("|fffd|S|fffd|g|fffd|D").Value
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Else
            fg_GetPersonalUseRightsSystem = ""
        End If
    Else
        fg_GetPersonalUseRightsSystem = ""
    End If
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetPersonalUseRightsSystem:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetPersonalUseRightsSystem", strMSG
    GoTo LBL_END
End Function
''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N

''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd|E|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    (1) <String |fffd|^> |fffd||fffd||fffd|O|fffd|C|fffd||fffd|UID
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||202||fffd|
'  |fffd||7c2||fffd|l
'    (1) <String  |fffd|^> |fffd|g|fffd|DCode |fffd|{ |fffd||fffd|E|fffd||fffd||fffd|i|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||fffd|j
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2013/02/19 : |fffd|n|7c97|S|fffd|q : |fffd|V|fffd|K|fffd||c42c|
'    2016/08/01 : Y.Watanabe : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-------------------------------------------------------------------------------
Public Function _
fg_GetPersonalPosts( _
    ByRef strLoginUID As String _
) As String
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strValue As String
    
    Set adoCn = New ADODB.Connection
    Set adoRs = New ADODB.Recordset
    Set objdba = New clsDBAccess
    objdba.CallPlace = ID_NKFAS_SS
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword
    
    strMSG = "DataBase Error"
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    fg_GetPersonalPosts = ""
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetPost
    strSQL = Replace(strSQL, "@1", strLoginUID)
    
'    strSQL = ""
'    strSQL = strSQL & "SELECT J.|fffd||fffd||fffd||fffd|, SY.|fffd|g|fffd|DCode, Y.|fffd||fffd||fffd||fffd| AS |fffd||fffd|E|fffd||fffd| FROM NKHR.NKHR03.|fffd||fffd||fffd||fffd||fffd||fffd|E SY" & vbNewLine
'    strSQL = strSQL & "INNER JOIN NKHR.NKHR03.|fffd|]|fffd||188||fffd||fffd|}|fffd|X|fffd|^ J ON (J.|fffd||408||fffd||fffd||50d||fffd| = SY.|fffd||408||fffd||fffd||50d||fffd|)" & vbNewLine
'    strSQL = strSQL & "INNER JOIN NKHR.NKHR03.|fffd||fffd|E|fffd|}|fffd|X|fffd|^ Y ON (SY.|fffd||fffd|ECode = Y.|fffd||fffd|ECode)" & vbNewLine
'    strSQL = strSQL & "WHERE" & vbNewLine
'    strSQL = strSQL & " (SY.|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GETDATE() And GETDATE() <= SY.|fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd|)" & vbNewLine
'    strSQL = strSQL & " AND (Y.|fffd|L|fffd||fffd||fffd||fffd||fffd||50a|J|fffd|n <= GETDATE() And GETDATE() <= Y.|fffd|L|fffd||fffd||fffd||fffd||fffd||50f|I|fffd||fffd|)" & vbNewLine
'    strSQL = strSQL & " AND J.|fffd||408||fffd||fffd||50d||fffd| = '" & strLoginUID & "'" & vbNewLine
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        GoTo LBL_ERR
    End If
    
    If (adoRs Is Nothing) Or (adoRs.EOF) Then
        strValue = "000000: Nothing"
    Else
        With adoRs
            Do Until .EOF
                ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
                If strValue = "" Then
                    strValue = .Fields("DeptCode").Value & ":" & _
                                .Fields("PostName").Value
                Else
                    strValue = strValue & "," & _
                                .Fields("DeptCode").Value & ":" & _
                                .Fields("PostName").Value
                End If
                
'                If strValue = "" Then
'                    strValue = .Fields("|fffd|g|fffd|DCode").Value & ":" & _
'                                .Fields("|fffd||fffd|E|fffd||fffd|").Value
'                Else
'                    strValue = strValue & "," & _
'                                .Fields("|fffd|g|fffd|DCode").Value & ":" & _
'                                .Fields("|fffd||fffd|E|fffd||fffd|").Value
'                End If
                ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
                .MoveNext
            Loop
        End With
    End If
    
    fg_GetPersonalPosts = strValue
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetPersonalPosts:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetPersonalPosts", strMSG
    GoTo LBL_END
End Function
''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||90|l|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N

''<<<2015.10.09 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|O|fffd|o|fffd||fffd||fffd||242||fffd||fffd||fffd|
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||6d3||fffd||fffd|t|fffd||314|N|fffd|x|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> |fffd||38f||6d3||fffd||fffd|t
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6d3||fffd||fffd|t|fffd||314|N|fffd|x|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Integer |fffd|^> |fffd|N|fffd|x
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2015/10/09|fffd|FY.Watanabe        |fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2016/08/01|fffd|FY.Watanabe        |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_GetFiscalYear( _
    dtTargetDate As Date _
) As Integer
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim intFiscalYear As Integer
    
    strMSG = ""
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetFiscalYearMaster_FiscalYear
    strSQL = Replace(strSQL, "@1", dtTargetDate)
    
'    strSQL = "SELECT fy.* FROM " & defFiscalYear & " fy"
'    strSQL = strSQL & " WHERE"
'    strSQL = strSQL & " " & fg_AddSingleQuotation(dtTargetDate) & " BETWEEN fy.|fffd||38f||6ca||fffd||fffd||50a|J|fffd|n|fffd||fffd| AND fy.|fffd||38f||6ca||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|"
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        ''<<<2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defGetFiscalYearMaster_FiscalYear
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defFiscalYear
        ''>>>2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If
    If adoRs.EOF = False Then
        ''<<<2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        intFiscalYear = CInt(adoRs.Fields("FiscalYear").Value)
'        intFiscalYear = CInt(adoRs.Fields("|fffd|N|fffd|x").Value)
        ''>>>2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Else
        strMSG = c_strMSG_FISCALYEAR_ERR
        GoTo LBL_ERR
    End If
    
On Error GoTo 0
    
    fg_GetFiscalYear = intFiscalYear
    
LB_End:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetFiscalYear:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetFiscalYear", strMSG
    GoTo LB_End
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> |fffd|N|fffd|x
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Date |fffd|^> |fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2015/10/09|fffd|FY.Watanabe        |fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2015/10/22|fffd|FY.Watanabe        |fffd|F|fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||302||182||fffd||fffd||353||fffd||fffd|t|fffd||702||142||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|t|fffd||302||742||fffd||502||fffd||fffd||60a4||fffd||24f|C|fffd||fffd|
'   2016/08/01|fffd|FY.Watanabe        |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_GetStartOfYear( _
    intFiscalYear As Integer _
) As Date
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim dtStartOfYear As Date
    
    strMSG = ""
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetFiscalYearMaster_StartDateFromFiscalYear
    strSQL = Replace(strSQL, "@1", intFiscalYear)
    
'    strSQL = "SELECT fy.* FROM " & defFiscalYear & " fy"
'    strSQL = strSQL & " WHERE"
'    strSQL = strSQL & " fy.|fffd|N|fffd|x = " & intFiscalYear
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defGetFiscalYearMaster_StartDateFromFiscalYear
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defFiscalYear
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If
    If adoRs.EOF = False Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        dtStartOfYear = DateValue(adoRs.Fields("StartDate").Value)
'        ''<<<2015.10.13 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||302||182||fffd||fffd||353||fffd||fffd|t|fffd||702||142||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|t|fffd||302||742||fffd||502||fffd||fffd||60a4||fffd||24f|C|fffd||fffd|
'        dtStartOfYear = DateValue(adoRs.Fields("|fffd||38f||6ca||fffd||fffd||50a|J|fffd|n|fffd||fffd|").Value)
''        dtStartOfYear = CDate(adoRs.Fields("|fffd||38f||6ca||fffd||fffd||50a|J|fffd|n|fffd||fffd|").Value)
'        ''>>>2015.10.13 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||302||182||fffd||fffd||353||fffd||fffd|t|fffd||702||142||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|t|fffd||302||742||fffd||502||fffd||fffd||60a4||fffd||24f|C|fffd||fffd|
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Else
        strMSG = c_strMSG_FISCALYEAR_ERR
        GoTo LBL_ERR
    End If
    
On Error GoTo 0
    
    fg_GetStartOfYear = dtStartOfYear
    
LB_End:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetStartOfYear:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetStartOfYear", strMSG
    GoTo LB_End
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> |fffd|N|fffd|x
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Date |fffd|^> |fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2015/10/09|fffd|FY.Watanabe        |fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2015/10/22|fffd|FY.Watanabe        |fffd|F|fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||302||182||fffd||fffd||353||fffd||fffd|t|fffd||702||142||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|t|fffd||302||742||fffd||502||fffd||fffd||60a4||fffd||24f|C|fffd||fffd|
'   2016/08/01|fffd|FY.Watanabe        |fffd|F|fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_GetEndOfYear( _
    intFiscalYear As Integer _
) As Date
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim dtEndOfYear As Date
    
    strMSG = ""
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetFiscalYearMaster_EndDateFromFiscalYear
    strSQL = Replace(strSQL, "@1", intFiscalYear)
    
'    strSQL = "SELECT fy.* FROM " & defFiscalYear & " fy"
'    strSQL = strSQL & " WHERE"
'    strSQL = strSQL & " fy.|fffd|N|fffd|x = " & intFiscalYear
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defGetFiscalYearMaster_EndDateFromFiscalYear
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defFiscalYear
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If
    If adoRs.EOF = False Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        dtEndOfYear = DateValue(adoRs.Fields("EndDate").Value)
'        ''<<<2015.10.13 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||302||182||fffd||fffd||353||fffd||fffd|t|fffd||702||142||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|t|fffd||302||742||fffd||502||fffd||fffd||60a4||fffd||24f|C|fffd||fffd|
'        dtEndOfYear = DateValue(adoRs.Fields("|fffd||38f||6ca||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|").Value)
''        dtEndOfYear = CDate(adoRs.Fields("|fffd||38f||6ca||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|").Value)
'        ''>>>2015.10.13 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||302||182||fffd||fffd||353||fffd||fffd|t|fffd||702||142||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|t|fffd||302||742||fffd||502||fffd||fffd||60a4||fffd||24f|C|fffd||fffd|
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Else
        strMSG = c_strMSG_FISCALYEAR_ERR
        GoTo LBL_ERR
    End If
    
On Error GoTo 0

    fg_GetEndOfYear = dtEndOfYear
    
LB_End:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetEndOfYear:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetEndOfYear", strMSG
    GoTo LB_End
    
End Function
''>>>2015.10.09 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|O|fffd|o|fffd||fffd||fffd||242||fffd||fffd||fffd|
Attribute VB_Name = "modExcelTools"
''<<<2016.02.25 Add By Y.Watanabe 64bit|fffd||389||fffd|
Option Explicit
'----------------------------------------------------------------------
' LDAP|fffd|F|fffd||602||183||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|M|fffd||fffd|Windows|fffd|W|fffd||fffd||fffd||fffd|DLL|fffd||302||742||14e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' Excel_Tools|fffd||311||fffd||595|i
'----------------------------------------------------------------------


'' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Private Const ADSTYPE_DN_STRING = 1
'Private Const ADSTYPE_CASE_EXACT_STRING = 2
'Private Const ADSTYPE_CASE_IGNORE_STRING = 3

'-------------------------------------------------------------------------------
' |fffd|@|fffd|\|fffd|T|fffd|v|fffd|@|fffd|FLDAP|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||602||fffd||fffd|s|fffd||fffd||fffd||702||fffd|
' |fffd||fffd||fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|F(I/ )strUserID |fffd||fffd||fffd|[|fffd|U|fffd|[ID
'           |fffd|F(I/ )strPassword |fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h
' |fffd||7c2||fffd|l|fffd|@|fffd|@|fffd|F|fffd|F|fffd||602||250||fffd||fffd||fffd||fffd||202||fffd|True,|fffd||fffd||fffd|s|fffd||202||fffd|False|fffd|ALDAP|fffd|T|fffd|[|fffd|o|fffd|[|fffd||243|A|fffd|N|fffd|Z|fffd|X|fffd||142||fffd||fffd||202||fffd||fffd||202||fffd|
'           |fffd|F|fffd||fffd||fffd||311||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||30f||a347||fffd||343|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|False|fffd||fffd||502||fffd||fffd|B
' |fffd||fffd||fffd|l|fffd|@|fffd|@|fffd|@|fffd|F|fffd||fffd||fffd|{|fffd|H|fffd|c|fffd|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LDAP DLL|fffd||fffd|Windows|fffd|W|fffd||fffd||fffd||30b|@|fffd|\|fffd||fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||301|B
'           |fffd|FNKKSOSUB.Certification.IsLogin|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||311||fffd||fffd||fffd|B
' |fffd||3cd|X|fffd||fffd||fffd||fffd|  |fffd|F2014/06/10 m_take     |fffd|V|fffd|K|fffd||c42c|
' |fffd|g|fffd|p|fffd||fffd|    |fffd|Fprint IsLogin([|fffd||fffd||fffd|[|fffd|U|fffd|[ID], [|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h])
'-------------------------------------------------------------------------------
Public Function IsLogin(ByVal strUserID As String, ByVal strPassrowd As String, Optional ByVal LDAPServerName As String = "ldap.n-koei.co.jp") As Boolean

    Const CSFUNCTIONNAME As String = "IsLogin"
    
    Dim objNS As Object
    Dim objOpenObject As Object
    Dim blResult As Boolean

    On Error GoTo ErrorHandler
    
    blResult = False
    
    ' |fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    If (strUserID = "") Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Call Err.Raise(-1, CSFUNCTIONNAME, "An exceptional error occurred. (Error code: ""M-modExcelTools-IsLogin"")")
'        Call Err.Raise(-1, CSFUNCTIONNAME, "|fffd||fffd||fffd|[|fffd|U|fffd|[ID|fffd||fffd||fffd||fffd||142||fffd||fffd|B")
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    End If
    
    If (strPassrowd = "") Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Call Err.Raise(-1, CSFUNCTIONNAME, "An exceptional error occurred. (Error code: ""M-modExcelTools-IsLogin"")")
'        Call Err.Raise(-1, CSFUNCTIONNAME, "|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||142||fffd||fffd|B")
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    End If
    
    Set objNS = GetObject("LDAP:")
    
    ' |fffd|G|fffd||fffd||fffd|[|fffd||50d||fffd||fffd||143|G|fffd||fffd||fffd|[|fffd||313||fffd||fffd|e|fffd||14ed2||80b7||fffd||90bd||fffd||7c1|A|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||250|i|fffd||702||fffd||fffd||702||fffd|
    On Error Resume Next
    
    Set objOpenObject = objNS.OpenDSObject("LDAP://" & LDAPServerName, "uid=" & strUserID & ",o=n-koei.co.jp", strPassrowd, 0)
    
    ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||394|F|fffd||610||fffd||fffd||fffd|
    If Err.number = 0 Then
        blResult = True
    
    ' |fffd|G|fffd||fffd||fffd|[|fffd||50d||fffd||fffd||fffd|-2147023570(&H8007052E)|fffd||202||70c6||fffd|[|fffd|U|fffd|[|fffd||fffd||fffd||fffd||fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||10a4|
    ElseIf (Err.number = &H8007052E) Then
        blResult = False
    
    ' |fffd||fffd|L|fffd||20a|O|fffd||303|G|fffd||fffd||fffd|[|fffd||343|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|`|fffd||fffd||fffd||594||fffd||382||fffd|
    Else
        GoTo ErrorHandler
    End If
    
    Set objOpenObject = Nothing
    Set objNS = Nothing

ExitHandler:
    
    IsLogin = blResult
    
    Exit Function
    
ErrorHandler:
    Dim lErrorNumber As Long
    Dim strErrorDescription As String
    Dim strErrorSource As String
    
    lErrorNumber = Err.number
    strErrorDescription = Err.Description
    strErrorSource = Err.Source
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Call MsgBox("An exceptional error occurred. (Error code: ""M-modExcelTools-IsLogin"")" & ":" & strErrorDescription)
'    Call MsgBox(CSFUNCTIONNAME & "|fffd||143|G|fffd||fffd||fffd|[|fffd|F" & strErrorDescription)
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Resume ExitHandler

End Function


''-------------------------------------------------------------------------------
'' |fffd|@|fffd|\|fffd|T|fffd|v|fffd|@|fffd|FLDAP|fffd|T|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||70c6||fffd|[|fffd|U|fffd|[|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|DCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd||fffd|B
'' |fffd||fffd||fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|F(I/ )strUserID |fffd||fffd||fffd|[|fffd|U|fffd|[ID
''           |fffd|F(/O)strBukaCode LDAP|fffd||14c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Code|fffd||fffd||fffd||fffd||fffd||fffd|
'' |fffd||7c2||fffd|l|fffd|@|fffd|@|fffd|F|fffd||64fe||fffd||250||fffd||fffd||fffd||fffd||202||fffd|True|fffd|A|fffd||fffd||fffd|s|fffd||202||fffd|False|fffd||fffd||502||fffd||fffd|B|fffd||fffd||fffd||fffd|strBukaCode|fffd||24e||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Code|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|B
'' |fffd||fffd||fffd|l|fffd|@|fffd|@|fffd|@|fffd|F|fffd||fffd||fffd|{|fffd|H|fffd|c|fffd|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LDAP DLL|fffd||fffd|Windows|fffd|W|fffd||fffd||fffd||30b|@|fffd|\|fffd||fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||301|B
''           |fffd|FNKKSOSUB.Employee.SetTargetUserID|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||311||fffd||fffd||fffd|BBukaCode|fffd||313||fffd||fffd|e|fffd||fffd||fffd||502||fffd||fffd||102||fffd||fffd||fffd|B
''           |fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"ldap.n-koei.co.jp"|fffd||355|t|fffd||fffd||fffd||202||fffd||fffd|B
'' |fffd||3cd|X|fffd||fffd||fffd||fffd|  |fffd|F2014/06/10 m_take     |fffd|V|fffd|K|fffd||c42c|
'' |fffd|g|fffd|p|fffd||fffd|    |fffd|Fcall GetDepartmentNumberFromUserID("m0047",strBukaCD)
''-------------------------------------------------------------------------------
'Public Function GetDepartmentNumberFromUserID(ByVal strUserID As String, ByRef strBukaCode As String, Optional ByVal LDAPServerName As String = "ldap.n-koei.co.jp") As Boolean
'
'    Const CSFUNCTIONNAME As String = "GetDepartmentNumberFromUserID"
'
'    Dim rootDSE As Object
'    Dim strDepartmentNumber As String
'    Dim blResult As Boolean
'    Dim hr As Long
'
'    On Error GoTo ErrorHandler
'
'    blResult = False
'
'    ' |fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
'    If (strUserID = "") Then
'        Call Err.Raise(-1, CSFUNCTIONNAME, "|fffd||fffd||fffd|[|fffd|U|fffd|[ID|fffd||fffd||fffd||fffd||142||fffd||fffd|B")
'    End If
'
'    Set rootDSE = GetObject("LDAP://" & LDAPServerName & "/uid=" & strUserID & ",o=n-koei.co.jp")
'
'    ' |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'    rootDSE.GetInfo
'    ' departmentNumber,cn,mail|fffd||303|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'    'hr = rootDSE.GetInfoEx(Array("departmentNumber","cn","mail"), 0)
'    hr = rootDSE.GetInfoEx(Array("*", "+"), 0)
'
'    ' |fffd|g|fffd|DCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'    strDepartmentNumber = getLDAPValue(rootDSE, "departmentNumber")
'    ' |fffd||64fe||fffd||94|\|fffd||203|f|fffd|[|fffd|^
'    '|fffd|c|fffd||fffd||fffd|F"sn"
'    '|fffd||fffd||fffd|O|fffd|F"givenName"
'    '|fffd|t|fffd||fffd||fffd|l|fffd|[|fffd||fffd|(|fffd||fffd||fffd||fffd|)|fffd|F"cn"
'    '|fffd|t|fffd||fffd||fffd|l|fffd|[|fffd||fffd|(|fffd||fffd||fffd|[|fffd|}|fffd||fffd|)|fffd|F"cn;lang-en"
'    ' sn,givenName,cn|fffd||30c||fffd||fffd||fffd|";lang-en"|fffd||fffd|t|fffd||fffd||fffd||fffd||183||fffd||fffd|[|fffd|}|fffd||fffd||fffd||141|A";lang-ja"|fffd||fffd|t|fffd||fffd||fffd||fffd||18a||fffd||fffd||fffd||fffd||155||502||fffd||fffd||102||fffd||fffd||fffd|
'    '|fffd||fffd||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|F"mail"
'    '|fffd|g|fffd|DCode|fffd|F"departmentNumber"
'    '|fffd|g|fffd|D|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)|fffd|F"ou"
'    '|fffd|g|fffd|D|fffd||fffd||fffd||fffd|(|fffd|p|fffd||fffd|)|fffd|F"ou;lang-en"
'    '|fffd||a3ca|(|fffd||fffd||fffd||fffd|)|fffd|F"l"
'    '|fffd||a3ca|(|fffd|p|fffd||fffd|)|fffd|F"l;lang-en"
'    '|fffd||fffd||fffd|[|fffd||fffd||fffd|T|fffd|[|fffd|o|fffd|[|fffd|F"mailHost"
'
'    strBukaCode = Trim$(strDepartmentNumber)
'    blResult = True
'
'    Set rootDSE = Nothing
'
'ExitHandler:
'
'    GetDepartmentNumberFromUserID = blResult
'
'    Exit Function
'
'ErrorHandler:
'    Dim lErrorNumber As Long
'    Dim strErrorDescription As String
'    Dim strErrorSource As String
'
'    lErrorNumber = Err.number
'    strErrorDescription = Err.Description
'    strErrorSource = Err.Source
'
'    Call MsgBox(CSFUNCTIONNAME & "|fffd||143|G|fffd||fffd||fffd|[|fffd|F" & strErrorSource)
'    Resume ExitHandler
'
'End Function
'
'
''-------------------------------------------------------------------------------
'' |fffd|@|fffd|\|fffd|T|fffd|v|fffd|@|fffd|FLDAP|fffd|T|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||fffd||38f||6c2||303|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'' |fffd||fffd||fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|F(I/ )objRootDSE LDAP|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
''           |fffd|F(I/ )strPropertyName |fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||316||fffd||fffd|O
'' |fffd||7c2||fffd|l|fffd|@|fffd|@|fffd|F|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312|l
'' |fffd||fffd||fffd|l|fffd|@|fffd|@|fffd|@|fffd|F
'' |fffd||3cd|X|fffd||fffd||fffd||fffd|  |fffd|F2014/06/10 m_take     |fffd|V|fffd|K|fffd||c42c|
''-------------------------------------------------------------------------------
'Private Function getLDAPValue(ByVal objRootDSE As Object, ByVal strPropertyName As String) As String
'
'Const CSFUNCTIONNAME As String = "getLDAPValue"
'Dim objArray As Object
'Dim v As Variant
'Dim propVal2 As Object
'Dim strResult As String
'
'    On Error GoTo ErrorHandler
'
'    strResult = ""
'
'    ' |fffd||5576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||308||10a2||fffd||16cce||fffd||fffd||fffd||fffd||103|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    Set objArray = objRootDSE.GetPropertyItem(strPropertyName, ADSTYPE_CASE_IGNORE_STRING)
'
'    For Each v In objArray.Values
'        Set propVal2 = v
'        strResult = propVal2.CaseIgnoreString
'        Exit For
'    Next
'
'    Set propVal2 = Nothing
'    Set objArray = Nothing
'
'ExitHandler:
'
'    getLDAPValue = strResult
'
'    Exit Function
'
'ErrorHandler:
'    Dim lErrorNumber As Long
'    Dim strErrorDescription As String
'    Dim strErrorSource As String
'
'    lErrorNumber = Err.number
'    strErrorDescription = Err.Description
'    strErrorSource = Err.Source
'
'    Call Err.Raise(lErrorNumber, CSFUNCTIONNAME & "|fffd||143|G|fffd||fffd||fffd|[|fffd|F" & strErrorSource, strErrorDescription)
'
'End Function
'
'
''-------------------------------------------------------------------------------
'' |fffd|@|fffd|\|fffd|T|fffd|v|fffd|@|fffd|FMicrosoft Collaboration Data Objects|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd|
'' |fffd||fffd||fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|F(I/ )strMailServerName |fffd||fffd||fffd|[|fffd||fffd||fffd|T|fffd|[|fffd|o|fffd|[|fffd||fffd|(|fffd||fffd||202||fffd|smtp.n-koei.co.jp|fffd||fffd||fffd|g|fffd||fffd||fffd||702||fffd|)
''           |fffd|F(I/ )strTo |fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|To(|fffd||fffd||202||fffd|G|fffd||fffd||fffd|[)
''           |fffd|F(I/ )strFrom |fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|From(|fffd||fffd||202||fffd|G|fffd||fffd||fffd|[)
''           |fffd|F(I/ )strSubject |fffd||fffd||fffd|[|fffd||fffd||fffd||315|\|fffd||fffd|
''           |fffd|F(I/ )strBody |fffd||fffd||fffd|[|fffd||fffd||fffd|{|fffd||fffd|
''           |fffd|F(I/ )strCC |fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Cc
''           |fffd|F(I/ )strAttachmentFileName |fffd|Y|fffd|t|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|B|fffd|t|fffd||fffd||fffd|p|fffd|X|fffd||14e|w|fffd||80b7||fffd||fffd|B
'' |fffd||7c2||fffd|l|fffd|@|fffd|@|fffd|F|fffd||fffd||fffd|M|fffd||250||fffd||fffd||fffd||fffd||202||fffd||d5d8e||fffd|(|fffd||fffd||fffd||fffd|0)|fffd|A|fffd||fffd||fffd|s|fffd||202||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||502||fffd||fffd|B
'' |fffd||fffd||fffd|l|fffd|@|fffd|@|fffd|@|fffd|F|fffd||fffd||fffd|{|fffd|H|fffd|c|fffd|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LDAP DLL|fffd||fffd|Windows|fffd|W|fffd||fffd||fffd||30b|@|fffd|\|fffd||fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||301|B
''           |fffd|FBASP21 bsmtp.IsLogin|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||311||fffd||fffd||fffd|B
'' |fffd||3cd|X|fffd||fffd||fffd||fffd|  |fffd|F2014/06/10 m_take     |fffd|V|fffd|K|fffd||c42c|
'' |fffd|g|fffd|p|fffd||fffd|    |fffd|Fcall SendMail("smtp.n-koei.co.jp","m0047@n-koei.co.jp", "m0047@n-koei.co.jp", "Mail Send Test","|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|M|fffd|e|fffd|X|fffd|g|fffd||142||fffd||fffd|B")
''-------------------------------------------------------------------------------
'Public Function SendMail(ByVal strMailServerName As String, ByVal strTo As String, ByVal strFrom As String _
'    , ByVal strSubject As String, ByVal strBody As String, Optional ByVal strCC As String = "" _
'    , Optional ByVal strAttachmentFileName As String = "") As String
'
'Const CSFUNCTIONNAME As String = "SendMail"
'Const DEFAULTMAILSERVER As String = "smtp.n-koei.co.jp"
'
'Const RETURNCODE_SUCCESS As String = ""
'Const RETURNCODE_FAIL As String = "SendMail|fffd||143|G|fffd||fffd||fffd|["
'
'Const Schemas As String = "http://schemas.microsoft.com/cdo/configuration/"
'
'Dim bobj As Object
'Dim strResult As String
'
'    On Error GoTo ErrorHandler
'
'     strResult = RETURNCODE_FAIL
'
'    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd||fffd||fffd|T|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||38a||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
'    If (Trim$(strMailServerName) = "") Then
'        strMailServerName = DEFAULTMAILSERVER
'    End If
'
'    Set bobj = CreateObject("CDO.Message")  '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30d||c42c|
'
'        ' |fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
'        If (Trim$(strFrom) = "") Then
'            Call Err.Raise(-1, CSFUNCTIONNAME, "From|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B")
'        End If
'
'        If (Trim$(strTo) = "") Then
'            Call Err.Raise(-1, CSFUNCTIONNAME, "To|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B")
'        End If
'
'        bobj.From = Trim$(strFrom)
'        bobj.To = Trim$(strTo)
'        If (Trim$(strCC) <> "") Then
'            bobj.CC = Trim$(strCC)
'        End If
'        bobj.Subject = strSubject
'        bobj.TextBody = strBody
'        ' |fffd|Y|fffd|t|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||382||fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'        If (Trim$(strAttachmentFileName) <> "") Then
'            bobj.AddAttachment Trim$(strAttachmentFileName)
'        End If
'
'        bobj.TextBodyPart.Charset = "ISO-2022-JP"
'
'        bobj.Configuration.Fields.Item(Schemas + "sendusing") = 2
'        bobj.Configuration.Fields.Item(Schemas + "smtpconnectiontimeout") = 30
'        bobj.Configuration.Fields.Item(Schemas + "smtpserver") = strMailServerName
'        bobj.Configuration.Fields.Item(Schemas + "smtpserverport") = 25
'
'        Call bobj.Configuration.Fields.Update
'
'        Call bobj.Send
'
'        Set bobj = Nothing
'
'        strResult = RETURNCODE_SUCCESS
'
'ExitHandler:
'
'        SendMail = strResult
'
'        Exit Function
'
'ErrorHandler:
'    Dim lErrorNumber As Long
'    Dim strErrorDescription As String
'    Dim strErrorSource As String
'
'    lErrorNumber = Err.number
'    strErrorDescription = Err.Description
'    strErrorSource = Err.Source
'
'    Call MsgBox(CSFUNCTIONNAME & "|fffd||143|G|fffd||fffd||fffd|[|fffd|F" & strErrorDescription)
'
'    strResult = strErrorDescription
'
'    Resume ExitHandler
'
'End Function
''>>>2016.02.25 Add By Y.Watanabe 64bit|fffd||389||fffd|
Attribute VB_Name = "modFunction"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|L|fffd||fffd||590||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
''<<<2017.01.15 Add By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
Public g_lngCurrentProcessId As Long            ''|fffd|v|fffd||fffd||fffd|Z|fffd|XID
#If Win64 Then
    Private Declare PtrSafe Function GetCurrentProcessId Lib "kernel32" () As Long
#Else
    Private Declare Function GetCurrentProcessId Lib "kernel32" () As Long
#End If
''>>>2017.01.15 Add By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|

Public g_strAppPath As String                   ''|fffd||fffd||183|t|fffd|H|fffd||fffd||fffd|_|fffd|p|fffd|X|fffd|i|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|j
Public g_intTargetSysYear As Integer            ''|fffd||38f||6d4|N|fffd|x
Public g_strOfficeCode As String                ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
Public g_strPreOfficeCode As String             ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|O|fffd||fffd|
Public g_lngOfficeCount As Long                 ''|fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public g_objLog As clsGErrorLog                 ''|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|O

''|fffd|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd|O|fffd|o|fffd||357|p|fffd||3d0||fffd|-----------------------------------------------
Public g_strLoginId As String           ''LoginID
Public g_strEmployeeCode                ''|fffd||fffd||fffd||fffd||fffd||fffd|Code
Public g_strVersion As String           ''Version|fffd||fffd||fffd||fffd||fffd||fffd|
Public g_strVersionCode As String       ''VersionCode|fffd||fffd||fffd||fffd||fffd||fffd|
Public g_strAppVersion As String        ''ExcelVersion|fffd||fffd||fffd||fffd||fffd||fffd|
Public g_strAppInfomation As String     ''|fffd||fffd||fffd|m|fffd||70b9||fffd|\|fffd||fffd||fffd||fffd||fffd|e

Public g_strComputerName As String      ''|fffd|R|fffd||fffd||fffd|s|fffd||fffd||fffd|[|fffd|^|fffd||fffd|
Public g_strSessionID As String         ''SessionID|fffd||fffd||6ce||fffd|
''<<<2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|
#If Win64 Then
    Private Declare PtrSafe Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
#Else
    Private Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
#End If
'Private Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" ( _
'    ByVal lpBuffer As String, _
'    nSize As Long _
') As Long
''>>>2016.02.25 Mod By Y.Watanabe 64bit|fffd||389||fffd|

Public g_adoCnCmn As ADODB.Connection   ''CommonConnection LogIn/Log|fffd|L|fffd|^|fffd|p
Public g_objdbaCmn As clsDBAccess       ''CommonDBAccess LogIn/Log|fffd|L|fffd|^|fffd|p

''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
' |fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||302||141|A|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'Public g_adoCnLog As ADODB.Connection   ''Log|fffd|L|fffd|^|fffd|p
'Public g_objdbaLog As clsDBAccess       ''Log|fffd|L|fffd|^|fffd|p
'''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X

''|fffd||fffd||fffd||c0c2||fffd|[|fffd|h|fffd||752||fffd||3d0||fffd|
Public g_blnLedgerModify As Boolean             ''Ledger|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
Public g_blnR3IfEnable As Boolean               ''R3IF|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public g_blnOfficeMstModify As Boolean          ''OfficeMaster|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
Public g_blnWrite As Boolean                    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||749||94||fffd|
''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|

''|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||752||fffd||3d0||fffd|
Public g_strDscrptCapTop As String              ''Description Top|fffd|K|fffd|w|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||695||fffd||fffd||fffd||fffd||fffd|
Public g_strDscrptCapMid As String              ''Description Mid|fffd|K|fffd|w|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||695||fffd||fffd||fffd||fffd||fffd|
Public g_strMapACCode As String                 ''Description |fffd||389||fffd|AccountCode
Public g_strMapACName As String                 ''Description |fffd||389||fffd|AccountName
Public g_strMapWarn As String                   ''Description |fffd||389||fffd|WarningMessage
Public g_objDscrptCmdBar As CommandBar          ''Description|fffd|p|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[

Public g_typAryOfficeInfo() As clsOfficeInfo    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryCBInfo() As clsCashBkInfo        ''CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryBBInfo() As clsBankBkInfo        ''BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryTRInfo() As clsTransferInfo      ''Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryAsoInfo() As clsAssosiate        ''Assosiate|fffd||fffd||fffd|z|fffd||fffd|
Public g_typArySConInfo() As clsSubContract     ''SubContract|fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryWBSCode() As clsWBSInfo          ''WBS|fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryRTInfo() As clsRemittanceInfo    ''|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd|z|fffd||fffd|
Public g_typAryPJTInfo() As clsProjectInfo      ''Project|fffd||fffd||fffd|z|fffd||fffd|

Public g_intAryYear() As Integer                ''|fffd|N|fffd|xDB|fffd|p|fffd|N|fffd|x|fffd|z|fffd||fffd|
Public g_strAryCurrencyCode() As String         ''|fffd||289||fffd|Code|fffd||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd|
Public g_lngCurrencyCount As Long               ''|fffd|o|fffd|^|fffd||289||750||fffd|
Public g_strInvalidDecimalCurrency As String    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||289||fffd|Code|fffd||fffd|CSV|fffd||fffd||fffd|X|fffd|g

Public g_strAryAcCode() As String               ''AccountCode|fffd||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd|
Public g_strAryAcName() As String               ''AccountName|fffd||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd|
Public g_intAryAcDrCr() As Integer              ''AccountDrCr|fffd||fffd||fffd||283||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd|(Dr:0,Cr:1)
Public g_strLCodeIndispensableAccount As String ''LinkCode|fffd|K|fffd|{|fffd||30a||fffd||fffd||fffd|

Public g_intAryCurLinkNumber(5) As Integer      ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerLinkCode|fffd||50d||fffd|
Public g_strConnCodeTSV As String               ''ConnectionCode Tab|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|
Public g_strConnNameTSV As String               ''ConnectionName Tab|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|
Public g_blnConnCodeEdit As Boolean             ''ConnectionCode|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_lngAryCurRecIDNumber(2) As Long        ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gRecID|fffd||50d||fffd|(CB/BB/TR|fffd||fffd|ID|fffd||50d||fffd|)

' |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||48f|W|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
Public g_typAryCBInfoEdit() As clsCashBkInfo        ''|fffd||48f|W|fffd||fffd||fffd||fffd|CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryBBInfoEdit() As clsBankBkInfo        ''|fffd||48f|W|fffd||fffd||fffd||fffd|BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryTRInfoEdit() As clsTransferInfo      ''|fffd||48f|W|fffd||fffd||fffd||fffd|Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryAsoInfoEdit() As clsAssosiate        ''|fffd||48f|W|fffd||fffd||fffd||fffd|Associate|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typArySConInfoEdit() As clsSubContract     ''|fffd||48f|W|fffd||fffd||fffd||fffd|Sub-Contract|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryRTInfoEdit() As clsRemittanceInfo    ''|fffd||48f|W|fffd||fffd||fffd||fffd|Remittance|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
Public g_typAryWBSCodeEdit() As clsWBSInfo          ''|fffd||48f|W|fffd||fffd||fffd||fffd|WBSCode|fffd|z|fffd||fffd|
Public g_typAryPJTInfoEdit() As clsProjectInfo      ''|fffd||48f|W|fffd||fffd||fffd||fffd|Project|fffd|\|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|

' |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|p|fffd||3d0||fffd|------------------------------------------------
Public g_strImportPJTCode As String                ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h
Public g_strImportWBSCodeCSV As String             ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gWBS|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|
Public g_strReplaceWBSCodeCSV As String            ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gWBS|fffd||3ca||fffd||fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|
Public g_strReplaceWBSCode As String               ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gWBS|fffd||3ca||fffd||fffd|R|fffd|[|fffd|h
Public g_strAryImportInvalid() As String           ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd|z|fffd||fffd|
Public g_intImportInvalidCount As Integer          ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|Data|fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|^
Public g_strAryImportFixedReplace() As String      ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd|z|fffd||fffd|
Public g_intImportFixedReplaceCount As Integer     ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|gPaid|fffd||33d1||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|^
Public g_strOrgPaidLinkCodeCSV As String           ''PaidStatusLinkCode|fffd||6d1||fffd||fffd|i|fffd|`|fffd|F|fffd|b|fffd|N|fffd|j|fffd|p
Public g_strImpPaidLinkCodeCSV As String           ''PaidStatusLinkCode|fffd||6d1||fffd||fffd|i|fffd|`|fffd|F|fffd|b|fffd|N|fffd|j|fffd|p

' |fffd|J|fffd||fffd||fffd||fffd||fffd|gOFIICE|fffd|m|fffd||fffd|/Import|fffd||fffd||fffd|p|fffd||3d0||fffd|------------------------------------------------
Public g_datDecisionMonth As Date                   ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd|
Public g_datImportMonth As Date                     ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
Public g_intImportKind As Integer                   ''|fffd|f|fffd|[|fffd|^|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd| 0:Site 1:NK 2:JW
Public g_datDecisionDate As Date                    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' Lancher|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||3d0||fffd|------------------------------------------------
Public g_lngWdState As Long                 ''Window|fffd||fffd||515||6d1||fffd|
Public g_enmSelectLedgerId As GLED_ID       ''|fffd|I|fffd||fffd|LedgerID
Public g_strArywsName(14) As String         ''workSheetName|fffd|z|fffd||fffd|
Public g_blnArySetupSheet(14) As Boolean    ''Setup|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd|z|fffd||fffd|
Public g_blnAryCmnMstUpdate(14) As Boolean  ''|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd|z|fffd||fffd|
Public g_blnQuitLaunncher As Boolean        ''Launcher|fffd|I|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|

' |fffd||fffd||fffd||283|}|fffd|X|fffd|^Form|fffd||48f|W|fffd|p|fffd|t|fffd||fffd||fffd|O|fffd||202||fffd|---------------------------------------
Public g_blnBtnAdd As Boolean           ''Add|fffd|{|fffd|^|fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public g_blnUseRemit As Boolean         ''UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd||303|t|fffd||fffd||fffd|O
Public g_blnUseMain As Boolean          ''UseMain|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd||303|t|fffd||fffd||fffd|O
Public g_intUseRemitIndex As Integer    ''UseRemittance(BankBook)|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||9340||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Public g_intUseMainIndex As Integer     ''UseMain(Project)|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||9340||fffd||682||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Public g_blnCBNoArray As Boolean        ''CashBook|fffd||fffd||fffd|z|fffd||fffd||317|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public g_blnBBNoArray As Boolean        ''BankBook|fffd||fffd||fffd|z|fffd||fffd||317|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public g_blnTRNoArray As Boolean        ''Transfer|fffd||fffd||fffd|z|fffd||fffd||317|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public g_intCBItemIndex As Integer      ''CashBook|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|INDEX
Public g_intBBItemIndex As Integer      ''BankBook|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|INDEX
Public g_intWBSmaxID As Integer         ''WBS_ID|fffd||151||fffd|l
Public g_intPJTItemIndex As Integer     ''Project|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|INDEX
Public g_intASItemIndex As Integer      ''Associate|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|INDEX
Public g_intSCItemIndex As Integer      ''SubCon|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|INDEX
Public g_blnCBBtnOk As Boolean          ''CashBookForm|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_blnBBBtnOk As Boolean          ''BankBookForm|fffd|y|fffd|[|fffd|W|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_blnWBSBtnOk As Boolean         ''WBSForm|fffd|y|fffd|[|fffd|W|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_blnPJTBtnOk As Boolean         ''ProjectForm|fffd|y|fffd|[|fffd|W|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_blnASBtnOk As Boolean          ''AssociateForm|fffd|y|fffd|[|fffd|W|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_blnSCBtnOk As Boolean          ''SubConForm|fffd|y|fffd|[|fffd|W|fffd||48f|W|fffd|t|fffd||fffd||fffd|O
Public g_blnTRInput As Boolean          ''Transfer|fffd||313||fffd||fffd||343|t|fffd||fffd||fffd|O
Public g_blnPartPayment As Boolean      ''|fffd||a554||fffd||fffd||fffd||fffd|/|fffd|x|fffd||fffd||fffd|t|fffd||fffd||fffd|O

''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||fffd||3d0||fffd|-----------------------------------------------
Public g_strFORMAT_DEC_CBT As String ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public g_strFORMAT_DEC_XX As String     ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public g_strFORMAT_DECR_XX As String    ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|}|fffd|C|fffd|i|fffd|X|fffd||fffd|
Public g_strFORMAT_DECZERO_XX As String ''|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd||fffd||fffd|w|fffd||fffd|

''|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||389||fffd|-------------------------------------------
Public g_strPastAcCodeCSV As String      ''|fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|
Public g_strReplaceAcCodeCSV As String   ''|fffd||3ca||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|e|fffd|V|fffd|[|fffd|g|fffd||fffd||502||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@(1)|fffd||fffd||fffd||282||30f||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|e|fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/08/22 : Knowlbo Suzuki : R/3IF|fffd||fffd||fffd||fffd|Doc|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c9||fffd|
'   2003/10/16 : Knowlbo Suzuki : Version|fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'   2013/02/19 : |fffd|n|7c97|S|fffd|q : |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'   2013/02/22 : |fffd|n|7c97|S|fffd|q : DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'   2013/03/04 : |fffd|n|7c97|S|fffd|q : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Public Sub _
sg_SetupCondition()

    Dim intIx As Integer
    Dim objCmdBar As CommandBar
    Dim strMSG As String
    Dim blnRet As Boolean
    Dim lngApLcid As Long
    Dim lngBkLcid As Long
    Dim strVersion As String
    Dim lngRet As Long
    
    g_blnQuitLaunncher = False ''Launcher|fffd|I|fffd||fffd||fffd||fffd||fffd||28f||fffd||fffd||fffd||fffd||fffd|
    g_blnOfficeMstModify = False
    g_intImportKind = 0
    
    ThisWorkbook.Sheets("CashBook").Activate
        
    ''|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|\|fffd||fffd|
    Application.ActiveWindow.DisplayWorkbookTabs = False

    ''|fffd|V|fffd|[|fffd|g|fffd||14f||fffd||fffd||fffd|
    g_lngWdState = xlMaximized
'    Application.ActiveWindow.WindowState = xlMinimized
    
    ''ExcelVersion|fffd||6d1||fffd|
    g_strAppVersion = Application.Version
    
    ''|fffd|R|fffd||fffd||fffd|s|fffd||fffd||fffd|[|fffd|^|fffd||fffd||fffd||64fe|
    g_strComputerName = String(250, Chr(0))
    lngRet = GetComputerName(g_strComputerName, Len(g_strComputerName))
    g_strComputerName = Left$(g_strComputerName, InStr(g_strComputerName, vbNullChar) - 1)
    
    ''|fffd||fffd||183|p|fffd|X|fffd||fffd||fffd||752||fffd|(|fffd|p|fffd||fffd||8b||fffd||fffd||142||fffd|"\"|fffd||fffd||fffd|g|fffd||fffd||fffd||202||fffd||fffd||302||fffd|PathSeparator|fffd||fffd||fffd|g|fffd|p|fffd|j
    g_strAppPath = ThisWorkbook.Path & Application.PathSeparator
   
    ''ErrorLog|fffd|N|fffd||fffd||fffd|X|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||fffd||fffd||fffd|
    Set g_objLog = New clsGErrorLog

    ''Common|fffd|L|fffd|^|fffd|pDBAccess/Connection|fffd||fffd||fffd||fffd|
    Set g_objdbaCmn = New clsDBAccess
    Set g_adoCnCmn = New ADODB.Connection
    g_objdbaCmn.CallPlace = ID_NKFAS_SS
    ''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    g_objdbaCmn.ServerName = c_strServerName
    g_objdbaCmn.DBName = c_strDBName
    g_objdbaCmn.UserID = c_strUserID
    g_objdbaCmn.Password = c_strPassword
    
'    g_objdbaCmn.ServerName = c_strNKWFServerName
'    g_objdbaCmn.DBName = c_strNKWFDBName
'    g_objdbaCmn.UserID = c_strNKWF_UserID
'    g_objdbaCmn.Password = c_strNKWF_Password
    ''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    g_objdbaCmn.IsLoging = False
    
    ''Common|fffd|L|fffd|^|fffd|p Connection|fffd||fffd|Open
    If (g_objdbaCmn.openADOConnection(g_adoCnCmn) <> 0) Then
        MsgBox "Can't Create ADODBConnection!" & vbCrLf & c_strMSG_SYSQUIT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        GoTo LBL_EXIT
    End If
    
    ''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    ' |fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||302||141|A|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    ''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'    ''Log|fffd|pDBAccess/Connection|fffd||fffd||fffd||fffd|
'    Set g_objdbaLog = New clsDBAccess
'    Set g_adoCnLog = New ADODB.Connection
'    g_objdbaLog.CallPlace = ID_NKFAS_SS
'    g_objdbaLog.ServerName = c_strServerName
'    g_objdbaLog.DBName = c_strDBName
'    g_objdbaLog.UserID = c_strUserID
'    g_objdbaLog.Password = c_strPassword
'    g_objdbaLog.IsLoging = False
'
'    ''Log|fffd|p Connection|fffd||fffd|Open
'    If (g_objdbaLog.openADOConnection(g_adoCnLog) <> 0) Then
'        MsgBox "Can't Create ADODBConnection!" & vbCrLf & c_strMSG_SYSQUIT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
'        GoTo LBL_EXIT
'    End If
'    ''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
    ''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    
    ''SessionID|fffd||64fe|
    g_strSessionID = fg_CreateSession()

    ''WorkSheetName|fffd|z|fffd||4f24a||fffd||fffd||fffd|
    g_strArywsName(0) = "CashBook"
    g_strArywsName(1) = "BankBook"
    g_strArywsName(2) = "TransferSheet"
    g_strArywsName(3) = "LED04"
    g_strArywsName(4) = "LED05"
    g_strArywsName(5) = "LED06"
    g_strArywsName(6) = "LED07"
    g_strArywsName(7) = "LED08"
    g_strArywsName(8) = "LED09"
    g_strArywsName(9) = "LED10"
    g_strArywsName(10) = "LED11"
    g_strArywsName(11) = "LED12"
    g_strArywsName(12) = "LED13"
    g_strArywsName(13) = "LED14"
    g_strArywsName(14) = "LED15"
    
    ''LedgerSetUp|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    For intIx = 0 To 14
        g_blnArySetupSheet(intIx) = False
        g_blnAryCmnMstUpdate(intIx) = False
    Next
    
    'Version |fffd||64fe||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    g_strVersion = ""
    g_strVersion = fg_GetDocProperty(c_strPROP_Version, ThisWorkbook, g_strVersion)
    g_strVersionCode = Mid$(g_strVersion, 2, 3)
    g_strVersionCode = g_strVersionCode & "." & Right$(g_strVersion, 2)
    
    If fg_IsLatestVersion() <> True Then
        MsgBox c_strMSG_SYSQUIT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        GoTo LBL_EXIT
    End If
    
    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnRet = True
    blnRet = fg_GetDocProperty(c_strPROP_DecimalCount, ThisWorkbook, blnRet)
    If blnRet Then
        g_strFORMAT_DEC_CBT = c_strFORMAT_DEC_CBT_N
        g_strFORMAT_DEC_XX = c_strFORMAT_DEC_N
        g_strFORMAT_DECR_XX = c_strFORMAT_DECR_N
        g_strFORMAT_DECZERO_XX = c_strFORMAT_DECZERO_N
    Else
        g_strFORMAT_DEC_CBT = c_strFORMAT_DEC_CBT_X
        g_strFORMAT_DEC_XX = c_strFORMAT_DEC_X
        g_strFORMAT_DECR_XX = c_strFORMAT_DECR_X
        g_strFORMAT_DECZERO_XX = c_strFORMAT_DECZERO_X
    End If
    
    
    ''Ledger|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    g_blnLedgerModify = fg_GetDocProperty(c_strPROP_ModifyLedger, ThisWorkbook, False)
    
    ''R/3 IF|fffd|L|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|Q|fffd||fffd|
    g_blnR3IfEnable = fg_GetDocProperty(c_strPROP_EnableR3IF, ThisWorkbook, True)
    
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------Start NK-FAS-SS", Err, LEVEL_LOG)
    
    ''Application |fffd||fffd||fffd|P|fffd|[|fffd||fffd||fffd||64fe||fffd|i|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd| |fffd|j
    lngApLcid = Application.LanguageSettings.LanguageID(msoLanguageIDInstall)
    
    sg_GetCommonInfo    ''|fffd||fffd||fffd||28f||fffd||fffd|Q|fffd||fffd|
    
    
    ''|fffd||38f||6d4|N|fffd|x|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||fffd||fffd||753||fffd||fffd|t|fffd||fffd||fffd|A|fffd|N|fffd|x|fffd||fffd||fffd||64fe|
    g_intTargetSysYear = fg_GetFiscalYear(Now)
    
'    g_intTargetSysYear = Year(Now)
'    If Month(Now) < 4 Then
'        g_intTargetSysYear = Year(Now) - 1
'    End If
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ReDim Preserve g_intAryYear(0)
    g_intAryYear(0) = c_intStartYear
    
    ''|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||313||fffd|d|fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c2||24d||d3dc|
    For Each objCmdBar In Application.CommandBars
        If objCmdBar.Name = c_strCmdBarDescription Then
            CommandBars(c_strCmdBarDescription).Delete
            Exit For
        End If
    Next

    ''|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||313|o|fffd|^
    Set g_objDscrptCmdBar = Application.CommandBars.Add _
        (Name:=c_strCmdBarDescription, Position:=msoBarPopup)
    
    ''Description |fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||68d||c42c|
    s_SetupDescriptionMenu

    ''LedgerLinkCode|fffd||50d||fffd||fffd|z|fffd||4f24a||fffd||fffd||fffd| Add(2002/11/05)
    For intIx = 0 To 5
        g_intAryCurLinkNumber(intIx) = 0
    Next
    
    ''RecID|fffd||50d||fffd||fffd|z|fffd||4f24a||fffd||fffd||fffd|( for CB/BB/TR)
    For intIx = 0 To 2
        g_lngAryCurRecIDNumber(intIx) = 0
    Next
    
    ''|fffd||fffd||fffd|[|fffd|U|fffd|F|fffd||602|h|fffd|c|fffd||fffd||fffd||fffd||fffd||fffd|
    g_strLoginId = ""

    ''|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd|\|fffd||fffd|
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    g_lngCurrentProcessId = GetCurrentProcessId()
'    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show

    Exit Sub

LBL_EXIT:
    ThisWorkbook.m_blnCloseSysQuit = True
    ThisWorkbook.Saved = True
    ThisWorkbook.Close
    Exit Sub
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|e|fffd|V|fffd|[|fffd|g|fffd||30f|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd|V|fffd|[|fffd|g|fffd||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/02/19 : |fffd|n|7c97|S|fffd|q : |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'-----------------------------------------------------------------
Public Sub _
fg_WrapupSheets()
    Dim objCmdBar As CommandBar
    wsBankBook.sw_WrapupSheet
    wsCashBook.sw_WrapupSheet
    wsTransfer.sw_WrapupSheet
    wsBrInvoice.sw_WrapupSheet
    wsLedInvoice.sw_WrapupSheet
    wsLedAsso.sw_WrapupSheet
    wsLedSubcon.sw_WrapupSheet
    wsRemitRequest.sw_WrapupSheet
    wsLedRemit.sw_WrapupSheet
    wsPrePaid.sw_WrapupSheet
    wsBSBalance.sw_WrapupSheet
    wsPLBalance.sw_WrapupSheet
    wsSearchAccount.sw_WrapupSheet
    
    ''|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||d3dc|
    For Each objCmdBar In Application.CommandBars
        If objCmdBar.Name = c_strCmdBarDescription Then
            CommandBars(c_strCmdBarDescription).Delete
            Exit For
        End If
    Next

    Set g_objDscrptCmdBar = Nothing
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End Of NK-FAS", Err, LEVEL_LOG)
    Set g_objLog = Nothing
    
    
    '|fffd|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||702||fffd|
    If g_strLoginId <> "" Then Call sg_InsertAccessLog(9, g_strLoginId, g_strEmployeeCode)
    
    ''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    ' |fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||302||141|A|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    ''<<<2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
'    ''Log|fffd|pDBAccess/Connection|fffd||fffd||fffd|
'    If Not (g_adoCnLog Is Nothing) Then
'        If (g_adoCnLog.State = adStateOpen) Then
'            g_adoCnLog.Close
'        End If
'    End If
'    Set g_adoCnLog = Nothing
'    Set g_objdbaLog = Nothing
'    ''>>>2013.02.19 Mod By Y.Watanabe |fffd||fffd||fffd|O|fffd|o|fffd||350||fffd||fffd|NKFA|fffd||255||3cd|X
    ''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    
    ''Common|fffd|L|fffd|^|fffd|pDBAccess/Connection|fffd||fffd||fffd|
    If Not (g_adoCnCmn Is Nothing) Then
        If (g_adoCnCmn.State = adStateOpen) Then
            g_adoCnCmn.Close
        End If
    End If
    Set g_adoCnCmn = Nothing
    Set g_objdbaCmn = Nothing
    
    Erase g_intAryYear
    Erase g_strAryCurrencyCode
    Erase g_typAryCBInfo
    Erase g_typAryBBInfo
    Erase g_typAryTRInfo
    Erase g_typAryAsoInfo
    Erase g_typArySConInfo
    Erase g_typAryRTInfo
    Erase g_typAryPJTInfo
    Erase g_typAryWBSCode
    Erase g_strAryAcCode
    Erase g_strAryAcName
    Erase g_intAryAcDrCr
    Erase g_typAryOfficeInfo
    
    If g_blnQuitLaunncher = False Then Exit Sub
    
    If Workbooks.Count = 1 Then
        Application.Quit
    Else
        ThisWorkbook.Saved = True
        ThisWorkbook.Close
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Description|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||68d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||243||fffd||fffd|j|fffd||fffd||fffd|[|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||682||fffd|wsSettings|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_StartLedgerInput() As Boolean
    Dim strSheetName As String
    Dim blnRet As Boolean
        
    strSheetName = g_strArywsName(g_enmSelectLedgerId)
    ThisWorkbook.Sheets(strSheetName).Activate
    Application.ActiveWindow.WindowState = g_lngWdState

    Call g_objLog.PrintOut(ID_NKFAS_SS, "------Start LEDGER [" & strSheetName & "]", Err, LEVEL_LOG)
    
    blnRet = ThisWorkbook.ActiveSheet.fw_SetupSheet
    If blnRet = False Then
        Application.ActiveWindow.WindowState = xlMinimized
        fg_StartLedgerInput = False
        Exit Function
    End If
    
    fg_StartLedgerInput = True
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Description|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd|I|fffd||fffd||fffd||fffd||fffd||243|Z|fffd||fffd||fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDescriptionMenu()
    Dim intIx As Integer
    Dim lngIxAry As Long
    Dim strCaption As String
    Dim objCBCtrlTop As CommandBarControl
    Dim objCBCtrl2nd As CommandBarControl
    Dim strTagName As String
 
    lngIxAry = 0
    g_strLCodeIndispensableAccount = ""
    
    intIx = c_intDscrptCategorySettingDataRow
    Do While wsSettings.Cells(intIx, 3).Value <> "" '|fffd||fffd||fffd||fffd||216||682||fffd||fffd||d4482||142||202||fffd||fffd||fffd|
        ''Tag|fffd||241|AAcCode/AcName/Warning|fffd||fffd||752||fffd|
        strTagName = wsSettings.Cells(intIx, 3).Value & "#" & _
                     wsSettings.Cells(intIx, 4).Value & "#" & _
                     wsSettings.Cells(intIx, 8).Value
        ''Account|fffd||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd||c42c||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||357|p|fffd||fffd||fffd|j
        s_SetACCodeArray wsSettings.Cells(intIx, 3).Value, _
                         wsSettings.Cells(intIx, 4).Value, _
                         wsSettings.Cells(intIx, 13).Value, lngIxAry
      
        ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||216||682||315||6d1||fffd|
        If wsSettings.Cells(intIx, 12).Value <> "" Then
            If InStr(wsSettings.Cells(intIx, 12).Value, "(") = 0 Then
                g_strLCodeIndispensableAccount = g_strLCodeIndispensableAccount & "," & wsSettings.Cells(intIx, 3).Value
            End If
        End If
      
        If wsSettings.Cells(intIx, 2).Value <> "" Then  ''UseMemu|fffd||fffd||fffd||752||fffd||202||fffd|
            If wsSettings.Cells(intIx, 5).Value <> "" Then ''|fffd||fffd||fffd|x|fffd||fffd||fffd|P
                If wsSettings.Cells(intIx, 6).Value = "" Then
                    Set objCBCtrlTop = g_objDscrptCmdBar.Controls.Add(Type:=msoControlButton)
                    objCBCtrlTop.Tag = strTagName
                Else
                    Set objCBCtrlTop = g_objDscrptCmdBar.Controls.Add(Type:=msoControlPopup)
                End If
                objCBCtrlTop.Caption = wsSettings.Cells(intIx, 5).Value
                objCBCtrlTop.OnAction = "s_DscrptItemTopSelect"
            End If
            If wsSettings.Cells(intIx, 6).Value <> "" Then  ''|fffd||fffd||fffd|x|fffd||fffd||fffd|Q
                If wsSettings.Cells(intIx, 7).Value = "" Then
                   f_SetDsptCmdBarCtrl objCBCtrlTop, wsSettings.Cells(intIx, 6).Value, _
                             "s_DscrptItemMidSelect", True, strTagName
                Else
                    Set objCBCtrl2nd = f_SetDsptCmdBarCtrl(objCBCtrlTop, _
                        wsSettings.Cells(intIx, 6).Value, "s_DscrptItemMidSelect", False)
                    ''|fffd||fffd||fffd|x|fffd||fffd||fffd|R
                    f_SetDsptCmdBarCtrl objCBCtrl2nd, wsSettings.Cells(intIx, 7).Value, _
                             "s_DscrptItemLowSelect", True, strTagName
                End If
            Else
                If wsSettings.Cells(intIx, 7).Value <> "" Then  ''|fffd||fffd||fffd|x|fffd||fffd||fffd|R
                    f_SetDsptCmdBarCtrl objCBCtrl2nd, wsSettings.Cells(intIx, 7).Value, _
                             "s_DscrptItemLowSelect", True, strTagName
                End If
            End If
        End If
        intIx = intIx + 1
    Loop

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[TOP|fffd|K|fffd|w|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[TOP|fffd|K|fffd|w|fffd|I|fffd||fffd||fffd||fffd||fffd||243|Z|fffd||fffd||fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_DscrptItemTopSelect()
    Dim strCaption As String
    Dim strAry() As String
    
    g_strDscrptCapTop = CommandBars.ActionControl.Caption
    g_strDscrptCapMid = ""
    If CommandBars.ActionControl.Tag <> "" Then
        strCaption = g_strDscrptCapTop
        strAry = Split(CommandBars.ActionControl.Tag, "#")
        g_strMapACCode = strAry(0)
        g_strMapACName = strAry(1)
        g_strMapWarn = strAry(2)
        ActiveCell.Value = strCaption
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[Mid|fffd|K|fffd|w|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[Mid|fffd|K|fffd|w|fffd|I|fffd||fffd||fffd||fffd||fffd||243|Z|fffd||fffd||fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_DscrptItemMidSelect()
    Dim strCaption As String
    Dim strAry() As String
    
    g_strDscrptCapMid = CommandBars.ActionControl.Caption
    
    If CommandBars.ActionControl.Tag <> "" Then
        strCaption = g_strDscrptCapTop & " " & g_strDscrptCapMid
        strAry = Split(CommandBars.ActionControl.Tag, "#")
        g_strMapACCode = strAry(0)
        g_strMapACName = strAry(1)
        g_strMapWarn = strAry(2)
        ActiveCell.Value = strCaption
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[LOW|fffd|K|fffd|w|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[LOW|fffd|K|fffd|w|fffd|I|fffd||fffd||fffd||fffd||fffd||243|Z|fffd||fffd||fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_DscrptItemLowSelect()
    Dim strCaption As String
    Dim strAry() As String

    If CommandBars.ActionControl.Tag <> "" Then
        strCaption = g_strDscrptCapMid & " " & CommandBars.ActionControl.Caption
        strAry = Split(CommandBars.ActionControl.Tag, "#")
        g_strMapACCode = strAry(0)
        g_strMapACName = strAry(1)
        g_strMapWarn = strAry(2)
        ActiveCell.Value = strCaption
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd|P|fffd|K|fffd|w|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||692||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<CommandBar |fffd|^> |fffd||752||fffd||38f||6c3|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<String |fffd|^> |fffd|L|fffd||fffd||fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|P|fffd|K|fffd|w|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||24e|w|fffd||fffd|L|fffd||fffd||fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||30d||fffd||fffd||682||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<CommandBarControl |fffd|^> |fffd||1c9||fffd||fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetACCodeArray( _
    ByRef strAcCode As String, _
    ByRef strAcName As String, _
    ByRef strAcDrCr As String, _
    ByRef lngIndex As Long _
)
    Dim strData As String
    Dim lngIx As Long

    If lngIndex <> 0 Then
        For lngIx = 0 To UBound(g_strAryAcCode)
            If strAcCode = g_strAryAcCode(lngIx) Then
                Exit Sub
            End If
        Next
    End If

    ''Account|fffd||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd||c42c||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||357|p|fffd||fffd||fffd|j
    ReDim Preserve g_strAryAcCode(lngIndex)
    ReDim Preserve g_strAryAcName(lngIndex)
    ReDim Preserve g_intAryAcDrCr(lngIndex)
    
    g_strAryAcCode(lngIndex) = strAcCode
    g_strAryAcName(lngIndex) = strAcName
    If strAcDrCr = "Dr." Then
        g_intAryAcDrCr(lngIndex) = 0
    Else
        g_intAryAcDrCr(lngIndex) = 1
    End If
    lngIndex = lngIndex + 1
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||692||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<CommandBarControl |fffd|^> |fffd||752||fffd||38f||6c3|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<String |fffd|^> |fffd|L|fffd||fffd||fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   (3)<String |fffd|^> |fffd|I|fffd||fffd||fffd||fffd||fffd||590||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   (4)<Boolean |fffd|^> |fffd||fffd||fffd|[|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd||389||fffd||fffd||fffd||fffd||fffd||216||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||24e|w|fffd||fffd|L|fffd||fffd||fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||30d||fffd||fffd||682||fffd||1c9||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|[|fffd||fffd||fffd|[|fffd|t|fffd||30f||a347||fffd||341|A|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<CommandBarControl |fffd|^> |fffd||1c9||fffd||fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||343|R|fffd|}|fffd||fffd||fffd|h|fffd|o|fffd|[|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Tag|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||250||752||80b7||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_SetDsptCmdBarCtrl( _
    ByRef CmdBarCtl As CommandBarControl, _
    ByVal strCaption As String, _
    ByVal strProcName As String, _
    ByVal blnLeaf As Boolean, _
    Optional ByVal strAcCode As String _
) As CommandBarControl
    
    Dim objCBCtrl As CommandBarControl
    Dim strTagName As String
    Dim typeCtlType As Variant
    
    strTagName = ""
    If blnLeaf = False Then
        typeCtlType = msoControlPopup
    Else
        strTagName = strAcCode
        typeCtlType = msoControlButton
    End If
   
    Set objCBCtrl = CmdBarCtl.Controls.Add(Type:=typeCtlType)
    objCBCtrl.Caption = strCaption
    objCBCtrl.OnAction = strProcName
    objCBCtrl.Tag = strTagName
              
    Set f_SetDsptCmdBarCtrl = objCBCtrl
   
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||28f||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||28f||fffd||fffd||fffd|DB|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/11/21 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||289||742||30e||64fe||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2004/02/06 : Knowlbo Suzuki : OfficeMaster::BranchOfficeNo|fffd||1c9||fffd|
'   2004/04/05 : Knowlbo Suzuki : |fffd||fffd||fffd|m|fffd||70b9||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2004/05/25 : Knowlbo Suzuki : |fffd||fffd||fffd|m|fffd||70b9||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd||fffd||241|A|fffd||656a||fffd|A|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||1c9||fffd|
'   2016/08/01 : Y.Watanabe     : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub sg_GetCommonInfo()

    ''DB|fffd||691||fffd||fffd|p
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngCount As Long
    Dim strMSG As String
    Dim strValue As String
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    objdba.IsLoging = False
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''OfficeCode----------------------------------------------------------------
    strSQL = "SELECT " & "tbo.OfficeCode, " & "tbo.OfficeName, tbo.Country, "
    strSQL = strSQL & "tbo.BranchOfficeNo, " & "tbc.EnglishName, " & "tbc.JapaneseName"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " tbo"
    strSQL = strSQL & " INNER JOIN " & c_NKFAOwner & "." & c_strTBL_CountryMaster & " tbc"
    strSQL = strSQL & " ON " & "tbo.Country =" & "tbc.CountryCode"
    strSQL = strSQL & " ORDER BY tbo.OfficeCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_OfficeMaster
        GoTo LBL_ERR
    End If
    
    lngCount = 0
    Do Until adoRs.EOF
        ReDim Preserve g_typAryOfficeInfo(lngCount)
        g_typAryOfficeInfo(lngCount).m_strOfficeCode = adoRs.Fields("OfficeCode").Value
        g_typAryOfficeInfo(lngCount).m_strOfficeName = adoRs.Fields("OfficeName").Value
        g_typAryOfficeInfo(lngCount).m_strCountry = adoRs.Fields("Country").Value
        g_typAryOfficeInfo(lngCount).m_strCountryName = adoRs.Fields("EnglishName").Value
        If Not IsNull(adoRs.Fields("BranchOfficeNo").Value) And _
            adoRs.Fields("BranchOfficeNo").Value <> "" Then
            g_typAryOfficeInfo(lngCount).m_intBranchOfficeNo = CInt(adoRs.Fields("BranchOfficeNo").Value)
        Else
            g_typAryOfficeInfo(lngCount).m_intBranchOfficeNo = 0
        End If
        lngCount = lngCount + 1
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    g_lngOfficeCount = lngCount

    ''CurrencyCode----------------------------------------------------------------
    g_strInvalidDecimalCurrency = ""
    strSQL = "SELECT " & "tb.CurrencyCode, " & "tb.EnglishName, " & "tb.DecimalCount "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_CurrncyMaster & " tb "
    strSQL = strSQL & " ORDER BY tb.CurrencyCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CurrncyMaster
        GoTo LBL_ERR
    End If
    lngCount = 0
    Do Until adoRs.EOF
        ReDim Preserve g_strAryCurrencyCode(lngCount)
        strValue = adoRs.Fields("CurrencyCode").Value
        g_strAryCurrencyCode(lngCount) = strValue
        lngCount = lngCount + 1
        ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||289||742||30e||64fe|
        If adoRs.Fields("DecimalCount").Value = 0 Then
            If g_strInvalidDecimalCurrency = "" Then
                g_strInvalidDecimalCurrency = strValue
            Else
                g_strInvalidDecimalCurrency = g_strInvalidDecimalCurrency & "," & strValue
            End If
        End If
        adoRs.MoveNext
    Loop
    g_lngCurrencyCount = lngCount
    
    Call objdba.closeRecordset(adoRs)
    
    ''Infomation----------------------------------------------------------------
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    g_strAppInfomation = ""
    strSQL = "SELECT * FROM " & defGetInformation
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defGetInformation
        GoTo LBL_ERR
    End If
    
    If (adoRs.EOF) Then
         g_strAppInfomation = "There are no notice."
    Else
        Do Until adoRs.EOF
            If (g_strAppInfomation = "") Then
                g_strAppInfomation = _
                    "--------------------------------------------------------" & vbCrLf & _
                    adoRs.Fields("Subject").Value & vbCrLf & _
                    "--------------------------------------------------------" & vbCrLf & _
                    adoRs.Fields("ContentText").Value
            Else
                g_strAppInfomation = g_strAppInfomation & vbCrLf & vbCrLf & _
                    "--------------------------------------------------------" & vbCrLf & _
                    adoRs.Fields("Subject").Value & vbCrLf & _
                    "--------------------------------------------------------" & vbCrLf & _
                    adoRs.Fields("ContentText").Value
            End If
            If Not IsNull(adoRs.Fields("Link").Value) Then           ''|fffd||fffd||fffd||fffd||fffd|N
                g_strAppInfomation = g_strAppInfomation & vbCrLf & adoRs.Fields("Link").Value
            End If
            adoRs.MoveNext
        Loop
    End If
    
'    g_strAppInfomation = ""
'    strSQL = "SELECT TOP 5 " & " CONVERT(VARCHAR(10), |fffd||fffd||fffd|t, 111) + '  ' + |fffd||fffd||fffd||fffd| AS |fffd||fffd||fffd|o|fffd||fffd|, |fffd||fffd||fffd|e, |fffd||fffd||fffd||fffd||fffd|N"
'    strSQL = strSQL & " FROM " & c_NKFAOwner & ".|fffd||fffd||fffd|m|fffd||70b9|"
'    strSQL = strSQL & " WHERE |fffd||656a| <> 1"
'    strSQL = strSQL & " ORDER BY |fffd||fffd||fffd|t DESC"
'    objdba.SQLString = strSQL
'    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
'        strMSG = c_strMSG_DB_RECSETFAIL & ":|fffd||fffd||fffd|m|fffd||70b9|"
'        GoTo LBL_ERR
'    End If
'
'    If (adoRs.EOF) Then
'         g_strAppInfomation = "|fffd||fffd||fffd|m|fffd||70b9||fffd||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
'    Else
'        Do Until adoRs.EOF
'            If (g_strAppInfomation = "") Then
'                g_strAppInfomation = _
'                    "--------------------------------------------------------" & vbCrLf & _
'                    adoRs.Fields("|fffd||fffd||fffd|o|fffd||fffd|").Value & vbCrLf & _
'                    "--------------------------------------------------------" & vbCrLf & _
'                    adoRs.Fields("|fffd||fffd||fffd|e").Value
'            Else
'                g_strAppInfomation = g_strAppInfomation & vbCrLf & vbCrLf & _
'                    "--------------------------------------------------------" & vbCrLf & _
'                    adoRs.Fields("|fffd||fffd||fffd|o|fffd||fffd|").Value & vbCrLf & _
'                    "--------------------------------------------------------" & vbCrLf & _
'                    adoRs.Fields("|fffd||fffd||fffd|e").Value
'            End If
'            If Not IsNull(adoRs.Fields("|fffd||fffd||fffd||fffd||fffd|N").Value) Then           ''|fffd||fffd||fffd||fffd||fffd|N
'                g_strAppInfomation = g_strAppInfomation & vbCrLf & adoRs.Fields("|fffd||fffd||fffd||fffd||fffd|N").Value
'            End If
'            adoRs.MoveNext
'        Loop
'    End If
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetCommonInfo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_GetCommonInfo", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||30e||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||289||743|R|fffd|[|fffd|h
'   (4)<String |fffd|^> |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||83af||fffd||294||50d||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd|DB|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCashBankAccountCode( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strGenCurrency As String, _
    ByRef strAcCodeNumber As String _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    
    fg_GetCashBankAccountCode = False
    Set adoRs = New ADODB.Recordset
   
On Error GoTo LBL_ERR
    
    ''Office/|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||733b||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe|
    strSQL = "SELECT " & "tbo.OfficeCode, " & "tbc.CurrencyCode, " & "tbc.CashAcCode"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " tbo"
    strSQL = strSQL & " INNER JOIN " & c_NKFAOwner & "." & c_strTBL_CountryMaster & " tbc"
    strSQL = strSQL & " ON " & "tbo.Country =" & "tbc.CountryCode"
    strSQL = strSQL & " WHERE " & "tbo.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then GoTo LBL_ERR

    If (adoRs.EOF = False) Then
        strGenCurrency = adoRs.Fields("CurrencyCode").Value
        strAcCodeNumber = adoRs.Fields("CashAcCode").Value
    Else
        GoTo LBL_ERR
    End If

    On Error GoTo 0
    fg_GetCashBankAccountCode = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetCashBankAccountCode:DBExecuteError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd||30e||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||289||743|R|fffd|[|fffd|h
'   (4)<String |fffd|^> |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||83af||fffd||294||50d||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|DB|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCBMasterInfo( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strGenCurrency As String, _
    ByVal strAcCodeNumber As String _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim intCount As Integer
    Dim strValue As String
    
    fg_GetCBMasterInfo = False
    Set adoRs = New ADODB.Recordset
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_CBMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then GoTo LBL_ERR
    
    If (adoRs.EOF = False) Then
        intCount = 0
        Do Until adoRs.EOF
            ReDim Preserve g_typAryCBInfo(intCount)
            g_typAryCBInfo(intCount).m_strCode = adoRs.Fields("LedgerCode").Value
            g_typAryCBInfo(intCount).m_strCurrency = adoRs.Fields("Currency").Value
            g_typAryCBInfo(intCount).m_strCasher = adoRs.Fields("Casher").Value
            g_typAryCBInfo(intCount).m_intPurpose = CInt(adoRs.Fields("Purpose").Value)
            If (IsNull(adoRs.Fields("Memo").Value) = False) Then
                g_typAryCBInfo(intCount).m_strMemo = adoRs.Fields("Memo").Value
            Else
                g_typAryCBInfo(intCount).m_strMemo = ""
            End If
            
            ''USD/JPY |fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|A|fffd||fffd||fffd||289||742||314||fffd|r|fffd||fffd||fffd|s|fffd||fffd|
            If adoRs.Fields("Currency").Value = "USD" Then
                strValue = "1012"
            ElseIf adoRs.Fields("Currency").Value = "JPY" Then
                strValue = "1013"
            ElseIf strGenCurrency = adoRs.Fields("Currency").Value Then
                strValue = "1011"
            Else
                strValue = "1014"
            End If
            g_typAryCBInfo(intCount).m_strAcCode = strValue & strAcCodeNumber
            intCount = intCount + 1
            adoRs.MoveNext
        Loop
        g_blnCBNoArray = False
    Else
        Erase g_typAryCBInfo
    End If
    On Error GoTo 0
    fg_GetCBMasterInfo = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetCBMasterInfo:DBExecuteError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd||30e||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||289||743|R|fffd|[|fffd|h
'   (4)<String |fffd|^> |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||83af||fffd||294||50d||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|DB|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetBBMasterInfo( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strGenCurrency As String, _
    ByVal strAcCodeNumber As String _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim intCount As Integer
    Dim strValue As String
    
    fg_GetBBMasterInfo = False
    Set adoRs = New ADODB.Recordset
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_BBMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then GoTo LBL_ERR
    
    If (adoRs.EOF = False) Then
        intCount = 0
        Do Until adoRs.EOF
            ReDim Preserve g_typAryBBInfo(intCount)
            g_typAryBBInfo(intCount).m_strCode = adoRs.Fields("LedgerCode").Value
            g_typAryBBInfo(intCount).m_strCurrency = adoRs.Fields("Currency").Value
            g_typAryBBInfo(intCount).m_strName = adoRs.Fields("BankName").Value
            g_typAryBBInfo(intCount).m_strBranch = adoRs.Fields("BranchName").Value
            g_typAryBBInfo(intCount).m_strAdress = adoRs.Fields("Address").Value
            g_typAryBBInfo(intCount).m_strAccountType = adoRs.Fields("AccountType").Value
            g_typAryBBInfo(intCount).m_strAccountNo = adoRs.Fields("AccountNo").Value
            g_typAryBBInfo(intCount).m_strBeneficiaryName = adoRs.Fields("BeneficiaryName").Value
            g_typAryBBInfo(intCount).m_strSigner = adoRs.Fields("Signer").Value
            If (IsNull(adoRs.Fields("UseRemittance").Value) = False) And _
                adoRs.Fields("UseRemittance").Value = "1" Then
                g_typAryBBInfo(intCount).m_blnUseRemittance = True
            End If
            g_typAryBBInfo(intCount).m_intPurpose = CInt(adoRs.Fields("Purpose").Value)
            If (IsNull(adoRs.Fields("Memo").Value) = False) Then
                g_typAryBBInfo(intCount).m_strMemo = adoRs.Fields("Memo").Value
            Else
                g_typAryBBInfo(intCount).m_strMemo = ""
            End If
            
            ''USD/JPY |fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|A|fffd||fffd||fffd||289||742||314||fffd|r|fffd||fffd||fffd|s|fffd||fffd|
            If adoRs.Fields("Currency").Value = "USD" Then
                strValue = "1082"
            ElseIf adoRs.Fields("Currency").Value = "JPY" Then
                strValue = "1083"
            ElseIf strGenCurrency = adoRs.Fields("Currency").Value Then
                strValue = "1081"
            Else
                strValue = "1084"
            End If
            g_typAryBBInfo(intCount).m_strAcCode = strValue & strAcCodeNumber
            intCount = intCount + 1
            adoRs.MoveNext
        Loop
        g_blnBBNoArray = False
    Else
        Erase g_typAryBBInfo
    End If
    On Error GoTo 0
    fg_GetBBMasterInfo = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetBBMasterInfo:DBExecuteError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd||30e||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|DB|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetTRMasterInfo( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim intCount As Integer
    
    fg_GetTRMasterInfo = False
    Set adoRs = New ADODB.Recordset
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_TRMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then GoTo LBL_ERR
    
    If (adoRs.EOF = False) Then
        intCount = 0
        Do Until adoRs.EOF
            ReDim Preserve g_typAryTRInfo(intCount)
            g_typAryTRInfo(intCount).m_strCode = adoRs.Fields("LedgerCode").Value
            g_typAryTRInfo(intCount).m_strCurrency = adoRs.Fields("Currency").Value
            g_typAryTRInfo(intCount).m_strDescript = adoRs.Fields("Description").Value
            g_typAryTRInfo(intCount).m_intPurpose = CInt(adoRs.Fields("Purpose").Value)
            intCount = intCount + 1
            adoRs.MoveNext
        Loop
        g_blnTRNoArray = False
    Else
        Erase g_typAryTRInfo
    End If
    On Error GoTo 0
    fg_GetTRMasterInfo = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetTRMasterInfo:DBExecuteError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|DB|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/10/21 : Knowlbo Suzuki  : WBS_ID|fffd||fffd||fffd||50f||fffd||fffd||fffd||fffd||3cd|X(MAX|fffd|l|fffd||fffd||3d0||fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|j
'-----------------------------------------------------------------
Public Sub sg_GetMasterInfo()

    Dim intCount As Integer
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strGenCurrency As String
    Dim strAcCodeNumber As String
    Dim strValue As String
    
    ''|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnCBNoArray = True
    g_blnBBNoArray = True
    g_blnTRNoArray = True
    
    ''DB|fffd||691||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    ''Office/|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||733b||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe|
    If fg_GetCashBankAccountCode(adoCn, objdba, strGenCurrency, strAcCodeNumber) <> True Then
        strMSG = c_strMSG_DB_GEAcCode
        GoTo LBL_ERR
    End If

    ''CashBook|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
    If fg_GetCBMasterInfo(adoCn, objdba, strGenCurrency, strAcCodeNumber) <> True Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CBMaster
        GoTo LBL_ERR
    End If

    ''BankBook|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
    If fg_GetBBMasterInfo(adoCn, objdba, strGenCurrency, strAcCodeNumber) <> True Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BBMaster
        GoTo LBL_ERR
    End If

    ''Transfer|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
    If fg_GetTRMasterInfo(adoCn, objdba) <> True Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_TRMaster
        GoTo LBL_ERR
    End If
    
    ''|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        intCount = 0
        Do Until adoRs.EOF
            ReDim Preserve g_typAryAsoInfo(intCount)
            g_typAryAsoInfo(intCount).m_strCode = adoRs.Fields("AssociateCode").Value
            g_typAryAsoInfo(intCount).m_strName = adoRs.Fields("AssociateName").Value
            g_typAryAsoInfo(intCount).m_curContract = adoRs.Fields("ContractAmount").Value
            g_typAryAsoInfo(intCount).m_curAdvance = adoRs.Fields("ContractAdvance").Value
            g_typAryAsoInfo(intCount).m_strCurrency = adoRs.Fields("Currency").Value
            intCount = intCount + 1
            adoRs.MoveNext
        Loop
    Else
        Erase g_typAryAsoInfo
    End If
    
    Call objdba.closeRecordset(adoRs)
    
    ''Sub-Contract|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        intCount = 0
        Do Until adoRs.EOF
            ReDim Preserve g_typArySConInfo(intCount)
            g_typArySConInfo(intCount).m_strCode = adoRs.Fields("SubConCode").Value
            g_typArySConInfo(intCount).m_strName = adoRs.Fields("SubConName").Value
            g_typArySConInfo(intCount).m_curContract = adoRs.Fields("ContractAmount").Value
            g_typArySConInfo(intCount).m_curAdvance = adoRs.Fields("ContractAdvance").Value
            g_typArySConInfo(intCount).m_strCurrency = adoRs.Fields("Currency").Value
            g_typArySConInfo(intCount).m_intReimbursable = CInt(adoRs.Fields("Reimbursable").Value)
            intCount = intCount + 1
            adoRs.MoveNext
        Loop
    Else
        Erase g_typArySConInfo
    End If
    
    Call objdba.closeRecordset(adoRs)
    
    ''|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_RMMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RMMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        intCount = 0
        ReDim Preserve g_typAryRTInfo(0)
        If (IsNull(adoRs.Fields("RequestTo1").Value) = False) Then
            g_typAryRTInfo(0).m_strRequestTo1 = adoRs.Fields("RequestTo1").Value
        Else
            g_typAryRTInfo(0).m_strRequestTo1 = ""
        End If
        If (IsNull(adoRs.Fields("RequestTo2").Value) = False) Then
            g_typAryRTInfo(0).m_strRequestTo2 = adoRs.Fields("RequestTo2").Value
        Else
            g_typAryRTInfo(0).m_strRequestTo2 = ""
        End If
        If (IsNull(adoRs.Fields("RequestTo3").Value) = False) Then
            g_typAryRTInfo(0).m_strRequestTo3 = adoRs.Fields("RequestTo3").Value
        Else
            g_typAryRTInfo(0).m_strRequestTo3 = ""
        End If
        If (IsNull(adoRs.Fields("AdviceTo").Value) = False) Then
           g_typAryRTInfo(0).m_strAdviceTo = adoRs.Fields("AdviceTo").Value
        Else
           g_typAryRTInfo(0).m_strAdviceTo = ""
        End If
    Else
        Erase g_typAryRTInfo
    End If
    
    Call objdba.closeRecordset(adoRs)
    
    ''WBS|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe|
    g_intWBSmaxID = 0
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_WBSMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY ID"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_WBSMaster
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        intCount = 0
        Do Until adoRs.EOF
            ReDim Preserve g_typAryWBSCode(intCount)
            g_typAryWBSCode(intCount).m_lngID = adoRs.Fields("ID").Value
            g_typAryWBSCode(intCount).m_strCode = adoRs.Fields("WBSCode").Value
            intCount = intCount + 1
            
            If g_intWBSmaxID < adoRs.Fields("ID").Value Then
                g_intWBSmaxID = adoRs.Fields("ID").Value
            End If
            
            adoRs.MoveNext
        Loop
    Else
        Erase g_typAryWBSCode
    End If
    
    Call objdba.closeRecordset(adoRs)
    
    ''Project|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PJTMaster & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PJTMaster
        GoTo LBL_ERR
    End If

    If (adoRs.EOF = False) Then
        intCount = 0
        ReDim Preserve g_typAryPJTInfo(intCount)
'        g_typAryPJTInfo(intCount).m_strOfficeCode = adoRs.Fields("OfficeCode").Value
        g_typAryPJTInfo(intCount).m_strOfficeCode = Trim$(g_strOfficeCode)
        g_typAryPJTInfo(intCount).m_strPJTCode = adoRs.Fields("ProjectCode").Value
        g_typAryPJTInfo(intCount).m_strPJTName = adoRs.Fields("ProjectName").Value
        g_typAryPJTInfo(intCount).m_intPaymentMethod = CInt(adoRs.Fields("PaymentMethod").Value)
        g_typAryPJTInfo(intCount).m_strCurrency = adoRs.Fields("Currency").Value
        g_typAryPJTInfo(intCount).m_curContract = adoRs.Fields("Contract").Value
        g_typAryPJTInfo(intCount).m_curContractNK = adoRs.Fields("ContractNK").Value
        g_typAryPJTInfo(intCount).m_curContractASO = adoRs.Fields("ContractASO").Value
        g_typAryPJTInfo(intCount).m_curPerCont = adoRs.Fields("PerCont").Value
        g_typAryPJTInfo(intCount).m_curPerNK = adoRs.Fields("PerNK").Value
        g_typAryPJTInfo(intCount).m_curPerASO = adoRs.Fields("PerASO").Value
        g_typAryPJTInfo(intCount).m_curAdvance = adoRs.Fields("Advance").Value
        g_typAryPJTInfo(intCount).m_curAdvanceNK = adoRs.Fields("AdvanceNK").Value
        g_typAryPJTInfo(intCount).m_curAdvanceASO = adoRs.Fields("AdvanceASO").Value
    Else
        Erase g_typAryPJTInfo
    End If
    
    On Error GoTo 0
    
    sg_GetConnectionCodeList 'ConnectionCode|fffd||fffd||fffd||110||752||fffd|

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetMasterInfo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_GetMasterInfo", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||311||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|X|fffd|g|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|I|fffd||fffd||fffd||fffd||357|p|fffd||303||fffd||fffd|X|fffd|g|fffd||fffd|CSV|fffd||150||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/12 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Sub _
sg_GetConnectionCodeList()
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim intCount As Integer
        
    ''|fffd|i|fffd|[|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_strConnCodeTSV = ""
    g_strConnNameTSV = ""
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    
    ''ConnectionCode|fffd|f|fffd|[|fffd|^|fffd||64fe|
    strSQL = "SELECT " & "tb.ConnectionCode, " & "tb.ConnectionName "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ConnCode & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.ConnectionCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ConnCode
        GoTo LBL_ERR
    End If

    ''|fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|p|fffd||fffd|Code/Name|fffd||303|}|fffd|b|fffd|`|fffd||fffd||fffd|OTabSV|fffd||c42c|
    Do Until adoRs.EOF
        If g_strConnCodeTSV <> "" Then
            g_strConnCodeTSV = g_strConnCodeTSV & vbTab
            g_strConnNameTSV = g_strConnNameTSV & vbTab
        End If
        g_strConnCodeTSV = g_strConnCodeTSV & adoRs.Fields("ConnectionCode").Value
        g_strConnNameTSV = g_strConnNameTSV & adoRs.Fields("ConnectionName").Value
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    
    ''AssociateCode|fffd||64fe||fffd|iAssociate|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a||702||7c2||fffd|j
    strSQL = "SELECT " & "tb.AssociateCode, " & "tb.AssociateName "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_ASMaster & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.AssociateCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_ASMaster
        GoTo LBL_ERR
    End If
    ''|fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|p|fffd||fffd|Code/Name|fffd||303|}|fffd|b|fffd|`|fffd||fffd||fffd|OTabSV|fffd||c42c|
    Do Until adoRs.EOF
        If g_strConnCodeTSV <> "" Then
            g_strConnCodeTSV = g_strConnCodeTSV & vbTab
            g_strConnNameTSV = g_strConnNameTSV & vbTab
        End If
        g_strConnCodeTSV = g_strConnCodeTSV & adoRs.Fields("AssociateCode").Value
        g_strConnNameTSV = g_strConnNameTSV & adoRs.Fields("AssociateName").Value
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)
    
    ''SubConCode|fffd||64fe||fffd|iSubCon|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a||702||7c2||fffd|j
    strSQL = "SELECT " & "tb.SubConCode, " & "tb.SubConName "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_SCMaster & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY tb.SubConCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SCMaster
        GoTo LBL_ERR
    End If
    ''|fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|p|fffd||fffd|Code/Name|fffd||303|}|fffd|b|fffd|`|fffd||fffd||fffd|OTabSV|fffd||c42c|
    Do Until adoRs.EOF
        If g_strConnCodeTSV <> "" Then
            g_strConnCodeTSV = g_strConnCodeTSV & vbTab
            g_strConnNameTSV = g_strConnNameTSV & vbTab
        End If
        g_strConnCodeTSV = g_strConnCodeTSV & adoRs.Fields("SubConCode").Value
        g_strConnNameTSV = g_strConnNameTSV & adoRs.Fields("SubConName").Value
        adoRs.MoveNext
    Loop
    
    On Error GoTo 0
    For intCount = 0 To 14  ''|fffd|}|fffd|X|fffd|^|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O
        g_blnAryCmnMstUpdate(intCount) = True
    Next

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetConnectionCodeList:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "sg_GetConnectionCodeList", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd|c|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6cc||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W
'   (2)<Range |fffd|^> |fffd||38f||fffd|LedgerCode|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W
'   (3)<Range |fffd|^> |fffd||752||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|LedgerCode / |fffd||38f||6cc||fffd||fffd|i|fffd||311|O|fffd||fffd||fffd|j|fffd||30e|c|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/05/07 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd|c|fffd|s|fffd||fffd|v|fffd||311||389||fffd|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub _
sg_GetLastBalance( _
    ByRef rngPeriod As Range, _
    ByRef rngLedger As Range, _
    ByRef rngTarget As Range _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim curBalance As Currency
    Dim datTgtSt As Date
    Dim datTgtEd As Date
    
    curBalance = 0

    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)

    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    ''|fffd||38f||6cc||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    datTgtEd = DateValue(rngPeriod.Value)
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||341|A|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
    datTgtSt = fg_GetEndOfYear(g_intTargetSysYear - 1)
    
'    datTgtSt = DateValue(CStr(g_intTargetSysYear) & "/03/31")
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|

    ''LastBalance|fffd||30e||64fe||fffd|i|fffd||38f||6d4|N|fffd|x|fffd|}|fffd|X|fffd|^|fffd||242||351|O|fffd|N|fffd|x|fffd|A|fffd|e|fffd||fffd||fffd|c|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|j
    strSQL = "SELECT " & "Sum(" & "tb.Balance) AS Balance"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod >= " & fg_AddSingleQuotation(datTgtSt)
    strSQL = strSQL & " AND tb.TargetPeriod < " & fg_AddSingleQuotation(datTgtEd)
    strSQL = strSQL & " AND " & "tb.LedgerCode = " & fg_AddSingleQuotation(rngLedger.Value)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields("Balance").Value) Then
            curBalance = adoRs.Fields("Balance").Value
        End If
    End If

    On Error GoTo 0
    
    ''LastBalance|fffd|Z|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||752||fffd|
    rngTarget.Value = curBalance

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetLastBalance:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "sg_GetLastBalance", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLNK_CODE |fffd|^> |fffd||fffd||78e||fffd||fffd||297|p|fffd||4b4d2|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3|J|fffd|e|fffd|S|fffd||fffd||fffd||303|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/06 : Knowlbo Suzuki : SS-LinkCode|fffd||fffd||fffd||511||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Sub _
sg_GetCurrentLinkCodeNo( _
    ByVal enmVal As GLNK_CODE _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strField As String
    Dim strTable As String
    
    Select Case enmVal
    Case GLNK_IV ''Invoice
        strField = "Invoice"
    Case GLNK_AS ''Associate
        strField = "Associate"
    Case GLNK_SC ''Sub-contractor
        strField = "Subcontract"
    Case GLNK_RM ''Remittance
        strField = "Remittance"
    Case GLNK_PP ''PrePaid
        strField = "Prepaid"
    Case GLNK_FA ''Fixed Assets
        strField = "FixedAssets"
    End Select

    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    'strTable = c_strTBL_LinkCodeNo
    strTable = c_strTBL_LinkCodeNoNK
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & strTable & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetYear = " & g_intTargetSysYear
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strTable
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields(strField).Value) Then
            g_intAryCurLinkNumber(enmVal) = adoRs.Fields(strField).Value
        Else
            g_intAryCurLinkNumber(enmVal) = 0
        End If
    Else
        g_intAryCurLinkNumber(enmVal) = 0
    End If
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetCurrentLinkCodeNo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_GetCurrentLinkCodeNo", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLNK_CODE |fffd|^> |fffd||fffd||78e||fffd||fffd||297|p|fffd||4b4d2|l
'   (2)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3|J|fffd|e|fffd|S|fffd||fffd||fffd||303|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/06 : Knowlbo Suzuki : SS-LinkCode|fffd||fffd||fffd||511||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_UpdateCurrentLinkCodeNo( _
    ByRef enmVal As GLNK_CODE, _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strFld As String
    Dim datPrNow As Date
    Dim strTable As String
    
    datPrNow = Now()
    
    Select Case enmVal
    Case GLNK_IV ''Invoice
        strFld = "Invoice"
    Case GLNK_AS ''Associate
        strFld = "Associate"
    Case GLNK_SC ''Sub-contractor
        strFld = "Subcontract"
    Case GLNK_RM ''Remittance
        strFld = "Remittance"
    Case GLNK_PP ''PrePaid
        strFld = "Prepaid"
    Case GLNK_FA ''Fixed Assets
        strFld = "FixedAssets"
    End Select

    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR
    
    'strTable = c_strTBL_LinkCodeNo
    strTable = c_strTBL_LinkCodeNoNK
    
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & strTable & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetYear = " & g_intTargetSysYear
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strTable
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setLinkCodeNoHistorySQLString(adoRs, c_strTBL_LinkCodeNoNK, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_LinkCodeNo
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.Fields("Invoice").Value = 0
        adoRs.Fields("Associate").Value = 0
        adoRs.Fields("Subcontract").Value = 0
        adoRs.Fields("Remittance").Value = 0
        adoRs.Fields("Prepaid").Value = 0
        adoRs.Fields("FixedAssets").Value = 0
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("TargetYear").Value = g_intTargetSysYear
    adoRs.Fields(strFld).Value = g_intAryCurLinkNumber(enmVal)
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    On Error GoTo 0
    
    fg_UpdateCurrentLinkCodeNo = True
   
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    fg_UpdateCurrentLinkCodeNo = False
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_UpdateCurrentLinkCodeNo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    
    sg_MsgBoxError "fg_UpdateCurrentLinkCodeNo", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||30e||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLED_ID |fffd|^> |fffd||fffd||78e||fffd||fffd||297|p|fffd||4b4d2|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@|fffd||38f||6c3|J|fffd|e|fffd|S|fffd||fffd||fffd||303|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   Cash/Bank/Transfer|fffd||303||fffd||fffd|R|fffd|[|fffd|hID|fffd||182||fffd||fffd||10e|g|fffd|p|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Sub _
sg_GetCurrentRecIDNo( _
    ByVal enmVal As GLED_ID _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strField As String
    
    Select Case enmVal
    Case GLED_CB ''CashBook
        strField = "CashBook"
    Case GLED_BB ''BankBook
        strField = "BankBook"
    Case GLED_TR ''Transfer
        strField = "Transfer"
    End Select

    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_LedgerRecIDNo & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_LedgerRecIDNo
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields(strField).Value) Then
            g_lngAryCurRecIDNumber(enmVal) = adoRs.Fields(strField).Value
        Else
            g_lngAryCurRecIDNumber(enmVal) = 0
        End If
        ''TRANSFER
        If enmVal <> GLED_TR Then
            If Not IsNull(adoRs.Fields("Transfer").Value) Then
                g_lngAryCurRecIDNumber(GLED_TR) = adoRs.Fields("Transfer").Value
            Else
                g_lngAryCurRecIDNumber(GLED_TR) = 0
            End If
        End If
    Else
        g_lngAryCurRecIDNumber(enmVal) = 0
        g_lngAryCurRecIDNumber(GLED_TR) = 0
    End If
    On Error GoTo 0
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetCurrentRecIDNo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_GetCurrentRecIDNo", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||30d|X|fffd|V
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLED_ID |fffd|^> |fffd||fffd||78e||fffd||fffd||297|p|fffd||4b4d2|l
'   (2)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3|J|fffd|e|fffd|S|fffd||fffd||fffd||303|J|fffd||fffd||fffd||fffd||fffd|gRecIDNo|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Cash/Bank/Transfer|fffd||303||fffd||fffd|R|fffd|[|fffd|hID|fffd||182||fffd||fffd||10e|g|fffd|p|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Function _
fg_UpdateCurrentRecIDNo( _
    ByVal enmVal As GLED_ID, _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strField As String
    Dim datPrNow As Date

    datPrNow = Now()
    
    Select Case enmVal
    Case GLED_CB ''CashBook
        strField = "CashBook"
    Case GLED_BB ''BankBook
        strField = "BankBook"
    Case GLED_TR ''Transfer
        strField = "Transfer"
    End Select

    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_LedgerRecIDNo & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_LedgerRecIDNo
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setRecIDNoHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_LedgerRecIDNo
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.Fields("CashBook").Value = 0
        adoRs.Fields("BankBook").Value = 0
        adoRs.Fields("Transfer").Value = 0
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields(strField).Value = g_lngAryCurRecIDNumber(enmVal)
    adoRs.Fields("Transfer").Value = g_lngAryCurRecIDNumber(GLED_TR)
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    On Error GoTo 0
    
    fg_UpdateCurrentRecIDNo = True
   
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    fg_UpdateCurrentRecIDNo = False
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_UpdateCurrentRecIDNo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    
    sg_MsgBoxError "fg_UpdateCurrentRecIDNo", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|[|fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd|j|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> LedgerCode
'   (2)<Date |fffd|^> |fffd|o|fffd|[|fffd||fffd|
'   (3)<Currency |fffd|^> |fffd|o|fffd|[|fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd|j
'   (4)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (5)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|Book|fffd||30f|o|fffd|[|fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd|j|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Function _
fg_UpdateAccountsBalance( _
    ByRef strLedgerCode As String, _
    ByRef datPeriod As Date, _
    ByRef curBalance As Currency, _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strField As String
    Dim datPrNow As Date

    datPrNow = Now()
    
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb "
    strSQL = strSQL & "WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datPeriod)
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setAccountBalanceHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AcBalance
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("LedgerCode").Value = strLedgerCode
    adoRs.Fields("TargetPeriod").Value = datPeriod
    adoRs.Fields("Balance").Value = curBalance
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    On Error GoTo 0
    
    fg_UpdateAccountsBalance = True
   
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
    
LBL_ERR:
    fg_UpdateAccountsBalance = False
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_UpdateAccountsBalance:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_UpdateAccountsBalance", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|m|fffd||fffd|/|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||3c2||742||311||38f||6cc||fffd||fffd||348||342||fffd||fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> TgtPeriodMin
'   (2)<Date |fffd|^> TgtPeriodMax
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> |fffd||fffd||fffd||fffd|:True |fffd||fffd||fffd|s:False
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
sg_GetDecisionPeriodRange( _
    ByRef datTgtMin As Date, _
    ByRef datTgtMax As Date _
) As Boolean
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    sg_GetDecisionPeriodRange = False
    datTgtMin = 0
    datTgtMax = 0
    
    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    strSQL = "SELECT  DISTINCT "
    strSQL = strSQL & "IsNULL(Min(TargetPeriod),0) AS Pmin,  "
    strSQL = strSQL & "IsNULL(Max(TargetPeriod),0) AS Pmax  "
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)

    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        datTgtMin = adoRs.Fields("Pmin").Value
        datTgtMax = adoRs.Fields("Pmax").Value
    End If

    On Error GoTo 0
   
    sg_GetDecisionPeriodRange = True
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetDecisionPeriodRange:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "sg_GetDecisionPeriodRange", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|m|fffd||fffd||fffd||fffd|Q|fffd||18f||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> TargetPeriod
'   (2)<Integer |fffd|^> |fffd||fffd||fffd|[|fffd|h (0/1/2) 0:|fffd||fffd||fffd||fffd||fffd||202||fffd| 1:Import|fffd||fffd| 2:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||150|V|fffd|i|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j/ |fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Integer |fffd|^> |fffd||38f||6cc||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Function _
sg_GetDecisionTargetMonth( _
    ByRef datTarget As Date, _
    ByVal intMode As Integer _
) As Integer
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim intMonth As Integer
    
    sg_GetDecisionTargetMonth = 0
    intMonth = 0
    
    ''DB|fffd||691||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    strSQL = "SELECT " & "Max(" & "tb.TargetPeriod) AS TargetPeriod"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    If intMode = 1 Then
        strSQL = strSQL & " AND tb.ImportDate IS NOT NULL"
    ElseIf intMode = 2 Then
        strSQL = strSQL & " AND tb.DecisionDate IS NOT NULL"
    End If

    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields("TargetPeriod").Value) Then
            datTarget = adoRs.Fields("TargetPeriod").Value
            intMonth = Month(adoRs.Fields("TargetPeriod").Value)
        End If
    End If

    On Error GoTo 0
   
    sg_GetDecisionTargetMonth = intMonth
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "sg_GetDecisionTargetMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "sg_GetDecisionTargetMonth", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||30e||64fe|(Cash/Bank/Transfer)|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Worksheet |fffd|^> |fffd||38f||fffd|Ledger|fffd|V|fffd|[|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cf|o|fffd|[|fffd|f|fffd|[|fffd|^(Cash/Bank/Transfer)|fffd||fffd||fffd||64fe||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||253||1c2||74d||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Function _
fg_GetAccountsDetailData( _
    ByRef wsTarget As Worksheet _
) As Boolean

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim lngStartRow As Long
    Dim intNum As Integer
    Dim datValue As Date
    Dim strDbTable As String
    Dim strMSG As String
    Dim strLed As String
    Dim strLedID As String
    Dim blnTrChk As Boolean
    
    blnTrChk = False
    
    strLed = Left$(wsTarget.Name, 4)
    Select Case strLed
    Case "Cash" ''CashBook
        lngRowIndex = c_intCBDetailRowST
        strDbTable = c_strTBL_CashBook
    Case "Bank" ''BankBook
        lngRowIndex = c_intBBDetailRowST
        strDbTable = c_strTBL_BankBook
    Case "Tran" ''Transfer
        lngRowIndex = c_intTRDetailRowST
        strDbTable = c_strTBL_Transfer
        blnTrChk = True
    End Select

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    wsTarget.Range("B" & lngRowIndex, "T" & c_lngMAX_ROWINDEX).ClearContents
    If strLed = "Tran" Then
        wsTarget.Range("V" & lngRowIndex, "X" & c_lngMAX_ROWINDEX).ClearContents
    Else
        wsTarget.Range("W" & lngRowIndex, "X" & c_lngMAX_ROWINDEX).ClearContents
    End If
    
    ''Lock|fffd||fffd||fffd||fffd|
    wsTarget.Range("B" & lngRowIndex, "T" & c_lngMAX_ROWINDEX).Locked = False

    ''DB|fffd||fffd||fffd||fffd||fffd||38f||6c2||fffd||fffd||fffd||202||302||14f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If wsTarget.Cells(3, 5).Value = "" Or wsTarget.Cells(4, 5).Value = "" Then
        fg_GetAccountsDetailData = True
        Exit Function
    End If
    fg_GetAccountsDetailData = False

    lngStartRow = lngRowIndex

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    ''|fffd||38f||6cc||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    datValue = DateValue(wsTarget.Cells(3, 5).Value)
    strLedID = wsTarget.Cells(4, 5).Value
    
    ''Book|fffd||fffd||fffd||5cf||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datValue)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedID)
    strSQL = strSQL & " ORDER BY tb.ID"
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    Do Until adoRs.EOF
        datValue = adoRs.Fields("LedgerDate").Value
        wsTarget.Cells(lngRowIndex, 2).Value = Month(datValue)
        wsTarget.Cells(lngRowIndex, 3).Value = Day(datValue)
        
        If Not IsNull(adoRs.Fields("Description").Value) Then
            wsTarget.Cells(lngRowIndex, 4).Value = adoRs.Fields("Description").Value
        End If
        If Not IsNull(adoRs.Fields("Details").Value) Then
            wsTarget.Cells(lngRowIndex, 7).Value = adoRs.Fields("Details").Value
        End If
        wsTarget.Cells(lngRowIndex, 9).Value = adoRs.Fields("WBSCode").Value
        wsTarget.Cells(lngRowIndex, 10).Value = adoRs.Fields("AccountCode").Value
        wsTarget.Cells(lngRowIndex, 11).Value = adoRs.Fields("AccountName").Value
        If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
            wsTarget.Cells(lngRowIndex, 12).Value = adoRs.Fields("ConnectionCode").Value
            wsTarget.Cells(lngRowIndex, 13).Value = adoRs.Fields("ConnectionName").Value
        End If
        If Not IsNull(adoRs.Fields("LedgerLinkCode").Value) And _
                      adoRs.Fields("LedgerLinkCode").Value <> "" Then
            wsTarget.Cells(lngRowIndex, 14).Value = adoRs.Fields("LedgerLinkCode").Value
            If blnTrChk = False Then
                'wsTarget.Cells(lngRowIndex, 14).Locked = True ''LinkCode|fffd||fffd||fffd||343|Z|fffd||fffd||fffd||fffd|Lock|fffd||fffd||fffd||fffd|
                ''|fffd|s|fffd|S|fffd||fffd|Lock|fffd||255||3cd|X 2003/05/31
                wsTarget.Range("B" & lngRowIndex, "T" & lngRowIndex).Locked = True
            End If
        End If
        If Not IsNull(adoRs.Fields("EviNo").Value) Then
            wsTarget.Cells(lngRowIndex, 15).Value = adoRs.Fields("EviNo").Value
        End If
        If Not IsNull(adoRs.Fields("CheckNo").Value) Then
            wsTarget.Cells(lngRowIndex, 16).Value = adoRs.Fields("CheckNo").Value
        End If
        wsTarget.Cells(lngRowIndex, 17).Value = adoRs.Fields("NKJV").Value
        If adoRs.Fields("Claim").Value = 1 Then
            wsTarget.Cells(lngRowIndex, 18).Value = "Y"
        Else
            wsTarget.Cells(lngRowIndex, 18).Value = "N"
        End If
        If Not IsNull(adoRs.Fields("Paid").Value) And adoRs.Fields("Paid").Value <> 0 Then
            wsTarget.Cells(lngRowIndex, 19).Value = adoRs.Fields("Paid").Value
        End If
        If Not IsNull(adoRs.Fields("Received").Value) And adoRs.Fields("Received").Value <> 0 Then
            wsTarget.Cells(lngRowIndex, 20).Value = adoRs.Fields("Received").Value
        End If
        wsTarget.Cells(lngRowIndex, 23).Value = adoRs.Fields("ID").Value
        wsTarget.Cells(lngRowIndex, 24).Value = ""
        adoRs.MoveNext
        lngRowIndex = lngRowIndex + 1
    Loop
   
    ''|fffd||1c2||74d||fffd||fffd||743|f|fffd|[|fffd|^|fffd||303||fffd||fffd|b|fffd|N
    If lngStartRow < lngRowIndex Then
          Range("B" & lngStartRow, "T" & lngRowIndex - 1).Locked = True
    End If
   
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
  
    If strLed <> "Tran" Then
        ''|fffd|c|fffd||fffd||fffd||30e||64fe||fffd||190||752||fffd| |fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^ |fffd||38f||6cc||fffd||fffd|Z|fffd||fffd||fffd|ALedgerCode|fffd|Z|fffd||fffd||fffd|A|fffd||752||fffd|Balance|fffd|Z|fffd||fffd||fffd|j
        sg_GetLastBalance wsTarget.Cells(3, 5), wsTarget.Cells(4, 5), wsTarget.Cells(8, 21)
    End If
    
    On Error GoTo 0
    
    fg_GetAccountsDetailData = True

LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    fg_GetAccountsDetailData = False
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetAccountsDetailData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetAccountsDetailData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Invoice|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> LedgerLinkCode
'   (4)<clsTransBookData |fffd|^> |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|(BankBook|fffd|f|fffd|[|fffd|^)
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LedgerLinkCode|fffd||fffd|Invoice|fffd||30e||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Transfer|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd||fffd||fffd||c42c|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/09/26 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||30f||a347||fffd||256||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||30d||317|p
'-----------------------------------------------------------------
Public Function _
fg_InvoiceTransfer( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strLinkCode As String, _
    ByRef typAryPrmTRData() As clsTransBookData _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim lngIndex As Long
    Dim blnSetNK As Boolean
    Dim strAsoName As String
    Dim strInvoice As String
    Dim curSetValue As Currency
    Dim curTmpValue As Currency
    Dim curMngfee As Currency
    Dim typTransBookData As clsTransBookData
    Dim typAryTransData() As clsTransBookData
    Dim datTargetPeriod As Date
    Dim datLedgerDate As Date
    Dim strCurrency As String
    
    fg_InvoiceTransfer = False
    
    If fg_CheckLinkCodeKind(strLinkCode) <> GLNK_IV Then
        Exit Function
    End If
    
    lngIndex = UBound(typAryPrmTRData)
    
    ''|fffd|o|fffd|[|fffd||fffd||fffd||354|z|fffd||56594||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    datLedgerDate = typAryPrmTRData(lngIndex).m_datLedgerDate
    
    ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||354|z|fffd||56594||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    datTargetPeriod = typAryPrmTRData(lngIndex).m_datTargetPeriod
    typTransBookData = typAryPrmTRData(lngIndex)

    ''Cash/BankBook|fffd|f|fffd|[|fffd|^|fffd||314||fffd||fffd|]|fffd|f|fffd|[|fffd|^
    For lngIndex = 0 To UBound(typAryPrmTRData)
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typAryPrmTRData(lngIndex)
        typAryTransData(lngIndex).m_datTargetPeriod = datTargetPeriod
        typAryTransData(lngIndex).m_datLedgerDate = datLedgerDate
        typAryTransData(lngIndex).m_curPaid = typAryPrmTRData(lngIndex).m_curReceived
        typAryTransData(lngIndex).m_curReceived = typAryPrmTRData(lngIndex).m_curPaid
    Next
    
    ''|fffd||fffd||fffd||28f||fffd||fffd||310||752||fffd|
    typTransBookData.m_strClaim = "Y"
    typTransBookData.m_strNKJV = "NK"
    typTransBookData.m_strEviNo = ""
    typTransBookData.m_strCheckNo = ""
    typTransBookData.m_curPaid = 0
    typTransBookData.m_curReceived = 0
    
    strSQL = "SELECT " & "hd.InvoiceNo, " & "hd.Currency, " & "hd.Status, "
    strSQL = strSQL & "hd.LedgerLinkCode, " & "hd.ReceivedAmount, "
    strSQL = strSQL & "dt.Classify, "
    strSQL = strSQL & "dt.AsoLinkCode, " & "dt.AsoCode, "
    strSQL = strSQL & "dt.InvoiceAmount, " & "dt.Repayment, "
    strSQL = strSQL & "dt.Retention, " & "dt.Vat, "
    strSQL = strSQL & "dt.HoldingTax, " & "dt.ManageFee, "
    strSQL = strSQL & "dt.OtherTax, " & "dt.Others "
    '-----------------------------------------------------------
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " LEFT JOIN " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " ON " & "hd.LedgerLinkCode = " & "dt.LedgerLinkCode" & " AND "
    strSQL = strSQL & "hd.Currency = " & "dt.Currency" & " WHERE "
    strSQL = strSQL & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    blnSetNK = False
    curMngfee = 0
    Do Until adoRs.EOF
    
        If blnSetNK = False Then
            ''NK|fffd|s|fffd||310|U|fffd||583|f|fffd|[|fffd|^|fffd||c42c|
            If adoRs.Fields("Classify").Value = "NK" Then
                strCurrency = adoRs.Fields("Currency").Value
            
                ''NK Claimed Amount Sub Total
                curSetValue = 0
                If (IsNull(adoRs.Fields("InvoiceAmount").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("InvoiceAmount").Value)
                End If
                If (IsNull(adoRs.Fields("Repayment").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("Repayment").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                If (IsNull(adoRs.Fields("Retention").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("Retention").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                
                strInvoice = adoRs.Fields("InvoiceNo").Value
                ReDim Preserve typAryTransData(lngIndex)
                typAryTransData(lngIndex) = typTransBookData
                typAryTransData(lngIndex).m_strAcCode = c_strACIV_ClaimAmountCode
                typAryTransData(lngIndex).m_strAcName = c_strACIV_ClaimAmountName
                typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " NK"
                typAryTransData(lngIndex).m_strDetails = "Claimd Amount"
                typAryTransData(lngIndex).m_curReceived = curSetValue
                lngIndex = lngIndex + 1
                
                ''NK VAT
                curSetValue = 0
                If (IsNull(adoRs.Fields("Vat").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("Vat").Value)
                    If curSetValue <> 0 Then
                        ReDim Preserve typAryTransData(lngIndex)
                        typAryTransData(lngIndex) = typTransBookData
                        typAryTransData(lngIndex).m_strAcCode = c_strACIV_NKVATCode
                        typAryTransData(lngIndex).m_strAcName = c_strACIV_NKVATName
                        typAryTransData(lngIndex).m_strConectCode = ""
                        typAryTransData(lngIndex).m_strConectName = ""
                        typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " NK"
                        typAryTransData(lngIndex).m_strDetails = "Vat"
                        If curSetValue > 0 Then
                            typAryTransData(lngIndex).m_curReceived = curSetValue
                        Else
                            curSetValue = curSetValue * -1
                            typAryTransData(lngIndex).m_curPaid = curSetValue
                        End If
                        lngIndex = lngIndex + 1
                    End If
                End If
                ''NK WithHolding Tax
                curSetValue = 0
                If (IsNull(adoRs.Fields("HoldingTax").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("HoldingTax").Value)
                    If curSetValue <> 0 Then
                        ReDim Preserve typAryTransData(lngIndex)
                        typAryTransData(lngIndex) = typTransBookData
                        typAryTransData(lngIndex).m_strAcCode = c_strACIV_NKHoldTaxCode
                        typAryTransData(lngIndex).m_strAcName = c_strACIV_NKHoldTaxName
                        typAryTransData(lngIndex).m_strConectCode = ""
                        typAryTransData(lngIndex).m_strConectName = ""
                        typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " NK"
                        typAryTransData(lngIndex).m_strDetails = "With Holding Tax"
                        If curSetValue > 0 Then
                            typAryTransData(lngIndex).m_curReceived = curSetValue
                        Else
                            curSetValue = curSetValue * -1
                            typAryTransData(lngIndex).m_curPaid = curSetValue
                        End If
                        lngIndex = lngIndex + 1
                    End If
                End If
                
                ''ManageFee|fffd||fffd|ASO|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|K|fffd|v
                
                ''NK OtherTax
                curSetValue = 0
                If (IsNull(adoRs.Fields("OtherTax").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("OtherTax").Value)
                    If curSetValue <> 0 Then
                        ReDim Preserve typAryTransData(lngIndex)
                        typAryTransData(lngIndex) = typTransBookData
                        typAryTransData(lngIndex).m_strAcCode = c_strACIV_NKOtherTaxCode
                        typAryTransData(lngIndex).m_strAcName = c_strACIV_NKOtherTaxName
                        typAryTransData(lngIndex).m_strConectCode = ""
                        typAryTransData(lngIndex).m_strConectName = ""
                        typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " NK"
                        typAryTransData(lngIndex).m_strDetails = "Other Tax"
                        If curSetValue > 0 Then
                            typAryTransData(lngIndex).m_curReceived = curSetValue
                        Else
                            curSetValue = curSetValue * -1
                            typAryTransData(lngIndex).m_curPaid = curSetValue
                        End If
                        lngIndex = lngIndex + 1
                    End If
                End If
                
                ''NK Others
                curSetValue = 0
                If (IsNull(adoRs.Fields("Others").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("Others").Value)
                    If curSetValue <> 0 Then
                        ReDim Preserve typAryTransData(lngIndex)
                        typAryTransData(lngIndex) = typTransBookData
                        typAryTransData(lngIndex).m_strAcCode = c_strACIV_NKSundriesCode
                        typAryTransData(lngIndex).m_strAcName = c_strACIV_NKSundriesName
                        typAryTransData(lngIndex).m_strConectCode = ""
                        typAryTransData(lngIndex).m_strConectName = ""
                        typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " NK"
                        typAryTransData(lngIndex).m_strDetails = "Others"
                        If curSetValue > 0 Then
                            typAryTransData(lngIndex).m_curReceived = curSetValue
                        Else
                            curSetValue = curSetValue * -1
                            typAryTransData(lngIndex).m_curPaid = curSetValue
                        End If
                        lngIndex = lngIndex + 1
                    End If
                End If
                blnSetNK = True
                adoRs.MoveFirst
            Else
                adoRs.MoveNext
                
            End If
        Else
            ''ASO|fffd|s|fffd||310|U|fffd||583|f|fffd|[|fffd|^|fffd||c42c|
            If adoRs.Fields("Classify").Value = "JV" Then
                ''AssociateName
                strAsoName = ""
                fg_GetAssociateCodeOrName adoRs.Fields("AsoCode").Value, strAsoName
                
                ''ASO VAT
                curSetValue = 0
                If (IsNull(adoRs.Fields("Vat").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("Vat").Value)
                    If curSetValue <> 0 Then
                        ReDim Preserve typAryTransData(lngIndex)
                        typAryTransData(lngIndex) = typTransBookData
                        typAryTransData(lngIndex).m_strAcCode = c_strACIV_ASVATCode
                        typAryTransData(lngIndex).m_strAcName = c_strACIV_ASVATName
                        typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " Asso."
                        typAryTransData(lngIndex).m_strDetails = "Vat"
                        typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("AsoCode").Value
                        typAryTransData(lngIndex).m_strConectName = strAsoName
                        If curSetValue > 0 Then
                            typAryTransData(lngIndex).m_curReceived = curSetValue
                        Else
                            curSetValue = curSetValue * -1
                            typAryTransData(lngIndex).m_curPaid = curSetValue
                        End If
                        lngIndex = lngIndex + 1
                    End If
                End If
                ''Aso ManageFee
                curSetValue = 0
                If (IsNull(adoRs.Fields("ManageFee").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("ManageFee").Value)
                    If curSetValue <> 0 Then
                        curMngfee = curMngfee + curSetValue
                    End If
                End If
                
                ''ASO Payment Amount Total
                curSetValue = 0
                If (IsNull(adoRs.Fields("InvoiceAmount").Value) = False) Then
                    curSetValue = CCur(adoRs.Fields("InvoiceAmount").Value)
                End If
                If (IsNull(adoRs.Fields("Repayment").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("Repayment").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                If (IsNull(adoRs.Fields("Retention").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("Retention").Value)
                    curSetValue = curSetValue + curTmpValue  ''Claimed Amount Total
                End If
                ''Vat|fffd||34d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||149||fffd||fffd|Z|fffd||fffd||fffd||202||fffd|
                If (IsNull(adoRs.Fields("HoldingTax").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("HoldingTax").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                If (IsNull(adoRs.Fields("ManageFee").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("ManageFee").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                If (IsNull(adoRs.Fields("OtherTax").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("OtherTax").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                If (IsNull(adoRs.Fields("Others").Value) = False) Then
                    curTmpValue = CCur(adoRs.Fields("Others").Value)
                    curSetValue = curSetValue + curTmpValue
                End If
                If curSetValue <> 0 Then
                    ReDim Preserve typAryTransData(lngIndex)
                    typAryTransData(lngIndex) = typTransBookData
                    typAryTransData(lngIndex).m_strAcCode = c_strACIV_ASPortionCode
                    typAryTransData(lngIndex).m_strAcName = c_strACIV_ASPortionName
                    typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " Asso."
                    typAryTransData(lngIndex).m_strDetails = "Payment Amount"
                    typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("AsoCode").Value
                    typAryTransData(lngIndex).m_strConectName = strAsoName
                    If curSetValue > 0 Then
                        typAryTransData(lngIndex).m_curReceived = curSetValue
                    Else
                        curSetValue = curSetValue * -1
                        typAryTransData(lngIndex).m_curPaid = curSetValue
                    End If
                    lngIndex = lngIndex + 1
                End If
            End If
            adoRs.MoveNext
        End If
    Loop
   
    ''NK|fffd|s|fffd||fffd|ManageFee
    If curMngfee <> 0 Then
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typTransBookData
        typAryTransData(lngIndex).m_strAcCode = c_strACIV_NKManagefeeCode
        typAryTransData(lngIndex).m_strAcName = c_strACIV_NKManagefeeName
        typAryTransData(lngIndex).m_strConectCode = ""
        typAryTransData(lngIndex).m_strConectName = ""
        typAryTransData(lngIndex).m_strDescription = "Invoice:" & strInvoice & " NK"
        typAryTransData(lngIndex).m_strDetails = "Manage Fee"
        curMngfee = curMngfee * -1
        If curMngfee > 0 Then
            typAryTransData(lngIndex).m_curReceived = curMngfee
        Else
            curMngfee = curMngfee * -1
            typAryTransData(lngIndex).m_curPaid = curMngfee
        End If

    End If
    
    On Error GoTo 0
    Call objdba.closeRecordset(adoRs)
    fg_InvoiceTransfer = True
    If f_InsertAutoTransferData(adoCn, objdba, strCurrency, typAryTransData) = False Then ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|Transfer
        Call g_objLog.PrintOut(ID_NKFAS_SS, "f_InsertAutoTransferData", Err, LEVEL_ERROR)
        sg_MsgBoxError "fg_InvoiceTransfer", "f_InsertAutoTransferData"
        fg_InvoiceTransfer = False
    End If
    
LBL_END:
    Set adoRs = Nothing
    Erase typAryTransData
    Exit Function

LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    fg_InvoiceTransfer = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_InvoiceTransfer:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_InvoiceTransfer", strMSG
    GoTo LBL_END

End Function
    
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> LedgerLinkCode
'   (4)<clsTransBookData |fffd|^> |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|(BankBook|fffd|f|fffd|[|fffd|^)
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LedgerLinkCode|fffd||30a|O|fffd||fffd||fffd||fffd||30e||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Transfer|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd||fffd||fffd||c42c|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/09/26 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||30f||a347||fffd||256||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||30d||317|p
'-----------------------------------------------------------------
Public Function _
fg_SubconTransfer( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strLinkCode As String, _
    ByRef typAryPrmTRData() As clsTransBookData _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim lngIndex As Long
    Dim lngRet As Long
    Dim strSubconName As String
    Dim strInvoice As String
    Dim curSetValue As Currency
    Dim typTransBookData As clsTransBookData
    Dim typAryTransData() As clsTransBookData
    Dim datTargetPeriod As Date
    Dim datLedgerDate As Date
    Dim strCurrency As String
    Dim blnReimbursable As Boolean

    fg_SubconTransfer = False
    
    If fg_CheckLinkCodeKind(strLinkCode) <> GLNK_SC Then
        Exit Function
    End If

    lngIndex = UBound(typAryPrmTRData)
    
    ''|fffd|o|fffd|[|fffd||fffd||fffd||354|z|fffd||56594||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    datLedgerDate = typAryPrmTRData(lngIndex).m_datLedgerDate
    
    ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||354|z|fffd||56594||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    datTargetPeriod = typAryPrmTRData(lngIndex).m_datTargetPeriod
    typTransBookData = typAryPrmTRData(lngIndex)
    
    ''Cash/BankBook|fffd|f|fffd|[|fffd|^|fffd||314||fffd||fffd|]|fffd|f|fffd|[|fffd|^
    For lngIndex = 0 To UBound(typAryPrmTRData)
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typAryPrmTRData(lngIndex)
        typAryTransData(lngIndex).m_datTargetPeriod = datTargetPeriod
        typAryTransData(lngIndex).m_datLedgerDate = datLedgerDate
        typAryTransData(lngIndex).m_curPaid = typAryPrmTRData(lngIndex).m_curReceived
        typAryTransData(lngIndex).m_curReceived = typAryPrmTRData(lngIndex).m_curPaid
    Next
    
    ''|fffd||fffd||fffd||28f||fffd||fffd||310||752||fffd|
    typTransBookData.m_strClaim = "Y"
    typTransBookData.m_strNKJV = "NK"
    typTransBookData.m_strEviNo = ""
    typTransBookData.m_strCheckNo = ""
    typTransBookData.m_curPaid = 0
    typTransBookData.m_curReceived = 0
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SubConPayment & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
        strCurrency = adoRs.Fields("Currency").Value
    
        strInvoice = adoRs.Fields("InvRefNo").Value
        strSubconName = ""
        lngRet = fg_GetSubConCodeOrName(adoRs.Fields("SubConCode").Value, strSubconName)
        If lngRet <= UBound(g_typArySConInfo) Then  ''Reimbursable Check
            If g_typArySConInfo(lngRet).m_intReimbursable = 0 Then
                blnReimbursable = True      ''Reimbursable
            Else
                blnReimbursable = False     ''Non-Reimbursable
            End If
        End If
        
        ''InvoiceAmount
        curSetValue = 0
        If (IsNull(adoRs.Fields("InvoiceAmount").Value) = False) Then
            curSetValue = CCur(adoRs.Fields("InvoiceAmount").Value)
        End If
        If curSetValue <> 0 Then
            ReDim Preserve typAryTransData(lngIndex)
            typAryTransData(lngIndex) = typTransBookData
            If (IsNull(adoRs.Fields("AdvanceData").Value) = False) Then
                ''Advance
                typAryTransData(lngIndex).m_strAcCode = c_strACSC_AdvPaymentCode
                typAryTransData(lngIndex).m_strAcName = c_strACSC_AdvPaymentName
            Else
                ''Progres
                If blnReimbursable = True Then
                    typAryTransData(lngIndex).m_strAcCode = c_strACSC_PrgPaymentCode
                    typAryTransData(lngIndex).m_strAcName = c_strACSC_PrgPaymentName
                Else
                    typAryTransData(lngIndex).m_strAcCode = c_strACSC_SdPrgPaymentCode
                    typAryTransData(lngIndex).m_strAcName = c_strACSC_SdPrgPaymentName
                End If
            End If
            
            typAryTransData(lngIndex).m_strDescription = "Sub-Contract:" & strInvoice
            typAryTransData(lngIndex).m_strDetails = "InvoiceAmount"
            typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("SubConCode").Value
            typAryTransData(lngIndex).m_strConectName = strSubconName
            If curSetValue > 0 Then ''|fffd||28f||fffd|{|fffd||242||202||fffd|
                typAryTransData(lngIndex).m_curPaid = curSetValue
            Else
                curSetValue = curSetValue * -1
                typAryTransData(lngIndex).m_curReceived = curSetValue
            End If
            lngIndex = lngIndex + 1
        End If
        
        ''Repayment Amount of Advance
        curSetValue = 0
        If (IsNull(adoRs.Fields("Repayment").Value) = False) Then
            curSetValue = CCur(adoRs.Fields("Repayment").Value)
        End If
        If curSetValue <> 0 Then
            ReDim Preserve typAryTransData(lngIndex)
            typAryTransData(lngIndex) = typTransBookData
            typAryTransData(lngIndex).m_strAcCode = c_strACSC_AdvPaymentCode
            typAryTransData(lngIndex).m_strAcName = c_strACSC_AdvPaymentName
            typAryTransData(lngIndex).m_strDescription = "Sub-Contract:" & strInvoice
            typAryTransData(lngIndex).m_strDetails = "Repayment"
            typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("SubConCode").Value
            typAryTransData(lngIndex).m_strConectName = strSubconName
            If curSetValue < 0 Then ''|fffd||28f||fffd|||fffd||242||202||fffd|
                curSetValue = curSetValue * -1
                typAryTransData(lngIndex).m_curReceived = curSetValue
            Else
                typAryTransData(lngIndex).m_curPaid = curSetValue
            End If
            lngIndex = lngIndex + 1
        End If
        
        ''VAT
        curSetValue = 0
        If (IsNull(adoRs.Fields("Vat").Value) = False) Then
            curSetValue = CCur(adoRs.Fields("Vat").Value)
        End If
        If curSetValue <> 0 Then
            ReDim Preserve typAryTransData(lngIndex)
            typAryTransData(lngIndex) = typTransBookData
            typAryTransData(lngIndex).m_strAcCode = c_strACSC_VATCode
            typAryTransData(lngIndex).m_strAcName = c_strACSC_VATName
            typAryTransData(lngIndex).m_strDescription = "Sub-Contract:" & strInvoice
            typAryTransData(lngIndex).m_strDetails = "Vat"
            typAryTransData(lngIndex).m_strConectCode = ""
            typAryTransData(lngIndex).m_strConectName = ""
            ''ConectCode|fffd||34f|o|fffd||342||fffd||fffd||202||fffd|
            'typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("SubConCode").Value
            'typAryTransData(lngIndex).m_strConectName = strSubconName
            If curSetValue > 0 Then ''|fffd||28f||fffd|{|fffd||242||202||fffd|
                typAryTransData(lngIndex).m_curPaid = curSetValue
            Else
                curSetValue = curSetValue * -1
                typAryTransData(lngIndex).m_curReceived = curSetValue
            End If
            lngIndex = lngIndex + 1
        End If
                
        ''WithHolding Tax
        curSetValue = 0
        If (IsNull(adoRs.Fields("HoldingTax").Value) = False) Then
            curSetValue = CCur(adoRs.Fields("HoldingTax").Value)
        End If
        If curSetValue <> 0 Then
            ReDim Preserve typAryTransData(lngIndex)
            typAryTransData(lngIndex) = typTransBookData
            typAryTransData(lngIndex).m_strAcCode = c_strACSC_HoldTaxCode
            typAryTransData(lngIndex).m_strAcName = c_strACSC_HoldTaxName
            typAryTransData(lngIndex).m_strDescription = "Sub-Contract:" & strInvoice
            typAryTransData(lngIndex).m_strDetails = "With Holding Tax"
            typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("SubConCode").Value
            typAryTransData(lngIndex).m_strConectName = strSubconName
            If curSetValue < 0 Then ''|fffd||28f||fffd|||fffd||242||202||fffd|
                curSetValue = curSetValue * -1
                typAryTransData(lngIndex).m_curReceived = curSetValue
            Else
                typAryTransData(lngIndex).m_curPaid = curSetValue
            End If
            lngIndex = lngIndex + 1
        End If
        
        ''Others
        curSetValue = 0
        If (IsNull(adoRs.Fields("Others").Value) = False) Then
            curSetValue = CCur(adoRs.Fields("Others").Value)
        End If
        If curSetValue <> 0 Then
            ReDim Preserve typAryTransData(lngIndex)
            typAryTransData(lngIndex) = typTransBookData
            typAryTransData(lngIndex).m_strAcCode = c_strACSC_OthersCode
            typAryTransData(lngIndex).m_strAcName = c_strACSC_OthersName
            typAryTransData(lngIndex).m_strDescription = "Sub-Contract:" & strInvoice
            typAryTransData(lngIndex).m_strDetails = "Others"
            typAryTransData(lngIndex).m_strConectCode = ""
            typAryTransData(lngIndex).m_strConectName = ""
            ''ConectCode|fffd||34f|o|fffd||342||fffd||fffd||202||fffd|
            'typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("SubConCode").Value
            'typAryTransData(lngIndex).m_strConectName = strSubconName
            If curSetValue < 0 Then
                curSetValue = curSetValue * -1
                typAryTransData(lngIndex).m_curReceived = curSetValue
            Else
                typAryTransData(lngIndex).m_curPaid = curSetValue
            End If
            lngIndex = lngIndex + 1
        End If
        adoRs.MoveNext
    Loop
    
    On Error GoTo 0
    Call objdba.closeRecordset(adoRs)
    
    fg_SubconTransfer = True
    If f_InsertAutoTransferData(adoCn, objdba, strCurrency, typAryTransData) = False Then ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|Transfer
        Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SubconTransfer:f_InsertAutoTransferData", Err, LEVEL_ERROR)
        sg_MsgBoxError "fg_SubconTransfer", "f_InsertAutoTransferData"
        fg_SubconTransfer = False
    End If
    
LBL_END:
    Set adoRs = Nothing
    Erase typAryTransData
    Exit Function
LBL_ERR:
    fg_SubconTransfer = False
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SubconTransfer:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SubconTransfer", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> LedgerLinkCode
'   (4)<clsTransBookData |fffd|^> |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|(BankBook|fffd|f|fffd|[|fffd|^)
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LedgerLinkCode|fffd||303|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|gVAT|fffd||fffd||fffd||30e||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Transfer|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd||fffd||fffd||c42c|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Function _
fg_AssociateTransfer( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strLinkCode As String, _
    ByRef typPrmTRData As clsTransBookData _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim lngIndex As Long
    Dim lngRet As Long
    Dim blnCreateTr As Boolean
    Dim strAsoName As String
    Dim strInvoice As String
    Dim curSetValue As Currency
    Dim typTransBookData As clsTransBookData
    Dim typAryTransData() As clsTransBookData
    Dim strCurrency As String

    fg_AssociateTransfer = False
    blnCreateTr = False
    If fg_CheckLinkCodeKind(strLinkCode) <> GLNK_AS Then
        Exit Function
    End If

    ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||348||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    typTransBookData = typPrmTRData
    typTransBookData.m_strClaim = "Y"
    typTransBookData.m_strNKJV = "NK"
    typTransBookData.m_strEviNo = ""
    typTransBookData.m_strCheckNo = ""
    typTransBookData.m_curPaid = 0
    typTransBookData.m_curReceived = 0
    
    strSQL = "SELECT " & "dt.Currency, " & "dt.AsoLinkCode, "
    strSQL = strSQL & "dt.AsoCode, " & "dt.Vat, " & "ap.ClientInvoice ,"
    strSQL = strSQL & "ap.InvRefNo, " & "ap.Description, " & "ap.PaidDate, "
    strSQL = strSQL & "ap.ActualPayment, " & "ap.PaymentBalance "
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " INNER JOIN " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " ON " & "dt.AsoLinkCode = " & "ap.LedgerLinkCode " & " WHERE "
    strSQL = strSQL & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " And "
    strSQL = strSQL & "dt.AsoLinkCode = " & fg_AddSingleQuotation(strLinkCode)

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If
    lngIndex = 0
    Do Until adoRs.EOF
        curSetValue = 0
        If (IsNull(adoRs.Fields("Vat").Value) = False) Then
            curSetValue = CCur(adoRs.Fields("Vat").Value)
            blnCreateTr = True
        End If
        If curSetValue = 0 Then
            blnCreateTr = False
            Exit Do ''Vat|fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd|Transfer|fffd||34d||c42c||fffd||fffd||fffd||202||fffd|
        End If
        strCurrency = adoRs.Fields("Currency").Value
        
        If (IsNull(adoRs.Fields("InvRefNo").Value) = False) Then
            strInvoice = "Asso.InvRefNo.:" & adoRs.Fields("InvRefNo").Value
        Else
            strInvoice = "InvNo.to Client:" & adoRs.Fields("ClientInvoice").Value
        End If
    
        strAsoName = ""
        fg_GetAssociateCodeOrName adoRs.Fields("AsoCode").Value, strAsoName
                
       ''Associate|fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Vat|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|----------------------------------------------
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typTransBookData
        typAryTransData(lngIndex).m_strAcCode = c_strACIV_ASPortionCode
        typAryTransData(lngIndex).m_strAcName = c_strACIV_ASPortionName
        typAryTransData(lngIndex).m_strDescription = strInvoice
        typAryTransData(lngIndex).m_strDetails = "Vat"
        typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("AsoCode").Value
        typAryTransData(lngIndex).m_strConectName = strAsoName
        If curSetValue > 0 Then ''|fffd||28f||fffd|{|fffd||242||202||fffd|
            typAryTransData(lngIndex).m_curReceived = curSetValue
        Else
            curSetValue = curSetValue * -1
            typAryTransData(lngIndex).m_curPaid = curSetValue
        End If
        lngIndex = lngIndex + 1

        ''ASO VAT ------------------------------------------------------------------------
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typTransBookData
        typAryTransData(lngIndex).m_strAcCode = c_strACIV_ASVATCode
        typAryTransData(lngIndex).m_strAcName = c_strACIV_ASVATName
        typAryTransData(lngIndex).m_strDescription = strInvoice
        typAryTransData(lngIndex).m_strDetails = "Vat"
        typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("AsoCode").Value
        typAryTransData(lngIndex).m_strConectName = strAsoName
        If curSetValue > 0 Then ''|fffd||28f||fffd|{|fffd||242||202||fffd|
            typAryTransData(lngIndex).m_curPaid = curSetValue
        Else
            curSetValue = curSetValue * -1
            typAryTransData(lngIndex).m_curReceived = curSetValue
        End If
        lngIndex = lngIndex + 1
        adoRs.MoveNext
    Loop
    
    On Error GoTo 0
    Call objdba.closeRecordset(adoRs)
    
    fg_AssociateTransfer = True
    If blnCreateTr Then    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|Transfer
        If f_InsertAutoTransferData(adoCn, objdba, strCurrency, typAryTransData) = False Then
            Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_AssociateTransfer:f_InsertAutoTransferData", Err, LEVEL_ERROR)
            sg_MsgBoxError "fg_AssociateTransfer", "f_InsertAutoTransferData"
            fg_AssociateTransfer = False
        End If
    End If
    
LBL_END:
    Set adoRs = Nothing
    Erase typAryTransData
    Exit Function
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    fg_AssociateTransfer = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_AssociateTransfer:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_AssociateTransfer", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> LedgerLinkCode
'   (4)<clsTransBookData |fffd|^> |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|(BankBook|fffd|f|fffd|[|fffd|^)
'   (5)<Boolean |fffd|^> |fffd||fffd||fffd||fffd|U|fffd||58e||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LedgerLinkCode|fffd||311|O|fffd||fffd||fffd||fffd||fffd||30e||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Transfer|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd||fffd||fffd||c42c|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/01 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/09/26 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||30f||a347||fffd||256||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||30d||317|p
'-----------------------------------------------------------------
Public Function _
fg_PrepaidTransfer( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strLinkCode As String, _
    ByRef typAryPrmTRData() As clsTransBookData, _
    ByVal blnFirstTr As Boolean _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim lngIndex As Long
    Dim lngRet As Long
    Dim strDescript As String
    Dim datTargetPeriod As Date
    Dim datLedgerDate As Date
    Dim strCurrency As String
    Dim typTransBookData As clsTransBookData
    Dim typAryTransData() As clsTransBookData
    
    fg_PrepaidTransfer = False
    
    If fg_CheckLinkCodeKind(strLinkCode) <> GLNK_PP Then
        Exit Function
    End If

    lngIndex = UBound(typAryPrmTRData)
    
    ''|fffd|o|fffd|[|fffd||fffd||fffd||354|z|fffd||56594||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    datLedgerDate = typAryPrmTRData(lngIndex).m_datLedgerDate
    
    ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||354|z|fffd||56594||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    datTargetPeriod = typAryPrmTRData(lngIndex).m_datTargetPeriod
    typTransBookData = typAryPrmTRData(lngIndex)
    
    ''Cash/BankBook|fffd|f|fffd|[|fffd|^|fffd||314||fffd||fffd|]|fffd|f|fffd|[|fffd|^
    For lngIndex = 0 To UBound(typAryPrmTRData)
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typAryPrmTRData(lngIndex)
        typAryTransData(lngIndex).m_datTargetPeriod = datTargetPeriod
        typAryTransData(lngIndex).m_datLedgerDate = datLedgerDate
        typAryTransData(lngIndex).m_curPaid = typAryPrmTRData(lngIndex).m_curReceived
        typAryTransData(lngIndex).m_curReceived = typAryPrmTRData(lngIndex).m_curPaid
    Next
    
    ''|fffd||fffd||fffd||28f||fffd||fffd||310||752||fffd|
    typTransBookData.m_strClaim = "Y"
    typTransBookData.m_strNKJV = "NK"
    typTransBookData.m_strEviNo = ""
    typTransBookData.m_strCheckNo = ""
    typTransBookData.m_curPaid = 0
    typTransBookData.m_curReceived = 0

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE " & "tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    strSQL = strSQL & " AND " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    
    If adoRs.EOF = False Then
        strCurrency = adoRs.Fields("Currency").Value
        strDescript = adoRs.Fields("Description").Value
        ReDim Preserve typAryTransData(lngIndex)
        typAryTransData(lngIndex) = typTransBookData
         
        If blnFirstTr Then ''|fffd||fffd||fffd||fffd|
            Select Case adoRs.Fields("AcCategory").Value ''PrePaidCategory
            Case "Office/House"
                typAryTransData(lngIndex).m_strAcCode = c_strACPP_MonthRentOfficeCode
                typAryTransData(lngIndex).m_strAcName = c_strACPP_MonthRentOfficeName
            Case "Car"
                typAryTransData(lngIndex).m_strAcCode = c_strACPP_MonthRentCarCode
                typAryTransData(lngIndex).m_strAcName = c_strACPP_MonthRentCarName
            Case "Others"
                typAryTransData(lngIndex).m_strAcCode = c_strACPP_MonthRentOtherCode
                typAryTransData(lngIndex).m_strAcName = c_strACPP_MonthRentOtherName
            End Select
            typAryTransData(lngIndex).m_strDetails = "Payment Transfer"
            typAryTransData(lngIndex).m_curPaid = CCur(adoRs.Fields("PaymentAmount").Value)
        Else
            Select Case adoRs.Fields("AcCategory").Value ''PrePaidCategory
            Case "Office/House"
                typAryTransData(lngIndex).m_strAcCode = c_strACPP_RentOFFICECode
                typAryTransData(lngIndex).m_strAcName = c_strACPP_RentOFFICEName
            Case "Car"
                typAryTransData(lngIndex).m_strAcCode = c_strACPP_ComTranspCode
                typAryTransData(lngIndex).m_strAcName = c_strACPP_ComTranspName
            Case "Others"
                typAryTransData(lngIndex).m_strAcCode = c_strACPP_RentExpCode
                typAryTransData(lngIndex).m_strAcName = c_strACPP_RentExpName
            End Select
            typAryTransData(lngIndex).m_strDetails = "Monthly Transfer"
            
            ''|fffd||fffd||fffd|l|fffd||30f||a347|
            If typAryPrmTRData(lngIndex - 1).m_curPaid <> 0 Then
                typAryTransData(lngIndex).m_curPaid = typAryPrmTRData(lngIndex - 1).m_curPaid
            Else ''|fffd||fffd||fffd|l|fffd||30f||a347|
                typAryTransData(lngIndex).m_curReceived = typAryPrmTRData(lngIndex - 1).m_curReceived
            End If
        End If
        typAryTransData(lngIndex).m_strDescription = "Prepaid:" & strDescript
        typAryTransData(lngIndex).m_strConectCode = adoRs.Fields("ConnectionCode").Value
        typAryTransData(lngIndex).m_strConectName = adoRs.Fields("ConnectionName").Value
    End If
    
    On Error GoTo 0
    Call objdba.closeRecordset(adoRs)
    
    fg_PrepaidTransfer = True
    If f_InsertAutoTransferData(adoCn, objdba, strCurrency, typAryTransData) = False Then ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|Transfer
        Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_PrepaidTransfer:f_InsertAutoTransferData", Err, LEVEL_ERROR)
        sg_MsgBoxError "fg_PrepaidTransfer", "f_InsertAutoTransferData"
        fg_PrepaidTransfer = False
    End If
    
LBL_END:
    Set adoRs = Nothing
    Erase typAryTransData
    Exit Function
LBL_ERR:
    fg_PrepaidTransfer = False
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_PrepaidTransfer:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_PrepaidTransfer", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||289||fffd|
'   (4)<clsTransBookData |fffd|^> |fffd|U|fffd||58f|o|fffd|[|fffd||fffd||fffd|z|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd|v|fffd||fffd||38f||6cc||fffd||fffd||350|U|fffd||58f|o|fffd|[|fffd||fffd||fffd|z|fffd||fffd||fffd|TargetMonth|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_InsertAutoTransferData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef strCurrency As String, _
    ByRef typPrmTransData() As clsTransBookData _
) As Boolean
    
    Dim strSQL As String
    Dim strMSG As String
    Dim strData As String
    Dim lngIndex As Long
    Dim lngValue As Long
    Dim strLedgerCode As String
    Dim lngRecIDNo As Long
    Dim datPrNow As Date
    Dim intPurpose As Integer

    datPrNow = Now()
    ''|fffd||38f||fffd|Transfer|fffd|V|fffd|[|fffd|g|fffd||313||fffd||fffd||fffd|
    For lngIndex = 0 To UBound(g_typAryTRInfo)
        If strCurrency = g_typAryTRInfo(lngIndex).m_strCurrency Then
            If InStr(g_typAryTRInfo(lngIndex).m_strDescript, "Auto") <> 0 Then
                strLedgerCode = g_typAryTRInfo(lngIndex).m_strCode
                intPurpose = g_typAryTRInfo(lngIndex).m_intPurpose
                Exit For
            End If
        End If
    Next

    If strLedgerCode = "" Then
        strMSG = "ERROR Unknown LedgerCode"
        GoTo LBL_ERR:
    End If
    
    For lngIndex = 0 To UBound(typPrmTransData)
On Error GoTo LBL_ERR
        strSQL = fg_setLedgerCBTFieldsSQLString(c_strTBL_Transfer) ''|fffd|}|fffd||fffd|SQL|fffd|R|fffd|}|fffd||fffd||fffd|hField|fffd||c42c|
        lngRecIDNo = g_lngAryCurRecIDNumber(GLED_TR)
        lngRecIDNo = lngRecIDNo + 1
        g_lngAryCurRecIDNumber(GLED_TR) = lngRecIDNo
        
        strSQL = strSQL & "( "
        strSQL = strSQL & lngRecIDNo & ", "                                                 ''ID
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "                     ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(strLedgerCode) & ", "                       ''LedgerCode
        If typPrmTransData(lngIndex).m_datTargetPeriod <> 0 Then                            ''TargetPeriod
            strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_datTargetPeriod) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If typPrmTransData(lngIndex).m_datLedgerDate <> 0 Then                              ''LedgerDate
            strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_datLedgerDate) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If typPrmTransData(lngIndex).m_strDescription <> "" Then                             ''Description
            strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strDescription) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If typPrmTransData(lngIndex).m_strDetails <> "" Then                                 ''Details
            strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strDetails) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strWBSCode) & ", " ''WBSCode
        
        strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strAcCode) & ", " ''AccountCode
        strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strAcName) & ", " ''AccountName
        If typPrmTransData(lngIndex).m_strConectCode <> "" Then                                 ''ConectCode
            strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strConectCode) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If typPrmTransData(lngIndex).m_strConectName <> "" Then                                 ''ConectName
            strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strConectName) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strLedgerLinkCode) & ", " ''LinkCode
        If typPrmTransData(lngIndex).m_strEviNo <> "" Then                                 ''EviNo
            lngValue = CLng(typPrmTransData(lngIndex).m_strEviNo)
            strSQL = strSQL & lngValue & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If typPrmTransData(lngIndex).m_strCheckNo <> "" Then                                 ''CheckNo
            lngValue = CLng(typPrmTransData(lngIndex).m_strCheckNo)
            strSQL = strSQL & lngValue & ", "
        Else
            strSQL = strSQL & "Null, "
        End If

        strSQL = strSQL & fg_AddSingleQuotation(typPrmTransData(lngIndex).m_strNKJV) & ", " ''NKJV
        strSQL = strSQL & fg_AddSingleQuotation("1") & ", " ''Claim
        strSQL = strSQL & typPrmTransData(lngIndex).m_curPaid & ", "                        ''Paid
        strSQL = strSQL & typPrmTransData(lngIndex).m_curReceived & ", "                    ''Received
        strSQL = strSQL & "Null, "                                                          ''ImportDate
        
        If intPurpose = 0 Then                                                              ''IFSendDate
            If (g_blnR3IfEnable = False) Then ''R3IF|fffd||fffd||fffd||fffd|
                strSQL = strSQL & fg_AddSingleQuotation("1970/01/01") & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
        Else
            strSQL = strSQL & "Null, "
        End If
        
        If intPurpose = 0 Then                                                              ''IFRequestNo
            If (g_blnR3IfEnable = False) Then ''R3IF|fffd||fffd||fffd||fffd|
                strSQL = strSQL & " -9, "
            Else
                strSQL = strSQL & " -1, "
            End If
        Else
            strSQL = strSQL & " -1, "
        End If
        
        ''ModifyPlace |fffd||fffd|SS|fffd|U|fffd||582||202||302||141|A"1"|fffd||fffd||752||fffd|
        strSQL = strSQL & fg_AddSingleQuotation("1") & ", "                                 ''ModifyPlace
        strSQL = strSQL & fg_AddSingleQuotation(datPrNow) & ", "                            ''InsertDate
        strSQL = strSQL & "Null, "                                                          ''DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "                        ''InsertUID
        strSQL = strSQL & " Null) "                                                         ''DeleteUID
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & c_strTBL_Transfer
            GoTo LBL_ERR
        End If
    Next

    ''|fffd||fffd|v|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
    If g_blnR3IfEnable And intPurpose = 0 Then ''R3IF |fffd|L|fffd||fffd|
        ''|fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||50e||64fe|
        If fg_GetR3FIPeriod(strData) = False Then GoTo LBL_ERR
        If fg_SetR3AccountsData(adoCn, _
                                    objdba, _
                                    strLedgerCode, _
                                    typPrmTransData(0).m_datTargetPeriod, _
                                    strCurrency, _
                                    "", _
                                    strData, False) = False Then GoTo LBL_ERR
    End If

    ''SummaryAccount|fffd||c42c|--------------------------------
    If fg_CreateAccountSummaryByLedCode(adoCn, objdba, typPrmTransData(0).m_datTargetPeriod, _
                                        strLedgerCode, strCurrency, _
                                        intPurpose, "") <> True Then GoTo LBL_ERR

    On Error GoTo 0
    f_InsertAutoTransferData = True
    Exit Function

LBL_ERR:
    sg_SetScreenUpdate True
    f_InsertAutoTransferData = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_InsertAutoTransferData:DBExecuteError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||fffd|LinkCode|fffd||30f|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (2)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (3)<Integer |fffd|^> |fffd||64fe||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd|
'   (4)<clsTransBookData |fffd|^>
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||30f|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Public Function _
fg_GetLedgerDatabyLinkCode( _
    ByVal strCurrency As String, _
    ByVal strLinkCode As String, _
    ByRef intGetCount As Integer, _
    ByRef typAryTRBookData() As clsTransBookData _
) As Boolean
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim intCount As Integer
    
    intGetCount = 0
    intCount = 0
    fg_GetLedgerDatabyLinkCode = False
    If strLinkCode = "" Then Exit Function
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    ''CashBookData|fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_CashBook & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CashBook
        GoTo LBL_ERR
    End If
    Do Until adoRs.EOF
        ReDim Preserve typAryTRBookData(intCount)
        sg_SetTrDataFromRecSet adoRs, typAryTRBookData(intCount)
        intCount = intCount + 1
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)

    ''BankBookData|fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_BankBook & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BankBook
        GoTo LBL_ERR
    End If
    Do Until adoRs.EOF
        ReDim Preserve typAryTRBookData(intCount)
        sg_SetTrDataFromRecSet adoRs, typAryTRBookData(intCount)
        intCount = intCount + 1
        adoRs.MoveNext
    Loop
   
    On Error GoTo 0
    intGetCount = intCount
    fg_GetLedgerDatabyLinkCode = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    fg_GetLedgerDatabyLinkCode = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetLedgerDatabyLinkCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetLedgerDatabyLinkCode", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger|fffd||44a0||fffd||fffd|PaymentAmount|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (2)<Currency |fffd|^> PaymentAmount
'   (3)<String |fffd|^> |fffd||289||fffd|
'   (4)<String |fffd|^> ConnectionCode
'   (5)<String |fffd|^> |fffd||fffd||fffd||311||fffd|(WBS|fffd||202||fffd|)
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||fffd|Ledger|fffd||44a0|PaymentAmount|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/05/27 : Knowlbo Suzuki : Paid|fffd||3c2||fffd|LinkCode|fffd|w|fffd||839e||fffd||243|G|fffd||fffd||fffd|[|fffd||50b|p|fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------
Public Function _
fg_GetLinkCodeAmount( _
    ByVal strLinkCode As String, _
    ByRef curAmount As Currency, _
    ByRef strCurrency As String, _
    ByRef strConcode As String, _
    Optional ByRef strValue As String = "" _
) As Boolean

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strFldValue As String
    Dim strFldConCode As String
    Dim strKind As String
    Dim strTable As String
    Dim strFldAmount As String
    Dim strFldCurrency As String
    Dim strMSG As String
    Dim strFldPaidDate As String
    Dim blnRet As Boolean
    
    blnRet = False
    fg_GetLinkCodeAmount = blnRet
    curAmount = 0
    strCurrency = ""
    strFldValue = ""
    strFldConCode = ""
    If strLinkCode = "" Then Exit Function
    
    strKind = Left$(Right$(strLinkCode, 5), 2)
    Select Case strKind
    Case "IV"
        strTable = c_strTBL_InvoiceHeader
        strFldAmount = "PaymentAmount"
        strFldCurrency = "Currency"
        strFldPaidDate = "PaymentDate"
    Case "AS"
        strTable = c_strTBL_AssociatePayment
        strFldAmount = "PaymentAmount"
        strFldCurrency = "Currency"
        strFldConCode = "AssociateCode"
        strFldPaidDate = "PaidDate"
    Case "SC"
        strTable = c_strTBL_SubConPayment
        strFldAmount = "PaymentAmount"
        strFldCurrency = "Currency"
        strFldConCode = "SubconCode"
        strFldPaidDate = "PaidDate"
    Case "RM"
        strTable = c_strTBL_PastRemittance
        strFldAmount = "RequestAmount"
        strFldCurrency = "RequestCurrency"
        strFldPaidDate = "ReceiptDate"
    Case "PP"
        strTable = c_strTBL_PrePaidExpense
        strFldAmount = "PaymentAmount"
        strFldCurrency = "Currency"
        strFldConCode = "ConnectionCode"
        strFldValue = "WBSCode"
        strFldPaidDate = "PaymentDate"
'    Case "FA"
    Case Else
        Exit Function
    End Select
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strTable
        GoTo LBL_ERR
    End If

    If Not adoRs.EOF Then
        If (IsNull(adoRs.Fields(strFldAmount).Value) = False) Then
            curAmount = CCur(adoRs.Fields(strFldAmount).Value)
            strCurrency = adoRs.Fields(strFldCurrency).Value
            If strFldConCode <> "" Then
                strConcode = adoRs.Fields(strFldConCode).Value
            End If
            If strFldValue <> "" Then
                strValue = adoRs.Fields(strFldValue).Value
            End If
        End If
        ''Paid|fffd||3c2||742||343|G|fffd||fffd||fffd|[|fffd||155||502||fffd|
        If IsNull(adoRs.Fields(strFldPaidDate).Value) Then
            blnRet = True
        End If
    End If
    
    On Error GoTo 0
    fg_GetLinkCodeAmount = blnRet
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    fg_GetLinkCodeAmount = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetLinkCodeAmount:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetLinkCodeAmount", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Invoice|fffd||44a0||fffd||fffd|Status|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (1)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (2)<Date |fffd|^> PaymentDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||fffd|Invoice|fffd||44a0||fffd||fffd|Status|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/10 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2004/03/15 : Knowlbo Suzuki : Detail|fffd||30d|X|fffd|V|fffd||fffd||fffd|t|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_SetInvoiceStatus( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLinkCode As String, _
    ByVal datParam As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim datPrNow As Date
    Dim strData As String

    datPrNow = Now()
    fg_SetInvoiceStatus = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    strSQL = strSQL & " AND " & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setInvoiceHeaderHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceHeader
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    adoRs.Fields("Status").Value = "Paid"            ''Status
    If (g_blnPartPayment = False) Then
        adoRs.Fields("PaymentDate").Value = datParam   ''Payment Date
        strData = adoRs.Fields("Description").Value    ''Description|fffd||582||303|}|fffd|[|fffd|N
        If Len(strData) > 116 Then strData = Left$(strData, 116)
        adoRs.Fields("Description").Value = strData & ">Paid@HeadOffice"
    End If
    adoRs.Fields("ModifyPlace").Value = "1"
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    Call objdba.closeRecordset(adoRs)
    
    ''InvoiceDetail|fffd||30d|X|fffd|V|fffd||fffd||fffd|t|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||351||38f||6c2||242||fffd||fffd||fffd|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "dt.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    strSQL = strSQL & " AND " & "dt.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceDetail
        GoTo LBL_ERR
    End If
    Do Until adoRs.EOF
        objdba.SQLString = fg_setInvoiceDetailHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceDetail
            GoTo LBL_ERR
        End If
        adoRs.Fields("ModifyPlace").Value = "1"
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveNext
    Loop
    
    fg_SetInvoiceStatus = True
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    fg_SetInvoiceStatus = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SetInvoiceStatus:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SetInvoiceStatus", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd||44a0||fffd||fffd|Status|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (4)<Date |fffd|^> PaymentDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||30a|O|fffd||fffd||fffd||44a0||fffd||fffd|Status|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/10 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_SetSubConPaymentStatus( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLinkCode As String, _
    ByVal datParam As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim datPrNow As Date
    Dim strData As String

    datPrNow = Now()
    fg_SetSubConPaymentStatus = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SubConPayment & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setSubConPaymentHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SubConPayment
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    
    adoRs.Fields("Status").Value = "Paid"            ''Status
    If (g_blnPartPayment = False) Then
        adoRs.Fields("PaidDate").Value = datParam   ''PaidDate
        strData = adoRs.Fields("Description").Value    ''Description|fffd||582||303|}|fffd|[|fffd|N
        If Len(strData) > 116 Then strData = Left$(strData, 116)
        adoRs.Fields("Description").Value = strData & ">Paid@HeadOffice"
    End If
    adoRs.Fields("ModifyPlace").Value = "1"
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    fg_SetSubConPaymentStatus = True
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    fg_SetSubConPaymentStatus = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SetSubConPaymentStatus:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SetSubConPaymentStatus", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||44a0||fffd||fffd|Status|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (4)<String |fffd|^> |fffd||c2bce||fffd||fffd||289||fffd|
'   (5)<Currency |fffd|^> |fffd||c2bce||fffd||fffd||fffd||fffd|z
'   (6)<Date |fffd|^> PaymentDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||311||fffd||fffd||fffd||fffd||2d7||fffd||fffd||44a0||fffd||fffd|Status|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/10 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_SetPastRemittanceStatus( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLinkCode As String, _
    ByVal strCurrency As String, _
    ByVal curAmount As Currency, _
    ByVal datParam As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim datPrNow As Date
    Dim strData As String
    
    datPrNow = Now()
    fg_SetPastRemittanceStatus = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setPastRemittanceDataHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PastRemittance
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    
    If Not IsNull(adoRs.Fields("Comment").Value) Then ''Comment|fffd||582||303|}|fffd|[|fffd|N
        strData = adoRs.Fields("Comment").Value
    Else
        strData = ""
    End If
    If Len(strData) > 244 Then strData = Left$(strData, 244)
    adoRs.Fields("Comment").Value = strData & ">Paid@HeadOffice"
    adoRs.Fields("ReceiptDate").Value = datParam            ''ReceiptDate
    adoRs.Fields("ReceiptCurrency").Value = strCurrency     ''ReceiptCurrency
    adoRs.Fields("ReceiptAmount").Value = curAmount         ''ReceiptAmount
    adoRs.Fields("ModifyPlace").Value = "1"
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    fg_SetPastRemittanceStatus = True
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    fg_SetPastRemittanceStatus = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SetPastRemittanceStatus:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SetPastRemittanceStatus", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||44a0||fffd||fffd|Status|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (4)<Currency |fffd|^> |fffd||c2bce||fffd||fffd||fffd||fffd|z
'   (5)<Date |fffd|^> PaymentDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||303|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||44a0||fffd||fffd|Status|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/10 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2004/05/27 : Knowlbo Suzuki : Description|fffd||d448e||fffd||fffd||311||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_SetAssociateStatus( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLinkCode As String, _
    ByVal curAmount As Currency, _
    ByVal datParam As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim curValue As Currency
    Dim datPrNow As Date
    Dim strData As String

    datPrNow = Now()
    fg_SetAssociateStatus = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " WHERE " & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "ap.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If
    
    adoRs.Fields("PaidDate").Value = datParam                ''PaidDate
    adoRs.Fields("Status").Value = "Paid"                    ''Status
    If Not IsNull(adoRs.Fields("PaymentAmount").Value) Then ''PaymentAmount
        curValue = adoRs.Fields("PaymentAmount").Value
    Else
        curValue = 0
    End If
    If Not IsNull(adoRs.Fields("Description").Value) Then ''Description|fffd||582||303|}|fffd|[|fffd|N
        strData = adoRs.Fields("Description").Value
    Else
        strData = ""
    End If
    
    If Len(strData) > 116 Then strData = Left$(strData, 116)
    adoRs.Fields("Description").Value = strData & ">Paid@HeadOffice"
    
    adoRs.Fields("ActualPayment").Value = curAmount         ''ActualPayment
    adoRs.Fields("PaymentBalance").Value = curAmount - curValue        ''PaymentBalance
    adoRs.Fields("ModifyPlace").Value = "1"
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    fg_SetAssociateStatus = True
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    fg_SetAssociateStatus = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SetAssociateStatus:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SetAssociateStatus", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd||fffd|PaymentDate|fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (4)<Date |fffd|^> PaymentDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||311|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd||fffd|PaymentDate|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/10 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_SetPrepaidPaymentDate( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLinkCode As String, _
    ByVal datParam As Date _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim datPrNow As Date
    Dim strData As String

    datPrNow = Now()
    fg_SetPrepaidPaymentDate = False
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setPrePaidExpenseHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PrePaidExpense
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    strData = adoRs.Fields("Description").Value             ''Description|fffd||582||303|}|fffd|[|fffd|N
    If Len(strData) > 52 Then strData = Left$(strData, 52)
    adoRs.Fields("Description").Value = strData & ">Paid@HeadOffice"
    adoRs.Fields("PaymentDate").Value = datParam                ''PaymentDate
    adoRs.Fields("ModifyPlace").Value = "1"
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    
    fg_SetPrepaidPaymentDate = True
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    fg_SetPrepaidPaymentDate = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SetPrepaidPaymentDate:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SetPrepaidPaymentDate", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||6cc||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|U|fffd||58d||3c2||743|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> |fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:True |fffd||202||fffd|:False
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cc||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd|U|fffd||58d||3c2||743|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2013/03/04 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function fg_CheckPrepaidTransfer( _
    ByRef blnExist As Boolean _
) As Boolean
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim datValue As Date
    Dim datTarget As Date
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datEDate As Date
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    fg_CheckPrepaidTransfer = False
    blnExist = False
    
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
        datEDate = fg_GetEndOfYear(g_intTargetSysYear)
        If DateValue(Year(datEDate) & "/" & Month(datEDate) & "/01") <> g_datImportMonth Then
            datTarget = DateAdd("m", 1, g_datImportMonth)
        Else
            datTarget = g_datImportMonth
        End If
    Else
        datTarget = fg_GetStartOfYear(g_intTargetSysYear)
    End If
    
'    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
'        If DateValue(g_intTargetSysYear + 1 & "/" & "03/01") <> g_datImportMonth Then
'            datTarget = DateAdd("m", 1, g_datImportMonth)
'        Else
'            datTarget = g_datImportMonth
'        End If
'    Else
'        datTarget = DateValue(g_intTargetSysYear & "/" & "04/01")
'    End If
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND (" & "tb.PaymentDate Is NOT NULL AND " & "tb.PaymentAmount <> tb.TransferAmount)"
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    Do Until adoRs.EOF   ''|fffd|x|fffd||fffd||fffd||fffd||fffd||3c2||742||156||fffd||fffd|z|fffd|U|fffd||58d||3c2||742||142||202||fffd|
        ''|fffd||38f||6cc||fffd||fffd||fffd||fffd|U|fffd||fffd||582||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9|
        If IsNull(adoRs.Fields("LastTransferMonth").Value) = False Then
            datValue = adoRs.Fields("LastTransferMonth").Value  ''LastTransferMonth
            If datValue <> datTarget Then
            'If Year(datValue) <> Year(datTarget) Or Month(datValue) <> Month(datTarget) Then
                blnExist = True
                Exit Do
            End If
        Else
            datValue = adoRs.Fields("PeriodStart").Value                      ''PeriodStart
            datValue = DateValue(Year(datValue) & "/" & Month(datValue) & "/01")
            If datValue <= datTarget Then
            'If Year(datValue) <= Year(datTarget) And Month(datValue) <= Month(datTarget) Then
                blnExist = True
                Exit Do
            End If
        End If
        adoRs.MoveNext
    Loop
   
    On Error GoTo 0
    fg_CheckPrepaidTransfer = True
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    fg_CheckPrepaidTransfer = False
    sg_MsgBoxError "s_SetupDataCells", strMSG
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_CheckPrepaidTransfer:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    LEDGER|fffd||30f|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'    |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'|fffd|@|fffd|@LED4/7|fffd||30f|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/3/5|fffd|FKnowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_DisideEditWay(lngRow As Long, lngCol As Long, _
                                callLedger As GLED_ID, returnLedger As GLED_ID)
                                
    Dim strMSG As String
    Dim strLinkCode As String
    Dim strSubConCode As String
    
    If (callLedger = GLED_SC) Then
        strMSG = c_strMSG_LINK_AMOUNT00 & vbCrLf & c_strMSG_LINK_AMOUNT03
        strLinkCode = Cells(lngRow, 14).Value
        strSubConCode = Cells(lngRow, 12).Value
    ElseIf (callLedger = GLED_BR) Then
        strMSG = c_strMSG_LINK_AMOUNT03
        strLinkCode = Cells(lngRow, 14).Value
    End If

    If (MsgBox(strMSG, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
        ''CASHBOOK/BANKBOOK|fffd||fffd||fffd|C|fffd||fffd|
        If (callLedger = GLED_BR) Then
            Cells(lngRow, 20).Activate
        ElseIf (callLedger = GLED_SC) Then
            Cells(lngRow, 19).Activate
        End If
    Else
        ''|fffd||38f||fffd|LEDGER|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        ThisWorkbook.Sheets(g_strArywsName(callLedger)).Activate
        If (callLedger = GLED_BR) Then      ''LED4|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            wsBrInvoice.fw_SetupSheet
            wsBrInvoice.m_blnEditInv = True
            wsBrInvoice.m_intCallLedger = returnLedger
            wsBrInvoice.m_strEditInvCode = strLinkCode      ''LedegerLinkCode
            wsBrInvoice.sw_EditRecord
        ElseIf (callLedger = GLED_SC) Then  ''LED7|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            wsLedSubcon.fw_SetupSheet
            wsLedSubcon.m_blnEditInv = True
            wsLedSubcon.m_intCallLedger = returnLedger
            wsLedSubcon.m_strEditInvCode = strSubConCode    ''SubConCode
            wsLedSubcon.m_strEditInvLinkCode = strLinkCode  ''LedegerLinkCode
            wsLedSubcon.sw_EditRecord
        End If
    End If
                        
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|p|fffd||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Connection |fffd|^> Connection
'   (2)<clsDBAccess |fffd|^> clsDBAccess
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (4)<clsCashBankBalance |fffd|^> |fffd|c|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|p|fffd||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/18 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_CreateCashBankBalanceSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datParam As Date, _
    ByRef typAryBalance() As clsCashBankBalance _
) As Boolean

    Dim lngIx As Long
    Dim strAcCode As String
    Dim strSQL As String
    Dim strMSG As String
    
    f_CreateCashBankBalanceSummary = False
    
    For lngIx = 0 To UBound(typAryBalance)
        strSQL = fg_setSummaryAccountFieldsSQLString()
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", " 'OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(datParam) & ", " 'TargetPeriod
        strSQL = strSQL & fg_AddSingleQuotation(typAryBalance(lngIx).m_strCode) & ", " 'LedgerCode
        strSQL = strSQL & fg_AddSingleQuotation(typAryBalance(lngIx).m_strCurrency) & ", " 'Currency
        strSQL = strSQL & fg_AddSingleQuotation(CStr(typAryBalance(lngIx).m_intPurpose)) & ", " 'Purpose
        strSQL = strSQL & "Null, " 'WBSCode
        strSQL = strSQL & fg_AddSingleQuotation(typAryBalance(lngIx).m_strAcCode) & ", " 'AccountCode
        strSQL = strSQL & "Null, " 'ConnectionCode
        strSQL = strSQL & 0 & ", " 'Debit
        strSQL = strSQL & 0 & ", " 'Credit
        strSQL = strSQL & typAryBalance(lngIx).m_curBalance & ", " 'Balance
        strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", " 'InsertDate
        strSQL = strSQL & "Null, " 'DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", " 'InsertUID
        strSQL = strSQL & "Null" 'DeleteUID
        strSQL = strSQL & " )"
        
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
        
    Next

    f_CreateCashBankBalanceSummary = True

LBL_END:
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_CreateCashBankBalanceSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_CreateCashBankBalanceSummary", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd||fffd|N|fffd|x|fffd||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (4)<clsCashBankBalance |fffd|^> |fffd|c|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'   (5)<Boolean |fffd|^> True|fffd|F|fffd|S|fffd||102||311||38f||6cc||fffd| False|fffd|F|fffd||38f||6cc||fffd||fffd||302||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|N|fffd|x|fffd||30c||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd|ACash/BankBook|fffd|c|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd|z|fffd||fffd||34c||102||44f|o|fffd||fffd||fffd||fffd||fffd||149||fffd||fffd||fffd||fffd||fffd||90b1||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/18 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_GetCashBankBalanceSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datTarget As Date, _
    ByRef typAryBalance() As clsCashBankBalance, _
    ByRef blnAll As Boolean _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim lngMstIx As Long
    Dim lngIx As Long
    Dim strMSG As String
    
    ''CashBook|fffd|o|fffd|[|fffd||fffd||fffd||752||fffd|
    If fg_IsSetCommonInfo(GCMN_CB) Then
        For lngIx = 0 To UBound(g_typAryCBInfo)
            ReDim Preserve typAryBalance(lngIx)
            typAryBalance(lngIx).m_strCode = g_typAryCBInfo(lngIx).m_strCode
            typAryBalance(lngIx).m_strCurrency = g_typAryCBInfo(lngIx).m_strCurrency
            typAryBalance(lngIx).m_intPurpose = g_typAryCBInfo(lngIx).m_intPurpose
            typAryBalance(lngIx).m_curBalance = 0
            typAryBalance(lngIx).m_strAcCode = g_typAryCBInfo(lngIx).m_strAcCode
        Next
    End If
    
    ''BankBook|fffd||fffd||fffd||752||fffd|
    If fg_IsSetCommonInfo(GCMN_BB) Then
        For lngMstIx = 0 To UBound(g_typAryBBInfo)
            ReDim Preserve typAryBalance(lngIx + lngMstIx)
            typAryBalance(lngIx + lngMstIx).m_strCode = g_typAryBBInfo(lngMstIx).m_strCode
            typAryBalance(lngIx + lngMstIx).m_strCurrency = g_typAryBBInfo(lngMstIx).m_strCurrency
            typAryBalance(lngIx + lngMstIx).m_intPurpose = g_typAryBBInfo(lngMstIx).m_intPurpose
            typAryBalance(lngIx + lngMstIx).m_curBalance = 0
            typAryBalance(lngIx + lngMstIx).m_strAcCode = g_typAryBBInfo(lngMstIx).m_strAcCode
        Next
    End If

    Set adoRs = New ADODB.Recordset
    strMSG = "DBSelectProcError"
   
On Error GoTo LBL_ERR

    strSQL = "SELECT "
    strSQL = strSQL & "tb.LedgerCode, " & "Sum(" & "tb.Balance) AS Balance "
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb "
    strSQL = strSQL & "WHERE "
    strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    If blnAll = False Then ''|fffd|w|fffd||830e||fffd|c|fffd||302||fffd|
        strSQL = strSQL & " And tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    End If
    strSQL = strSQL & " GROUP BY " & "tb.LedgerCode, " & "tb.OfficeCode"
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
        If (IsNull(adoRs.Fields("Balance").Value) = False) Then
            For lngIx = 0 To UBound(typAryBalance)
                If typAryBalance(lngIx).m_strCode = adoRs.Fields("LedgerCode").Value Then
                    typAryBalance(lngIx).m_curBalance = CCur(adoRs.Fields("Balance").Value)
                    Exit For
                End If
            Next
        End If
        adoRs.MoveNext
    Loop
    
    On Error GoTo 0
    f_GetCashBankBalanceSummary = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function

LBL_ERR:
    f_GetCashBankBalanceSummary = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetCashBankBalanceSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_GetCashBankBalanceSummary", strMSG
    GoTo LBL_END

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|p|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (4)<clsCashBankBalance |fffd|^> |fffd|c|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'   (5)<Boolean |fffd|^> True:|fffd|T|fffd|}|fffd||fffd||fffd||d3dc||fffd|K|fffd|v False:|fffd|T|fffd|}|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||d3dc||fffd|s|fffd|v
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|p|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd|v|fffd||c42c| False|fffd|F|fffd||c42c||fffd|s|fffd|v
'  |fffd||fffd||fffd|l
'   |fffd|z|fffd||fffd||34c||102||44f|o|fffd||fffd||fffd||fffd||fffd||149||fffd||fffd||fffd||fffd||fffd||90b1||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/18 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'   2006/07/04 |fffd|F Knowlbo m.o |fffd|F Import|fffd||fffd||fffd|o|fffd|[|fffd|\|fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||311||389||fffd|
'   2013/03/04 |fffd|F |fffd|n|7c97|S|fffd|q    |fffd|F |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_IsCreateCashBankBalanceSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datTarget As Date, _
    ByRef typAryBalance() As clsCashBankBalance, _
    ByRef blnDelBalance As Boolean _
) As Boolean

    Dim strSQL As String
    Dim datValue As Date
    Dim lngMstIx As Long
    Dim lngIx As Long
    Dim intChkCount As Integer
    Dim strMSG As String
    Dim adoRs As ADODB.Recordset
    
    f_IsCreateCashBankBalanceSummary = True
    blnDelBalance = True
    
    ''AccountBalance|fffd||fffd||fffd||fffd|O|fffd|N|fffd|x|fffd||fffd||fffd|a|fffd||fffd||fffd|c|fffd||64fe|
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||341|A|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
    datValue = fg_GetEndOfYear(fg_GetFiscalYear(datTarget) - 1)
    
'    If Month(datTarget) >= 4 Then
'        datValue = DateValue(Year(datTarget) & "/" & "03/31")
'    Else
'        datValue = DateValue(Year(datTarget) - 1 & "/" & "03/31")
'    End If
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    If f_GetCashBankBalanceSummary(adoCn, objdba, datValue, typAryBalance, False) <> True Then
        Erase typAryBalance
        f_IsCreateCashBankBalanceSummary = False
        Exit Function
    End If

    Set adoRs = New ADODB.Recordset
    strMSG = "DBSelectProcError"

On Error GoTo LBL_ERR
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SummaryAC & " tb "
    strSQL = strSQL & "WHERE "
    strSQL = strSQL & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " And "
    strSQL = strSQL & "(LEFT(tb.AccountCode, 3) = " & "'101' Or "
    strSQL = strSQL & "LEFT(tb.AccountCode, 3) = " & "'108') And "
    strSQL = strSQL & "tb.TargetPeriod = " & fg_AddSingleQuotation(datValue)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
        GoTo LBL_ERR
    End If
    
    intChkCount = 0
    Do Until adoRs.EOF
        If (IsNull(adoRs.Fields("Balance").Value) = False) Then
            For lngIx = 0 To UBound(typAryBalance)
                If typAryBalance(lngIx).m_strCode = adoRs.Fields("LedgerCode").Value Then
                    If typAryBalance(lngIx).m_curBalance <> CCur(adoRs.Fields("Balance").Value) Then
                        Exit Do
                    End If
                    intChkCount = intChkCount + 1
                    Exit For
                End If
            Next
        End If
        adoRs.MoveNext
    Loop
    
    ' |fffd|o|fffd|[|fffd||fffd||fffd||316||fffd||fffd||fffd|`|fffd||389||fffd|(2006/07/04)
    If ((fg_IsSetCommonInfo(GCMN_CB) = False) And _
        (fg_IsSetCommonInfo(GCMN_BB) = False)) Then
         f_IsCreateCashBankBalanceSummary = True
         blnDelBalance = False
    Else
        If UBound(typAryBalance) + 1 <> intChkCount Then
            f_IsCreateCashBankBalanceSummary = True
            If intChkCount = 0 Then blnDelBalance = True
        Else
            f_IsCreateCashBankBalanceSummary = False
            blnDelBalance = False
        End If
    End If
    
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_IsCreateCashBankBalanceSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_IsCreateCashBankBalanceSummary", strMSG
    GoTo LBL_END

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|p|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||303|f|fffd|[|fffd|^|fffd||d3dc||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Connection |fffd|^> Connection
'   (2)<clsDBAccess |fffd|^> clsDBAccess
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (4)<String |fffd|^> |fffd||38f||fffd|LedgerCode
'   (5)<Boolean |fffd|^> |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||302||754||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|p|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 |fffd|F nowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_TargetSumDataDelete( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datTarget As Date, _
    ByRef strLedgerCode As String, _
    Optional ByVal blnOnlyBalance As Boolean = False _
) As Boolean

    Dim strSQL As String
    Dim strMSG As String
    
    f_TargetSumDataDelete = False
    strMSG = "DBSelectProcError"
    
On Error GoTo LBL_ERR
    
    strSQL = "DELETE "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_SummaryAC & " "
    strSQL = strSQL & "WHERE OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " AND "
    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    If strLedgerCode <> "" Then
        strSQL = strSQL & " AND " & "LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
    End If
    If blnOnlyBalance Then
        strSQL = strSQL & " AND " & "AccountCode < " & fg_AddSingleQuotation(c_strBSCODE_BEGIN)
    End If
    objdba.SQLString = strSQL
    If (objdba.ExecuteSQL(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
        GoTo LBL_ERR
    End If
    
    On Error GoTo 0
    
    f_TargetSumDataDelete = True

LBL_END:
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "f_TargetSumDataDelete:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_TargetSumDataDelete", strMSG
    GoTo LBL_END
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|pBS|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Connection |fffd|^> Connection
'   (2)<ADODB.Recordset |fffd|^> Recordset
'   (3)<clsDBAccess |fffd|^> clsDBAccess
'   (4)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (5)<String |fffd|^> LedgerCodeNo
'   (6)<String |fffd|^> |fffd||289||fffd|
'   (7)<Integer |fffd|^> NK/JV NK:0 JV:1
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|pBS|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_UpDateBSAccountSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef adoRs As ADODB.Recordset, _
    ByRef objdba As clsDBAccess, _
    ByRef datParam As Date, _
    ByVal strLedger As String, _
    ByVal strCurrency As String, _
    ByVal intPurpose As Integer _
) As Boolean
    Dim lngIx As Long
    Dim intDr As Integer
    Dim intCr As Integer
    Dim curDebit As Currency
    Dim curCredit As Currency
    Dim strSQL As String
    Dim strMSG As String
    
    f_UpDateBSAccountSummary = False
    
    Do Until adoRs.EOF
        For lngIx = 0 To UBound(g_strAryAcCode)
            If adoRs.Fields("AccountCode").Value = g_strAryAcCode(lngIx) Then
                If g_intAryAcDrCr(lngIx) = 0 Then   ''Dr|fffd||fffd||fffd||fffd|
                    intDr = 1
                    intCr = -1
                Else                                ''Cr|fffd||fffd||fffd||fffd|
                    intDr = -1
                    intCr = 1
                End If
                Exit For
            End If
        Next
        
        curDebit = 0
        curCredit = 0
        If (IsNull(adoRs.Fields("Debit").Value) = False) Then
            curDebit = CCur(adoRs.Fields("Debit").Value) * intDr
        End If
        If (IsNull(adoRs.Fields("Credit").Value) = False) Then
            curCredit = CCur(adoRs.Fields("Credit").Value) * intCr
        End If
        
        strSQL = fg_setSummaryAccountFieldsSQLString()
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "             ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(datParam) & ", "                    ''TargetPeriod
        strSQL = strSQL & fg_AddSingleQuotation(strLedger) & ", "                   ''LedgerCode
        strSQL = strSQL & fg_AddSingleQuotation(strCurrency) & ", "                 ''Currency
        strSQL = strSQL & fg_AddSingleQuotation(CStr(intPurpose)) & ", "            ''Purpose
        strSQL = strSQL & "Null, " 'WBSCode
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AccountCode").Value) & ", " ''AccountCode
        If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then                    ''ConnectionCode
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionCode").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & curDebit & ", "                                           ''Debit
        strSQL = strSQL & curCredit & ", "                                          ''Credit
        strSQL = strSQL & curDebit + curCredit & ", "                               ''Balance
        strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", "                       ''InsertDate
        strSQL = strSQL & "Null, "                                                  ''DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "                ''InsertUID
        strSQL = strSQL & "Null"                                                    ''DeleteUID
        strSQL = strSQL & " )"
        
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
        
        adoRs.MoveNext
    Loop
    
    f_UpDateBSAccountSummary = True

LBL_END:

    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpDateBSAccountSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_UpDateBSAccountSummary", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|p|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Connection |fffd|^> Connection
'   (2)<ADODB.Recordset |fffd|^> Recordset
'   (3)<clsDBAccess |fffd|^> clsDBAccess
'   (4)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (5)<String |fffd|^> LedgerCodeNo
'   (6)<String |fffd|^> |fffd||289||fffd|
'   (7)<Integer |fffd|^> NK/JV NK:0 JV:1
'   (8)<String |fffd|^> |fffd||fffd||fffd|a|fffd||fffd||fffd||44a0||fffd||30a||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|p|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_UpDateLedgerSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef adoRs As ADODB.Recordset, _
    ByRef objdba As clsDBAccess, _
    ByRef datParam As Date, _
    ByVal strLedger As String, _
    ByVal strCurrency As String, _
    ByVal intPurpose As Integer, _
    ByVal strBookAccode As String _
) As Boolean
    Dim intDr As Integer
    Dim intCr As Integer
    Dim curDebit As Currency
    Dim curCredit As Currency
    Dim strSQL As String
    Dim strMSG As String
    
    f_UpDateLedgerSummary = False
    
    intDr = 1
    intCr = -1

    Do Until adoRs.EOF
        curDebit = 0
        curCredit = 0
        ''|fffd||fffd||fffd|a|fffd||fffd||fffd||30f||a347||fffd||341|APaid(Dr)|fffd|AReceived(Cr)|fffd||fffd||fffd|t|fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
        If (IsNull(adoRs.Fields("Credit").Value) = False) Then
            curDebit = CCur(adoRs.Fields("Credit").Value) * intDr
        End If
        If (IsNull(adoRs.Fields("Debit").Value) = False) Then
            curCredit = CCur(adoRs.Fields("Debit").Value) * intCr
        End If
        
        strSQL = fg_setSummaryAccountFieldsSQLString()
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "     ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(datParam) & ", "            ''TargetPeriod
        strSQL = strSQL & fg_AddSingleQuotation(strLedger) & ", "           ''LedgerCode
        strSQL = strSQL & fg_AddSingleQuotation(strCurrency) & ", "         ''Currency
        strSQL = strSQL & fg_AddSingleQuotation(CStr(intPurpose)) & ", "    ''Purpose
        strSQL = strSQL & "Null, "                                          ''WBSCode
        strSQL = strSQL & fg_AddSingleQuotation(strBookAccode) & ", "       ''AccountCode
        strSQL = strSQL & "Null, "                                          ''ConnectionCode
        strSQL = strSQL & curDebit & ", "                                   ''Debit
        strSQL = strSQL & curCredit & ", "                                  ''Credit
        strSQL = strSQL & curDebit + curCredit & ", "                       ''Balance
        strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", "               ''InsertDate
        strSQL = strSQL & "Null, "                                          ''DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "        ''InsertUID
        strSQL = strSQL & "Null"                                            ''DeleteUID
        strSQL = strSQL & " )"
        
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
        
        adoRs.MoveNext
    Loop
    
    f_UpDateLedgerSummary = True
    
LBL_END:

    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpDateLedgerSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_UpDateLedgerSummary", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|pPL|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Connection |fffd|^> Connection
'   (2)<ADODB.Recordset |fffd|^> Recordset
'   (3)<clsDBAccess |fffd|^> clsDBAccess
'   (4)<Date |fffd|^> |fffd||38f||6cc||fffd|
'   (5)<String |fffd|^> LedgerCodeNo
'   (6)<String |fffd|^> |fffd||289||fffd|
'   (7)<Integer |fffd|^> NK/JV NK:0 JV:1
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|pPL|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_UpDatePLAccountSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef adoRs As ADODB.Recordset, _
    ByRef objdba As clsDBAccess, _
    ByRef datParam As Date, _
    ByVal strLedger As String, _
    ByVal strCurrency As String, _
    ByVal intPurpose As Integer _
) As Boolean
    Dim lngIx As Long
    Dim intDr As Integer
    Dim intCr As Integer
    Dim curDebit As Currency
    Dim curCredit As Currency
    Dim strSQL As String
    Dim strMSG As String
    
    f_UpDatePLAccountSummary = False
    
    Do Until adoRs.EOF
        For lngIx = 0 To UBound(g_strAryAcCode)
            If adoRs.Fields("AccountCode").Value = Left$(g_strAryAcCode(lngIx), 6) Then
                If g_intAryAcDrCr(lngIx) = 0 Then   ''Dr|fffd||fffd||fffd||fffd|
                    intDr = 1
                    intCr = -1
                Else                                ''Cr|fffd||fffd||fffd||fffd|
                    intDr = -1
                    intCr = 1
                End If
                Exit For
            End If
        Next
        
        curDebit = 0
        curCredit = 0
        If (IsNull(adoRs.Fields("Debit").Value) = False) Then
            curDebit = CCur(adoRs.Fields("Debit").Value) * intDr
        End If
        If (IsNull(adoRs.Fields("Credit").Value) = False) Then
            curCredit = CCur(adoRs.Fields("Credit").Value) * intCr
        End If
        
        strSQL = fg_setSummaryAccountFieldsSQLString()
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "     ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(datParam) & ", "            ''TargetPeriod
        strSQL = strSQL & fg_AddSingleQuotation(strLedger) & ", "           ''LedgerCode
        strSQL = strSQL & fg_AddSingleQuotation(strCurrency) & ", "         ''Currency
        strSQL = strSQL & fg_AddSingleQuotation(CStr(intPurpose)) & ", "    ''Purpose
        If Not IsNull(adoRs.Fields("WBSCode").Value) Then                   ''WBSCode
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("WBSCode").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(CStr(adoRs.Fields("AccountCode").Value) & "XX") & ", " 'AccountCode
        strSQL = strSQL & "Null, "                                          ''ConnectionCode
        strSQL = strSQL & curDebit & ", "                                   ''Debit
        strSQL = strSQL & curCredit & ", "                                  ''Credit
        strSQL = strSQL & curDebit + curCredit & ", "                       ''Balance
        strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", "               ''InsertDate
        strSQL = strSQL & "Null, "                                          ''DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "        ''InsertUID
        strSQL = strSQL & "Null"                                            ''DeleteUID
        strSQL = strSQL & " )"
        
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
        
        adoRs.MoveNext
    Loop
    
    f_UpDatePLAccountSummary = True
    
LBL_END:
    
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpDatePLAccountSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_UpDatePLAccountSummary", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd||fffd|Ledger|fffd||fffd|Ledger12/13|fffd|p|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Connection |fffd|^> Connection
'   (2)<clsDBAccess |fffd|^> clsDBAccess
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|pPL|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2003/03/25 |fffd|F Knowlbo m.o |fffd|F SS|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CreateAccountSummaryByLedCode( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datTarget As Date, _
    ByVal strLedID As String, _
    ByVal strCurrency As String, _
    ByVal intPurpose As Integer, _
    ByVal strBookAccode As String _
) As Boolean

    Dim strSQL As String
    Dim strDbTable As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    
    strMSG = "DBSelectProcError"
    Set adoRs = New ADODB.Recordset
    
    fg_CreateAccountSummaryByLedCode = False

    Select Case Left$(strLedID, 2)
    Case "CB" ''CashBook"
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select

On Error GoTo LBL_ERR
    
    ''|fffd||38f||6cc||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d||d3dc|
    If f_TargetSumDataDelete(adoCn, objdba, datTarget, strLedID) <> True Then
        GoTo LBL_ERR
    End If
    
    If strBookAccode <> "" Then
        ''|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|
        strSQL = fg_CreateSQLLedgerSummary(strDbTable, strLedID, datTarget)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
            GoTo LBL_ERR
        End If
        If adoRs.EOF = False Then
            If f_UpDateLedgerSummary(adoCn, adoRs, objdba, datTarget, _
                                    strLedID, strCurrency, intPurpose, strBookAccode) <> True Then
                strMSG = c_strMSG_DB_Update & ":" & c_strTBL_SummaryAC
                GoTo LBL_ERR
            End If
        End If
        Call objdba.closeRecordset(adoRs)
    End If
    
    ''BS|fffd||fffd||fffd||fffd|
    strSQL = fg_CreateSQLBSAccountSummary(strDbTable, strLedID, datTarget)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CashBook
        GoTo LBL_ERR
    End If
    If adoRs.EOF = False Then
        If f_UpDateBSAccountSummary(adoCn, adoRs, objdba, datTarget, _
                                    strLedID, strCurrency, intPurpose) <> True Then
            strMSG = c_strMSG_DB_Update & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
    End If
    Call objdba.closeRecordset(adoRs)
    
    ''PL|fffd||fffd||fffd||fffd|
    strSQL = fg_CreateSQLPLAccountSummary(strDbTable, strLedID, datTarget)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CashBook
        GoTo LBL_ERR
    End If
    If adoRs.EOF = False Then
        If f_UpDatePLAccountSummary(adoCn, adoRs, objdba, datTarget, _
                                    strLedID, strCurrency, intPurpose) <> True Then
            strMSG = c_strMSG_DB_Update & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
    End If
    Call objdba.closeRecordset(adoRs)

    On Error GoTo 0
    fg_CreateAccountSummaryByLedCode = True

LBL_END:
    Set adoRs = Nothing
    Exit Function

LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_CreateAccountSummaryByLedCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_CreateAccountSummaryByLedCode", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Ledger12/13|fffd|p|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> |fffd||38f||6cc||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Ledger12/13|fffd|p|fffd||fffd||fffd||fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/11 |fffd|F Knowlbo Suzuki |fffd|F |fffd|V|fffd|K|fffd||c42c|
'   2006/07/04 |fffd|F Knowlbo m.o |fffd|F Import|fffd||fffd||fffd|o|fffd|[|fffd|\|fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||311||389||fffd|
'   2013/03/04 |fffd|F |fffd|n|7c97|S|fffd|q    |fffd|F |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CreateAccountSummary( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datTarget As Date _
) As Boolean

    Dim datValue As Date
    Dim typAryBalance() As clsCashBankBalance
    Dim blnDelBlc As Boolean
    Dim blnUpdBlc As Boolean
    Dim strMSG As String
    Dim lngIx As Long
    
    fg_CreateAccountSummary = False
    strMSG = "DBSelectProcError"
    
    ''|fffd|W|fffd|v|fffd||38f||6cc||fffd||fffd||313||fffd||fffd||fffd|
    blnUpdBlc = True
    
    ''|fffd|O|fffd|N|fffd|xCash/BankBalance|fffd|f|fffd|[|fffd|^|fffd||30d||c42c||fffd|m|fffd|F|fffd|AtypAryBalance|fffd||fffd|CB/BB|fffd||30d|\|fffd||fffd||fffd|S|fffd||102||311|O|fffd|N|fffd|x|fffd|c|fffd||c42c|
    If f_IsCreateCashBankBalanceSummary(adoCn, objdba, datTarget, typAryBalance, blnDelBlc) <> True Then
        blnUpdBlc = False
        blnDelBlc = False
        Erase typAryBalance
    End If
    
    If blnDelBlc Then ''|fffd|O|fffd|N|fffd|xCash/BankBalance|fffd|f|fffd|[|fffd|^|fffd||30d||d3dc|
        ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||341|A|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
        datValue = fg_GetEndOfYear(fg_GetFiscalYear(datTarget) - 1)
        
'        If Month(datTarget) >= 4 Then
'            datValue = DateValue(Year(datTarget) & "/" & "03/31")
'        Else
'            datValue = DateValue(Year(datTarget) - 1 & "/" & "03/31")
'        End If
        ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        If f_TargetSumDataDelete(adoCn, objdba, datValue, "", True) <> True Then
            GoTo LBL_ERR
        End If
    End If
    
    ''CashBook----------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_CB) Then
        For lngIx = 0 To UBound(g_typAryCBInfo)
            If fg_CreateAccountSummaryByLedCode(adoCn, objdba, datTarget, _
                                    g_typAryCBInfo(lngIx).m_strCode, _
                                    g_typAryCBInfo(lngIx).m_strCurrency, _
                                    g_typAryCBInfo(lngIx).m_intPurpose, _
                                    g_typAryCBInfo(lngIx).m_strAcCode) <> True Then GoTo LBL_ERR
        Next
    End If
    
    ''BankBook----------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_BB) Then
        For lngIx = 0 To UBound(g_typAryBBInfo)
            If fg_CreateAccountSummaryByLedCode(adoCn, objdba, datTarget, _
                                    g_typAryBBInfo(lngIx).m_strCode, _
                                    g_typAryBBInfo(lngIx).m_strCurrency, _
                                    g_typAryBBInfo(lngIx).m_intPurpose, _
                                    g_typAryBBInfo(lngIx).m_strAcCode) <> True Then GoTo LBL_ERR
        Next
    End If
    
    ''Transfer----------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_TR) Then
        For lngIx = 0 To UBound(g_typAryTRInfo)
            If fg_CreateAccountSummaryByLedCode(adoCn, objdba, datTarget, _
                                    g_typAryTRInfo(lngIx).m_strCode, _
                                    g_typAryTRInfo(lngIx).m_strCurrency, _
                                    g_typAryTRInfo(lngIx).m_intPurpose, _
                                    "") <> True Then GoTo LBL_ERR
        Next
    End If
   
    ''BALANCE-----------------------------------------------------------------------
    If blnUpdBlc Then
        ' |fffd|o|fffd|[|fffd||fffd||fffd||316||fffd||fffd||fffd|`|fffd||389||fffd|(2006/07/04)
        If ((fg_IsSetCommonInfo(GCMN_CB) = True) Or _
            (fg_IsSetCommonInfo(GCMN_BB) = True)) Then
            If f_CreateCashBankBalanceSummary(adoCn, objdba, datValue, typAryBalance) <> True Then
                strMSG = "f_CreateCashBankBalanceSummary RET Error"
             GoTo LBL_ERR
            End If
        End If
    End If
    
    On Error GoTo 0

    fg_CreateAccountSummary = True
    
LBL_END:
    Erase typAryBalance
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_CreateAccountSummary:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_CreateAccountSummary", strMSG
    GoTo LBL_END

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|iAccountBalance|fffd||30d||c42c||fffd|j
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||6d4|N|fffd|x
'   (2)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30c||fffd||fffd|a|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||68d|s|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||70a9||fffd||fffd||fffd||7cd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/04 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/29 : Knowlbo m.o : SS|fffd||389||fffd|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function fg_YearlyProcAcBal( _
    ByVal intTargetYear As Integer, _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean
    
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim adoRsHst As ADODB.Recordset
    Dim strMSG As String
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datPEDate As Date ' |fffd|O|fffd|N|fffd|x|fffd||fffd|
    Dim datTEDate As Date ' |fffd||fffd||fffd|N|fffd|x|fffd||fffd|
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    fg_YearlyProcAcBal = False '|fffd||7c2||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
    
    strMSG = "DBExecuteError"
    Set adoRs = New ADODB.Recordset
    Set adoRsHst = New ADODB.Recordset

On Error GoTo LBL_ERR
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    datPEDate = fg_GetEndOfYear(intTargetYear - 1)
    datTEDate = fg_GetEndOfYear(intTargetYear)
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    '[AccountBalance]|fffd|p|fffd|f|fffd|[|fffd|^|fffd||30c||fffd||fffd||fffd||fffd|E|fffd|W|fffd|v
    strSQL = "SELECT "
    strSQL = strSQL & "tb.LedgerCode, "
    strSQL = strSQL & " Sum(tb.Balance) AS Bl"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb"
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " AND "
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "TargetPeriod >= " & fg_AddSingleQuotation(CStr(datPEDate)) & " AND "
    strSQL = strSQL & "TargetPeriod < " & fg_AddSingleQuotation(CStr(datTEDate))
    
'    strSQL = strSQL & "TargetPeriod >= " & fg_AddSingleQuotation(CStr(intTargetYear) & "/03/31") & " AND "
'    strSQL = strSQL & "TargetPeriod < " & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31")  '& " AND "
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "tb.LedgerCode"
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "tb.LedgerCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    
    '|fffd||d3dc||fffd||fffd||fffd||fffd|O|fffd|N|fffd|x|fffd|c|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||397||fffd||fffd||fffd|DB|fffd||58f||fffd||fffd||fffd||fffd||fffd|
    strSQL = "SELECT * "
    strSQL = strSQL & "FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb "
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " AND "
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(CStr(datTEDate))
'    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31")
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRsHst) <> 0 Then
        Call objdba.closeRecordset(adoRsHst)
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    Do Until adoRsHst.EOF
        objdba.SQLString = fg_setAccountBalanceHistorySQLString(adoRsHst, Now)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            Call objdba.closeRecordset(adoRsHst)
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AcBalance
            GoTo LBL_ERR
        End If
        adoRsHst.MoveNext
    Loop
    Call objdba.closeRecordset(adoRsHst)
    
    '|fffd|O|fffd|N|fffd|x|fffd|c|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||38d||d3dc|
    strSQL = "DELETE "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance
    strSQL = strSQL & " WHERE OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " AND "
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(CStr(datTEDate))
'    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31")
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    objdba.SQLString = strSQL
    If (objdba.ExecuteSQL(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    
    '[AccountBalance]|fffd||251|O|fffd|N|fffd|x|fffd|c|fffd||fffd||752||fffd|
    Do Until adoRs.EOF
    
        strSQL = fg_setAccountBalanceFieldsSQLString(c_strTBL_AcBalance)
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", " 'OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", " 'LedgerCode
        ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        strSQL = strSQL & fg_AddSingleQuotation(CStr(datTEDate)) & ", " 'TargetPeriod
'        strSQL = strSQL & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31") & ", " 'TargetPeriod
        ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        strSQL = strSQL & adoRs.Fields("Bl").Value & ", " 'Balance
        strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", " 'InsertDate
        strSQL = strSQL & "Null, " 'DeleteDate
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", " 'InsertUID
        strSQL = strSQL & "Null" 'DeleteUID
        strSQL = strSQL & " )"
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
            GoTo LBL_ERR
        End If
        adoRs.MoveNext
    Loop
     
    fg_YearlyProcAcBal = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    On Error GoTo 0
    Set adoRsHst = Nothing
    Set adoRs = Nothing
    Exit Function

LBL_ERR:
    Call objdba.closeRecordset(adoRsHst)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_YearlyProcAcBal:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_YearlyProcAcBal", strMSG
    GoTo LBL_END
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|iSummaryAccount|fffd||30d||c42c||fffd|j
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||6d4|N|fffd|x
'   (2)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30a||fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||68d|s|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||70a9||fffd||fffd||fffd||7cd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/04 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/28 : Knowlbo m.o : SS|fffd||389||fffd|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function fg_YearlyProcSumAc( _
    ByVal intTargetYear As Integer, _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datPEDate As Date ' |fffd|O|fffd|N|fffd|x|fffd||fffd|
    Dim datTEDate As Date ' |fffd||fffd||fffd|N|fffd|x|fffd||fffd|
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    fg_YearlyProcSumAc = False '|fffd||7c2||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
    
    Set adoRs = New ADODB.Recordset
    strMSG = "DBExecuteError"
    
On Error GoTo LBL_ERR
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    datPEDate = fg_GetEndOfYear(intTargetYear - 1)
    datTEDate = fg_GetEndOfYear(intTargetYear)
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    '[SummartAccount]|fffd|p|fffd|f|fffd|[|fffd|^|fffd||30c||fffd||fffd||fffd||fffd|E|fffd|W|fffd|v
    strSQL = "SELECT "
    strSQL = strSQL & "tb.LedgerCode, "
    strSQL = strSQL & "tb.Currency, "
    strSQL = strSQL & "tb.Purpose, "
    strSQL = strSQL & "tb.WBSCode, "
    strSQL = strSQL & "tb.AccountCode,"
    strSQL = strSQL & "tb.ConnectionCode, "
    strSQL = strSQL & " Sum(tb.Balance) AS Bl "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_SummaryAC & " tb "
    strSQL = strSQL & " WHERE "
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "TargetPeriod >= " & fg_AddSingleQuotation(CStr(datPEDate)) & " AND "
    strSQL = strSQL & "TargetPeriod < " & fg_AddSingleQuotation(CStr(datTEDate)) & " AND "
    
'    strSQL = strSQL & "TargetPeriod >= " & fg_AddSingleQuotation(CStr(intTargetYear) & "/03/31") & " AND "
'    strSQL = strSQL & "TargetPeriod < " & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31") & " AND "
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "tb.AccountCode < " & fg_AddSingleQuotation(c_strPLCODE_BEGIN) & " AND "  'PL|fffd||20a|O|fffd||fffd||fffd|o
    strSQL = strSQL & "OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) '& " AND "
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "tb.LedgerCode, tb.Currency, tb.Purpose, tb.AccountCode,  tb.ConnectionCode, tb.WBSCode"
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "tb.LedgerCode, tb.AccountCode, tb.ConnectionCode, tb.WBSCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
        GoTo LBL_ERR
    End If
    
    '[SummaryAccount]|fffd||251|O|fffd|N|fffd|x|fffd|c|fffd||fffd||752||fffd|i|fffd||fffd||fffd||142||251|O|fffd|N|fffd|x|fffd|c|fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34a||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||110|V|fffd|K|fffd||1c9||fffd||fffd|j
    '|fffd|O|fffd|N|fffd|x|fffd|c|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||38d||d3dc|
    strSQL = "DELETE "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_SummaryAC & " "
    strSQL = strSQL & "WHERE OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " AND "
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(CStr(datTEDate))
'    strSQL = strSQL & "TargetPeriod = " & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31")
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    objdba.SQLString = strSQL
    If (objdba.ExecuteSQL(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
        If Not IsNull(adoRs.Fields("Bl").Value) And adoRs.Fields("Bl").Value <> 0 Then
            strSQL = fg_setSummaryAccountFieldsSQLString()
            strSQL = strSQL & "( "
            strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "                     ''OfficeCode
            ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
            strSQL = strSQL & fg_AddSingleQuotation(CStr(datTEDate)) & ", "  ''TargetPeriod
'            strSQL = strSQL & fg_AddSingleQuotation(CStr(intTargetYear + 1) & "/03/31") & ", "  ''TargetPeriod
            ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("LedgerCode").Value) & ", "    ''LedgerCode
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Currency").Value) & ", "      ''Currency
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Purpose").Value) & ", "       ''Purpose
            If Not IsNull(adoRs.Fields("WBSCode").Value) Then                                   ''WBSCode
                strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("WBSCode").Value) & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AccountCode").Value) & ", "   ''AccountCode
            If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then                            ''ConnectionCode
                strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ConnectionCode").Value) & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
            strSQL = strSQL & 0 & ", "                                                          ''Debit
            strSQL = strSQL & 0 & ", "                                                          ''Credit
            strSQL = strSQL & adoRs.Fields("Bl").Value & ", "                                   ''Balance
            strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", "                               ''InsertDate
            strSQL = strSQL & "Null, "                                                          ''DeleteDate
            strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "                        ''InsertUID
            strSQL = strSQL & "Null"                                                            ''DeleteUID
            strSQL = strSQL & " )"
            objdba.SQLString = strSQL
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SummaryAC
                GoTo LBL_ERR
            End If
        End If
        adoRs.MoveNext
    Loop

    fg_YearlyProcSumAc = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    On Error GoTo 0
    Set adoRs = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_YearlyProcSumAc:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_YearlyProcSumAc", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Integer |fffd|^> |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||6d4|N|fffd|x
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||70a9||fffd||fffd||fffd||7cd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
'       |fffd||fffd||fffd||fffd||fffd||742||311||38f||6d4|N|fffd||242||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|B
'   |fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||14c||10f|o|fffd||fffd||fffd||fffd||24d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
'       |fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||311||38f||6d4|N|fffd|x|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|B
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/04 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/29 : Knowlbo m.o : SS|fffd||389||fffd|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function fg_YearlyProc( _
    ByVal intTargetYear As Integer _
) As Boolean
        
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim objdba As clsDBAccess
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim datPrNow As Date
    Dim datTarget As Date
    
    datPrNow = Now()    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t
    
    fg_YearlyProc = False '|fffd||7c2||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
    strMSG = "s_YearlyProc"
    
    '|fffd||fffd||fffd||742||311||38f||6d4|N|fffd||242||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N...|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd||202||fffd||fffd|B
    '|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||16782||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||114|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
        
        
' DB|fffd|X|fffd|V|fffd||fffd||fffd||fffd|--------------------------------------------
    strMSG = "DBUpdateProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    'Transaction|fffd|J|fffd|n >>>
    Call objdba.startTransaction(adoCn)
        
On Error GoTo LBL_ERR
        
    '[SummartAccount]|fffd||c42c|
    If fg_YearlyProcSumAc(intTargetYear, adoCn, objdba) <> True Then
        strMSG = strMSG & " Failed : SummaryAccount Table"
        GoTo LBL_ERR
    End If
    
    '[AccountBalance]|fffd||c42c|
    If fg_YearlyProcAcBal(intTargetYear, adoCn, objdba) <> True Then
        strMSG = strMSG & " Failed : AccountBalance Table"
        GoTo LBL_ERR
    End If
    
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd|A|fffd||fffd||fffd|N|fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    datTarget = fg_GetStartOfYear(intTargetYear + 1)
'    datTarget = DateValue(CStr(intTargetYear + 1) & "/04/01")
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''Decision|fffd|X|fffd|V
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Decision & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Decision
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setDecisionDataHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_Decision
            GoTo LBL_ERR
        End If
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
    End If
    
    adoRs.Fields("OfficeCode").Value = g_strOfficeCode
    adoRs.Fields("TargetPeriod").Value = datTarget
    'adoRs.Fields("ImportDate").Value = NULL ''|fffd||fffd||fffd||312|i|fffd|K|fffd||142||350||752||80b9||fffd||fffd|
    'adoRs.Fields("DecisionDate").Value = NULL ''|fffd||fffd||fffd||312|i|fffd|K|fffd||142||350||752||80b9||fffd||fffd|
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    Call objdba.closeRecordset(adoRs)
    
    On Error GoTo 0
    Call objdba.commitTransaction(adoCn)
    
    fg_YearlyProc = True
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)

    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_YearlyProc:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_YearlyProc", strMSG
    GoTo LBL_END
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SS|fffd||150|VVersion|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd||fffd||fffd||150|VVersion|fffd||fffd||fffd||64fe||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True|fffd|F|fffd||fffd||fffd||fffd| False|fffd|F|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/10/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/02/22 : |fffd|n|7c97|S|fffd|q : DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'   2016/08/01 : Y.Watanabe : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function fg_IsLatestVersion( _
) As Boolean

    ''DB|fffd||691||fffd||fffd|p
    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim blnFind As Boolean
    Dim strGetVer As String
    Dim strMandVer As String
    Dim strMandVerDisp As String
    Dim strLatestVer As String
    Dim strLatestVerDisp As String
    Dim datLatest As Date
        
    blnFind = False
    strMandVer = "1.0.00"
    datLatest = DateValue("2004/01/01")
    strMSG = "DBSelectProcError"
    Set adoRs = New ADODB.Recordset
    
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetVersionDefinition
    strSQL = Replace(strSQL, "@1", c_strSysCode)
    strSQL = Replace(strSQL, "@2", c_lngSysFileID)
    
'    ''<<<2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'    strSQL = "SELECT " & vbNewLine & _
'    "  Major " & vbNewLine & _
'    ", Minor " & vbNewLine & _
'    ", Revision " & vbNewLine & _
'    ", |fffd||fffd||fffd||fffd| " & vbNewLine & _
'    ", |fffd|K|fffd|{|fffd|t|fffd||fffd||fffd|O " & vbNewLine & _
'    ", InsertDate " & vbNewLine & _
'    ", DeleteDate " & vbNewLine & _
'    ", ReleaseDate " & vbNewLine & _
'    ", UpdateDate " & vbNewLine & _
'    "FROM " & defVersionDefinition & vbNewLine & _
'    "WHERE DeleteDate IS NULL " & vbNewLine & _
'    "AND ReleaseDate <= GETDATE() " & vbNewLine & _
'    "AND |fffd|V|fffd|X|fffd|e|fffd||fffd|Code = '" & c_strSysCode & "' " & vbNewLine & _
'    "AND |fffd|t|fffd|@|fffd|C|fffd||fffd|ID = " & c_lngSysFileID & vbNewLine
'
''    strSQL = "SELECT " & vbNewLine & _
''    "  Major " & vbNewLine & _
''    ", Minor " & vbNewLine & _
''    ", Revision " & vbNewLine & _
''    ", |fffd||fffd||fffd||fffd| " & vbNewLine & _
''    ", |fffd|K|fffd|{|fffd|t|fffd||fffd||fffd|O " & vbNewLine & _
''    ", InsertDate " & vbNewLine & _
''    ", DeleteDate " & vbNewLine & _
''    ", ReleaseDate " & vbNewLine & _
''    ", UpdateDate " & vbNewLine & _
''    "FROM " & c_strNKWFDBName & "." & c_NKWFOwner & "." & c_strTBL_Version & vbNewLine & _
''    "WHERE DeleteDate IS NULL " & vbNewLine & _
''    "AND ReleaseDate <= GETDATE() " & vbNewLine & _
''    "AND |fffd|V|fffd|X|fffd|e|fffd||fffd|Code = '" & c_strSysCode & "' " & vbNewLine & _
''    "AND |fffd|t|fffd|@|fffd|C|fffd||fffd|ID = " & c_lngSysFileID & vbNewLine
'    ''>>>2013.02.22 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
On Error GoTo LBL_ERR
    
    g_objdbaCmn.SQLString = strSQL
    If g_objdbaCmn.openRecordset(g_adoCnCmn, adoRs) <> 0 Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defGetVersionDefinition
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Version
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
        strGetVer = CStr(adoRs.Fields("Major").Value) & "."
        strGetVer = strGetVer & CStr(adoRs.Fields("Minor").Value) & "."
        strGetVer = strGetVer & Format$(CStr(adoRs.Fields("Revision").Value), "00")
        
        If strGetVer = g_strVersionCode Then blnFind = True
        If datLatest < CDate(adoRs.Fields("ReleaseDate").Value) Then
            datLatest = CDate(adoRs.Fields("ReleaseDate").Value)
            strLatestVer = strGetVer
            strLatestVerDisp = "V" & CStr(adoRs.Fields("Major").Value) & "."
            strLatestVerDisp = strLatestVerDisp & CStr(adoRs.Fields("Minor").Value) & "R"
            strLatestVerDisp = strLatestVerDisp & Format$(CStr(adoRs.Fields("Revision").Value), "00")
        End If
        
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        If adoRs.Fields("RequiredFlag").Value = "1" And strGetVer > strMandVer Then
'        If adoRs.Fields("|fffd|K|fffd|{|fffd|t|fffd||fffd||fffd|O").Value = "1" And strGetVer > strMandVer Then
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
            strMandVer = strGetVer
            strMandVerDisp = "V" & CStr(adoRs.Fields("Major").Value) & "."
            strMandVerDisp = strMandVerDisp & CStr(adoRs.Fields("Minor").Value) & "R"
            strMandVerDisp = strMandVerDisp & Format$(CStr(adoRs.Fields("Revision").Value), "00")
        End If
        adoRs.MoveNext
    Loop

    On Error GoTo 0
    
    If blnFind Then
        If strMandVer > g_strVersionCode Then
            MsgBox c_strMSG_VersionErr & " [" & g_strVersion & "] ", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            fg_IsLatestVersion = False
            
        ElseIf strLatestVer > g_strVersionCode Then
            MsgBox c_strMSG_Recomnd_LateVer & " [" & strLatestVerDisp & "] ", vbOKOnly + vbExclamation, c_strNAME_SYSTEM
            fg_IsLatestVersion = True
        Else
            fg_IsLatestVersion = True
        End If
    Else
        MsgBox c_strMSG_VersionErr & " [" & g_strVersion & "] ", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fg_IsLatestVersion = False
    End If
LBL_END:
    Call g_objdbaCmn.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    On Error GoTo 0
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_IsLatestVersion:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_IsLatestVersion", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|e|fffd|I|fffd|t|fffd|B|fffd|X|fffd||30d||fffd||fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String|fffd|z|fffd||fffd| |fffd|^> |fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|mOfficeMaster|fffd|n|fffd||30a|e|fffd|I|fffd|t|fffd|B|fffd|X|fffd||30d||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||241|mGeCountry|fffd|n|fffd||30d||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> 0|fffd||20f||fffd|F|fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|^-1|fffd|F|fffd|G|fffd||fffd||fffd|[|fffd|I|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd|z|fffd||fffd||34c||102||44f|o|fffd||fffd||fffd||fffd||fffd||149||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/01 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCountries( _
    ByRef typAryCountry() As String _
) As Integer
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim lngIndex As Long
    Dim lngIndexMax As Long
    
    fg_GetCountries = -1
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''[OfficeMaster|fffd|n|fffd||30d||fffd||fffd|R|fffd|[|fffd|h|fffd||188||fffd|v|fffd||fffd||fffd||9351||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||fffd||fffd|mGeCountry|fffd|n|fffd||fffd||fffd||64fe|
    strSQL = "SELECT DISTINCT EnglishName as En"
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".GeCountry tbl "
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(tbl.CountryCode) IN (SELECT DISTINCT UPPER(Country) FROM "
    strSQL = strSQL & c_NKFAOwner & ".OfficeMaster)"
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "tbl.EnglishName"
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    lngIndex = 0
    Do Until adoRs.EOF
        ReDim Preserve typAryCountry(lngIndex)
        If Not IsNull(adoRs.Fields("En").Value) Then
            typAryCountry(lngIndex) = adoRs.Fields("En").Value
        Else
            typAryCountry(lngIndex) = " "
        End If
        adoRs.MoveNext
        ''If Not adoRs.EOF Then
        lngIndex = lngIndex + 1
    Loop
    fg_GetCountries = lngIndex

LB_End:
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetCountries:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetCountries", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||743|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> ""|fffd||20a|O|fffd|F|fffd||289||743|R|fffd|[|fffd|h|fffd|^""|fffd|F|fffd||64fe||fffd||142||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/16 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCurrencyByCName( _
    ByVal strCName As String _
) As String
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    fg_GetCurrencyByCName = ""
    strMSG = "DBExecuteError"
    
    If strCName = "" Or strCName = String$(Len(strCName), "*") Or strCName = Space$(Len(strCName)) Then
        Exit Function
    End If
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||64fe|
    strSQL = "SELECT  CurrencyCode as Cc"
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".GeCountry tbl "
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(EnglishName) = " & fg_AddSingleQuotation(UCase$(strCName))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
        
    '|fffd||fffd||fffd||fffd||fffd||188||fffd|v|fffd||fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    If Not adoRs.EOF Then
        fg_GetCurrencyByCName = adoRs.Fields("Cc").Value
    End If
        
LB_End:
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetCurrencyByCName:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetCurrencyByCName", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||289||743|R|fffd|[|fffd|h|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||743|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||289||743|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> ""|fffd||20a|O|fffd|F|fffd||289||743|R|fffd|[|fffd|h|fffd|^""|fffd|F|fffd||64fe||fffd||142||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/18 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCurrencyByOCode( _
    ByVal strOCode As String _
) As String
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    fg_GetCurrencyByOCode = ""
    strMSG = "DBExecuteError"
    
    If strOCode = "" Or strOCode = String$(Len(strOCode), "*") Or strOCode = Space$(Len(strOCode)) Then
        Exit Function
    End If
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||64fe|
    strSQL = "SELECT DISTINCT Currency as Crn"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".PJTMaster pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(OfficeCode) = " & fg_AddSingleQuotation(UCase$(strOCode))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
        
    '|fffd||fffd||fffd||fffd||fffd||188||fffd|v|fffd||fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    If Not adoRs.EOF Then
        fg_GetCurrencyByOCode = adoRs.Fields("Crn").Value
    End If
        
LB_End:
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetCurrencyByOCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetCurrencyByOCode", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||9351||fffd|R|fffd|[|fffd|h|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||9351||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> ""|fffd||20a|O|fffd|F|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^""|fffd|F|fffd|G|fffd||fffd||fffd|[|fffd|I|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/01 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCCodeByCName( _
    ByVal strCName As String _
) As String
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRsCCode As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    fg_GetCCodeByCName = ""
    strMSG = "DBExecuteError"
    
    If strCName = "" Or strCName = String$(Len(strCName), "*") Or strCName = Space$(Len(strCName)) Then
        Exit Function
    End If
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRsCCode, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||fffd||8351||fffd|R|fffd|[|fffd|h|fffd||64fe|
    strSQL = "SELECT  CountryCode as Cc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".GeCountry tbl "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(EnglishName) = " & fg_AddSingleQuotation(UCase$(strCName))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRsCCode)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
        
    '|fffd||fffd||fffd||fffd||fffd||188||fffd|v|fffd||fffd||fffd||9351||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    If Not adoRsCCode.EOF Then
        fg_GetCCodeByCName = adoRsCCode.Fields("Cc").Value
    End If
        
LB_End:
    Call odba.closeRecordset(adoRsCCode)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    Set adoRsCCode = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetCCodeByCName:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetCCodeByCName", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||9351||fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||9351||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> ""|fffd||20a|O|fffd|F|fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd|^""|fffd|F|fffd|G|fffd||fffd||fffd|[|fffd|I|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/01 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_GetCNameByCCode( _
    ByVal strCCode As String _
) As String
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRsCountry As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    fg_GetCNameByCCode = ""
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRsCountry, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    '|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||8351||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||64fe|
    strSQL = "SELECT  EnglishName as En"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".GeCountry tbl "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(CountryCode) = " & fg_AddSingleQuotation(UCase$(strCCode))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRsCountry)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    '|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||188||fffd|v|fffd||fffd||fffd||9351||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    fg_GetCNameByCCode = adoRsCountry.Fields("En").Value
        
LB_End:
    
    Call odba.closeRecordset(adoRsCountry)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    Set adoRsCountry = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetCNameByCCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetCNameByCCode", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|V|fffd|R|fffd|[|fffd|h(2005/12|fffd|{|fffd|s)|fffd||302|b|fffd|r|fffd|u|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V/|fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|b|fffd|r|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   2005/12|fffd|{|fffd|s|fffd||fffd|R3|fffd||fffd||fffd||fffd||216||689||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2005/10/28 : Knowlbo S.Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_GetReplacePastAcCode()
    Dim intIx As Integer
    Dim lngTokenIndex As Long

    g_strPastAcCodeCSV = ""
    g_strReplaceAcCodeCSV = ""

    intIx = c_intDscrptCategorySettingDataRow
    Do While wsSettings.Cells(intIx, 3).Value <> "" '|fffd||fffd||fffd||fffd||216||682||fffd||fffd||d4482||142||202||fffd||fffd||fffd|
        ''PastCode|fffd||fffd||fffd||fffd||216||fffd|Code|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd|
        If wsSettings.Cells(intIx, 16).Value <> "" Then
            lngTokenIndex = fg_GetIndexFromTokenInCSV(wsSettings.Cells(intIx, 3).Value, g_strReplaceAcCodeCSV)
            If lngTokenIndex >= 0 Then
                ''|fffd|o|fffd|^|fffd||fffd||fffd||fffd|
            Else
                If (g_strPastAcCodeCSV <> "") Then
                    g_strPastAcCodeCSV = g_strPastAcCodeCSV & ","
                    g_strReplaceAcCodeCSV = g_strReplaceAcCodeCSV & ","
                End If
                g_strPastAcCodeCSV = g_strPastAcCodeCSV & wsSettings.Cells(intIx, 16).Value
                g_strReplaceAcCodeCSV = g_strReplaceAcCodeCSV & wsSettings.Cells(intIx, 3).Value
            End If
        End If
        intIx = intIx + 1
    Loop
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   2005/12|fffd||fffd||fffd|{|fffd||30a||fffd||fffd||fffd||216||689||fffd||fffd||3d1||389||fffd||fffd|R|fffd||fffd||fffd|o|fffd|[|fffd|g
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|`|fffd|F|fffd|b|fffd|N|fffd||38f||6c3|R|fffd|[|fffd|h
'   (2)<String |fffd|^> |fffd||389||fffd||fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)2005/12|fffd||fffd||fffd|{|fffd||30a||fffd||fffd||fffd||216||689||fffd||fffd||3d1||389||fffd||fffd||141|A|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|R|fffd||fffd||fffd|o|fffd|[|fffd|g|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h  False:|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|i|fffd|g|fffd|p|fffd|s|fffd||81|j
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||30f||a347||fffd|A|fffd||389||fffd||fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2005/10/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_IsExistingAcCode( _
    ByRef strCheckCode As String, _
    ByRef strReplaceCode As String _
) As Boolean
    
    Dim strMSG As String
    Dim lngTokenIndex As Long
    Dim strReplace As String

    fg_IsExistingAcCode = False
    If strCheckCode = "" Then Exit Function

    If Left$(strCheckCode, 2) <> "20" And Left$(strCheckCode, 2) <> "30" And Left$(strCheckCode, 2) <> "50" Then
        ''|fffd|u|fffd||fffd||fffd||38f||6c3|R|fffd|[|fffd|h|fffd||142||202||fffd|
        fg_IsExistingAcCode = True
        Exit Function
    End If

    lngTokenIndex = fg_GetIndexFromTokenInCSV(strCheckCode, g_strPastAcCodeCSV)
    If lngTokenIndex >= 0 Then
        strReplaceCode = fg_GetTokenFromIndexInCSV(lngTokenIndex, g_strReplaceAcCodeCSV)
    Else
        fg_IsExistingAcCode = True
    End If

    Exit Function
End Function

''<<<2015.10.09 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|O|fffd|o|fffd||fffd||fffd||242||fffd||fffd||fffd|
'''<<<2013.02.27 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
''-----------------------------------------------------------------
''  |fffd|T|fffd|v
''   |fffd||38f||6d3||fffd||fffd|t|fffd||314|N|fffd|x|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
''   (1)<Date |fffd|^> |fffd||38f||6d3||fffd||fffd|t
''  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
''   (1)|fffd||38f||6d3||fffd||fffd|t|fffd||314|N|fffd|x|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''  |fffd||7c2||fffd|l
''   (1)<Integer |fffd|^> |fffd|N|fffd|x
''  |fffd||fffd||fffd|l
''   |fffd||202||fffd|
''  |fffd||3cd|X|fffd||fffd||fffd||fffd|
''   2013/02/27 : |fffd|n|7c97|S|fffd|q : |fffd|V|fffd|K|fffd||c42c|
''   2013/07/31 : |fffd|n|7c97|S|fffd|q : |fffd||38f||6d3||fffd||fffd|t|fffd||fffd||fffd||fffd||314|N|fffd|x|fffd||30e||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''-----------------------------------------------------------------
'Public Function _
'fg_GetFiscalYear( _
'    dtTargetDate As Date _
') As Integer
'
'    Dim objSheetAccess As New clsSheetAccess
'    Dim objRs As ADODB.Recordset
'    Dim strSQL As String
'    Dim intFiscalYear As Integer
'    Dim strMSG As String
'
'    Call objSheetAccess.CreateConnection
'    Set objRs = New ADODB.Recordset
'
'    strSQL = ""
'    strSQL = strSQL & " SELECT F.* FROM [FiscalYear$] F" & vbNewLine
'    strSQL = strSQL & " WHERE" & vbNewLine
'    ''<<<2013.07.31 Mod By Y.Watanabe |fffd||38f||6d3||fffd||fffd|t|fffd||fffd||fffd||fffd||314|N|fffd|x|fffd||30e||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    strSQL = strSQL & " " & CLng(dtTargetDate) & " BETWEEN F.StartDate AND F.EndDate" & vbNewLine
''    strSQL = strSQL & " #" & dtTargetDate & "# BETWEEN F.StartDate AND F.EndDate" & vbNewLine
'    ''>>>2013.07.31 Mod By Y.Watanabe |fffd||38f||6d3||fffd||fffd|t|fffd||fffd||fffd||fffd||314|N|fffd|x|fffd||30e||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''    Call g_objLog.PrintOut(ID_NKFAS, strSQL, Err, LEVEL_SQL)
'
'    objRs.Open strSQL, objSheetAccess.Connection, adOpenStatic, adLockOptimistic, adCmdText
'
'    If objRs.EOF = False Then
'        If objRs.RecordCount = 1 Then
'            intFiscalYear = CInt(objRs.Fields("FiscalYear").Value)
'        Else
'            strMSG = c_strMSG_FISCALYEAR_ERR
'            GoTo LBL_ERR
'        End If
'    Else
'        strMSG = c_strMSG_FISCALYEAR_ERR
'        GoTo LBL_ERR
'    End If
'
'    Call objRs.Close
'    Set objRs = Nothing
'
'    fg_GetFiscalYear = intFiscalYear
'LB_End:
'    Call objSheetAccess.CloseConnection
'    Exit Function
'
'LBL_ERR:
'    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetFiscalYear:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
'    sg_MsgBoxError "fg_GetFiscalYear", strMSG
'    GoTo LB_End
'
'End Function
'
''-----------------------------------------------------------------
''  |fffd|T|fffd|v
''   |fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
''   (1)<Integer |fffd|^> |fffd|N|fffd|x
''  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
''   (1)|fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''  |fffd||7c2||fffd|l
''   (1)<Date |fffd|^> |fffd||fffd||fffd||fffd|
''  |fffd||fffd||fffd|l
''   |fffd||202||fffd|
''  |fffd||3cd|X|fffd||fffd||fffd||fffd|
''   2013/02/27 : |fffd|n|7c97|S|fffd|q : |fffd|V|fffd|K|fffd||c42c|
''-----------------------------------------------------------------
'Public Function _
'fg_GetStartOfYear( _
'    intFiscalYear As Integer _
') As Date
'
'    Dim objSheetAccess As New clsSheetAccess
'    Dim objRs As ADODB.Recordset
'    Dim strSQL As String
'    Dim dtStartOfYear As Date
'    Dim strMSG As String
'
'    Call objSheetAccess.CreateConnection
'    Set objRs = New ADODB.Recordset
'
'    strSQL = ""
'    strSQL = strSQL & " SELECT F.* FROM [FiscalYear$] F" & vbNewLine
'    strSQL = strSQL & " WHERE" & vbNewLine
'    strSQL = strSQL & " F.FiscalYear = " & intFiscalYear & vbNewLine
''    Call g_objLog.PrintOut(ID_NKFAS, strSQL, Err, LEVEL_SQL)
'
'    objRs.Open strSQL, objSheetAccess.Connection, adOpenStatic, adLockOptimistic, adCmdText
'
'    If objRs.EOF = False Then
'        If objRs.RecordCount = 1 Then
'            dtStartOfYear = CDate(objRs.Fields("StartDate").Value)
'        Else
'            strMSG = c_strMSG_FISCALYEAR_ERR
'            GoTo LBL_ERR
'        End If
'    Else
'        strMSG = c_strMSG_FISCALYEAR_ERR
'        GoTo LBL_ERR
'    End If
'
'    Call objRs.Close
'    Set objRs = Nothing
'
'    fg_GetStartOfYear = dtStartOfYear
'LB_End:
'    Call objSheetAccess.CloseConnection
'    Exit Function
'
'LBL_ERR:
'    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetStartOfYear:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
'    sg_MsgBoxError "fg_GetStartOfYear", strMSG
'    GoTo LB_End
'
'End Function
'
''-----------------------------------------------------------------
''  |fffd|T|fffd|v
''   |fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
''   (1)<Integer |fffd|^> |fffd|N|fffd|x
''  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
''   (1)|fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''  |fffd||7c2||fffd|l
''   (1)<Date |fffd|^> |fffd||fffd||fffd||fffd|
''  |fffd||fffd||fffd|l
''   |fffd||202||fffd|
''  |fffd||3cd|X|fffd||fffd||fffd||fffd|
''   2013/02/27 : |fffd|n|7c97|S|fffd|q : |fffd|V|fffd|K|fffd||c42c|
''-----------------------------------------------------------------
'Public Function _
'fg_GetEndOfYear( _
'    intFiscalYear As Integer _
') As Date
'
'    Dim objSheetAccess As New clsSheetAccess
'    Dim objRs As ADODB.Recordset
'    Dim strSQL As String
'    Dim dtEndOfYear As Date
'    Dim strMSG As String
'
'    Call objSheetAccess.CreateConnection
'    Set objRs = New ADODB.Recordset
'
'    strSQL = ""
'    strSQL = strSQL & " SELECT F.* FROM [FiscalYear$] F" & vbNewLine
'    strSQL = strSQL & " WHERE" & vbNewLine
'    strSQL = strSQL & " F.FiscalYear = " & intFiscalYear & vbNewLine
''    Call g_objLog.PrintOut(ID_NKFAS, strSQL, Err, LEVEL_SQL)
'
'    objRs.Open strSQL, objSheetAccess.Connection, adOpenStatic, adLockOptimistic, adCmdText
'
'    If objRs.EOF = False Then
'        If objRs.RecordCount = 1 Then
'            dtEndOfYear = CDate(objRs.Fields("EndDate").Value)
'        Else
'            strMSG = c_strMSG_FISCALYEAR_ERR
'            GoTo LBL_ERR
'        End If
'    Else
'        strMSG = c_strMSG_FISCALYEAR_ERR
'        GoTo LBL_ERR
'    End If
'
'    Call objRs.Close
'    Set objRs = Nothing
'
'    fg_GetEndOfYear = dtEndOfYear
'LB_End:
'    Call objSheetAccess.CloseConnection
'    Exit Function
'
'LBL_ERR:
'    Call g_objLog.PrintOut(ID_NKFAS, "fg_GetEndOfYear:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
'    sg_MsgBoxError "fg_GetEndOfYear", strMSG
'    GoTo LB_End
'
'End Function
'''>>>2013.02.27 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
''>>>2015.10.09 Mod By Y.Watanabe |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|O|fffd|o|fffd||fffd||fffd||242||fffd||fffd||fffd|
Attribute VB_Name = "modGlobalEnum"
'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||30e||fffd||782||fffd||fffd||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/08/09|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|V|fffd|K|fffd||c42c|
'    2002/10/18|fffd|Fknowlbo Y.Inomata|fffd|FBook|fffd||fffd||fffd||315||3c9||fffd||fffd||242||fffd||fffd|Enum|fffd||fffd||fffd||682||fffd||3cd|X
'    2002/11/01|fffd|Fknowlbo Y.Inomata|fffd|F|fffd|e|fffd|X|fffd|g|fffd|p|fffd|h|fffd|c|fffd||fffd||1c9||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
'    2002/12/06|fffd|F(|fffd||fffd|)|fffd|i|fffd||fffd||fffd|{ |fffd|n|fffd||fffd| |fffd||fffd||fffd||fffd|F|fffd|p|fffd||a27b|
'    2002/11/05|fffd|Fknowlbo S.Suzuki|fffd|F|fffd||fffd||fffd|n|fffd||757|p|fffd|h|fffd|c|fffd||255||3cd|X
'-------------------------------------------------------------------------------
Option Explicit

Public Enum enumCallPlace
    ID_NULL = 0                 '|fffd||fffd||fffd||311||fffd||fffd|i|fffd||fffd||fffd||752||fffd|j
    '------------------------
'    ID_DomesticEdition = 1
'    ID_InternationalMainEdition = 2
'    ID_InternationalLocalEdition = 3
'    ID_AdministratorOnly = 4
'    ID_MonthlyReport = 5
'    ID_ProfitPlan = 6
'    ID_WorkTotal = 7
'    ID_OutputProfitTotalChange = 8
'    ID_OneYearExpectChange = 9
'    '------------------------
'    ID_Budget = 50
'    '------------------------
'    ID_FAADomesticEdition = 100
'    ID_FAALocalEdition = 101
    '------------------------
'    ID_TestCase = 200
    '================================================
    ID_NKFAS_SS = 100                'ID_|fffd||fffd||fffd|n|fffd||756|{|fffd||414||fffd|
    ID_NKFAS = 101                   'ID_|fffd||fffd||fffd|n|fffd||74c||fffd||fffd|n|fffd||fffd|
    ID_TEST = 200
    '================================================
End Enum

'-------------------------------------------------------------------------------
'  |fffd|T|fffd|v
'    LOG|fffd||242||342||fffd||fffd|o|fffd||fffd||fffd|A|fffd||fffd||fffd|e|fffd||fffd|`|fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'    LOG|fffd||242||342||fffd||fffd|o|fffd||fffd||fffd|A|fffd||fffd||fffd|e|fffd||fffd|`|fffd|^|fffd||30e||fffd||782||fffd||fffd|`|fffd||fffd||fffd||102||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2002/10/15|fffd|FKnowlbo Y.Inomata|fffd|F|fffd|V|fffd|K|fffd||c42c|
'-------------------------------------------------------------------------------
Public Enum LOGLEVEL
    LEVEL_ERROR = 0
    LEVEL_LOG = 1
    LEVEL_DEBUG = 2
    LEVEL_SQL = 3
End Enum

Attribute VB_Name = "modR3Interface"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'    |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| R3|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd|L|fffd||fffd||590||fffd|
'  |fffd||c42c||fffd||fffd|
'    Knowlbo Suzuki
'  |fffd||fffd||fffd|l
'    |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'    2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   R3|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd|w|fffd|b|fffd|_|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   R3|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd|w|fffd|b|fffd|_|fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<Double |fffd|^> |fffd|A|fffd|g|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||50d||fffd|
'   (2)<String |fffd|^> |fffd|`|fffd|[|fffd||fffd||fffd|t
'   (3)<String |fffd|^> |fffd|]|fffd|L|fffd||fffd||fffd|t
'   (4)<String |fffd|^> |fffd||289||fffd|
'   (5)<String |fffd|^> |fffd||fffd||fffd|Z|fffd||fffd||fffd|t
'   (6)<String |fffd|^> |fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsR3IFHeaderData
    m_dblRequestNo As Double        ''|fffd|A|fffd|g|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||50d||fffd|
    m_strLedgerDate As String       ''|fffd|`|fffd|[|fffd||fffd||fffd|t
    m_strPostDate As String         ''|fffd|]|fffd|L|fffd||fffd||fffd|t
    m_strCurrency As String         ''|fffd||289||fffd|
    m_strExChangeDate As String     ''|fffd||fffd||fffd|Z|fffd||fffd||fffd|t
    m_strRequestReferNo As String   ''|fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd|
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   R3|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd||fffd||fffd||5cd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   R3|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd||fffd||fffd||5cf||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|]|fffd|L|fffd|L|fffd|[
'   (2)<String |fffd|^> |fffd||fffd||fffd||fffd|Code
'   (3)<String |fffd|^> |fffd||fffd||fffd||5cb||fffd||fffd|z
'   (4)<String |fffd|^> GL|fffd||fffd||fffd||fffd|Code
'   (5)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||e3c0||fffd|z
'   (6)<String |fffd|^> |fffd|x|fffd||fffd||fffd||fffd||fffd||e3c0||fffd||fffd|
'   (7)<String |fffd|^> |fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
'   (8)<String |fffd|^> |fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g
'   (9)<String |fffd|^> |fffd||fffd||fffd||197||308||fffd|
'   (10)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
'   (11)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|w|fffd|}
'   (12)<String |fffd|^> WBS|fffd|v|fffd|f
'   (13)<String |fffd|^> |fffd|Q|fffd||fffd|Key1
'   (14)<String |fffd|^> |fffd|Q|fffd||fffd|Key2 2008/10/27 |fffd||1c9||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2006/04/27 : Knowlbo Suzuki : |fffd|Q|fffd||fffd|Key1|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Type clsR3IFDetailData
    m_intPostKey As Integer         ''|fffd|]|fffd|L|fffd|L|fffd|[
    m_strAcCode As String           ''|fffd||fffd||fffd||fffd|Code
    m_strAmount As String           ''|fffd||fffd||fffd||5cb||fffd||fffd|z
    m_strGLAcCode As String         ''GL|fffd||fffd||fffd||fffd|Code
    m_strStdDiscount As String      ''|fffd||fffd||fffd||fffd||fffd||e3c0||fffd|z
    m_strStdPaymentDate As String   ''|fffd|x|fffd||fffd||fffd||fffd||fffd||e3c0||fffd||fffd|
    m_strSortKey As String          ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
    m_strText As String             ''|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g
    m_strAreaCode As String         ''|fffd||fffd||fffd||197||308||fffd|
    m_strCostCenter As String       ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
    m_strInternalDirect As String   ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
    m_strWBSCode As String          ''WBS|fffd|v|fffd|f
    m_strReferKey1 As String        ''|fffd|Q|fffd||fffd|Key1
    m_strReferKey2 As String        ''|fffd|Q|fffd||fffd|Key2  2008/10/27 |fffd||1c9||fffd|
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|A|fffd|g|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||50d||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<Double |fffd|^> |fffd|A|fffd|g|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||50d||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|A|fffd|g|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetRequestNumber( _
    ByRef adoCn As ADODB.Connection, _
    ByRef dblRequestNum As Double _
) As Boolean

    Dim adoPrm As ADODB.Parameter
    Dim adoCmd As ADODB.Command
    Dim strMSG As String
    Dim dblNum As Double

    fg_GetRequestNumber = False
    Set adoPrm = New ADODB.Parameter
    Set adoCmd = New ADODB.Command
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    adoCmd.ActiveConnection = adoCn
    adoCmd.CommandText = "NKFA03.GetRequestNumber"
    adoCmd.CommandType = adCmdStoredProc
    
    Set adoPrm = adoCmd.CreateParameter("LoginUser", adVarChar, adParamInput, , g_strLoginId)
    adoCmd.Parameters(1) = adoPrm

    Set adoPrm = adoCmd.CreateParameter("InterfaceNumber", adVarChar, adParamInput, , "1010")
    adoCmd.Parameters(2) = adoPrm

    Set adoPrm = adoCmd.CreateParameter("SystemNumber", adVarChar, adParamInput, , "NKFA")
    adoCmd.Parameters(3) = adoPrm

    Set adoPrm = adoCmd.CreateParameter("RequestNumber", adDecimal, adParamOutput, , dblNum)
    adoCmd.Parameters(4) = adoPrm

    adoCmd.Execute

    If adoCmd.Parameters(0).Value <> 0 Then GoTo LBL_ERR
    dblRequestNum = adoCmd.Parameters(4).Value

    On Error GoTo 0
    fg_GetRequestNumber = True

LBL_END:
    Set adoPrm = Nothing
    Set adoCmd = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetRequestNumber:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetRequestNumber", strMSG
    
    On Error GoTo LBL_END
End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<String |fffd|^> |fffd||38f||fffd|LedgerCode
'   (3)<Date |fffd|^> |fffd|o|fffd|[|fffd||38f||6cc||fffd|
'   (4)<String |fffd|^> |fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetRequestReferNumber( _
    ByRef adoCn As ADODB.Connection, _
    ByVal strLedgerCode As String, _
    ByVal datTarget As Date, _
    ByRef strReferNum As String _
) As Boolean

    Dim adoPrm As ADODB.Parameter
    Dim adoCmd As ADODB.Command
    Dim strMSG As String
    Dim strData As String

    fg_GetRequestReferNumber = False
    Set adoPrm = New ADODB.Parameter
    Set adoCmd = New ADODB.Command
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR
    adoCmd.ActiveConnection = adoCn
    adoCmd.CommandText = "NKFA03.GetRequestReferNumber"
    adoCmd.CommandType = adCmdStoredProc
    
    Set adoPrm = adoCmd.CreateParameter("OfficeCode", adChar, adParamInput, , g_strOfficeCode)
    adoCmd.Parameters(1) = adoPrm

    Set adoPrm = adoCmd.CreateParameter("LedgerCode", adChar, adParamInput, , strLedgerCode)
    adoCmd.Parameters(2) = adoPrm

    Set adoPrm = adoCmd.CreateParameter("TargetDate", adDBDate, adParamInput, , datTarget)
    adoCmd.Parameters(3) = adoPrm

    Set adoPrm = adoCmd.CreateParameter("RequestReferNumber", adChar, adParamOutput, , strData)
    adoCmd.Parameters(4) = adoPrm

    adoCmd.Execute

    If adoCmd.Parameters(0).Value <> 0 Then GoTo LBL_ERR
    strReferNum = adoCmd.Parameters(4).Value

    On Error GoTo 0
    fg_GetRequestReferNumber = True

LBL_END:
    Set adoPrm = Nothing
    Set adoCmd = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetRequestReferNumber:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetRequestReferNumber", strMSG
    
    On Error GoTo LBL_END
End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   R3|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34f||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<Date |fffd|^> |fffd|o|fffd|[|fffd||38f||6cc||fffd|
'   (4)<Boolean |fffd|^> |fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cc||fffd||fffd||30f|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||fffd|A|fffd|gDB|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_CreateR3AccountsData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal datTarget As Date, _
    ByVal blnHistory As Boolean _
) As Boolean

    Dim strSQL As String
    Dim lngIx As Long
    Dim datValue As Date
    Dim strMSG As String
    Dim strPostDate As String

    fg_CreateR3AccountsData = False
    
    ''|fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||50e||64fe|
    If fg_GetR3FIPeriod(strPostDate) = False Then Exit Function
    
    strMSG = "DBInsertError"

    ''CASHBOOK ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_CB) = True Then
        For lngIx = 0 To UBound(g_typAryCBInfo)
            If g_typAryCBInfo(lngIx).m_intPurpose = 0 Then
                If fg_SetR3AccountsData(adoCn, _
                                        objdba, _
                                        g_typAryCBInfo(lngIx).m_strCode, _
                                        datTarget, _
                                        g_typAryCBInfo(lngIx).m_strCurrency, _
                                        g_typAryCBInfo(lngIx).m_strAcCode, _
                                        strPostDate, _
                                        blnHistory) = False Then GoTo LBL_ERR
            End If
        Next
    End If

    ''BANKBOOK ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_BB) = True Then
        For lngIx = 0 To UBound(g_typAryBBInfo)
            If g_typAryBBInfo(lngIx).m_intPurpose = 0 Then
                If fg_SetR3AccountsData(adoCn, _
                                        objdba, _
                                        g_typAryBBInfo(lngIx).m_strCode, _
                                        datTarget, _
                                        g_typAryBBInfo(lngIx).m_strCurrency, _
                                        g_typAryBBInfo(lngIx).m_strAcCode, _
                                        strPostDate, _
                                        blnHistory) = False Then GoTo LBL_ERR
            End If
        Next
    End If

    ''TRANSFER ------------------------------------------------------------------------
    If fg_IsSetCommonInfo(GCMN_TR) = True Then
        For lngIx = 0 To UBound(g_typAryTRInfo)
            If g_typAryTRInfo(lngIx).m_intPurpose = 0 Then
                If fg_SetR3AccountsData(adoCn, _
                                        objdba, _
                                        g_typAryTRInfo(lngIx).m_strCode, _
                                        datTarget, _
                                        g_typAryTRInfo(lngIx).m_strCurrency, _
                                        "", _
                                        strPostDate, _
                                        blnHistory) = False Then GoTo LBL_ERR
            End If
        Next
    End If

    On Error GoTo 0
    
    fg_CreateR3AccountsData = True
LBL_END:
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_CreateR3AccountsData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_R3_FAILIMPORTFUNC, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Function

   
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd||fffd|Book|fffd||fffd|R3|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34f||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<String |fffd|^> |fffd||38f||fffd|LedgerCode
'   (4)<Date |fffd|^> |fffd|o|fffd|[|fffd||38f||6cc||fffd|
'   (5)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (6)<String |fffd|^> |fffd||38f||fffd|Book|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'   (7)<String |fffd|^> |fffd|]|fffd|L|fffd||fffd||fffd|t
'   (8)<Boolean |fffd|^> |fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|Book|fffd||fffd|R3|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/10/07 : Knowlbo Suzuki : LedgerDate|fffd||143|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|l|fffd|C|fffd||fffd|
'   2003/11/20 : Knowlbo Suzuki : AcCode|fffd||fffd|20152201|fffd||30f||a347||fffd|A|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[|fffd||fffd|OfficeCode|fffd||255||3cd|X
'   2003/11/21 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||289||742||30b||fffd||fffd|z|fffd||fffd||fffd||fffd|(1|fffd||209||fffd||fffd||fffd||fffd|P|fffd||252||fffd||fffd||fffd|)
'   2004/10/29 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||216||682||312|u|fffd||fffd||fffd||fffd|(20152201|fffd||fffd|20152261, 20155103|fffd||fffd|20155163)
'   2005/04/04 : Knowlbo Suzuki : AcCode|fffd||fffd|20152201(20152261)|fffd||30f||a347||fffd|A|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[|fffd||fffd|WBSCode|fffd||255||3cd|X
'                                 AcCode|fffd||fffd|20152201(20152261)|fffd||30f||a347||fffd|A|fffd||fffd||fffd||fffd|Text|fffd||fffd||28f||fffd||fffd|ConnCode|fffd||255||3cd|X
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'   2006/04/27 : Knowlbo Suzuki : |fffd|\|fffd|[|fffd|g|fffd|L|fffd|[WBS|fffd||752||82a8||fffd||fffd||1c9||fffd|
'                                 |fffd|\|fffd|[|fffd|g|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||752||fffd||fffd||1c9||fffd|
'                                 |fffd|Q|fffd||fffd|Key1|fffd||fffd|LedgerCode+LedgerRecID|fffd||1c9||fffd|
'   2008/07/29 : katoh : |fffd||fffd||fffd||fffd||216||682||312|u|fffd||fffd||fffd||fffd|(90210701|fffd||fffd|90002082, 90210702|fffd||fffd|90002083)
'                        |fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g|fffd||fffd|Details|fffd||fffd|\|fffd||fffd|
'   2008/10/27 : katoh : |fffd||fffd||fffd||fffd||216||682||fffd|(20155102,20155163)|fffd||30f||a347||fffd|A|fffd|Q|fffd||183|L|fffd|[2|fffd||fffd|Details|fffd||fffd|\|fffd||fffd|
'
'-----------------------------------------------------------------
Public Function _
fg_SetR3AccountsData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByVal strLedgerCode As String, _
    ByVal datTarget As Date, _
    ByVal strCurrency As String, _
    ByVal strCBAcCode As String, _
    ByVal strPostDate As String, _
    ByVal blnHistory As Boolean _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim datPrNow As Date
    Dim datValue As Date
    Dim datLedgerDate As Date
    Dim blnSetHeader As Boolean
    Dim blnOutput As Boolean
    Dim strDbTable As String
    Dim lngRecCount As Long
    Dim lngIx As Long
    Dim lngAryIx As Long
    Dim typR3Header As clsR3IFHeaderData
    Dim typAryR3Detail() As clsR3IFDetailData
    Dim strData As String
    Dim strWBS As String
    Dim intPostKey As Integer
    Dim strAcCode As String
    Dim curAmount As Currency
    Dim curChkDecimal As Currency
    Dim strReferKey1 As String
    
    fg_SetR3AccountsData = False
    datPrNow = Now()

    Select Case Left$(strLedgerCode, 2)
    Case "CB" ''CashBook
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    Set adoRs = New ADODB.Recordset
    strMSG = "DataBase Error"

    blnSetHeader = False
    
    ''Book|fffd||fffd||fffd||5cf||fffd||fffd||64fe|SQL
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
    strSQL = strSQL & " AND tb.IFSendDate Is NULL "
    
On Error GoTo LBL_ERR
    
    ''|fffd||fffd||fffd||fffd||fffd||64fe|
    objdba.SQLString = "SELECT COUNT(*) AS CNT FROM (" & strSQL & ") x "
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    lngRecCount = adoRs.Fields("CNT").Value
    Call objdba.closeRecordset(adoRs)

    If lngRecCount = 0 Then ''|fffd|Y|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||202||fffd|
        fg_SetR3AccountsData = True
        Set adoRs = Nothing
        Exit Function
    End If
    
    ''|fffd|f|fffd|[|fffd|^|fffd||64fe|
    objdba.SQLString = strSQL & " ORDER BY tb.LedgerDate"
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    
    For lngIx = 0 To lngRecCount - 1
        DoEvents
        curAmount = 0
        ''|fffd|]|fffd|L|fffd|L|fffd|[|fffd|i|fffd||fffd|{|fffd||752||fffd|j
        If Not IsNull(adoRs.Fields("Paid").Value) And adoRs.Fields("Paid").Value <> 0 Then
            intPostKey = 40
            curAmount = adoRs.Fields("Paid").Value
        End If
        If Not IsNull(adoRs.Fields("Received").Value) And adoRs.Fields("Received").Value <> 0 Then
            intPostKey = 50
            curAmount = adoRs.Fields("Received").Value
        End If
        ''Paid/Received |fffd|`|fffd|F|fffd|b|fffd|N |fffd|o|fffd||fffd||fffd|O|fffd||fffd|I/F|fffd||fffd||fffd||202||fffd|
        If curAmount <> 0 Then

            ''Header|fffd||fffd||fffd||c42c|-----------------------------------------------------
            If blnSetHeader = False Then
                lngAryIx = -1
                datLedgerDate = adoRs.Fields("LedgerDate").Value
                ''|fffd|A|fffd|g|fffd||2d7||fffd||fffd||50d||fffd|
                If fg_GetRequestNumber(adoCn, typR3Header.m_dblRequestNo) <> True Then GoTo LBL_ERR
                ''|fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd|
                If fg_GetRequestReferNumber(adoCn, strLedgerCode, datLedgerDate, _
                                         typR3Header.m_strRequestReferNo) <> True Then GoTo LBL_ERR
                ''|fffd||289||fffd|
                typR3Header.m_strCurrency = strCurrency

                ''|fffd|`|fffd|[|fffd||fffd||fffd|t
                strData = Format$(datLedgerDate, "yyyy")
                strData = strData & Format$(datLedgerDate, "mm")
                strData = strData & Format$(datLedgerDate, "dd")
                typR3Header.m_strLedgerDate = strData

                ''|fffd|]|fffd|L|fffd||fffd||fffd|t
                typR3Header.m_strPostDate = strPostDate

                ''|fffd||fffd||fffd|Z|fffd||fffd||fffd|t
                datValue = DateValue(Year(datLedgerDate) & "/" & Month(datLedgerDate) & "/1") ''|fffd||fffd||fffd||fffd||fffd|P|fffd||fffd|
                datValue = DateAdd("d", -1, datValue) ''|fffd|O|fffd||fffd||fffd||fffd|
                strData = Format$(datValue, "yyyy")
                strData = strData & Format$(datValue, "mm")
                strData = strData & Format$(datValue, "dd")
                typR3Header.m_strExChangeDate = strData

                blnSetHeader = True
            End If

            ''Detail|fffd||fffd||fffd||c42c|-----------------------------------------------------
            lngAryIx = lngAryIx + 1
            ReDim Preserve typAryR3Detail(lngAryIx)

            ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||289||742||30b||fffd||fffd|z|fffd||fffd||fffd||fffd||fffd|i|fffd|P|fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd|I/F|fffd||142|O|fffd||242||202||fffd||302||141|A|fffd||fffd||fffd||fffd||fffd|I|fffd||242|P|fffd||242||fffd||fffd||fffd|j
            curChkDecimal = curAmount
            If curAmount < 0 Then
                curChkDecimal = curChkDecimal * -1
            End If
            If curChkDecimal < 1 Then
                If fg_GetIndexFromTokenInCSV(strCurrency, g_strInvalidDecimalCurrency) >= 0 Then
                    If curAmount < 0 Then
                        curAmount = -1
                    Else
                        curAmount = 1
                    End If
                End If
            End If

            ''|fffd||fffd|{|fffd||752||fffd| ----------------------------------------------------------
            typAryR3Detail(lngAryIx).m_intPostKey = intPostKey                                  ''|fffd|]|fffd|L|fffd|L|fffd|[
            strAcCode = adoRs.Fields("AccountCode").Value
            typAryR3Detail(lngAryIx).m_strAcCode = strAcCode                                    ''|fffd||fffd||fffd||fffd|Code
            typAryR3Detail(lngAryIx).m_strAmount = CStr(curAmount)                              ''|fffd||fffd||fffd||5cb||fffd||fffd|z
            If Not IsNull(adoRs.Fields("LedgerLinkCode").Value) Then
                typAryR3Detail(lngAryIx).m_strSortKey = adoRs.Fields("LedgerLinkCode").Value    ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
            End If
            If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
                strData = adoRs.Fields("ConnectionCode").Value & " "
                strData = strData & adoRs.Fields("ConnectionName").Value
                typAryR3Detail(lngAryIx).m_strText = Left$(strData, 50)                         ''|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g
            Else
                ''|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g|fffd||fffd|Details|fffd||1c9||fffd| 2008/07/29
                If Not IsNull(adoRs.Fields("Details").Value) Then
                    strData = adoRs.Fields("Details").Value
                    typAryR3Detail(lngAryIx).m_strText = Left$(strData, 50)
                End If
            End If
                
            strWBS = adoRs.Fields("WBSCode").Value
            If Left$(strAcCode, 1) = "8" Or Left$(strAcCode, 1) = "9" Then
                typAryR3Detail(lngAryIx).m_strAreaCode = ""                                     ''|fffd||fffd||fffd||197||308||fffd|
                If Left$(strWBS, 1) = "X" Or Left$(strWBS, 1) = "Z" Then
                    typAryR3Detail(lngAryIx).m_strCostCenter = strWBS                           ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
                ElseIf Left$(strWBS, 1) = "Y" Then
                    typAryR3Detail(lngAryIx).m_strInternalDirect = strWBS                       ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
                Else
                    typAryR3Detail(lngAryIx).m_strWBSCode = strWBS                              ''WBS|fffd|v|fffd|f
                End If
            Else
                typAryR3Detail(lngAryIx).m_strAreaCode = "JA"                                   ''|fffd||fffd||fffd||197||308||fffd|
            End If
            
            '' Add 2006/04/27 |fffd|Q|fffd||fffd|Key1|fffd||fffd|LedgerCode + LedgerRecID|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|
            strReferKey1 = strLedgerCode & CStr(adoRs.Fields("ID").Value)
            strReferKey1 = Left$(strReferKey1, 12)
            typAryR3Detail(lngAryIx).m_strReferKey1 = strReferKey1                              ''|fffd|Q|fffd||fffd|Key1
            
            ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||289||74c||fffd||fffd||fffd||fffd|p|fffd|^|fffd||fffd|-----------------------------------------------------
            If Left$(strAcCode, 4) = "2019" Then
                If intPostKey = 40 Then
                    typAryR3Detail(lngAryIx).m_intPostKey = 1                                   ''|fffd|]|fffd|L|fffd|L|fffd|[
                    typAryR3Detail(lngAryIx).m_strStdDiscount = "0"                             ''|fffd||fffd||fffd||fffd||fffd||e3c0||fffd|z
                Else
                    typAryR3Detail(lngAryIx).m_intPostKey = 31                                  ''|fffd|]|fffd|L|fffd|L|fffd|[
                    typAryR3Detail(lngAryIx).m_strStdDiscount = "0"                             ''|fffd||fffd||fffd||fffd||fffd||e3c0||fffd|z
                End If
                typAryR3Detail(lngAryIx).m_strAcCode = "I" & g_strOfficeCode & "01"             ''|fffd||fffd||fffd||fffd|Code
                If strAcCode <> "20190000" And strAcCode <> "20191000" Then
                    typAryR3Detail(lngAryIx).m_strGLAcCode = strAcCode                          ''GL|fffd||fffd||fffd||fffd|Code
                End If
                datValue = DateValue(Year(datLedgerDate) & "/" & Month(datLedgerDate) & "/1") ''|fffd||fffd||fffd||fffd||fffd|P|fffd||fffd|
                datValue = DateAdd("d", -1, datValue) ''|fffd|O|fffd||fffd||fffd||fffd|
                datValue = DateAdd("m", 1, datValue) ''|fffd||fffd||fffd||fffd||fffd||fffd|
                strData = Format$(datValue, "yyyy")
                strData = strData & Format$(datValue, "mm")
                strData = strData & Format$(datValue, "dd")
                typAryR3Detail(lngAryIx).m_strStdPaymentDate = strData                          ''|fffd|x|fffd||fffd||fffd||fffd||fffd||e3c0||fffd||fffd|
                If strAcCode = "20192000" Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                    typAryR3Detail(lngAryIx).m_strAcCode = "I" _
                            & Left$(adoRs.Fields("LedgerLinkCode").Value, 7) & "01"              ''|fffd||fffd||fffd||fffd|Code
                End If
                
                If strAcCode = "20194000" Or strAcCode = "20195000" Then                        ''|fffd||289||74c||fffd||fffd||fffd|SortKey|fffd||752||fffd|
                    ''|fffd||289||74c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||311||fffd||582||fffd||752||fffd|@OfficeCode+E+YYMMDD
                    strData = g_strOfficeCode & "E"
                    strData = strData & Format$(datLedgerDate, "yy")
                    strData = strData & Format$(datLedgerDate, "mm")
                    strData = strData & Format$(datLedgerDate, "dd")
                    typAryR3Detail(lngAryIx).m_strSortKey = strData                             ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
                End If
                '20060310 KATOH|fffd||1c9||fffd|
                If strAcCode = "20196000" Or strAcCode = "20197000" Then
                    typAryR3Detail(lngAryIx).m_strSortKey = strWBS                             ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
                End If

            End If

            ''|fffd||fffd||fffd||fffd||fffd|{|fffd||410||fffd||fffd|Z|fffd|p|fffd|^|fffd||fffd| ------------------------------------------------
            ''If strAcCode = "20155102" Or strAcCode = "20155103" Or strAcCode = "20152201" Then
            If strAcCode = "20155102" Or strAcCode = "20155163" Or strAcCode = "20152261" Then
                typAryR3Detail(lngAryIx).m_strSortKey = ""      ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
                If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
                    strData = adoRs.Fields("ConnectionCode").Value & " "
                    strData = strData & adoRs.Fields("ConnectionName").Value
                    typAryR3Detail(lngAryIx).m_strSortKey = Left$(strData, 18)                  ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
                End If
                
                If strAcCode = "20152261" Then ''2005/04/04 WBSCode|fffd||255||3cd|X
                    typAryR3Detail(lngAryIx).m_strSortKey = strWBS
                End If
                
                If strAcCode <> "20152261" Then '' 2005/04/04 20152261|fffd||316||fffd||fffd||fffd|Text|fffd||352||28f||fffd||752||fffd||255||3cd|X
                    typAryR3Detail(lngAryIx).m_strText = strWBS                                 ''|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g
                    If Not IsNull(adoRs.Fields("Details").Value) Then
                        strData = adoRs.Fields("Details").Value                                 ''|fffd|Q|fffd||183|L|fffd|[|fffd|Q 2008/10/27|fffd||1c9||fffd|
                        typAryR3Detail(lngAryIx).m_strReferKey2 = Left$(strData, 12)
                    End If
                End If
            End If

            ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||fffd||fffd||283|p|fffd|^|fffd||fffd| ----------------------------------------------
            If Left$(strAcCode, 2) = "80" Or Left$(strAcCode, 2) = "90" Then
                strData = Left$(strAcCode, 4)
                If strData = "8011" Or strData = "8014" Or strData = "8015" Or _
                   strData = "8019" Or strData = "8020" Or strData = "8062" Or _
                   strData = "9011" Or strData = "9016" Or strData = "9021" Or _
                   strData = "9022" Or strData = "9058" Or strData = "9071" Or _
                   strData = "9083" Or strData = "9084" Then
                    typAryR3Detail(lngAryIx).m_strCostCenter = "XJA0000"                        ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
                    typAryR3Detail(lngAryIx).m_strInternalDirect = ""                           ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
                    typAryR3Detail(lngAryIx).m_strWBSCode = ""                                  ''WBS|fffd|v|fffd|f
                End If
            End If

            ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[|fffd||fffd||fffd||283|p|fffd|^|fffd||fffd| ----------------------------------------------
            If strAcCode = "20106001" Or strAcCode = "50185001" Or _
               strAcCode = "50185101" Or strAcCode = "50185105" Or _
               strAcCode = "50185106" Or strAcCode = "50185201" Or _
               strAcCode = "50026001" Or strAcCode = "50056101" Then
                '' 2006/04/27 Add 50185101, 50185105, 50185106, 50185201
                typAryR3Detail(lngAryIx).m_strSortKey = strWBS                                  ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
            End If

            ''|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g|fffd||fffd||fffd||283|p|fffd|^|fffd||fffd| ----------------------------------------------
            If strAcCode = "20505101" Or strAcCode = "20505102" Then
                typAryR3Detail(lngAryIx).m_strText = strWBS                                     ''|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g
            End If

            ''|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||3cd|X|fffd||154|p|fffd|~2005/09/30---->>
            ''|fffd||fffd||fffd||fffd||216||695||3cd|X|fffd||389||fffd|2004/10/28 ------------------------------------------------
            ''If strAcCode = "20155103" Then
            ''    typAryR3Detail(lngAryIx).m_strAcCode = "20155163"                              ''|fffd||fffd||fffd||fffd|Code|fffd||3cd|X
            ''End If
            ''If strAcCode = "20152201" Then
            ''    typAryR3Detail(lngAryIx).m_strAcCode = "20152261"                              ''|fffd||fffd||fffd||fffd|Code|fffd||3cd|X
            ''End If
            ''|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||3cd|X|fffd||154|p|fffd|~2005/09/30----<<
'            ''|fffd||fffd||fffd||fffd||216||695||3cd|X|fffd||389||fffd|2008/07/29 ------------------------------------------------
'            If strAcCode = "90210701" Then
'                typAryR3Detail(lngAryIx).m_strAcCode = "90002082"                              ''|fffd||fffd||fffd||fffd|Code|fffd||3cd|X
'            End If
'            If strAcCode = "90210702" Then
'                typAryR3Detail(lngAryIx).m_strAcCode = "90002083"                              ''|fffd||fffd||fffd||fffd|Code|fffd||3cd|X
'            End If
            
'            ''|fffd||fffd||fffd||fffd||216||68d||fffd||fffd||683|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd||3cd|X|fffd||389||fffd|2009/03/30 ----------------------------------
            If strAcCode = "90210701" Then
                typAryR3Detail(lngAryIx).m_strAcCode = "90002082"                              ''|fffd||fffd||fffd||fffd|Code|fffd||3cd|X
            
                If Left$(strWBS, 1) = "X" Or Left$(strWBS, 1) = "Z" Then
                    typAryR3Detail(lngAryIx).m_strCostCenter = strWBS                           ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
                    typAryR3Detail(lngAryIx).m_strInternalDirect = ""
                    typAryR3Detail(lngAryIx).m_strWBSCode = ""
                ElseIf Left$(strWBS, 1) = "Y" Then
                    typAryR3Detail(lngAryIx).m_strInternalDirect = strWBS                       ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
                    typAryR3Detail(lngAryIx).m_strCostCenter = ""
                    typAryR3Detail(lngAryIx).m_strWBSCode = ""
                Else
                    typAryR3Detail(lngAryIx).m_strWBSCode = strWBS                              ''WBS|fffd|v|fffd|f
                    typAryR3Detail(lngAryIx).m_strCostCenter = ""
                    typAryR3Detail(lngAryIx).m_strInternalDirect = ""
                End If
            
            End If
            
            If strAcCode = "90210702" Then
                typAryR3Detail(lngAryIx).m_strAcCode = "90002083"                              ''|fffd||fffd||fffd||fffd|Code|fffd||3cd|X
            
                If Left$(strWBS, 1) = "X" Or Left$(strWBS, 1) = "Z" Then
                    typAryR3Detail(lngAryIx).m_strCostCenter = strWBS                           ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^
                    typAryR3Detail(lngAryIx).m_strInternalDirect = ""
                    typAryR3Detail(lngAryIx).m_strWBSCode = ""
                ElseIf Left$(strWBS, 1) = "Y" Then
                    typAryR3Detail(lngAryIx).m_strInternalDirect = strWBS                       ''|fffd||fffd||fffd||fffd||fffd|w|fffd|}
                    typAryR3Detail(lngAryIx).m_strCostCenter = ""
                    typAryR3Detail(lngAryIx).m_strWBSCode = ""
                Else
                    typAryR3Detail(lngAryIx).m_strWBSCode = strWBS                              ''WBS|fffd|v|fffd|f
                    typAryR3Detail(lngAryIx).m_strCostCenter = ""
                    typAryR3Detail(lngAryIx).m_strInternalDirect = ""
                End If
            
            End If
            
            
            ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||752||fffd|p|fffd|^|fffd||fffd| ------2006/04/27 |fffd||1c9||fffd|-----------------------------------
            If strAcCode = "20106002" Or strAcCode = "20116001" Or strAcCode = "20126801" Or _
               strAcCode = "20127901" Or strAcCode = "20146001" Or strAcCode = "20156101" Or _
               strAcCode = "20156104" Or strAcCode = "20166011" Or strAcCode = "20166015" Or _
               strAcCode = "20166021" Or strAcCode = "20166025" Or strAcCode = "20166026" Or _
               strAcCode = "20166031" Or strAcCode = "20166040" Or strAcCode = "20166051" Or _
               strAcCode = "20505101" Or strAcCode = "20505102" Or strAcCode = "30166106" Or _
               strAcCode = "30206101" Or strAcCode = "30306101" Or strAcCode = "50066001" Or _
               strAcCode = "50096101" Or strAcCode = "50096102" Or strAcCode = "50096111" Or _
               strAcCode = "50096112" Or strAcCode = "50096115" Or strAcCode = "50096121" Or _
               strAcCode = "50096122" Or strAcCode = "50096123" Or strAcCode = "50096124" Or _
               strAcCode = "50096125" Or strAcCode = "50096126" Or strAcCode = "50096129" Or _
               strAcCode = "50096131" Or strAcCode = "50096140" Then
                If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
                    strData = g_strOfficeCode & adoRs.Fields("ConnectionCode").Value
                    typAryR3Detail(lngAryIx).m_strSortKey = Left$(strData, 18)                  ''|fffd|\|fffd|[|fffd|g|fffd|L|fffd|[
                End If
            End If
                
            ''|fffd||fffd||fffd|a|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|}|fffd||fffd|----------------------------------------------------
            If strCBAcCode <> "" Then
                lngAryIx = lngAryIx + 1
                ReDim Preserve typAryR3Detail(lngAryIx)
                If intPostKey = 40 Then
                    typAryR3Detail(lngAryIx).m_intPostKey = 50                                  ''|fffd|]|fffd|L|fffd|L|fffd|[
                Else
                    typAryR3Detail(lngAryIx).m_intPostKey = 40                                  ''|fffd|]|fffd|L|fffd|L|fffd|[
                End If
                typAryR3Detail(lngAryIx).m_strAcCode = strCBAcCode                              ''|fffd||fffd||fffd||fffd|Code
                typAryR3Detail(lngAryIx).m_strAmount = CStr(curAmount)                          ''|fffd||fffd||fffd||5cb||fffd||fffd|z
                typAryR3Detail(lngAryIx).m_strAreaCode = "JA"                                   ''|fffd||fffd||fffd||197||308||fffd|
                typAryR3Detail(lngAryIx).m_strReferKey1 = strReferKey1                          ''|fffd|Q|fffd||fffd|Key1
            End If
            
        End If
        
        If blnHistory Then ''Cash/Bank/Transfer|fffd||fffd||fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setLedgerCBTHistorySQLString(adoRs, strDbTable & "_History", datPrNow)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & strDbTable
                GoTo LBL_ERR
            End If
        End If
        
        ''|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd||fffd||fffd|t|fffd|X|fffd|V----------------------------
        strSQL = "UPDATE " & strDbTable & " SET "
        strSQL = strSQL & "IFSendDate=" & fg_AddSingleQuotation(datPrNow) & ","
        strSQL = strSQL & "InsertDate=" & fg_AddSingleQuotation(datPrNow) & ","
        strSQL = strSQL & "IFRequestNo=" & typR3Header.m_dblRequestNo & ","
        strSQL = strSQL & "InsertUID=" & fg_AddSingleQuotation(g_strLoginId)
        strSQL = strSQL & " FROM " & c_NKFAOwner & "." & strDbTable & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
        strSQL = strSQL & " AND tb.ID = " & adoRs.Fields("ID").Value
        strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedgerCode)
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & ":" & strDbTable
            GoTo LBL_ERR
        End If
        '---------------------------------------------
        
        adoRs.MoveNext
        If adoRs.EOF = True Then
            blnOutput = True
        Else
            If blnSetHeader And datLedgerDate <> adoRs.Fields("LedgerDate").Value Then
                blnOutput = True
            End If
        End If
        
        If blnOutput Then ''|fffd|f|fffd|[|fffd|^|fffd|o|fffd||fffd|
            blnOutput = False
            blnSetHeader = False
            If f_InsertR3IFData(adoCn, objdba, typR3Header, typAryR3Detail) <> True Then GoTo LBL_ERR
            Erase typAryR3Detail
        End If
    Next
    On Error GoTo 0

    fg_SetR3AccountsData = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_SetR3AccountsData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_SetR3AccountsData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   R3|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB_Connection |fffd|^> Connection|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsDBAccess |fffd|^> DBAccess|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (3)<clsR3IFHeaderData |fffd|^> |fffd|A|fffd|g|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|
'   (4)<clsR3IFDetailData |fffd|^> |fffd|A|fffd|g|fffd||fffd||fffd||5cf||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)R3|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2006/04/27 : Knowlbo Suzuki : |fffd|Q|fffd||fffd|Key1|fffd||1c9||fffd|
'   2016/08/01 : Y.Watanabe     : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'   2016/08/08 : Y.Watanabe     : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
'-----------------------------------------------------------------
Private Function _
f_InsertR3IFData( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess, _
    ByRef typR3Header As clsR3IFHeaderData, _
    ByRef typAryR3Detail() As clsR3IFDetailData _
) As Boolean

    Dim typR3Detail As clsR3IFDetailData
    Dim strSQL As String
    Dim strMSG As String
    Dim intCount As Integer
    Dim lngIx As Long
    Dim lngIxCmp As Long
    Dim strPostKey As String
    ''<<<2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Dim cmd As ADODB.Command
    Dim pram As ADODB.Parameter
    ''>>>2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    f_InsertR3IFData = False
    strMSG = "DataBase Error"
    
    ''|fffd|]|fffd|L|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd|[|fffd|g
    If UBound(typAryR3Detail) > 0 Then
        lngIx = UBound(typAryR3Detail)
        Do Until lngIx <= 0
            lngIxCmp = 0
            Do Until lngIxCmp >= lngIx
                If typAryR3Detail(lngIxCmp).m_intPostKey > typAryR3Detail(lngIxCmp + 1).m_intPostKey Then
                    typR3Detail = typAryR3Detail(lngIxCmp)
                    typAryR3Detail(lngIxCmp) = typAryR3Detail(lngIxCmp + 1)
                    typAryR3Detail(lngIxCmp + 1) = typR3Detail
                End If
                lngIxCmp = lngIxCmp + 1
            Loop
            lngIx = lngIx - 1
        Loop
    End If

On Error GoTo LBL_ERR
    For lngIx = LBound(typAryR3Detail) To UBound(typAryR3Detail)
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        Set cmd = New ADODB.Command
        Set pram = New ADODB.Parameter
        
        cmd.CommandType = adCmdStoredProc
        cmd.CommandText = defInsertKaikeiRenkeiData
        cmd.ActiveConnection = adoCn
        
        Set pram = cmd.CreateParameter("RequestNo", adDecimal, adParamInput, , typR3Header.m_dblRequestNo)
        cmd.Parameters(1) = pram
        Set pram = cmd.CreateParameter("Seq", adDecimal, adParamInput, , lngIx + 1)
        cmd.Parameters(2) = pram
        ''|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|-----------------------------------------------
        If lngIx = 0 Then
            Set pram = cmd.CreateParameter("LedgerDate", adVarChar, adParamInput, , typR3Header.m_strLedgerDate)
            cmd.Parameters(3) = pram
            Set pram = cmd.CreateParameter("LedgerType", adVarChar, adParamInput, , "GE")
            cmd.Parameters(4) = pram
            Set pram = cmd.CreateParameter("CompanyCode", adVarChar, adParamInput, , "NK01")
            cmd.Parameters(5) = pram
            Set pram = cmd.CreateParameter("PostDate", adVarChar, adParamInput, , typR3Header.m_strPostDate)
            cmd.Parameters(6) = pram
            Set pram = cmd.CreateParameter("CurrencyCode", adVarChar, adParamInput, , typR3Header.m_strCurrency)
            cmd.Parameters(7) = pram
            Set pram = cmd.CreateParameter("ExChangeDate", adVarChar, adParamInput, , typR3Header.m_strExChangeDate)
            cmd.Parameters(8) = pram
            Set pram = cmd.CreateParameter("RequestReferNo", adVarChar, adParamInput, , typR3Header.m_strRequestReferNo)
            cmd.Parameters(9) = pram
            Set pram = cmd.CreateParameter("LedgerHeaderText", adVarChar, adParamInput, , g_strOfficeCode)
            cmd.Parameters(10) = pram
        Else
            Set pram = cmd.CreateParameter("LedgerDate", adVarChar, adParamInput, , Null)
            cmd.Parameters(3) = pram
            Set pram = cmd.CreateParameter("LedgerType", adVarChar, adParamInput, , Null)
            cmd.Parameters(4) = pram
            Set pram = cmd.CreateParameter("CompanyCode", adVarChar, adParamInput, , Null)
            cmd.Parameters(5) = pram
            Set pram = cmd.CreateParameter("PostDate", adVarChar, adParamInput, , Null)
            cmd.Parameters(6) = pram
            Set pram = cmd.CreateParameter("CurrencyCode", adVarChar, adParamInput, , Null)
            cmd.Parameters(7) = pram
            Set pram = cmd.CreateParameter("ExChangeDate", adVarChar, adParamInput, , Null)
            cmd.Parameters(8) = pram
            Set pram = cmd.CreateParameter("RequestReferNo", adVarChar, adParamInput, , Null)
            cmd.Parameters(9) = pram
            Set pram = cmd.CreateParameter("LedgerHeaderText", adVarChar, adParamInput, , Null)
            cmd.Parameters(10) = pram
        End If
        ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^-----------------------------------------------
        ''<<<2016.08.08 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
        '|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||343|X|fffd|g|fffd|A|fffd|h|fffd||fffd||fffd||fffd|
        Set pram = cmd.CreateParameter("PostKey", adInteger, adParamInput, , typAryR3Detail(lngIx).m_intPostKey)
'        Set pram = cmd.CreateParameter("PostKey", adVarChar, adParamInput, , Format$(typAryR3Detail(lngIx).m_intPostKey, "00"))
        ''>>>2016.08.08 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
        cmd.Parameters(11) = pram
        Set pram = cmd.CreateParameter("AcCode", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strAcCode)
        cmd.Parameters(12) = pram
        Set pram = cmd.CreateParameter("Amount", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strAmount)
        cmd.Parameters(13) = pram
        If typAryR3Detail(lngIx).m_strGLAcCode <> "" Then
            Set pram = cmd.CreateParameter("GLAcCode", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strGLAcCode)
        Else
            Set pram = cmd.CreateParameter("GLAcCode", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(14) = pram
        If typAryR3Detail(lngIx).m_strStdDiscount <> "" Then
            Set pram = cmd.CreateParameter("StdDiscount", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strStdDiscount)
        Else
            Set pram = cmd.CreateParameter("StdDiscount", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(15) = pram
        If typAryR3Detail(lngIx).m_strStdPaymentDate <> "" Then
            Set pram = cmd.CreateParameter("StdPaymentDate", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strStdPaymentDate)
        Else
            Set pram = cmd.CreateParameter("StdPaymentDate", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(16) = pram
        If typAryR3Detail(lngIx).m_strSortKey <> "" Then
            Set pram = cmd.CreateParameter("SortKey", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strSortKey)
        Else
            Set pram = cmd.CreateParameter("SortKey", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(17) = pram
        If typAryR3Detail(lngIx).m_strText <> "" Then
            ''<<<2016.08.08 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
            '|fffd|u|fffd||fffd||fffd||343|X|fffd|g|fffd|A|fffd|h|fffd||fffd||fffd||fffd|
            Set pram = cmd.CreateParameter("DetailText", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strText)
'            Set pram = cmd.CreateParameter("DetailText", adVarChar, adParamInput, , Replace(Replace(fg_Verticalbar_Change(typAryR3Detail(lngIx).m_strText), vbCr, ""), vbLf, ""))
            ''>>>2016.08.08 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
        Else
            Set pram = cmd.CreateParameter("DetailText", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(18) = pram
        If typAryR3Detail(lngIx).m_strAreaCode <> "" Then
            Set pram = cmd.CreateParameter("AreaCode", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strAreaCode)
        Else
            Set pram = cmd.CreateParameter("AreaCode", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(19) = pram
        If typAryR3Detail(lngIx).m_strCostCenter <> "" Then
            Set pram = cmd.CreateParameter("CostCenter", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strCostCenter)
        Else
            Set pram = cmd.CreateParameter("CostCenter", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(20) = pram
        If typAryR3Detail(lngIx).m_strInternalDirect <> "" Then
            Set pram = cmd.CreateParameter("InternalDirect", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strInternalDirect)
        Else
            Set pram = cmd.CreateParameter("InternalDirect", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(21) = pram
        If typAryR3Detail(lngIx).m_strWBSCode <> "" Then
            Set pram = cmd.CreateParameter("WBSCode", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strWBSCode)
        Else
            Set pram = cmd.CreateParameter("WBSCode", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(22) = pram
        If typAryR3Detail(lngIx).m_strReferKey1 <> "" Then
            Set pram = cmd.CreateParameter("ReferKey1", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strReferKey1)
        Else
            Set pram = cmd.CreateParameter("ReferKey1", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(23) = pram
        If typAryR3Detail(lngIx).m_strReferKey2 <> "" Then
            Set pram = cmd.CreateParameter("ReferKey2", adVarChar, adParamInput, , typAryR3Detail(lngIx).m_strReferKey2)
        Else
            Set pram = cmd.CreateParameter("ReferKey2", adVarChar, adParamInput, , Null)
        End If
        cmd.Parameters(24) = pram
        ''<<<2016.08.08 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
        Set pram = cmd.CreateParameter("InsertDate", adDBTimeStamp, adParamInput, , Null)
'        Set pram = cmd.CreateParameter("InsertDate", adDBTimeStamp, adParamInput, , Now())
        ''>>>2016.08.08 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|(|fffd|C|fffd||fffd|)
        cmd.Parameters(25) = pram
        Set pram = cmd.CreateParameter("InsertUID", adVarChar, adParamInput, , g_strLoginId)
        cmd.Parameters(26) = pram
        
        Call cmd.Execute
        
'        strSQL = "INSERT INTO " & c_NKFAOwner & "." & c_strTBL_R3FIData
'        strSQL = strSQL & " ("
'        strSQL = strSQL & "|fffd|A|fffd|g|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||50d||fffd|, "
'        strSQL = strSQL & "Seq, "
'        If lngIx = 0 Then
'            strSQL = strSQL & "|fffd|`|fffd|[|fffd||fffd||fffd|t, "
'            strSQL = strSQL & "|fffd|`|fffd|[|fffd|^|fffd|C|fffd|v, "
'            strSQL = strSQL & "|fffd||fffd||fffd|Code, "
'            strSQL = strSQL & "|fffd|]|fffd|L|fffd||fffd||fffd|t, "
'            strSQL = strSQL & "|fffd||289||fffd|, "
'            strSQL = strSQL & "|fffd||fffd||fffd|Z|fffd||fffd||fffd|t, "
'            strSQL = strSQL & "|fffd|Q|fffd||193|`|fffd|[|fffd||50d||fffd|, "
'            strSQL = strSQL & "|fffd|`|fffd|[|fffd|w|fffd|b|fffd|_Text, "
'        End If
'        strSQL = strSQL & "|fffd|]|fffd|LKey, "
'        strSQL = strSQL & "|fffd||fffd||fffd||fffd|Code, "
'        strSQL = strSQL & "|fffd||fffd||fffd||5cb||fffd||fffd|z, "
'        strSQL = strSQL & "GL|fffd||fffd||fffd||fffd|, "
'        strSQL = strSQL & "|fffd||fffd||fffd||fffd||fffd||e3c0||fffd|z, "
'        strSQL = strSQL & "|fffd|x|fffd||fffd||fffd||e3c0||fffd||fffd|, "
'        strSQL = strSQL & "SORTKEY, "
'        strSQL = strSQL & "|fffd||fffd||fffd||5c3|e|fffd|L|fffd|X|fffd|g, "
'        strSQL = strSQL & "|fffd||fffd||fffd||197||308||fffd|, "
'        strSQL = strSQL & "|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^, "
'        strSQL = strSQL & "|fffd||fffd||fffd||fffd||fffd|w|fffd|}|fffd||fffd|, "
'        strSQL = strSQL & "WBS|fffd|v|fffd|f, "
'        strSQL = strSQL & "|fffd|Q|fffd||fffd|Key1, "
'        strSQL = strSQL & "|fffd|Q|fffd||fffd|Key2, "
'        strSQL = strSQL & "InsertDate, "
'        strSQL = strSQL & "InsertUID "
'        strSQL = strSQL & ") "
'        strSQL = strSQL & "VALUES "
'        strSQL = strSQL & "( "
'
'        strSQL = strSQL & typR3Header.m_dblRequestNo & ", "
'        strSQL = strSQL & lngIx + 1 & ", "
'        ''|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|-----------------------------------------------
'        If lngIx = 0 Then
'            strSQL = strSQL & fg_AddSingleQuotation(typR3Header.m_strLedgerDate) & ", "
'            strSQL = strSQL & fg_AddSingleQuotation("GE") & ", "
'            strSQL = strSQL & fg_AddSingleQuotation("NK01") & ", "
'            strSQL = strSQL & fg_AddSingleQuotation(typR3Header.m_strPostDate) & ", "
'            strSQL = strSQL & fg_AddSingleQuotation(typR3Header.m_strCurrency) & ", "
'            strSQL = strSQL & fg_AddSingleQuotation(typR3Header.m_strExChangeDate) & ", "
'            strSQL = strSQL & fg_AddSingleQuotation(typR3Header.m_strRequestReferNo) & ", "
'            strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "
'        End If
'
'        ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^-----------------------------------------------
'        strSQL = strSQL & fg_AddSingleQuotation(Format$(typAryR3Detail(lngIx).m_intPostKey, "00")) & ", "
'        strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strAcCode) & ", "
'        strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strAmount) & ", "
'        If typAryR3Detail(lngIx).m_strGLAcCode <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strGLAcCode) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strStdDiscount <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strStdDiscount) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strStdPaymentDate <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strStdPaymentDate) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strSortKey <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strSortKey) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strText <> "" Then
'' 2015/05/28 Yoshida |fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd|u|fffd||fffd||fffd||1c9||fffd| START
''            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strText) & ", "
''            strSQL = strSQL & fg_AddSingleQuotation(fg_Verticalbar_Change(typAryR3Detail(lngIx).m_strText)) & ", "
'
'            strSQL = strSQL & "REPLACE(REPLACE(" & fg_AddSingleQuotation(fg_Verticalbar_Change(typAryR3Detail(lngIx).m_strText)) & ", CHAR(13), ''), CHAR(10), '')" & ", "
'' 2015/05/28 Yoshida |fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd|u|fffd||fffd||fffd||1c9||fffd| END
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strAreaCode <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strAreaCode) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'
'        If typAryR3Detail(lngIx).m_strCostCenter <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strCostCenter) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strInternalDirect <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strInternalDirect) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strWBSCode <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strWBSCode) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strReferKey1 <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strReferKey1) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        If typAryR3Detail(lngIx).m_strReferKey2 <> "" Then
'            strSQL = strSQL & fg_AddSingleQuotation(typAryR3Detail(lngIx).m_strReferKey2) & ", "
'        Else
'            strSQL = strSQL & "Null, "
'        End If
'        strSQL = strSQL & fg_AddSingleQuotation(Now()) & ", "
'        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId)
'        strSQL = strSQL & ") "
'
'        objdba.SQLString = strSQL
'        If (objdba.ExecuteSQL(adoCn) <> 0) Then
'            strMSG = c_strMSG_DB_Update & c_strTBL_R3FIData
'            GoTo LBL_ERR
'        End If
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Next
    On Error GoTo 0
    ''<<<2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    Set cmd = Nothing
    Set pram = Nothing
    ''>>>2016.08.01 Add By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    f_InsertR3IFData = True
    Exit Function

LBL_ERR:
    f_InsertR3IFData = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_InsertR3IFData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||502||fffd||fffd||fffd|]|fffd|L|fffd||fffd||fffd||fffd||fffd||64fe|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|]|fffd|L|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||502||fffd||fffd||fffd|]|fffd|L|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||fffd||fffd||30a||fffd||fffd||502||fffd||fffd||38f||6c2||30f||a347||fffd||341|A|fffd||fffd||fffd||10a2||fffd||fffd||fffd||502||30c||fffd||fffd||fffd||fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/02/21 : |fffd|n|7c97|S|fffd|q : DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'   2016/08/01 : Y.Watanabe : |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fg_GetR3FIPeriod( _
    ByRef strPostDate As String _
) As Boolean
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngIx As Long
    Dim datTarget As Date
    Dim strMSG As String
    Dim strData As String

    fg_GetR3FIPeriod = False
    
    strMSG = "DBSelectProcError"
    Set adoCn = New ADODB.Connection
    Set adoRs = New ADODB.Recordset
    Set objdba = New clsDBAccess
    objdba.CallPlace = ID_NKFAS_SS

    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword
    
'''<<<2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
'    objdba.ServerName = c_strNKHRServerName
'    objdba.DBName = c_strNKHRDBName
'    objdba.UserID = c_strNKHR_UserID
'    objdba.Password = c_strNKHR_Password
'
''#If def_intDBPlace = 1 Then
''    objdba.ServerName = c_strServerName
''    objdba.DBName = c_strDBName
''    objdba.UserID = c_strUserID
''    objdba.Password = c_strPassword
''#Else
''    '----------------------------------------
''    objdba.ServerName = c_strNKHRServerName
''    objdba.DBName = c_strNKHRDBName
''    objdba.UserID = c_strNKHR_UserID
''    objdba.Password = c_strNKHR_Password
''    '----------------------------------------
''#End If
'''>>>2013.02.21 Mod By Y.Watanabe DB|fffd||310||691||fffd||fffd||fffd||3cd|X
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = c_strMSG_DB_CONNECTFAIL & ":" & c_strDBName
'        strMSG = c_strMSG_DB_CONNECTFAIL & ":NKHR"
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''|fffd||fffd|v|fffd||fffd||fffd||50f||fffd||fffd||64fe|
    ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    strSQL = "SELECT * FROM " & defGetKaikeiKikan
'    strSQL = "SELECT " & "Min(tb.|fffd|]|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|) As TargetDate"
'    strSQL = strSQL & " FROM " & c_strTBL_HRFIPeriod & " tb"
'    strSQL = strSQL & " WHERE tb.|fffd||fffd||fffd|Code = " & fg_AddSingleQuotation("NK01")
'    strSQL = strSQL & " AND tb.|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd| = " & fg_AddSingleQuotation("ZZ")
'    strSQL = strSQL & " AND GetDate()" & " BETWEEN "
'    strSQL = strSQL & "tb.|fffd|]|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd||34a|J|fffd|n|fffd||fffd||fffd||fffd| AND tb.|fffd|]|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd||352||fffd||fffd||7d3||fffd||fffd||fffd|"
    ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & defGetKaikeiKikan
'        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_HRFIPeriod
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If
    
    If adoRs.EOF = False Then
        datTarget = adoRs.Fields("TargetDate").Value
    Else
        ''<<<2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        strMSG = "Can't Find Data from " & defGetKaikeiKikan & ". NK01[" & Now() & "]"
'        strMSG = "Can't Find Data from " & c_strTBL_HRFIPeriod & ". NK01[" & Now() & "]"
        ''>>>2016.08.01 Mod By Y.Watanabe |fffd|{|fffd||414||149|p|fffd||fffd||fffd|Windows|fffd||389||fffd|
        GoTo LBL_ERR
    End If
    
    strData = Format$(datTarget, "yyyy")
    strData = strData & Format$(datTarget, "mm")
    strData = strData & Format$(datTarget, "dd")

    strPostDate = strData
    On Error GoTo 0
    
    fg_GetR3FIPeriod = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "fg_GetR3FIPeriod:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "fg_GetR3FIPeriod", strMSG
    GoTo LBL_END
End Function

Attribute VB_Name = "modStruct"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|\|fffd||fffd||fffd||312||fffd|`
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   |fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|CODE
'   (2)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|NAME
'   (3)<String |fffd|^> |fffd||fffd|CODE
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|
'   (4)<Integer |fffd|^> BranchOffice
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/06 : Knowlbo Suzuki : BranchOfficeNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Type clsOfficeInfo
    m_strOfficeCode As String
    m_strOfficeName As String
    m_strCountry As String
    m_strCountryName As String
    m_intBranchOfficeNo As Integer
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CashBook|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   CashBook|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> LEDGER CODE
'   (2)<String |fffd|^> |fffd||289||fffd|CODE
'   (3)<String |fffd|^> |fffd||1d7||fffd||fffd||496||fffd|
'   (4)<Integer |fffd|^> |fffd|p|fffd|r NK:0/JV:1
'   (5)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
'   (7)<Boolean |fffd|^> |fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsCashBkInfo
    m_strCode As String
    m_strCurrency As String
    m_strCasher As String
    m_intPurpose As Integer
    m_strMemo As String
    m_strAcCode As String
    m_blnDirty As Boolean
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BankBook|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   BankBook|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> LEDGER CODE
'   (2)<String |fffd|^> |fffd||289||fffd|CODE
'   (3)<String |fffd|^> |fffd||fffd|s|fffd||fffd|
'   (4)<String |fffd|^> |fffd|x|fffd|X|fffd||fffd|
'   (5)<String |fffd|^> |fffd|Z|fffd||fffd|
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   (7)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||50d||fffd|
'   (8)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|`
'   (9)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||496||fffd|
'   (10)<Boolean |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   (11)<Integer |fffd|^> |fffd|p|fffd|r NK:0/JV:1
'   (12)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (13)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
'   (14)<Boolean |fffd|^> |fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsBankBkInfo
    m_strCode As String
    m_strCurrency As String
    m_strName As String
    m_strBranch As String
    m_strAdress As String
    m_strAccountType As String
    m_strAccountNo As String
    m_strBeneficiaryName As String
    m_strSigner As String
    m_blnUseRemittance As Boolean
    m_intPurpose As Integer
    m_strMemo As String
    m_strAcCode As String
    m_blnDirty As Boolean
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Transfer|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   Transfer|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> LEDGER CODE
'   (2)<String |fffd|^> |fffd||289||fffd|CODE
'   (3)<String |fffd|^> |fffd|p|fffd|r|fffd||fffd||fffd||fffd|
'   (4)<Integer |fffd|^> |fffd|p|fffd|r NK:0/JV:1
'   (5)<Boolean |fffd|^> |fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsTransferInfo
    m_strCode As String
    m_strCurrency As String
    m_strDescript As String
    m_intPurpose As Integer
    m_blnDirty As Boolean
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Assosiate|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   Assosiate|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||18e||483|R|fffd|[|fffd|h
'   (2)<String |fffd|^> |fffd||18e||496||fffd|
'   (3)<Currency |fffd|^> |fffd|_|fffd||fffd||fffd|
'   (4)<Currency |fffd|^> |fffd|O|fffd|n|fffd||fffd|
'   (5)<String |fffd|^> |fffd||289||fffd|CODE
'   (6)<Boolean |fffd|^> |fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsAssosiate
    m_strCode As String
    m_strName As String
    m_curContract As Currency
    m_curAdvance As Currency
    m_strCurrency As String
    m_blnDirty As Boolean
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubContract|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   SubContract|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||18e||483|R|fffd|[|fffd|h
'   (2)<String |fffd|^> |fffd||18e||496||fffd|
'   (3)<Currency |fffd|^> |fffd|_|fffd||fffd||fffd|
'   (4)<Currency |fffd|^> |fffd|O|fffd|n|fffd||fffd|
'   (5)<String |fffd|^> |fffd||289||fffd|CODE
'   (6)<Integer |fffd|^> |fffd|_|fffd||fffd|`|fffd||fffd| 0:Reimbursable(|fffd|_|fffd||fffd|) 1:NonReimbursable(|fffd|_|fffd||fffd|O)
'   (7)<Boolean |fffd|^> |fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsSubContract
    m_strCode As String
    m_strName As String
    m_curContract As Currency
    m_curAdvance As Currency
    m_strCurrency As String
    m_intReimbursable As Integer
    m_blnDirty As Boolean
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd|P
'   (2)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd|Q
'   (3)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd|R
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsRemittanceInfo
    m_strRequestTo1 As String
    m_strRequestTo2 As String
    m_strRequestTo3 As String
    m_strAdviceTo As String
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBSCODE|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   WBSCODE|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> ID
'   (2)<String |fffd|^> WBSCODE
'   (3)<Boolean |fffd|^> |fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsWBSInfo      ''WBSCode|fffd|\|fffd||fffd|
    m_lngID As Long             ''ID
    m_strCode As String         ''WBSCODE
    m_blnDirty As Boolean       ''|fffd||3cd|X|fffd|t|fffd||fffd||fffd|O
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Project|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   Project|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|CODE
'   (2)<String |fffd|^> |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|gCODE
'   (3)<String |fffd|^> |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
'   (4)<Integer |fffd|^> |fffd|_|fffd||fffd|`|fffd||fffd| 0:Monthly 1:sceduled
'   (5)<String |fffd|^> |fffd||289||fffd|CODE
'   (6)<Currency |fffd|^> |fffd|_|fffd||5134a|z
'   (7)<Currency |fffd|^> NK|fffd|||fffd|[|fffd|V|fffd||fffd||fffd||fffd|
'   (8)<Currency |fffd|^> |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|||fffd|[|fffd|V|fffd||fffd||fffd||fffd|
'   (9)<Currency |fffd|^> |fffd|O|fffd|n|fffd||fffd||fffd||fffd|
'   (10)<Currency |fffd|^> NK|fffd|O|fffd|n|fffd||fffd||fffd||fffd|
'   (11)<Currency |fffd|^> |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|O|fffd|n|fffd||fffd||fffd||fffd|
'   (12)<Currency |fffd|^> |fffd|O|fffd|n|fffd||fffd|
'   (13)<Currency |fffd|^> NK|fffd|O|fffd|n|fffd||fffd|
'   (14)<Currency |fffd|^> |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|O|fffd|n|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsProjectInfo
    m_strOfficeCode As String
    m_strPJTCode As String
    m_strPJTName As String
    m_intPaymentMethod As Integer
    m_strCurrency As String
    m_curContract As Currency
    m_curContractNK As Currency
    m_curContractASO As Currency
    m_curPerCont As Currency
    m_curPerNK As Currency
    m_curPerASO As Currency
    m_curAdvance As Currency
    m_curAdvanceNK As Currency
    m_curAdvanceASO As Currency
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ConnectionCode|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   ConnectionCode|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> CONNECTION CODE
'   (2)<String |fffd|^> CONNECTION NAME
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/11 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsConnectionInfo      ''ConnectionCode|fffd|\|fffd||fffd|
    m_strCode As String     ''CONNECTION CODE
    m_strName As String     ''CONNECTION NAME
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Transfer-|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   Transfer-|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd|\|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<Date |fffd|^> TargetPeriod
'   (2)<Date |fffd|^> LedgerDate
'   (3)<String |fffd|^> Description
'   (4)<String |fffd|^> Details
'   (5)<String |fffd|^> WBSCode
'   (6)<String |fffd|^> AcCode
'   (7)<String |fffd|^> AcName
'   (8)<String |fffd|^> ConectCode
'   (9)<String |fffd|^> ConectName
'   (10)<String |fffd|^> LedgerLinkCode
'   (11)<String |fffd|^> EviNo
'   (12)<String |fffd|^> NKJV
'   (13)<String |fffd|^> Claim
'   (14)<Currency |fffd|^> Paid
'   (15)<Currency |fffd|^> Received
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsTransBookData
    m_datTargetPeriod As Date
    m_datLedgerDate As Date
    m_strDescription As String
    m_strDetails As String
    m_strWBSCode As String
    m_strAcCode As String
    m_strAcName As String
    m_strConectCode As String
    m_strConectName As String
    m_strLedgerLinkCode As String
    m_strEviNo As String
    m_strCheckNo As String
    m_strNKJV As String
    m_strClaim As String
    m_curPaid As Currency
    m_curReceived As Currency
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   |fffd|t|fffd|`|fffd|[|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> AssociateCode
'   (2)<String |fffd|^> InvRefNo
'   (3)<String |fffd|^> Description
'   (4)<Date |fffd|^> ReceivedDate
'   (5)<Date |fffd|^> PaidDate
'   (6)<String |fffd|^> Status
'   (7)<Currency |fffd|^> ActualPayment
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsReversAsoPayment
    m_strAsoCode As String
    m_strInvRefNo As String
    m_strDescription As String
    m_datReceivedDate As Date
    m_datPaidDate As Date
    m_strStatus As String
    m_curActualPayment As Currency
End Type


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/BankBook|fffd|c|fffd||fffd||fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   Cash/BankBook|fffd|c|fffd||fffd||fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> LEDGER CODE
'   (2)<String |fffd|^> |fffd||289||fffd|CODE
'   (3)<Integer |fffd|^> |fffd|p|fffd|r NK:0/JV:1
'   (4)<Currency |fffd|^> |fffd|c|fffd||fffd|
'   (5)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsCashBankBalance      ''Cash/BankBook|fffd|c|fffd||fffd||fffd||fffd||fffd|
    m_strCode As String             ''LEDGER CODE
    m_strCurrency As String         ''|fffd||289||fffd|CODE
    m_intPurpose As Integer         ''|fffd|p|fffd|r NK:0/JV:1
    m_curBalance As Currency        ''|fffd|c|fffd||fffd|
    m_strAcCode As String           ''AccountCode
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/BankBook/Transfer ImportData|fffd|\|fffd||fffd||fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   Cash/BankBook/Transfer Import|fffd||fffd||42a90||752||80b3||fffd||fffd||fffd|
'   (1)<String |fffd|^> LEDGER CODE
'   (2)<String |fffd|^> Import|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Type clsImportDtData         ''ImportData|fffd|\|fffd||fffd|(|fffd|N|fffd|xMaster|fffd|f|fffd|[|fffd|^)
    m_strTbl As String              ''SHEET|fffd||fffd|(CB01,BB01...)
    m_strData As String             ''Import|fffd||fffd||fffd||fffd||fffd||fffd|
End Type

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||4ebd5||28c|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||4ebd5||282||fffd||fffd||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Enum GCMN_MSTARY
    GCMN_PJ = 0                 ''Project|fffd||fffd||fffd|
    GCMN_CB = 1                 ''CashBook
    GCMN_BB = 2                 ''BankBook
    GCMN_TR = 3                 ''Transfer
    GCMN_AS = 4                 ''Associate
    GCMN_SC = 5                 ''Sub-contractor
    GCMN_WB = 6                 ''WBS
    GCMN_CP = 7                 ''|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd|
End Enum

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LedgerLinkCode|fffd||fffd||fffd||28c|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   LedgerLinkCode|fffd||fffd||fffd||282||fffd||fffd||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Enum GLNK_CODE
    GLNK_IV = 0                 ''Invoice
    GLNK_AS = 1                 ''Associate
    GLNK_SC = 2                 ''Sub-contractor
    GLNK_RM = 3                 ''Remittance
    GLNK_PP = 4                 ''PrePaid
    GLNK_FA = 5                 ''Fixed Assets(|fffd||152||8391||fffd|Y)
End Enum

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||343|V|fffd|[|fffd|gID|fffd||fffd||fffd||28c|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||343|V|fffd|[|fffd|gID|fffd||fffd||fffd||282||fffd||fffd||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Enum GLED_ID
    GLED_CB = 0                 ''CashBook
    GLED_BB = 1                 ''BankBook
    GLED_TR = 2                 ''Transfer
    GLED_BR = 3                 ''BreakDown
    GLED_IV = 4                 ''Invoice
    GLED_AS = 5                 ''Associate
    GLED_SC = 6                 ''Sub-contractor
    GLED_PP = 7                 ''PrePaid
    GLED_RF = 8                 ''RemittanceForm
    GLED_CF = 9                 ''CashFlow
    GLED_RM = 10                ''Remittance
    GLED_BS = 11                ''BsBalansSheet
    GLED_PL = 12                ''PLBalansSheet
    GLED_SS = 13                ''Search
    GLED_IR = 14                ''ImportReport
End Enum


'|fffd||fffd||189||216||68f||fffd||fffd|i|fffd|[|fffd|\|fffd||fffd||fffd||fffd|
Public Type T_WBS
    strWBS                      As String   '|fffd||fffd||189||216||fffd|
    strJapaneseSubjectName      As String   '|fffd||fffd||fffd|{|fffd||a30f||fffd||fffd|
    strEnglishSubjectName       As String   '|fffd|p|fffd||a30f||fffd||fffd|
    strSectionCode              As String   '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
    strSectionName              As String   '|fffd||fffd||fffd||fffd||fffd||fffd|
    strSupplierName             As String   '|fffd||fffd||fffd||4d0||65bc|
    strConclusionOfContractDay  As String   '|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strTypeOfIndustryCode       As String   '|fffd||18e||fffd|Code
End Type

Attribute VB_Name = "modUtilty"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||117|p|fffd|L|fffd||fffd||590||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||311|O|fffd||fffd||243|V|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||3ca||fffd||fffd||3576||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_AddSingleQuotation( _
    ByVal strData As String _
) As String
    fg_AddSingleQuotation = "'" & Trim$(Replace(strData, "'", "''")) & "'"
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd|NULL|fffd|E|fffd||fffd||fffd|l|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d3||fffd||fffd||34d||fffd||fffd||696||fffd|
'   (3)<Integer |fffd|^> 0:NULL|fffd|`|fffd|F|fffd|b|fffd|N  1:NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||190||fffd||fffd|l|fffd|`|fffd|F|fffd|b|fffd|N  2:NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||193||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
'   (4)<Integer |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||342||fffd||fffd||a0bd||fffd|l|fffd||fffd|NULL|fffd|A|fffd||fffd||fffd|l|fffd|A|fffd||702||fffd||fffd||353||fffd||fffd|t|fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd|G|fffd||fffd||fffd|[  False:|fffd||fffd||fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/09 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/08/14 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd||52dc3|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function fg_InputCheck( _
    ByRef strInput As String, _
    ByVal strMSG As String, _
    ByVal intFigure As Integer, _
    Optional ByVal intChklen As Integer = 0 _
)
    fg_InputCheck = True

    If strInput = "" And intFigure = 3 Then         ''Len|fffd|`|fffd|F|fffd|b|fffd|N
        fg_InputCheck = False    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd|
        Exit Function
    End If

    If (strInput = "") Then         ''NULL|fffd|`|fffd|F|fffd|b|fffd|N
        MsgBox c_strMSGCmn_REQUESTINPUT & strMSG, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Function
    ElseIf (intFigure = 1) Then     ''|fffd||fffd||fffd|l|fffd|`|fffd|F|fffd|b|fffd|N
        If (IsNumeric(strInput) = False) Then
            MsgBox c_strMSGCmn_NUMINPUT, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            Exit Function
        End If
    ElseIf (intFigure = 2) Then     ''|fffd||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
        If (IsDate(strInput) = False) Then
            MsgBox c_strMSG_DATEINPUT, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            Exit Function
        End If
    End If
    
    If intChklen > 0 And intChklen < Len(strInput) Then
        MsgBox c_strMSGCmn_LENGTHOVER & CStr(intChklen), vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Function
    End If
    
    fg_InputCheck = False    ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd|
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|e|fffd||fffd||55d8e||fffd||fffd||fffd||fffd|Length|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'   (2)<Integer |fffd|^> |fffd||fffd||fffd||fffd|Length
'   (3)<Integer |fffd|^> |fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|@0:frmSetting_Main 1:frmSelectLinkCode
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||55d8e||fffd||fffd||fffd||fffd|Length|fffd||312||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/08 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_strUnity(strInfo As String, intLength As Integer, intNum As Integer)

    If (strInfo = "") Then
        fg_strUnity = Space$(intLength)
        Exit Function
    ElseIf (Len(strInfo) < intLength) Then
        If (intNum = 0) Then
            fg_strUnity = Format$(strInfo, "!" & String(intLength + 3, "@"))
            Exit Function
        Else
            fg_strUnity = Format$(strInfo, "!" & String(intLength, "@"))
            Exit Function
        End If
    Else
        If (intNum = 0) Then
            fg_strUnity = Left$(strInfo, intLength) & "..."
        Else
            fg_strUnity = Left$(strInfo, intLength)
        End If
    End If
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|z|fffd||fffd||55d8e||fffd||fffd||fffd||fffd|Length|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'   (2)<Integer |fffd|^> |fffd||fffd||fffd||fffd|Length
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|z|fffd||fffd||55d8e||fffd||fffd||fffd||fffd|Length|fffd||312||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/01/09 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_strUnityAmount(strInfo As String, intLength As Integer)

    If (strInfo = "") Then
        fg_strUnityAmount = Space$(intLength)
        Exit Function
    ElseIf (Len(strInfo) < intLength) Then
        fg_strUnityAmount = Format$(Format$(strInfo, "#,##0.00"), String(intLength, "@"))
        Exit Function
    Else
        fg_strUnityAmount = Left$(Format$(strInfo, "#,##0"), intLength)
    End If
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Transfer|fffd||fffd||fffd||314|z|fffd||fffd|i|fffd|[|fffd|E|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||fffd|
'   (2)<Integer |fffd|^> |fffd|p|fffd|r  0:NK Main Use  1:JV Main Use
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Transfer|fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/25 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/02/05 : Knowlbo Nakarai : NK/JV|fffd||142||30f||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Sub sg_SetTransfer(ByRef strCur As String, ByRef intPurpose As Integer)
    
    Dim intAryIndex As Integer  ''|fffd|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strATLcode As String, strMLLcode As String          'LEDGER CODE
    Dim strATDescript As String, strMLDescript As String    'DESCRIPTION
    Dim strATInfo As String, strMLInfo As String  'TRANSFER|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    ''LEDGER CODE
    If (g_blnTRNoArray = True) Then         ''|fffd|z|fffd||42a96||fffd||fffd||fffd||fffd||a347|
        If (intPurpose = 0) Then        ''NK Main Use
            strATLcode = "TR01"
            strMLLcode = "TR02"
        ElseIf (intPurpose = 1) Then    ''JV Main Use
            strMLLcode = "TR01"
        End If
        intAryIndex = 0     ''|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
    ElseIf (g_blnTRNoArray = False) Then    ''|fffd|z|fffd||42a82||fffd||fffd||fffd||a347|
        If (intPurpose = 0) Then        ''NK Main Use
            strATLcode = "TR" & Format$(frmSetting_Main.TRList.ListCount + 1, "00")
            strMLLcode = "TR" & Format$(frmSetting_Main.TRList.ListCount + 2, "00")
        ElseIf (intPurpose = 1) Then    ''JV Main Use
            strMLLcode = "TR" & Format$(frmSetting_Main.TRList.ListCount + 1, "00")
        End If
        intAryIndex = UBound(g_typAryTRInfoEdit) + 1    ''|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||fffd|
    End If
    ''DESCRIPTION
    strATDescript = "Auto Transfer"
    strMLDescript = "Manual Transfer"
    
    ''TRANSFER|fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
    If (intPurpose = 0) Then        ''NK Main Use
        ''AUTO
        ReDim Preserve g_typAryTRInfoEdit(intAryIndex)
        g_typAryTRInfoEdit(intAryIndex).m_strCode = strATLcode
        g_typAryTRInfoEdit(intAryIndex).m_strCurrency = strCur
        g_typAryTRInfoEdit(intAryIndex).m_strDescript = strATDescript
        g_typAryTRInfoEdit(intAryIndex).m_intPurpose = intPurpose
        g_typAryTRInfoEdit(intAryIndex).m_blnDirty = True
        ''MANUAL
        ReDim Preserve g_typAryTRInfoEdit(intAryIndex + 1)
        g_typAryTRInfoEdit(intAryIndex + 1).m_strCode = strMLLcode
        g_typAryTRInfoEdit(intAryIndex + 1).m_strCurrency = strCur
        g_typAryTRInfoEdit(intAryIndex + 1).m_strDescript = strMLDescript
        g_typAryTRInfoEdit(intAryIndex + 1).m_intPurpose = intPurpose
        g_typAryTRInfoEdit(intAryIndex + 1).m_blnDirty = True
        ''TRANSFER|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
        strATInfo = strATLcode & Space$(2) & strCur & Space$(2) & c_strPurposeNK & Space$(2) & strATDescript
        frmSetting_Main.TRList.AddItem strATInfo    ''AUTO
        strMLInfo = strMLLcode & Space$(2) & strCur & Space$(2) & c_strPurposeNK & Space$(2) & strMLDescript
        frmSetting_Main.TRList.AddItem strMLInfo    ''MANUAL
    ElseIf (intPurpose = 1) Then    ''JV Main Use
        ''MANUAL
        ReDim Preserve g_typAryTRInfoEdit(intAryIndex)
        g_typAryTRInfoEdit(intAryIndex).m_strCode = strMLLcode
        g_typAryTRInfoEdit(intAryIndex).m_strCurrency = strCur
        g_typAryTRInfoEdit(intAryIndex).m_strDescript = strMLDescript
        g_typAryTRInfoEdit(intAryIndex).m_intPurpose = intPurpose
        g_typAryTRInfoEdit(intAryIndex).m_blnDirty = True
        ''TRANSFER|fffd||fffd||fffd|X|fffd|g|fffd||255|\|fffd||fffd|
        strMLInfo = strMLLcode & Space$(2) & strCur & Space$(2) & c_strPurposeJV & Space$(2) & strMLDescript
        frmSetting_Main.TRList.AddItem strMLInfo    ''MANUAL
    End If
    
    ''|fffd||fffd||fffd||fffd||fffd||154|z|fffd||42a82|P|fffd||82||142||fffd||fffd||142||fffd||fffd||fffd||302||fffd|False|fffd||242||fffd||fffd||fffd|
    g_blnTRNoArray = False

    ''TR|fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||a0bd||fffd||302||fffd|True|fffd||242||fffd||fffd||fffd|
    g_blnTRInput = True
            
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|t|fffd|i|fffd||fffd||fffd|A|fffd||fffd||fffd|j|fffd|Z|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd|W
'   (2)<Range |fffd|^> |fffd||38f||6d3||fffd||fffd||fffd||fffd||fffd||fffd|W
'   (3)<Date |fffd|^> TargetMonth
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|A|fffd||fffd||fffd||311||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||312|l|fffd||fffd||fffd|A|fffd||fffd||fffd|t|fffd||182||fffd||fffd||114|F|fffd||fffd||fffd||94|\|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:OK  False:ERR
'  |fffd||fffd||fffd|l
'   |fffd||d4492|l|fffd||355|]|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||302||141|A|fffd||293|r|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|K|fffd|v
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/18 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/07/22 : Knowlbo Suzuki : TargetMonth|fffd||fffd||fffd||fffd||314|N|fffd||fffd||fffd|f|fffd||255||3cd|X
'-----------------------------------------------------------------
Public Function _
fg_IsDateCells( _
    ByRef rangeMonth As Range, _
    ByRef rangeDate As Range, _
    ByRef datPeriod _
) As Boolean
    
    Dim intMonth As Integer, intDate As Integer
    Dim intYear As Integer
    
    fg_IsDateCells = False
    If rangeMonth.Value = "" Or IsNumeric(rangeMonth.Value) = False Then
        Exit Function
    End If
    intMonth = rangeMonth.Value
    intDate = rangeDate.Value
    
    If intMonth = 0 Or intDate = 0 Then
        Exit Function
    End If
    
    If Month(datPeriod) < intMonth Then
        intYear = Year(datPeriod) - 1
    Else
        intYear = Year(datPeriod)
    End If
'    If intMonth < 4 Then
'        intYear = g_intTargetSysYear + 1
'    Else
'        intYear = g_intTargetSysYear
'    End If
    
    If IsDate(intYear & "/" & intMonth & "/" & intDate) Then
        fg_IsDateCells = True
    Else
        fg_IsDateCells = False
    End If
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Collection |fffd|^> |fffd||38f||6c3|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'   (2)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd|W|fffd||312|l|fffd||183|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/11/18 : Knowlbo Suzuki : |fffd||d4481|A0|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd|C|fffd||fffd|
'-----------------------------------------------------------------
Public Function _
fg_IsEqualRangeValueAndCollection( _
    ByRef collValue As Collection, _
    ByRef rngTarget As Range _
) As Boolean

    Dim lngCollIndex As Long
    Dim rngOptimized As Range
    
    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||30f||a347|
    If rngTarget.MergeCells Then
        If rngTarget.Count = 1 Then
            Set rngOptimized = rngTarget.MergeArea
        Else
            ''MergeCell|fffd||242||fffd|DEL|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||341|AMergeArea|fffd||fffd||fffd||fffd||fffd||202||fffd|
            ''|fffd||fffd||fffd||fffd||fffd||348||342||fffd|Range|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd||302||702||711||fffd||fffd|
            Set rngOptimized = rngTarget
        End If
    Else
        Set rngOptimized = rngTarget
    End If
        
    If collValue.Count <> rngOptimized.Count Then
        fg_IsEqualRangeValueAndCollection = False
        Set rngOptimized = Nothing
        Exit Function
    End If
            
    For lngCollIndex = 1 To collValue.Count Step 1
'        If collValue.Item(lngCollIndex) <> rngTarget.Item(lngCollIndex).Value Then
        If collValue.Item(lngCollIndex) <> rngOptimized.Item(lngCollIndex).Value Then
            fg_IsEqualRangeValueAndCollection = False
            Exit Function
        End If
        If IsEmpty(collValue.Item(lngCollIndex)) And rngOptimized.Item(lngCollIndex).Value <> "" Then
            fg_IsEqualRangeValueAndCollection = False
            Exit Function
        End If
    Next
    
    fg_IsEqualRangeValueAndCollection = True
    Set rngOptimized = Nothing

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd|vNo.|fffd||30e||64fe|(Range)|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3|Z|fffd||fffd|
'   (2)<Range |fffd|^> |fffd|`|fffd|F|fffd|b|fffd|N|fffd||348||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|`|fffd|F|fffd|b|fffd|N|fffd||348||342||fffd||fffd||fffd||38f||6c3|Z|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||188||fffd|v|fffd||fffd||fffd||fffd|sNo.|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd|f|fffd|[|fffd|^|fffd||fffd|v|fffd||fffd||fffd||fffd|sNo.
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||a347||fffd||fffd|0|fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_FindSameDataRowNo( _
    ByRef rngTarget As Range, _
    ByRef rangeExtent As Range _
) As Long
    Dim lngRowNo As Long
    Dim rangeResult As Range
    
    fg_FindSameDataRowNo = 0
   
    Set rangeResult = rangeExtent.Find(rngTarget, LookAt:=xlWhole)
    If Not rangeResult Is Nothing Then
        fg_FindSameDataRowNo = rangeResult.Row
    End If
    Set rangeResult = Nothing

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd|vNo.|fffd||30e||64fe|(Variant)|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Variant |fffd|^> |fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'   (2)<Range |fffd|^> |fffd|`|fffd|F|fffd|b|fffd|N|fffd||348||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|`|fffd|F|fffd|b|fffd|N|fffd||348||342||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||188||fffd|v|fffd||fffd||fffd||fffd|sNo.|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd|f|fffd|[|fffd|^|fffd||fffd|v|fffd||fffd||fffd||fffd|sNo.
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||a347||fffd||fffd|0|fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_FindSameValueRowNo( _
        ByRef valData As Variant, _
    ByRef rangeExtent As Range _
) As Long
    Dim lngRowNo As Long
    Dim rangeResult As Range
    
    fg_FindSameValueRowNo = 0
   
    Set rangeResult = rangeExtent.Find(valData, LookAt:=xlWhole)
    If Not rangeResult Is Nothing Then
        fg_FindSameValueRowNo = rangeResult.Row
    End If
    Set rangeResult = Nothing
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||d448d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||64ea||fffd||42a8b||d4482||30d|s|fffd||fffd||fffd||64fe||fffd|j
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Worksheet |fffd|^> |fffd||38f||6c3|V|fffd|[|fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3|V|fffd|[|fffd|g|fffd||310||64ea||fffd||42a8b||d4482||30d|s|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd||d4482||30d|s
'  |fffd||fffd||fffd|l
'   |fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||a347||fffd||fffd|0|fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_FindBlankRowNo(ByRef objSheet As Worksheet)

    Dim lngRowNo As Long
    Dim lngFindRowNo As Long
    ''TargetSheet|fffd||752||fffd|

    lngFindRowNo = 0
    lngRowNo = 2
    Do While lngRowNo <= 65536
        If objSheet.Cells(lngRowNo, 1).Value = "" Then
            lngFindRowNo = lngRowNo
            Exit Do
        End If
        lngRowNo = lngRowNo + 1
    Loop
    
    fg_FindBlankRowNo = lngFindRowNo

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd|W|fffd||312|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||582||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Collection |fffd|^> |fffd||38f||6c3|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'   (2)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd|W|fffd||312|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetRangeValueToCollection( _
    ByRef collValue As Collection, _
    ByRef rngTarget As Range _
)
    Dim lngCollIndex As Long
    Dim lngMaxCollIndex As Long
    
    For lngCollIndex = 1 To collValue.Count Step 1
        collValue.Remove 1
    Next
    
    lngMaxCollIndex = rngTarget.Count
    If lngMaxCollIndex > c_intMAX_BEFOREVALUE Then
        lngMaxCollIndex = c_intMAX_BEFOREVALUE
    End If
    
    For lngCollIndex = 1 To lngMaxCollIndex Step 1
        collValue.Add rngTarget.Item(lngCollIndex).Value
    Next
    
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||312|l|fffd||303||fffd||fffd||fffd||fffd|W|fffd||582||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Collection |fffd|^> |fffd||38f||6c3|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetCollectionToRangeValue( _
    ByRef rngTarget As Range, _
    ByRef collValue As Collection _
)

    Dim lngCollIndex As Long
    Dim lngMaxIndex As Long
    
    If rngTarget.Count >= collValue.Count Then
        lngMaxIndex = collValue.Count
    Else
        lngMaxIndex = rngTarget.Count
    End If
    
    For lngCollIndex = 1 To rngTarget.Count Step 1
        If lngCollIndex <= lngMaxIndex Then
            rngTarget.Item(lngCollIndex).Value = collValue.Item(lngCollIndex)
        Else
            rngTarget.Item(lngCollIndex).Value = ""
        End If
    Next
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||42a42||fffd|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'   (2)<String |fffd|^> |fffd||64fe||fffd||fffd||fffd||fffd||fffd|g|fffd|[|fffd|N|fffd||fffd||fffd|z|fffd||fffd|
'   (3)<String |fffd|^> |fffd|f|fffd||fffd||fffd|~|fffd|b|fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|f|fffd||fffd||fffd|~|fffd|b|fffd|^|fffd||14b||fffd||602||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||42a42||fffd|A|fffd|g|fffd|[|fffd|N|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetTokensFromStr( _
    ByVal strTarget As String, _
    ByRef straryToken() As String, _
    Optional ByVal strDelimiter As String _
) As Long

    fg_GetTokensFromStr = 0
    If strTarget = "" Then
        Exit Function
    End If

    Dim intStartPos As Long
    Dim intEndPos As Long
    Dim strChar As String
    Dim strFieldData As String
    Dim blnToken As Boolean
    Dim lngTokenIndex As Long
    
    ReDim straryToken(0)
    
    intStartPos = 1
    lngTokenIndex = -1
    blnToken = False
    Do While intStartPos <= Len(strTarget)
        strChar = Mid$(strTarget, intStartPos, 1)
        If strChar <> strDelimiter Then
            If Not blnToken Then
                lngTokenIndex = lngTokenIndex + 1
                ReDim Preserve straryToken(lngTokenIndex)
                blnToken = True
            End If
            straryToken(lngTokenIndex) = straryToken(lngTokenIndex) & strChar
        Else
            blnToken = False
        End If
        intStartPos = intStartPos + 1
    Loop

    fg_GetTokensFromStr = lngTokenIndex + 1

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CSV|fffd||fffd||fffd||fffd|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|g|fffd|[|fffd|N|fffd||fffd|
'   (2)<String |fffd|^> |fffd||38f||fffd|CSV
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CSV|fffd||fffd||fffd||fffd||fffd||42a42||fffd|A|fffd||38f||6c3|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetIndexFromTokenInCSV( _
    ByVal strToken As String, _
    ByVal strCsv As String _
) As Long

    Dim lngTokenCount As Long
    Dim lngTmpCount As Long
    Dim lngTokenIndex As Long
    Dim straryToken() As String

    If strCsv = "" Or strToken = "" Then
        fg_GetIndexFromTokenInCSV = -1
        Exit Function
    End If
    lngTokenCount = 1

    lngTmpCount = fg_GetTokensFromStr(strCsv, straryToken, ",")
    If lngTmpCount > lngTokenCount Then lngTokenCount = lngTmpCount

    For lngTokenIndex = 0 To lngTokenCount - 1 Step 1
        If straryToken(lngTokenIndex) = strToken Then
            fg_GetIndexFromTokenInCSV = lngTokenIndex
            Exit Function
        End If
    Next

    fg_GetIndexFromTokenInCSV = -1

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   CSV|fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||303|g|fffd|[|fffd|N|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6c3|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'   (2)<String |fffd|^> |fffd||38f||fffd|CSV
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)CSV|fffd||fffd||fffd||fffd||fffd||42a42||fffd|A|fffd||38f||6c3|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||303|g|fffd|[|fffd|N|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||303|g|fffd|[|fffd|N|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetTokenFromIndexInCSV( _
    ByVal lngIndex As Long, _
    ByVal strCsv As String _
) As String

    Dim lngTokenCount As Long
    Dim lngTmpCount As Long
    Dim lngTokenIndex As Long
    Dim straryToken() As String
    lngTokenCount = 1

    lngTmpCount = fg_GetTokensFromStr(strCsv, straryToken, ",")
    If lngTmpCount > lngTokenCount Then lngTokenCount = lngTmpCount

    If lngIndex >= 0 And lngTokenCount > lngIndex Then
        fg_GetTokenFromIndexInCSV = straryToken(lngIndex)
    
    Else
        fg_GetTokenFromIndexInCSV = ""
    
    End If

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TabSV|fffd||fffd||fffd||fffd|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|g|fffd|[|fffd|N|fffd||fffd|
'   (2)<String |fffd|^> |fffd||38f||6c2||fffd|TabSV
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TabSV|fffd||fffd||fffd||fffd||fffd||42a42||fffd|A|fffd||38f||6c3|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd|g|fffd|[|fffd|N|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetIndexFromTokenInTSV( _
    ByVal strToken As String, _
    ByVal strTSV As String _
) As Long

    Dim lngTokenCount As Long
    Dim lngTmpCount As Long
    Dim lngTokenIndex As Long
    Dim straryToken() As String
    
    If strTSV = "" Or strToken = "" Then
        fg_GetIndexFromTokenInTSV = -1
        Exit Function
    End If

    lngTokenCount = 1
    lngTmpCount = fg_GetTokensFromStr(strTSV, straryToken, vbTab)
    If lngTmpCount > lngTokenCount Then lngTokenCount = lngTmpCount

    For lngTokenIndex = 0 To lngTokenCount - 1 Step 1
        If straryToken(lngTokenIndex) = strToken Then
            fg_GetIndexFromTokenInTSV = lngTokenIndex
            Exit Function
        End If
    Next

    fg_GetIndexFromTokenInTSV = -1

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   TabSV|fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||303|g|fffd|[|fffd|N|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6c3|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'   (2)<String |fffd|^> |fffd||38f||fffd|TabSV
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)TabSV|fffd||fffd||fffd||fffd||fffd||42a42||fffd|A|fffd||38f||6c3|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||303|g|fffd|[|fffd|N|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||303|g|fffd|[|fffd|N|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetTokenFromIndexInTSV( _
    ByVal lngIndex As Long, _
    ByVal strTSV As String _
) As String

    Dim lngTokenCount As Long
    Dim lngTmpCount As Long
    Dim lngTokenIndex As Long
    Dim straryToken() As String
    lngTokenCount = 1

    lngTmpCount = fg_GetTokensFromStr(strTSV, straryToken, vbTab)
    If lngTmpCount > lngTokenCount Then lngTokenCount = lngTmpCount

    If lngIndex >= 0 And lngTokenCount > lngIndex Then
        fg_GetTokenFromIndexInTSV = straryToken(lngIndex)
    
    Else
        fg_GetTokenFromIndexInTSV = ""
    
    End If

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||34b|K|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Validation |fffd|^> |fffd||38f||6d3||fffd||fffd||34b|K|fffd||fffd|
'   (2)<String |fffd|^> |fffd||752||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'   (3)<XlDVType |fffd|^> |fffd||38f||6c3|^|fffd|C|fffd|v
'   (4)<Variant |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<Variant |fffd|^> |fffd||fffd||fffd||34b|K|fffd||fffd||fffd|l
'   (6)<Variant |fffd|^> |fffd||fffd||fffd||34b|K|fffd||fffd||fffd|l2
'   (7)<Variant |fffd|^> IME|fffd||fffd||fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c2||313||fffd||fffd||34b|K|fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||253||fffd||fffd||34b|K|fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetupValidation( _
    ByRef valiTarget As Validation, _
    ByRef strErrorMessage As String, _
    ByRef typeType As XlDVType, _
    ByRef vntAlertStyle As Variant, _
    ByRef vntOperator As Variant, _
    ByRef vntFormula1 As Variant, _
    Optional ByRef vntFormula2 As Variant = Null _
)
    With valiTarget
        .Delete
        .Add Type:=typeType, AlertStyle:=vntAlertStyle, _
        Operator:=vntOperator, Formula1:=vntFormula1, Formula2:=vntFormula2
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = c_strNAME_SYSTEM
        .InputMessage = ""
        .ErrorMessage = strErrorMessage
        .IMEMode = xlIMEModeDisable
        .ShowInput = False
        .ShowError = True
    End With

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|v|fffd|Z|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<String |fffd|^> |fffd|v|fffd|Z|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||24c|v|fffd|Z|fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetupCalcCell( _
    ByRef rngTarget As Range, _
    ByVal strFormulaR1C1 As String _
)
    ''|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||310|F|fffd||342||1c2||fffd||fffd||fffd||fffd||90a9||fffd|H
    'rngTarget.Interior.ColorIndex = 34
    rngTarget.Locked = True
    rngTarget.FormulaHidden = False
    rngTarget.FormulaR1C1 = strFormulaR1C1

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|R|fffd|X|fffd|g|fffd|`|fffd||fffd||fffd|[|fffd|W|fffd||fffd|(WBS)|fffd|R|fffd|[|fffd|h|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<String |fffd|^> |fffd||fffd||fffd|X|fffd|g|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|R|fffd|X|fffd|g|fffd|`|fffd||fffd||fffd|[|fffd|W|fffd||fffd|(WBS)|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||311|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetupBurdenCells( _
    ByRef rngTarget As Range, _
    ByRef rngListSrc As Range _
)
    Dim lngIx As Long
    Dim strDatas As String

    ''WBS|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_WB) = False Then
        Exit Sub
    End If

    For lngIx = 0 To UBound(g_typAryWBSCode)
        rngListSrc.Offset(lngIx, 0).Value = g_typAryWBSCode(lngIx).m_strCode
    Next

    strDatas = rngListSrc.Address
    strDatas = strDatas & ":" & Left$(strDatas, InStrRev(strDatas, "$"))
    strDatas = strDatas & rngListSrc.Row + lngIx - 1

    ''Validation|fffd||752||fffd|
    sg_SetupValidation rngTarget.Validation, c_strMSG_WBS, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strDatas, Null
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|v|fffd||fffd||38f||6cc||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||24c|v|fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub _
sg_SetupTargetMonthCell( _
    ByRef rngTarget As Range _
)
    Dim strDatas As String
    Dim intMonthIndex As Integer
    Dim intYear As Integer
    Dim intMonth As Integer
    Dim intTargetMonth As Integer
    Dim lngIdx As Long
    Dim intDecisionMonth As Integer
    Dim datTarget As Date
    Dim intTargetYear As Integer
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datSDate As Date
    Dim datEDate As Date
    
    ' |fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    datSDate = fg_GetStartOfYear(g_intTargetSysYear)
    datEDate = fg_GetEndOfYear(g_intTargetSysYear)
    
    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
        datTarget = g_datImportMonth
    Else
        datTarget = datSDate
    End If

    intTargetMonth = Month(datTarget)
    intTargetYear = Year(datTarget)
    
    Select Case intTargetMonth
    Case 0
        intTargetMonth = Month(datSDate)
    Case Month(datEDate)
        If Year(datEDate) <= intTargetYear Then
            intTargetMonth = Month(datEDate)
        Else
            intTargetMonth = Month(datSDate)
        End If
    End Select
    
    intYear = Year(datSDate)
    intMonth = Month(datSDate)
    strDatas = ""
    For intMonthIndex = 1 To DateDiff("m", datSDate, datEDate) + 1 Step 1
        If strDatas <> "" Then strDatas = strDatas & ","
        strDatas = strDatas & intYear & "/" & Format$(intMonth, "00")
        lngIdx = intMonthIndex - 1
        If intTargetMonth = intMonth And intYear = intTargetYear Then
            ''|fffd|m|fffd||830e||fffd|{|fffd|P|fffd||20d|~|fffd||353|o|fffd|^|fffd||fffd||fffd||202||fffd|
            Exit For
        End If
        intMonth = intMonth + 1
        If intMonth > 12 Then
            intMonth = 1
            intYear = intYear + 1
        End If
    Next
    
'    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
'        datTarget = g_datImportMonth
'    Else
'        datTarget = DateValue(CStr(g_intTargetSysYear) & "/" & "04/01")
'    End If
'
'    intTargetMonth = Month(datTarget)
'    intTargetYear = Year(datTarget)
'
'    Select Case intTargetMonth
'    Case 0
'        intTargetMonth = 4
'    Case 3
'        If g_intTargetSysYear + 1 <= intTargetYear Then
'            intTargetMonth = 3
'        Else
'            intTargetMonth = 4
'        End If
'    End Select
'
'    intYear = g_intTargetSysYear
'    intMonth = 4
'    strDatas = ""
'    For intMonthIndex = 1 To 12 Step 1
'        If strDatas <> "" Then strDatas = strDatas & ","
'        strDatas = strDatas & intYear & "/" & Format$(intMonth, "00")
'        lngIdx = intMonthIndex - 1
'        If intTargetMonth = intMonth And intYear = intTargetYear Then
'            ''|fffd|m|fffd||830e||fffd|{|fffd|P|fffd||20d|~|fffd||353|o|fffd|^|fffd||fffd||fffd||202||fffd|
'            Exit For
'        End If
'        intMonth = intMonth + 1
'        If intMonth > 12 Then
'            intMonth = 1
'            intYear = intYear + 1
'        End If
'    Next
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    sg_SetupValidation rngTarget.Validation, c_strMSG_MONTH, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    
    rngTarget.Value = fg_GetTokenFromIndexInCSV(lngIdx, rngTarget.Validation.Formula1)

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||6cc||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cc||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/14 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub _
sg_SetTargetMonthSearchCombo( _
    ByVal strOCode As String, _
    ByVal rngTarget As Range _
)
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim intYear As Integer
    Dim intMon As Integer
    Dim strCombo As String
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datTSDate As Date
    Dim datNSDate As Date
    Dim datSDate As Date
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|

    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||fffd||fffd|N|fffd|x|fffd||197||fffd||fffd|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    datTSDate = fg_GetStartOfYear(g_intTargetSysYear)
    datNSDate = fg_GetStartOfYear(g_intTargetSysYear + 1)
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    '|fffd||150|V|fffd||311||38f||6d4|N|fffd||fffd||fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT "
    strSQL = strSQL & "IsNULL(YEAR(MAX(TargetPeriod)),0) AS Yy,  "
    strSQL = strSQL & "IsNULL(MONTH(MAX(TargetPeriod)),0) AS Mm "
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".Decision tbl "
    strSQL = strSQL & " WHERE "
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "tbl.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode) & " AND "
    strSQL = strSQL & "tbl.TargetPeriod >= " & _
            fg_AddSingleQuotation(CStr(datTSDate)) & " AND "
    strSQL = strSQL & "tbl.TargetPeriod < " & _
            fg_AddSingleQuotation(CStr(datNSDate))
            
'    strSQL = strSQL & "tbl.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode) & " AND "
'    strSQL = strSQL & "tbl.TargetPeriod >= " & _
'            fg_AddSingleQuotation(CStr(DateValue(g_intTargetSysYear & "/04/01"))) & " AND "
'    strSQL = strSQL & "tbl.TargetPeriod < " & _
'            fg_AddSingleQuotation(CStr(DateValue((g_intTargetSysYear + 1) & "/04/01"))) '& " AND "
''    strSQL = strSQL & "tbl.DecisionDate  IS NOT NULL"
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    intYear = adoRs.Fields("Yy").Value
    If intYear <= 0 Or adoRs.Fields("Mm").Value <= 0 Then
        intYear = Year(datTSDate)
        intMon = Month(datTSDate)
        strCombo = Format$(DateValue(intYear & "/" & intMon), "yyyy/mm")
    Else
        ' |fffd||38f||6d4|N|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        datSDate = fg_GetStartOfYear(fg_GetFiscalYear(DateValue(intYear & "/" & adoRs.Fields("Mm").Value & "/01")))
        
        intYear = Year(datSDate)
        intMon = Month(datSDate)
        strCombo = ""
        Do
            If strCombo <> "" Then strCombo = strCombo & ","
            strCombo = strCombo & Format$(DateValue(intYear & "/" & intMon), "yyyy/mm")
            If adoRs.Fields("Mm").Value = intMon Then Exit Do
            intMon = intMon + 1
            If intMon > 12 Then
                intMon = 1
                intYear = intYear + 1
            End If
        Loop
    End If
    
'    intYear = adoRs.Fields("Yy").Value
'    If intYear <= 0 Or adoRs.Fields("Mm").Value <= 0 Then
'        intYear = g_intTargetSysYear
'        intMon = 4
'        strCombo = Format$(DateValue(g_intTargetSysYear & "/04"), "yyyy/mm")
'    Else
'        If adoRs.Fields("Mm").Value < 4 Then
'            intYear = intYear - 1
'        End If
'        intMon = 4
'        strCombo = ""
'        Do
'            If strCombo <> "" Then strCombo = strCombo & ","
'            strCombo = strCombo & Format$(DateValue(intYear & "/" & intMon), "yyyy/mm")
'            If adoRs.Fields("Mm").Value = intMon Then Exit Do
'            intMon = intMon + 1
'            If intMon > 12 Then
'                intMon = 1
'                intYear = intYear + 1
'            End If
'        Loop
'    End If
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    sg_SetupValidation rngTarget.Validation, c_strMSG_MONTH, _
        xlValidateList, xlValidAlertStop, xlBetween, strCombo, Null
    rngTarget.Value = intYear & "/" & Format$(intMon, "00")

LB_End:
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "sg_SetTargetMonthSearchCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_SetTargetMonthSearchCombo", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d3||fffd||fffd|t|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||fffd||fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Range |fffd|^> |fffd||fffd||fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|[|fffd||fffd||fffd||316||fffd||fffd||5d1||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||253||fffd||fffd|t|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/18 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/02 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Public Sub _
sg_SetupDetailDateCells( _
    ByRef rngTargetMonth As Range, _
    ByRef rngTargetDate As Range _
)
    Dim strDatas As String
    Dim lngIdx As Long
    Dim intMonthIndex As Integer
    Dim intYear As Integer
    Dim intMonth As Integer
    Dim intTargetMonth As Integer
    Dim intDecisionMonth As Integer
    Dim datTarget As Date
    Dim intTargetYear As Integer
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datSDate As Date
    Dim datEDate As Date
    
    ' |fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    datSDate = fg_GetStartOfYear(g_intTargetSysYear)
    datEDate = fg_GetEndOfYear(g_intTargetSysYear)
    
    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
        datTarget = g_datImportMonth
    Else
        datTarget = datSDate
    End If
    intTargetMonth = Month(datTarget)
    intTargetYear = Year(datTarget)
    
    Select Case intTargetMonth
    Case 0
        intTargetMonth = Month(datSDate)
    Case Month(datEDate)
        If Year(datEDate) <= intTargetYear Then
            intTargetMonth = Month(datEDate)
        Else
            intTargetMonth = Month(datSDate)
        End If
    End Select
    
    intYear = Year(datSDate)
    intMonth = Month(datSDate)
    strDatas = ""
    For intMonthIndex = 1 To DateDiff("m", datSDate, datEDate) + 1 Step 1
        If strDatas <> "" Then strDatas = strDatas & ","
        strDatas = strDatas & Format$(intMonth, "00")
        lngIdx = intMonthIndex - 1
        If intTargetMonth = intMonth And intYear = intTargetYear Then
            Exit For
        End If
        intMonth = intMonth + 1
        If intMonth > 12 Then
            intMonth = 1
            intYear = intYear + 1
        End If
    Next
    
'    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
'        datTarget = g_datImportMonth
'    Else
'        datTarget = DateValue(CStr(g_intTargetSysYear) & "/" & "04/01")
'    End If
'    intTargetMonth = Month(datTarget)
'    intTargetYear = Year(datTarget)
'
'    Select Case intTargetMonth
'    Case 0
'        intTargetMonth = 4
'    Case 3
'        If g_intTargetSysYear + 1 <= intTargetYear Then
'            intTargetMonth = 3
'        Else
'            intTargetMonth = 4
'        End If
'    End Select
'
'    intYear = g_intTargetSysYear
'    intMonth = 4
'    strDatas = ""
'    For intMonthIndex = 1 To 12 Step 1
'        If strDatas <> "" Then strDatas = strDatas & ","
'        strDatas = strDatas & Format$(intMonth, "00")
'        lngIdx = intMonthIndex - 1
'        If intTargetMonth = intMonth And intYear = intTargetYear Then
'            Exit For
'        End If
'        intMonth = intMonth + 1
'        If intMonth > 12 Then
'            intMonth = 1
'            intYear = intYear + 1
'        End If
'    Next
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    sg_SetupValidation rngTargetMonth.Validation, c_strMSG_MONTH, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    rngTargetMonth.Validation.ShowError = False
    
    strDatas = ""
    For lngIdx = 1 To 31
        If strDatas <> "" Then strDatas = strDatas & ","
        strDatas = strDatas & Format$(lngIdx, "00")
    Next
    sg_SetupValidation rngTargetDate.Validation, c_strMSG_INPVAL, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd|NK/JV|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|[|fffd||fffd||fffd||316||fffd||fffd||5d1||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||fffd|NK/JV|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/18 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetupDetailNKJVCells( _
    ByRef rngTarget As Range _
)
    Dim strDatas As String
    
    strDatas = "NK,JV"
    sg_SetupValidation rngTarget.Validation, c_strMSG_NKJV, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> Code|fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Range |fffd|^> Name|fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (3)<Range |fffd|^> |fffd||fffd||fffd|X|fffd|g|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd|W
'   (4)<String |fffd|^> |fffd|J|fffd|e|fffd|S|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|o|fffd|[|fffd||fffd||fffd||311||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|W|fffd||251||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/06 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/10/10 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|X|fffd|g|fffd|z|fffd||fffd|(Split)|fffd||fffd||fffd||fffd||752||fffd||255||3cd|X
'-----------------------------------------------------------------
Public Sub _
sg_SetupConnCodeCells( _
    ByRef rngTargetCode As Range, _
    ByRef rngTargetName As Range, _
    ByRef rngListSrc As Range, _
    Optional ByVal strCategory As String = "" _
)
    Dim strAreaCode As String
    Dim strAreaName As String
    Dim strSplitCd() As String
    Dim strSplitNm() As String
    Dim lngIx As Long
    Dim lngItemConut As Long

    lngIx = 0
    lngItemConut = 0
    If g_strConnCodeTSV <> "" Then
        strSplitCd = Split(g_strConnCodeTSV, vbTab) ''TAB|fffd||fffd||fffd||fffd|
        strSplitNm = Split(g_strConnNameTSV, vbTab) ''TAB|fffd||fffd||fffd||fffd|
        For lngIx = LBound(strSplitCd) To UBound(strSplitCd)
            If strCategory <> "" Then
                If Left$(strSplitCd(lngIx), Len(strCategory)) = strCategory Then
                    rngListSrc.Offset(lngItemConut, 0).Value = strSplitCd(lngIx)
                    rngListSrc.Offset(lngItemConut, 1).Value = strSplitNm(lngIx)
                    lngItemConut = lngItemConut + 1
                End If
            Else
                rngListSrc.Offset(lngIx, 0).Value = strSplitCd(lngIx)
                rngListSrc.Offset(lngIx, 1).Value = strSplitNm(lngIx)
            End If
        Next
        Erase strSplitCd
        Erase strSplitNm
    End If
    
    If lngIx > 0 Then lngIx = lngIx - 1
    If strCategory <> "" Then lngIx = lngItemConut
    
    strAreaCode = rngListSrc.Address
    strAreaName = rngListSrc.Offset(0, 1).Address
    strAreaCode = strAreaCode & ":" & Left$(strAreaCode, InStrRev(strAreaCode, "$"))
    strAreaName = strAreaName & ":" & Left$(strAreaName, InStrRev(strAreaName, "$"))
    strAreaCode = strAreaCode & rngListSrc.Row + lngIx
    strAreaName = strAreaName & rngListSrc.Row + lngIx
    
    ''Validation|fffd||752||fffd|
    sg_SetupValidation rngTargetCode.Validation, c_strMSG_CONNECT_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strAreaCode, Null
    
    sg_SetupValidation rngTargetName.Validation, c_strMSG_CONNECT_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strAreaName, Null

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5ca||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> Code|fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Range |fffd|^> Name|fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (3)<Range |fffd|^> |fffd||fffd||fffd|X|fffd|g|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5ca||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetupDetailACCodeCells( _
    ByRef rngTargetCode As Range, _
    ByRef rngTargetName As Range, _
    ByRef rngListSrc As Range _
)
    Dim strAreaCode As String
    Dim strAreaName As String
    Dim lngIx As Long, lngIxEnd As Long

    lngIxEnd = UBound(g_strAryAcCode)
    For lngIx = 0 To lngIxEnd
        rngListSrc.Offset(lngIx, 0).Value = g_strAryAcCode(lngIx)
        rngListSrc.Offset(lngIx, 1).Value = g_strAryAcName(lngIx)
        rngListSrc.Offset(lngIx, 0).NumberFormat = "@"
        rngListSrc.Offset(lngIx, 1).NumberFormat = "@"
    Next

    strAreaCode = rngListSrc.Address
    strAreaName = rngListSrc.Offset(0, 1).Address
    strAreaCode = strAreaCode & ":" & Left$(strAreaCode, InStrRev(strAreaCode, "$"))
    strAreaName = strAreaName & ":" & Left$(strAreaName, InStrRev(strAreaName, "$"))
    strAreaCode = strAreaCode & rngListSrc.Row + lngIx - 1
    strAreaName = strAreaName & rngListSrc.Row + lngIx - 1
    
    ''Validation|fffd||752||fffd|
    sg_SetupValidation rngTargetCode.Validation, c_strMSG_ACCOUNT_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strAreaCode, Null
    
    sg_SetupValidation rngTargetName.Validation, c_strMSG_ACCOUNT_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strAreaName, Null
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SubContractorCode,Name|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||fffd|SubContractorCode
'   (2)<String |fffd|^> |fffd||38f||fffd|SubContractorName
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Code,Name|fffd||302||1c2||fffd||fffd||70a9||fffd||188||fffd|v|fffd||fffd||fffd||fffd|Index|fffd||fffd|Code,Name|fffd||fffd||fffd||64fe|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd||fffd|vIndex
'  |fffd||fffd||fffd|l
'   |fffd||d4488||fffd||fffd||fffd||fffd||fffd||fffd||fffd||50b|p
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetSubConCodeOrName( _
    ByRef strCode As String, _
    ByRef strName As String _
) As Long

    Dim lngIndex As Long

    ''SubContractor|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_SC) = False Then
        fg_GetSubConCodeOrName = -1
        Exit Function
    End If


    For lngIndex = 0 To UBound(g_typArySConInfo)
        If strCode <> "" Then
            If g_typArySConInfo(lngIndex).m_strCode = strCode Then
                strName = g_typArySConInfo(lngIndex).m_strName
                fg_GetSubConCodeOrName = lngIndex
                Exit Function
            End If
        Else
            If g_typArySConInfo(lngIndex).m_strName = strName Then
                strCode = g_typArySConInfo(lngIndex).m_strCode
                fg_GetSubConCodeOrName = lngIndex
                Exit Function
            End If
        End If
    Next

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   AssociateCode,Name|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||fffd|AssociateCode
'   (2)<String |fffd|^> |fffd||38f||fffd|AssociateName
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Code,Name|fffd||302||1c2||fffd||fffd||70a9||fffd||188||fffd|v|fffd||fffd||fffd||fffd|Index|fffd||fffd|Code,Name|fffd||fffd||fffd||64fe|
'  |fffd||7c2||fffd|l
'   (1)<Long |fffd|^> |fffd||fffd|vIndex
'  |fffd||fffd||fffd|l
'   |fffd||d4488||fffd||fffd||fffd||fffd||fffd||fffd||fffd||50b|p
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetAssociateCodeOrName( _
    ByRef strCode As String, _
    ByRef strName As String _
) As Long

    Dim lngIndex As Long

    ''Associate|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_AS) = False Then
        fg_GetAssociateCodeOrName = -1
        Exit Function
    End If


    For lngIndex = 0 To UBound(g_typAryAsoInfo)
        If strCode <> "" Then
            If g_typAryAsoInfo(lngIndex).m_strCode = strCode Then
                strName = g_typAryAsoInfo(lngIndex).m_strName
                fg_GetAssociateCodeOrName = lngIndex
                Exit Function
            End If
        Else
            If g_typAryAsoInfo(lngIndex).m_strName = strName Then
                strCode = g_typAryAsoInfo(lngIndex).m_strCode
                fg_GetAssociateCodeOrName = lngIndex
                Exit Function
            End If
        End If
    Next

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||6d1||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> Dirty|fffd|t|fffd||fffd||fffd|O
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||6d1||fffd||fffd||316||20a2||fffd||fffd||fffd||d0b9||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||6d1||fffd|  False:|fffd||6d1||fffd||fffd||fffd||fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_QuestionSave( _
    ByVal blnDirty As Boolean _
) As Boolean

    If blnDirty Then
        If vbYes <> MsgBox(c_strQUESTION_SAVE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
            fg_QuestionSave = False
            Exit Function
        End If
    End If

    fg_QuestionSave = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||fffd||752||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GCMN_MSTARY |fffd|^> |fffd||38f||6c3|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||752||fffd||3c2||fffd|  False:|fffd||fffd||fffd||752||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_IsSetCommonInfo( _
    ByVal enmVal As GCMN_MSTARY _
) As Boolean
    
    Dim lngIx As Long
    
On Error GoTo Error
    
    Select Case enmVal
    Case GCMN_PJ ''Project|fffd||fffd||fffd|
        lngIx = LBound(g_typAryPJTInfo)
    Case GCMN_CB ''CashBook
        lngIx = LBound(g_typAryCBInfo)
    Case GCMN_BB ''BankBook
        lngIx = LBound(g_typAryBBInfo)
    Case GCMN_TR ''Transfer
        lngIx = LBound(g_typAryTRInfo)
    Case GCMN_AS ''Associate
        lngIx = LBound(g_typAryAsoInfo)
    Case GCMN_SC ''Sub-contractor
        lngIx = LBound(g_typArySConInfo)
    Case GCMN_WB ''WBS
        lngIx = LBound(g_typAryWBSCode)
    Case GCMN_CP ''|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd|
        lngIx = LBound(g_typAryRTInfo)
    End Select
    fg_IsSetCommonInfo = True
    Exit Function
Error:
    fg_IsSetCommonInfo = False

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||fffd|Ledger
'   (2)<String |fffd|^> |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_MsgBoxInputStart( _
    ByVal strLedger As String, _
    Optional ByVal strMSG As String = "" _
)
    Dim strFormatMsg As String
    
    strFormatMsg = "The " & strLedger & " is ready." & vbCrLf
    If strMSG <> "" Then strFormatMsg = strFormatMsg & strMSG

    MsgBox strFormatMsg, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6ca||590||fffd||fffd||fffd|
'   (2)<String |fffd|^> |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_MsgBoxError( _
    ByVal strFunName As String, _
    Optional ByVal strMSG As String = "" _
)

    Dim strFormatMsg As String
    strFormatMsg = "SystemError! In:" & strFunName & vbCrLf
    If strMSG <> "" Then strFormatMsg = strFormatMsg & " : " & strMSG & vbCrLf

    MsgBox strFormatMsg, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|j|fffd|[|fffd|N|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3|Z|fffd||fffd|
'   (2)<Range |fffd|^> |fffd|`|fffd|F|fffd|b|fffd|N|fffd||348||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3|Z|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||348||353||fffd||fffd||143||fffd||fffd|j|fffd|[|fffd|N|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||742||fffd||fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/25 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_IsSameRowData( _
    ByRef rangeTarget As Range, _
    ByRef rangeExtent As Range _
) As Boolean

    If CStr(rangeTarget.Value) = "" Then
        fg_IsSameRowData = False
        Exit Function
    End If
    
    Dim rangeResult As Range
    Dim lngFirstRow As Long
    
    Set rangeResult = rangeExtent.Find(rangeTarget, LookAt:=xlWhole)
    If Not rangeResult Is Nothing Then
        lngFirstRow = rangeResult.Row
    End If
    
    Do Until rangeResult Is Nothing
    
        If rangeResult.Row <> rangeTarget.Row Then
            fg_IsSameRowData = True
            Set rangeResult = Nothing
            Exit Function
        End If
    
        Set rangeResult = rangeExtent.FindNext(rangeTarget)
        If rangeResult.Row = lngFirstRow Then
            Exit Do
        End If
    Loop

    fg_IsSameRowData = False
    Set rangeResult = Nothing

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCode|fffd||fffd||782||30d|\|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||fffd|LinkCode
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCode|fffd||fffd||782||30d|\|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Integer |fffd|^> |fffd||fffd||fffd||fffd||fffd|FGLNK_CODE / |fffd||fffd||fffd|s|fffd|F-1
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_CheckLinkCodeKind( _
    ByVal strLinkCode As String _
) As Integer
    Dim strCode As String
    
    If strLinkCode = "" Then
        fg_CheckLinkCodeKind = -1
        Exit Function
    End If
    strCode = Mid$(strLinkCode, Len(g_strOfficeCode) + 2 + 1, 2)

    Select Case strCode
    Case "IV" ''Invoice
        fg_CheckLinkCodeKind = GLNK_IV
    Case "AS" ''Associate
        fg_CheckLinkCodeKind = GLNK_AS
    Case "SC" ''Sub-contractor
        fg_CheckLinkCodeKind = GLNK_SC
    Case "RM" ''Remittance
        fg_CheckLinkCodeKind = GLNK_RM
    Case "PP" ''PrePaid
        fg_CheckLinkCodeKind = GLNK_PP
    Case "FA" ''Fixed Assets
        fg_CheckLinkCodeKind = GLNK_FA
    Case Else
        fg_CheckLinkCodeKind = -1
    End Select

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Transfer|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd|RecordSet|fffd||fffd||fffd||fffd||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<ADODB.Recordset |fffd|^> RecordSet|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'   (2)<clsTransBookData |fffd|^> Transfer|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Transfer|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd|RecordSet|fffd||fffd||fffd||fffd||310||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/23 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetTrDataFromRecSet( _
    ByRef adoRs As ADODB.Recordset, _
    ByRef typTRBookData As clsTransBookData _
)
    typTRBookData.m_datLedgerDate = adoRs.Fields("LedgerDate").Value
    If (IsNull(adoRs.Fields("Description").Value) = False) Then
        typTRBookData.m_strDescription = CStr(adoRs.Fields("Description").Value)
    End If
    If (IsNull(adoRs.Fields("Details").Value) = False) Then
        typTRBookData.m_strDetails = CStr(adoRs.Fields("Details").Value)
    End If
    typTRBookData.m_strWBSCode = CStr(adoRs.Fields("WBSCode").Value)
    typTRBookData.m_strAcCode = CStr(adoRs.Fields("AccountCode").Value)
    typTRBookData.m_strAcName = CStr(adoRs.Fields("AccountName").Value)
    If (IsNull(adoRs.Fields("ConnectionCode").Value) = False) Then
        typTRBookData.m_strConectCode = CStr(adoRs.Fields("ConnectionCode").Value)
    End If
    If (IsNull(adoRs.Fields("ConnectionName").Value) = False) Then
        typTRBookData.m_strConectName = CStr(adoRs.Fields("ConnectionName").Value)
    End If
    If (IsNull(adoRs.Fields("LedgerLinkCode").Value) = False) Then
        typTRBookData.m_strLedgerLinkCode = CStr(adoRs.Fields("LedgerLinkCode").Value)
    End If
    If (IsNull(adoRs.Fields("EviNo").Value) = False) Then
        typTRBookData.m_strEviNo = CStr(adoRs.Fields("EviNo").Value)
    End If
    If (IsNull(adoRs.Fields("CheckNo").Value) = False) Then
        typTRBookData.m_strCheckNo = CStr(adoRs.Fields("CheckNo").Value)
    End If
    typTRBookData.m_strNKJV = CStr(adoRs.Fields("NKJV").Value)
    typTRBookData.m_strClaim = CStr(adoRs.Fields("Claim").Value)
  

    If (IsNull(adoRs.Fields("Paid").Value) = False) Then
        typTRBookData.m_curPaid = CCur(adoRs.Fields("Paid").Value)
    Else
        typTRBookData.m_curPaid = 0
    End If
        
    If (IsNull(adoRs.Fields("Received").Value) = False) Then
        typTRBookData.m_curReceived = CCur(adoRs.Fields("Received").Value)
    Else
        typTRBookData.m_curReceived = 0
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Transfer|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd|Range|fffd||fffd||fffd||fffd||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^>
'   (2)<clsTransBookData |fffd|^> Transfer|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Transfer|fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd|Range|fffd||fffd||fffd||fffd||310||752||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   m_datTargetPeriod, m_datLedgerDate|fffd||355||293|r|fffd||752||80b7||fffd||90b1||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/23 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetTrDataFromRange( _
    ByRef rngTgt As Range, _
    ByRef typTRBookData As clsTransBookData _
)
    If rngTgt.Offset(0, 2).Value <> "" Then ''Description
        typTRBookData.m_strDescription = CStr(rngTgt.Offset(0, 2).Value)
    End If
    If rngTgt.Offset(0, 5).Value <> "" Then ''Details
        typTRBookData.m_strDetails = CStr(rngTgt.Offset(0, 5).Value)
    End If
    typTRBookData.m_strWBSCode = CStr(rngTgt.Offset(0, 7).Value) ''WBSCode
    typTRBookData.m_strAcCode = CStr(rngTgt.Offset(0, 8).Value) ''AccountCode
    typTRBookData.m_strAcName = CStr(rngTgt.Offset(0, 9).Value) ''AccountName
    If rngTgt.Offset(0, 10).Value <> "" Then ''ConectCode
        typTRBookData.m_strConectCode = CStr(rngTgt.Offset(0, 10).Value)
    End If
    If rngTgt.Offset(0, 11).Value <> "" Then ''ConectName
        typTRBookData.m_strConectName = CStr(rngTgt.Offset(0, 11).Value)
    End If
    If rngTgt.Offset(0, 12).Value <> "" Then ''LinkCode
        typTRBookData.m_strLedgerLinkCode = CStr(rngTgt.Offset(0, 12).Value)
    End If
    If rngTgt.Offset(0, 13).Value <> "" Then ''EviNo
        typTRBookData.m_strEviNo = CStr(rngTgt.Offset(0, 13).Value)
    End If
    If rngTgt.Offset(0, 14).Value <> "" Then ''CheckNo
        typTRBookData.m_strCheckNo = CStr(rngTgt.Offset(0, 14).Value)
    End If
    If rngTgt.Offset(0, 15).Value <> "" Then ''NKJV
        typTRBookData.m_strNKJV = CStr(rngTgt.Offset(0, 15).Value)
    End If
    typTRBookData.m_strClaim = CStr(rngTgt.Offset(0, 16).Value) ''Claim
                        
    If rngTgt.Offset(0, 17).Value <> "" Then ''Paid
        typTRBookData.m_curPaid = rngTgt.Offset(0, 17).Value
    Else
         typTRBookData.m_curPaid = 0
    End If
    If rngTgt.Offset(0, 18).Value <> "" Then ''Received
        typTRBookData.m_curReceived = rngTgt.Offset(0, 18).Value
    Else
        typTRBookData.m_curReceived = 0
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<GLNK_CODE |fffd|^> |fffd||fffd||78e||fffd||fffd||297|p|fffd||4b4d2|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCode|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> LinkCode
'  |fffd||fffd||fffd|l
'   |fffd|R|fffd|[|fffd|h|fffd|FOfficeCode+YY(|fffd|N|fffd|x)+XX(LedgerKind:2|fffd||fffd|)+3|fffd||fffd||fffd|A|fffd||fffd|
'   SS|fffd||142||314||fffd||fffd||502||341|A3|fffd||fffd||fffd|A|fffd||502||310||64ea||fffd||fffd||fffd|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||242||fffd||fffd||fffd|
' |fffd|@   001|fffd|`099 = Z01|fffd|`Z99
' |fffd|@   101|fffd|`199 = Y01|fffd|`Y99
' |fffd|@   201|fffd|`299 = X01|fffd|`X99
' |fffd|@   301|fffd|`399 = W01|fffd|`W99
' |fffd|@   401|fffd|`499 = V01|fffd|`V99
' |fffd|@   501|fffd|`599 = U01|fffd|`U99
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/16 : Knowlbo Suzuki : |fffd||152||8391||fffd|YID|fffd||1c9||fffd|
'-----------------------------------------------------------------
Public Function _
fg_CreateLinkCode( _
    ByVal enmVal As GLNK_CODE _
) As String

    Dim intYear As Integer
    Dim intCodeNumber As Integer
    Dim strKindCode As String
    Dim strCode As String
    Dim strNumCode As String
    Dim intCalcNum As Integer

    ''|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||42f83|J|fffd||fffd||fffd||fffd||fffd|gLinkCode|fffd||50d||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||10e|g|fffd|p
    intCodeNumber = g_intAryCurLinkNumber(enmVal)
    intCodeNumber = intCodeNumber + 1
    g_intAryCurLinkNumber(enmVal) = intCodeNumber

    Select Case enmVal
    Case GLNK_IV ''Invoice
        strKindCode = "IV"
    Case GLNK_AS ''Associate
        strKindCode = "AS"
    Case GLNK_SC ''Sub-contractor
        strKindCode = "SC"
    Case GLNK_RM ''Remittance
        strKindCode = "RM"
    Case GLNK_PP ''PrePaid
        strKindCode = "PP"
    Case GLNK_FA ''Fixed Assets
        strKindCode = "FA"
    End Select

    intYear = g_intTargetSysYear Mod 100    ''|fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd|Q|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||308||a554||fffd||242||fffd||fffd||fffd|
    strCode = g_strOfficeCode & Format$(intYear, "00") & strKindCode
    'strNumCode = Format$(intCodeNumber, "000")
    intCalcNum = intCodeNumber \ 100
    strNumCode = Chr(90 - intCalcNum) & Format$(intCodeNumber, "00")
    strCode = strCode & strNumCode
    fg_CreateLinkCode = strCode

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|V|fffd|[|fffd|g|fffd|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd|
'   (2)<Workbook |fffd|^> |fffd||38f||fffd|Book
'   (3)<Variant |fffd|^> |fffd||fffd||fffd||fffd|l
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd|V|fffd|[|fffd|g|fffd||303|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Variant |fffd|^> |fffd|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_GetDocProperty( _
    ByVal strPropName As String, _
    ByRef wbTarget As Workbook, _
    Optional ByVal vntDefaultValue As Variant = Null _
) As Variant
    Dim propTarget As DocumentProperty

    For Each propTarget In wbTarget.CustomDocumentProperties
        If propTarget.Name = strPropName Then
            fg_GetDocProperty = propTarget.Value
            Exit Function
        End If
    Next

    fg_GetDocProperty = vntDefaultValue

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|V|fffd|[|fffd|g|fffd|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6c3|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd|
'   (2)<Variant |fffd|^> |fffd|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'   (3)<Workbook |fffd|^> |fffd||38f||fffd|Book
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd|V|fffd|[|fffd|g|fffd||303|J|fffd|X|fffd|^|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
fg_SetDocProperty( _
    ByVal strPropName As String, _
    ByVal vntPropValue As Variant, _
    ByRef wbTarget As Workbook _
)

    Dim propTarget As DocumentProperty

    For Each propTarget In wbTarget.CustomDocumentProperties
        If propTarget.Name = strPropName Then
            propTarget.Value = vntPropValue
            Exit Sub
        End If
    Next

    Dim intType As Integer
    Select Case VarType(vntPropValue)
    Case vbInteger, vbLong, vbByte
        intType = msoPropertyTypeNumber
    
    Case vbSingle, vbDouble, vbCurrency
        intType = msoPropertyTypeFloat
    
    Case vbDate
        intType = msoPropertyTypeDate
    
    Case vbString
        intType = msoPropertyTypeString
    
    Case vbBoolean
        intType = msoPropertyTypeBoolean
    
    Case Else
        Exit Sub
    
    End Select
    
    wbTarget.CustomDocumentProperties.Add Name:=strPropName, LinkToContent:=False, Type:=intType, Value:=vntPropValue

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||28d|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> |fffd||fffd||fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||28d|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/04 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sg_SetScreenUpdate(ByVal blnMode As Boolean)
    If blnMode Then
        If Application.ScreenUpdating = False Then
            Application.ScreenUpdating = blnMode
        End If
    Else
        If Application.ScreenUpdating = True Then
            Application.ScreenUpdating = blnMode
        End If
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SHEET|fffd||fffd||fffd||253||fffd||fffd||fffd|LINKCODE|fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> |fffd||fffd||fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SHEET|fffd||fffd||fffd||253||fffd||fffd||fffd|LINKCODE|fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd||742||fffd||fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/13 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function fg_CheckSameLinkPayment(ByRef objSheet As Worksheet, _
            strSelectCode As String, Optional ByVal lngRowIx As Long) As Boolean

    Dim lngCount As Long
    Dim lngAryIndex As Long
    Dim lngItemCount As Long
    Dim strAryLinkCode() As String

    ''|fffd||fffd||fffd||fffd||fffd||38f||fffd|START|fffd|s|fffd||fffd||fffd||64fe|
    If (lngRowIx = 0) Then
        lngRowIx = 12
        'lngRowIx = c_intBBDetailRowST
        Do Until objSheet.Cells(lngRowIx, 4).Value = ""
            lngRowIx = lngRowIx + 1
        Loop
        lngRowIx = lngRowIx - 1
    End If
    lngRowIx = lngRowIx - 1
    
    ''ID|fffd||fffd|NULL|fffd||303||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd|LinkCode|fffd|z|fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
    lngAryIndex = 0
    lngItemCount = 0
    Do Until lngRowIx < 12
        ''ID|fffd||fffd|NULL(|fffd||fffd||fffd|X|fffd|V)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd|
        If (objSheet.Cells(lngRowIx, 23).Value = "") And (objSheet.Cells(lngRowIx, 14).Value <> "") Then
            ReDim Preserve strAryLinkCode(lngAryIndex)
            strAryLinkCode(lngAryIndex) = objSheet.Cells(lngRowIx, 14).Value
            lngItemCount = lngItemCount + 1
            lngAryIndex = lngAryIndex + 1
        End If
        lngRowIx = lngRowIx - 1
    Loop
    
    ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|LINKCODE|fffd||fffd||fffd||fffd||fffd||83||fffd||fffd|R|fffd|[|fffd|h(|fffd||fffd||fffd|X|fffd|V)|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9|CHECK
    If (lngItemCount > 0) Then
        For lngCount = 0 To UBound(strAryLinkCode)
            If (strAryLinkCode(lngCount) = strSelectCode) Then
                fg_CheckSameLinkPayment = True
                Exit Function
            End If
        Next
    Else
        fg_CheckSameLinkPayment = False
    End If
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|t|fffd||315||fffd||fffd||fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Date |fffd|^> prmDate
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Date|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|yy/mm/dd |fffd||fffd||fffd||fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|iyyyy/mm/dd)
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/01 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_DatetoString( _
    ByVal datParam As Date _
) As String
    Dim strDate As String
    strDate = CStr(Year(datParam)) & "/" & Format$(Month(datParam), "00")
    strDate = strDate & "/" & Format$(Day(datParam), "00")
    
    If Hour(datParam) <> 0 And Second(datParam) <> 0 And Minute(datParam) Then
        strDate = strDate & " " & Hour(datParam) & ":" & Second(datParam) & ":" & Minute(datParam)
    End If
    
    fg_DatetoString = strDate
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   OfficeCode|fffd||311||fffd||fffd||74a|m|fffd|F
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> strParam
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)OfficeCode|fffd|z|fffd||fffd||fffd||fffd||311||fffd||fffd||74a|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||742||fffd||fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/10/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fg_IsExistOfficeCode( _
    ByVal strParam As String _
) As Boolean
    Dim lngIx As Long
    
    For lngIx = 0 To UBound(g_typAryOfficeInfo)
        If g_typAryOfficeInfo(lngIx).m_strOfficeCode = strParam Then
            fg_IsExistOfficeCode = True
            Exit Function
        End If
    Next
    fg_IsExistOfficeCode = False
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||289||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (1)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||289||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/05 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_SetCurrencyCombo( _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim strCCodeRng As String
    Dim intIx As Integer

    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||289||743|R|fffd|[|fffd|h|fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT CurrencyCode as Cc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".RateTable rt "
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "rt.CurrencyCode "
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    If blnWCFlg Then
        rngLstTgt.Value = "*"
        intIx = 1
    Else
        intIx = 0
    End If
    Do Until adoRs.EOF
        rngLstTgt.Offset(intIx, 0).Value = adoRs.Fields("Cc").Value
        intIx = intIx + 1
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    rngLstTgt.Columns.Hidden = True
    
    If intIx < 1 Then intIx = 1
    strCCodeRng = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    
    If blnWCFlg Then
        rngTarget.Value = rngLstTgt.Offset(1, 0).Value
    Else
        rngTarget.Value = rngLstTgt.Value
    End If

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "sg_SetCurrencyCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_SetCurrencyCombo", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (1)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/09 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sg_SetCountryCombo( _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    Dim strData As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim strCName() As String
    Dim strCountry As String
    Dim strLstAdr As String

    intIxEnd = fg_GetCountries(strCName) - 1 '|fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j|fffd||fffd||fffd||fffd||44c||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
    strCountry = fg_GetCNameByCCode(Mid$(g_strOfficeCode, 3, 2)) '|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||30d||fffd||fffd||fffd||fffd||64fe|
    If intIxEnd < 0 Then
        '|fffd|G|fffd||fffd||fffd|[or|fffd|f|fffd|[|fffd|^|fffd||202||fffd||fffd|i|fffd||28f||d0a0||fffd||80a6||fffd||202||fffd||fffd||342||fffd||fffd|j
        If strCountry <> "" Then
            strData = strCountry
        Else
            strData = " "
        End If
        sg_SetupValidation rngTarget.Validation, c_strMSG_COUNTRY_SEARCH, _
            xlValidateList, xlValidAlertStop, xlBetween, strData, Null
        rngTarget.Value = strData
    Else
        rngLstTgt.Value = "*"
        For intIx = 1 To intIxEnd + 1
            rngLstTgt.Offset(intIx, 0).Value = strCName(intIx - 1)
        Next

'        Range(strLstAdr).Sort key1:=rngLstTgt, order1:=xlAscending, header:=xlNo
        If blnWCFlg Then
            strLstAdr = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
        Else
            strLstAdr = rngLstTgt.Offset(1, 0).Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
        End If
        sg_SetupValidation rngTarget.Validation, c_strMSG_COUNTRY_SEARCH, _
            xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
        
        If strCountry <> "" Then
            rngTarget.Value = strCountry
        Else
            rngTarget.Value = rngLstTgt.Value
        End If
    End If
    
    Erase strCName '|fffd|z|fffd||fffd|J|fffd||fffd|
    
    rngLstTgt.Columns.Hidden = True
    
    If blnWCFlg Then rngTarget.Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||351||389||fffd||fffd|p

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd|R|fffd|[|fffd|h
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/03 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/09/08 : Knowlbo Suzuki : CSV|fffd||142||310||752||fffd||fffd||fffd|Z|fffd||fffd||fffd||348||350||752||fffd||255||3cd|X
'-----------------------------------------------------------------
Public Sub sg_SetOCodeCombo( _
    ByVal strCCode As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range _
)
    Dim strCodeUpr As String
    Dim strCodeRng As String
    Dim strCodeDefault As String
    Dim intIx As Integer
    Dim intRngIx As Integer
    Dim intIxEnd As Integer

    strCodeUpr = UCase$(strCCode)
    intIxEnd = UBound(g_typAryOfficeInfo)
    
    rngLstTgt.Value = "*"
    intRngIx = 0
    strCodeDefault = "*"
    
    For intIx = 0 To intIxEnd
        If UCase$(g_typAryOfficeInfo(intIx).m_strCountry) = strCodeUpr Then
            If intRngIx = 0 Then
                strCodeDefault = g_typAryOfficeInfo(intIx).m_strOfficeCode
            End If
            intRngIx = intRngIx + 1
            rngLstTgt.Offset(intRngIx, 0).Value = g_typAryOfficeInfo(intIx).m_strOfficeCode
        End If
    Next

    rngLstTgt.Columns.Hidden = True

    strCodeRng = rngLstTgt.Address & ":" & rngLstTgt.Offset(intRngIx, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_OFFCODE_SEARCH, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCodeRng, Null
    rngTarget.Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||351||389||fffd||fffd|p
    rngTarget.Value = strCodeDefault

End Sub

Public Function escapeSQLSpecialChars(ByVal strString As String) As String
    escapeSQLSpecialChars = Replace$(strString, "'", "''")
End Function

Public Function convertSQLNullToEmpty(ByVal varValue As Variant) As String
    convertSQLNullToEmpty = varValue & ""
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|o|fffd|[|fffd|e|fffd|B|fffd|J|fffd||fffd||fffd|o|fffd|[(vertical bar)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||243|o|fffd|[|fffd|e|fffd|B|fffd|J|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|X|fffd|y|fffd|[|fffd|X|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||3ca||fffd||fffd||3576||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   SAP|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd||242||fffd|"|"|fffd||fffd||fffd||fffd||602||8576||fffd||fffd||fffd||182||fffd||fffd||108||fffd||fffd||fffd||fffd||102||fffd||fffd||90bd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2015/04/07 : Katoh :
'-----------------------------------------------------------------
Public Function _
fg_Verticalbar_Change(ByVal strData As String) As String

    fg_Verticalbar_Change = Replace$(strData, "|", " ")

End Function
Attribute VB_Name = "wsBSBalance"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "cmdSearch, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnShow, 4, 2, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| BS|fffd||fffd||fffd||5cf|W|fffd|v|fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/31 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s
Private m_lngDataMaxRowNo As Long            ''|fffd|f|fffd|[|fffd|^|fffd||151||fffd|s

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 500 ''|fffd||fffd||fffd||34d||151||fffd|s
Private Const mc_lngWorkSheet_MAXROWINDEX As Long = 65536 ''|fffd|V|fffd|[|fffd|g|fffd||151||fffd|s
Private Const mc_lngRowST As Integer = 10 ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Private Const mc_strACCOUNT_101_CODE As String = "101XXXXX" '|fffd||fffd||fffd||fffd||216||68c||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||783|R|fffd|[|fffd|h-101xxxxx
Private Const mc_strACCOUNT_108_CODE As String = "108XXXXX" '|fffd||fffd||fffd||fffd||216||68c||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||783|R|fffd|[|fffd|h-108xxxxx
Private Const mc_strACCOUNT_101_NAME As String = "Cash in Hand" '|fffd||fffd||fffd||fffd||216||68c||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||796||fffd||fffd||fffd|-101xxxxx
Private Const mc_strACCOUNT_108_NAME As String = "Cash in Bank" '|fffd||fffd||fffd||fffd||216||68c||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||796||fffd||fffd||fffd|-108xxxxx

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/03/31 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean
    Dim lngRowIndex As Long

    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_BS) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True

        sg_SetupTargetMonthCell Cells(4, 3) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        If g_blnAryCmnMstUpdate(GLED_BS) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            g_blnAryCmnMstUpdate(GLED_BS) = False
        End If

        g_blnArySetupSheet(GLED_BS) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        g_blnAryCmnMstUpdate(GLED_BS) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        Exit Function
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If

    ''Cash,Book|fffd||fffd||4b902||242||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False And _
       fg_IsSetCommonInfo(GCMN_CB) = False Then
        MsgBox c_strMSG_MASTER_CASHorBANK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & mc_lngRowST)
 
    Cells(1, 1).Activate
 
     ''|fffd||151||fffd|s|fffd||fffd||fffd||752||fffd|
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    
    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    Range("B" & mc_lngRowST, "O" & m_lngModfyMAX_ROWINDEX).ClearContents
    lngRowIndex = mc_lngRowST
    Do While Range("C" & lngRowIndex & ":D" & lngRowIndex).MergeCells = True And lngRowIndex <= 65536
        Range("C" & lngRowIndex & ":D" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop

    
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|

    g_blnArySetupSheet(GLED_BS) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_BS) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/01 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strData As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim rngTarget As Range
    Dim blnJVUse As Boolean
    Dim strCName() As String
    
    Dim rngLstTgt As Range
    Dim strLstAdr As String
    
    blnJVUse = False
    
    ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'    sg_SetupTargetMonthCell Range("C4")
    sg_SetTargetMonthSearchCombo g_strOfficeCode, Range("C4")
    Range("C4").NumberFormat = c_strFORMAT_MONTH
    
    ''Currency |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngTarget = Range("C5")
    Set rngLstTgt = Range("AM10")
    sg_SetCurrencyCombo rngTarget, rngLstTgt, True
    
    ''Ledger Type(NK/JV) |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    strData = c_strPurposeNK & "," & c_strPurposeJV
    Set rngTarget = Cells(6, 3)
    sg_SetupValidation rngTarget.Validation, c_strMSG_NKJV, _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    rngTarget.Value = fg_GetTokenFromIndexInCSV(0, rngTarget.Validation.Formula1)

   'Country|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||752||fffd|
    Set rngTarget = Range("E4")
    Set rngLstTgt = Range("AK10")
    sg_SetCountryCombo rngTarget, rngLstTgt, True
    strData = fg_GetCurrencyByCName(rngTarget.Value)
    If strData <> "" Then
        '|fffd||fffd||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||fffd||752||fffd|
        Range("C5") = strData
    End If

    'Office Code|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||752||fffd|
    Set rngTarget = Range("E5")
    Set rngLstTgt = Range("AD10")
    sg_SetOCodeCombo Mid$(g_strOfficeCode, 3, 2), rngTarget, rngLstTgt
    Range("E5").Value = g_strOfficeCode
    
    ''Account Code & Account Name
'    Range("E6").NumberFormat = "@"
'    Range("G6").NumberFormat = "@"
'    Range("AF10:AF" & CStr(UBound(g_strAryAcCode) + 11)).NumberFormat = "@"
'    sg_SetupDetailACCodeCells Range("E6"), _
'                              Range("G6"), _
'                              Range("AF10")
'    Range("AF10:AG10").Insert Shift:=xlShiftDown
'    Range("AF10").NumberFormat = "@"
'    Range("AF10").Value = "*"
'    Range("AG10").Value = ""
'
'    s_SetAccountComboForBS Range("E6"), Range("AF10")
    s_SetAccountComboForBS Range("E6"), Range("G6"), Range("AF10"), True
    
'    strLstAdr = Range("AF10").Address & ":" & Range("AF10").Offset(UBound(g_strAryAcCode) + 1, 0).Address
'    sg_SetupValidation Range("E6").Validation, c_strMSG_ACCOUNT_CODE, _
'        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
    Range("E6").Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||389||fffd|
'    strLstAdr = Range("AG10").Address & ":" & Range("AG10").Offset(UBound(g_strAryAcCode) + 1, 0).Address
'    sg_SetupValidation Range("G6").Validation, c_strMSG_ACCOUNT_NAME, _
'        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
'    Columns("AF:AG").Hidden = True
    
'    Range("E6").Value = "*"
'    Range("G6").Value = ""
    
    Set rngLstTgt = Nothing
    Set rngTarget = Nothing
    
  End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/03/27 : Knowlbo m.o : |fffd||fffd||fffd||fffd||fffd||752||fffd||348||342||fffd||fffd|g|fffd||fffd|
'   2002/03/31 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    Me.Range("B" & mc_lngRowST, "C" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    Me.Range("E" & mc_lngRowST, "J" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    Me.Range("K" & mc_lngRowST, "N" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Me.Range("O" & mc_lngRowST, "O" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = c_strFORMAT_MONTH
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/03/31 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
            
    f_CheckInputData = False
    If Cells(4, 3).Value = "" Then ''TargetMonth
        strMessage = c_strMSG_MONTH
        Cells(4, 3).Activate
        Exit Function
    End If
    
    If Cells(5, 3).Value = "" Then ''Currency
        strMessage = c_strMSG_RIGHTCURRENCY
        Cells(5, 3).Activate
        Exit Function
    End If
    
    If Cells(6, 3).Value = "" Then ''Ledger Type
        strMessage = c_strMSG_NKJV
        Cells(6, 3).Activate
        Exit Function
    End If
    
    If Cells(4, 5).Value = "" Then ''Country
        strMessage = c_strMSG_COUNTRY_SEARCH
        Cells(4, 5).Activate
        Exit Function
    End If
    
    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/01 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean
    
    Dim lngIndex As Long
    Dim lngMax As Long
    Dim rngMyTarget As Range
    Dim strCode As String
    Dim strData As String
    
    f_onChangeCell = False
    
    ''TargetMonth
    If rngTarget.Row = 4 And rngTarget.Column = 3 Then
        m_blnDirty = True
        If rngTarget.Value = "" Then
            Exit Function
        End If
    ''Currency
    ElseIf rngTarget.Row = 5 And rngTarget.Column = 3 Then
        m_blnDirty = True
'        If rngTarget.Value = "" Or _
'           rngTarget.Value = String$(Len(rngTarget.Value), "*") Then
'            Exit Function
'        End If
        If rngTarget.Value = "" Then
            Exit Function
        End If
        If InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 And _
           rngTarget.Value <> String$(Len(rngTarget.Value), "*") Then
            Exit Function
        End If
    ''Ledger Type
    ElseIf rngTarget.Row = 6 And rngTarget.Column = 3 Then
        m_blnDirty = True
        If rngTarget.Value = "" Then
            Exit Function
        End If
    ''Country|fffd|i|fffd||389||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd|j
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 5 Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        strCode = fg_GetCCodeByCName(rngTarget.Value)
        If strCode <> "" Then
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            sg_SetOCodeCombo strCode, Range("E5"), Range("AD10")
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        ElseIf rngTarget.Value = String$(Len(rngTarget.Value), "*") And _
               rngTarget.Value <> "" Then
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            sg_SetupValidation Range("E5").Validation, c_strMSG_OFFCODE_SEARCH, _
                xlValidateList, xlValidAlertStop, xlBetween, "*", Null
            Range("E5").Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||351||389||fffd||fffd|p
            Range("E5").Value = "*"
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        Else
            m_blnSetupCellsInProgress = False
            Exit Function
        End If
        strData = fg_GetCurrencyByCName(strCode)
        If strData <> "" Then
            Range("C5").Value = strData
        End If
        
        strData = Range("E5").Value
        Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
        If strData = "" Or InStr(1, strData, "*", vbTextCompare) > 0 Then
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
            If InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 Then
                sg_SetTargetMonthSearchCombo "%", Range("C4")
                strData = "*"
            Else
                sg_SetTargetMonthSearchCombo "__" & fg_GetCCodeByCName(rngTarget.Value) & "___", Range("C4")
                strData = fg_GetCurrencyByCName(rngTarget.Value)
            End If
        Else
            '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
            sg_SetTargetMonthSearchCombo strData, Range("C4")
            strData = fg_GetCurrencyByOCode(strData)
        End If
        '|fffd||289||742||fffd||752||fffd|
        If strData <> "" Then Range("C5").Value = strData
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        m_blnSetupCellsInProgress = False
    ''Office Code
    ElseIf rngTarget.Row = 5 And rngTarget.Column = 5 Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        strCode = rngTarget.Value
        'office code|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||64fe||fffd|E|fffd||752||fffd|
        If f_ChkOfficeCode(strCode) Then
            strData = fg_GetCNameByCCode(Mid$(strCode, 3, 2))
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            If UCase$(Range("E4").Value) <> UCase$(strData) Then
                '|fffd||fffd||fffd||315||3cd|X|fffd||254||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                Range("E4").Value = strData
                sg_SetOCodeCombo Mid$(strCode, 3, 2), rngTarget, Range("AD10")
                rngTarget.Value = strCode
            End If
            strData = rngTarget.Value
            
            If strData = "" Or InStr(1, strData, "*", vbTextCompare) > 0 Then
                '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                If InStr(1, Range("E4").Value, "*", vbTextCompare) > 0 Then
                    sg_SetTargetMonthSearchCombo "%", Range("C4")
                    strData = "*"
                Else
                    sg_SetTargetMonthSearchCombo "__" & fg_GetCCodeByCName(Range("E4").Value) & "___", Range("C4")
                    strData = fg_GetCurrencyByCName(Range("E4").Value)
                End If
            Else
                '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                sg_SetTargetMonthSearchCombo strData, Range("C4")
                strData = fg_GetCurrencyByOCode(strData)
            End If
            '|fffd||289||742||fffd||752||fffd|
            If strData <> "" Then Range("C5").Value = strData
            
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        ElseIf rngTarget.Value = String$(Len(rngTarget.Value), "*") Then
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
            If InStr(1, Range("E4").Value, "*", vbTextCompare) > 0 Then
                sg_SetTargetMonthSearchCombo "%", Range("C4")
                strData = "*"
            Else
                sg_SetTargetMonthSearchCombo "__" & fg_GetCCodeByCName(Range("E4").Value) & "___", Range("C4")
                strData = fg_GetCurrencyByCName(Range("E4").Value)
            End If
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
'        ElseIf rngTarget.Value <> String$(Len(rngTarget.Value), "*") Or _
               rngTarget.Value = "" Then
        Else
            m_blnSetupCellsInProgress = False
            Exit Function
        End If
        m_blnSetupCellsInProgress = False
    ''Account Code
    ElseIf rngTarget.Row = 6 And rngTarget.Column = 5 Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        If Not f_GetEndCel(Range("AF10").Row, Range("AF10").Column) Is Nothing Then
            lngMax = f_GetEndCel(Range("AF10").Row, Range("AF10").Column).Row - Range("AF10").Row
        Else
            lngMax = -1
        End If
        For lngIndex = 0 To lngMax
            If rngTarget.Value = Range("AF10").Offset(lngIndex, 0).Value Then
                rngTarget.Offset(0, 2).Value = Range("AF10").Offset(lngIndex, 1).Value
                Exit For
            End If
        Next
        If lngIndex > lngMax Then
            If InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 Then
                rngTarget.Offset(0, 2).Cells = ""
            Else
                m_blnSetupCellsInProgress = False
                Exit Function
            End If
        End If
        m_blnSetupCellsInProgress = False
    ''Account Name
    ElseIf rngTarget.Row = 6 And rngTarget.Column = 7 Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf strData = "" Or strData = Space$(Len(strData)) Then
            rngTarget.Value = ""
            rngTarget.Offset(0, -2).Value = "*"
        Else
            If Not f_GetEndCel(Range("AF10").Row, Range("AF10").Column) Is Nothing Then
                lngMax = f_GetEndCel(Range("AF10").Row, Range("AF10").Column).Row - Range("AF10").Row
            Else
                lngMax = -1
            End If
            For lngIndex = 0 To lngMax
                If rngTarget.Value = Range("AG10").Offset(lngIndex, 0).Value Then
                    ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
    ''               If Cells(7???, 9???).Value = c_strPurposeJV Then
    ''                   If fg_GetIndexFromTokenInCSV(g_strAryAcCode(lngIndex), g_strLCodeIndispensableAccount) >= 0 Then
    ''                       ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
    ''                       MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    ''                       rngTarget.Activate
    ''                       Exit Function
    ''                   End If
    ''               End If
                    rngTarget.Offset(0, -2).Value = Range("AF10").Offset(lngIndex, 0).Value
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcName) Then
                If rngTarget.Value = "*" Then
                    rngTarget.Offset(0, -2).Cells = "*"
                Else
                    m_blnSetupCellsInProgress = False
                    Exit Function
                End If
            End If
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    End If
    
    f_onChangeCell = True
    
LBL_END:
    Set rngMyTarget = Nothing
    

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Search|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub cmdSearch_Click()
    Dim strMessage As String
    Dim datTarget As Date
    Dim lngDate As Long
    Dim strCurrency As String
    Dim intLedgerType As Integer
    Dim lngRowIndex As Long
    Dim strCName As String
    Dim strOCode As String
    Dim strACode As String
    
    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData(strMessage) Then
        MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        cmdSearch.Visible = True
        Exit Sub
    End If
    

'    If m_blnDirty = False Then Exit Sub

    datTarget = Range("C4").Value
'    If fg_CreateAccountSummary(datTarget, True) <> True Then ''|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||c42c|
'        Exit Sub
'    End If

    ''|fffd||38f||6cc||fffd||fffd|A|fffd||289||741|A|fffd||fffd|v
    lngDate = DateValue(datTarget)
    
    strCurrency = Range("C5").Value
    s_CnvAstToPer strCurrency
    
    If StrComp(Range("C6").Value, c_strPurposeNK) = 0 Then
        intLedgerType = "0"
    Else
        intLedgerType = "1"
    End If
    
    ''|fffd||fffd|
    strCName = Range("E4").Value
    If strCName = "" Or strCName = Space$(Len(strCName)) Then
        strCName = "%"
    Else
        s_CnvAstToPer strCName
    End If
    
    ''|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
    strOCode = Range("E5").Value
    If strOCode = "" Or strOCode = Space$(Len(strOCode)) Then
        strOCode = "%"
    Else
        s_CnvAstToPer strOCode
    End If
    
    ''|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
    strACode = Range("E6").Value
    If strACode = "" Or strACode = Space$(Len(strACode)) Then
        strACode = "%"
    Else
        s_CnvAstToPer strACode
    End If
    
    sg_SetScreenUpdate False
    
    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    Range("B" & mc_lngRowST, "O" & m_lngModfyMAX_ROWINDEX).ClearContents
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX '|fffd||151||fffd|s|fffd||fffd||fffd|Z|fffd|b|fffd|g
    
    lngRowIndex = mc_lngRowST
    Do While Range("C" & lngRowIndex & ":D" & lngRowIndex).MergeCells = True _
             And lngRowIndex <= 65536
        Range("C" & lngRowIndex & ":D" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    
    m_lngDataMaxRowNo = mc_lngRowST
    
    ''|fffd||fffd||fffd|a|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30f|W|fffd|v|fffd||195|\|fffd||fffd|
    s_GetCashBankSummary lngDate, strCurrency, intLedgerType, strCName, strOCode, strACode

    ''BS|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||30f|W|fffd|v|fffd||195|\|fffd||fffd|
    s_GetBSAccountSummary lngDate, strCurrency, intLedgerType, strCName, strOCode, strACode

    ''DrCr|fffd|}|fffd|[|fffd|N|fffd||1c9||fffd|
    s_SetDrCrMarker
    
    ''|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    Application.GoTo Range("a" & mc_lngRowST), Scroll:=True
    
    cmdSearch.Visible = True
    sg_SetScreenUpdate True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    Dim lngRowIndex As Long
    
    sg_SetScreenUpdate False
    Range("B" & mc_lngRowST, "O" & m_lngModfyMAX_ROWINDEX).ClearContents
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX '|fffd||151||fffd|s|fffd||fffd||fffd|Z|fffd|b|fffd|g
    lngRowIndex = mc_lngRowST
    Do While Range("C" & lngRowIndex & ":D" & lngRowIndex).MergeCells = True And lngRowIndex <= 65536
        Range("C" & lngRowIndex & ":D" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    sg_SetScreenUpdate True
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(11) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ShowTable|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SubTotal|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||283|v|fffd||fffd||fffd|Z|fffd|X|fffd||14d||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnShow_Click()

    Dim ExcelObj As Application
    Dim wsTgtSheet As Worksheet     ''|fffd||a5d7||fffd|p|fffd||303|V|fffd|[|fffd|g
    Dim lngEnvSheetsCount As Long
    Dim RngActiveCells As Range
    Dim strCurDir As String
    Dim strFileName As String       ''SendFile|fffd||fffd|
    Dim strFindFile As String       ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|

    
    If Cells(10, 2).Value = "" Then '|fffd|f|fffd|[|fffd|^|fffd||202||fffd|
        MsgBox c_strMSG_SEACH_NFound, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
        Exit Sub
    End If
        
    
    strFileName = "BS_" & Format$(Cells(4, 3).Value, "yymm")
    
    If Cells(5, 5).Value <> "*" Then 'OfficeCode
        strFileName = strFileName & Cells(5, 5).Value
    End If
    
    If Cells(5, 3).Value <> "*" Then 'Currency
        strFileName = strFileName & "_" & Cells(5, 3).Value
    End If
    
    '|fffd|R|fffd|s|fffd|[|fffd||183|J|fffd||fffd||fffd||fffd||fffd|g|fffd|Z|fffd||fffd||fffd||6d1||fffd|
    Set RngActiveCells = ActiveCell
    Me.Range("A1:O" & m_lngDataMaxRowNo + 1).Copy
    RngActiveCells.Activate
    
    Set RngActiveCells = Nothing

On Error GoTo LBL_ERR

    '|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||c42c|
    Set ExcelObj = CreateObject("Excel.Application")
    
    lngEnvSheetsCount = ExcelObj.Application.SheetsInNewWorkbook
    ExcelObj.Application.SheetsInNewWorkbook = 1
    
    sg_SetScreenUpdate False    ''|fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    ExcelObj.Workbooks.Add      ''|fffd|V|fffd||fffd||fffd||fffd|BOOK|fffd||fffd||fffd||c42c|
    Set wsTgtSheet = ExcelObj.ActiveWorkbook.Worksheets("Sheet1")
    ExcelObj.ActiveWindow.Zoom = 75
    
    'Paste
    Set RngActiveCells = wsTgtSheet.Range("A1:O" & m_lngDataMaxRowNo + 1)
    RngActiveCells.PasteSpecial (xlPasteValuesAndNumberFormats)
    
    '|fffd|s|fffd|v|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|{|fffd|^|fffd||fffd||fffd||30f||fffd||fffd||fffd|
    Dim objCmdBtn As Object
    For Each objCmdBtn In wsTgtSheet.OLEObjects
        objCmdBtn.Delete
    Next

    ''|fffd||55742||fffd||752||fffd|
    wsTgtSheet.Columns("A:A").ColumnWidth = 2
    wsTgtSheet.Columns("B:B").ColumnWidth = 15.5
    wsTgtSheet.Columns("C:C").ColumnWidth = 14
    wsTgtSheet.Columns("D:D").ColumnWidth = 18
    wsTgtSheet.Columns("E:E").ColumnWidth = 18
    wsTgtSheet.Columns("F:F").ColumnWidth = 16.13
    wsTgtSheet.Columns("G:G").ColumnWidth = 14.63
    wsTgtSheet.Columns("H:H").ColumnWidth = 25.13
    wsTgtSheet.Columns("I:I").ColumnWidth = 14.63
    wsTgtSheet.Columns("J:J").ColumnWidth = 25.13
    wsTgtSheet.Columns("K:K").ColumnWidth = 20.75
    wsTgtSheet.Columns("L:L").ColumnWidth = 20
    wsTgtSheet.Columns("M:M").ColumnWidth = 20
    wsTgtSheet.Columns("N:N").ColumnWidth = 20
    wsTgtSheet.Columns("O:O").ColumnWidth = 12

    'SUBTOTAL|fffd|s|fffd||312||1c9||fffd|-------------------
    Dim lngRowNo As Long
    Dim lngCurRowNo As Long
    Dim lngMrkRowNo As Long
    Dim strCurAcCode As String
    Dim strFormula As String
    Dim RngLine As Range
    
    lngRowNo = 10
    lngMrkRowNo = 10

    Do While lngRowNo <= 65536
        If wsTgtSheet.Cells(lngRowNo, 2).Value <> "" Then
            strCurAcCode = wsTgtSheet.Cells(lngRowNo, 2).Value
            lngMrkRowNo = lngRowNo
            For lngCurRowNo = lngMrkRowNo + 1 To 65536
                If wsTgtSheet.Cells(lngCurRowNo, 2).Value <> "" Then
                    If wsTgtSheet.Cells(lngCurRowNo, 2).Value <> strCurAcCode Then
                        'SUBTOTAL|fffd|s|fffd|}|fffd||fffd|
                        wsTgtSheet.Rows(lngCurRowNo).Insert
                        wsTgtSheet.Rows(lngCurRowNo).Font.Bold = True
                        strFormula = "=SUBTOTAL(9,R[" & lngMrkRowNo - lngCurRowNo & "]C:R[-1]C)"
                        wsTgtSheet.Cells(lngCurRowNo, 11).FormulaR1C1 = strFormula
                        wsTgtSheet.Cells(lngCurRowNo, 12).FormulaR1C1 = strFormula
                        wsTgtSheet.Cells(lngCurRowNo, 13).FormulaR1C1 = strFormula
                        wsTgtSheet.Cells(lngCurRowNo, 14).FormulaR1C1 = strFormula
                        
                        Set RngLine = wsTgtSheet.Range("B" & lngCurRowNo & ":O" & lngCurRowNo)
                        RngLine.Borders(xlEdgeTop).LineStyle = xlDouble
                        RngLine.Borders(xlEdgeTop).Weight = xlThick
                        RngLine.Borders(xlEdgeTop).ColorIndex = xlAutomatic
                        Set RngLine = Nothing
                        
                        lngRowNo = lngCurRowNo
                        Exit For
                    
                    End If
                Else
                    '|fffd||14f|I|fffd|s|fffd||fffd|SUBTOTAL|fffd|s
                    strFormula = "=SUBTOTAL(9,R[" & lngMrkRowNo - lngCurRowNo & "]C:R[-1]C)"
                    wsTgtSheet.Cells(lngCurRowNo, 11).FormulaR1C1 = strFormula
                    wsTgtSheet.Cells(lngCurRowNo, 12).FormulaR1C1 = strFormula
                    wsTgtSheet.Cells(lngCurRowNo, 13).FormulaR1C1 = strFormula
                    wsTgtSheet.Cells(lngCurRowNo, 14).FormulaR1C1 = strFormula
                    wsTgtSheet.Rows(lngCurRowNo).Font.Bold = True
                    
                    Set RngLine = wsTgtSheet.Range("B" & lngCurRowNo & ":O" & lngCurRowNo)
                    RngLine.Borders(xlEdgeTop).LineStyle = xlDouble
                    RngLine.Borders(xlEdgeTop).Weight = xlThick
                    RngLine.Borders(xlEdgeTop).ColorIndex = xlAutomatic
                    Set RngLine = Nothing
                    
                    lngRowNo = lngCurRowNo
                    Exit For
                End If
            Next
        
        Else
            Exit Do
        End If
        lngRowNo = lngRowNo + 1
    Loop
    
    wsTgtSheet.Cells(1, 1).Select
    
    '|fffd||fffd||fffd||fffd||348||350||752||fffd|
    With wsTgtSheet.PageSetup
        .PrintArea = "$B$1:$O$" & lngRowNo - 1
        .CenterFooter = "&P / &N"
        .LeftMargin = Application.CentimetersToPoints(1)
        .RightMargin = Application.CentimetersToPoints(1)
        .TopMargin = Application.CentimetersToPoints(1.5)
        .BottomMargin = Application.CentimetersToPoints(1.5)
        .HeaderMargin = Application.CentimetersToPoints(0.8)
        .FooterMargin = Application.CentimetersToPoints(0.8)
        .CenterHorizontally = True
        .Orientation = xlLandscape
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .Zoom = 52
    End With
    

    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||752||80b5||fffd|ABOOK|fffd||fffd||6d1||fffd|
    ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|
'    Dim intFindCount As Integer     ''|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'    Dim blnFindFile As Boolean      ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
'
'    blnFindFile = False
'    strCurDir = g_strAppPath & c_strExportFolder
'    If Dir(strCurDir, vbDirectory) = "" Then    ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||c42c|
'        MkDir strCurDir
'    End If
'    strFindFile = Dir(strCurDir & Application.PathSeparator & "*.xls")
'    Do While strFindFile <> ""
'        If (InStr(strFindFile, strFileName) <> 0) Then
'            blnFindFile = True
'            intFindCount = intFindCount + 1
'        End If
'        strFindFile = Dir()
'    Loop
'    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
'    If (blnFindFile = True) Then
'        strFileName = strCurDir & Application.PathSeparator & strFileName & "(" & intFindCount + 1 & ")" & ".xls"
'    Else
'        strFileName = strCurDir & Application.PathSeparator & strFileName & ".xls"
'    End If
'
'    ExcelObj.ActiveWorkbook.SaveAs Filename:=strFileName    ''BOOK|fffd||6d1||fffd|
    
    ExcelObj.Application.SheetsInNewWorkbook = lngEnvSheetsCount    '|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||c42c||fffd||142||fffd|sheet|fffd||316||fffd||fffd||fffd||fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|


LBL_END:
    Application.CutCopyMode = False

    sg_SetScreenUpdate True
    ExcelObj.Visible = True
    Set ExcelObj = Nothing

    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "cmdShow_Click:SubTotalOut ERROR " & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If
    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If

    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd|i|fffd|O|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/11 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/18 : Knowlbo m.o : SS|fffd||389||fffd|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'   2013/02/28 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetCashBankSummaryPastMonth( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strACode As String _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strLed As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim intNum As Integer
    Dim lngRet As Long
    Dim datSDate As Date
    Dim strMSG As String
    Dim curBl As Currency
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||341|A|fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
    datSDate = fg_GetEndOfYear(fg_GetFiscalYear(CDate(lngDate)) - 1)
    
'    If Month(CDate(lngDate)) > 3 Then
'        datSDate = DateValue(Year(CDate(lngDate)) & "/03/31")
'    Else
'        datSDate = DateValue(Year(CDate(lngDate)) - 1 & "/03/31")
'    End If
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''OfficeCode TargetPeriod Currency ACode Dr Cr
    strSQL = "SELECT "
    strSQL = strSQL & "cm.EnglishName AS EName, pm.ProjectName AS PName, "
    strSQL = strSQL & "sa.OfficeCode AS OCode, sa.LedgerCode AS LCode, sa.AccountCode AS ACode, "
    strSQL = strSQL & "sa.Currency AS Currency, Sum(sa.Balance) AS Bl, MAX(sa.TargetPeriod) AS TDate "
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_SummaryAC & " sa, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " om, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_CountryMaster & " cm, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_PJTMaster & " pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "om.OfficeCode = sa.OfficeCode AND  "
    strSQL = strSQL & "cm.CountryCode = om.Country AND  "
    strSQL = strSQL & "pm.OfficeCode = sa.OfficeCode AND  "
    
    strSQL = strSQL & "sa.TargetPeriod >= " & fg_AddSingleQuotation(datSDate) & " AND "
    strSQL = strSQL & "sa.TargetPeriod < " & fg_AddSingleQuotation(CDate(lngDate)) & " AND "
    
    strSQL = strSQL & "sa.AccountCode < " & fg_AddSingleQuotation(c_strBSCODE_BEGIN) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||302||752||fffd||fffd|o
    strSQL = strSQL & "sa.AccountCode LIKE " & fg_AddSingleQuotation(strACode) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||302||752||fffd||fffd|o
    
    strSQL = strSQL & "sa.Currency LIKE " & fg_AddSingleQuotation(strCurrency) & " AND "
    
    strSQL = strSQL & "sa.Purpose = " & fg_AddSingleQuotation(CStr(intLedgerType)) & " AND "

    strSQL = strSQL & "cm.EnglishName LIKE " & fg_AddSingleQuotation(strCName) & " AND "
    
    strSQL = strSQL & "sa.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode)
    
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "cm.EnglishName, pm.ProjectName, sa.OfficeCode, sa.AccountCode, sa.LedgerCode, sa.Currency"
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "sa.AccountCode, cm.EnglishName, sa.OfficeCode, sa.LedgerCode"
    
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
'    Call objdba.startTransaction(adoCn)
'    Call objdba.commitTransaction(objcon)

    '|fffd|W|fffd|v|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||fffd|
    lngRowIndex = mc_lngRowST
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    Do Until adoRs.EOF
        If Cells(lngRowIndex, 2).Value <> Empty Then
            GoTo LB_Loop_End
        End If
        
        Cells(lngRowIndex, 2).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
        
        'Account Name|fffd||fffd||fffd|Z|fffd|b|fffd|g
        Select Case Left$(adoRs.Fields("ACode").Value, 3)
            Case Left$(mc_strACCOUNT_101_CODE, 3)
                Cells(lngRowIndex, 3).Value = mc_strACCOUNT_101_NAME
            Case Left$(mc_strACCOUNT_108_CODE, 3)
                Cells(lngRowIndex, 3).Value = mc_strACCOUNT_108_NAME
            Case Else
        End Select
        Cells(lngRowIndex, 3).Value = Cells(lngRowIndex, 3).Value & " " & _
                                      adoRs.Fields("LCode").Value
        
        curBl = 0
        If Not (IsNull(adoRs.Fields("Bl").Value)) Then
            curBl = CCur(adoRs.Fields("Bl").Value)
        End If
        
        Cells(lngRowIndex, 5).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
        Cells(lngRowIndex, 6).Value = adoRs.Fields("Currency").Value '|fffd||289||fffd|
        Cells(lngRowIndex, 7).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
        Cells(lngRowIndex, 8).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
        Cells(lngRowIndex, 15).Value = adoRs.Fields("TDate").Value '|fffd||38f||6d4|N|fffd||fffd||fffd||fffd|
        
        Cells(lngRowIndex, 11).Value = curBl 'Past Balance|fffd||fffd||fffd|Z|fffd|b|fffd|g
        Cells(lngRowIndex, 14).Value = curBl '|fffd||fffd||fffd||fffd||fffd||fffd|Balance|fffd||fffd||fffd|Z|fffd|b|fffd|g
        
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
LB_Loop_End:
        lngRowIndex = lngRowIndex + 1
    Loop
    m_blnSetupCellsInProgress = False
   

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetCashBankSummaryPastMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_GetCashBankSummaryPastMonth", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/11 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/02/20 : Knowlbo m.o : |fffd|O|fffd||fffd||fffd||fffd||fffd||182||302||82||fffd||fffd||fffd||fffd||d0b9||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/18 : Knowlbo m.o : SS|fffd||389||fffd|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetCashBankSummaryThisMonth( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strACode As String _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strLed As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim intNum As Integer
    Dim lngRet As Long
    Dim strMSG As String
    Dim curDr As Currency
    Dim curCr As Currency
    Dim rngFindCelEnd As Range
    Dim rngCel As Range
    Dim strFirstAdr As String
    Dim lngLastRowIndex As Long
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''OfficeCode TargetPeriod Currency AccountCode Dr Cr
    strSQL = "SELECT "
    strSQL = strSQL & "cm.EnglishName AS EName, pm.ProjectName AS PName, "
    strSQL = strSQL & "sa.OfficeCode AS OCode, sa.LedgerCode AS LCode, sa.AccountCode AS ACode, "
    strSQL = strSQL & "sa.Currency AS Currency, Sum(sa.Credit) AS Cr, Sum(sa.Debit) AS Dr, MAX(sa.TargetPeriod) AS TDate "
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_SummaryAC & " sa, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " om, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_CountryMaster & " cm, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_PJTMaster & " pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "om.OfficeCode = sa.OfficeCode AND  "
    strSQL = strSQL & "cm.CountryCode = om.Country AND  "
    strSQL = strSQL & "pm.OfficeCode = sa.OfficeCode AND  "
    
    strSQL = strSQL & "sa.TargetPeriod = " & fg_AddSingleQuotation(CDate(lngDate)) & " AND "
    
    strSQL = strSQL & "sa.AccountCode < " & fg_AddSingleQuotation(c_strBSCODE_BEGIN) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||302||752||fffd||fffd|o
    strSQL = strSQL & "sa.AccountCode LIKE " & fg_AddSingleQuotation(strACode) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||302||752||fffd||fffd|o
    
    strSQL = strSQL & "sa.Currency LIKE " & fg_AddSingleQuotation(strCurrency) & " AND "
    
    strSQL = strSQL & "sa.Purpose = " & fg_AddSingleQuotation(CStr(intLedgerType)) & " AND "

    strSQL = strSQL & "cm.EnglishName LIKE " & fg_AddSingleQuotation(strCName) & " AND "
    
    strSQL = strSQL & "sa.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode)

    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "cm.EnglishName, pm.ProjectName, sa.OfficeCode, sa.AccountCode, sa.LedgerCode, sa.Currency"
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "sa.AccountCode, cm.EnglishName, sa.OfficeCode, sa.LedgerCode"
    
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    '|fffd|W|fffd|v|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||fffd|
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|Account Code|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngFindCelEnd = f_GetEndCel(mc_lngRowST, 2)
    If rngFindCelEnd Is Nothing Then
        lngLastRowIndex = mc_lngRowST
    Else
        lngLastRowIndex = rngFindCelEnd.Row + 1
    End If

    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    
    Do Until adoRs.EOF
    
        If Not rngFindCelEnd Is Nothing Then
            '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|Account Code|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
            Set rngCel = Me. _
                Range("B" & mc_lngRowST & ":B" & rngFindCelEnd.Row). _
                Find(what:=adoRs.Fields("ACode").Value, LookAt:=xlWhole)
        Else
            Set rngCel = Nothing
        End If
        
        If rngCel Is Nothing Then
            '|fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||fffd||38d||14f|I|fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
            lngRowIndex = lngLastRowIndex
            lngLastRowIndex = lngLastRowIndex + 1 '|fffd||14f|I|fffd||d448d|s|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd|X|fffd|V
            Cells(lngRowIndex, 2).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 11).Value = 0 '|fffd|O|fffd||fffd||fffd||702||142||fffd|Balance|fffd||fffd|0|fffd||242||fffd||fffd||fffd|
        Else
            'Ledger Code|fffd||183|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||192||289||742||fffd||fffd||fffd|v|fffd||fffd||fffd||90a9|
            If Right$(Cells(rngCel.Row, 3).Value, Len(adoRs.Fields("LCode").Value)) = adoRs.Fields("LCode").Value And _
                Cells(rngCel.Row, 6).Value = adoRs.Fields("Currency").Value And _
                Cells(rngCel.Row, 7).Value = adoRs.Fields("OCode").Value Then
                'Account Code|fffd||fffd|Ledger Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                lngRowIndex = rngCel.Row
            Else
                strFirstAdr = rngCel.Address
                lngRowIndex = Empty
                Do
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Account Code|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
                    Set rngCel = Me. _
                        Range("B" & mc_lngRowST & ":B" & rngFindCelEnd.Row). _
                        FindNext(after:=rngCel)
                    
                    'Ledger Code|fffd||183|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||192||289||742||fffd||fffd||fffd|v|fffd||fffd||fffd||90a9|
                    If Not rngCel Is Nothing And _
                        Right$(Cells(rngCel.Row, 3).Value, Len(adoRs.Fields("LCode").Value)) = adoRs.Fields("LCode").Value And _
                        Cells(rngCel.Row, 6).Value = adoRs.Fields("Currency").Value And _
                        Cells(rngCel.Row, 7).Value = adoRs.Fields("OCode").Value Then
                       'Account Code|fffd||fffd|Ledger Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                       lngRowIndex = rngCel.Row
                       Exit Do
                    End If
                    
                Loop Until strFirstAdr = rngCel.Address
                
                If lngRowIndex = Empty Then
                    'Account Code|fffd||fffd|Ledger Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||302||14d||14f|I|fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    lngRowIndex = lngLastRowIndex
                    lngLastRowIndex = lngLastRowIndex + 1 '|fffd||14f|I|fffd||d448d|s|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd|X|fffd|V
                    Cells(lngRowIndex, 2).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    Cells(lngRowIndex, 11).Value = 0 '|fffd|O|fffd||fffd||fffd||702||142||fffd|Balance|fffd||fffd|0|fffd||242||fffd||fffd||fffd|
                End If
            End If
        End If
        
        '|fffd|f|fffd|[|fffd|^|fffd||310||752||fffd|
'|fffd|Z|fffd||fffd||fffd||30c||fffd||fffd||fffd|        Range("C" & lngRowIndex & ":D" & lngRowIndex).Merge
        Select Case Left$(adoRs.Fields("ACode").Value, 3)
           Case Left$(mc_strACCOUNT_101_CODE, 3)
               Cells(lngRowIndex, 3).Value = mc_strACCOUNT_101_NAME
           Case Left$(mc_strACCOUNT_108_CODE, 3)
               Cells(lngRowIndex, 3).Value = mc_strACCOUNT_108_NAME
           Case Else
        End Select
        
        'Account Name|fffd||fffd||fffd|Z|fffd|b|fffd|g
        Cells(lngRowIndex, 3).Value = Cells(lngRowIndex, 3).Value & " " & _
                                      adoRs.Fields("LCode").Value
        curDr = 0
        curCr = 0
        If Not (IsNull(adoRs.Fields("Dr").Value)) Then
            curDr = CCur(adoRs.Fields("Dr").Value)
        End If
        If Not (IsNull(adoRs.Fields("Cr").Value)) Then
            curCr = CCur(adoRs.Fields("Cr").Value)
        End If
        Cells(lngRowIndex, 14).Value = Cells(lngRowIndex, 11).Value + curDr + curCr 'Balance|fffd||fffd||fffd|Z|fffd|o|fffd|E|fffd|Z|fffd|b|fffd|g
        'Debit|fffd||fffd||fffd|Z|fffd|b|fffd|g
        If curDr > 0 Then
            Cells(lngRowIndex, 12).Value = curDr
        ElseIf curDr < 0 Then
            Cells(lngRowIndex, 12).Value = -curDr
        End If
        'Credit|fffd||fffd||fffd|Z|fffd|b|fffd|g
        If curCr > 0 Then
            Cells(lngRowIndex, 13).Value = curCr
        ElseIf curCr < 0 Then
            Cells(lngRowIndex, 13).Value = -curCr
        End If
        
        Cells(lngRowIndex, 5).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
        Cells(lngRowIndex, 6).Value = adoRs.Fields("Currency").Value '|fffd||289||fffd|
        Cells(lngRowIndex, 7).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
        Cells(lngRowIndex, 8).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
        Cells(lngRowIndex, 15).Value = adoRs.Fields("TDate").Value '|fffd||38f||6d4|N|fffd||fffd||fffd||fffd|
        
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    
    m_blnSetupCellsInProgress = False
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|Account Code|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngFindCelEnd = f_GetEndCel(mc_lngRowST, 2)
    If rngFindCelEnd Is Nothing Then
        lngRowIndex = mc_lngRowST
    Else
        lngRowIndex = rngFindCelEnd.Row + 1
    End If
    
    '|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd|Account Code|fffd||fffd|Ledger No.|fffd||14f||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g
    Range("B" & mc_lngRowST & ":N" & lngRowIndex).Sort _
    key1:=Range("B" & mc_lngRowST), key2:=Range("I" & mc_lngRowST), key3:=Range("G" & mc_lngRowST)
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetCashBankSummaryThisMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_GetCashBankSummaryThisMonth", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/11 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetCashBankSummary( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strACode As String _
)
    
    '|fffd|O|fffd||fffd||fffd||702||142||30f|W|fffd|v|fffd|E|fffd|\|fffd||fffd|
    s_GetCashBankSummaryPastMonth lngDate, strCurrency, intLedgerType, strCName, strOCode, strACode
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f|W|fffd|v|fffd|E|fffd|\|fffd||fffd|
    s_GetCashBankSummaryThisMonth lngDate, strCurrency, intLedgerType, strCName, strOCode, strACode
 
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|hBS|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd|i|fffd|O|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/11 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/11 : Knowlbo Suzuki : |fffd|O|fffd|N|fffd|x|fffd||30e|c|fffd|z|fffd|O|fffd||315|\|fffd||fffd||fffd|}|fffd||fffd||fffd||1c9||fffd|
'   2003/03/19 : Knowlbo m.o : SS|fffd||389||fffd|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'   2013/02/28 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetBSAccountSummaryPastMonth( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strACode As String _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strLed As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim intNum As Integer
    Dim lngRet As Long
    Dim strMSG As String
    Dim curBl As Currency
    Dim datSDate As Date
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LB_ERR
    End If

On Error GoTo LB_ERR
    
    '|fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||364||fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
    datSDate = fg_GetEndOfYear(fg_GetFiscalYear(CDate(lngDate)) - 1)
    
'    If Month(CDate(lngDate)) > 3 Then
'        datSDate = DateValue(Year(CDate(lngDate)) & "/03/31")
'    Else
'        datSDate = DateValue(Year(CDate(lngDate)) - 1 & "/03/31")
'    End If
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''OfficeCode TargetPeriod Currency AccountCode Dr Cr
    strSQL = "SELECT "
    strSQL = strSQL & "cm.EnglishName AS EName, pm.ProjectName AS PName, sa.OfficeCode AS OCode, "
    strSQL = strSQL & "sa.AccountCode AS ACode, IsNULL(sa.ConnectionCode, '') AS CCode, "
    strSQL = strSQL & "CName = (SELECT ccv.Name FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strView_ConnectCode & " ccv "
    strSQL = strSQL & "WHERE ccv.OfficeCode = sa.OfficeCode AND ccv.Code=IsNULL(sa.ConnectionCode, '')), "
    strSQL = strSQL & "sa.Currency AS Currency, Sum(" & "sa.Balance) AS Bl, MAX(sa.TargetPeriod) AS TDate  "
    
    strSQL = strSQL & "FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_SummaryAC & " sa, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " om, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_CountryMaster & " cm, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_PJTMaster & " pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "cm.CountryCode = om.Country AND  "
    strSQL = strSQL & "om.OfficeCode = sa.OfficeCode AND  "
    strSQL = strSQL & "pm.OfficeCode = sa.OfficeCode AND  "
    
    strSQL = strSQL & "sa.TargetPeriod >= " & fg_AddSingleQuotation(datSDate) & " AND "
    strSQL = strSQL & "sa.TargetPeriod < " & fg_AddSingleQuotation(CDate(lngDate)) & " AND "
    
    strSQL = strSQL & "sa.AccountCode >= " & fg_AddSingleQuotation(c_strBSCODE_BEGIN) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd|PL|fffd||20a|O
    strSQL = strSQL & "sa.AccountCode < " & fg_AddSingleQuotation(c_strPLCODE_BEGIN) & " AND "
    strSQL = strSQL & "sa.AccountCode LIKE " & fg_AddSingleQuotation(strACode) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||302||752||fffd||fffd|o
    
    strSQL = strSQL & "sa.Currency LIKE " & fg_AddSingleQuotation(strCurrency) & " AND "
    
    strSQL = strSQL & "sa.Purpose = " & fg_AddSingleQuotation(CStr(intLedgerType)) & " AND "

    strSQL = strSQL & "cm.EnglishName LIKE " & fg_AddSingleQuotation(strCName) & " AND "
    
    strSQL = strSQL & "sa.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode)
    
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "cm.EnglishName, pm.ProjectName, sa.OfficeCode, sa.AccountCode, sa.ConnectionCode, sa.Currency"
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "sa.AccountCode, cm.EnglishName, sa.OfficeCode, sa.ConnectionCode"
    
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LB_ERR
    End If
    
    '|fffd|W|fffd|v|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||fffd|
    lngRowIndex = mc_lngRowST
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    Do Until adoRs.EOF
        If Cells(lngRowIndex, 2).Value <> Empty Then
            GoTo LB_Loop_End
        End If
        
        curBl = 0
        If Not (IsNull(adoRs.Fields("Bl").Value)) Then
            curBl = CCur(adoRs.Fields("Bl").Value)
        End If
        'If curBl < 0 Then curBl = -curBl
        If Not (curBl = 0 And adoRs.Fields("TDate").Value = datSDate) Then
            Cells(lngRowIndex, 11).Value = curBl 'Past Balance|fffd||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 14).Value = curBl '|fffd||fffd||fffd||fffd||fffd||fffd|Balance|fffd||fffd||fffd|Z|fffd|b|fffd|g
        
            Cells(lngRowIndex, 2).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 9).Value = adoRs.Fields("CCode").Value 'Connect Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
            If IsNull(adoRs.Fields("CName").Value) Then
                Cells(lngRowIndex, 10).Value = ""
            Else
                Cells(lngRowIndex, 10).Value = adoRs.Fields("CName").Value 'Connect Name|fffd||fffd||fffd|Z|fffd|b|fffd|g
            End If
            
            Cells(lngRowIndex, 5).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
            Cells(lngRowIndex, 6).Value = adoRs.Fields("Currency").Value '|fffd||289||fffd|
            Cells(lngRowIndex, 7).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
            Cells(lngRowIndex, 8).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
            Cells(lngRowIndex, 15).Value = adoRs.Fields("TDate").Value '|fffd||38f||6d4|N|fffd||fffd||fffd||fffd|
        Else
            lngRowIndex = lngRowIndex - 1 ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|f|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g sho
        End If
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
LB_Loop_End:
        lngRowIndex = lngRowIndex + 1
    Loop
    m_blnSetupCellsInProgress = False
   
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
  
    On Error GoTo 0

LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LB_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetBSAccountSummaryPastMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_GetBSAccountSummaryPastMonth", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|hBS|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/02/20 : Knowlbo m.o : |fffd|O|fffd||fffd||fffd||fffd||fffd||182||302||82||fffd||fffd||fffd||fffd||d0b9||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/19 : Knowlbo m.o : SS|fffd||389||fffd|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetBSAccountSummaryThisMonth( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strACode As String _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strLed As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim intNum As Integer
    Dim lngRet As Long
    Dim strMSG As String
    Dim curDr As Currency
    Dim curCr As Currency
    Dim rngFindCelEnd As Range
    Dim rngCel As Range
    Dim strFirstAdr As String
    Dim lngLastRowIndex As Long
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LB_ERR
    End If

On Error GoTo LB_ERR
    
    ''OfficeCode TargetPeriod Currency AccountCode Dr Cr

    strSQL = "SELECT "
    strSQL = strSQL & "cm.EnglishName AS EName, pm.ProjectName AS PName, sa.OfficeCode AS OCode, "
    strSQL = strSQL & "sa.AccountCode AS ACode, IsNULL(sa.ConnectionCode, '') AS CCode, "
    strSQL = strSQL & "CName = (SELECT ccv.Name FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strView_ConnectCode & " ccv "
    strSQL = strSQL & "WHERE ccv.OfficeCode = sa.OfficeCode AND ccv.Code=IsNULL(sa.ConnectionCode, '')), "
    strSQL = strSQL & "sa.Currency AS Currency, Sum(sa.Credit) AS Cr, Sum(sa.Debit) AS Dr, MAX(sa.TargetPeriod) AS TDate "
    
    strSQL = strSQL & "FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_SummaryAC & " sa, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " om, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_CountryMaster & " cm, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_PJTMaster & " pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "cm.CountryCode = om.Country AND  "
    strSQL = strSQL & "om.OfficeCode = sa.OfficeCode AND  "
    strSQL = strSQL & "pm.OfficeCode = sa.OfficeCode AND  "
    
    strSQL = strSQL & "sa.TargetPeriod = " & fg_AddSingleQuotation(CDate(lngDate)) & " AND "
    
    strSQL = strSQL & "sa.AccountCode >= " & fg_AddSingleQuotation(c_strBSCODE_BEGIN) & " AND "  '|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd|PL|fffd||20a|O
    strSQL = strSQL & "sa.AccountCode < " & fg_AddSingleQuotation(c_strPLCODE_BEGIN) & " AND "
    strSQL = strSQL & "sa.AccountCode LIKE " & fg_AddSingleQuotation(strACode) & " AND "

    strSQL = strSQL & "sa.Currency LIKE " & fg_AddSingleQuotation(strCurrency) & " AND "

    strSQL = strSQL & "sa.Purpose = " & fg_AddSingleQuotation(CStr(intLedgerType)) & " AND "

    strSQL = strSQL & "cm.EnglishName LIKE " & fg_AddSingleQuotation(strCName) & " AND "
    
    strSQL = strSQL & "sa.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode)

    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "cm.EnglishName, pm.ProjectName, sa.OfficeCode, sa.AccountCode, sa.ConnectionCode, sa.Currency"
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "sa.AccountCode, cm.EnglishName, sa.OfficeCode, sa.ConnectionCode"
    
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LB_ERR
    End If
    
    '|fffd|W|fffd|v|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||fffd|
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|Account Code|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngFindCelEnd = f_GetEndCel(mc_lngRowST, 2)
    If rngFindCelEnd Is Nothing Then
        lngLastRowIndex = mc_lngRowST
    Else
        lngLastRowIndex = rngFindCelEnd.Row + 1
    End If
    
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    
    Do Until adoRs.EOF
       
        If Not rngFindCelEnd Is Nothing Then
            '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|Account Code|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
            Set rngCel = Me. _
                Range("B" & mc_lngRowST & ":B" & rngFindCelEnd.Row). _
                Find(what:=adoRs.Fields("ACode").Value, LookAt:=xlWhole)
        Else
            Set rngCel = Nothing
        End If
       
        If rngCel Is Nothing Then
            '|fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||fffd||38d||14f|I|fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
            lngRowIndex = lngLastRowIndex
            lngLastRowIndex = lngLastRowIndex + 1 '|fffd||14f|I|fffd||d448d|s|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd|X|fffd|V
            Cells(lngRowIndex, 2).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 9).Value = adoRs.Fields("CCode").Value 'Connect Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
            If IsNull(adoRs.Fields("CName").Value) Then
                Cells(lngRowIndex, 10).Value = ""
            Else
                Cells(lngRowIndex, 10).Value = adoRs.Fields("CName").Value 'Connect Name|fffd||fffd||fffd|Z|fffd|b|fffd|g
            End If
            Cells(lngRowIndex, 11).Value = 0 '|fffd|O|fffd||fffd||fffd||702||142||fffd|Balance|fffd||fffd|0|fffd||242||fffd||fffd||fffd|
            
            Cells(lngRowIndex, 5).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
            Cells(lngRowIndex, 6).Value = adoRs.Fields("Currency").Value '|fffd||289||fffd|
            Cells(lngRowIndex, 7).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
            Cells(lngRowIndex, 8).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
        Else
            'Connection Code|fffd||183|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||192||289||742||fffd||fffd||fffd|v|fffd||fffd||fffd||90a9|
            If Cells(rngCel.Row, 9).Value = adoRs.Fields("CCode").Value And _
                Cells(rngCel.Row, 6).Value = adoRs.Fields("Currency").Value And _
                Cells(rngCel.Row, 7).Value = adoRs.Fields("OCode").Value Then
                'Account Code|fffd||fffd|Connection Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                lngRowIndex = rngCel.Row
            Else
                strFirstAdr = rngCel.Address
                lngRowIndex = Empty
                Do
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Account Code|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
                    Set rngCel = Me. _
                        Range("B" & mc_lngRowST & ":B" & rngFindCelEnd.Row). _
                        FindNext(after:=rngCel)
                    
                    'Connection Code|fffd||183|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||192||289||742||fffd||fffd||fffd|v|fffd||fffd||fffd||90a9|
                    If Not rngCel Is Nothing And _
                        Cells(rngCel.Row, 9).Value = adoRs.Fields("CCode").Value And _
                        Cells(rngCel.Row, 6).Value = adoRs.Fields("Currency").Value And _
                        Cells(rngCel.Row, 7).Value = adoRs.Fields("OCode").Value Then
                        'Account Code|fffd||fffd|Connection Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                        lngRowIndex = rngCel.Row
                      Exit Do
                    End If
                    
                Loop Until strFirstAdr = rngCel.Address
                
                If lngRowIndex = Empty Then
                    'Account Code|fffd||fffd|Connection Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||302||14d||14f|I|fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    lngRowIndex = lngLastRowIndex
                    lngLastRowIndex = lngLastRowIndex + 1 '|fffd||14f|I|fffd||d448d|s|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd|X|fffd|V
                    Cells(lngRowIndex, 2).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    Cells(lngRowIndex, 9).Value = adoRs.Fields("CCode").Value 'Connect Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    If IsNull(adoRs.Fields("CName").Value) Then
                        Cells(lngRowIndex, 10).Value = ""
                    Else
                        Cells(lngRowIndex, 10).Value = adoRs.Fields("CName").Value 'Connect Name|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    End If
                    Cells(lngRowIndex, 11).Value = 0 '|fffd|O|fffd||fffd||fffd||702||142||fffd|Balance|fffd||fffd|0|fffd||242||fffd||fffd||fffd|
                    
                    Cells(lngRowIndex, 5).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
                    Cells(lngRowIndex, 6).Value = adoRs.Fields("Currency").Value '|fffd||289||fffd|
                    Cells(lngRowIndex, 7).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
                    Cells(lngRowIndex, 8).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
                End If
            End If
        End If
        
        curDr = 0
        curCr = 0
        If Not (IsNull(adoRs.Fields("Dr").Value)) Then
            curDr = CCur(adoRs.Fields("Dr").Value)
        End If
        If Not (IsNull(adoRs.Fields("Cr").Value)) Then
            curCr = CCur(adoRs.Fields("Cr").Value)
        End If
        Cells(lngRowIndex, 14).Value = Cells(lngRowIndex, 11).Value + curDr + curCr 'Balance|fffd||fffd||fffd|Z|fffd|o|fffd|E|fffd|Z|fffd|b|fffd|g
'        Cells(lngRowIndex, 10).Value = curDr + curCr 'Balance|fffd||fffd||fffd|Z|fffd|o|fffd|E|fffd|Z|fffd|b|fffd|g
        'Debit|fffd||fffd||fffd|Z|fffd|b|fffd|g
        If curDr > 0 Then
            Cells(lngRowIndex, 12).Value = curDr
        ElseIf curDr < 0 Then
            Cells(lngRowIndex, 12).Value = -curDr
        End If
        'Credit|fffd||fffd||fffd|Z|fffd|b|fffd|g
        If curCr > 0 Then
            Cells(lngRowIndex, 13).Value = curCr
        ElseIf curCr < 0 Then
            Cells(lngRowIndex, 13).Value = -curCr
        End If
        
        Cells(lngRowIndex, 15).Value = adoRs.Fields("TDate").Value '|fffd||38f||6d4|N|fffd||fffd||fffd||fffd|
        
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    
    m_blnSetupCellsInProgress = False
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|Account Code|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngFindCelEnd = f_GetEndCel(mc_lngRowST, 2)
    If rngFindCelEnd Is Nothing Then
        lngRowIndex = mc_lngRowST
    Else
        lngRowIndex = rngFindCelEnd.Row
    End If
    
    '|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd|Account Code|fffd||fffd|Connect Code|fffd||14f||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g
    Range("B" & mc_lngRowST & ":O" & (lngRowIndex)).Sort _
    key1:=Range("B" & mc_lngRowST), key2:=Range("I" & mc_lngRowST), key3:=Range("G" & mc_lngRowST)
'    key1:=Range("B" & mc_lngRowST), key2:=Range("E" & mc_lngRowST), key3:=Range("F" & mc_lngRowST)
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||151||530f||fffd||fffd||fffd||12d02||fffd||fffd||fffd||fffd||fffd|r|fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    If lngRowIndex >= mc_lngMAX_ROWINDEX + mc_lngRowST Then
        If m_lngModfyMAX_ROWINDEX < lngRowIndex Then m_lngModfyMAX_ROWINDEX = lngRowIndex
        With Range("B" & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ": O" & lngRowIndex)
            .BorderAround LineStyle:=xlContinuous, Weight:=xlThin
            If lngRowIndex > mc_lngMAX_ROWINDEX + mc_lngRowST Then
                .Borders(xlInsideHorizontal).LineStyle = xlContinuous
            End If
            .Borders(xlInsideVertical).LineStyle = xlContinuous
        End With
        With Range("C" & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ": D" & lngRowIndex)
            .Borders(xlInsideVertical).LineStyle = xlLineStyleNone
        End With
    End If
    
    '|fffd||fffd||fffd||8340||fffd||696||fffd||fffd||183|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||65bc||fffd||fffd||fffd||fffd||fffd||a0bc||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||731f||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    lngRowIndex = mc_lngRowST
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    Do While Cells(lngRowIndex, 2).Value <> Empty
'|fffd|Z|fffd||fffd||fffd||30c||fffd||fffd||fffd|        Range("C" & lngRowIndex & ":D" & lngRowIndex).Merge
        For lngIndex = 0 To UBound(g_strAryAcCode)
            If Cells(lngRowIndex, 2).Value = g_strAryAcCode(lngIndex) Then
                '|fffd||fffd||fffd||8340||fffd||696||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
                Cells(lngRowIndex, 3).Value = g_strAryAcName(lngIndex)
                Exit For
            End If
        Next
'        lngIndex = fg_GetIndexFromTokenInTSV(Cells(lngRowIndex, 9).Value, g_strConnCodeTSV)
'        '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||65bc||fffd||fffd||fffd|Z|fffd|b|fffd|g
'        Cells(lngRowIndex, 10).Value = fg_GetTokenFromIndexInTSV(lngIndex, g_strConnNameTSV)
'        '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||302||342||742||fffd||fffd||fffd||fffd||38d||fffd|
        If Cells(lngRowIndex, 9).Value = "" Then Cells(lngRowIndex, 9).Value = " "
        lngRowIndex = lngRowIndex + 1
    Loop
    m_blnSetupCellsInProgress = False

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LB_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetBSAccountSummaryThisMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_GetBSAccountSummaryThisMonth", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|hBS|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/07 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/04 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetBSAccountSummary( _
ByVal lngDate As Long, _
ByVal strCurrency As String, _
ByVal intLedgerType As Integer, _
ByVal strCName As String, _
ByVal strOCode As String, _
ByVal strACode As String _
)

    '|fffd|O|fffd||fffd||fffd||702||142||30f|W|fffd|v|fffd|E|fffd|\|fffd||fffd|
    s_GetBSAccountSummaryPastMonth lngDate, strCurrency, intLedgerType, strCName, strOCode, strACode
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f|W|fffd|v|fffd|E|fffd|\|fffd||fffd|
    s_GetBSAccountSummaryThisMonth lngDate, strCurrency, intLedgerType, strCName, strOCode, strACode
   
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|J|fffd|n|fffd|s
'   (2)<Long |fffd|^> |fffd||38f||6d7||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd||fffd||fffd||502||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Range |fffd|^> |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd|J|fffd|n|fffd|s|fffd||20d|~|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||30f||a347||fffd||fffd|Nothing|fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/20 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetEndCel( _
    ByVal lngStartRow As Long, _
    ByVal lngTargetCol As Long _
) As Range

Dim strCol As String
Dim rndCel As Range

    '|fffd||fffd||fffd||fffd||64fe|
    strCol = Right$(Cells(lngStartRow, lngTargetCol).Address, _
             Len(Cells(lngStartRow, lngTargetCol).Address) - 1)

    strCol = Left$(strCol, InStr(strCol, "$") - 1)

    'END|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd|P|fffd|[|fffd|X|fffd||30f||fffd||fffd||fffd|
    If Cells(lngStartRow, lngTargetCol).Value = Empty Then
        Set f_GetEndCel = Nothing
        Exit Function
    ElseIf Cells(lngStartRow + 1, lngTargetCol).Value = Empty Then
        Set f_GetEndCel = Range(strCol & lngStartRow)
        Exit Function
    ElseIf lngStartRow >= 65536 Then
        Set f_GetEndCel = Range(strCol & 65536)
        Exit Function
    End If

    '|fffd|I|fffd|[|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Set f_GetEndCel = Range(strCol & lngStartRow).End(xlDown)

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True : |fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^False : |fffd|s|fffd||fffd||fffd||203|R|fffd|[|fffd|h
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/03 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_ChkOfficeCode( _
    ByVal strOCode As String _
) As Boolean
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    f_ChkOfficeCode = False
    strMSG = "DBExecuteError"
    
    If strOCode = "*" Or strOCode = " " Or strOCode = "" Then
        Exit Function
    End If
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT OfficeCode as Oc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".OfficeMaster tbl "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(OfficeCode) = " & fg_AddSingleQuotation(UCase$(strOCode))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
        
    '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||64fe||fffd||202||fffd|True
    If Not adoRs.EOF Then
        f_ChkOfficeCode = True
    End If

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "f_ChkOfficeCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_ChkOfficeCode", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   "*"|fffd||fffd|"%"|fffd|A"?"|fffd||fffd|"_"|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/04 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_CnvAstToPer( _
    ByRef strStr As String _
)

    Dim lngIdx As Long
    Dim strPut As String
    Dim strGet As String
    
    strPut = ""
    
    For lngIdx = 1 To Len(strStr) + 1
        strGet = Mid$(strStr, lngIdx, 1)
        Select Case strGet
        Case "*"
            strGet = "%"
        Case "?"
            strGet = "_"
        Case Else
        End Select
        
        strPut = strPut & strGet
    Next
    
    strStr = strPut

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   BS|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (2)<Range |fffd|^> |fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd|ETRUE : |fffd||fffd||fffd||fffd|^FALSE : |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)BS|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/24 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetAccountComboForBS( _
    ByVal rngCodeTgt As Range, _
    ByVal rngNameTgt As Range, _
    ByVal rngListTgt As Range, _
    ByVal blnWc As Boolean _
)

    Dim strData As String
    Dim intIx As Integer
    Dim intListIx As Integer
    Dim strLstAdr As String
    
    Dim rng As Range
    
    If blnWc Then
        rngListTgt.Value = "*"
        rngListTgt.Offset(0, 1) = ""
        intListIx = 1
    Else
        intListIx = 0
    End If
    
    rngCodeTgt.NumberFormat = "@"
    rngNameTgt.NumberFormat = "@"
'    Range(rngListTgt.Address, _
          rngListTgt.Offset(UBound(g_strAryAcCode), 1).Address).NumberFormat = "@"
    
    For intIx = 0 To UBound(g_strAryAcCode)
        If g_strAryAcCode(intIx) < c_strPLCODE_BEGIN Then
            rngListTgt.Offset(intListIx, 0).NumberFormat = "@"
            rngListTgt.Offset(intListIx, 1).NumberFormat = "@"
            rngListTgt.Offset(intListIx, 0).Value = g_strAryAcCode(intIx)
            rngListTgt.Offset(intListIx, 1).Value = g_strAryAcName(intIx)
            intListIx = intListIx + 1
        End If
    Next
    rngListTgt.Columns.Hidden = True
    rngListTgt.Offset(0, 1).Columns.Hidden = True

    strLstAdr = rngListTgt.Address & ":" & rngListTgt.Offset(intListIx - 1, 0).Address
    sg_SetupValidation rngCodeTgt.Validation, c_strMSG_ACCOUNT_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
    If blnWc Then
        rngCodeTgt.Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||389||fffd|
    End If
    
    strLstAdr = rngListTgt.Offset(0, 1).Address & ":" & rngListTgt.Offset(intListIx - 1, 1).Address
    sg_SetupValidation rngNameTgt.Validation, c_strMSG_ACCOUNT_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null

    rngCodeTgt.Value = rngListTgt.Value
    rngNameTgt.Value = rngListTgt.Offset(0, 1).Value

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||fffd|Dr.Cr.|fffd||303|}|fffd|[|fffd|N|fffd||fffd||1c9||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|Dr[D], Cr[C]|fffd||303|}|fffd|[|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/16 : Knowlbo S.Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetDrCrMarker()
    
    Dim lngIx As Long
    Dim lngRowIndex As Long
    Dim PreCode As String
    Dim PreCodedisp As String
        
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
        
    For lngRowIndex = mc_lngRowST To m_lngModfyMAX_ROWINDEX
        If Cells(lngRowIndex, 2).Value = "" Then Exit For
        
        If PreCode <> Cells(lngRowIndex, 2).Value Then
            PreCode = Cells(lngRowIndex, 2).Value
    
            If Left$(PreCode, 3) = "101" Or Left$(PreCode, 3) = "108" Then
                PreCodedisp = PreCode & "  (D)"
            Else
                PreCodedisp = PreCode & "  (C)"
                For lngIx = 0 To UBound(g_strAryAcCode)
                    If PreCode = g_strAryAcCode(lngIx) Then
                        If g_intAryAcDrCr(lngIx) = 0 Then   ''Dr|fffd||fffd||fffd||fffd|
                            PreCodedisp = PreCode & "  (D)"
                        End If
                        Exit For
                    End If
                Next
            End If
        End If
        Cells(lngRowIndex, 2).Value = PreCodedisp
    Next
    
    m_lngDataMaxRowNo = lngRowIndex - 1
    m_blnSetupCellsInProgress = False

End Sub
Attribute VB_Name = "wsBankBook"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnConnCodeEdit, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnLinkCodeSelect, 4, 3, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|a|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||343|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_curCurrentBalance As Currency        ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|o|fffd|[|fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd|j
Private m_blnDecisionLock As Boolean         ''|fffd|m|fffd||fffd||38f||6cc||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
Private m_blnMasterUpdate As Boolean         ''LedgerMaster|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnCreateLinkcode As Boolean       ''Linkcode|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
Private m_typAryTRBookData() As clsTransBookData ''|fffd||fffd||fffd||fffd||fffd|U|fffd||597|p|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
Private m_lngCurRecIdNo As Long              ''RecIdNo(ID|fffd||fffd||fffd||517|p)
Private m_strBookAcCode As String            ''|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
Private m_intPurpose As Integer              ''NK/JV (LedgerType)
'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/26 : |fffd|n|7c97|S|fffd|q       : Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean
    m_blnDecisionLock = False

    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_BB) = True Then
        Dim strData As String
        Dim lngIdx As Long
        Dim datTarget As Date
        
        sg_SetScreenUpdate False
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        
        datTarget = DateValue(Cells(3, 5).Value)
        sg_SetupTargetMonthCell Cells(3, 5) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        If IsDate(datTarget) Then
            strData = Format(datTarget, "yyyy/mm")
           lngIdx = fg_GetIndexFromTokenInCSV(strData, Range("E3").Validation.Formula1)
            If lngIdx >= 0 Then Cells(3, 5).Value = strData
        End If
        If g_blnAryCmnMstUpdate(GLED_BB) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        
            ''Month/ Date
            sg_SetupDetailDateCells Range("B" & c_intBBDetailRowST, "C" & c_lngMAX_ROWINDEX), _
                                    Range("C" & c_intBBDetailRowST, "C" & c_lngMAX_ROWINDEX)
            
            ''Expense Burden (WBS-CODE)
            sg_SetupBurdenCells Range("I" & c_intBBDetailRowST, "I" & c_lngMAX_ROWINDEX), _
                                             Range("AA" & c_intBBDetailRowST)
            ''ConnectionCode
            sg_SetupConnCodeCells Range("L" & c_intBBDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                              Range("M" & c_intBBDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                              Range("AC" & c_intBBDetailRowST)
        End If
        s_SetupDetailCells
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        sg_SetScreenUpdate True
        GoTo LBL_END
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''BackBook|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False Then
        MsgBox c_strMSG_MASTER_BBOOK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intBBDetailRowST)
 
    Cells(c_intBBDetailRowST, 2).Activate
 
    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    sg_SetupTargetMonthCell Cells(3, 5) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupHeader                       ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    ''<<<2013.03.26 Mod By Y.Watanabe Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
    ' s_SetupDetailCells|fffd||fffd||fffd||fffd|fg_GetAccountsDetailData|fffd||fffd||fffd||fffd|ClearContents|fffd||149||fffd||fffd||302||fffd||fffd|~|fffd||702||fffd|
    ' |fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||113||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd||fffd|
    ' |fffd||202||302||141|A|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||582||fffd||fffd||702||fffd||fffd||fffd|
    s_SetupDetailCells                  ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
'    s_SetupDetailValidationCells        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'    s_SetupDetailCells                  ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    ''>>>2013.03.26 Mod By Y.Watanabe Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    sg_SetScreenUpdate True
LBL_END:
    g_blnArySetupSheet(GLED_BB) = True     ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_BB) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fw_SetupSheet = True
    sg_MsgBoxInputStart "BankBook", "Now starting the entry for " _
                & Year(DateValue(Cells(3, 5).Value)) & "/" & Month(DateValue(Cells(3, 5).Value))

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2005/05/27 : Knowlbo Suzuki : R/3 IF|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||3cd|X
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strDatas As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim intSelect As Integer
    Dim rngLedCode As Range
    
    intSelect = 0 ''|fffd||fffd||fffd||fffd|LEDGER INDEX
    
    ''Ledger Code |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngLedCode = Cells(4, 5)
    strDatas = ""
    intIxEnd = UBound(g_typAryBBInfo)
    For intIx = 0 To intIxEnd
        strDatas = strDatas & g_typAryBBInfo(intIx).m_strCode
        If intIx <> intIxEnd Then
            strDatas = strDatas & ","
        End If
    Next
    sg_SetupValidation rngLedCode.Validation, c_strMSG_LEDCODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    
    rngLedCode.Value = fg_GetTokenFromIndexInCSV(intSelect, rngLedCode.Validation.Formula1)

    Cells(5, 5).Value = g_typAryBBInfo(intSelect).m_strName         ''Name of Bank
    Cells(6, 5).Value = g_typAryBBInfo(intSelect).m_strAccountType  ''Type of Account
    Cells(7, 5).Value = g_typAryBBInfo(intSelect).m_strAccountNo    ''Account No.
    Cells(8, 5).Value = g_typAryBBInfo(intSelect).m_strCurrency     ''Currency
    Cells(3, 9).Value = g_typAryPJTInfo(0).m_strOfficeCode          ''Office Code
    Cells(4, 9).Value = g_typAryPJTInfo(0).m_strPJTCode             ''Project Code
    Cells(5, 9).Value = g_typAryPJTInfo(0).m_strPJTName             ''Project Name
    ''This Ledger for
    m_intPurpose = g_typAryBBInfo(intSelect).m_intPurpose
    If m_intPurpose = 0 Then
        Cells(7, 9).Value = c_strPurposeNK
    Else
        Cells(7, 9).Value = c_strPurposeJV
    End If
    Cells(8, 9).Value = g_typAryBBInfo(intSelect).m_strMemo         ''Free Memo
    Cells(8, 21).NumberFormat = g_strFORMAT_DECZERO_XX              ''LastBalance
    
    m_strBookAcCode = g_typAryBBInfo(intSelect).m_strAcCode         ''CashBankAccountCode
    
    ''R/3 IF|fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||310|F|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
    If g_blnR3IfEnable = False Then ''R3IF |fffd||fffd||fffd||fffd|
        Range("C1:F1").Interior.ColorIndex = 3
        Range("C1").Font.ColorIndex = 2
        Cells(2, 3).Value = "Disable R/3 Interface!"
        Range("C2").Font.ColorIndex = 38
        Range("C2").Font.Italic = True
        Range("C2").Font.Bold = True
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    ''Month/ Date
    sg_SetupDetailDateCells Range("B" & c_intBBDetailRowST, "C" & c_lngMAX_ROWINDEX), _
                            Range("C" & c_intBBDetailRowST, "C" & c_lngMAX_ROWINDEX)
    
    ''Expense Burden (WBS-CODE)
    sg_SetupBurdenCells Range("I" & c_intBBDetailRowST, "I" & c_lngMAX_ROWINDEX), _
                                             Range("AA" & c_intBBDetailRowST)
    
    ''AccountCode / Name
    sg_SetupDetailACCodeCells Range("J" & c_intBBDetailRowST, "J" & c_lngMAX_ROWINDEX), _
                              Range("K" & c_intBBDetailRowST, "K" & c_lngMAX_ROWINDEX), _
                              Range("AF" & c_intBBDetailRowST)
    Range("J" & c_intBBDetailRowST, "J" & c_lngMAX_ROWINDEX).NumberFormat = "@"
    
    ''ConnectionCode
    sg_SetupConnCodeCells Range("L" & c_intBBDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                          Range("M" & c_intBBDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                          Range("AC" & c_intBBDetailRowST)
   
    ''EviNo. CheckNo.
    sg_SetupValidation Range("O" & c_intBBDetailRowST, "P" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_WHOLE_NUM, xlValidateWholeNumber, xlValidAlertStop, xlBetween, "-2147483648", "2147483647"
    
    'NK/JV
    sg_SetupDetailNKJVCells Range("Q" & c_intBBDetailRowST, "Q" & c_lngMAX_ROWINDEX)

    ''Claim
    sg_SetupValidation Range("R" & c_intBBDetailRowST, "R" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_CLAIM, xlValidateList, xlValidAlertStop, xlBetween, "Y,N", Null
    With Range("R" & c_intBBDetailRowST, "R" & c_lngMAX_ROWINDEX).Validation
        .ShowError = False
    End With
    
    ''Paid, Received
    sg_SetupValidation Range("S" & c_intBBDetailRowST, "T" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    ''Range("S" & c_intBBDetailRowST, "U" & c_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("S" & c_intBBDetailRowST, "U" & c_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DEC_CBT
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fg_GetAccountsDetailData ActiveSheet    ''|fffd|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||64fe|(|fffd|c|fffd||702||fffd|)
    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(3, 5).Value <> "" Then
        If g_datDecisionMonth <> 0 Then  ''|fffd|m|fffd||830e|
            If DateValue(Cells(3, 5).Value) <= g_datDecisionMonth Then
                Range("B" & c_intBBDetailRowST, "T" & c_lngMAX_ROWINDEX).Locked = True
                m_blnDecisionLock = True
            Else
                m_blnDecisionLock = False
            End If
        Else
            If DateValue(Cells(3, 5).Value) < g_datImportMonth Then
                Range("B" & c_intBBDetailRowST, "T" & c_lngMAX_ROWINDEX).Locked = True
                m_blnDecisionLock = True
            Else
                m_blnDecisionLock = False
            End If
        End If
    End If

    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = Not m_blnDecisionLock
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = Not m_blnDecisionLock
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    sg_GetCurrentLinkCodeNo GLNK_FA ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||152||8391||fffd|YLinkCodeNo|fffd||64fe|
    
    sg_GetCurrentRecIDNo GLED_BB ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    
    Application.GoTo Range("A" & c_intBBDetailRowST), Scroll:=True    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    
    m_blnMasterUpdate = False
    m_blnCreateLinkcode = False
   
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   NULL|fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|w|fffd||fffd|sNo
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|s|fffd||30a|e|fffd||fffd||fffd|NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_IsNullRow( _
    ByVal lngRowIndex As Long _
) As Boolean

    Dim intIxCol As Integer
    
    f_IsNullRow = False
    
    For intIxCol = 2 To 20
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    f_IsNullRow = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_CheckSheetUpdate()
   
    Dim lngRowIndex As Long
    Dim lngUpdateCount As Long

    If m_blnDirty = False Then
        Exit Sub
    End If

    lngUpdateCount = 0

    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    
    For lngRowIndex = c_intBBDetailRowST To c_lngMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            lngUpdateCount = lngUpdateCount + 1
            If f_IsNullRow(lngRowIndex) And Cells(lngRowIndex, 23).Value = "" Then
                lngUpdateCount = lngUpdateCount - 1
                ''Dirty |fffd|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
                Cells(lngRowIndex, 24).Value = ""
            End If
        End If
    Next

    If lngUpdateCount = 0 Then
        m_blnDirty = False
    End If

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Balance|fffd|l|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/08/11 : Knowlbo Suzuki : |fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'   2003/10/16 : Knowlbo Suzuki : LinkCode|fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|(OfficeCode Left7|fffd||fffd|)
'-----------------------------------------------------------------
Private Function _
f_CheckInputData() As Boolean
    
    Dim strMessage As String
    Dim lngRowIndex As Long
    Dim lngInputLastRow As Long
    Dim curBalance As Currency
    Dim blnRet As Boolean
    Dim blnCCode As Boolean
    Dim blnLCode As Boolean
    Dim lngRowNo As Long
    Dim strCCodeKind As String
    Dim strLCodeKind As String
    Dim strSplit As Variant
    Dim strValue As Variant
    Dim blnMatch As Boolean
    Dim strAcCode As String
            
    f_CheckInputData = False
    lngInputLastRow = 0
    curBalance = 0
    
    For lngRowIndex = c_intBBDetailRowST To c_lngMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|

            blnCCode = False
            blnLCode = False
            
            ''Month
            If Cells(lngRowIndex, 2).Value = "" Then
                strMessage = c_strMSG_SETMON
                Cells(lngRowIndex, 2).Activate
                GoTo LBL_ERR
            End If
            
            ''Date
            If Cells(lngRowIndex, 3).Value = "" Then
                strMessage = c_strMSG_SETDAY
                Cells(lngRowIndex, 3).Activate
                GoTo LBL_ERR
            End If
            If Not fg_IsDateCells(Cells(lngRowIndex, 2), Cells(lngRowIndex, 3), DateValue(Cells(3, 5).Value)) Then
                ''|fffd|L|fffd||fffd||fffd||213||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
                strMessage = c_strMSG_ERRORDATE
                Cells(lngRowIndex, 3).Activate
                GoTo LBL_ERR
            End If
                        
            ''Description Details
            If Cells(lngRowIndex, 7).Value = "" Then
                If Cells(lngRowIndex, 10).Value <> "" Then
                    If (Cells(lngRowIndex, 4).Value = "") Or _
                       (Cells(lngRowIndex, 4).Value <> "" And Trim$(Cells(lngRowIndex, 4).Value) = "") Then
                        strMessage = c_strMSG_SETDETAILS
                        Cells(lngRowIndex, 7).Activate
                        GoTo LBL_ERR
                    End If
                End If
            Else
                If Len(Cells(lngRowIndex, 7).Value) > 128 Then
                    MsgBox c_strMSGCmn_LENGTHOVER & "128", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(lngRowIndex, 7).Activate
                    GoTo LBL_EXIT
                End If
            End If
           
            ''Expense Burden
            If Cells(lngRowIndex, 9).Value = "" Then
                strMessage = c_strMSG_WBS
                Cells(lngRowIndex, 9).Activate
                GoTo LBL_ERR
            Else
                ''WBSCode|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
                Dim strDumyCode As String
                If fg_CheckWBSExist(Cells(lngRowIndex, 9).Value, strDumyCode) = False Then
                    strMessage = c_strMSGCmn_NotEXISTWBS & "(NK-Sales or NK-Material)"
                    Cells(lngRowIndex, 9).Activate
                    GoTo LBL_ERR
                End If
            End If
           
            ''AccountCode/Name
            If Cells(lngRowIndex, 10).Value = "" Then
                strMessage = c_strMSG_ACCOUNT_CODE
                Cells(lngRowIndex, 10).Activate
                GoTo LBL_ERR
            Else
                lngRowNo = fg_FindSameDataRowNo(Cells(lngRowIndex, 10), _
                            wsSettings.Range("C2", "C65536"))
                If lngRowNo <> 0 Then
                    If wsSettings.Cells(lngRowNo, 10).Value <> "" Then
                        blnCCode = True ''ConnectionCode|fffd|K|fffd|{
                        If wsSettings.Cells(lngRowNo, 10).Value = 2 Then 'CCode|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                            strCCodeKind = wsSettings.Cells(lngRowNo, 11).Value
                        Else
                            strCCodeKind = ""
                        End If
                    End If
                    If wsSettings.Cells(lngRowNo, 12).Value <> "" Then
                        If InStr(wsSettings.Cells(lngRowNo, 12).Value, "(") = 0 Then
                            blnLCode = True ''LinkCode|fffd|K|fffd|{
                            strLCodeKind = wsSettings.Cells(lngRowNo, 12).Value
                        End If
                    End If
                End If

                strAcCode = Cells(lngRowIndex, 10).Value

                ''|fffd||289||74c||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                If Left$(strAcCode, 4) = "2019" Then
                    If strAcCode = c_strACEx_MoneySndCode Or _
                       strAcCode = c_strACRM_SndHeadCode Or _
                       strAcCode = c_strACRM_SndOtherCode Or _
                       strAcCode = c_strACR3_AdjustDebtorCode Then
                       
                        If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                            strMessage = c_strMSG_PAID_NUM
                            Cells(lngRowIndex, 19).Activate
                            GoTo LBL_ERR
                        End If
                    Else
                        If Cells(lngRowIndex, 20).Value = "" Then ''Received
                            strMessage = c_strMSG_RECV_NUM
                            Cells(lngRowIndex, 20).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            
                ''Expense Burden|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||92a8||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N--------------------------
                If strAcCode = c_strACKND_PriGainCostCode Or _
                   strAcCode = c_strACKND_PriLossCostCode Then
                    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||20a|O|fffd||313||fffd||fffd||342||fffd||fffd||94|\
                    If Left$(Cells(lngRowIndex, 9).Value, 1) = "X" Or _
                       Left$(Cells(lngRowIndex, 9).Value, 1) = "Z" Then
                        strMessage = c_strMSG_CHK_ExBurden
                        Cells(lngRowIndex, 9).Activate
                        GoTo LBL_ERR
                    End If
                End If
                If strAcCode = c_strACKND_PriGainOtherCode Or _
                   strAcCode = c_strACKND_PriLossOtherCode Then
                    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||302||753||fffd||fffd||342||fffd||fffd||94|\
                    If Left$(Cells(lngRowIndex, 9).Value, 1) <> "X" And _
                       Left$(Cells(lngRowIndex, 9).Value, 1) <> "Z" Then
                        strMessage = c_strMSG_CHK_CostCenter
                        Cells(lngRowIndex, 9).Activate
                        GoTo LBL_ERR
                    End If
                End If
            End If
                        
            ''ConnectionCode/Name
            If Cells(lngRowIndex, 12).Value = "" Then
                If blnCCode = True Then
                    strMessage = c_strMSG_CONNECT_CODE
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERR
                End If
            Else
                ''|fffd||fffd|CCode|fffd|s|fffd|v|fffd||202||302||253||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||90a9||fffd|H
                If blnCCode = True And strCCodeKind <> "" Then ''CCode|fffd||303|J|fffd|e|fffd|S|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If InStr(strCCodeKind, ",") <> 0 Then ''|fffd||fffd||fffd||fffd||fffd|J|fffd|e|fffd|S|fffd||fffd|
                        blnMatch = False
                        strSplit = Split(strCCodeKind, ",")
                        For Each strValue In strSplit
                            If InStr(Cells(lngRowIndex, 12).Value, strValue) <> 0 Then
                                blnMatch = True
                                Exit For
                            End If
                        Next strValue
                        Erase strSplit
                        If blnMatch = False Then
                            strMessage = c_strMSG_CCODE_KIND
                            Cells(lngRowIndex, 12).Activate
                            GoTo LBL_ERR
                        End If
                    Else
                        If InStr(Cells(lngRowIndex, 12).Value, strCCodeKind) = 0 Then
                            strMessage = c_strMSG_CCODE_KIND
                            Cells(lngRowIndex, 12).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            End If
            
            ''LinkCode
            If blnLCode = True Then
                Select Case strLCodeKind
                Case "IV"
                    strMessage = c_strMSG_IVLinkCODE
                Case "AS"
                    strMessage = c_strMSG_ASLinkCODE
                Case "SC"
                    strMessage = c_strMSG_SBLinkCODE
                Case "RM"
                    strMessage = c_strMSG_RMLinkCODE
                Case "PP"
                    strMessage = c_strMSG_PRLinkCODE
                Case "FA"
                    strMessage = c_strMSG_FALinkCODE
                End Select
            End If
            If Cells(lngRowIndex, 14).Value = "" Then
                If blnLCode = True Then
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERR
                End If
            Else
                If blnLCode = False Then ''|fffd|s|fffd|v LinkCode
                    strMessage = c_strMSG_NOLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERR
                Else
                    If Not IsNumeric(Mid$(Cells(lngRowIndex, 14).Value, 5, 5)) Then
                        strMessage = strMessage & "(Unknown format!)"
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If strAcCode <> c_strACRM_SndHeadCode And _
                       Not IsNumeric(Right$(Cells(lngRowIndex, 14).Value, 2)) Then
                        strMessage = strMessage & "(Unknown format!)"
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If InStr(Right$(Cells(lngRowIndex, 14).Value, 5), strLCodeKind) = 0 Then
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If Len(Cells(lngRowIndex, 14).Value) <> 14 Then
                        strMessage = c_strMSG_RIGHTLCODE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If fg_IsExistOfficeCode(Left$(Cells(lngRowIndex, 14).Value, 7)) <> True Then
                        strMessage = c_strMSG_ERRLCodeOFFICE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If Left$(Cells(lngRowIndex, 14).Value, 7) <> g_strOfficeCode Then
                        If (strLCodeKind = "PP") Then
                            strMessage = strMessage & "(Other Office LinkCode)"
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                        If (strLCodeKind = "RM") And _
                           (strAcCode = c_strACRM_RecHeadCode Or strAcCode = c_strACRM_RecOtherCode) Then
                            strMessage = strMessage & "(Other Office LinkCode)"
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                    
                    ' 2004/10/28 add
                    ' LinkCode|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||a347||fffd||141|A|fffd||fffd||fffd|m|fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
                    If strLCodeKind <> "RM" And strLCodeKind <> "FA" Then
                        If (fg_CheckSameLinkPayment(Me, Cells(lngRowIndex, 14).Value) = True) Then
                            strMessage = c_strMSG_SAMEPAYLINKCODE
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            End If
                       
            ''NK/JV
            If Cells(lngRowIndex, 17).Value = "" Then
                strMessage = c_strMSG_NKJV
                Cells(lngRowIndex, 17).Activate
                GoTo LBL_ERR
            End If
            
            ''Claim
            If Cells(lngRowIndex, 18).Value = "" Then
                strMessage = c_strMSG_CLAIM
                Cells(lngRowIndex, 18).Activate
                GoTo LBL_ERR
            End If

            ''Paid,Received
            If (Cells(lngRowIndex, 19).Value = "") And (Cells(lngRowIndex, 20).Value = "") Then
                strMessage = c_strMSG_DECEIMAL_NUM
                Cells(lngRowIndex, 19).Activate
                GoTo LBL_ERR
            End If
            
            ''Balance|fffd|l|fffd||315||6d1||fffd|
            If lngInputLastRow < lngRowIndex Then
                curBalance = Cells(lngRowIndex, 21).Value
                lngInputLastRow = lngRowIndex
            End If
            
            ''|fffd|O|fffd|N|fffd|x|fffd|F|fffd||fffd||fffd||313||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
            If Month(DateValue(Cells(3, 5).Value)) < Cells(lngRowIndex, 2).Value Then
                Cells(lngRowIndex, 2).Activate
                strMessage = "(" & Year(DateValue(Cells(3, 5).Value)) - 1 & "/" _
                            & Format$(Cells(lngRowIndex, 2).Value, "00") & "/" _
                            & Format$(Cells(lngRowIndex, 3).Value, "00") & ")"
                strMessage = c_strMSG_WARNPastMonthPFX & strMessage & c_strMSG_WARNPastMonthSFX
                If (MsgBox(strMessage, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbNo) Then
                    ''|fffd|O|fffd|N|fffd|x|fffd|o|fffd|[|fffd||fffd||fffd|t|fffd|C|fffd||fffd|
                    GoTo LBL_EXIT
                End If
            End If
            
            ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||3c2||743|t|fffd||fffd||fffd|O|fffd||3cd|X
            m_blnSetupCellsInProgress = True
            Unprotect Password:=c_strSheetPWD
            Cells(lngRowIndex, 24).Value = 2

            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
            m_blnSetupCellsInProgress = False
            
        Else
            If Cells(lngRowIndex, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd|
                If lngInputLastRow < lngRowIndex Then
                    curBalance = Cells(lngRowIndex, 21).Value
                    lngInputLastRow = lngRowIndex
                End If
            End If
        End If
    Next

    m_curCurrentBalance = curBalance - Cells(8, 21) ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
    If curBalance < 0 Then  ''|fffd|c|fffd||fffd||fffd|}|fffd|C|fffd|i|fffd|X|fffd|`|fffd|F|fffd|b|fffd|N
        strMessage = c_strMSG_WARN_NegativeBal
        If lngInputLastRow >= c_intBBDetailRowST Then
            Cells(lngInputLastRow, 21).Activate
        End If
        MsgBox strMessage, vbExclamation Or vbOKOnly, c_strNAME_SYSTEM
    End If
    f_CheckInputData = True
    Exit Function

LBL_ERR:
    MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
LBL_EXIT:
    f_CheckInputData = False
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/BankBook|fffd||fffd|LinkCode|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Cash/BankBook|fffd||fffd|LinkCode|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_BookCheckLinkCode( _
) As Boolean
  
    Dim lngRowIndex As Long
    Dim blnRet As Boolean
    Dim curAmount As Currency
    Dim curDrCr As Currency
    Dim strMessage As String
    Dim typAryTRBookData() As clsTransBookData
    Dim intGetCount As Integer
    Dim intCodeKind As Integer
    Dim lngIx As Long
    Dim strCurrency As String
    Dim strCur As String
    Dim strCCode As String
    Dim strValue As String
    Dim strLinkCode As String
    Dim blnChangFlag As Boolean
    Dim blnPartPay As Boolean   ''|fffd||a554||fffd||fffd||fffd||fffd|/|fffd|x|fffd||fffd|ITEM|fffd|t|fffd||fffd||fffd|O
    Dim objSheet As Worksheet
    
    ''|fffd||a554||fffd||fffd||fffd||fffd|/|fffd|x|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnPartPay = False
    
    f_BookCheckLinkCode = False
    strCurrency = Cells(8, 5).Value
    For lngRowIndex = c_intBBDetailRowST To c_lngMAX_ROWINDEX Step 1
        strLinkCode = Cells(lngRowIndex, 14).Value
        blnChangFlag = False
        ''ID|fffd||202||fffd||fffd||310|V|fffd|K|fffd||315||3cd|X|fffd|f|fffd|[|fffd|^|fffd||141|ALinkCode|fffd||fffd||fffd||752||fffd||3c2||fffd|
        If Cells(lngRowIndex, 24).Value = 2 And Cells(lngRowIndex, 23).Value = "" And strLinkCode <> "" Then
            
            intCodeKind = fg_CheckLinkCodeKind(strLinkCode)
            Select Case intCodeKind
            Case GLNK_IV
                If Cells(lngRowIndex, 20).Value = "" Then ''Received
                    strMessage = c_strMSG_RECV_NUM
                    Cells(lngRowIndex, 20).Activate
                    GoTo LBL_ERROR
                End If
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                    strMessage = c_strMSG_IVLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                ''SHEET|fffd||fffd||fffd||253||fffd||fffd||fffd|LINKCODE|fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||fffd|CHECK
                Set objSheet = ThisWorkbook.Sheets(g_strArywsName(GLED_BB))
                If (fg_CheckSameLinkPayment(objSheet, strLinkCode, lngRowIndex) = True) Then
                    ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
                    strMessage = c_strMSG_SAMEPAYLINKCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                ''|fffd||7cb||fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|z|fffd||64fe|
                curDrCr = 0
                blnRet = fg_GetLedgerDatabyLinkCode(strCurrency, strLinkCode, intGetCount, typAryTRBookData)
                If blnRet And intGetCount > 0 Then
                    ''|fffd||7cb||fffd||fffd||30f|o|fffd|[|fffd||153||fffd||fffd||fffd|LinkCode|fffd||142||313||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||fffd||fffd||248||a554||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|ITEM
                    blnPartPay = True
                    For lngIx = 0 To intGetCount - 1
                        'curDrCr = curDrCr + typAryTRBookData(lngIx).m_curPaid - typAryTRBookData(lngIx).m_curReceived
                        curDrCr = curDrCr + typAryTRBookData(lngIx).m_curReceived
                    Next
                    Erase typAryTRBookData
                End If
                If curAmount > (curDrCr + Cells(lngRowIndex, 20).Value) Then
                    ''|fffd||fffd||fffd|z|fffd|s|fffd||fffd|
                    If (MsgBox(c_strMSG_LINK_AMOUNT00 & vbCrLf & c_strMSG_LINK_AMOUNT02, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
                    'If (MsgBox(c_strMSG_LINK_AMOUNT02, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
                        ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd| |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||202||fffd|
                        blnPartPay = True
                        blnChangFlag = True
                    Else
                        ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||202||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                        sg_DisideEditWay lngRowIndex, 20, GLED_BR, GLED_BB
                        Exit Function
                    End If
                ElseIf curAmount < (curDrCr + Cells(lngRowIndex, 20).Value) Then
                    ''|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                    sg_DisideEditWay lngRowIndex, 20, GLED_BR, GLED_BB
                    Exit Function
                Else
                    ''|fffd||fffd||fffd|z|fffd||fffd|v |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||fffd|
                    If (blnPartPay = True) Then
                        blnPartPay = False
                    End If
                    blnChangFlag = True
                End If
            Case GLNK_AS
                strMessage = c_strMSG_ASLinkCODE
                If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                    strMessage = c_strMSG_PAID_NUM
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                End If
                'ActualPayment|fffd||34d|l|fffd||fffd||fffd||fffd||fffd||202||fffd|
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                    strMessage = c_strMSG_ASLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                ''Paid|fffd||fffd|Invoice|fffd|C|fffd||fffd||fffd||154||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||348||fffd|v|fffd||fffd||fffd||202||fffd|
                If Cells(lngRowIndex, 19).Value <> curAmount Then  ''|fffd||fffd||fffd|z|fffd||188||fffd|v|fffd||fffd||fffd||202||fffd|
                    If vbYes <> MsgBox(c_strMSG_AS_LINKQUEST, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                        Cells(lngRowIndex, 14).Activate
                        Exit Function
                    End If
                End If
                If Cells(lngRowIndex, 12).Value <> strCCode Then
                    strMessage = c_strMSG_LINK_CCode
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERROR
                End If
                blnChangFlag = True
            Case GLNK_SC
                If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                    strMessage = c_strMSG_PAID_NUM
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                End If
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                    strMessage = c_strMSG_SBLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                If Cells(lngRowIndex, 12).Value <> strCCode Then
                    strMessage = c_strMSG_LINK_CCode
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERROR
                End If
                ''|fffd||7cb||fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|z|fffd||64fe|
                curDrCr = 0
                blnRet = fg_GetLedgerDatabyLinkCode(strCurrency, strLinkCode, intGetCount, typAryTRBookData)
                If blnRet And intGetCount > 0 Then
                    ''|fffd||7cb||fffd||fffd||30f|o|fffd|[|fffd||153||fffd||fffd||fffd|LinkCode|fffd||142||30e|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||fffd||fffd||248||a554||fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|ITEM
                    blnPartPay = True
                    For lngIx = 0 To intGetCount - 1
                        'curDrCr = curDrCr + typAryTRBookData(lngIx).m_curPaid - typAryTRBookData(lngIx).m_curReceived
                        curDrCr = curDrCr + typAryTRBookData(lngIx).m_curPaid
                    Next
                    Erase typAryTRBookData
                End If
                If curAmount > (curDrCr + Cells(lngRowIndex, 19).Value) Then
                    If (MsgBox(c_strMSG_LINK_AMOUNT00 & vbCrLf & c_strMSG_LINK_AMOUNT02, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
                        ''|fffd||a554||fffd|x|fffd||fffd||fffd||182||fffd||fffd||fffd| |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||202||fffd|
                        blnPartPay = True
                        blnChangFlag = True
                    Else
                        ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||202||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                        sg_DisideEditWay lngRowIndex, 19, GLED_SC, GLED_BB
                        Exit Function
                    End If
                ElseIf curAmount < (curDrCr + Cells(lngRowIndex, 19).Value) Then
                    ''|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                    sg_DisideEditWay lngRowIndex, 19, GLED_SC, GLED_BB
                    Exit Function
                Else
                    ''|fffd||fffd||fffd|z|fffd||fffd|v |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||fffd|
                    If (blnPartPay = True) Then
                        blnPartPay = False
                    End If
                    blnChangFlag = True
                End If
            Case GLNK_RM
                strMessage = c_strMSG_RMLinkCODE
                If Cells(lngRowIndex, 10).Value = c_strACRM_RecHeadCode Or _
                   Cells(lngRowIndex, 10).Value = c_strACRM_RecOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||c2bce||fffd|
                    If Cells(lngRowIndex, 20).Value = "" Then ''Received
                        strMessage = c_strMSG_RECV_NUM
                        Cells(lngRowIndex, 20).Activate
                        GoTo LBL_ERROR
                    End If
                
                    If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                        strMessage = c_strMSG_RMLinkCODE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERROR
                    End If
                    If curAmount = 0 Then ''|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd|f|fffd|[|fffd|^|fffd||202||fffd|
                        strMessage = c_strMSG_RM_NOCode
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERROR
                    End If
                    
                    If Cells(lngRowIndex, 20).Value <> curAmount Then  ''|fffd||2d7||fffd||fffd|z|fffd||188||fffd|v|fffd||fffd||fffd||202||fffd|
                        strMessage = "[" & strCur & ":" & curAmount & "] " & c_strMSG_RM_LINKQUEST
                        If vbYes <> MsgBox(strMessage, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                            Cells(lngRowIndex, 20).Activate
                            Exit Function
                        End If
                    End If
                    
                    ''|fffd||fffd|ConnectionCode|fffd||fffd||fffd|K|fffd|v|fffd|H
                    blnChangFlag = True
                End If
                If Cells(lngRowIndex, 10).Value = c_strACRM_SndHeadCode Or _
                   Cells(lngRowIndex, 10).Value = c_strACRM_SndOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                        strMessage = c_strMSG_PAID_NUM
                        Cells(lngRowIndex, 19).Activate
                        GoTo LBL_ERROR
                    End If
                    
                    ''|fffd||fffd|ConnectionCode|fffd||fffd||fffd|K|fffd|v|fffd|H
                    If InStr(Cells(lngRowIndex, 10).Value, g_strOfficeCode) <> 0 Then ''|fffd||fffd|Office|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
                        ''|fffd||fffd||fffd||fffd|Office|fffd||311||fffd||fffd||fffd||fffd||fffd||34b||fffd||fffd||fffd|?
                    End If
                End If
            
            Case GLNK_PP
                strMessage = c_strMSG_PRLinkCODE
                If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                    strMessage = c_strMSG_PAID_NUM
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                End If
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode, strValue) <> True) Then
                    strMessage = c_strMSG_PRLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                If strValue <> Cells(lngRowIndex, 9).Value Then ''WBS |fffd|s|fffd||fffd|v
                    strMessage = c_strMSG_LINK_WBS & vbCrLf & "Please select Code (" & strValue & ")."
                    Cells(lngRowIndex, 9).Activate
                    GoTo LBL_ERROR
                End If
                If Cells(lngRowIndex, 12).Value <> strCCode Then
                    strMessage = c_strMSG_LINK_CCode
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERROR
                End If
                If curAmount <> Cells(lngRowIndex, 19).Value Then
                    '|fffd||fffd||fffd|z|fffd|s|fffd||fffd|v
                    strMessage = c_strMSG_LINK_AMOUNT00
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                Else
                    blnChangFlag = True
                End If
            
            Case GLNK_FA
                strMessage = c_strMSG_FALinkCODE
                If Cells(lngRowIndex, 10).Value = c_strACFA_BuyCode Then ''|fffd||152||8391||fffd|Y|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                        strMessage = c_strMSG_PAID_NUM
                        Cells(lngRowIndex, 19).Activate
                        GoTo LBL_ERROR
                    End If
                ElseIf Cells(lngRowIndex, 10).Value = c_strACFA_SaleCode Then ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(lngRowIndex, 20).Value = "" Then ''Paid
                        strMessage = c_strMSG_RECV_NUM
                        Cells(lngRowIndex, 20).Activate
                        GoTo LBL_ERROR
                    End If
                End If
            End Select
            
            If blnChangFlag Then
                m_blnMasterUpdate = True
                m_blnSetupCellsInProgress = True
                Unprotect Password:=c_strSheetPWD
                ''4|fffd||348||a554||fffd||fffd||fffd||fffd|(Invoice)/|fffd||fffd||fffd||fffd||fffd|x|fffd||fffd|(SubCon)
                If (blnPartPay = True) Then
                    Cells(lngRowIndex, 24).Value = 4  ''Dirty|fffd|t|fffd||fffd||fffd|O|fffd||3cd|X(|fffd|U|fffd||582||202||fffd|/|fffd||44a0||fffd|X|fffd|V)
                Else
                    Cells(lngRowIndex, 24).Value = 3  ''Dirty|fffd|t|fffd||fffd||fffd|O|fffd||3cd|X(|fffd|U|fffd||fffd|/|fffd||44a0||fffd|X|fffd|V)
                End If
                Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                m_blnSetupCellsInProgress = False
            End If
        End If
    Next

    f_BookCheckLinkCode = True
    Exit Function
    
LBL_ERROR:
    MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/05/30 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||58e|~
'   2003/10/07 : Knowlbo Suzuki : LedgerCode|fffd||3cd|X|fffd||fffd||fffd||24c||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|Code|fffd||3d0||fffd||fffd||752||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    Dim lngIndex As Long
    Dim blnSelectDescription As Boolean
    Dim blnSetACCode As Boolean
    Dim blnSetACName As Boolean
    Dim blnSetNKorJV As Boolean
    Dim blnSetChgCode As Boolean
    Dim blnSetData As Boolean
    Dim lngTokenIdx As Long
    Dim blnSetConnName As Boolean
    Dim blnSetConnCode As Boolean
    Dim strValue As String
    
    blnSetData = False
    blnSetACCode = False
    blnSetACName = False
    blnSelectDescription = False
    blnSetNKorJV = False
    blnSetChgCode = False
    blnSetConnName = False
    blnSetConnCode = False
    
    ''TargetMonth
    If rngTarget.Row = 3 And rngTarget.Column = 5 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetData = True
    
    ''LedgerCodeNo.
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 5 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetData = True
    
    ''Detail
    ElseIf rngTarget.Row >= c_intBBDetailRowST Then
    
        ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(3, 5).Value = "" Then
            MsgBox c_strMSG_MONTH, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(3, 5).Activate
            Exit Function
        End If
    
        ''|fffd||38f||fffd|Book|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(4, 5).Value = "" Then
            MsgBox c_strMSG_LEDCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(4, 5).Activate
            Exit Function
        End If
    
        If f_IsNullRow(rngTarget.Row - 1) Then ''|fffd||fffd||fffd|O|fffd|s|fffd||fffd||fffd||d4482||30f||a347|
            MsgBox c_strMSG_BLANKLINE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
    
        blnSetNKorJV = True
        blnSetChgCode = True
        Select Case rngTarget.Column
        
        Case 2 ''Month
        Case 3 ''Date
        Case 4 ''Description Item
            blnSelectDescription = True
        Case 7 ''Description Detailes
        Case 9 ''WBSCode
            blnSetChgCode = False
        Case 10 ''AccountCode
            blnSetACCode = True
        Case 11 ''AccountName
            blnSetACName = True
        Case 12 ''ConnectionCode
            If Len(rngTarget.Value) >= 3 Then
                m_blnSetupCellsInProgress = True
                strValue = UCase$(Left$(rngTarget.Value, 3))
                If strValue = "NKS" Then
                    strValue = strValue & Mid(rngTarget.Value, 4)
                Else
                    strValue = UCase$(rngTarget.Value)
                End If
                rngTarget.Value = strValue
                m_blnSetupCellsInProgress = False
            End If
            blnSetConnCode = True
        Case 13 ''ConnectionName
            blnSetConnName = True
        Case 14 ''LedgerLinkCode
        Case 15 ''Evi.No.
        Case 16 ''CheckNo.
        Case 17 ''NK/JV
            blnSetNKorJV = False
        Case 18 ''Claim
            If rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                strValue = UCase$(rngTarget.Value)
                If strValue <> "Y" And strValue <> "N" Then
                    MsgBox c_strMSG_CLAIM, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    rngTarget.Value = ""
                    m_blnSetupCellsInProgress = False
                    f_onChangeCell = False
                    rngTarget.Activate
                    Exit Function
                End If
                rngTarget.Value = strValue
                m_blnSetupCellsInProgress = False
            End If
        Case 19 ''Paid
            ''Paid/Received|fffd|Q|fffd|d|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
            If Cells(rngTarget.Row, 20).Value <> "" And rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                Cells(rngTarget.Row, 20).Value = ""
                m_blnSetupCellsInProgress = False
                'f_onChangeCell = False
                'Exit Function
            End If
        Case 20 ''Received
            ''Paid/Received|fffd|Q|fffd|d|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
            If Cells(rngTarget.Row, 19).Value <> "" And rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                Cells(rngTarget.Row, 19).Value = ""
                m_blnSetupCellsInProgress = False
                'f_onChangeCell = False
                'Exit Function
            End If
        End Select
    End If

    ''DescriptionItem |fffd||fffd| ACCode|fffd||752||fffd|
    If blnSelectDescription Then
        If g_strMapACCode <> "" Then
            ''JV Book |fffd||702||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
            If Cells(rngTarget.Row, 23).Value <> "" Or Cells(7, 9).Value = c_strPurposeJV Then
                If fg_GetIndexFromTokenInCSV(g_strMapACCode, g_strLCodeIndispensableAccount) >= 0 Then
                    ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    rngTarget.Activate
                    f_onChangeCell = False
                    Exit Function
                End If
            End If
        End If
        m_blnSetupCellsInProgress = True
        If rngTarget.Value = "" Then
            Cells(rngTarget.Row, 10).Value = ""
            Cells(rngTarget.Row, 11).Value = ""
        Else
            Cells(rngTarget.Row, 10).Value = g_strMapACCode
            Cells(rngTarget.Row, 11).Value = g_strMapACName
        End If

        If g_strMapWarn <> "" Then        ''Warning|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
            MsgBox g_strMapWarn, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        End If
        
        m_blnSetupCellsInProgress = False
        g_strMapACCode = ""
        g_strMapACName = ""
        g_strMapWarn = ""
    End If

    ''|fffd||fffd||fffd|O|fffd|v|fffd|a|fffd|r|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
    If blnSetChgCode And Cells(rngTarget.Row, 9).Value = "" And rngTarget.Value <> "" And rngTarget.Row <> c_intBBDetailRowST Then
        m_blnSetupCellsInProgress = True

        If Cells(rngTarget.Row - 1, 9).Value <> "" Then
            Cells(rngTarget.Row, 9).Value = Cells(rngTarget.Row - 1, 9).Value
        End If
        m_blnSetupCellsInProgress = False
    End If

    If blnSetACCode Or blnSetACName Then
        m_blnSetupCellsInProgress = True
        If blnSetACCode Then
            If rngTarget.Value <> "" Then
                ''JV Book |fffd||702||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
                If Cells(rngTarget.Row, 23).Value <> "" Or Cells(7, 9).Value = c_strPurposeJV Then
                    If fg_GetIndexFromTokenInCSV(rngTarget.Value, g_strLCodeIndispensableAccount) >= 0 Then
                        ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                        MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                        rngTarget.Activate
                        f_onChangeCell = False
                        m_blnSetupCellsInProgress = False
                        Exit Function
                    End If
                End If
            End If
            For lngIndex = 0 To UBound(g_strAryAcCode)
                If rngTarget.Value = g_strAryAcCode(lngIndex) Then
                    rngTarget.Offset(0, 1).Value = g_strAryAcName(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcCode) Then
                rngTarget.Offset(0, 1).ClearContents
            End If
        Else
            For lngIndex = 0 To UBound(g_strAryAcName)
                If rngTarget.Value = g_strAryAcName(lngIndex) Then
                    ''JV Book |fffd||702||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
                    If Cells(rngTarget.Row, 23).Value <> "" Or Cells(7, 9).Value = c_strPurposeJV Then
                        If fg_GetIndexFromTokenInCSV(g_strAryAcCode(lngIndex), g_strLCodeIndispensableAccount) >= 0 Then
                            ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                            MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                            rngTarget.Activate
                            f_onChangeCell = False
                            m_blnSetupCellsInProgress = False
                            Exit Function
                        End If
                    End If
                    rngTarget.Offset(0, -1).Value = g_strAryAcCode(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcName) Then
                rngTarget.Offset(0, -1).ClearContents
            End If
        End If
        m_blnSetupCellsInProgress = False
    End If
    
    ''LinkcodeSelect|fffd|{|fffd|^|fffd||fffd||fffd||fffd||515||3cd|X
    If blnSelectDescription Or blnSetACCode Or blnSetACName Then
        If Cells(rngTarget.Row, 10).Value <> "" Then ''|fffd||fffd||fffd||fffd||216||693||fffd||fffd||34d||3c2||fffd|
            lngIndex = fg_GetIndexFromTokenInCSV(Cells(rngTarget.Row, 10).Value, g_strLCodeIndispensableAccount)
            If lngIndex >= 0 Then
                CmdBtnLinkCodeSelect.Enabled = True
            End If
            If Cells(rngTarget.Row, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
                CmdBtnLinkCodeSelect.Enabled = False
            End If
        End If
    End If
   
    If blnSetConnCode Or blnSetConnName Then
        m_blnSetupCellsInProgress = True
        If blnSetConnCode Then
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnCodeTSV)
            rngTarget.Offset(0, 1).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnNameTSV)
        Else
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnNameTSV)
            rngTarget.Offset(0, -1).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnCodeTSV)
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''NKorJV |fffd||310||752||fffd|
    If blnSetNKorJV And Cells(rngTarget.Row, 17).Value = "" And rngTarget.Value <> "" Then
        m_blnSetupCellsInProgress = True
        If Cells(7, 9).Value = c_strPurposeNK Then
            Cells(rngTarget.Row, 17).Value = "NK"
        Else
            Cells(rngTarget.Row, 17).Value = "JV"
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        If rngTarget.Row = 4 Then ''LedgerCode Change
            ''|fffd|w|fffd|b|fffd|_|fffd|Z|fffd||fffd||fffd||3cd|X
            lngTokenIdx = fg_GetIndexFromTokenInCSV(rngTarget.Value, rngTarget.Validation.Formula1)
            
            If lngTokenIdx < 0 Then
                ''Name of Bank
                Cells(5, 5).Value = ""
                ''Type of Account
                Cells(6, 5).Value = ""
                ''Account No.
                Cells(7, 5).Value = ""
                ''Currency
                Cells(8, 5).Value = ""
                ''This Ledger for
                Cells(7, 9).Value = ""
                ''Free Memo
                Cells(8, 9).Value = ""
            Else
                ''Name of Bank
                Cells(5, 5).Value = g_typAryBBInfo(lngTokenIdx).m_strName
                ''Type of Account
                Cells(6, 5).Value = g_typAryBBInfo(lngTokenIdx).m_strAccountType
                ''Account No.
                Cells(7, 5).Value = g_typAryBBInfo(lngTokenIdx).m_strAccountNo
                ''Currency
                Cells(8, 5).Value = g_typAryBBInfo(lngTokenIdx).m_strCurrency
                ''This Ledger for
                If g_typAryBBInfo(lngTokenIdx).m_intPurpose = 0 Then
                    Cells(7, 9).Value = c_strPurposeNK
                Else
                    Cells(7, 9).Value = c_strPurposeJV
                End If
                ''Free Memo
                Cells(8, 9).Value = g_typAryBBInfo(lngTokenIdx).m_strMemo
                m_intPurpose = g_typAryBBInfo(lngTokenIdx).m_intPurpose         ''Purpose
                m_strBookAcCode = g_typAryBBInfo(lngTokenIdx).m_strAcCode       ''CashBankAccountCode
            End If
        End If
        
        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        s_SetupDetailCells
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|
    If rngTarget.Row >= c_intBBDetailRowST And rngTarget.Row <= c_lngMAX_ROWINDEX Then
        m_blnSetupCellsInProgress = True
        Cells(rngTarget.Row, 24) = 1
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If


    f_onChangeCell = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/05/30 : Knowlbo Suzuki : |fffd|X|fffd|V|fffd||fffd||256||fffd||fffd||5c3|Z|fffd||fffd||fffd||103|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||1c9||fffd|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim datTarget As Date
    Dim datValue As Date
    Dim strMSG As String
    Dim strLedID As String
    Dim lngRecIDNo As Long
    Dim strData As String
    Dim blnUpdate As Boolean
    Dim intCount As Integer
    Dim blnInsert As Boolean
    Dim strCurrency As String
    Dim datPrNow As Date

    datPrNow = Now()
    g_blnPartPayment = False    ''|fffd||a554||fffd||fffd||fffd||fffd|/|fffd|x|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    s_CheckSheetUpdate    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N

    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData() Then
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''LinkCode|fffd||303|`|fffd|F|fffd|b|fffd|N
    If Not f_BookCheckLinkCode() Then
        CmdBtnDbUpDate.Visible = True
        sg_SetScreenUpdate True
        Exit Sub
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If g_blnR3IfEnable Then ''R3IF |fffd|L|fffd||fffd|
        strMSG = c_strQUESTION_UPDATE
    Else                    ''R3IF |fffd||fffd||fffd||fffd|
        strMSG = "Now Setting is Disable R/3 Interface!" & vbCrLf & c_strQUESTION_UPDATE
    End If
    If vbNo = MsgBox(strMSG, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    blnInsert = False
    sg_SetScreenUpdate False
    
    sg_GetCurrentRecIDNo GLED_BB ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR

    datTarget = DateValue(Cells(3, 5).Value)
    strLedID = Cells(4, 5).Value
    strCurrency = Cells(8, 5).Value

    ''Book|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_BankBook & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedID)
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_BankBook
        GoTo LBL_ERR
    End If

    ''DB|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V==================================================
    m_blnSetupCellsInProgress = True
    For lngRowIndex = c_intBBDetailRowST To c_lngMAX_ROWINDEX Step 1
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            If f_IsNullRow(lngRowIndex) Then
                ''NULL|fffd|s|fffd||202||302||143|f|fffd|[|fffd|^|fffd||d3dc|(|fffd||fffd||fffd||389||fffd|)
            Else                ''|fffd|X|fffd|V/|fffd||1c9||fffd|
                blnUpdate = False
                adoRs.Filter = adFilterNone
                
                ''|fffd|X|fffd|V
                If Cells(lngRowIndex, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd||fffd||fffd|
                    lngRecIDNo = Cells(lngRowIndex, 23).Value
                    adoRs.Filter = "ID=" & lngRecIDNo
                    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                        objdba.SQLString = fg_setLedgerCBTHistorySQLString(adoRs, c_strTBL_BankBookHST, datPrNow)
                        If (objdba.ExecuteSQL(adoCn) <> 0) Then
                            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_BankBook
                            GoTo LBL_ERR
                        End If
                    Else
                        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_BankBook
                        GoTo LBL_ERR
                    End If
                    blnUpdate = True
                ''|fffd||1c9||fffd|
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                    lngRecIDNo = g_lngAryCurRecIDNumber(GLED_BB)
                    lngRecIDNo = lngRecIDNo + 1
                    g_lngAryCurRecIDNumber(GLED_BB) = lngRecIDNo
                    blnUpdate = True
                    blnInsert = True
                End If
                If blnUpdate Then
                    ''|fffd|o|fffd|[|fffd||fffd||fffd|t|fffd||30d||c42c|
                    If Month(datTarget) < Cells(lngRowIndex, 2).Value Then
                        datValue = DateSerial(Year(datTarget) - 1, _
                                              Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                    Else
                        datValue = DateSerial(Year(datTarget), _
                                              Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                    End If

                    ''--AutoTransfer---------------------------------------------------->>
                    If (Cells(lngRowIndex, 24).Value = 3) Or (Cells(lngRowIndex, 24).Value = 4) Then
                        Select Case fg_CheckLinkCodeKind(Cells(lngRowIndex, 14).Value)
                        Case GLNK_IV ''Invoice
                            If (Cells(lngRowIndex, 24).Value = 4) Then      ''|fffd||a554||fffd||fffd||fffd||fffd|ITEM
                                g_blnPartPayment = True
                            ElseIf (Cells(lngRowIndex, 24).Value = 3) Then  ''|fffd||fffd||fffd||fffd||20a|O|fffd||fffd|ITEM
                                g_blnPartPayment = False
                            End If
                            ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd|A|fffd|U|fffd||582||202||fffd|
                            If (g_blnPartPayment = False) Then
                                intCount = 0
                                fg_GetLedgerDatabyLinkCode strCurrency, _
                                        Cells(lngRowIndex, 14).Value, intCount, m_typAryTRBookData
                                ReDim Preserve m_typAryTRBookData(intCount)
                                m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                                m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                                sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                                If (fg_InvoiceTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData) <> True) Then
                                    GoTo LBL_ERR
                                End If
                            End If
                            If fg_SetInvoiceStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        Case GLNK_AS ''Associate
                            intCount = 0
                            ReDim Preserve m_typAryTRBookData(intCount)
                            m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                            m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                            sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                            If (fg_AssociateTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData(intCount)) <> True) Then
                                GoTo LBL_ERR
                            End If
                            If fg_SetAssociateStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, _
                                    Cells(lngRowIndex, 19).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        Case GLNK_SC ''Sub-contractor
                            If (Cells(lngRowIndex, 24).Value = 4) Then      ''|fffd||a554||fffd|x|fffd||fffd|ITEM
                                g_blnPartPayment = True
                            ElseIf (Cells(lngRowIndex, 24).Value = 3) Then  ''|fffd||fffd||fffd||fffd||20a|O|fffd||fffd|ITEM
                                g_blnPartPayment = False
                            End If
                            ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd|A|fffd|U|fffd||582||202||fffd|
                            If (g_blnPartPayment = False) Then
                                intCount = 0
                                fg_GetLedgerDatabyLinkCode strCurrency, _
                                        Cells(lngRowIndex, 14).Value, intCount, m_typAryTRBookData
                                ReDim Preserve m_typAryTRBookData(intCount)
                                m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                                m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                                sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                                If (fg_SubconTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData) <> True) Then
                                    GoTo LBL_ERR
                                End If
                            End If
                            If fg_SetSubConPaymentStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        Case GLNK_RM ''Remittance
                            If Cells(lngRowIndex, 10).Value = c_strACRM_RecHeadCode Or _
                               Cells(lngRowIndex, 10).Value = c_strACRM_RecOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||c2bce||fffd|
                                If fg_SetPastRemittanceStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, strCurrency, _
                                    Cells(lngRowIndex, 20).Value, datValue) = False Then
                                    GoTo LBL_ERR
                                End If
                             End If
                        Case GLNK_PP ''PrePaid
                            intCount = 0
                            ReDim Preserve m_typAryTRBookData(intCount)
                            m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                            m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                            sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                            If (fg_PrepaidTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData, True) <> True) Then
                                GoTo LBL_ERR
                            End If
                            If fg_SetPrepaidPaymentDate(adoCn, objdba, Cells(lngRowIndex, 14).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        Case GLNK_FA ''Fixed Assets
                        Case Else
                            GoTo LBL_ERR
                        End Select
                        Erase m_typAryTRBookData
                    End If
                    ''--AutoTransfer----------------------------------------------------<<
                    
                    adoRs.Fields("ID").Value = lngRecIDNo                   ''ID
                    adoRs.Fields("OfficeCode").Value = g_strOfficeCode      ''OfficeCode
                    adoRs.Fields("LedgerCode").Value = strLedID             ''LedgerCode
                    adoRs.Fields("TargetPeriod").Value = datTarget          ''TargetPeriod
                    adoRs.Fields("LedgerDate").Value = datValue             ''LedgerDate
                    If Cells(lngRowIndex, 4).Value <> "" Then               ''Description
                        strData = CStr(Cells(lngRowIndex, 4).Value)
                        adoRs.Fields("Description").Value = strData
                    Else
                        adoRs.Fields("Description").Value = Null
                    End If
                    strData = c_strKwdModifyNK
                    If Cells(lngRowIndex, 7).Value <> "" Then
                        If Left$(CStr(Cells(lngRowIndex, 7).Value), 4) = c_strKwdModifyBR Or _
                           Left$(CStr(Cells(lngRowIndex, 7).Value), 4) = c_strKwdModifyNK Then
                            strData = strData & Mid$(Cells(lngRowIndex, 7).Value, 5)
                        Else
                            strData = strData & CStr(Cells(lngRowIndex, 7).Value)
                        End If
                        If Len(strData) > 128 Then strData = Left$(strData, 128)
                    End If
                    adoRs.Fields("Details").Value = strData                         ''Details
                    adoRs.Fields("WBSCode").Value = Cells(lngRowIndex, 9).Value     ''WBSCode
                    strData = CStr(Cells(lngRowIndex, 10).Value)                    ''AccountCode
                    adoRs.Fields("AccountCode").Value = strData
                    strData = Cells(lngRowIndex, 11).Value                          ''AccountName
                    adoRs.Fields("AccountName").Value = strData
                    If Cells(lngRowIndex, 12).Value <> "" Then                      ''ConnectionCode
                        strData = Cells(lngRowIndex, 12).Value
                        adoRs.Fields("ConnectionCode").Value = strData
                    Else
                        adoRs.Fields("ConnectionCode").Value = Null
                    End If
                    If Cells(lngRowIndex, 13).Value <> "" Then                      ''ConnectionName
                        strData = Cells(lngRowIndex, 13).Value
                        adoRs.Fields("ConnectionName").Value = strData
                    Else
                        adoRs.Fields("ConnectionName").Value = Null
                    End If
                    If Cells(lngRowIndex, 14).Value <> "" Then                      ''LedgerLinkCode
                        strData = Cells(lngRowIndex, 14).Value
                        adoRs.Fields("LedgerLinkCode").Value = strData
                    Else
                        adoRs.Fields("LedgerLinkCode").Value = Null
                    End If
                    If Cells(lngRowIndex, 15).Value <> "" Then                      ''EviNo
                        adoRs.Fields("EviNo").Value = Cells(lngRowIndex, 15).Value
                    Else
                        adoRs.Fields("EviNo").Value = Null
                    End If
                    If Cells(lngRowIndex, 16).Value <> "" Then                      ''CheckNo
                        adoRs.Fields("CheckNo").Value = Cells(lngRowIndex, 16).Value
                    Else
                        adoRs.Fields("CheckNo").Value = Null
                    End If
                    adoRs.Fields("NKJV").Value = Cells(lngRowIndex, 17).Value       ''NKJV
                            
                    If Cells(lngRowIndex, 18).Value = "Y" Then                      ''Claim
                        adoRs.Fields("Claim").Value = "1"
                    Else
                        adoRs.Fields("Claim").Value = "0"
                    End If
    
                    If Cells(lngRowIndex, 19).Value <> "" Then                      ''Paid
                        adoRs.Fields("Paid").Value = Cells(lngRowIndex, 19).Value
                    Else
                        adoRs.Fields("Paid").Value = 0
                    End If
                    If Cells(lngRowIndex, 20).Value <> "" Then                      ''Received
                        adoRs.Fields("Received").Value = Cells(lngRowIndex, 20).Value
                    Else
                        adoRs.Fields("Received").Value = 0
                    End If
                    adoRs.Fields("ModifyPlace").Value = "1" ''SS_Edit=1
                    adoRs.Fields("InsertDate").Value = datPrNow
                    adoRs.Fields("InsertUID").Value = g_strLoginId
                    
                    adoRs.Fields("IFRequestNo").Value = -1
                    
                    If Cells(7, 9).Value <> c_strPurposeJV Then
                        If (g_blnR3IfEnable = False) Then ''R3IF|fffd||fffd||fffd||fffd|
                            adoRs.Fields("IFSendDate").Value = 1
                            adoRs.Fields("IFRequestNo").Value = -9
                        End If
                    End If
                    
                    adoRs.Update
                    ''|fffd||113||1c2||74d||fffd||fffd||742||fffd||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
                    'Cells(lngRowIndex, 23).Value = lngRecIDNo
                    'Cells(lngRowIndex, 24).Value = ""
                    ''|fffd||48f|W|fffd|s|fffd||303||fffd||fffd|b|fffd|N
                    Range("B" & lngRowIndex, "T" & lngRowIndex).Locked = True
                End If
                adoRs.MoveFirst
            End If
        End If
    Next
    Call objdba.closeRecordset(adoRs)

    If m_blnCreateLinkcode Then
    ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_FA, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerRecID|fffd|X|fffd|V
    If blnInsert Then
        If fg_UpdateCurrentRecIDNo(GLED_BB, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    ''|fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd|j|fffd||6d1||fffd||fffd||fffd||fffd||fffd|
    If fg_UpdateAccountsBalance(strLedID, datTarget, _
                        m_curCurrentBalance, adoCn, objdba) = False Then GoTo LBL_ERR
    
    ''|fffd||fffd|v|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
    If g_blnR3IfEnable Then ''R3IF |fffd|L|fffd||fffd|
        If Cells(7, 9).Value <> c_strPurposeJV Then
            ''|fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||50e||64fe|
            If fg_GetR3FIPeriod(strData) = False Then GoTo LBL_ERR
            If fg_SetR3AccountsData(adoCn, objdba, strLedID, datTarget, _
                                    strCurrency, m_strBookAcCode, strData, False) <> True Then GoTo LBL_ERR
        End If
    End If

    ''SummaryAccount|fffd||c42c|--------------------------------
    If fg_CreateAccountSummaryByLedCode(adoCn, objdba, datTarget, strLedID, strCurrency, _
                                        m_intPurpose, m_strBookAcCode) <> True Then GoTo LBL_ERR
    
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)

    m_blnDirty = False

    ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells

    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    
    m_blnMasterUpdate = False ''Flag|fffd||3cd|X
    m_blnCreateLinkcode = False
    
    ThisWorkbook.Activate
    
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Erase m_typAryTRBookData
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    sg_SetScreenUpdate True
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED2]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

Private Sub CmdBtnLinkCodeSelect_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    
    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N
    s_CheckSheetUpdate

    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(1) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Connection Code|fffd||48f|W|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Connection Code|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnConnCodeEdit_Click()
    
    frmConnect_Setting.Show
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
    If g_blnConnCodeEdit = False Then
        GoTo LBL_END
    End If
    
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
       
    sg_GetConnectionCodeList    ''ConnectionCode |fffd||113||1c2||74d||fffd||fffd||fffd|

    ''ConnectionCode |fffd||110||752||fffd|
    sg_SetupConnCodeCells Me.Range("L" & c_intBBDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                          Me.Range("M" & c_intBBDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                          Me.Range("AC" & c_intBBDetailRowST)

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
LBL_END:
    CmdBtnConnCodeEdit.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCode|fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnLinkCodeSelect_Click()

    Dim lngRowNo As Long
    Dim intKind As Integer
    
    intKind = -1
    If Cells(ActiveCell.Row, 10).Value = "" Then
        GoTo LBL_END
    End If
    lngRowNo = fg_FindSameDataRowNo(Cells(ActiveCell.Row, 10), _
                wsSettings.Range("C2", "C65536"))
    If lngRowNo = 0 Then
        GoTo LBL_END
    End If
    If wsSettings.Cells(lngRowNo, 12).Value <> "" Then
        If InStr(wsSettings.Cells(lngRowNo, 12).Value, "(") = 0 Then
            Select Case wsSettings.Cells(lngRowNo, 12).Value
            Case "IV"
                intKind = GLNK_IV
            Case "AS"
                intKind = GLNK_AS
            Case "SC"
                intKind = GLNK_SC
            Case "RM"
                intKind = GLNK_RM
                If Cells(ActiveCell.Row, 10).Value = c_strACRM_SndHeadCode Then ''|fffd|{|fffd||402||591||fffd||fffd||fffd|
                    Dim strCode As String
                    ''|fffd|{|fffd||402||591||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||356||fffd||fffd||fffd||fffd||152||fffd| "HeaD Office"
                    strCode = g_strOfficeCode & Format$(g_intTargetSysYear Mod 100, "00")
                    strCode = strCode & "RM" & "HDO"
                    m_blnDirty = True
                    m_blnSetupCellsInProgress = True
                    Unprotect Password:=c_strSheetPWD
                    Cells(ActiveCell.Row, 14) = strCode
                    Cells(ActiveCell.Row, 24) = 1
                    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                    m_blnSetupCellsInProgress = False
                    GoTo LBL_END
                End If
                
                If Cells(ActiveCell.Row, 10).Value = c_strACRM_SndOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||591||fffd||fffd||fffd|
                    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||34e||fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_RM_ReqToCode, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(ActiveCell.Row, 14).Activate
                    GoTo LBL_END
                End If
            Case "PP"
                intKind = GLNK_PP
            Case "FA"
                intKind = GLNK_FA
                If Cells(ActiveCell.Row, 10).Value = c_strACFA_SaleCode Then ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
                    ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||34e||fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_FA_SaleCode, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(ActiveCell.Row, 14).Activate
                    GoTo LBL_END
                ElseIf Cells(ActiveCell.Row, 10).Value = c_strACFA_BuyCode Then ''|fffd||152||8391||fffd|Y|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If vbYes <> MsgBox(c_strMSG_FA_BuyNEWCode, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                        Cells(ActiveCell.Row, 14).Activate
                        GoTo LBL_END
                    End If
                    Cells(ActiveCell.Row, 14).Value = fg_CreateLinkCode(GLNK_FA)  ''|fffd||152||8391||fffd|YLinkCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    m_blnMasterUpdate = True
                    m_blnCreateLinkcode = True
                    GoTo LBL_END
                End If
            End Select
        End If
    End If
    
    frmSelectLinkCode.PrmLedgerType = intKind    ''BankBook|fffd||312||289||742||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||250||752||fffd|
    frmSelectLinkCode.PrmCurrency = Cells(8, 5).Value
    frmSelectLinkCode.PrmCondition = 0    ''Condition|fffd||fffd||752||fffd| (Paid|fffd||351||38f||6ca|O)
    frmSelectLinkCode.PrmPurpose = 0    ''0|fffd||152||fffd|
    frmSelectLinkCode.setUpForm    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    frmSelectLinkCode.Show    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    If (frmSelectLinkCode.Result = True) Then   ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LedgerLinkCode|fffd||fffd||fffd||64fe|
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        Cells(ActiveCell.Row, 14) = frmSelectLinkCode.PrmSelectLCode
        Cells(ActiveCell.Row, 24) = 1
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If
    frmSelectLinkCode.CloseForm    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
LBL_END:
    CmdBtnLinkCodeSelect.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|}|fffd|E|fffd|X|fffd|E|fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||303|v|fffd||fffd||fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Boolean |fffd|^> |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||313||18e||fffd||fffd|||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
    
    If Target.Row < c_intBBDetailRowST Or Target.Row > c_lngMAX_ROWINDEX Then
        Cancel = False
        Exit Sub
    End If
    If Target.Column < 4 Or Target.Column > 6 Then
        Cancel = False
        Exit Sub
    End If

    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(3, 5).Value <> "" And m_blnDecisionLock = True Then
        MsgBox c_strMSG_EDITLOCK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Cancel = True
        Exit Sub
    End If
    If Target.Locked = True Then
        MsgBox c_strMSG_EDITLOCKAUTO_TR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Cancel = True
        Exit Sub
    End If
    
    If Target.Row >= c_intBBDetailRowST Then
        If Target.Column = 4 Then         ''Description Item
            g_strMapACCode = ""
            g_strMapACName = ""
            g_strMapWarn = ""
           
            g_objDscrptCmdBar.ShowPopup   ''Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||315|\|fffd||fffd|
            Cancel = True                 ''|fffd||fffd||fffd||fffd||303||fffd||fffd|j|fffd||fffd||fffd|[|fffd||314||fffd|\|fffd||fffd|
            Exit Sub
        End If
    
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If
    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If

    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim blnLCode As Boolean
    Dim lngIx As Long
    blnLCode = False
'    If Cells(8, 5).Value <> "" And Cells(8, 5).Value = g_typAryPJTInfo(0).m_strCurrency Then ''PRJ|fffd||289||743|`|fffd|F|fffd|b|fffd|N
    If Cells(8, 5).Value <> "" Then  ''PRJ|fffd||289||743|`|fffd|F|fffd|b|fffd|N|fffd||342||fffd||fffd||202||fffd|
        If Target.Row >= c_intBBDetailRowST And Target.Row <= c_lngMAX_ROWINDEX Then
            If Cells(Target.Row, 10).Value <> "" Then ''|fffd||fffd||fffd||fffd||216||693||fffd||fffd||34d||3c2||fffd|
                lngIx = fg_GetIndexFromTokenInCSV(Cells(Target.Row, 10).Value, g_strLCodeIndispensableAccount)
                If lngIx >= 0 Then
                    blnLCode = True
                End If
                If Cells(Target.Row, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
                    blnLCode = False
                End If
            End If
        End If
    End If
LBL_END:
    CmdBtnLinkCodeSelect.Enabled = blnLCode
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

Attribute VB_Name = "wsBrInvoice"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnQuit, 3, 2, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||191||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_strAryInvoiceCUR() As String          ''|fffd||fffd||fffd|n|fffd||289||fffd|Invoice|fffd|z|fffd||fffd|
Private m_strAryInvoiceJPY() As String          ''JPY|fffd||289||fffd|Invoice|fffd|z|fffd||fffd|
Private m_strAryInvoiceUSD() As String          ''USD|fffd||289||fffd|Invoice|fffd|z|fffd||fffd|
Private m_strAryInvoiceEUR() As String          ''EUR|fffd||289||fffd|Invoice|fffd|z|fffd||fffd|
Private m_strAryInvoiceGBP() As String          ''GBP|fffd||289||fffd|Invoice|fffd|z|fffd||fffd|

Private m_strCreateLinkCode As String           ''|fffd||fffd||fffd||fffd|LinkCode(Quit|fffd||fffd||fffd||314||fffd|r|fffd|p|fffd|j
Public m_strReverseInvLinkCode As String         ''|fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd||fffd|f|fffd|[|fffd|^
Public m_strReverseCurrency As String            ''|fffd|t|fffd|`|fffd|[|fffd||289||743|R|fffd|[|fffd|h
Private m_strAryRevIVLinkCode() As String        ''|fffd|t|fffd|`|fffd|[|fffd|pInvoiceLinkCode|fffd|z|fffd||fffd|
Private m_strAryRevInvoiceNo() As String         ''|fffd|t|fffd|`|fffd|[|fffd|pInvoice|fffd|z|fffd||fffd|
Private m_typAryRevAsoData() As clsReversAsoPayment ''|fffd|t|fffd|`|fffd|[|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||fffd||fffd|z|fffd||fffd|
Private m_lngRevAsoCount As Long            ''|fffd|t|fffd|`|fffd|[|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||fffd||fffd|z|fffd||fffd|

Public m_strEditInvCode As String               ''LedgerLinkCode(|fffd||102||44f|o|fffd||fffd||fffd||fffd|LEDGER|fffd||150||752||fffd|)
Public m_intCallLedger As Integer               ''|fffd||102||44f|o|fffd||fffd||fffd||fffd|LEDGER
Public m_blnEditInv As Boolean                  ''|fffd||fffd||fffd|z|fffd|s|fffd||fffd|v|fffd||242||fffd||fffd|C|fffd||fffd||fffd|t|fffd||fffd||fffd|O

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 31 ''|fffd||fffd||fffd||34d||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l
Private Const mc_strNewAdvance As String = "Advance New" ''NewInvoice-Advance
Private Const mc_strNewProgress As String = "Progress New" ''NewInvoice-Progress
Private Const mc_strStatPaid As String = "Paid" ''Status|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|
Private Const mc_strStatApproved As String = "Approved" ''Status|fffd|F|fffd||fffd||fffd|F|fffd||fffd|
Private Const mc_strStatInvoiced As String = "Invoiced" ''Status|fffd|F|fffd||fffd|o|fffd||fffd|
Private Const mc_strStatEstimated_S As String = "Estimate signed" ''Status|fffd|F|fffd||fffd||fffd||3cc|_|fffd||fffd|
Private Const mc_strStatEstimated_N As String = "Estimate not signed" ''Status|fffd|F|fffd||fffd||fffd||3d6||fffd||fffd|_|fffd||fffd|


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean
    
    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_BR) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        
        ''Invoice|fffd|R|fffd||fffd||fffd|{|fffd||110||752||fffd|
        s_GetInvoiceHeaderInfo
        s_SetupInvoiceNoCells Range("C3"), True
        If g_blnAryCmnMstUpdate(GLED_BR) Then
            s_SetupHeader                           ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            s_SetupDetailValidationCells            ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            g_blnAryCmnMstUpdate(GLED_BR) = False
        End If
        s_SetupDetailCells
        m_blnSetupCellsInProgress = False
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        Exit Function
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
   
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intBRInvDetailRowST)
    Cells(1, 1).Activate
    
    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                                ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_strReverseInvLinkCode = ""
    m_blnSetupCellsInProgress = True         ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_SetupHeader                           ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells            ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells                      ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True          ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    g_blnArySetupSheet(GLED_BR) = True       ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_BR) = False     ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/26 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
    Erase m_strAryInvoiceCUR
    Erase m_strAryInvoiceJPY
    Erase m_strAryInvoiceUSD
    Erase m_strAryInvoiceEUR
    Erase m_strAryInvoiceGBP
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strDatas As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim rngLedCode As Range
    
    ''Currency
    Select Case g_typAryPJTInfo(0).m_strCurrency
    Case "USD"
        strDatas = "USD, JPY, GBP, EUR"
    Case "JPY"
        strDatas = "JPY, USD, GBP, EUR"
    Case "EUR"
        strDatas = "EUR, JPY, USD, GBP"
    Case "GBP"
        strDatas = "GBP, JPY, EUR, USD"
    Case Else
        strDatas = g_typAryPJTInfo(0).m_strCurrency & ", JPY, USD, GBP, EUR"
    End Select
    
    sg_SetupValidation Range("C3").Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    Cells(3, 3).Value = g_typAryPJTInfo(0).m_strCurrency

    ''Period(start/end)|fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd||195|\|fffd||fffd||fffd|`|fffd||fffd||fffd||752||fffd|
    sg_SetupValidation Range("C7:C8").Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range("C7:C8").NumberFormat = c_strFORMAT_DATE

    ''|fffd||209||fffd||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||42a42||fffd||752||80b7||fffd||fffd|-----------------
    Cells(3, 7).Value = g_typAryPJTInfo(0).m_strOfficeCode    ''Office Code
    Cells(4, 7).Value = g_typAryPJTInfo(0).m_strPJTCode       ''Project Code
    Cells(5, 7).Value = g_typAryPJTInfo(0).m_strPJTName       ''Project Name
    
    ''PaymentMethod
    If g_typAryPJTInfo(0).m_intPaymentMethod = 0 Then
        Cells(6, 7).Value = c_strInvPaymentMonth
    Else
        Cells(6, 7).Value = c_strInvPaymentSched
    End If
    
    s_SetupStatusCells Range("G7")      ''Status|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    s_GetInvoiceHeaderInfo              ''InvoiceHeader |fffd||1c2||74d||fffd||fffd||fffd|
    s_SetupInvoiceNoCells Range("C3")   ''InvoiceNo|fffd|R|fffd||fffd||fffd|{|fffd||c42c|
    
    ''Issuing Date, Approval Date, Payment Date|fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd||195|\|fffd||fffd||fffd|`|fffd||fffd||fffd||752||fffd|
    sg_SetupValidation Range("J6:J8").Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range("J6:J8").NumberFormat = c_strFORMAT_DATE
    
  End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Invoice|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd||fffd||fffd|Invoice|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub _
s_GetInvoiceHeaderInfo()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strInvoiceNo As String
    Dim strMSG As String
    Dim lngInvIdxCUR As Long
    Dim lngInvIdxJPY As Long
    Dim lngInvIdxUSD As Long
    Dim lngInvIdxEUR As Long
    Dim lngInvIdxGBP As Long

    lngInvIdxCUR = 1
    lngInvIdxJPY = 1
    lngInvIdxUSD = 1
    lngInvIdxEUR = 1
    lngInvIdxGBP = 1

    ''|fffd||289||756||fffd||fffd||fffd|InvoiceNo|fffd|z|fffd||4f24a||fffd||fffd||fffd|
    ReDim m_strAryInvoiceCUR(0)
    ReDim m_strAryInvoiceJPY(0)
    ReDim m_strAryInvoiceUSD(0)
    ReDim m_strAryInvoiceEUR(0)
    ReDim m_strAryInvoiceGBP(0)
    
    m_strAryInvoiceCUR(0) = mc_strNewAdvance
    m_strAryInvoiceJPY(0) = mc_strNewAdvance
    m_strAryInvoiceUSD(0) = mc_strNewAdvance
    m_strAryInvoiceEUR(0) = mc_strNewAdvance
    m_strAryInvoiceGBP(0) = mc_strNewAdvance

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY " & "tb.InvoiceNo"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If

    If Not (adoRs Is Nothing) And adoRs.EOF = False Then
        Do Until adoRs.EOF
            ''Invoice|fffd|R|fffd||fffd||fffd|{|fffd|p|fffd|z|fffd||fffd||310||752||fffd|
            strInvoiceNo = adoRs.Fields("InvoiceNo").Value
            
            ''AdvanceData|fffd||303|`|fffd|F|fffd|b|fffd|N
            If Not IsNull(adoRs.Fields("AdvanceData").Value) And _
                adoRs.Fields("AdvanceData").Value = "1" Then  'Advance|fffd|s
                Select Case adoRs.Fields("Currency").Value
                Case "USD"
                    If m_strAryInvoiceUSD(0) = mc_strNewAdvance Then
                        m_strAryInvoiceUSD(0) = strInvoiceNo
                    Else
                        ReDim Preserve m_strAryInvoiceUSD(lngInvIdxUSD)
                        m_strAryInvoiceUSD(lngInvIdxUSD) = strInvoiceNo
                        lngInvIdxUSD = lngInvIdxUSD + 1
                    End If
                Case "JPY"
                    If m_strAryInvoiceJPY(0) = mc_strNewAdvance Then
                        m_strAryInvoiceJPY(0) = strInvoiceNo
                    Else
                        ReDim Preserve m_strAryInvoiceJPY(lngInvIdxJPY)
                        m_strAryInvoiceJPY(lngInvIdxJPY) = strInvoiceNo
                        lngInvIdxJPY = lngInvIdxJPY + 1
                    End If
                Case "EUR"
                    If m_strAryInvoiceEUR(0) = mc_strNewAdvance Then
                        m_strAryInvoiceEUR(0) = strInvoiceNo
                    Else
                        ReDim Preserve m_strAryInvoiceEUR(lngInvIdxEUR)
                        m_strAryInvoiceEUR(lngInvIdxEUR) = strInvoiceNo
                        lngInvIdxEUR = lngInvIdxEUR + 1
                    End If
                Case "GBP"
                    If m_strAryInvoiceGBP(0) = mc_strNewAdvance Then
                        m_strAryInvoiceGBP(0) = strInvoiceNo
                    Else
                        ReDim Preserve m_strAryInvoiceGBP(lngInvIdxGBP)
                        m_strAryInvoiceGBP(lngInvIdxGBP) = strInvoiceNo
                        lngInvIdxGBP = lngInvIdxGBP + 1
                    End If
                Case Else
                    If m_strAryInvoiceCUR(0) = mc_strNewAdvance Then
                        m_strAryInvoiceCUR(0) = strInvoiceNo
                    Else
                        ReDim Preserve m_strAryInvoiceCUR(lngInvIdxCUR)
                        m_strAryInvoiceCUR(lngInvIdxCUR) = strInvoiceNo
                        lngInvIdxCUR = lngInvIdxCUR + 1
                    End If
                End Select
            Else
                Select Case adoRs.Fields("Currency").Value
                Case "USD"
                    ReDim Preserve m_strAryInvoiceUSD(lngInvIdxUSD)
                    m_strAryInvoiceUSD(lngInvIdxUSD) = strInvoiceNo
                    lngInvIdxUSD = lngInvIdxUSD + 1
                Case "JPY"
                    ReDim Preserve m_strAryInvoiceJPY(lngInvIdxJPY)
                    m_strAryInvoiceJPY(lngInvIdxJPY) = strInvoiceNo
                    lngInvIdxJPY = lngInvIdxJPY + 1
                Case "EUR"
                    ReDim Preserve m_strAryInvoiceEUR(lngInvIdxEUR)
                    m_strAryInvoiceEUR(lngInvIdxEUR) = strInvoiceNo
                    lngInvIdxEUR = lngInvIdxEUR + 1
                Case "GBP"
                    ReDim Preserve m_strAryInvoiceGBP(lngInvIdxGBP)
                    m_strAryInvoiceGBP(lngInvIdxGBP) = strInvoiceNo
                    lngInvIdxGBP = lngInvIdxGBP + 1
                Case Else
                    ReDim Preserve m_strAryInvoiceCUR(lngInvIdxCUR)
                    m_strAryInvoiceCUR(lngInvIdxCUR) = strInvoiceNo
                    lngInvIdxCUR = lngInvIdxCUR + 1
                End Select
            End If
            adoRs.MoveNext
        Loop
    End If
    
    On Error GoTo 0

    If lngInvIdxCUR >= 1 Then
        ReDim Preserve m_strAryInvoiceCUR(lngInvIdxCUR)
        m_strAryInvoiceCUR(lngInvIdxCUR) = mc_strNewProgress
    End If
    If lngInvIdxJPY >= 1 Then
        ReDim Preserve m_strAryInvoiceJPY(lngInvIdxJPY)
        m_strAryInvoiceJPY(lngInvIdxJPY) = mc_strNewProgress
    End If
    If lngInvIdxUSD >= 1 Then
        ReDim Preserve m_strAryInvoiceUSD(lngInvIdxUSD)
        m_strAryInvoiceUSD(lngInvIdxUSD) = mc_strNewProgress
    End If
    If lngInvIdxEUR >= 1 Then
        ReDim Preserve m_strAryInvoiceEUR(lngInvIdxEUR)
        m_strAryInvoiceEUR(lngInvIdxEUR) = mc_strNewProgress
    End If
    If lngInvIdxGBP >= 1 Then
        ReDim Preserve m_strAryInvoiceGBP(lngInvIdxGBP)
        m_strAryInvoiceGBP(lngInvIdxGBP) = mc_strNewProgress
    End If

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub

LBL_ERR:
    sg_MsgBoxError "s_GetInvoiceHeaderInfo", strMSG
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetInvoiceHeaderInfo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Invoice|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6d2||289||743||fffd||fffd||fffd||fffd|W
'   (2)<Boolean |fffd|^> Invoice|fffd|Z|fffd||fffd||fffd|l|fffd||315||6ce||fffd||fffd|t|fffd||fffd||fffd|O
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Invoice|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
s_SetupInvoiceNoCells( _
    ByVal rngCurrency As Range, _
    Optional ByVal blnKeepValue As Boolean = False _
)

    Dim lngIx As Long
    Dim valInvoice As Variant
    Dim strArea As String
    Dim strAry() As String
    
    valInvoice = ""
    
    If rngCurrency.Value <> "" Then
    
        Select Case rngCurrency.Value
        Case "USD"
            strAry = m_strAryInvoiceUSD
        Case "JPY"
            strAry = m_strAryInvoiceJPY
        Case "EUR"
            strAry = m_strAryInvoiceEUR
        Case "GBP"
            strAry = m_strAryInvoiceGBP
        Case Else
            strAry = m_strAryInvoiceCUR
        End Select
        ''|fffd||289||fffd|Invoice|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|S14|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
        For lngIx = 0 To UBound(strAry)
            Cells(c_intBRInvDetailRowST + lngIx, 19).Value = strAry(lngIx)
            If Range("C4").Value = strAry(lngIx) Then
                valInvoice = Range("C4").Value
            End If
        Next
        strArea = "=$S$" & c_intBRInvDetailRowST & ":$S$" & c_intBRInvDetailRowST + lngIx - 1
        sg_SetupValidation Range("C4").Validation, c_strMSG_INVBR_INVOICE, _
                xlValidateList, xlValidAlertStop, xlBetween, strArea, Null
    Else
        sg_SetupValidation Range("C4").Validation, c_strMSG_INVBR_INVOICE, _
                xlValidateList, xlValidAlertStop, xlBetween, " ", Null
    End If
    Range("C4").NumberFormat = "@"
'    Range("C4").Validation.ShowError = False
        
    If blnKeepValue Then
        Range("C4").Value = valInvoice
    Else
        Range("C4").Value = ""
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Status|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Boolean |fffd|^> Invoice|fffd|Z|fffd||fffd||fffd|l|fffd||315||6ce||fffd||fffd|t|fffd||fffd||fffd|O
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||fffd|Status|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupStatusCells( _
    ByRef rngTarget As Range _
)
    Dim strDatas As String

    strDatas = mc_strStatPaid & "," & mc_strStatApproved & "," & mc_strStatInvoiced
    strDatas = strDatas & "," & mc_strStatEstimated_S & "," & mc_strStatEstimated_N
    
    sg_SetupValidation rngTarget.Validation, c_strMSG_SelectList, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/15 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    If fg_IsSetCommonInfo(GCMN_AS) = False Then ''Associate|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||fffd||752||fffd|
        Range("B" & c_intBRInvDetailRowST + 1, "N" & mc_lngMAX_ROWINDEX).Locked = True
    Else
        ''Associate|fffd|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        s_SetupAssociateCells Range("B" & c_intBRInvDetailRowST + 1, "B" & mc_lngMAX_ROWINDEX)
    End If
    
    ''|fffd||fffd||fffd|l|fffd||fffd||fffd||34b|K|fffd||fffd|
    sg_SetupValidation Range("E" & c_intBRInvDetailRowST, "G" & mc_lngMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=-999999999999999", Null
    sg_SetupValidation Range("I" & c_intBRInvDetailRowST, "M" & mc_lngMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=-999999999999999", Null
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("E" & c_intBRInvDetailRowST - 2, "N" & mc_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DEC_XX
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||250||752||fffd||3c2||742||303|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||342||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupAssociateCells( _
    ByRef rngTarget As Range _
)
    Dim lngIx As Long
    Dim strArea As String
           
    ''Associate|fffd||fffd||fffd|X|fffd|g|fffd||30c||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|V14|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    For lngIx = 0 To UBound(g_typAryAsoInfo)
        Cells(c_intBRInvDetailRowST + lngIx, 22).Value = g_typAryAsoInfo(lngIx).m_strName
    Next
    strArea = "=$V$" & c_intBRInvDetailRowST & ":$V$" & c_intBRInvDetailRowST + lngIx - 1
    sg_SetupValidation rngTarget.Validation, c_strMSG_ASSO_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, strArea, Null

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/15 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_ClearDetailCells()
    
    m_blnDirty = False                  ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A|fffd|w|fffd|b|fffd|_|fffd||fffd|
    Cells(5, 3).Value = "" ''Description
    Cells(7, 3).Value = "" ''Period(start)
    Cells(8, 3).Value = "" ''Period(end)
    Cells(7, 7).Value = "" ''Status
    Cells(8, 7).Value = "" ''LinkCode
    Cells(6, 10).Value = "" ''Issuing Date
    Cells(7, 10).Value = "" ''Approval Date
    Cells(8, 10).Value = "" ''Payment Date
    Cells(8, 16).Value = "" ''Hidden-LinkCode
    Cells(8, 17).Value = "" ''Hidden-HeaderDirty
    Cells(6, 14).Value = "" ''Revers:ClientPayment
    Cells(7, 14).Value = "" ''Revers:ClientPayment
    Cells(8, 14).Value = "" ''Revers:ClientPayment

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||5d5||fffd|
    Range("B" & c_intBRInvDetailRowST + 1, "D" & mc_lngMAX_ROWINDEX).ClearContents
    Range("E" & c_intBRInvDetailRowST, "G" & mc_lngMAX_ROWINDEX).ClearContents
    Range("I" & c_intBRInvDetailRowST, "M" & mc_lngMAX_ROWINDEX).ClearContents
    Range("P" & c_intBRInvDetailRowST, "R" & mc_lngMAX_ROWINDEX).ClearContents
    
    ''Lock|fffd||fffd||fffd||fffd|
    Range("C5", "D5").Locked = False
    Range("C7", "C8").Locked = False
    Range("J6", "J7").Locked = False
    Range("B" & c_intBRInvDetailRowST, "G" & mc_lngMAX_ROWINDEX).Locked = False
    Range("I" & c_intBRInvDetailRowST, "M" & mc_lngMAX_ROWINDEX).Locked = False

    sg_GetCurrentLinkCodeNo GLNK_IV   ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||64fe|
    sg_GetCurrentLinkCodeNo GLNK_AS
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||289||743|R|fffd|[|fffd|h
'   (2)<String |fffd|^> InvoiceNo.
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SQL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Function _
f_CreateSQLInvoice( _
    ByVal strCurrency As String, _
    ByVal strInvoice As String _
) As String

    Dim strSQL As String
    
    strSQL = "SELECT " & "hd.InvoiceNo, " & "hd.Currency, "
    strSQL = strSQL & "hd.Description, " & "hd.PeriodStart, "
    strSQL = strSQL & "hd.PeriodEnd, " & "hd.Status, "
    strSQL = strSQL & "hd.LedgerLinkCode, " & "hd.IssuingDate, "
    strSQL = strSQL & "hd.ApprovalDate, " & "hd.PaymentDate, "
    strSQL = strSQL & "hd.AdvanceData, " & "hd.PaymentAmount,"
    strSQL = strSQL & "dt.AsoLinkCode, " & "dt.AsoCode, "
    strSQL = strSQL & "dt.InvoiceAmount, " & "dt.Repayment, "
    strSQL = strSQL & "dt.Retention, " & "dt.Vat, "
    strSQL = strSQL & "dt.HoldingTax, " & "dt.ManageFee, "
    strSQL = strSQL & "dt.OtherTax, " & "dt.Others, " & "ap.PaidDate AS AsoPaidDate"
    '-----------------------------------------------------------
    strSQL = strSQL & " FROM (" & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " LEFT JOIN " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " ON " & "hd.LedgerLinkCode = " & "dt.LedgerLinkCode" & " AND "
    strSQL = strSQL & "hd.Currency = " & "dt.Currency" & ") LEFT JOIN "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap" & " ON "
    strSQL = strSQL & "dt.AsoLinkCode = " & "ap.LedgerLinkCode" & " WHERE "
    '-----------------------------------------------------------
    strSQL = strSQL & "hd.Currency = " & fg_AddSingleQuotation(strCurrency) & " And "
    strSQL = strSQL & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " And "
    strSQL = strSQL & "hd.InvoiceNo = " & fg_AddSingleQuotation(strInvoice)
    strSQL = strSQL & " ORDER BY " & "hd.InvoiceNo"

    f_CreateSQLInvoice = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|pSQL|fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|`|fffd|[|fffd|pSQL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> SQL|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Function _
f_CreateSQLInvoiceRevers() As String
   
    Dim strSQL As String
    
    strSQL = "SELECT " & "hd.InvoiceNo, " & "hd.Currency, "
    strSQL = strSQL & "hd.Description, " & "hd.PeriodStart, "
    strSQL = strSQL & "hd.PeriodEnd, " & "hd.status, "
    strSQL = strSQL & "hd.LedgerLinkCode, " & "hd.IssuingDate, "
    strSQL = strSQL & "hd.ApprovalDate, " & "hd.PaymentDate, "
    strSQL = strSQL & "hd.AdvanceData, " & "hd.PaymentAmount,"
    strSQL = strSQL & "hd.ReceivedAmount, " & "hd.CorrectionLinkCode, "
    strSQL = strSQL & "dt.AsoLinkCode, " & "dt.Classify, "
    strSQL = strSQL & "dt.AsoCode, " & "dt.InvoiceAmount, "
    strSQL = strSQL & "dt.Repayment, " & "dt.Retention, "
    strSQL = strSQL & "dt.Vat, " & "dt.HoldingTax, "
    strSQL = strSQL & "dt.ManageFee, " & "dt.OtherTax, "
    strSQL = strSQL & "dt.Others, "
    strSQL = strSQL & "ap.InvRefNo, " & "ap.Description AS AsoDescription, "
    strSQL = strSQL & "ap.ReceivedDate, " & "ap.PaidDate, "
    strSQL = strSQL & "ap.Status AS AsoStatus, " & "ap.PaymentAmount AS AsoPaymentAmount, "
    strSQL = strSQL & "ap.ActualPayment, " & "ap.PaymentBalance "
    '-----------------------------------------------------------
    strSQL = strSQL & " FROM (" & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " LEFT JOIN " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " ON " & "hd.LedgerLinkCode = " & "dt.LedgerLinkCode" & " AND "
    strSQL = strSQL & "hd.Currency = " & "dt.Currency" & ") LEFT JOIN "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap" & " ON "
    strSQL = strSQL & "dt.AsoLinkCode = " & "ap.LedgerLinkCode" & " WHERE "
    '-----------------------------------------------------------
    strSQL = strSQL & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(m_strReverseInvLinkCode) & " AND "
    strSQL = strSQL & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    f_CreateSQLInvoiceRevers = strSQL
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim lngRowCurIndex As Long
    Dim blnSetHeader As Boolean
    Dim strData As String
    Dim blnLock As Boolean
    
    blnLock = False
        
    s_ClearDetailCells    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    ''DB|fffd||fffd||fffd||fffd||fffd||38f||fffd|(Currency,Invoice)|fffd||fffd||fffd||fffd||202||302||14f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If Cells(3, 3).Value = "" Or Cells(4, 3).Value = "" Then
        Exit Sub
    End If

    strSQL = f_CreateSQLInvoice(CStr(Cells(3, 3).Value), CStr(Cells(4, 3).Value))

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
        
    blnSetHeader = False
    lngRowIndex = c_intBRInvDetailRowST + 1
    Do Until adoRs.EOF
        If blnSetHeader = False Then
            ''Header|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||752||fffd|
            If Not IsNull(adoRs.Fields("Description").Value) Then           ''Description
                Cells(5, 3).Value = adoRs.Fields("Description").Value
            End If
            If Not IsNull(adoRs.Fields("PeriodStart").Value) Then           ''PeriodStart
                Cells(7, 3).Value = adoRs.Fields("PeriodStart").Value
            End If
            If Not IsNull(adoRs.Fields("PeriodEnd").Value) Then             ''PeriodEnd
                Cells(8, 3).Value = adoRs.Fields("PeriodEnd").Value
            End If
            Cells(7, 7).Value = adoRs.Fields("Status").Value                ''status
            Cells(8, 7).Value = adoRs.Fields("LedgerLinkCode").Value        ''LedgerLinkCode
            Cells(8, 16).Value = adoRs.Fields("LedgerLinkCode").Value       ''Hidden-LinkCode
            If Not IsNull(adoRs.Fields("IssuingDate").Value) Then           ''IssuingDate
                Cells(6, 10).Value = adoRs.Fields("IssuingDate").Value
            End If
            If Not IsNull(adoRs.Fields("ApprovalDate").Value) Then          ''ApprovalDate
                Cells(7, 10).Value = adoRs.Fields("ApprovalDate").Value
            End If
            If Not IsNull(adoRs.Fields("PaymentDate").Value) Then           ''PaymentDate
                Cells(8, 10).Value = adoRs.Fields("PaymentDate").Value
            End If
            Cells(5, 16).Value = adoRs.Fields("PaymentAmount").Value        ''PaymentAmount
            If Not IsNull(adoRs.Fields("AdvanceData").Value) And _
                adoRs.Fields("AdvanceData").Value = "1" Then                ''Advance|fffd|t|fffd||fffd||fffd|O
                Cells(5, 17).Value = 1
            End If
            If Cells(8, 10).Value <> "" Then blnLock = True
            blnSetHeader = True
        End If
        
        If adoRs.Fields("AsoCode").Value = "NK" Then
            lngRowCurIndex = c_intBRInvDetailRowST
        Else
            lngRowCurIndex = lngRowIndex
            lngRowIndex = lngRowIndex + 1
            ''AssociateName
            strData = ""
            fg_GetAssociateCodeOrName adoRs.Fields("AsoCode").Value, strData
            Cells(lngRowCurIndex, 2).Value = strData
        End If
        If Not IsNull(adoRs.Fields("InvoiceAmount").Value) And _
                      adoRs.Fields("InvoiceAmount").Value <> 0 Then
            Cells(lngRowCurIndex, 5).Value = adoRs.Fields("InvoiceAmount").Value   ''InvoiceAmount
        End If
        If Not IsNull(adoRs.Fields("Repayment").Value) And _
                      adoRs.Fields("Repayment").Value <> 0 Then
            Cells(lngRowCurIndex, 6).Value = adoRs.Fields("Repayment").Value       ''Repayment
        End If
        If Not IsNull(adoRs.Fields("Retention").Value) And _
                      adoRs.Fields("Retention").Value <> 0 Then
            Cells(lngRowCurIndex, 7).Value = adoRs.Fields("Retention").Value       ''Retention
        End If
        If Not IsNull(adoRs.Fields("Vat").Value) And _
                      adoRs.Fields("Vat").Value <> 0 Then
            Cells(lngRowCurIndex, 9).Value = adoRs.Fields("Vat").Value             ''Vat
        End If
        If Not IsNull(adoRs.Fields("HoldingTax").Value) And _
                      adoRs.Fields("HoldingTax").Value <> 0 Then
            Cells(lngRowCurIndex, 10).Value = adoRs.Fields("HoldingTax").Value     ''HoldingTax
        End If
        If Not IsNull(adoRs.Fields("ManageFee").Value) And _
                      adoRs.Fields("ManageFee").Value <> 0 Then
            Cells(lngRowCurIndex, 11).Value = adoRs.Fields("ManageFee").Value      ''ManageFee
        End If
        If Not IsNull(adoRs.Fields("OtherTax").Value) And _
                      adoRs.Fields("OtherTax").Value <> 0 Then
            Cells(lngRowCurIndex, 12).Value = adoRs.Fields("OtherTax").Value       ''OtherTax
        End If
        If Not IsNull(adoRs.Fields("Others").Value) And _
                      adoRs.Fields("Others").Value <> 0 Then
            Cells(lngRowCurIndex, 13).Value = adoRs.Fields("Others").Value         ''Others
        End If
        Cells(lngRowCurIndex, 16).Value = adoRs.Fields("AsoLinkCode").Value    ''AsoLinkCode
        
        If Not IsNull(adoRs.Fields("AsoPaidDate").Value) Then                   ''PaidStatus|fffd||fffd|Aso|fffd||fffd||fffd|}|fffd|[|fffd|N
            Cells(lngRowCurIndex, 18).Value = 1
        End If
        adoRs.MoveNext
    Loop
   
    On Error GoTo 0
    
    ''Lock|fffd||fffd||fffd||fffd|
    Range("C5", "D5").Locked = blnLock
    Range("C7", "C8").Locked = blnLock
    Range("J6", "J7").Locked = blnLock
    Range("B" & c_intBRInvDetailRowST, "G" & mc_lngMAX_ROWINDEX).Locked = blnLock
    Range("I" & c_intBRInvDetailRowST, "M" & mc_lngMAX_ROWINDEX).Locked = blnLock

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub

LBL_ERR:
    sg_MsgBoxError "s_SetupDetailCells", strMSG
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED04]s_SetupDetailCells:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   NULL|fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|w|fffd||fffd|sNo
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|s|fffd||30a|e|fffd||fffd||fffd|NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_IsNullRow( _
    ByVal lngRowIndex As Long _
) As Boolean

    Dim intIxCol As Integer
    
    f_IsNullRow = False
    
    For intIxCol = 2 To 7
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    For intIxCol = 9 To 13
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    
    f_IsNullRow = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/15 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
    
    Dim lngRowIndex As Long
        
    f_CheckInputData = False
    
    ''Description
    If Cells(5, 3).Value = "" Then
        strMessage = c_strMSG_DESCRIPTION
        Cells(5, 3).Activate
        Exit Function
    End If
    
    ''PaymentMethod |fffd||242||fffd||fffd||38f||6ca||fffd||fffd||502||303|`|fffd|F|fffd|b|fffd|N
    ''Monthly:(PaymentMethod=0)|fffd||fffd|Advance|fffd||20a|O|fffd||341|A|fffd||fffd||fffd||515|K|fffd|{
    If g_typAryPJTInfo(0).m_intPaymentMethod = 0 Then
        If Cells(5, 17).Value <> 1 Then ''Advance|fffd||20a|O
            ''MonthlyPayment|fffd||fffd||fffd||341|APeriod|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
            If Cells(7, 3).Value = "" Then
                strMessage = c_strMSG_DATE_FORMAT
                Cells(7, 3).Activate
                Exit Function
            End If
            If Cells(8, 3).Value = "" Then
                strMessage = c_strMSG_DATE_FORMAT
                Cells(8, 3).Activate
                Exit Function
            End If
        End If
        ''|fffd||fffd||fffd||510||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        If Cells(7, 3).Value <> "" And Cells(8, 3).Value <> "" Then
            If Cells(7, 3).Value >= Cells(8, 3).Value Then
                strMessage = c_strMSG_BETWEENPERIOD
                Cells(7, 3).Activate
                Exit Function
            End If
        End If
    End If
    
    ''Issuing Date|fffd|AApproval Date |fffd|`|fffd|F|fffd|b|fffd|N
    ''Status |fffd||fffd| Invoiced |fffd||30f||a347||fffd|A IssuingDate |fffd||355|K|fffd|{
    If Cells(7, 7).Value = mc_strStatInvoiced And Cells(6, 10).Value = "" Then
        strMessage = c_strMSG_DATE_FORMAT
        Cells(6, 10).Activate
        Exit Function
    End If
    ''Status |fffd||fffd| Approved |fffd||30f||a347||fffd|A ApprovalDate |fffd||355|K|fffd|{
    If Cells(7, 7).Value = mc_strStatApproved And Cells(7, 10).Value = "" Then
        strMessage = c_strMSG_DATE_FORMAT
        Cells(7, 10).Activate
        Exit Function
    End If
    
    
    ''NK|fffd|s Invoice Amount|fffd||315|K|fffd|{|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(c_intBRInvDetailRowST, 5).Value = "" Then
        strMessage = c_strMSG_INVBR_NKDATA
        Cells(c_intBRInvDetailRowST, 5).Activate
        Exit Function
    End If
    
    
    ''Detail |fffd|s|fffd||303|`|fffd|F|fffd|b|fffd|N
    For lngRowIndex = c_intBRInvDetailRowST To mc_lngMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 17).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|

            ''Name of Companies
            If Cells(lngRowIndex, 2).Value = "" Then
                strMessage = c_strMSG_ASSO_NAME
                Cells(lngRowIndex, 2).Activate
                Exit Function
            End If
            ''|fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
            If fg_IsSameRowData(Cells(lngRowIndex, 2), Range("B" & c_intBRInvDetailRowST, "D" & mc_lngMAX_ROWINDEX)) <> False Then
                strMessage = c_strMSG_INVBR_SAMENAME_AS
                Cells(lngRowIndex, 2).Activate
                Exit Function
            End If
            
            ''Invoice Amount
            If Cells(lngRowIndex, 5).Value = "" Then
                strMessage = c_strMSG_DECEIMAL_NUM
                Cells(lngRowIndex, 5).Activate
                Exit Function
            End If
           
            ''Manage Fee
            If Cells(lngRowIndex, 11).Value <> "" And Cells(c_intBRInvDetailRowST - 1, 11).Value <> 0 Then
                strMessage = c_strMSG_INVBR_MANAGEFEE_ERROR
                Cells(lngRowIndex, 11).Activate
                Exit Function
            End If
        End If
    Next

    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   InvoiceNo|fffd||fffd||fffd||34f||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)InvoiceNo|fffd||fffd||fffd||fffd|InputBox|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd|A|fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/01 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_InputInvoiceNo() As String

    Dim strInvoiceNo As String
    Dim lngIdx As Long
    Dim blnError As Boolean
    Dim strAry() As String
    
    strInvoiceNo = ""
    Do
RETRY:
        strInvoiceNo = InputBox(c_strMSG_INVBR_INVOICE & "(string).", c_strNAME_SYSTEM, strInvoiceNo)
        strInvoiceNo = Trim$(strInvoiceNo)
        If strInvoiceNo = "" Then
            f_InputInvoiceNo = ""
            Exit Function
        End If
        
        If Right$(strInvoiceNo, 4) = c_strKwdModifyBR Then
            MsgBox c_strMSG_INVBR_INVOICE & vbCr & "Keyword Error!:" & c_strKwdModifyBR, _
                   vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            GoTo RETRY
        Else
            If Right$(strInvoiceNo, 4) <> c_strKwdModifyNK Then
                strInvoiceNo = strInvoiceNo & c_strKwdModifyNK
            End If
        End If
        
        blnError = False
        
        Select Case Cells(3, 3).Value
        Case "USD"
            strAry = m_strAryInvoiceUSD
        Case "JPY"
            strAry = m_strAryInvoiceJPY
        Case "EUR"
            strAry = m_strAryInvoiceEUR
        Case "GBP"
            strAry = m_strAryInvoiceGBP
        Case Else
            strAry = m_strAryInvoiceCUR
        End Select
            
        For lngIdx = 0 To UBound(strAry)
            If strInvoiceNo = strAry(lngIdx) Then
                ''Error
                blnError = True
                Exit For
            End If
        Next
        If (fg_InputCheck(strInvoiceNo, "Invoice No.", 3, 30) = False) Then
            If blnError = False Then
                f_InputInvoiceNo = strInvoiceNo
                Exit Function
            Else
                MsgBox c_strMSG_INVBR_INVOICE & vbCr & c_strMSG_INVBR_INVOICEDUP, _
                       vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            End If
        End If
    Loop
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|`|fffd|[|fffd||c42c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_ReverseRecord()
    
    ReDim Preserve m_strAryRevIVLinkCode(2)
    ReDim Preserve m_strAryRevInvoiceNo(2)
    m_strAryRevIVLinkCode(0) = m_strReverseInvLinkCode    ''|fffd|C|fffd||fffd||fffd||fffd||fffd|[LinkCode
    s_GetInvoiceHeaderInfo                   ''Invoice|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||110||752||fffd|
    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                                ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True         ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    
    s_ClearDetailCells    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    
    m_strAryRevIVLinkCode(1) = fg_CreateLinkCode(GLNK_IV) ''|fffd|t|fffd|`|fffd|[LinkCode
    m_strAryRevIVLinkCode(2) = fg_CreateLinkCode(GLNK_IV) ''|fffd|C|fffd||fffd||fffd|`|fffd|[LinkCode
    
    Cells(3, 3).Value = m_strReverseCurrency
    s_SetupInvoiceNoCells Range("C3"), True  ''InvoiceNoCell|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
    s_GetReverseRecordInfo                   ''|fffd|C|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|
    
    m_blnSetupCellsInProgress = False        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True          ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    sg_SetScreenUpdate True
   
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|InvoiceNo|fffd|T|fffd|t|fffd|B|fffd|b|fffd|N|fffd|X|fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> InvoiceNo(|fffd|C|fffd||fffd||fffd||fffd||fffd|j
'   (2)<String |fffd|^> |fffd||fffd||fffd||fffd|Invoice|fffd|z|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|InvoiceNo|fffd||303|T|fffd|t|fffd|B|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> Tab|fffd||fffd||602||fffd||303|T|fffd|t|fffd|B|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   -A|fffd|`-Z|fffd||fffd||fffd||156||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_CreateReverseInvoiceNoSfx( _
    ByVal strInvoice As String, _
    ByRef straryPram() As String _
) As String

    Dim lngAryIx As Long
    Dim lngFindIx As Long
    Dim lngCodeIx As Long
    Dim strInv As String

    lngFindIx = 0
    For lngAryIx = 0 To UBound(straryPram)
        If InStr(straryPram(lngAryIx), strInvoice) = 1 Then
            For lngCodeIx = 26 To 1 Step -1
                If StrComp(straryPram(lngAryIx), strInvoice & "-" & Chr$(64 + lngCodeIx), vbTextCompare) = 0 Then
                    If lngFindIx < lngCodeIx Then
                        lngFindIx = lngCodeIx
                        Exit For
                    End If
                End If
            Next
        End If
    Next

    If lngFindIx + 1 > 25 Then ''|fffd||c2ac2||202||fffd|
        f_CreateReverseInvoiceNoSfx = ""
    Else
        f_CreateReverseInvoiceNoSfx = "-" & Chr$(64 + lngFindIx + 1) & vbTab & "-" & Chr$(64 + lngFindIx + 2)
    End If

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|InvoiceNo|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> InvoiceNo(|fffd|C|fffd||fffd||fffd||fffd||fffd|j
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|InvoiceNo|fffd|i-A,-B...|fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||c42c||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   -Z|fffd||702||14e|g|fffd|p|fffd||3c2||742||30f||a347||fffd||341|A-A|fffd||fffd|V|fffd||fffd||fffd||255|t|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_CreateReverseInvoiceNo( _
    ByVal strInvoice As String _
)
    Dim strInv As String
    Dim strSfx As String
    Dim strAryInvoice() As String
    Dim strArySfx() As String
    
    Select Case m_strReverseCurrency
    Case "USD"
        strAryInvoice = m_strAryInvoiceUSD
    Case "JPY"
        strAryInvoice = m_strAryInvoiceJPY
    Case "EUR"
        strAryInvoice = m_strAryInvoiceEUR
    Case "GBP"
        strAryInvoice = m_strAryInvoiceGBP
    Case Else
        strAryInvoice = m_strAryInvoiceCUR
    End Select
    
    strInv = Right$(Trim$(strInvoice), 2)
    If InStr(strInv, "-") <> 1 Then ''Invoice|fffd||fffd|"-?"|fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd|
        strInv = Trim$(strInvoice)
    Else ''-?|fffd||303|P|fffd|C|fffd|X
        strInv = Left$(Trim$(strInvoice), Len(Trim$(strInvoice)) - 2)
    End If
    
    m_strAryRevInvoiceNo(0) = Trim$(strInvoice)
    strSfx = f_CreateReverseInvoiceNoSfx(strInv, strAryInvoice)
    If strSfx <> "" Then
        strArySfx = Split(strSfx, vbTab, -1, vbTextCompare) 'Tab|fffd||fffd||602||fffd|T|fffd|t|fffd|B|fffd|b|fffd|N|fffd|X|fffd||315||fffd||fffd||fffd|
        m_strAryRevInvoiceNo(1) = Trim$(strInv) & strArySfx(0)
        m_strAryRevInvoiceNo(2) = Trim$(strInv) & strArySfx(1)
    Else
        m_strAryRevInvoiceNo(1) = Trim$(strInvoice) & "-A"
        m_strAryRevInvoiceNo(2) = Trim$(strInvoice) & "-B"
    End If
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|Invoice|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|Invoice|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Q|fffd||182||fffd||fffd|A|fffd||fffd||fffd||343|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
'-----------------------------------------------------------------
Private Sub _
s_GetReverseRecordInfo()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim lngRowCurIndex As Long
    Dim lngRet As Long
    Dim blnSetHeader As Boolean
    Dim strData As String
    Dim strMSG As String
    
    strSQL = f_CreateSQLInvoiceRevers
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR

    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
        
    ''|fffd|C|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||310||752||fffd|
    blnSetHeader = False
    lngIndex = 0
    lngRowIndex = c_intBRInvDetailRowST + 1
    Do Until adoRs.EOF
        If blnSetHeader = False Then
            s_CreateReverseInvoiceNo (adoRs.Fields("InvoiceNo").Value)    ''InvoiceNo|fffd||fffd||fffd||fffd|
            
            ''Header|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||752||fffd|
            Cells(4, 3).Value = m_strAryRevInvoiceNo(2)                     ''InvoiceNo
            
            If Not IsNull(adoRs.Fields("Description").Value) Then           ''Description
                Cells(5, 3).Value = adoRs.Fields("Description").Value
            End If
            If Not IsNull(adoRs.Fields("PeriodStart").Value) Then           ''PeriodStart
                Cells(7, 3).Value = adoRs.Fields("PeriodStart").Value
            End If
            If Not IsNull(adoRs.Fields("PeriodEnd").Value) Then             ''PeriodEnd
                Cells(8, 3).Value = adoRs.Fields("PeriodEnd").Value
            End If
            Cells(7, 7).Value = adoRs.Fields("Status").Value                ''status
            
            Cells(8, 7).Value = m_strAryRevIVLinkCode(2)                    ''LedgerLinkCode
            m_strCreateLinkCode = m_strAryRevIVLinkCode(2)
            
            If Not IsNull(adoRs.Fields("IssuingDate").Value) Then           ''IssuingDate
                Cells(6, 10).Value = adoRs.Fields("IssuingDate").Value
            End If
            If Not IsNull(adoRs.Fields("ApprovalDate").Value) Then          ''ApprovalDate
                Cells(7, 10).Value = adoRs.Fields("ApprovalDate").Value         ''ApprovalDate
            End If
            If Not IsNull(adoRs.Fields("PaymentDate").Value) Then           ''PaymentDate
                Cells(8, 10).Value = adoRs.Fields("PaymentDate").Value
            End If
            Cells(5, 16).Value = adoRs.Fields("PaymentAmount").Value        ''PaymentAmount
            If Not IsNull(adoRs.Fields("AdvanceData").Value) And _
                adoRs.Fields("AdvanceData").Value = "1" Then                ''Advance|fffd|t|fffd||fffd||fffd|O
                Cells(5, 17).Value = 1
            End If
            Cells(6, 14).Value = "Client Payment"                            ''|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z
            Cells(7, 14).Value = "Amount Total"
            Cells(8, 14).Value = adoRs.Fields("PaymentAmount").Value
            
            blnSetHeader = True
        End If
        
        If adoRs.Fields("AsoCode").Value = "NK" Then
            lngRowCurIndex = c_intBRInvDetailRowST
        Else
            lngRowCurIndex = lngRowIndex
            lngRowIndex = lngRowIndex + 1
            ''AssociateName
            strData = ""
            fg_GetAssociateCodeOrName adoRs.Fields("AsoCode").Value, strData
            Cells(lngRowCurIndex, 2).Value = strData
        End If
        If Not IsNull(adoRs.Fields("InvoiceAmount").Value) And _
                      adoRs.Fields("InvoiceAmount").Value <> 0 Then
            Cells(lngRowCurIndex, 5).Value = adoRs.Fields("InvoiceAmount").Value   ''InvoiceAmount
        End If
        If Not IsNull(adoRs.Fields("Repayment").Value) And _
                      adoRs.Fields("Repayment").Value <> 0 Then
            Cells(lngRowCurIndex, 6).Value = adoRs.Fields("Repayment").Value       ''Repayment
        End If
        If Not IsNull(adoRs.Fields("Retention").Value) And _
                      adoRs.Fields("Retention").Value <> 0 Then
            Cells(lngRowCurIndex, 7).Value = adoRs.Fields("Retention").Value       ''Retention
        End If
        If Not IsNull(adoRs.Fields("Vat").Value) And _
                      adoRs.Fields("Vat").Value <> 0 Then
            Cells(lngRowCurIndex, 9).Value = adoRs.Fields("Vat").Value             ''Vat
        End If
        If Not IsNull(adoRs.Fields("HoldingTax").Value) And _
                      adoRs.Fields("HoldingTax").Value <> 0 Then
            Cells(lngRowCurIndex, 10).Value = adoRs.Fields("HoldingTax").Value     ''HoldingTax
        End If
        If Not IsNull(adoRs.Fields("ManageFee").Value) And _
                      adoRs.Fields("ManageFee").Value <> 0 Then
            Cells(lngRowCurIndex, 11).Value = adoRs.Fields("ManageFee").Value      ''ManageFee
        End If
        If Not IsNull(adoRs.Fields("OtherTax").Value) And _
                      adoRs.Fields("OtherTax").Value <> 0 Then
            Cells(lngRowCurIndex, 12).Value = adoRs.Fields("OtherTax").Value     ''OtherTax
        End If
        If Not IsNull(adoRs.Fields("Others").Value) And _
                      adoRs.Fields("Others").Value <> 0 Then
            Cells(lngRowCurIndex, 13).Value = adoRs.Fields("Others").Value         ''Others
        End If
        Cells(lngRowCurIndex, 17).Value = 1                                        ''Dirty
        If Not IsNull(adoRs.Fields("PaidDate").Value) Then                         ''PaidStatus|fffd||fffd|Aso|fffd||fffd||fffd|}|fffd|[|fffd|N
            Cells(lngRowCurIndex, 18).Value = 1
        End If
        adoRs.MoveNext
    Loop
    
    On Error GoTo 0
    Cells(8, 17) = 1                    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|i|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|j
    m_blnDirty = True                   ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    sg_MsgBoxError "s_GetReverseRecordInfo", strMSG
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetReverseRecordInfo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|pInvoice|fffd|f|fffd|[|fffd|^|fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|t|fffd|`|fffd|[|fffd|p|fffd||fffd|Invoice|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Q|fffd||182||fffd||fffd|A|fffd||fffd||fffd||343|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Currency |fffd|^>  |fffd||fffd||fffd|z
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_ReverseValue( _
    ByVal curParam As Currency _
) As Currency

    If curParam <> 0 Then
        f_ReverseValue = curParam * -1
    Else
        f_ReverseValue = 0
    End If
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/01 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    Dim lngIndex As Long
    Dim blnSetCurrency As Boolean
    Dim blnSetInvoice As Boolean
    Dim blnSetData As Boolean
    Dim blnSetLinkCode As Boolean
    Dim blnDirtyHead As Boolean
    Dim blnNewInvoice As Boolean
    Dim strDescription As String
    Dim strInvoiceNo As String
        
    blnSetData = False
    blnSetCurrency = False
    blnSetInvoice = False
    blnSetLinkCode = False
    blnDirtyHead = False
    blnNewInvoice = False
    strDescription = ""
    
    ''Currecy
    If rngTarget.Row = 3 And rngTarget.Column = 3 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetCurrency = True
        blnSetData = True
    
        ''|fffd||289||755||3cd|X|fffd|FInvoice|fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||3cd|X|fffd|i|fffd|z|fffd||42a42||fffd|D200|fffd||3cd|X|fffd|AValidation)
        ''|fffd||fffd|Invoice|fffd||182||fffd||fffd||202||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|L|fffd||fffd||fffd||202||fffd|Invoice|fffd||6ce||fffd|
        ''Header|fffd||1c2||74d||fffd||fffd||741|ADetail|fffd||1c2||74d||fffd||fffd||fffd|
    ''Invoice
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 3 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
    
'        blnDirtyHead = True
        blnSetInvoice = True
        blnSetData = True
    ElseIf rngTarget.Row = 5 And rngTarget.Column = 3 Then    ''Description
        blnDirtyHead = True
    ElseIf rngTarget.Row = 7 And rngTarget.Column = 3 Then    ''Period(start)
        blnDirtyHead = True
    ElseIf rngTarget.Row = 8 And rngTarget.Column = 3 Then    ''Period(end)
        blnDirtyHead = True
    ElseIf rngTarget.Row = 7 And rngTarget.Column = 7 Then    ''Status
        If rngTarget.Value = "" Then
            f_onChangeCell = False
            Exit Function
        End If
        blnDirtyHead = True
    ElseIf rngTarget.Row = 6 And rngTarget.Column = 10 Then    ''Issuing Date
        blnDirtyHead = True
    ElseIf rngTarget.Row = 7 And rngTarget.Column = 10 Then    ''Approval Date
        blnDirtyHead = True
    ElseIf rngTarget.Row = 8 And rngTarget.Column = 10 Then    ''Payment Date
        blnDirtyHead = True
    ElseIf rngTarget.Row >= c_intBRInvDetailRowST Then         ''Detail
    

        ''InvoiceNo|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(4, 3).Value = "" Then
            MsgBox c_strMSG_INVBR_INVOICE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(4, 3).Activate
            Exit Function
        End If

        ''|fffd|x|fffd||fffd||fffd||fffd||fffd||3c2||743|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||3cd|X|fffd||242||350||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd|
        If rngTarget.Column = 2 Then
            If Cells(rngTarget.Row, 18).Value <> "" Then
                MsgBox c_strMSG_INVBR_EDITLOCK_AS, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                f_onChangeCell = False
                Cells(rngTarget.Row, 2).Activate
                Exit Function
            End If
        End If
     End If
 
    If blnSetCurrency Then
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        ''Invoice|fffd|R|fffd||fffd||fffd|{|fffd||110||752||fffd|
        s_SetupInvoiceNoCells rngTarget, True
        m_blnSetupCellsInProgress = False
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    End If

    If blnSetInvoice Then
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True

        ''|fffd|R|fffd||fffd||fffd|{|fffd|I|fffd||fffd|Item|fffd||fffd|"New"
        If rngTarget.Value <> "" Then
            If UCase(rngTarget.Value) = UCase(mc_strNewAdvance) Or _
               UCase(rngTarget.Value) = UCase(mc_strNewProgress) Then
                strInvoiceNo = f_InputInvoiceNo()
                If strInvoiceNo = "" Then
                    f_onChangeCell = False
                    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                    m_blnSetupCellsInProgress = False
                    Exit Function
                End If
                If UCase(rngTarget.Value) = UCase(mc_strNewAdvance) Then
                    strDescription = "Advance "
                Else
                    strDescription = "Progress "
                End If
                rngTarget.Value = strInvoiceNo

                ''Project|fffd||289||748||20a|O|fffd|i|fffd|~|fffd||741|j|fffd||142||fffd|LinkCode|fffd||354||fffd||fffd|s|fffd||fffd||fffd||fffd|
                blnSetLinkCode = True
                blnNewInvoice = True
            End If
        End If
        m_blnSetupCellsInProgress = False
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        
    End If

    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD

        If blnNewInvoice Then
            ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|N|fffd||fffd||fffd|A
            s_ClearDetailCells
            
            ''Advance|fffd|t|fffd||fffd||fffd|O
            If InStr(strDescription, "Advance") <> 0 Then
                Cells(5, 17).Value = 1
            Else
                Cells(5, 17).Value = ""
            End If
        Else
            ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            s_SetupDetailCells
        End If

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''Invoice LedgerLinkCode|fffd||fffd||fffd||fffd|
    If blnSetLinkCode Then
        m_strCreateLinkCode = fg_CreateLinkCode(GLNK_IV)

        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        
        ''Project|fffd||289||748||20a|O|fffd|i|fffd|~|fffd||741|j|fffd||142||fffd|LinkCode|fffd||fffd||fffd|s|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Cells(8, 7).Value = m_strCreateLinkCode
        
        ''Status |fffd||fffd||fffd||fffd||fffd|l|fffd||752||fffd|(LinkCode|fffd||fffd||fffd||502||202||302||150|V|fffd|K|fffd||182||742||202||fffd||fffd|AInvoiced|fffd||fffd||752||fffd|)
        Cells(7, 7).Value = mc_strStatInvoiced

        ''IssuingDate|fffd||34c||fffd||fffd||753||fffd||fffd|t
        Cells(6, 10).Value = DateValue(Now())

        ''Description |fffd||fffd||fffd||fffd||fffd||752||fffd|(Description |fffd||fffd||fffd||fffd||141|AInvoice|fffd||fffd|0 Advance)
        If Cells(5, 3).Value = "" And strDescription <> "" Then
            Cells(5, 3).Value = strDescription
        End If
        
        blnDirtyHead = True
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False

    End If
    
    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|i|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|j
    If blnDirtyHead Then
        m_blnSetupCellsInProgress = True
        Cells(8, 17) = 1
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If
    
    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|i|fffd||fffd||fffd||5d5||fffd||fffd|j
    If rngTarget.Row >= c_intBRInvDetailRowST And rngTarget.Row <= mc_lngMAX_ROWINDEX Then
        m_blnSetupCellsInProgress = True
        If rngTarget.Value = "" And f_IsNullRow(rngTarget.Row) Then
            Cells(rngTarget.Row, 17) = ""
        Else
            Cells(rngTarget.Row, 17) = 1
        End If
        
        If Cells(5, 16).Value <> Cells(15, 14).Value Then
            Cells(8, 17) = 1 ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|i|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|j
        End If
        
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If
    
    f_onChangeCell = True

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|t|fffd|`|fffd|[|fffd|pInvoice|fffd|f|fffd|[|fffd|^|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|C|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|STATUS|fffd||fffd||3cd|X|fffd||fffd||fffd|A|fffd|t|fffd|`|fffd|[Invoice|fffd|f|fffd|[|fffd|^|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/16 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_UpdateReverseRecord( _
    ByRef adoCn As ADODB.Connection, _
    ByRef objdba As clsDBAccess _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim strLinkCode As String
    Dim strStatus As String
    Dim strAsoLinkCodeOrg() As String
    Dim strAsoLinkCodeNew() As String
    Dim lngAddRowASO As Long
    Dim lngIx As Long
    Dim datPrNow As Date

    datPrNow = Now()
    f_UpdateReverseRecord = False

    m_lngRevAsoCount = 0
    lngAddRowASO = 0
    Erase m_typAryRevAsoData

    Set adoRs = New ADODB.Recordset
    objdba.CallPlace = ID_NKFAS_SS
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword
    strMSG = "DataBase Error"

On Error GoTo LBL_ERR

    ''Header|fffd|X|fffd|V/|fffd||1c9||fffd| ================================================================
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(m_strReverseInvLinkCode)
    strSQL = strSQL & " AND " & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If

    If Not adoRs.EOF Then
        ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setInvoiceHeaderHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceHeader
            GoTo LBL_ERR
        End If

        ''|fffd|t|fffd|`|fffd|[|fffd|f|fffd|[|fffd|^|fffd||1c9||fffd| ------------------------------------------------------------
        strSQL = fg_setInvoiceHeaderFieldsSQLString(c_strTBL_InvoiceHeader)
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", " ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(m_strAryRevIVLinkCode(1)) & ", "        ''LedgerLinkCode
        strSQL = strSQL & fg_AddSingleQuotation(m_strAryRevInvoiceNo(1)) & ", "         ''InvoiceNo
        strSQL = strSQL & fg_AddSingleQuotation(m_strReverseCurrency) & ", "  ''Currency
        If Not IsNull(adoRs.Fields("Description").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("PeriodStart").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PeriodStart").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("PeriodEnd").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PeriodEnd").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Status").Value & "Reverse") & ", "
        If Not IsNull(adoRs.Fields("IssuingDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("IssuingDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If

        If Not IsNull(adoRs.Fields("ApprovalDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ApprovalDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("PaymentDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaymentDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("PaymentAmount").Value) And _
                      adoRs.Fields("PaymentAmount").Value <> 0 Then
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("PaymentAmount").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("ReceivedAmount").Value) And _
                      adoRs.Fields("ReceivedAmount").Value <> 0 Then
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("ReceivedAmount").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("AdvanceData").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AdvanceData").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation("2") & ", "     'ReverseStatus
        strSQL = strSQL & fg_AddSingleQuotation(m_strAryRevIVLinkCode(0)) & ", " ''CorrectionLinkCode
        
        strSQL = strSQL & fg_AddSingleQuotation("1") & ", "                     ''ModifyPlace
        If Not IsNull(adoRs.Fields("ProofDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(datPrNow) & ", "            ''InsertDate
        strSQL = strSQL & "Null, "
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "
        strSQL = strSQL & " Null) "
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & c_strTBL_InvoiceHeader
            GoTo LBL_ERR
        End If

        ''|fffd|C|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|X|fffd|V ------------------------------------------------------------
        adoRs.Fields("Status").Value = "void"                                       ''Status
        adoRs.Fields("ReverseStatus").Value = "1"                                   ''ReverseStatus
        adoRs.Fields("CorrectionLinkCode").Value = m_strAryRevIVLinkCode(0)         ''CorrectionLinkCode
        adoRs.Fields("ModifyPlace").Value = "1"                                     ''ModifyPlace
        ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
    End If

    Call objdba.closeRecordset(adoRs)


    ''Detail|fffd|X|fffd|V/|fffd||1c9||fffd| ================================================================
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "dt.LedgerLinkCode = " & fg_AddSingleQuotation(m_strReverseInvLinkCode)
    strSQL = strSQL & " AND " & "dt.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceDetail
        GoTo LBL_ERR
    End If

    Do Until adoRs.EOF
        ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setInvoiceDetailHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceDetail
            GoTo LBL_ERR
        End If
        
        ''|fffd|t|fffd|`|fffd|[|fffd|f|fffd|[|fffd|^|fffd||1c9||fffd| ------------------------------------------------------------
        strSQL = fg_setInvoiceDetailFieldsSQLString(c_strTBL_InvoiceDetail)
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", " ''OfficeCode
        strSQL = strSQL & fg_AddSingleQuotation(m_strAryRevIVLinkCode(1)) & ", "        ''LedgerLinkCode
        strSQL = strSQL & fg_AddSingleQuotation(m_strAryRevInvoiceNo(1)) & ", "         ''InvoiceNo
        strSQL = strSQL & fg_AddSingleQuotation(m_strReverseCurrency) & ", "  ''Currency
        strLinkCode = fg_CreateLinkCode(GLNK_AS)        ''LinkCode|fffd||c42c|
        strSQL = strSQL & fg_AddSingleQuotation(strLinkCode) & ", "  ''AsoLinkCode
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Classify").Value) & ", "  ''Classify
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AsoCode").Value) & ", "  ''AsoCode

        If Not IsNull(adoRs.Fields("InvoiceAmount").Value) Then            ''InvoiceAmount
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("InvoiceAmount").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("Repayment").Value) Then            ''Repayment
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("Repayment").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("Retention").Value) Then            ''Retention
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("Retention").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If

        If Not IsNull(adoRs.Fields("Vat").Value) Then            ''Vat
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("Vat").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("HoldingTax").Value) Then            ''HoldingTax
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("HoldingTax").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("ManageFee").Value) Then            ''ManageFee
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("ManageFee").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("OtherTax").Value) Then            ''OtherTax
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("OtherTax").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("Others").Value) Then            ''Others
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("Others").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("PaymentAmount").Value) And _
                      adoRs.Fields("PaymentAmount").Value <> 0 Then
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("PaymentAmount").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation("2") & ", "     'ReverseStatus
        
        strSQL = strSQL & fg_AddSingleQuotation("1") & ", "                     ''ModifyPlace
        If Not IsNull(adoRs.Fields("ProofDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(datPrNow) & ", "       ''InsertDate
        strSQL = strSQL & "Null, "
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "
        strSQL = strSQL & " Null) "
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & c_strTBL_InvoiceDetail
            GoTo LBL_ERR
        End If
        ''|fffd|C|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|X|fffd|V ------------------------------------------------------------
        If adoRs.Fields("AsoCode").Value <> "NK" Then
            ReDim Preserve strAsoLinkCodeOrg(lngAddRowASO)
            ReDim Preserve strAsoLinkCodeNew(lngAddRowASO)
            strAsoLinkCodeOrg(lngAddRowASO) = adoRs.Fields("AsoLinkCode").Value
            strAsoLinkCodeNew(lngAddRowASO) = strLinkCode
            lngAddRowASO = lngAddRowASO + 1
        End If
        adoRs.Fields("ReverseStatus").Value = "1"                         ''ReverseStatus
        adoRs.Fields("ModifyPlace").Value = "1"                           ''ModifyPlace
        ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveNext
    Loop
    Call objdba.closeRecordset(adoRs)

    ''Associate|fffd|X|fffd|V/|fffd||1c9||fffd| ================================================================
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " WHERE " & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "ap.LedgerLinkCode IN ("
    strSQL = strSQL & "SELECT dt.AsoLinkCode FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " WHERE " & "dt.LedgerLinkCode = " & fg_AddSingleQuotation(m_strReverseInvLinkCode)
    strSQL = strSQL & " AND " & "dt.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & ")"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If

    Do Until adoRs.EOF
        ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
            GoTo LBL_ERR
        End If
        ReDim Preserve m_typAryRevAsoData(m_lngRevAsoCount)
        ''Associate|fffd||fffd||fffd||fffd||6d1||fffd||fffd|i|fffd|C|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|o|fffd|^|fffd||157||fffd||fffd|p|fffd||fffd||fffd||fffd|j
        m_typAryRevAsoData(m_lngRevAsoCount).m_strAsoCode = CStr(adoRs.Fields("AssociateCode").Value)
        If Not IsNull(adoRs.Fields("InvRefNo").Value) Then                     ''InvRefNo
            m_typAryRevAsoData(m_lngRevAsoCount).m_strInvRefNo = CStr(adoRs.Fields("InvRefNo").Value)
        End If
        If Not IsNull(adoRs.Fields("Description").Value) Then               ''Description
            m_typAryRevAsoData(m_lngRevAsoCount).m_strDescription = CStr(adoRs.Fields("Description").Value)
        End If
        If Not IsNull(adoRs.Fields("ReceivedDate").Value) Then                 ''ReceivedDate
            m_typAryRevAsoData(m_lngRevAsoCount).m_datReceivedDate = adoRs.Fields("ReceivedDate").Value
        End If
        If Not IsNull(adoRs.Fields("PaidDate").Value) Then                     ''PaidDate
            m_typAryRevAsoData(m_lngRevAsoCount).m_datPaidDate = adoRs.Fields("PaidDate").Value
        End If
        m_typAryRevAsoData(m_lngRevAsoCount).m_strStatus = adoRs.Fields("Status").Value ''Status
        If Not IsNull(adoRs.Fields("ActualPayment").Value) Then            ''ActualPayment
            m_typAryRevAsoData(m_lngRevAsoCount).m_curActualPayment = CCur(adoRs.Fields("ActualPayment").Value)
        Else
            m_typAryRevAsoData(m_lngRevAsoCount).m_curActualPayment = 0
        End If
        m_lngRevAsoCount = m_lngRevAsoCount + 1
        
        ''|fffd|t|fffd|`|fffd|[|fffd|f|fffd|[|fffd|^|fffd||1c9||fffd| ------------------------------------------------------------
        For lngIx = 0 To lngAddRowASO - 1 ''Detail|fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||fffd||fffd||fffd||fffd|
            If strAsoLinkCodeOrg(lngIx) = adoRs.Fields("LedgerLinkCode").Value Then
                strLinkCode = strAsoLinkCodeNew(lngIx)
            End If
        Next
        strSQL = fg_setAssociatePaymentFieldsSQLString(c_strTBL_AssociatePayment)
            
        strSQL = strSQL & "( "
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("OfficeCode").Value) & ", "
        strSQL = strSQL & fg_AddSingleQuotation(strLinkCode) & ", "        ''LedgerLinkCode
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("AssociateCode").Value) & ", "
        strSQL = strSQL & fg_AddSingleQuotation(m_strReverseCurrency) & ", "  ''Currency
        strSQL = strSQL & fg_AddSingleQuotation(m_strAryRevInvoiceNo(1)) & ", " ''ClientInvoice
            
        If Not IsNull(adoRs.Fields("InvRefNo").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("InvRefNo").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("Description").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Description").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("ReceivedDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ReceivedDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        If Not IsNull(adoRs.Fields("PaidDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("PaidDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
                
        strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("Status").Value & "Reverse") & ", "
        If Not IsNull(adoRs.Fields("PaymentAmount").Value) Then             ''PaymentAmount
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("PaymentAmount").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("ActualPayment").Value) Then
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("ActualPayment").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        If Not IsNull(adoRs.Fields("PaymentBalance").Value) Then
            strSQL = strSQL & f_ReverseValue(adoRs.Fields("PaymentBalance").Value) & ", "
        Else
            strSQL = strSQL & " 0, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation("2") & ", "     'ReverseStatus
        
        strSQL = strSQL & fg_AddSingleQuotation("1") & ", "     ''ModifyPlace
        If Not IsNull(adoRs.Fields("ProofDate").Value) Then
            strSQL = strSQL & fg_AddSingleQuotation(adoRs.Fields("ProofDate").Value) & ", "
        Else
            strSQL = strSQL & "Null, "
        End If
        strSQL = strSQL & fg_AddSingleQuotation(datPrNow) & ", "        ''InsertDate
        strSQL = strSQL & "Null, "
        strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "
        strSQL = strSQL & " Null) "
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_Update & c_strTBL_AssociatePayment
            GoTo LBL_ERR
        End If
        ''|fffd|C|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|X|fffd|V ------------------------------------------------------------
        adoRs.Fields("Status").Value = "void"                                   ''void
        adoRs.Fields("ReverseStatus").Value = "1"                               ''ReverseStatus
        adoRs.Fields("ModifyPlace").Value = "1"                                 ''ModifyPlace
        ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        adoRs.MoveNext
    Loop
    
    On Error GoTo 0

    f_UpdateReverseRecord = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Erase strAsoLinkCodeOrg
    Erase strAsoLinkCodeNew
    Set adoRs = Nothing
    Exit Function

LBL_ERR:
    f_UpdateReverseRecord = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_UpdateReverseRecord:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_UpdateReverseRecord", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/27 : Knowlbo Suzuki : UpDate|fffd||fffd||fffd|ReLoad|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim adoRsap As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngIx As Long
    Dim lngRowIndex As Long
    Dim strMSG As String
    Dim strClassify As String
    Dim strInvoice As String
    Dim blnSetInvoice As Boolean
    Dim blnUpdateAp  As Boolean
    Dim datValue As Date
    Dim strData As String
    Dim blnUpdate As Boolean
    Dim blnCleateLinkCode As Boolean
    Dim strLinkCode As String, strAsoCode As String
    Dim datPrNow As Date

    datPrNow = Now()
    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData(strMSG) Then
        MsgBox strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    If m_strReverseInvLinkCode <> "" Then
        If Cells(15, 14).Value <> Cells(5, 16).Value Then
            MsgBox c_strMSG_INVBR_REVERSE_AMOUNT, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            CmdBtnDbUpDate.Visible = True
            Exit Sub
        End If
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    sg_SetScreenUpdate False

    strInvoice = CStr(Cells(4, 3).Value)

    strMSG = "DBSelectProcError"
    Set adoRsap = New ADODB.Recordset
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

    m_blnSetupCellsInProgress = True        ''|fffd||6cc||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||752||fffd|
    Unprotect Password:=c_strSheetPWD

On Error GoTo LBL_ERR
    
    If m_strReverseInvLinkCode <> "" Then
        If f_UpdateReverseRecord(adoCn, objdba) <> True Then
            strMSG = "ERROR DBUpDate ReverseRecord"
            GoTo LBL_ERR
        End If
    End If

    ''Header|fffd|X|fffd|V/|fffd||1c9||fffd| ================================================================
    blnSetInvoice = False
    blnCleateLinkCode = False
    
    If Cells(8, 17).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|

        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
        strSQL = strSQL & " WHERE "
        strSQL = strSQL & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(Cells(8, 7).Value)
        strSQL = strSQL & " AND " & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
            GoTo LBL_ERR
        End If
    
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setInvoiceHeaderHistorySQLString(adoRs, datPrNow)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceHeader
                GoTo LBL_ERR
            End If
        Else
            blnSetInvoice = True
            adoRs.AddNew
        End If

        adoRs.Fields("OfficeCode").Value = g_strOfficeCode          ''OfficeCode
        adoRs.Fields("LedgerLinkCode").Value = Cells(8, 7).Value    ''LedgerLinkCode
        adoRs.Fields("InvoiceNo").Value = strInvoice                ''InvoiceNo
        adoRs.Fields("Currency").Value = Cells(3, 3).Value          ''Currency
        If Cells(5, 3).Value <> "" Then                             ''Description
            strData = CStr(Cells(5, 3).Value)
            If Left$(strData, 4) = c_strKwdModifyBR Or _
               Left$(strData, 4) = c_strKwdModifyNK Then
                strData = c_strKwdModifyNK & Mid$(strData, 5)
            Else
                strData = c_strKwdModifyNK & strData
            End If
            If Len(strData) > 128 Then strData = Left$(strData, 128)
            adoRs.Fields("Description").Value = strData
        Else
            adoRs.Fields("Description").Value = c_strKwdModifyNK
        End If
        If Cells(7, 3).Value <> "" Then                             ''Period(start)
            datValue = DateValue(Cells(7, 3).Value)
            adoRs.Fields("PeriodStart").Value = datValue
        End If
        If Cells(8, 3).Value <> "" Then                             ''Period(end)
            datValue = DateValue(Cells(8, 3).Value)
            adoRs.Fields("PeriodEnd").Value = datValue
        End If
        adoRs.Fields("Status").Value = Cells(7, 7).Value            ''Status
        If Cells(6, 10).Value <> "" Then                            ''IssuingDate
            datValue = DateValue(Cells(6, 10).Value)
            adoRs.Fields("IssuingDate").Value = datValue
        End If
        If Cells(7, 10).Value <> "" Then                            ''ApprovalDate
            datValue = DateValue(Cells(7, 10).Value)
            adoRs.Fields("ApprovalDate").Value = datValue
        End If
        If Cells(8, 10).Value <> "" Then                            ''PaymentDate
            datValue = DateValue(Cells(8, 10).Value)
            adoRs.Fields("PaymentDate").Value = datValue
        End If
    
        If Not IsEmpty(Cells(15, 14).Value) Then                    ''PaymentAmount
            adoRs.Fields("PaymentAmount").Value = Cells(15, 14).Value
        Else
            adoRs.Fields("PaymentAmount").Value = 0
        End If
        If blnSetInvoice Then
            adoRs.Fields("ReceivedAmount").Value = 0
            Cells(8, 16).Value = Cells(8, 7).Value                  ''LinkCode
        End If
        If Cells(5, 17).Value <> "" Then                            ''AdvanceData
            adoRs.Fields("AdvanceData").Value = "1"
        End If
        adoRs.Fields("ModifyPlace").Value = "1"                     ''ModifyPlace
        ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
        Call objdba.closeRecordset(adoRs)
        
        ''ReLoad|fffd||fffd||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g
        'Cells(8, 17).Value = "" ''HeaderDirty
        
    End If
        
    ''Detail|fffd|X|fffd|V/|fffd||1c9||fffd| ================================================================
    ''Detail|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "dt.LedgerLinkCode = " & fg_AddSingleQuotation(Cells(8, 7).Value)
    strSQL = strSQL & " AND " & "dt.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceDetail
        GoTo LBL_ERR
    End If
    
    ''Associate|fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " WHERE " & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "ap.LedgerLinkCode IN ("
    strSQL = strSQL & "SELECT dt.AsoLinkCode FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " WHERE " & "dt.LedgerLinkCode = " & fg_AddSingleQuotation(Cells(8, 7).Value)
    strSQL = strSQL & " AND " & "dt.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & ")"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRsap) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If

    For lngRowIndex = c_intBRInvDetailRowST To mc_lngMAX_ROWINDEX Step 1
        ''|fffd|f|fffd|[|fffd|^|fffd||64ea||fffd|s|fffd||342|m|fffd|j|fffd||152||fffd|
        If lngRowIndex = c_intBRInvDetailRowST Then
            strClassify = "NK"
            strAsoCode = "NK"
        Else
            strClassify = "JV"
            strAsoCode = ""
            fg_GetAssociateCodeOrName strAsoCode, Cells(lngRowIndex, 2).Value
        End If

        If Cells(lngRowIndex, 17).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            If f_IsNullRow(lngRowIndex) Then
                ''NULL|fffd|s|fffd||202||302||143|f|fffd|[|fffd|^|fffd||d3dc|(|fffd||fffd||fffd||389||fffd|)
            Else
                blnUpdateAp = False
                ''|fffd|X|fffd|V |fffd|iLinkCode|fffd||fffd|ID|fffd||311||582||fffd||243|}|fffd|b|fffd|`|fffd||fffd||fffd|O|fffd||24e|g|fffd|p|fffd||fffd||fffd||fffd|j
                If Cells(lngRowIndex, 16).Value <> "" Then ''AsoLinkcode(ID)|fffd||fffd||fffd||fffd||fffd||fffd|
                    strLinkCode = Cells(lngRowIndex, 16).Value
                    
                    ''InvoiceDetail|fffd|X|fffd|V|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
                    adoRs.Filter = adFilterNone
                    adoRs.Filter = "AsoLinkCode=" & fg_AddSingleQuotation(strLinkCode)
                    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                        objdba.SQLString = fg_setInvoiceDetailHistorySQLString(adoRs, datPrNow)
                        If (objdba.ExecuteSQL(adoCn) <> 0) Then
                            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_InvoiceDetail
                            GoTo LBL_ERR
                        End If
                    Else
                        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_InvoiceDetail
                        GoTo LBL_ERR
                    End If
                ''|fffd||1c9||fffd|
                Else
                    ''LinkCode Asociate|fffd||fffd||fffd||fffd||fffd|i|fffd|m|fffd|j|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|j
                    strLinkCode = fg_CreateLinkCode(GLNK_AS)
                    blnCleateLinkCode = True
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                    blnUpdateAp = True
                End If

                ''InvoiceDetail|fffd|X|fffd|V/|fffd||1c9||fffd| ================================================================
                adoRs.Fields("OfficeCode").Value = g_strOfficeCode                  ''OfficeCode
                adoRs.Fields("LedgerLinkCode").Value = Cells(8, 7).Value  ''LedgerLinkCode
                adoRs.Fields("InvoiceNo").Value = strInvoice        ''InvoiceNo
                adoRs.Fields("Currency").Value = Cells(3, 3).Value ''Currency
                adoRs.Fields("AsoLinkCode").Value = strLinkCode       ''AsoLinkCode
                adoRs.Fields("Classify").Value = strClassify        ''Classify
                adoRs.Fields("AsoCode").Value = strAsoCode        ''AsoCode
                If Not IsEmpty(Cells(lngRowIndex, 5).Value) Then                    ''InvoiceAmount
                    adoRs.Fields("InvoiceAmount").Value = Cells(lngRowIndex, 5).Value
                Else
                    adoRs.Fields("InvoiceAmount").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 6).Value) Then                    ''Repayment
                    adoRs.Fields("Repayment").Value = Cells(lngRowIndex, 6).Value
                Else
                    adoRs.Fields("Repayment").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 7).Value) Then                    ''Retention
                    adoRs.Fields("Retention").Value = Cells(lngRowIndex, 7).Value
                Else
                    adoRs.Fields("Retention").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 9).Value) Then                    ''Vat
                    adoRs.Fields("Vat").Value = Cells(lngRowIndex, 9).Value
                Else
                    adoRs.Fields("Vat").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 10).Value) Then                    ''HoldingTax
                    adoRs.Fields("HoldingTax").Value = Cells(lngRowIndex, 10).Value
                Else
                    adoRs.Fields("HoldingTax").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 11).Value) Then                    ''ManageFee
                    adoRs.Fields("ManageFee").Value = Cells(lngRowIndex, 11).Value
                Else
                    adoRs.Fields("ManageFee").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 12).Value) Then                    ''OtherTax
                    adoRs.Fields("OtherTax").Value = Cells(lngRowIndex, 12).Value
                Else
                    adoRs.Fields("OtherTax").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 13).Value) Then                    ''Others
                    adoRs.Fields("Others").Value = Cells(lngRowIndex, 13).Value
                Else
                    adoRs.Fields("Others").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 14).Value) Then                    ''PaymentAmount
                    adoRs.Fields("PaymentAmount").Value = Cells(lngRowIndex, 14).Value
                Else
                    adoRs.Fields("PaymentAmount").Value = 0
                End If
                If Not IsEmpty(Cells(lngRowIndex, 14).Value) Then                    ''PaymentAmount
                    adoRs.Fields("PaymentAmount").Value = Cells(lngRowIndex, 14).Value
                Else
                    adoRs.Fields("PaymentAmount").Value = 0
                End If
                adoRs.Fields("ModifyPlace").Value = "1"                              ''ModifyPlace
                ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
                
                ''ReLoad|fffd||fffd||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g
                ''ID|fffd||311||582||fffd||fffd|LinkCode|fffd||fffd|ID|fffd||fffd||255||6d1||fffd|
                'Cells(lngRowIndex, 16).Value = strLinkCode
                'Cells(lngRowIndex, 17).Value = ""

                ''AsoPaymentNK|fffd|s|fffd||20a|O|fffd||fffd||1c9||fffd|/|fffd|X|fffd|V==========================================================
                If strClassify = "JV" Then
                    If blnUpdateAp Then
                        adoRsap.AddNew    ''AsoPayment|fffd||1c9||fffd|
                        adoRsap.Fields("OfficeCode").Value = g_strOfficeCode            ''OfficeCode
                        adoRsap.Fields("LedgerLinkCode").Value = strLinkCode            ''LedgerLinkCode
                        adoRsap.Fields("AssociateCode").Value = strAsoCode              ''AssociateCode
                        adoRsap.Fields("Currency").Value = Cells(3, 3).Value            ''Currency
                        adoRsap.Fields("ClientInvoice").Value = strInvoice              ''ClientInvoice
                        adoRsap.Fields("Status").Value = "Invoiced"                     ''Status
                        If Not IsEmpty(Cells(lngRowIndex, 14).Value) Then               ''PaymentAmount
                            adoRsap.Fields("PaymentAmount").Value = Cells(lngRowIndex, 14).Value
                        Else
                            adoRsap.Fields("PaymentAmount").Value = 0
                        End If
                        adoRsap.Fields("ActualPayment").Value = 0                       ''ActualPayment
                        adoRsap.Fields("PaymentBalance").Value = 0                      ''PaymentBalance
                        adoRsap.Fields("ClientInvoice").Value = strInvoice              ''ClientInvoice
                        If m_strReverseInvLinkCode <> "" Then
                            blnCleateLinkCode = True
                            For lngIx = 0 To m_lngRevAsoCount - 1
                                If m_typAryRevAsoData(lngIx).m_strAsoCode = strAsoCode Then
                                    If m_typAryRevAsoData(lngIx).m_strInvRefNo <> "" Then ''InvRefNo
                                        adoRsap.Fields("InvRefNo").Value = m_typAryRevAsoData(lngIx).m_strInvRefNo
                                    End If
                                    If m_typAryRevAsoData(lngIx).m_strDescription <> "" Then ''Description
                                        adoRsap.Fields("Description").Value = m_typAryRevAsoData(lngIx).m_strDescription
                                    End If
                                    If m_typAryRevAsoData(lngIx).m_datReceivedDate <> 0 Then
                                        adoRsap.Fields("ReceivedDate").Value = m_typAryRevAsoData(lngIx).m_datReceivedDate
                                    End If
                                    If m_typAryRevAsoData(lngIx).m_datPaidDate <> 0 Then
                                        adoRsap.Fields("PaidDate").Value = m_typAryRevAsoData(lngIx).m_datPaidDate
                                    End If
                                    adoRsap.Fields("Status").Value = m_typAryRevAsoData(lngIx).m_strStatus
                                    If m_typAryRevAsoData(lngIx).m_curActualPayment <> 0 Then
                                        adoRsap.Fields("ActualPayment").Value = m_typAryRevAsoData(lngIx).m_curActualPayment
                                        adoRsap.Fields("PaymentBalance").Value = _
                                                m_typAryRevAsoData(lngIx).m_curActualPayment - adoRsap.Fields("PaymentAmount").Value
                                    Else
                                        adoRsap.Fields("ActualPayment").Value = 0
                                        adoRsap.Fields("PaymentBalance").Value = 0
                                    End If
                                    Exit For
                                End If
                            Next
                        End If
                    Else ''|fffd|X|fffd|V
                        ''AssociatePayment|fffd|X|fffd|V|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
                        adoRsap.Filter = adFilterNone
                        adoRsap.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(strLinkCode)
                        If adoRsap.EOF Then
                            strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_AssociatePayment
                            GoTo LBL_ERR
                        End If
                        ''|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N
                        If adoRsap.Fields("AssociateCode").Value <> strAsoCode Then  ''AssociateCode
                            objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRsap, datPrNow)
                            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
                                GoTo LBL_ERR
                            End If
                            adoRsap.Fields("AssociateCode").Value = strAsoCode
                            blnUpdateAp = True
                        End If
                        If Cells(lngRowIndex, 14).Value <> adoRsap.Fields("PaymentAmount").Value Then ''PaymentAmount
                            If blnUpdateAp = False Then
                                objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRsap, datPrNow)
                                If (objdba.ExecuteSQL(adoCn) <> 0) Then
                                    strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
                                    GoTo LBL_ERR
                                End If
                            End If
                            adoRsap.Fields("PaymentAmount").Value = Cells(lngRowIndex, 14).Value
                            ''|fffd||fffd||fffd|z|fffd|C|fffd||fffd|
                            If adoRsap.Fields("ActualPayment").Value <> 0 Then ''ActualPayment
                                adoRsap.Fields("PaymentBalance").Value = _
                                    adoRsap.Fields("ActualPayment").Value - adoRsap.Fields("PaymentAmount").Value
                            End If
                            blnUpdateAp = True
                        End If
                    End If
                    If blnUpdateAp Then
                        
                        strData = ""
                        If Not IsNull(adoRsap.Fields("Description").Value) Then   ''Description
                            strData = adoRsap.Fields("Description").Value
                        End If
                        If strData <> "" Then
                            If Left$(strData, 4) = c_strKwdModifyBR Or _
                               Left$(strData, 4) = c_strKwdModifyNK Then
                                strData = c_strKwdModifyNK & Mid$(strData, 5)
                            Else
                                strData = c_strKwdModifyNK & strData
                            End If
                            If Len(strData) > 128 Then strData = Left$(strData, 128)
                        Else
                            strData = c_strKwdModifyNK
                        End If
                        adoRsap.Fields("Description").Value = strData
                        adoRsap.Fields("ModifyPlace").Value = "1"              ''ModifyPlace
                        ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
                        adoRsap.Fields("InsertDate").Value = datPrNow
                        adoRsap.Fields("InsertUID").Value = g_strLoginId
                        adoRsap.Update
                    End If
                    adoRsap.MoveFirst
                End If
            End If
        
        End If
    Next
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeRecordset(adoRsap)
    
    If blnCleateLinkCode Then
        ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_AS, adoCn, objdba) = False Then GoTo LBL_ERR
        If fg_UpdateCurrentLinkCodeNo(GLNK_IV, adoCn, objdba) = False Then GoTo LBL_ERR
    ElseIf blnSetInvoice Then
        If fg_UpdateCurrentLinkCodeNo(GLNK_IV, adoCn, objdba) = False Then GoTo LBL_ERR
    End If

    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)

    If m_strReverseInvLinkCode <> "" Then ''|fffd|t|fffd|`|fffd|[|fffd|p|fffd|C|fffd||fffd||fffd||fffd|LinkCode|fffd|N|fffd||fffd||fffd|A
        m_strReverseInvLinkCode = ""
        Erase m_typAryRevAsoData
        Erase m_strAryRevIVLinkCode
        Erase m_strAryRevInvoiceNo
    End If

    If blnSetInvoice Then ''Invoice|fffd|R|fffd||fffd||fffd|{|fffd||110||752||fffd|
        ActiveCell.Select
        s_GetInvoiceHeaderInfo
        s_SetupInvoiceNoCells Range("C3"), True
    End If
    
    ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells
    
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    
    m_blnDirty = False

    ThisWorkbook.Activate
    sg_SetScreenUpdate True
    CmdBtnDbUpDate.Visible = True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM

    If (m_blnEditInv = True) Then
        ThisWorkbook.Sheets(g_strArywsName(m_intCallLedger)).Activate
        m_blnEditInv = False
        Exit Sub
    End If

LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeRecordset(adoRsap)
    Call objdba.closeADOConnection(adoCn)
    
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    sg_SetScreenUpdate True
    
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED4]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If

    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If


    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    
    If m_blnDirty Then
        ''|fffd|V|fffd|KInvoice|fffd||30f||a347||fffd|A|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
        m_blnDirty = False
        If Cells(8, 7).Value = m_strCreateLinkCode Then
            Cells(4, 3).ClearContents
        End If
    End If
    
    If (m_blnEditInv = True) Then
        ThisWorkbook.Sheets(g_strArywsName(m_intCallLedger)).Activate
        m_blnEditInv = False
        Exit Sub
    End If
    
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(3) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd|BOOK|fffd||fffd||fffd||fffd||30f|C|fffd||fffd||fffd|p|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|BOOK|fffd||fffd||fffd||fffd||30f|C|fffd||fffd||fffd|p|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/04 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sw_EditRecord()

    Dim strInvoice As String
    Dim strCur As String
    
    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                                   ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True            ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_ClearDetailCells                          ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    m_blnSetupCellsInProgress = False           ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True             ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    sg_SetScreenUpdate True
    
    If (f_GetEditInvoiceNo(strInvoice, strCur) = True) Then ''|fffd||38f||6c2||fffd|InvoiceNo,Currency|fffd||fffd||fffd||64fe|
        Cells(3, 3).Value = strCur              ''Currency|fffd||fffd||752||fffd|
        Cells(4, 3).Value = strInvoice          ''InvoiceNo|fffd||fffd||752||fffd|
    Else
        ''|fffd||fffd||fffd|s
    End If
   
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|C|fffd||fffd||fffd|pInvoiceNo|fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> InvoiceNo.
'   (2)<String |fffd|^> |fffd||289||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|C|fffd||fffd||fffd|p|fffd||fffd|InvoiceNo|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
'-----------------------------------------------------------------
Private Function f_GetEditInvoiceNo( _
    ByRef strInvoice As String, _
    ByRef strCurrency As String _
) As Boolean

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    ''SQL|fffd||fffd||fffd||c42c|
    strSQL = "SELECT " & "hd.InvoiceNo, " & "hd.Currency "
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " WHERE " & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(m_strEditInvCode)

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
On Error GoTo LBL_ERR
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
        
    If Not adoRs.EOF Then
        strInvoice = adoRs.Fields("InvoiceNo").Value
        strCurrency = adoRs.Fields("Currency").Value
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    
    On Error GoTo 0
    
    f_GetEditInvoiceNo = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function
LBL_ERR:
    f_GetEditInvoiceNo = False
    sg_MsgBoxError "f_GetEditInvoiceNo", strMSG
    GoTo LBL_END
End Function

Attribute VB_Name = "wsCashBook"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnConnCodeEdit, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnLinkCodeSelect, 4, 3, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||343|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_curCurrentBalance As Currency        ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
Private m_blnDecisionLock As Boolean         ''|fffd|m|fffd||fffd||38f||6cc||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
Private m_blnMasterUpdate As Boolean         ''LedgerMaster|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnCreateLinkcode As Boolean       ''Linkcode|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
Private m_typAryTRBookData() As clsTransBookData ''|fffd||fffd||fffd||fffd||fffd|U|fffd||597|p|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
Private m_strBookAcCode As String            ''|fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||216||fffd|
Private m_intPurpose As Integer              ''NK/JV (LedgerType)

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/26 : |fffd|n|7c97|S|fffd|q       : Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean
    m_blnDecisionLock = False
    
    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_CB) = True Then
        Dim strData As String
        Dim lngIdx As Long
        Dim datTarget As Date
        
        sg_SetScreenUpdate False
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        
        datTarget = DateValue(Cells(3, 5).Value)
        sg_SetupTargetMonthCell Cells(3, 5) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        If IsDate(datTarget) Then
            strData = Format(datTarget, "yyyy/mm")
           lngIdx = fg_GetIndexFromTokenInCSV(strData, Range("E3").Validation.Formula1)
            If lngIdx >= 0 Then Cells(3, 5).Value = strData
        End If
        If g_blnAryCmnMstUpdate(GLED_CB) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            
            ''Month/ Date
            sg_SetupDetailDateCells Range("B" & c_intCBDetailRowST, "C" & c_lngMAX_ROWINDEX), _
                                    Range("C" & c_intCBDetailRowST, "C" & c_lngMAX_ROWINDEX)
            
            ''Expense Burden (WBS-CODE)
            sg_SetupBurdenCells Range("I" & c_intCBDetailRowST, "I" & c_lngMAX_ROWINDEX), _
                                    Range("AA" & c_intCBDetailRowST)
            
            ''ConnectionCode
            sg_SetupConnCodeCells Range("L" & c_intCBDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                                        Range("M" & c_intCBDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                                        Range("AC" & c_intCBDetailRowST)
        End If
        s_SetupDetailCells
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        sg_SetScreenUpdate True
        GoTo LBL_END
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''BackBook|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_CB) = False Then
        MsgBox c_strMSG_MASTER_CBOOK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intCBDetailRowST)
 
    Cells(c_intCBDetailRowST, 2).Activate

    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    sg_SetupTargetMonthCell Cells(3, 5) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    ''<<<2013.03.26 Mod By Y.Watanabe Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
    ' s_SetupDetailCells|fffd||fffd||fffd||fffd|fg_GetAccountsDetailData|fffd||fffd||fffd||fffd|ClearContents|fffd||149||fffd||fffd||302||fffd||fffd|~|fffd||702||fffd|
    ' |fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||113||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd||fffd|
    ' |fffd||202||302||141|A|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||582||fffd||fffd||702||fffd||fffd||fffd|
    s_SetupDetailCells                 ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
'    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'    s_SetupDetailCells                 ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    ''>>>2013.03.26 Mod By Y.Watanabe Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    
    sg_SetScreenUpdate True
    
LBL_END:
    g_blnArySetupSheet(GLED_CB) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_CB) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fw_SetupSheet = True
    sg_MsgBoxInputStart "CashBook", "Now starting the entry for " _
            & Year(DateValue(Cells(3, 5).Value)) & "/" & Month(DateValue(Cells(3, 5).Value))
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2005/05/27 : Knowlbo Suzuki : R/3 IF|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||3cd|X
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strDatas As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim intSelect As Integer
    Dim rngLedCode As Range
    
    intSelect = 0 ''|fffd||fffd||fffd||fffd|LEDGER INDEX
    
    ''Ledger Code |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngLedCode = Cells(4, 5)
    strDatas = ""
    intIxEnd = UBound(g_typAryCBInfo)
    For intIx = 0 To intIxEnd
        strDatas = strDatas & g_typAryCBInfo(intIx).m_strCode
        If intIx <> intIxEnd Then
            strDatas = strDatas & ","
        End If
    Next
    sg_SetupValidation rngLedCode.Validation, c_strMSG_LEDCODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    
    rngLedCode.Value = fg_GetTokenFromIndexInCSV(intSelect, rngLedCode.Validation.Formula1)
    Cells(5, 5).Value = g_typAryCBInfo(intSelect).m_strCasher       ''Casher
    Cells(6, 5).Value = g_typAryCBInfo(intSelect).m_strCurrency     ''Currency
    Cells(3, 9).Value = g_typAryPJTInfo(0).m_strOfficeCode          ''Office Code
    Cells(4, 9).Value = g_typAryPJTInfo(0).m_strPJTCode             ''Project Code
    Cells(5, 9).Value = g_typAryPJTInfo(0).m_strPJTName             ''Project Name
       
    ''This Ledger for
    m_intPurpose = g_typAryCBInfo(intSelect).m_intPurpose
    If m_intPurpose = 0 Then
        Cells(7, 9).Value = c_strPurposeNK
    Else
        Cells(7, 9).Value = c_strPurposeJV
    End If
    Cells(8, 9).Value = g_typAryCBInfo(intSelect).m_strMemo         ''Free Memo
    Cells(8, 21).NumberFormat = g_strFORMAT_DECZERO_XX              ''LastBalance
    m_strBookAcCode = g_typAryCBInfo(intSelect).m_strAcCode         ''CashBankAccountCode
      
    ''R/3 IF|fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||310|F|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
    If g_blnR3IfEnable = False Then ''R3IF |fffd||fffd||fffd||fffd|
        Range("C1:F1").Interior.ColorIndex = 3
        Range("C1").Font.ColorIndex = 2
        Cells(2, 3).Value = "Disable R/3 Interface!"
        Range("C2").Font.ColorIndex = 38
        Range("C2").Font.Italic = True
        Range("C2").Font.Bold = True
    End If
      
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    ''Month/ Date
    sg_SetupDetailDateCells Range("B" & c_intCBDetailRowST, "C" & c_lngMAX_ROWINDEX), _
                            Range("C" & c_intCBDetailRowST, "C" & c_lngMAX_ROWINDEX)
    
    ''Expense Burden (WBS-CODE)
    sg_SetupBurdenCells Range("I" & c_intCBDetailRowST, "I" & c_lngMAX_ROWINDEX), _
                                    Range("AA" & c_intCBDetailRowST)
    
    ''AccountCode / Name
    sg_SetupDetailACCodeCells Range("J" & c_intCBDetailRowST, "J" & c_lngMAX_ROWINDEX), _
                              Range("K" & c_intCBDetailRowST, "K" & c_lngMAX_ROWINDEX), _
                              Range("AF" & c_intCBDetailRowST)
    Range("J" & c_intCBDetailRowST, "J" & c_lngMAX_ROWINDEX).NumberFormat = "@"

    ''ConnectionCode
    sg_SetupConnCodeCells Range("L" & c_intCBDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                                        Range("M" & c_intCBDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                                        Range("AC" & c_intCBDetailRowST)
    ''EviNo. CheckNo.
    sg_SetupValidation Range("O" & c_intCBDetailRowST, "P" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_WHOLE_NUM, xlValidateWholeNumber, xlValidAlertStop, xlBetween, "-2147483648", "2147483647"
    
    'NK/JV
    sg_SetupDetailNKJVCells Range("Q" & c_intCBDetailRowST, "Q" & c_lngMAX_ROWINDEX)

    ''Claim
    sg_SetupValidation Range("R" & c_intCBDetailRowST, "R" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_CLAIM, xlValidateList, xlValidAlertStop, xlBetween, "Y,N", Null
    With Range("R" & c_intCBDetailRowST, "R" & c_lngMAX_ROWINDEX).Validation
        .ShowError = False
    End With
    
    ''Paid, Received
    sg_SetupValidation Range("S" & c_intCBDetailRowST, "T" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    ''Range("S" & c_intCBDetailRowST, "U" & c_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("S" & c_intCBDetailRowST, "U" & c_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DEC_CBT
   
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fg_GetAccountsDetailData ActiveSheet    ''|fffd|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||64fe|(|fffd|c|fffd||702||fffd|)

    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(3, 5).Value <> "" Then
        If g_datDecisionMonth <> 0 Then  ''|fffd|m|fffd||830e|
            If DateValue(Cells(3, 5).Value) <= g_datDecisionMonth Then
               Range("B" & c_intCBDetailRowST, "T" & c_lngMAX_ROWINDEX).Locked = True
               m_blnDecisionLock = True
            Else
                m_blnDecisionLock = False
            End If
        Else
            If DateValue(Cells(3, 5).Value) < g_datImportMonth Then
                Range("B" & c_intCBDetailRowST, "T" & c_lngMAX_ROWINDEX).Locked = True
                m_blnDecisionLock = True
            Else
                m_blnDecisionLock = False
            End If
        End If
    End If
    
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = Not m_blnDecisionLock
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = Not m_blnDecisionLock
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    sg_GetCurrentLinkCodeNo GLNK_FA ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||152||8391||fffd|YLinkCodeNo|fffd||64fe|
    
    sg_GetCurrentRecIDNo GLED_CB ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    
    Application.GoTo Range("A" & c_intCBDetailRowST), Scroll:=True    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    
    m_blnMasterUpdate = False
    m_blnCreateLinkcode = False
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   NULL|fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|w|fffd||fffd|sNo
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|s|fffd||30a|e|fffd||fffd||fffd|NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_IsNullRow( _
    ByVal lngRowIndex As Long _
) As Boolean

    Dim intIxCol As Integer
    
    f_IsNullRow = False
    
    For intIxCol = 2 To 20
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    f_IsNullRow = True

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_CheckSheetUpdate()
   
    Dim lngRowIndex As Long
    Dim lngUpdateCount As Long

    If m_blnDirty = False Then
        Exit Sub
    End If

    lngUpdateCount = 0

    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    
    For lngRowIndex = c_intCBDetailRowST To c_lngMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            lngUpdateCount = lngUpdateCount + 1
            If f_IsNullRow(lngRowIndex) And Cells(lngRowIndex, 23).Value = "" Then
                lngUpdateCount = lngUpdateCount - 1
                ''Dirty |fffd|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
                Cells(lngRowIndex, 24).Value = ""
            End If
        End If
    Next

    If lngUpdateCount = 0 Then
        m_blnDirty = False
    End If

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Balance|fffd|l|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/08/11 : Knowlbo Suzuki : |fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'   2003/10/16 : Knowlbo Suzuki : LinkCode|fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|(OfficeCode Left7|fffd||fffd|)
'-----------------------------------------------------------------
Private Function _
f_CheckInputData() As Boolean
    
    Dim strMessage As String
    Dim lngRowIndex As Long
    Dim lngInputLastRow As Long
    Dim curBalance As Currency
    Dim blnCCode As Boolean
    Dim blnLCode As Boolean
    Dim lngRowNo As Long
    Dim strCCodeKind As String
    Dim strLCodeKind As String
    Dim strSplit As Variant
    Dim strValue As Variant
    Dim blnMatch As Boolean
    Dim strAcCode As String
        
    f_CheckInputData = False
    lngInputLastRow = 0
    curBalance = 0
    
    For lngRowIndex = c_intCBDetailRowST To c_lngMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|

            blnCCode = False
            blnLCode = False
        
            ''Month
            If Cells(lngRowIndex, 2).Value = "" Then
                strMessage = c_strMSG_SETMON
                Cells(lngRowIndex, 2).Activate
                GoTo LBL_ERR
            End If

            ''Date
            If Cells(lngRowIndex, 3).Value = "" Then
                strMessage = c_strMSG_SETDAY
                Cells(lngRowIndex, 3).Activate
                GoTo LBL_ERR
            End If

            If Not fg_IsDateCells(Cells(lngRowIndex, 2), Cells(lngRowIndex, 3), DateValue(Cells(3, 5).Value)) Then
                ''|fffd|L|fffd||fffd||fffd||213||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
                strMessage = c_strMSG_ERRORDATE
                Cells(lngRowIndex, 3).Activate
                GoTo LBL_ERR
            End If

            ''Description Details
            If Cells(lngRowIndex, 7).Value = "" Then
                If Cells(lngRowIndex, 10).Value <> "" Then
                    If (Cells(lngRowIndex, 4).Value = "") Or _
                       (Cells(lngRowIndex, 4).Value <> "" And Trim$(Cells(lngRowIndex, 4).Value) = "") Then
                        strMessage = c_strMSG_SETDETAILS
                        Cells(lngRowIndex, 7).Activate
                        GoTo LBL_ERR
                    End If
                End If
            Else
                If Len(Cells(lngRowIndex, 7).Value) > 128 Then
                    MsgBox c_strMSGCmn_LENGTHOVER & "128", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(lngRowIndex, 7).Activate
                    GoTo LBL_EXIT
                End If
            End If

            ''Expense Burden
            If Cells(lngRowIndex, 9).Value = "" Then
                strMessage = c_strMSG_WBS
                Cells(lngRowIndex, 9).Activate
                GoTo LBL_ERR
            Else
                ''WBSCode|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
                Dim strDumyCode As String
                If fg_CheckWBSExist(Cells(lngRowIndex, 9).Value, strDumyCode) = False Then
                    strMessage = c_strMSGCmn_NotEXISTWBS & "(NK-Sales or NK-Material)"
                    Cells(lngRowIndex, 9).Activate
                    GoTo LBL_ERR
                End If
            End If

            ''AccountCode/Name
            If Cells(lngRowIndex, 10).Value = "" Then
                strMessage = c_strMSG_ACCOUNT_CODE
                Cells(lngRowIndex, 10).Activate
                GoTo LBL_ERR
            Else
                lngRowNo = fg_FindSameDataRowNo(Cells(lngRowIndex, 10), _
                            wsSettings.Range("C2", "C65536"))
                If lngRowNo <> 0 Then
                    If wsSettings.Cells(lngRowNo, 10).Value <> "" Then
                        blnCCode = True ''ConnectionCode|fffd|K|fffd|{
                        If wsSettings.Cells(lngRowNo, 10).Value = 2 Then 'CCode|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                            strCCodeKind = wsSettings.Cells(lngRowNo, 11).Value
                        Else
                            strCCodeKind = ""
                        End If
                    End If
                    If wsSettings.Cells(lngRowNo, 12).Value <> "" Then
                        If InStr(wsSettings.Cells(lngRowNo, 12).Value, "(") = 0 Then
                            blnLCode = True ''LinkCode|fffd|K|fffd|{
                            strLCodeKind = wsSettings.Cells(lngRowNo, 12).Value
                        End If
                    End If
                End If
            
                strAcCode = Cells(lngRowIndex, 10).Value

                ''|fffd||289||74c||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                If Left$(strAcCode, 4) = "2019" Then
                    If strAcCode = c_strACEx_MoneySndCode Or _
                       strAcCode = c_strACRM_SndHeadCode Or _
                       strAcCode = c_strACRM_SndOtherCode Or _
                       strAcCode = c_strACR3_AdjustDebtorCode Then
                       
                        If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                            strMessage = c_strMSG_PAID_NUM
                            Cells(lngRowIndex, 19).Activate
                            GoTo LBL_ERR
                        End If
                    Else
                        If Cells(lngRowIndex, 20).Value = "" Then ''Received
                            strMessage = c_strMSG_RECV_NUM
                            Cells(lngRowIndex, 20).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            
                ''Expense Burden|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||92a8||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N--------------------------
                If strAcCode = c_strACKND_PriGainCostCode Or _
                   strAcCode = c_strACKND_PriLossCostCode Then
                    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||20a|O|fffd||313||fffd||fffd||342||fffd||fffd||94|\
                    If Left$(Cells(lngRowIndex, 9).Value, 1) = "X" Or _
                       Left$(Cells(lngRowIndex, 9).Value, 1) = "Z" Then
                        strMessage = c_strMSG_CHK_ExBurden
                        Cells(lngRowIndex, 9).Activate
                        GoTo LBL_ERR
                    End If
                End If
                If strAcCode = c_strACKND_PriGainOtherCode Or _
                   strAcCode = c_strACKND_PriLossOtherCode Then
                    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||302||753||fffd||fffd||342||fffd||fffd||94|\
                    If Left$(Cells(lngRowIndex, 9).Value, 1) <> "X" And _
                       Left$(Cells(lngRowIndex, 9).Value, 1) <> "Z" Then
                        strMessage = c_strMSG_CHK_CostCenter
                        Cells(lngRowIndex, 9).Activate
                        GoTo LBL_ERR
                    End If
                End If
            End If
            
            ''ConnectionCode/Name
            If Cells(lngRowIndex, 12).Value = "" Then
                If blnCCode = True Then
                    strMessage = c_strMSG_CONNECT_CODE
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERR
                End If
            Else
                ''|fffd||fffd|CCode|fffd|s|fffd|v|fffd||202||302||253||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||90a9||fffd|H
                If blnCCode = True And strCCodeKind <> "" Then ''CCode|fffd||303|J|fffd|e|fffd|S|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If InStr(strCCodeKind, ",") <> 0 Then ''|fffd||fffd||fffd||fffd||fffd|J|fffd|e|fffd|S|fffd||fffd|
                        blnMatch = False
                        strSplit = Split(strCCodeKind, ",")
                        For Each strValue In strSplit
                            If InStr(Cells(lngRowIndex, 12).Value, strValue) <> 0 Then
                                blnMatch = True
                                Exit For
                            End If
                        Next strValue
                        Erase strSplit
                        If blnMatch = False Then
                            strMessage = c_strMSG_CCODE_KIND
                            Cells(lngRowIndex, 12).Activate
                            GoTo LBL_ERR
                        End If
                    Else
                        If InStr(Cells(lngRowIndex, 12).Value, strCCodeKind) = 0 Then
                            strMessage = c_strMSG_CCODE_KIND
                            Cells(lngRowIndex, 12).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            End If
            
            ''LinkCode
            If blnLCode = True Then
                Select Case strLCodeKind
                Case "IV"
                    strMessage = c_strMSG_IVLinkCODE
                Case "AS"
                    strMessage = c_strMSG_ASLinkCODE
                Case "SC"
                    strMessage = c_strMSG_SBLinkCODE
                Case "RM"
                    strMessage = c_strMSG_RMLinkCODE
                Case "PP"
                    strMessage = c_strMSG_PRLinkCODE
                Case "FA"
                    strMessage = c_strMSG_FALinkCODE
                End Select
            End If
            If Cells(lngRowIndex, 14).Value = "" Then
                If blnLCode = True Then
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERR
                End If
            Else
                If blnLCode = False Then ''|fffd|s|fffd|v LinkCode
                    strMessage = c_strMSG_NOLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERR
                Else
                    If Not IsNumeric(Mid$(Cells(lngRowIndex, 14).Value, 5, 5)) Then
                        strMessage = strMessage & "(Unknown format!)"
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If strAcCode <> c_strACRM_SndHeadCode And _
                       Not IsNumeric(Right$(Cells(lngRowIndex, 14).Value, 2)) Then
                        strMessage = strMessage & "(Unknown format!)"
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If InStr(Right$(Cells(lngRowIndex, 14).Value, 5), strLCodeKind) = 0 Then
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If Len(Cells(lngRowIndex, 14).Value) <> 14 Then
                        strMessage = c_strMSG_RIGHTLCODE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If fg_IsExistOfficeCode(Left$(Cells(lngRowIndex, 14).Value, 7)) <> True Then
                        strMessage = c_strMSG_ERRLCodeOFFICE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If Left$(Cells(lngRowIndex, 14).Value, 7) <> g_strOfficeCode Then
                        If (strLCodeKind = "PP") Then
                            strMessage = strMessage & "(Other Office LinkCode)"
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                        If (strLCodeKind = "RM") And _
                           (strAcCode = c_strACRM_RecHeadCode Or strAcCode = c_strACRM_RecOtherCode) Then
                            strMessage = strMessage & "(Other Office LinkCode)"
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                    ' 2004/10/28 add
                    ' LinkCode|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||a347||fffd||141|A|fffd||fffd||fffd|m|fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
                    If strLCodeKind <> "RM" And strLCodeKind <> "FA" Then
                    
                        If (fg_CheckSameLinkPayment(Me, Cells(lngRowIndex, 14).Value) = True) Then
                            strMessage = c_strMSG_SAMEPAYLINKCODE
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            End If

            ''NK/JV
            If Cells(lngRowIndex, 17).Value = "" Then
                strMessage = c_strMSG_NKJV
                Cells(lngRowIndex, 17).Activate
                GoTo LBL_ERR
            End If
            
            ''Claim
            If Cells(lngRowIndex, 18).Value = "" Then
                strMessage = c_strMSG_CLAIM
                Cells(lngRowIndex, 18).Activate
                GoTo LBL_ERR
            End If
            
            ''Paid,Received
            If (Cells(lngRowIndex, 19).Value = "") And (Cells(lngRowIndex, 20).Value = "") Then
                strMessage = c_strMSG_DECEIMAL_NUM
                Cells(lngRowIndex, 19).Activate
                GoTo LBL_ERR
            End If
            
            ''Balance|fffd|l|fffd||315||6d1||fffd|
            If lngInputLastRow < lngRowIndex Then
                curBalance = Cells(lngRowIndex, 21).Value
                lngInputLastRow = lngRowIndex
            End If
            
            ''|fffd|O|fffd|N|fffd|x|fffd|F|fffd||fffd||fffd||313||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
            If Month(DateValue(Cells(3, 5).Value)) < Cells(lngRowIndex, 2).Value Then
                Cells(lngRowIndex, 2).Activate
                strMessage = "(" & Year(DateValue(Cells(3, 5).Value)) - 1 & "/" _
                            & Format$(Cells(lngRowIndex, 2).Value, "00") & "/" _
                            & Format$(Cells(lngRowIndex, 3).Value, "00") & ")"
                strMessage = c_strMSG_WARNPastMonthPFX & strMessage & c_strMSG_WARNPastMonthSFX
                If (MsgBox(strMessage, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbNo) Then
                    ''|fffd|O|fffd|N|fffd|x|fffd|o|fffd|[|fffd||fffd||fffd|t|fffd|C|fffd||fffd|
                    GoTo LBL_EXIT
                End If
            End If
            
            ''|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||3c2||743|t|fffd||fffd||fffd|O|fffd||3cd|X
            m_blnSetupCellsInProgress = True
            Unprotect Password:=c_strSheetPWD
            Cells(lngRowIndex, 24).Value = 2

            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
            m_blnSetupCellsInProgress = False
            
        Else
            If Cells(lngRowIndex, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd|
                If lngInputLastRow < lngRowIndex Then
                    curBalance = Cells(lngRowIndex, 21).Value
                    lngInputLastRow = lngRowIndex
                End If
            End If
        End If
    Next

    m_curCurrentBalance = curBalance - Cells(8, 21) ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
    If curBalance < 0 Then  ''|fffd|c|fffd||fffd||fffd|}|fffd|C|fffd|i|fffd|X|fffd|`|fffd|F|fffd|b|fffd|N
        strMessage = c_strMSG_WARN_NegativeBal
        If lngInputLastRow >= c_intCBDetailRowST Then
            Cells(lngInputLastRow, 21).Activate
        End If
        MsgBox strMessage, vbExclamation Or vbOKOnly, c_strNAME_SYSTEM
    End If
    f_CheckInputData = True
    Exit Function

LBL_ERR:
    MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
LBL_EXIT:
    f_CheckInputData = False
    Exit Function

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Cash/BankBook|fffd||fffd|LinkCode|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Cash/BankBook|fffd||fffd|LinkCode|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/01/27 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_BookCheckLinkCode( _
) As Boolean
    
    Dim lngRowIndex As Long
    Dim blnRet As Boolean
    Dim curAmount As Currency
    Dim curDrCr As Currency
    Dim strMessage As String
    Dim typAryTRBookData() As clsTransBookData
    Dim intGetCount As Integer
    Dim intCodeKind As Integer
    Dim lngIx As Long
    Dim strCurrency As String
    Dim strCur As String
    Dim strCCode As String
    Dim strValue As String
    Dim strLinkCode As String
    Dim blnChangFlag As Boolean
    Dim blnPartPay As Boolean   ''|fffd||a554||fffd||fffd||fffd||fffd|ITEM|fffd|t|fffd||fffd||fffd|O
    Dim objSheet As Worksheet
    
    ''|fffd||a554||fffd||fffd||fffd||fffd|/|fffd|x|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    blnPartPay = False
    
    f_BookCheckLinkCode = False
    strCurrency = Cells(6, 5).Value
    
    For lngRowIndex = c_intCBDetailRowST To c_lngMAX_ROWINDEX Step 1
        
        strLinkCode = Cells(lngRowIndex, 14).Value
        blnChangFlag = False
        ''ID|fffd||202||fffd||fffd||310|V|fffd|K|fffd||315||3cd|X|fffd|f|fffd|[|fffd|^|fffd||141|ALinkCode|fffd||fffd||fffd||752||fffd||3c2||fffd|
        If Cells(lngRowIndex, 24).Value = 2 And Cells(lngRowIndex, 23).Value = "" And strLinkCode <> "" Then
            
            intCodeKind = fg_CheckLinkCodeKind(strLinkCode)
            Select Case intCodeKind
            Case GLNK_IV
                If Cells(lngRowIndex, 20).Value = "" Then ''Received
                    strMessage = c_strMSG_RECV_NUM
                    Cells(lngRowIndex, 20).Activate
                    GoTo LBL_ERROR
                End If
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                    strMessage = c_strMSG_IVLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                ''SHEET|fffd||fffd||fffd||253||fffd||fffd||fffd|LINKCODE|fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|X|fffd|V|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd||fffd|CHECK
                Set objSheet = ThisWorkbook.Sheets(g_strArywsName(GLED_CB))
                If (fg_CheckSameLinkPayment(objSheet, strLinkCode, lngRowIndex) = True) Then
                    ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
                    strMessage = c_strMSG_SAMEPAYLINKCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                ''|fffd||7cb||fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|z|fffd||64fe|
                curDrCr = 0
                blnRet = fg_GetLedgerDatabyLinkCode(strCurrency, strLinkCode, intGetCount, typAryTRBookData)
                If blnRet And intGetCount > 0 Then
                    ''|fffd||7cb||fffd||fffd||30f|o|fffd|[|fffd||153||fffd||fffd||fffd|LinkCode|fffd||142||313||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||fffd||fffd||248||a554||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|ITEM
                    blnPartPay = True
                    For lngIx = 0 To intGetCount - 1
                        'curDrCr = curDrCr + typAryTRBookData(lngIx).m_curPaid - typAryTRBookData(lngIx).m_curReceived
                        curDrCr = curDrCr + typAryTRBookData(lngIx).m_curReceived
                    Next
                    Erase typAryTRBookData
                End If
                If curAmount > (curDrCr + Cells(lngRowIndex, 20).Value) Then
                    ''|fffd||fffd||fffd|z|fffd|s|fffd||fffd|
                    If (MsgBox(c_strMSG_LINK_AMOUNT00 & vbCrLf & c_strMSG_LINK_AMOUNT02, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
                    'If (MsgBox(c_strMSG_LINK_AMOUNT02, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
                        ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd| |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||202||fffd|
                        blnPartPay = True
                        blnChangFlag = True
                    Else
                        ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||202||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                        sg_DisideEditWay lngRowIndex, 20, GLED_BR, GLED_CB
                        Exit Function
                    End If
                ElseIf curAmount < (curDrCr + Cells(lngRowIndex, 20).Value) Then
                    ''|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                    sg_DisideEditWay lngRowIndex, 20, GLED_BR, GLED_CB
                    Exit Function
                Else
                    ''|fffd||fffd||fffd|z|fffd||fffd|v |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||fffd|
                    If (blnPartPay = True) Then
                        blnPartPay = False
                    End If
                    blnChangFlag = True
                End If
            Case GLNK_AS
                strMessage = c_strMSG_ASLinkCODE
                If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                    strMessage = c_strMSG_PAID_NUM
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                End If
                'ActualPayment|fffd||34d|l|fffd||fffd||fffd||fffd||fffd||202||fffd|
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                    strMessage = c_strMSG_ASLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                ''Paid|fffd||fffd|Invoice|fffd|C|fffd||fffd||fffd||154||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||348||fffd|v|fffd||fffd||fffd||202||fffd|
                If Cells(lngRowIndex, 19).Value <> curAmount Then  ''|fffd||fffd||fffd|z|fffd||188||fffd|v|fffd||fffd||fffd||202||fffd|
                    If vbYes <> MsgBox(c_strMSG_AS_LINKQUEST, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                        Cells(lngRowIndex, 14).Activate
                        Exit Function
                    End If
                End If
                If Cells(lngRowIndex, 12).Value <> strCCode Then
                    strMessage = c_strMSG_LINK_CCode
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERROR
                End If
                blnChangFlag = True
            Case GLNK_SC
                If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                    strMessage = c_strMSG_PAID_NUM
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                End If
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                    strMessage = c_strMSG_SBLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                If Cells(lngRowIndex, 12).Value <> strCCode Then
                    strMessage = c_strMSG_LINK_CCode
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERROR
                End If
                ''|fffd||7cb||fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|z|fffd||64fe|
                curDrCr = 0
                blnRet = fg_GetLedgerDatabyLinkCode(strCurrency, strLinkCode, intGetCount, typAryTRBookData)
                If blnRet And intGetCount > 0 Then
                    ''|fffd||7cb||fffd||fffd||30f|o|fffd|[|fffd||153||fffd||fffd||fffd|LinkCode|fffd||142||30e|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A|fffd||fffd||fffd||248||a554||fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|ITEM
                    blnPartPay = True
                    For lngIx = 0 To intGetCount - 1
                        'curDrCr = curDrCr + typAryTRBookData(lngIx).m_curPaid - typAryTRBookData(lngIx).m_curReceived
                        curDrCr = curDrCr + typAryTRBookData(lngIx).m_curPaid
                    Next
                    Erase typAryTRBookData
                End If
                If curAmount > (curDrCr + Cells(lngRowIndex, 19).Value) Then
                'If curAmount <> (Cells(lngRowIndex, 19).Value - Cells(lngRowIndex, 20).Value) Then
                    If (MsgBox(c_strMSG_LINK_AMOUNT00 & vbCrLf & c_strMSG_LINK_AMOUNT02, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbYes) Then
                        ''|fffd||a554||fffd|x|fffd||fffd||fffd||182||fffd||fffd||fffd| |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||202||fffd|
                        blnPartPay = True
                        blnChangFlag = True
                    Else
                        ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||202||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                        sg_DisideEditWay lngRowIndex, 19, GLED_SC, GLED_CB
                        Exit Function
                    End If
                ElseIf curAmount < (curDrCr + Cells(lngRowIndex, 19).Value) Then
                    ''|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd| |fffd||fffd| LED4|fffd|C|fffd||fffd|/BANKBOOK|fffd|C|fffd||fffd|
                    sg_DisideEditWay lngRowIndex, 19, GLED_SC, GLED_CB
                    Exit Function
                Else
                    ''|fffd||fffd||fffd|z|fffd||fffd|v |fffd||fffd| |fffd|U|fffd||582||fffd||fffd||fffd|
                    If (blnPartPay = True) Then
                        blnPartPay = False
                    End If
                    blnChangFlag = True
                End If
                
            Case GLNK_RM
                strMessage = c_strMSG_RMLinkCODE
                If Cells(lngRowIndex, 10).Value = c_strACRM_RecHeadCode Or _
                   Cells(lngRowIndex, 10).Value = c_strACRM_RecOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||c2bce||fffd|
                    If Cells(lngRowIndex, 20).Value = "" Then ''Received
                        strMessage = c_strMSG_RECV_NUM
                        Cells(lngRowIndex, 20).Activate
                        GoTo LBL_ERROR
                    End If
                
                    If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode) <> True) Then
                        strMessage = c_strMSG_RMLinkCODE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERROR
                    End If
                    If curAmount = 0 Then ''|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd|f|fffd|[|fffd|^|fffd||202||fffd|
                        strMessage = c_strMSG_RM_NOCode
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERROR
                    End If
                    
                    If Cells(lngRowIndex, 20).Value <> curAmount Then  ''|fffd||2d7||fffd||fffd|z|fffd||188||fffd|v|fffd||fffd||fffd||202||fffd|
                        strMessage = "[" & strCur & ":" & curAmount & "] " & c_strMSG_RM_LINKQUEST
                        If vbYes <> MsgBox(strMessage, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                            Cells(lngRowIndex, 14).Activate
                            Exit Function
                        End If
                    End If
                    
                    ''|fffd||fffd|ConnectionCode|fffd||fffd||fffd|K|fffd|v|fffd|H
                    blnChangFlag = True
                End If
                If Cells(lngRowIndex, 10).Value = c_strACRM_SndHeadCode Or _
                   Cells(lngRowIndex, 10).Value = c_strACRM_SndOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                        strMessage = c_strMSG_PAID_NUM
                        Cells(lngRowIndex, 19).Activate
                        GoTo LBL_ERROR
                    End If
                    
                    ''|fffd||fffd|ConnectionCode|fffd||fffd||fffd|K|fffd|v|fffd|H
                    If InStr(Cells(lngRowIndex, 10).Value, g_strOfficeCode) <> 0 Then ''|fffd||fffd|Office|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
                        ''|fffd||fffd||fffd||fffd|Office|fffd||311||fffd||fffd||fffd||fffd||fffd||34b||fffd||fffd||fffd|?
                    End If
                End If
            Case GLNK_PP
                strMessage = c_strMSG_PRLinkCODE
                If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                    strMessage = c_strMSG_PAID_NUM
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                End If
                If (fg_GetLinkCodeAmount(strLinkCode, curAmount, strCur, strCCode, strValue) <> True) Then
                    strMessage = c_strMSG_PRLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERROR
                End If
                If strValue <> Cells(lngRowIndex, 9).Value Then ''WBS |fffd|s|fffd||fffd|v
                    strMessage = c_strMSG_LINK_WBS & vbCrLf & "Please select Code (" & strValue & ")."
                    Cells(lngRowIndex, 9).Activate
                    GoTo LBL_ERROR
                End If
                If Cells(lngRowIndex, 12).Value <> strCCode Then
                    strMessage = c_strMSG_LINK_CCode
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERROR
                End If
                If curAmount <> Cells(lngRowIndex, 19).Value Then
                    '|fffd||fffd||fffd|z|fffd|s|fffd||fffd|v
                    strMessage = c_strMSG_LINK_AMOUNT00
                    Cells(lngRowIndex, 19).Activate
                    GoTo LBL_ERROR
                Else
                    blnChangFlag = True
                End If
            Case GLNK_FA
                strMessage = c_strMSG_FALinkCODE
                strMessage = c_strMSG_FALinkCODE
                If Cells(lngRowIndex, 10).Value = c_strACFA_BuyCode Then ''|fffd||152||8391||fffd|Y|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                        strMessage = c_strMSG_PAID_NUM
                        Cells(lngRowIndex, 19).Activate
                        GoTo LBL_ERROR
                    End If
                ElseIf Cells(lngRowIndex, 10).Value = c_strACFA_SaleCode Then ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(lngRowIndex, 20).Value = "" Then ''Paid
                        strMessage = c_strMSG_RECV_NUM
                        Cells(lngRowIndex, 20).Activate
                        GoTo LBL_ERROR
                    End If
                End If
            End Select
            
            If blnChangFlag Then
                m_blnMasterUpdate = True
                m_blnSetupCellsInProgress = True
                Unprotect Password:=c_strSheetPWD
                ''4|fffd||348||a554||fffd||fffd||fffd||fffd|(Invoice)/|fffd||fffd||fffd||fffd||fffd|x|fffd||fffd|(SubCon)
                If (blnPartPay = True) Then
                    Cells(lngRowIndex, 24).Value = 4  ''Dirty|fffd|t|fffd||fffd||fffd|O|fffd||3cd|X(|fffd|U|fffd||582||202||fffd|/|fffd||44a0||fffd|X|fffd|V)
                Else
                    Cells(lngRowIndex, 24).Value = 3  ''Dirty|fffd|t|fffd||fffd||fffd|O|fffd||3cd|X(|fffd|U|fffd||fffd|/|fffd||44a0||fffd|X|fffd|V)
                End If
                Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                m_blnSetupCellsInProgress = False
            End If
        End If
    Next

    f_BookCheckLinkCode = True
    Exit Function
    
LBL_ERROR:
    MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    Exit Function
End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/05/30 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||58e|~
'   2003/10/07 : Knowlbo Suzuki : LedgerCode|fffd||3cd|X|fffd||fffd||fffd||24c||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd|Code|fffd||3d0||fffd||fffd||752||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    Dim lngIndex As Long
    Dim blnSelectDescription As Boolean
    Dim blnSetACCode As Boolean
    Dim blnSetACName As Boolean
    Dim blnSetNKorJV As Boolean
    Dim blnSetChgCode As Boolean
    Dim blnSetData As Boolean
    Dim lngTokenIdx As Long
    Dim blnSetConnName As Boolean
    Dim blnSetConnCode As Boolean
    Dim strValue As String
        
    blnSetData = False
    blnSetACCode = False
    blnSetACName = False
    blnSelectDescription = False
    blnSetNKorJV = False
    blnSetChgCode = False
    blnSetConnName = False
    blnSetConnCode = False

    ''TargetMonth
    If rngTarget.Row = 3 And rngTarget.Column = 5 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetData = True
    
    ''LedgerCodeNo.
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 5 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetData = True
    
    ''Detail
    ElseIf rngTarget.Row >= c_intCBDetailRowST Then
    
        ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(3, 5).Value = "" Then
            MsgBox c_strMSG_MONTH, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(3, 5).Activate
            Exit Function
        End If
    
        ''|fffd||38f||fffd|Book|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(4, 5).Value = "" Then
            MsgBox c_strMSG_LEDCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(4, 5).Activate
            Exit Function
        End If
        
        If f_IsNullRow(rngTarget.Row - 1) Then ''|fffd||fffd||fffd|O|fffd|s|fffd||fffd||fffd||d4482||30f||a347|
            MsgBox c_strMSG_BLANKLINE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
        
        blnSetNKorJV = True
        blnSetChgCode = True
        Select Case rngTarget.Column
        
        Case 2 ''Month
        Case 3 ''Date
        Case 4 ''Description Item
            blnSelectDescription = True
        Case 7 ''Description Detailes
        Case 9 ''WBSCode
            blnSetChgCode = False
        Case 10 ''AccountCode
            blnSetACCode = True
        Case 11 ''AccountName
            blnSetACName = True
        Case 12 ''ConnectionCode
            If Len(rngTarget.Value) >= 3 Then
                m_blnSetupCellsInProgress = True
                strValue = UCase$(Left$(rngTarget.Value, 3))
                If strValue = "NKS" Then
                    strValue = strValue & Mid(rngTarget.Value, 4)
                Else
                    strValue = UCase$(rngTarget.Value)
                End If
                rngTarget.Value = strValue
                m_blnSetupCellsInProgress = False
            End If
            blnSetConnCode = True
        Case 13 ''ConnectionName
            blnSetConnName = True
        
        Case 14 ''LedgerLinkCode
        Case 15 ''Evi.No.
        
        Case 16 ''CheckNo.
        Case 17 ''NK/JV
            blnSetNKorJV = False
        Case 18 ''Claim
            If rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                strValue = UCase$(rngTarget.Value)
                If strValue <> "Y" And strValue <> "N" Then
                    MsgBox c_strMSG_CLAIM, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    rngTarget.Value = ""
                    m_blnSetupCellsInProgress = False
                    f_onChangeCell = False
                    rngTarget.Activate
                    Exit Function
                End If
                rngTarget.Value = strValue
                m_blnSetupCellsInProgress = False
            End If
        Case 19 ''Paid
            ''Paid/Received|fffd|Q|fffd|d|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
            If Cells(rngTarget.Row, 20).Value <> "" And rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                Cells(rngTarget.Row, 20).Value = ""
                m_blnSetupCellsInProgress = False
                'f_onChangeCell = False
                'Exit Function
            End If
        Case 20 ''Received
            ''Paid/Received|fffd|Q|fffd|d|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
            If Cells(rngTarget.Row, 19).Value <> "" And rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                Cells(rngTarget.Row, 19).Value = ""
                m_blnSetupCellsInProgress = False
                'f_onChangeCell = False
                'Exit Function
            End If
        End Select
    End If

    ''DescriptionItem |fffd||fffd| ACCode|fffd||752||fffd|
    If blnSelectDescription Then
        
        If g_strMapACCode <> "" Then
            ''JV Book |fffd||702||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
            If Cells(rngTarget.Row, 23).Value <> "" Or Cells(7, 9).Value = c_strPurposeJV Then
                If fg_GetIndexFromTokenInCSV(g_strMapACCode, g_strLCodeIndispensableAccount) >= 0 Then
                    ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    rngTarget.Activate
                    f_onChangeCell = False
                    Exit Function
                End If
            End If
        End If
        m_blnSetupCellsInProgress = True
        If rngTarget.Value = "" Then
            Cells(rngTarget.Row, 10).Value = ""
            Cells(rngTarget.Row, 11).Value = ""
        Else
            Cells(rngTarget.Row, 10).Value = g_strMapACCode
            Cells(rngTarget.Row, 11).Value = g_strMapACName
        End If

        If g_strMapWarn <> "" Then        ''Warning|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
            MsgBox g_strMapWarn, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        End If
        m_blnSetupCellsInProgress = False
        g_strMapACCode = ""
        g_strMapACName = ""
        g_strMapWarn = ""
    End If

    ''|fffd||fffd||fffd|O|fffd|v|fffd|a|fffd|r|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
    If blnSetChgCode And Cells(rngTarget.Row, 9).Value = "" And rngTarget.Value <> "" And rngTarget.Row <> c_intCBDetailRowST Then
        m_blnSetupCellsInProgress = True

        If Cells(rngTarget.Row - 1, 9).Value <> "" Then
            Cells(rngTarget.Row, 9).Value = Cells(rngTarget.Row - 1, 9).Value
        End If
        m_blnSetupCellsInProgress = False
    End If

    If blnSetACCode Or blnSetACName Then
        m_blnSetupCellsInProgress = True
        If blnSetACCode Then
            If rngTarget.Value <> "" Then
                ''JV Book |fffd||702||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
                If Cells(rngTarget.Row, 23).Value <> "" Or Cells(7, 9).Value = c_strPurposeJV Then
                    If fg_GetIndexFromTokenInCSV(rngTarget.Value, g_strLCodeIndispensableAccount) >= 0 Then
                        ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                        MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                        rngTarget.Activate
                        f_onChangeCell = False
                        m_blnSetupCellsInProgress = False
                        Exit Function
                    End If
                End If
            End If
            For lngIndex = 0 To UBound(g_strAryAcCode)
                If rngTarget.Value = g_strAryAcCode(lngIndex) Then
                    rngTarget.Offset(0, 1).Value = g_strAryAcName(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcCode) Then
                rngTarget.Offset(0, 1).ClearContents
            End If
        Else
            For lngIndex = 0 To UBound(g_strAryAcName)
                If rngTarget.Value = g_strAryAcName(lngIndex) Then
                    ''JV Book |fffd||702||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
                    If Cells(rngTarget.Row, 23).Value <> "" Or Cells(7, 9).Value = c_strPurposeJV Then
                        If fg_GetIndexFromTokenInCSV(g_strAryAcCode(lngIndex), g_strLCodeIndispensableAccount) >= 0 Then
                            ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                            MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                            rngTarget.Activate
                            f_onChangeCell = False
                            m_blnSetupCellsInProgress = False
                            Exit Function
                        End If
                    End If
                    rngTarget.Offset(0, -1).Value = g_strAryAcCode(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcName) Then
                rngTarget.Offset(0, -1).ClearContents
            End If
        End If
        m_blnSetupCellsInProgress = False
    End If
    
    ''LinkcodeSelect|fffd|{|fffd|^|fffd||fffd||fffd||fffd||515||3cd|X
    If blnSelectDescription Or blnSetACCode Or blnSetACName Then
        If Cells(rngTarget.Row, 10).Value <> "" Then ''|fffd||fffd||fffd||fffd||216||693||fffd||fffd||34d||3c2||fffd|
            lngIndex = fg_GetIndexFromTokenInCSV(Cells(rngTarget.Row, 10).Value, g_strLCodeIndispensableAccount)
            If lngIndex >= 0 Then
                CmdBtnLinkCodeSelect.Enabled = True
            End If
            If Cells(rngTarget.Row, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
                CmdBtnLinkCodeSelect.Enabled = False
            End If
        End If
    End If
    
    If blnSetConnCode Or blnSetConnName Then
        m_blnSetupCellsInProgress = True
        If blnSetConnCode Then
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnCodeTSV)
            rngTarget.Offset(0, 1).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnNameTSV)
        Else
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnNameTSV)
            rngTarget.Offset(0, -1).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnCodeTSV)
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''NKorJV |fffd||310||752||fffd|
    If blnSetNKorJV And Cells(rngTarget.Row, 17).Value = "" And rngTarget.Value <> "" Then
        m_blnSetupCellsInProgress = True
        If Cells(7, 9).Value = c_strPurposeNK Then
            Cells(rngTarget.Row, 17).Value = "NK"
        Else
            Cells(rngTarget.Row, 17).Value = "JV"
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        If rngTarget.Row = 4 Then ''LedgerCode Change
            ''|fffd|w|fffd|b|fffd|_|fffd|Z|fffd||fffd||fffd||3cd|X
            lngTokenIdx = fg_GetIndexFromTokenInCSV(rngTarget.Value, rngTarget.Validation.Formula1)
            
            If lngTokenIdx < 0 Then
                Cells(7, 9).Value = ""               ''This Ledger for
                Cells(8, 9).Value = ""               ''Free Memo
                Cells(5, 5).Value = ""               ''Casher
                Cells(6, 5).Value = ""               ''Currency
            Else
                ''This Ledger for
                If g_typAryCBInfo(lngTokenIdx).m_intPurpose = 0 Then
                    Cells(7, 9).Value = c_strPurposeNK
                Else
                    Cells(7, 9).Value = c_strPurposeJV
                End If
                Cells(8, 9).Value = g_typAryCBInfo(lngTokenIdx).m_strMemo      ''Free Memo
                Cells(5, 5).Value = g_typAryCBInfo(lngTokenIdx).m_strCasher    ''Casher
                Cells(6, 5).Value = g_typAryCBInfo(lngTokenIdx).m_strCurrency  ''Currency
                m_intPurpose = g_typAryCBInfo(lngTokenIdx).m_intPurpose         ''Purpose
                m_strBookAcCode = g_typAryCBInfo(lngTokenIdx).m_strAcCode         ''CashBankAccountCode
            End If
        End If
        
        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        s_SetupDetailCells

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|
    If rngTarget.Row >= c_intCBDetailRowST And rngTarget.Row <= c_lngMAX_ROWINDEX Then
        m_blnSetupCellsInProgress = True
        Cells(rngTarget.Row, 24) = 1
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If
    
    f_onChangeCell = True
End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/05/30 : Knowlbo Suzuki : |fffd|X|fffd|V|fffd||fffd||256||fffd||fffd||5c3|Z|fffd||fffd||fffd||103|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||1c9||fffd|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim datTarget As Date
    Dim datValue As Date
    Dim strMSG As String
    Dim strLedID As String
    Dim lngRecIDNo As Long
    Dim strData As String
    Dim blnUpdate As Boolean
    Dim intCount As Integer
    Dim blnInsert As Boolean
    Dim strCurrency As String
    Dim datPrNow As Date

    datPrNow = Now()
    g_blnPartPayment = False    ''|fffd||a554||fffd||fffd||fffd||fffd|/|fffd|x|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    s_CheckSheetUpdate    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N

    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData() Then
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''LinkCode|fffd||303|`|fffd|F|fffd|b|fffd|N
    If Not f_BookCheckLinkCode() Then
        CmdBtnDbUpDate.Visible = True
        sg_SetScreenUpdate True
        Exit Sub
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If g_blnR3IfEnable Then ''R3IF |fffd|L|fffd||fffd|
        strMSG = c_strQUESTION_UPDATE
    Else                    ''R3IF |fffd||fffd||fffd||fffd|
        strMSG = "Now Setting is Disable R/3 Interface!" & vbCrLf & c_strQUESTION_UPDATE
    End If
    If vbNo = MsgBox(strMSG, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    blnInsert = False
    sg_SetScreenUpdate False
    
    sg_GetCurrentRecIDNo GLED_CB ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    datTarget = DateValue(Cells(3, 5).Value)
    strLedID = Cells(4, 5).Value
    strCurrency = Cells(6, 5).Value
    
    ''Book|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_CashBook & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedID)
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_CashBook
        GoTo LBL_ERR
    End If

    ''DB|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V=================================================
    m_blnSetupCellsInProgress = True
    For lngRowIndex = c_intCBDetailRowST To c_lngMAX_ROWINDEX Step 1
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            If f_IsNullRow(lngRowIndex) Then
                ''NULL|fffd|s|fffd||202||302||143|f|fffd|[|fffd|^|fffd||d3dc|(|fffd||fffd||fffd||389||fffd|)
            Else
                ''|fffd|X|fffd|V/|fffd||1c9||fffd|
                blnUpdate = False
                adoRs.Filter = adFilterNone
                
                ''|fffd|X|fffd|V
                If Cells(lngRowIndex, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd||fffd||fffd|
                    lngRecIDNo = Cells(lngRowIndex, 23).Value
                    adoRs.Filter = "ID=" & lngRecIDNo
                    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                        objdba.SQLString = fg_setLedgerCBTHistorySQLString(adoRs, c_strTBL_CashBookHST, datPrNow)
                        If (objdba.ExecuteSQL(adoCn) <> 0) Then
                            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_CashBook
                            GoTo LBL_ERR
                        End If
                    Else
                        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_CashBook
                        GoTo LBL_ERR
                    End If
                    blnUpdate = True
                ''|fffd||1c9||fffd|
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                    lngRecIDNo = g_lngAryCurRecIDNumber(GLED_CB)
                    lngRecIDNo = lngRecIDNo + 1
                    g_lngAryCurRecIDNumber(GLED_CB) = lngRecIDNo
                    blnUpdate = True
                    blnInsert = True
                End If
                If blnUpdate Then
                
                    ''|fffd|o|fffd|[|fffd||fffd||fffd|t|fffd||30d||c42c|
                    If Month(datTarget) < Cells(lngRowIndex, 2).Value Then
                        datValue = DateSerial(Year(datTarget) - 1, _
                                              Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                    Else
                        datValue = DateSerial(Year(datTarget), _
                                              Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                    End If
                    
                    
                    ''--AutoTransfer---------------------------------------------------->>
                    If (Cells(lngRowIndex, 24).Value = 3) Or (Cells(lngRowIndex, 24).Value = 4) Then
                        Select Case fg_CheckLinkCodeKind(Cells(lngRowIndex, 14).Value)
                        Case GLNK_IV ''Invoice
                            If (Cells(lngRowIndex, 24).Value = 4) Then      ''|fffd||a554||fffd||fffd||fffd||fffd|ITEM
                                g_blnPartPayment = True
                            ElseIf (Cells(lngRowIndex, 24).Value = 3) Then  ''|fffd||fffd||fffd||fffd||20a|O|fffd||fffd|ITEM
                                g_blnPartPayment = False
                            End If
                            ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd|A|fffd|U|fffd||582||202||fffd|
                            If (g_blnPartPayment = False) Then
                                intCount = 0
                                fg_GetLedgerDatabyLinkCode strCurrency, _
                                        Cells(lngRowIndex, 14).Value, intCount, m_typAryTRBookData
                                ReDim Preserve m_typAryTRBookData(intCount)
                                m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                                m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                                sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                                If (fg_InvoiceTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData) <> True) Then
                                    GoTo LBL_ERR
                                End If
                            End If
                            If fg_SetInvoiceStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                            
                        Case GLNK_AS ''Associate
                            intCount = 0
                            ReDim Preserve m_typAryTRBookData(intCount)
                            m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                            m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                            sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                            If (fg_AssociateTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData(intCount)) <> True) Then
                                GoTo LBL_ERR
                            End If
                            If fg_SetAssociateStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, _
                                    Cells(lngRowIndex, 19).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        Case GLNK_SC ''Sub-contractor
                            If (Cells(lngRowIndex, 24).Value = 4) Then      ''|fffd||a554||fffd|x|fffd||fffd|ITEM
                                g_blnPartPayment = True
                            ElseIf (Cells(lngRowIndex, 24).Value = 3) Then  ''|fffd||fffd||fffd||fffd||20a|O|fffd||fffd|ITEM
                                g_blnPartPayment = False
                            End If

                            ''|fffd||a554||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd|A|fffd|U|fffd||582||202||fffd|
                            If (g_blnPartPayment = False) Then
                                intCount = 0
                                fg_GetLedgerDatabyLinkCode strCurrency, _
                                        Cells(lngRowIndex, 14).Value, intCount, m_typAryTRBookData
                                ReDim Preserve m_typAryTRBookData(intCount)
                                m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                                m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                                sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                                If (fg_SubconTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData) <> True) Then
                                    GoTo LBL_ERR
                                End If
                            End If
                            If fg_SetSubConPaymentStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        
                        Case GLNK_RM ''Remittance
                            If Cells(lngRowIndex, 10).Value = c_strACRM_RecHeadCode Or _
                               Cells(lngRowIndex, 10).Value = c_strACRM_RecOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||c2bce||fffd|
                                If fg_SetPastRemittanceStatus(adoCn, objdba, Cells(lngRowIndex, 14).Value, strCurrency, _
                                    Cells(lngRowIndex, 20).Value, datValue) = False Then
                                    GoTo LBL_ERR
                                End If
                             End If
                        Case GLNK_PP ''PrePaid
                            intCount = 0
                            ReDim Preserve m_typAryTRBookData(intCount)
                            m_typAryTRBookData(intCount).m_datTargetPeriod = datTarget
                            m_typAryTRBookData(intCount).m_datLedgerDate = datValue
                            sg_SetTrDataFromRange Cells(lngRowIndex, 2), m_typAryTRBookData(intCount)
                            If (fg_PrepaidTransfer(adoCn, objdba, Cells(lngRowIndex, 14).Value, m_typAryTRBookData, True) <> True) Then
                                GoTo LBL_ERR
                            End If
                            If fg_SetPrepaidPaymentDate(adoCn, objdba, Cells(lngRowIndex, 14).Value, datValue) = False Then
                                GoTo LBL_ERR
                            End If
                        Case GLNK_FA ''Fixed Assets
                        Case Else
                            GoTo LBL_ERR
                        End Select
                        Erase m_typAryTRBookData
                    End If
                    ''--AutoTransfer----------------------------------------------------<<
                    
                    adoRs.Fields("ID").Value = lngRecIDNo                   ''ID
                    adoRs.Fields("OfficeCode").Value = g_strOfficeCode      ''OfficeCode
                    adoRs.Fields("LedgerCode").Value = strLedID             ''LedgerCode
                    adoRs.Fields("TargetPeriod").Value = datTarget          ''TargetPeriod
                    adoRs.Fields("LedgerDate").Value = datValue             ''LedgerDate
                    If Cells(lngRowIndex, 4).Value <> "" Then               ''Description
                        strData = CStr(Cells(lngRowIndex, 4).Value)
                        adoRs.Fields("Description").Value = strData
                    Else
                        adoRs.Fields("Description").Value = Null
                    End If
                    strData = c_strKwdModifyNK
                    If Cells(lngRowIndex, 7).Value <> "" Then
                        If Left$(CStr(Cells(lngRowIndex, 7).Value), 4) = c_strKwdModifyBR Or _
                           Left$(CStr(Cells(lngRowIndex, 7).Value), 4) = c_strKwdModifyNK Then
                            strData = strData & Mid$(Cells(lngRowIndex, 7).Value, 5)
                        Else
                            strData = strData & CStr(Cells(lngRowIndex, 7).Value)
                        End If
                        If Len(strData) > 128 Then strData = Left$(strData, 128)
                    End If
                    adoRs.Fields("Details").Value = strData                         ''Details
                    adoRs.Fields("WBSCode").Value = Cells(lngRowIndex, 9).Value     ''WBSCode
                    strData = CStr(Cells(lngRowIndex, 10).Value)                    ''AccountCode
                    adoRs.Fields("AccountCode").Value = strData
                    strData = Cells(lngRowIndex, 11).Value                          ''AccountName
                    adoRs.Fields("AccountName").Value = strData
                    If Cells(lngRowIndex, 12).Value <> "" Then                      ''ConnectionCode
                        strData = Cells(lngRowIndex, 12).Value
                        adoRs.Fields("ConnectionCode").Value = strData
                    Else
                        adoRs.Fields("ConnectionCode").Value = Null
                    End If
                    If Cells(lngRowIndex, 13).Value <> "" Then                      ''ConnectionName
                        strData = Cells(lngRowIndex, 13).Value
                        adoRs.Fields("ConnectionName").Value = strData
                    Else
                        adoRs.Fields("ConnectionName").Value = Null
                    End If
                    If Cells(lngRowIndex, 14).Value <> "" Then                      ''LedgerLinkCode
                        strData = Cells(lngRowIndex, 14).Value
                        adoRs.Fields("LedgerLinkCode").Value = strData
                    Else
                        adoRs.Fields("LedgerLinkCode").Value = Null
                    End If
                    If Cells(lngRowIndex, 15).Value <> "" Then                      ''EviNo
                        adoRs.Fields("EviNo").Value = Cells(lngRowIndex, 15).Value
                    Else
                        adoRs.Fields("EviNo").Value = Null
                    End If
                    If Cells(lngRowIndex, 16).Value <> "" Then                      ''CheckNo
                        adoRs.Fields("CheckNo").Value = Cells(lngRowIndex, 16).Value
                    Else
                        adoRs.Fields("CheckNo").Value = Null
                    End If
                    adoRs.Fields("NKJV").Value = Cells(lngRowIndex, 17).Value       ''NKJV
                            
                    If Cells(lngRowIndex, 18).Value = "Y" Then                      ''Claim
                        adoRs.Fields("Claim").Value = "1"
                    Else
                        adoRs.Fields("Claim").Value = "0"
                    End If
    
                    If Cells(lngRowIndex, 19).Value <> "" Then                      ''Paid
                        adoRs.Fields("Paid").Value = Cells(lngRowIndex, 19).Value
                    Else
                        adoRs.Fields("Paid").Value = 0
                    End If
                    If Cells(lngRowIndex, 20).Value <> "" Then                      ''Received
                        adoRs.Fields("Received").Value = Cells(lngRowIndex, 20).Value
                    Else
                        adoRs.Fields("Received").Value = 0
                    End If
                    adoRs.Fields("ModifyPlace").Value = "1" ''SS_Edit=1
                    adoRs.Fields("InsertDate").Value = datPrNow
                    adoRs.Fields("InsertUID").Value = g_strLoginId
                    
                    adoRs.Fields("IFRequestNo").Value = -1
                    
                    If Cells(7, 9).Value <> c_strPurposeJV Then
                        If (g_blnR3IfEnable = False) Then ''R3IF|fffd||fffd||fffd||fffd|
                            adoRs.Fields("IFSendDate").Value = 1
                            adoRs.Fields("IFRequestNo").Value = -9
                        End If
                    End If
                    adoRs.Update
                    
                    ''|fffd||113||1c2||74d||fffd||fffd||742||fffd||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
                    'Cells(lngRowIndex, 23).Value = lngRecIDNo
                    'Cells(lngRowIndex, 24).Value = ""
                End If
                adoRs.MoveFirst
            End If
        End If
    Next
    Call objdba.closeRecordset(adoRs)
    
    
    If m_blnCreateLinkcode Then
    ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_FA, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerRecID|fffd|X|fffd|V
    If blnInsert Then
        If fg_UpdateCurrentRecIDNo(GLED_CB, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    ''|fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd|c|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|T|fffd|}|fffd||fffd||fffd|j|fffd||6d1||fffd||fffd||fffd||fffd||fffd|
    If fg_UpdateAccountsBalance(strLedID, datTarget, _
                        m_curCurrentBalance, adoCn, objdba) = False Then GoTo LBL_ERR
    
    ''|fffd||fffd|v|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
    If g_blnR3IfEnable Then ''R3IF |fffd|L|fffd||fffd|
        If Cells(7, 9).Value <> c_strPurposeJV Then
            ''|fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||50e||64fe|
            If fg_GetR3FIPeriod(strData) = False Then GoTo LBL_ERR
            If fg_SetR3AccountsData(adoCn, objdba, strLedID, datTarget, _
                                    strCurrency, m_strBookAcCode, strData, False) <> True Then GoTo LBL_ERR
        End If
    End If

    ''SummaryAccount|fffd||c42c|--------------------------------
    If fg_CreateAccountSummaryByLedCode(adoCn, objdba, datTarget, strLedID, strCurrency, _
                                        m_intPurpose, m_strBookAcCode) <> True Then GoTo LBL_ERR

    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    m_blnDirty = False
    
    ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells
    
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    
    m_blnMasterUpdate = False ''Flag|fffd||3cd|X
    m_blnCreateLinkcode = False
    
    ThisWorkbook.Activate
    
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Erase m_typAryTRBookData
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    sg_SetScreenUpdate True
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED1]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    
    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N
    s_CheckSheetUpdate

    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(0) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Connection Code|fffd||48f|W|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Connection Code|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnConnCodeEdit_Click()
    frmConnect_Setting.Show
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
    If g_blnConnCodeEdit = False Then
        GoTo LBL_END
    End If
    
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    
    
    ''ConnectionCode |fffd||113||1c2||74d||fffd||fffd||fffd|
    sg_GetConnectionCodeList
    
    ''ConnectionCode |fffd||110||752||fffd|
    sg_SetupConnCodeCells Me.Range("L" & c_intCBDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                          Me.Range("M" & c_intCBDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                          Me.Range("AC" & c_intCBDetailRowST)

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
LBL_END:
    CmdBtnConnCodeEdit.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCode|fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnLinkCodeSelect_Click()
    Dim lngRowNo As Long
    Dim intKind As Integer
    
    intKind = -1
    If Cells(ActiveCell.Row, 10).Value = "" Then
        GoTo LBL_END
    End If
    lngRowNo = fg_FindSameDataRowNo(Cells(ActiveCell.Row, 10), _
                wsSettings.Range("C2", "C65536"))
    If lngRowNo = 0 Then
        GoTo LBL_END
    End If
    If wsSettings.Cells(lngRowNo, 12).Value <> "" Then
        If InStr(wsSettings.Cells(lngRowNo, 12).Value, "(") = 0 Then
            Select Case wsSettings.Cells(lngRowNo, 12).Value
            Case "IV"
                intKind = GLNK_IV
            Case "AS"
                intKind = GLNK_AS
            Case "SC"
                intKind = GLNK_SC
            Case "RM"
                intKind = GLNK_RM
                If Cells(ActiveCell.Row, 10).Value = c_strACRM_SndHeadCode Then ''|fffd|{|fffd||402||591||fffd||fffd||fffd|
                    Dim strCode As String
                    ''|fffd|{|fffd||402||591||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||356||fffd||fffd||fffd||fffd||152||fffd| "HeaD Office"
                    strCode = g_strOfficeCode & Format$(g_intTargetSysYear Mod 100, "00")
                    strCode = strCode & "RM" & "HDO"
                    m_blnDirty = True
                    m_blnSetupCellsInProgress = True
                    Unprotect Password:=c_strSheetPWD
                    Cells(ActiveCell.Row, 14) = strCode
                    Cells(ActiveCell.Row, 24) = 1
                    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                    m_blnSetupCellsInProgress = False
                    GoTo LBL_END
                End If
                
                If Cells(ActiveCell.Row, 10).Value = c_strACRM_SndOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||591||fffd||fffd||fffd|
                    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||34e||fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_RM_ReqToCode, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(ActiveCell.Row, 14).Activate
                    GoTo LBL_END
                End If
            Case "PP"
                intKind = GLNK_PP
            Case "FA"
                intKind = GLNK_FA
                If Cells(ActiveCell.Row, 10).Value = c_strACFA_SaleCode Then ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
                    ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||34e||fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_FA_SaleCode, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(ActiveCell.Row, 14).Activate
                    GoTo LBL_END
                ElseIf Cells(ActiveCell.Row, 10).Value = c_strACFA_BuyCode Then ''|fffd||152||8391||fffd|Y|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If vbYes <> MsgBox(c_strMSG_FA_BuyNEWCode, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                        Cells(ActiveCell.Row, 14).Activate
                        GoTo LBL_END
                    End If
                    Cells(ActiveCell.Row, 14).Value = fg_CreateLinkCode(GLNK_FA)  ''|fffd||152||8391||fffd|YLinkCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    m_blnMasterUpdate = True
                    m_blnCreateLinkcode = True
                    GoTo LBL_END
                End If
                
            End Select
        End If
    End If
    frmSelectLinkCode.PrmLedgerType = intKind    ''BankBook|fffd||312||289||742||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||250||752||fffd|
    frmSelectLinkCode.PrmCurrency = Cells(6, 5).Value
    frmSelectLinkCode.PrmCondition = 0    ''Condition|fffd||fffd||752||fffd| (Paid|fffd||351||38f||6ca|O)
    frmSelectLinkCode.PrmPurpose = 0    ''0|fffd||152||fffd|
    frmSelectLinkCode.setUpForm    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    frmSelectLinkCode.Show    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    If (frmSelectLinkCode.Result = True) Then   ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LedgerLinkCode|fffd||fffd||fffd||64fe|
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        Cells(ActiveCell.Row, 14) = frmSelectLinkCode.PrmSelectLCode
        Cells(ActiveCell.Row, 24) = 1
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If
    frmSelectLinkCode.CloseForm    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
LBL_END:
    CmdBtnLinkCodeSelect.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|}|fffd|E|fffd|X|fffd|E|fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||303|v|fffd||fffd||fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Boolean |fffd|^> |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||313||18e||fffd||fffd|||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
    
    If Target.Row < c_intCBDetailRowST Or Target.Row > c_lngMAX_ROWINDEX Then
        Cancel = False
        Exit Sub
    End If
    If Target.Column < 4 Or Target.Column > 6 Then
        Cancel = False
        Exit Sub
    End If
    
    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(3, 5).Value <> "" And m_blnDecisionLock = True Then
        MsgBox c_strMSG_EDITLOCK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Cancel = True
        Exit Sub
    End If

    If Target.Locked = True Then
        MsgBox c_strMSG_EDITLOCKAUTO_TR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Cancel = True
        Exit Sub
    End If

    If Target.Row >= c_intCBDetailRowST Then
        If Target.Column = 4 Then         ''Description Item
            g_strMapACCode = ""
            g_strMapACName = ""
            g_strMapWarn = ""
           
            g_objDscrptCmdBar.ShowPopup   ''Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||315|\|fffd||fffd|
            Cancel = True                 ''|fffd||fffd||fffd||fffd||303||fffd||fffd|j|fffd||fffd||fffd|[|fffd||314||fffd|\|fffd||fffd|
            Exit Sub
        End If
    
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If

    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If


    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim blnLCode As Boolean
    Dim lngIx As Long
    blnLCode = False
'    If Cells(6, 5).Value <> "" And Cells(6, 5).Value = g_typAryPJTInfo(0).m_strCurrency Then ''PRJ|fffd||289||743|`|fffd|F|fffd|b|fffd|N
    If Cells(6, 5).Value <> "" Then  ''PRJ|fffd||289||743|`|fffd|F|fffd|b|fffd|N|fffd||342||fffd||fffd||202||fffd|
        If Target.Row >= c_intCBDetailRowST And Target.Row <= c_lngMAX_ROWINDEX Then
            If Cells(Target.Row, 10).Value <> "" Then ''|fffd||fffd||fffd||fffd||216||693||fffd||fffd||34d||3c2||fffd|
                lngIx = fg_GetIndexFromTokenInCSV(Cells(Target.Row, 10).Value, g_strLCodeIndispensableAccount)
                If lngIx >= 0 Then
                     blnLCode = True
                End If
                If Cells(Target.Row, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
                    blnLCode = False
                End If
            End If
        End If
    End If
LBL_END:
    CmdBtnLinkCodeSelect.Enabled = blnLCode
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub



Attribute VB_Name = "wsImportReport"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| Import|fffd||cbd4a|m|fffd|F|fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/22 : Knowlbo S.Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit


'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 505 ''|fffd||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l
Private Const c_lngDetailRowST As Long = 6    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean


    Unprotect Password:=c_strSheetPWD    ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    
    Range("B" & c_lngDetailRowST, "B" & c_lngMAX_ROWINDEX).NumberFormatLocal = "###0_ "
    Range("C" & c_lngDetailRowST, "D" & c_lngMAX_ROWINDEX).NumberFormat = "@"
    Range("E" & c_lngDetailRowST, "E" & c_lngMAX_ROWINDEX).NumberFormat = c_strFORMAT_MONTH
    Range("F" & c_lngDetailRowST, "H" & c_lngMAX_ROWINDEX).NumberFormat = "@"
    Range("B" & c_lngDetailRowST - 1, "H" & c_lngDetailRowST - 1).HorizontalAlignment = xlCenter
    Range("C" & c_lngDetailRowST, "H" & c_lngMAX_ROWINDEX).HorizontalAlignment = xlCenter
    
    s_SetupDetailCells                   ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
    ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
            
    g_blnArySetupSheet(GLED_IR) = True      ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_IR) = False    ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    fw_SetupSheet = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(14) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    
    Dim intIx As Integer
    Dim strSQL As String
    Dim strCounrty As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngCount As Long
    Dim strMSG As String
    Dim strValue As String

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    wsImportReport.Range("B" & c_lngDetailRowST, "G" & mc_lngMAX_ROWINDEX).ClearContents

    ''Country|fffd||752||fffd|
    For intIx = 0 To UBound(g_typAryOfficeInfo)
        If g_strOfficeCode = g_typAryOfficeInfo(intIx).m_strOfficeCode Then
            Cells(3, 3).Value = g_typAryOfficeInfo(intIx).m_strCountryName
            strCounrty = g_typAryOfficeInfo(intIx).m_strCountry
            Exit For
        End If
    Next

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If


On Error GoTo LBL_ERR
    
    ''SS_Decision|fffd||fffd|DecisionFASY|fffd||fffd||fffd|r|fffd|iNKModify / JWRetImport|fffd||fffd||fffd||fffd||fffd||fffd||302||241|A|fffd||fffd|Import|fffd||312||fffd||fffd|o|fffd|j
    strSQL = "SELECT " & "tDf.OwnerOfficeCode, " & "tDf.OfficeCode, tDf.TargetPeriod, "
    strSQL = strSQL & "tDf.NKRetImportDate, " & "tDf.JWRetImportDate, " & "tDf.InsertUID, "
    strSQL = strSQL & "tDs.ModifyNK, " & "tDs.JWRetImportDate AS JWRetImportDateSS "
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_DecisionFASY & " tDf"
    strSQL = strSQL & " INNER JOIN " & c_NKFAOwner & "." & c_strTBL_Decision & " tDs"
    strSQL = strSQL & " ON " & "tDf.OfficeCode =" & "tDs.OfficeCode" & " AND "
    strSQL = strSQL & "tDf.TargetPeriod =" & "tDs.TargetPeriod"
    strSQL = strSQL & " WHERE " & "((tDs.ModifyNK IS NOT NULL And tDf.NKRetImportDate IS NULL)"
    strSQL = strSQL & " OR " & "(tDs.JWRetImportDate IS NOT NULL And tDf.JWRetImportDate IS NULL))"
    strSQL = strSQL & " AND " & "tDf.OfficeCode LIKE " & "'J%" & strCounrty & "%'"
    strSQL = strSQL & " ORDER BY tDf.OwnerOfficeCode, tDf.OfficeCode, tDf.TargetPeriod"
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_DecisionFASY
        GoTo LBL_ERR
    End If
    
    lngCount = 0
    Do Until adoRs.EOF
        
        Cells(c_lngDetailRowST + lngCount, 2).Value = lngCount + 1
        strValue = adoRs.Fields("OwnerOfficeCode").Value
        Cells(c_lngDetailRowST + lngCount, 3).Value = strValue
        If strValue <> adoRs.Fields("OfficeCode").Value Then
            Cells(c_lngDetailRowST + lngCount, 4).Value = adoRs.Fields("OfficeCode").Value
        End If
        Cells(c_lngDetailRowST + lngCount, 5).Value = adoRs.Fields("TargetPeriod").Value
        
        If Not IsNull(adoRs.Fields("NKRetImportDate").Value) Then
            Cells(c_lngDetailRowST + lngCount, 6).Value = "Imported"
        Else
            If IsNull(adoRs.Fields("ModifyNK").Value) Then
                Cells(c_lngDetailRowST + lngCount, 6).Value = "--------"
            End If
        End If
        If Not IsNull(adoRs.Fields("JWRetImportDate").Value) Then
            Cells(c_lngDetailRowST + lngCount, 7).Value = "Imported"
        Else
            If IsNull(adoRs.Fields("JWRetImportDateSS").Value) Then
                Cells(c_lngDetailRowST + lngCount, 7).Value = "--------"
            End If
        End If
        If Not IsNull(adoRs.Fields("InsertUID").Value) Then
            Cells(c_lngDetailRowST + lngCount, 8).Value = adoRs.Fields("InsertUID").Value
        End If
        lngCount = lngCount + 1
        adoRs.MoveNext
    Loop

    MsgBox "Hit " & lngCount & " Datas!" & vbCrLf & c_strMSG_FOLLOWING_CHECKDATA, vbInformation Or vbOKOnly, c_strNAME_SYSTEM

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_SetupDetailCells:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "s_SetupDetailCells", strMSG
    GoTo LBL_END

End Sub
Attribute VB_Name = "wsLedAsso"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd|x|fffd||fffd||fffd||44a0||fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 33 ''|fffd||fffd||fffd||34d||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l

'-----------------------------------------------------------------
' |fffd||fffd||fffd|I|fffd||fffd||515||fffd||fffd||fffd||fffd||fffd||8414|
'-----------------------------------------------------------------
Private Const mc_strStatPaid As String = "Paid"         ''Status|fffd|F|fffd|x|fffd||fffd||fffd||fffd|
Private Const mc_strStatInvoiced As String = "Invoiced" ''Status|fffd|F|fffd||fffd||fffd|F|fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean

    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_AS) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        If g_blnAryCmnMstUpdate(GLED_AS) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            g_blnAryCmnMstUpdate(GLED_AS) = False
        End If
        s_SetupDetailCells
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        Exit Function
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''Associate|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_AS) = False Then
        MsgBox c_strMSG_MASTER_ASSO, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''|fffd||151||fffd||fffd||fffd||34d|s|fffd||752||fffd|i|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b5||fffd|A|fffd|f|fffd|[|fffd|^|fffd||282||242||fffd||fffd||fffd||10d|s|fffd||11742||20b7||fffd|j
    ''m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intASDetailRowST)
    Cells(c_intASDetailRowST, 2).Activate
 
    m_blnDirty = False
    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_ClearDetailCells                 ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells                 ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    g_blnArySetupSheet(GLED_AS) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_AS) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()
    Dim lngIndex As Long
    Dim strDatas As String

    s_SetupAssociateCells    ''|fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g Code,Name|fffd||303|R|fffd||fffd||fffd|{|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
    If Cells(3, 4).Value <> "" Then
        lngIndex = fg_GetAssociateCodeOrName(Cells(3, 4).Value, strDatas)
        If lngIndex >= 0 Then
            If Cells(5, 4).Value = g_typAryAsoInfo(lngIndex).m_strCurrency Then
                ''ContractAmount
                Cells(4, 20).Value = g_typAryAsoInfo(lngIndex).m_curContract
                ''ContractAdvance
                Cells(5, 20).Value = g_typAryAsoInfo(lngIndex).m_curAdvance
            Else
                Cells(4, 20).Value = 0
                Cells(5, 20).Value = 0
            End If
        End If
    End If
    
    ''Currency/ContractAmount/ContractAdvance |fffd||34b||18e||491|I|fffd||fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    Cells(2, 19).Value = g_typAryPJTInfo(0).m_strPJTCode    ''Project Code
    Cells(3, 19).Value = g_typAryPJTInfo(0).m_strPJTName    ''Project Name
    Range("T4:T7").NumberFormat = g_strFORMAT_DEC_XX        ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
  End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||18e||491|I|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||250||752||fffd||3c2||742||303|A|fffd|\|fffd|V|fffd|G|fffd|[|fffd|g|fffd||18e||483||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||342||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupAssociateCells()

    Dim lngIx As Long
    Dim strAreaCd As String
    Dim strAreaNm As String
    
    ''Associate|fffd||fffd||fffd|X|fffd|gCode|fffd||fffd|Y|fffd||fffd|AName|fffd||fffd|Z|fffd||42a42||fffd||752||80b7||fffd||fffd|
    For lngIx = 0 To UBound(g_typAryAsoInfo)
        Cells(c_intASDetailRowST + lngIx, 25).Value = g_typAryAsoInfo(lngIx).m_strCode
        Cells(c_intASDetailRowST + lngIx, 26).Value = g_typAryAsoInfo(lngIx).m_strName
    Next
    
    strAreaCd = "=$Y$" & c_intASDetailRowST & ":$Y$" & c_intASDetailRowST + lngIx - 1
    strAreaNm = "=$Z$" & c_intASDetailRowST & ":$Z$" & c_intASDetailRowST + lngIx - 1
    sg_SetupValidation Range("D3").Validation, c_strMSG_ASSO_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strAreaCd, Null
    sg_SetupValidation Range("D4").Validation, c_strMSG_ASSO_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, strAreaNm, Null

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Status|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||fffd|Status|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupStatusCells( _
    ByRef rngTarget As Range _
)
    Dim strDatas As String
    
    strDatas = mc_strStatPaid & "," & mc_strStatInvoiced
    sg_SetupValidation rngTarget.Validation, c_strMSG_SelectList, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    ''DateReceived, DatePaid
    sg_SetupValidation Range("E" & c_intASDetailRowST, "F" & m_lngModfyMAX_ROWINDEX).Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range("E" & c_intASDetailRowST, "F" & m_lngModfyMAX_ROWINDEX).NumberFormat = c_strFORMAT_DATE
    
    ''Status |fffd||303|R|fffd||fffd||fffd|{|fffd||752||fffd||354|p|fffd|~
    ''s_SetupStatusCells Range("G" & c_intASDetailRowST, "G" & m_lngModfyMAX_ROWINDEX)
   
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("I" & c_intASDetailRowST - 1, "T" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DEC_XX
   
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_ClearDetailCells()
        
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim lngDelRow As Long           ''Delete|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If m_lngModfyMAX_ROWINDEX > mc_lngMAX_ROWINDEX Then
        lngDelRow = mc_lngMAX_ROWINDEX - 1
        For intCount = 0 To (m_lngModfyMAX_ROWINDEX - mc_lngMAX_ROWINDEX) - 1
            'Range("A" & lngDelRow, "T" & lngDelRow).Delete Shift:=xlUp
            Range("A" & lngDelRow, "W" & lngDelRow).Delete Shift:=xlUp
        Next
    End If
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    Range("B" & c_intASDetailRowST, "K" & mc_lngMAX_ROWINDEX).ClearContents
    Range("M" & c_intASDetailRowST, "Q" & mc_lngMAX_ROWINDEX).ClearContents
    Range("S" & c_intASDetailRowST, "S" & mc_lngMAX_ROWINDEX).ClearContents
    Range("U" & c_intASDetailRowST, "W" & mc_lngMAX_ROWINDEX).ClearContents
    Range("X" & c_intASDetailRowST, "X" & mc_lngMAX_ROWINDEX).ClearContents
    Range("C" & c_intASDetailRowST, "E" & mc_lngMAX_ROWINDEX).Locked = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/03/02 : Knowlbo Suzuki : Detail|fffd||fffd||fffd||fffd||fffd||18d||151||fffd|s|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd|P
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim blnLock As Boolean
    Dim strData As String
    Dim lngRowIndex As Long
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intItemCount As Integer     ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim lngDetailRow As Long        ''|fffd||fffd||fffd||5d5||fffd||fffd||30d|s
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    ''|fffd|f|fffd|[|fffd|^|fffd||151||fffd|s|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||73c9||fffd||fffd||fffd|l|fffd||256||7c2||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
    sg_SetScreenUpdate False
    s_ClearDetailCells                 ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A

    ''DB|fffd||fffd||fffd||fffd||fffd||38f||fffd|(AssociateCode)|fffd||fffd||fffd||fffd||202||302||14f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If Cells(3, 4).Value = "" Or Cells(4, 4).Value = "" Then Exit Sub

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    strSQL = "SELECT " & "dt.InvoiceNo, " & "dt.Currency, "
    strSQL = strSQL & "dt.AsoLinkCode, " & "dt.Classify, "
    strSQL = strSQL & "dt.AsoCode, " & "dt.InvoiceAmount, "
    strSQL = strSQL & "dt.Repayment, " & "dt.Retention, "
    strSQL = strSQL & "dt.Vat, " & "dt.HoldingTax, "
    strSQL = strSQL & "dt.ManageFee, " & "dt.OtherTax, "
    strSQL = strSQL & "dt.Others, " & "ap.InvRefNo, "
    strSQL = strSQL & "ap.Description, " & "ap.ReceivedDate, "
    strSQL = strSQL & "ap.PaidDate, " & "ap.Status, "
    strSQL = strSQL & "ap.ActualPayment, " & "ap.PaymentBalance "
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt"
    strSQL = strSQL & " INNER JOIN " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " ON " & "dt.AsoLinkCode = " & "ap.LedgerLinkCode " & " WHERE "
    strSQL = strSQL & "dt.AsoCode = " & fg_AddSingleQuotation(Cells(3, 4).Value) & " And "
    strSQL = strSQL & "dt.Currency = " & fg_AddSingleQuotation(Cells(5, 4).Value) & " And "
    strSQL = strSQL & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode) & " And "
    strSQL = strSQL & "dt.Classify = " & fg_AddSingleQuotation("JV") & " ORDER BY "
    strSQL = strSQL & "dt.InvoiceNo"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If
    
    intItemCount = 0
    lngDetailRow = mc_lngMAX_ROWINDEX - 12
    If Not (adoRs Is Nothing) And adoRs.EOF = False Then
        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe|
        Do Until adoRs.EOF
            intItemCount = intItemCount + 1
            adoRs.MoveNext
        Loop
        
        ''|fffd||fffd||fffd||34d|s|fffd||fffd||fffd|T|fffd|s|fffd||209||fffd||fffd|A|fffd||702||fffd||fffd||343|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||34d|s|fffd||11742||20b7|
        If ((lngDetailRow - intItemCount) < 5) Or (intItemCount > lngDetailRow) Then
            For intCount = 0 To (intItemCount + 4) - lngDetailRow
                Range("A32:T32").Copy
                Range("A32:T32").Insert Shift:=xlDown
            Next
            m_lngModfyMAX_ROWINDEX = m_lngModfyMAX_ROWINDEX + intCount
        Else
            m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
        End If
    
        ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||64ea||fffd||256||7c2||fffd|
        adoRs.MoveFirst
    End If
    
    lngRowIndex = c_intASDetailRowST
    Do Until adoRs.EOF
        blnLock = False
        strData = CStr(adoRs.Fields("InvoiceNo").Value)
        Cells(lngRowIndex, 2).Value = strData
        If Not IsNull(adoRs.Fields("InvRefNo").Value) Then           ''InvRefNo
            strData = CStr(adoRs.Fields("InvRefNo").Value)
            Cells(lngRowIndex, 3).Value = strData
        Else
            Cells(lngRowIndex, 3).Value = ""
        End If
        If Not IsNull(adoRs.Fields("Description").Value) Then           ''Description
            Cells(lngRowIndex, 4).Value = adoRs.Fields("Description").Value
        End If
        If Not IsNull(adoRs.Fields("ReceivedDate").Value) Then           ''ReceivedDate
            Cells(lngRowIndex, 5).Value = adoRs.Fields("ReceivedDate").Value
        End If
        
        If Not IsNull(adoRs.Fields("PaidDate").Value) Then              ''PaidDate
            Cells(lngRowIndex, 6).Value = adoRs.Fields("PaidDate").Value
        End If
        If Cells(lngRowIndex, 6).Value <> "" Then blnLock = True
        Cells(lngRowIndex, 7).Value = adoRs.Fields("Status").Value      ''Status
        If InStr(Cells(lngRowIndex, 7).Value, "void") <> 0 Or _
           InStr(Cells(lngRowIndex, 7).Value, "Revers") <> 0 Then
            blnLock = True ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|b|fffd|N
        End If
        Cells(lngRowIndex, 8).Value = adoRs.Fields("AsoLinkCode").Value  ''AsoLinkCode
        
        If Not IsNull(adoRs.Fields("InvoiceAmount").Value) And _
                      adoRs.Fields("InvoiceAmount").Value <> 0 Then
            Cells(lngRowIndex, 9).Value = adoRs.Fields("InvoiceAmount").Value     ''InvoiceAmount
        End If
        If Not IsNull(adoRs.Fields("Repayment").Value) And _
                      adoRs.Fields("Repayment").Value <> 0 Then
            Cells(lngRowIndex, 10).Value = adoRs.Fields("Repayment").Value         ''Repayment
        End If
        If Not IsNull(adoRs.Fields("Retention").Value) And _
                      adoRs.Fields("Retention").Value <> 0 Then
            Cells(lngRowIndex, 11).Value = adoRs.Fields("Retention").Value         ''Retention
        End If
        If Not IsNull(adoRs.Fields("Vat").Value) And _
                      adoRs.Fields("Vat").Value <> 0 Then
            Cells(lngRowIndex, 13).Value = adoRs.Fields("Vat").Value               ''Vat
        End If
        If Not IsNull(adoRs.Fields("HoldingTax").Value) And _
                      adoRs.Fields("HoldingTax").Value <> 0 Then
            Cells(lngRowIndex, 14).Value = adoRs.Fields("HoldingTax").Value        ''HoldingTax
        End If
        If Not IsNull(adoRs.Fields("ManageFee").Value) And _
                      adoRs.Fields("ManageFee").Value <> 0 Then
        
            Cells(lngRowIndex, 15).Value = adoRs.Fields("ManageFee").Value         ''ManageFee
        End If
        If Not IsNull(adoRs.Fields("OtherTax").Value) And _
                      adoRs.Fields("OtherTax").Value <> 0 Then
            Cells(lngRowIndex, 16).Value = adoRs.Fields("OtherTax").Value          ''OtherTax
        End If
        If Not IsNull(adoRs.Fields("Others").Value) And _
                      adoRs.Fields("Others").Value <> 0 Then
            Cells(lngRowIndex, 17).Value = adoRs.Fields("Others").Value            ''Others
        End If
        If Not IsNull(adoRs.Fields("ActualPayment").Value) And _
                      adoRs.Fields("ActualPayment").Value <> 0 Then
            Cells(lngRowIndex, 19).Value = adoRs.Fields("ActualPayment").Value      ''ActualPayment
        End If
        ''|fffd|X|fffd|V|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||80b7||fffd||90bd||fffd||7c2||fffd|ID|fffd||182||fffd||fffd||fffd|LinkCode|fffd||fffd||6d1||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|i|fffd|d|fffd|v|fffd|j
        Cells(lngRowIndex, 22).Value = adoRs.Fields("AsoLinkCode").Value
     
        Range("C" & lngRowIndex, "E" & lngRowIndex).Locked = blnLock
        adoRs.MoveNext
        lngRowIndex = lngRowIndex + 1
    Loop
   
    On Error GoTo 0
   
    Application.GoTo Range("A" & c_intASDetailRowST), Scroll:=True    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    
LBL_END:
    sg_SetScreenUpdate True
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED06]s_SetupDetailCells:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetupDetailCells", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   NULL|fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|w|fffd||fffd|sNo
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|s|fffd||30a|e|fffd||fffd||fffd|NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_IsNullRow( _
    ByVal lngRowIndex As Long _
) As Boolean
    Dim intIxCol As Integer
    f_IsNullRow = False
    For intIxCol = 2 To 11
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    For intIxCol = 13 To 17
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    
    f_IsNullRow = True
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
    
    Dim lngRowIndex As Long
    Dim lngInputLastRow As Long
        
    f_CheckInputData = False
    lngInputLastRow = 0
    
    For lngRowIndex = c_intASDetailRowST To m_lngModfyMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 23).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|

            ''Invoice to Client |fffd||353|]|fffd|L|fffd||202||302||153||fffd||fffd||34d||3c2||742||303|n|fffd|Y
            
            ''Inv.Ref.No.
            If Cells(lngRowIndex, 3).Value = "" Then
                strMessage = c_strMSG_ASSO_INVOICE
                Cells(lngRowIndex, 3).Activate
                Exit Function
            Else
                If Len(Cells(lngRowIndex, 3).Value) > 30 Then
                    strMessage = c_strMSGCmn_LENGTHOVER & "30"
                    Cells(lngRowIndex, 3).Activate
                    Exit Function
                End If
            End If
            
            ''Description
            If Cells(lngRowIndex, 4).Value = "" Then
                strMessage = c_strMSG_DESCRIPTION
                Cells(lngRowIndex, 3).Activate
                Exit Function
            End If
            
            
            ''Received Date
            If Cells(lngRowIndex, 5).Value = "" Then
                strMessage = c_strMSG_DATE_FORMAT
                Cells(lngRowIndex, 4).Activate
                Exit Function
            End If
            
        End If
    Next

    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/14 : Knowlbo Nakarai : |fffd||fffd||fffd||34d|s|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    Dim lngIndex As Long
    Dim blnSetASCode As Boolean
    Dim blnSetASName As Boolean
    Dim blnSetData As Boolean
    Dim strCode As String
    Dim strDatas As String
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim lngCopyRow As Long      ''Copy|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X(Insert|fffd|p)
    
    blnSetData = False
    blnSetASCode = False
    blnSetASName = False

    ''Associate Code
    If rngTarget.Row = 3 And rngTarget.Column = 4 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetASCode = True
        blnSetData = True
    
    ''Associate Name
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 4 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetASName = True
        blnSetData = True
    
    ''Currency
    ElseIf rngTarget.Row = 5 And rngTarget.Column = 4 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetData = True
    
    ''Detail
    ElseIf rngTarget.Row >= c_intASDetailRowST Then
    
        ''Associate|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(3, 4).Value = "" Then
            MsgBox c_strMSG_ASSO_CODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(3, 4).Activate
            Exit Function
        End If
                       
        Select Case rngTarget.Column
        
        Case 2 ''Invoice to Cliant
        Case 3 ''Inv.Ref.No.
        Case 4 ''Description
        Case 5 ''ReceivedDate
        ''Paid Date |fffd||343||fffd||fffd|[|fffd|U|fffd||3cd|X|fffd|s|fffd||fffd|
        'Case 6 ''PaidDate
        Case 7 ''StatusCode
        Case 8 ''LedgerLinkCode
        Case 9 ''InvoiceAmount
        Case 10 ''RepaymentAdvance
        Case 11 ''Retention
        Case 12 ''ClaimedsubTotal
        Case 13 ''Vat
        Case 14 ''HoldingTax
        Case 15 ''ManageFee
        Case 16 ''OtherTax
        Case 17 ''Others
        Case 18 ''PaymentAmount
            
        End Select
 
    End If

    ''Associate Code / Name |fffd||3cd|X
    If blnSetASCode Or blnSetASName Then
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        
        strDatas = ""
        lngIndex = -1
        If blnSetASCode Then
            If rngTarget.Value = "" Then
                Cells(4, 4).Value = strDatas
            Else
                ''AssociateName
                lngIndex = fg_GetAssociateCodeOrName(rngTarget.Value, strDatas)
                Cells(4, 4).Value = strDatas
            End If
        Else
            If rngTarget.Value = "" Then
                Cells(3, 4).Value = strDatas
            Else
                ''AssociateCode
                lngIndex = fg_GetAssociateCodeOrName(strDatas, rngTarget.Value)
                Cells(3, 4).Value = strDatas
            End If
        End If
        
        ''Currency
        Select Case g_typAryPJTInfo(0).m_strCurrency
        Case "USD"
            strDatas = "USD, JPY"
        Case "JPY"
            strDatas = "JPY, USD"
        Case Else
            strDatas = g_typAryPJTInfo(0).m_strCurrency & ", JPY, USD"
        End Select
        sg_SetupValidation Range("D5").Validation, c_strMSG_RIGHTCURRENCY, _
            xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
        If Cells(5, 4).Value = "" Then
            Cells(5, 4).Value = g_typAryPJTInfo(0).m_strCurrency
        End If
    
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If


    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        
        If Cells(3, 4).Value <> "" Then
            lngIndex = fg_GetAssociateCodeOrName(Cells(3, 4).Value, strDatas)
            If lngIndex >= 0 Then
                If Cells(5, 4).Value = g_typAryAsoInfo(lngIndex).m_strCurrency Then
                    ''ContractAmount
                    Cells(4, 20).Value = g_typAryAsoInfo(lngIndex).m_curContract
                    ''ContractAdvance
                    Cells(5, 20).Value = g_typAryAsoInfo(lngIndex).m_curAdvance
                                  
                Else
                    Cells(4, 20).Value = 0
                    Cells(5, 20).Value = 0
                End If
            End If
        End If
        
        s_SetupDetailCells     ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd||fffd||fffd||34d|s|fffd||fffd||fffd|c|fffd||fffd|Q|fffd|s|fffd||242||202||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||1c9||fffd|
    If (rngTarget.Row = m_lngModfyMAX_ROWINDEX - 2) Then
        m_blnSetupCellsInProgress = True
        ''|fffd|s|fffd||1c9||fffd||fffd||fffd||fffd||fffd|
        lngCopyRow = m_lngModfyMAX_ROWINDEX - 1
        For intCount = 1 To 3
            Range("A" & lngCopyRow, "T" & lngCopyRow).Copy
            Range("A" & lngCopyRow, "T" & lngCopyRow).Insert Shift:=xlDown
        Next
        Application.CutCopyMode = False
        m_lngModfyMAX_ROWINDEX = m_lngModfyMAX_ROWINDEX + intCount - 1
        m_blnSetupCellsInProgress = False
    End If
    
    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|
    If rngTarget.Row >= c_intASDetailRowST And rngTarget.Row <= m_lngModfyMAX_ROWINDEX Then
        m_blnSetupCellsInProgress = True
        Cells(rngTarget.Row, 23) = 1
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If

    f_onChangeCell = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/27 : Knowlbo Suzuki : UpDate|fffd||fffd||fffd|ReLoad|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim datValue As Date
    Dim strMSG As String
    Dim strData As String
    Dim datPrNow As Date

    datPrNow = Now()
    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData(strMSG) Then
        MsgBox strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If
    
    sg_SetScreenUpdate False

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)
    
On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_AssociatePayment & " ap"
    strSQL = strSQL & " WHERE " & "ap.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND " & "ap.AssociateCode = " & fg_AddSingleQuotation(Cells(3, 4).Value)
    strSQL = strSQL & " AND " & "ap.Currency = " & fg_AddSingleQuotation(Cells(5, 4).Value)
    strSQL = strSQL & " ORDER BY " & "ap.InvRefNo"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AssociatePayment
        GoTo LBL_ERR
    End If
    
    ''DB|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V=======================================================
    m_blnSetupCellsInProgress = True
    For lngRowIndex = c_intASDetailRowST To m_lngModfyMAX_ROWINDEX Step 1
        If Cells(lngRowIndex, 23).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            If f_IsNullRow(lngRowIndex) Then
                ''NULL|fffd|s|fffd||202||302||143|f|fffd|[|fffd|^|fffd||d3dc|(|fffd||fffd||fffd||389||fffd|)
            Else
                ''|fffd|X|fffd|V|fffd||302||fffd| |fffd|iLinkCode|fffd||fffd|ID|fffd||311||582||fffd||243|}|fffd|b|fffd|`|fffd||fffd||fffd|O|fffd||24e|g|fffd|p|fffd||fffd||fffd||fffd|j
                ''Invoice|fffd||150||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||142||310|V|fffd|K|fffd||1c9||fffd||fffd||342||202||fffd|
                adoRs.Filter = adFilterNone
                adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(Cells(lngRowIndex, 22).Value)
                If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                    objdba.SQLString = fg_setAssociatePaymentHistorySQLString(adoRs, datPrNow)
                    If (objdba.ExecuteSQL(adoCn) <> 0) Then
                        strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_AssociatePayment
                        GoTo LBL_ERR
                    End If
                Else
                    strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_AssociatePayment
                    GoTo LBL_ERR
                End If
                If Not IsEmpty(Cells(lngRowIndex, 3).Value) Then                    ''InvRefNo
                    strData = CStr(Cells(lngRowIndex, 3).Value)
                    adoRs.Fields("InvRefNo").Value = strData
                End If
                
                If Not IsEmpty(Cells(lngRowIndex, 4).Value) Then                    ''Description
                    strData = CStr(Cells(lngRowIndex, 4).Value)
                    adoRs.Fields("Description").Value = strData
                End If
                If Not IsEmpty(Cells(lngRowIndex, 4).Value) Then                    ''Description
                    strData = CStr(Cells(lngRowIndex, 4).Value)
                    If Left$(strData, 4) = c_strKwdModifyBR Or _
                       Left$(strData, 4) = c_strKwdModifyNK Then
                        strData = c_strKwdModifyNK & Mid$(strData, 5)
                    Else
                        strData = c_strKwdModifyNK & strData
                    End If
                    If Len(strData) > 128 Then strData = Left$(strData, 128)
                    adoRs.Fields("Description").Value = strData
                End If
                If Not IsEmpty(Cells(lngRowIndex, 5).Value) Then                    ''ReceivedDate
                    datValue = DateValue(Cells(lngRowIndex, 5).Value)
                    adoRs.Fields("ReceivedDate").Value = datValue
                End If
                If Not IsEmpty(Cells(lngRowIndex, 6).Value) Then                    ''PaidDate
                    datValue = DateValue(Cells(lngRowIndex, 6).Value)
                    adoRs.Fields("PaidDate").Value = datValue
                End If
                adoRs.Fields("Status").Value = Cells(lngRowIndex, 7).Value          ''Status
                adoRs.Fields("ModifyPlace").Value = "1"                             ''ModifyPlace
                ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
                adoRs.Fields("InsertDate").Value = datPrNow
                adoRs.Fields("InsertUID").Value = g_strLoginId
                adoRs.Update
                adoRs.MoveFirst
                
                ''Dirty|fffd|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
                ''Cells(lngRowIndex, 23).Value = ""

            End If
        End If
    Next
    
    Call objdba.closeRecordset(adoRs)
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    s_SetupDetailCells     ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
    m_blnDirty = False
    CmdBtnDbUpDate.Visible = True
    ThisWorkbook.Activate
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM

LBL_END:
    m_blnSetupCellsInProgress = False
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    CmdBtnDbUpDate.Visible = True
    sg_SetScreenUpdate True
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED6]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(5) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If

    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If


    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

Attribute VB_Name = "wsLedInvoice"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnReverse, 3, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnQuit, 2, 1, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||191||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||44a0||fffd|V|fffd|[|fffd|g(LEDGER 5)
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 49 ''|fffd||fffd||fffd||34d||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l(0+11|fffd||fffd||fffd||5c1|j


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/01/14 : Knowlbo Nakarai : |fffd||151||fffd||fffd||fffd||34d|s|fffd||752||fffd||fffd||1c9||fffd|
'   2004/03/02 : Knowlbo Suzuki : Detail|fffd||fffd||fffd||fffd||fffd||18d||151||fffd|s|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd|P
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean

    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_IV) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        If g_blnAryCmnMstUpdate(GLED_IV) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            g_blnAryCmnMstUpdate(GLED_IV) = False
        End If
        s_SetupDetailCells
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        Exit Function
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''|fffd||151||fffd||fffd||fffd||34d|s|fffd||752||fffd|i|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b5||fffd|A|fffd|f|fffd|[|fffd|^|fffd||282||242||fffd||fffd||fffd||10d|s|fffd||11742||20b7||fffd|j
    ''m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intInvDetailRowST)
    Cells(c_intInvDetailRowST, 2).Activate
 
    Unprotect Password:=c_strSheetPWD
    m_blnSetupCellsInProgress = True        ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_SetupHeader                           ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_ClearDetailCells                      ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    s_SetupDetailFormatCells                ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|\|fffd||fffd||fffd|`|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells                      ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False       ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    g_blnArySetupSheet(GLED_IV) = True      ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_IV) = False    ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    CmdBtnReverse.Enabled = False
    fw_SetupSheet = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strDatas As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim rngLedCode As Range
    
    ''Currency
    Select Case g_typAryPJTInfo(0).m_strCurrency
    Case "USD"
        strDatas = "USD, JPY, GBP, EUR"
    Case "JPY"
        strDatas = "JPY, USD, GBP, EUR"
    Case "EUR"
        strDatas = "EUR, JPY, USD, GBP"
    Case "GBP"
        strDatas = "GBP, JPY, EUR, USD"
    Case Else
        strDatas = g_typAryPJTInfo(0).m_strCurrency & ", JPY, USD, GBP, EUR"
    End Select
    
    sg_SetupValidation Range("D4").Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    Cells(4, 4).Value = g_typAryPJTInfo(0).m_strCurrency

    ''|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||752||fffd|-----------------
    ''Office Code
    Cells(3, 4).Value = g_typAryPJTInfo(0).m_strOfficeCode
    ''Project Code
    Cells(3, 7).Value = g_typAryPJTInfo(0).m_strPJTCode
    ''Project Name
    Cells(4, 7).Value = g_typAryPJTInfo(0).m_strPJTName
    ''PaymentMethod
    If g_typAryPJTInfo(0).m_intPaymentMethod = 0 Then
        Cells(5, 4).Value = c_strInvPaymentMonth
    Else
        Cells(5, 4).Value = c_strInvPaymentSched
    End If
 
    ''ContractAmount
    Cells(4, 13).Value = g_typAryPJTInfo(0).m_curContract
    ''ContractAmount(NK)
    Cells(5, 13).Value = g_typAryPJTInfo(0).m_curContractNK
    ''ContractAmount(ASO)
    Cells(6, 13).Value = g_typAryPJTInfo(0).m_curContractASO
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("M4:M6").NumberFormat = g_strFORMAT_DEC_XX
    
    ''% ofAdvance
    Cells(4, 15).Value = g_typAryPJTInfo(0).m_curPerCont
    ''% ofAdvance(NK)
    Cells(5, 15).Value = g_typAryPJTInfo(0).m_curPerNK
    ''% ofAdvance(ASO)
    Cells(6, 15).Value = g_typAryPJTInfo(0).m_curPerASO
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("O4:O6").NumberFormat = "0.00""%"""
    
    ''AdvancePayment
    Cells(4, 16).Value = g_typAryPJTInfo(0).m_curAdvance
    ''AdvancePayment(NK)
    Cells(5, 16).Value = g_typAryPJTInfo(0).m_curAdvanceNK
    ''AdvancePayment(ASO)
    Cells(6, 16).Value = g_typAryPJTInfo(0).m_curAdvanceASO
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("P4:P6").NumberFormat = g_strFORMAT_DEC_XX
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("R4:R6").NumberFormat = g_strFORMAT_DEC_XX
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("T4:T6").NumberFormat = g_strFORMAT_DEC_XX

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||315|\|fffd||fffd||fffd|`|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||315|\|fffd||fffd||fffd|`|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailFormatCells()

    ''|fffd||fffd||fffd|t|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("D" & c_intInvDetailRowST - 3, "H" & mc_lngMAX_ROWINDEX).NumberFormat = c_strFORMAT_DATE
    ''|fffd||fffd||fffd|l|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("L" & c_intInvDetailRowST - 3, "U" & mc_lngMAX_ROWINDEX + 3).NumberFormat = g_strFORMAT_DEC_XX

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_ClearDetailCells()
    
    Dim lngIndex As Long
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim lngDelRow As Long           ''Delete|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If m_lngModfyMAX_ROWINDEX > mc_lngMAX_ROWINDEX Then
        lngDelRow = mc_lngMAX_ROWINDEX - 5
        For intCount = 0 To (m_lngModfyMAX_ROWINDEX - mc_lngMAX_ROWINDEX) \ 3 - 1
            Range("A" & lngDelRow, "U" & lngDelRow + 2).Delete Shift:=xlUp
        Next
        m_lngModfyMAX_ROWINDEX = m_lngModfyMAX_ROWINDEX - (intCount * 3)
    End If
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||5d5||fffd|
    Range("B" & c_intInvDetailRowST, "J" & mc_lngMAX_ROWINDEX).ClearContents
    ''NK, Asso.|fffd||30a|e|fffd|f|fffd|[|fffd|^(L|fffd|`T)
    For lngIndex = c_intInvDetailRowST To mc_lngMAX_ROWINDEX Step 3
        Range("L" & lngIndex, "N" & lngIndex).ClearContents
        Range("P" & lngIndex, "T" & lngIndex).ClearContents
        Range("L" & lngIndex + 1, "N" & lngIndex + 1).ClearContents
        Range("P" & lngIndex + 1, "T" & lngIndex + 1).ClearContents
    Next
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/19 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2003/09/24 : Knowlbo Suzuki : 12|fffd||fffd||fffd||20f||fffd||315|\|fffd||fffd||fffd|s|fffd||fffd||fffd|C|fffd||fffd|
'   2004/03/02 : Knowlbo Suzuki : Detail|fffd||fffd||fffd||fffd||fffd||18d||151||fffd|s|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd|P
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intItemCount As Integer     ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim lngDetailRow As Long        ''|fffd||fffd||fffd||5d5||fffd||fffd||30d|s
    Dim lngDelRow As Long           ''Delete|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strInvoice As String
    Dim strPreInvoice As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim lngRowCurIndex As Long
   
    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_blnDirty = False

    ''|fffd|f|fffd|[|fffd|^|fffd||151||fffd|s|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||73c9||fffd||fffd||fffd|l|fffd||256||7c2||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
    sg_SetScreenUpdate False
    s_ClearDetailCells                 ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    
    ''DB|fffd||fffd||fffd||fffd||fffd||38f||fffd|(Currency,Invoice)|fffd||fffd||fffd||fffd||202||302||14f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If Cells(4, 4).Value = "" Then Exit Sub

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DataBase Error"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT " & "hd.InvoiceNo, " & "hd.Currency, "
    strSQL = strSQL & "hd.Description, " & "hd.PeriodStart, "
    strSQL = strSQL & "hd.PeriodEnd, " & "hd.Status, "
    strSQL = strSQL & "hd.LedgerLinkCode, " & "hd.IssuingDate, "
    strSQL = strSQL & "hd.ApprovalDate, " & "hd.PaymentDate, "
    strSQL = strSQL & "dt.Classify, "
    strSQL = strSQL & "Sum(" & "dt.InvoiceAmount) AS InvoiceAmount, "
    strSQL = strSQL & "Sum(" & "dt.Repayment) AS Repayment, "
    strSQL = strSQL & "Sum(" & "dt.Retention) AS Retention, "
    strSQL = strSQL & "Sum(" & "dt.Vat) AS Vat, "
    strSQL = strSQL & "Sum(" & "dt.HoldingTax) AS HoldingTax, "
    strSQL = strSQL & "Sum(" & "dt.ManageFee) AS ManageFee, "
    strSQL = strSQL & "Sum(" & "dt.OtherTax) AS OtherTax, "
    strSQL = strSQL & "Sum(" & "dt.Others) AS Others "
    '-----------------------------------------------------------
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_InvoiceHeader & " hd"
    strSQL = strSQL & " INNER JOIN " & c_NKFAOwner & "." & c_strTBL_InvoiceDetail & " dt ON "
    ''strSql = strSql & "hd.InvoiceNo = " & "dt.InvoiceNo" & " AND "
    strSQL = strSQL & "hd.LedgerLinkCode = " & "dt.LedgerLinkCode" & " AND "
    strSQL = strSQL & "hd.Currency = " & "dt.Currency" & " WHERE "
    strSQL = strSQL & "hd.Currency = " & fg_AddSingleQuotation(Cells(4, 4).Value) & " And "
    strSQL = strSQL & "hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    '-----------------------------------------------------------
    strSQL = strSQL & " GROUP BY " & "hd.InvoiceNo, "
    strSQL = strSQL & "hd.Currency, " & "hd.Description, "
    strSQL = strSQL & "hd.PeriodStart, " & "hd.PeriodEnd, "
    strSQL = strSQL & "hd.Status, " & "hd.LedgerLinkCode, "
    strSQL = strSQL & "hd.IssuingDate, " & "hd.ApprovalDate, "
    strSQL = strSQL & "hd.PaymentDate, " & "dt.Classify"
    'strSQL = strSQL & " ORDER BY " & "hd.InvoiceNo"
    strSQL = strSQL & " ORDER BY " & "hd.LedgerLinkCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_InvoiceHeader
        GoTo LBL_ERR
    End If

    intItemCount = 0
    lngDetailRow = mc_lngMAX_ROWINDEX - 13    ''|fffd||fffd||fffd||5d5||fffd||fffd||30d|s|fffd||348||342||fffd||fffd||64fe|
    If Not (adoRs Is Nothing) And adoRs.EOF = False Then
        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe|
        Do Until adoRs.EOF
            If adoRs.Fields("Classify").Value = "NK" Then
                intItemCount = intItemCount + 1
            End If
            adoRs.MoveNext
        Loop
        
        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||34f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|s|fffd||11742||20b7|
        If ((intItemCount) > (lngDetailRow / 3)) Then
            For intCount = 1 To (intItemCount) - (lngDetailRow / 3)
                Range("A44:U46").Copy
                Range("A44:U46").Insert Shift:=xlDown
            Next
            m_lngModfyMAX_ROWINDEX = m_lngModfyMAX_ROWINDEX + ((intCount - 1) * 3)
        Else
        ''|fffd||fffd||fffd||fffd||fffd||102||202||fffd||fffd||a347|
            m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
        End If
        ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||64ea||fffd||256||7c2||fffd|
        adoRs.MoveFirst
    End If
    
    lngRowIndex = c_intInvDetailRowST - 3
    strPreInvoice = ""
    Do Until adoRs.EOF
        ''InvoiceNo |fffd|`|fffd|F|fffd|b|fffd|N
        strInvoice = CStr(adoRs.Fields("InvoiceNo").Value)
        If strInvoice <> strPreInvoice Then
            lngRowIndex = lngRowIndex + 3
            Cells(lngRowIndex, 2).Value = strInvoice                        ''InvoiceNo
            
            If Not IsNull(adoRs.Fields("Description").Value) Then           ''Description
                Cells(lngRowIndex, 3).Value = adoRs.Fields("Description").Value
            End If
            If Not IsNull(adoRs.Fields("PeriodStart").Value) Then           ''PeriodStart
                Cells(lngRowIndex, 4).Value = adoRs.Fields("PeriodStart").Value
            End If
            If Not IsNull(adoRs.Fields("PeriodEnd").Value) Then             ''PeriodEnd
                Cells(lngRowIndex, 5).Value = adoRs.Fields("PeriodEnd").Value
            End If
            
            If Not IsNull(adoRs.Fields("IssuingDate").Value) Then           ''IssuingDate
                Cells(lngRowIndex, 6).Value = adoRs.Fields("IssuingDate").Value
            End If
            If Not IsNull(adoRs.Fields("ApprovalDate").Value) Then          ''ApprovalDate
                Cells(lngRowIndex, 7).Value = adoRs.Fields("ApprovalDate").Value
            End If
            
            If Not IsNull(adoRs.Fields("PaymentDate").Value) Then           ''PaymentDate
                Cells(lngRowIndex, 8).Value = adoRs.Fields("PaymentDate").Value
            End If
            Cells(lngRowIndex, 9).Value = adoRs.Fields("Status").Value      ''Status
            Cells(lngRowIndex, 10).Value = adoRs.Fields("LedgerLinkCode").Value ''LedgerLinkCode
        End If
        strPreInvoice = strInvoice
        
        If adoRs.Fields("Classify").Value = "NK" Then
            lngRowCurIndex = lngRowIndex
        Else
            lngRowCurIndex = lngRowIndex + 1
        End If
        If Not IsNull(adoRs.Fields("InvoiceAmount").Value) And _
                      adoRs.Fields("InvoiceAmount").Value <> 0 Then
            Cells(lngRowCurIndex, 12).Value = adoRs.Fields("InvoiceAmount").Value     ''InvoiceAmount
        End If
        If Not IsNull(adoRs.Fields("Repayment").Value) And _
                      adoRs.Fields("Repayment").Value <> 0 Then
            Cells(lngRowCurIndex, 13).Value = adoRs.Fields("Repayment").Value         ''Repayment
        End If
        If Not IsNull(adoRs.Fields("Retention").Value) And _
                      adoRs.Fields("Retention").Value <> 0 Then
            Cells(lngRowCurIndex, 14).Value = adoRs.Fields("Retention").Value         ''Retention
        End If
        If Not IsNull(adoRs.Fields("Vat").Value) And _
                      adoRs.Fields("Vat").Value <> 0 Then
            Cells(lngRowCurIndex, 16).Value = adoRs.Fields("Vat").Value               ''Vat
        End If
        If Not IsNull(adoRs.Fields("HoldingTax").Value) And _
                      adoRs.Fields("HoldingTax").Value <> 0 Then
            Cells(lngRowCurIndex, 17).Value = adoRs.Fields("HoldingTax").Value        ''HoldingTax
        End If
        If Not IsNull(adoRs.Fields("ManageFee").Value) And _
                      adoRs.Fields("ManageFee").Value <> 0 Then
        
            Cells(lngRowCurIndex, 18).Value = adoRs.Fields("ManageFee").Value         ''ManageFee
        End If
        If Not IsNull(adoRs.Fields("OtherTax").Value) And _
                      adoRs.Fields("OtherTax").Value <> 0 Then
            Cells(lngRowCurIndex, 19).Value = adoRs.Fields("OtherTax").Value          ''OtherTax
        End If
        If Not IsNull(adoRs.Fields("Others").Value) And _
                      adoRs.Fields("Others").Value <> 0 Then
            Cells(lngRowCurIndex, 20).Value = adoRs.Fields("Others").Value            ''Others
        End If
        adoRs.MoveNext
    Loop
   
    On Error GoTo 0
    Application.GoTo Range("A" & c_intInvDetailRowST), Scroll:=True    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|

LBL_END:
    sg_SetScreenUpdate True
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED5]s_SetupDetailCells:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetupDetailCells", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    ''Currecy
    If rngTarget.Row = 4 And rngTarget.Column = 4 Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD

        If Cells(4, 4).Value = g_typAryPJTInfo(0).m_strCurrency Then
            Cells(4, 13).Value = g_typAryPJTInfo(0).m_curContract          ''ContractAmount
            Cells(5, 13).Value = g_typAryPJTInfo(0).m_curContractNK        ''ContractAmount(NK)
            Cells(6, 13).Value = g_typAryPJTInfo(0).m_curContractASO       ''ContractAmount(ASO)
            
            Cells(4, 15).Value = g_typAryPJTInfo(0).m_curPerCont           ''% ofAdvance
            Cells(5, 15).Value = g_typAryPJTInfo(0).m_curPerNK             ''% ofAdvance(NK)
            Cells(6, 15).Value = g_typAryPJTInfo(0).m_curPerASO            ''% ofAdvance(ASO)
            
            Cells(4, 16).Value = g_typAryPJTInfo(0).m_curAdvance           ''AdvancePayment
            Cells(5, 16).Value = g_typAryPJTInfo(0).m_curAdvanceNK         ''AdvancePayment(NK)
            Cells(6, 16).Value = g_typAryPJTInfo(0).m_curAdvanceASO        ''AdvancePayment(ASO)
        Else
            Cells(4, 13).Value = 0            ''ContractAmount
            Cells(5, 13).Value = 0            ''ContractAmount(NK)
            Cells(6, 13).Value = 0            ''ContractAmount(ASO)
            
            Cells(4, 15).Value = 0            ''% ofAdvance
            Cells(5, 15).Value = 0            ''% ofAdvance(NK)
            Cells(6, 15).Value = 0            ''% ofAdvance(ASO)
            
            Cells(4, 16).Value = 0            ''AdvancePayment
            Cells(5, 16).Value = 0            ''AdvancePayment(NK)
            Cells(6, 16).Value = 0            ''AdvancePayment(ASO)
        End If

        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        s_SetupDetailCells

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If
    f_onChangeCell = True

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If

    If Target.Row = 4 And Target.Column = 4 Then
        If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
            Exit Sub
        End If
        For lngCollIndex = 1 To Target.Count Step 1
            If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
                GoTo ERROR_END
            End If
        Next
        sg_SetRangeValueToCollection m_collBeforeValue, Target
    
    End If
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/07 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Target.Row = 4 And Target.Column = 4 Then
        sg_SetRangeValueToCollection m_collBeforeValue, Target
        
        
    ElseIf Target.Row >= c_intInvDetailRowST And _
           Cells(Target.Row, 8).Value <> "" And _
           Cells(Target.Row, 9).Value = "Paid" Then
'    ElseIf Target.Row >= c_intInvDetailRowST And _
'           Cells(Target.Row, 10).Value <> "" Then  ''TEST Paid|fffd||20a|O|fffd||311|I|fffd||fffd|
        If Cells(4, 4).Value = g_typAryPJTInfo(0).m_strCurrency Then
            ''|fffd|X|fffd|V|fffd||fffd||fffd||82||30f||a347||fffd||302||fffd|
            'CmdBtnReverse.Enabled = True
            CmdBtnReverse.Enabled = g_blnLedgerModify
        Else
            CmdBtnReverse.Enabled = False
        End If
    Else
        CmdBtnReverse.Enabled = False
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(4) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ReverseCheck(|fffd|t|fffd|`|fffd|[)|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Invoice|fffd||30b|t|fffd|`|fffd|[|fffd||fffd||fffd||c42c||fffd||fffd||fffd|A|fffd|C|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||342||302||fffd||fffd||7c2||fffd|Led04|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnReverse_Click()
    Dim strWork As String
    Dim strLinkCode As String
    
    strWork = c_strQUESTION_REVERSE_PFX & Cells(ActiveCell.Row, 2).Value & c_strQUESTION_REVERSE_SFX

    If vbYes <> MsgBox(strWork, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        Exit Sub
    End If

    strLinkCode = Cells(ActiveCell.Row, 10).Value
    strWork = g_strArywsName(GLED_BR)
    ThisWorkbook.Sheets(strWork).Activate
    wsBrInvoice.fw_SetupSheet
    wsBrInvoice.m_strReverseInvLinkCode = strLinkCode
    wsBrInvoice.m_strReverseCurrency = Cells(4, 4).Value
    wsBrInvoice.sw_ReverseRecord

End Sub

Attribute VB_Name = "wsLedRemit"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||44a0|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit


'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s
Private Const mc_lngMAX_ROWINDEX As Long = 40 ''PastRemittance|fffd||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean

    ''Del sho 20020124
    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
'    If g_blnArySetupSheet(GLED_RM) = True Then
'        s_SetupDetail      ''|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'        fw_SetupSheet = True
'        Exit Function
'    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''BackBook|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False Then
        MsgBox c_strMSG_MASTER_BBOOK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    m_blnDirty = False
    Unprotect Password:=c_strSheetPWD    ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    s_SetupHeader              ''|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetail              ''|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
    ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
            
    g_blnArySetupSheet(GLED_RM) = True      ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_RM) = False    ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    fw_SetupSheet = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/02 : Knowlbo Nakarai : |fffd||fffd||fffd|C|fffd|A|fffd|E|fffd|g|fffd||3cd|X|fffd||242||fffd||fffd|C|fffd||fffd|
'   2003/02/28 : Knowlbo Nakarai : |fffd||fffd||fffd|z|fffd|Z|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd||1c9||fffd|
'   2003/10/10 : Knowlbo Nakarai : Date|fffd|Z|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupHeader()

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intBBIndex As Integer   ''UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd|BankBook|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    ''Project Code
    Cells(6, 8).Value = g_typAryPJTInfo(0).m_strPJTCode
    ''Project Name
    Cells(7, 8).Value = g_typAryPJTInfo(0).m_strPJTName

    ''UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd|BANKBOOK|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe|
    For intCount = 0 To UBound(g_typAryBBInfo)
        If (g_typAryBBInfo(intCount).m_blnUseRemittance = True) Then
            intBBIndex = intCount
        End If
    Next
    ''BankName,Branch
    Cells(3, 3).Value = g_typAryBBInfo(intBBIndex).m_strName _
            & Space$(1) & "," & Space$(1) & g_typAryBBInfo(intBBIndex).m_strBranch
    ''Bank(Branch)Address
    Cells(4, 3).Value = g_typAryBBInfo(intBBIndex).m_strAdress
    ''Beneficiary's Name
    Cells(5, 3).Value = g_typAryBBInfo(intBBIndex).m_strBeneficiaryName
    ''A/C No.
    Cells(6, 3).NumberFormat = "@"
    Cells(6, 3).Value = g_typAryBBInfo(intBBIndex).m_strAccountNo
    ''Signer of A/C
    Cells(7, 3).Value = g_typAryBBInfo(intBBIndex).m_strSigner
    
    ''|fffd||fffd||fffd||fffd||fffd||752||fffd|
    Range("D11:D40").NumberFormat = g_strFORMAT_DECR_XX
    Range("L11:L40").NumberFormat = g_strFORMAT_DECR_XX
    Range("C11:C40").NumberFormat = c_strFORMAT_DATE
    Range("K11:K40").NumberFormat = c_strFORMAT_DATE
    Range("E11:J40").NumberFormat = "@"
    Range("M11:M40").NumberFormat = "@"
    
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 : Knowlbo Suzuki : |fffd||690|A
'-----------------------------------------------------------------
Private Sub s_SetupDetail()

    Dim intAddRow As Integer        ''|fffd|V|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|s
    Dim intItemCount As Integer     ''|fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    ''DATA|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    intItemCount = 0
    If m_lngModfyMAX_ROWINDEX > mc_lngMAX_ROWINDEX Then
        Range("B11:M" & m_lngModfyMAX_ROWINDEX).ClearContents
        Range("B40:M" & m_lngModfyMAX_ROWINDEX - 1).Delete Shift:=xlUp
    Else
        Range("B11:M" & mc_lngMAX_ROWINDEX).ClearContents
    End If
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY " & "tb.LedgerLinkCode"
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    If Not (adoRs Is Nothing) And adoRs.EOF = False Then
        ''|fffd||fffd||fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||341|A|fffd|s|fffd||11742||20b7|
        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe|
        Do Until adoRs.EOF
            intItemCount = intItemCount + 1
            adoRs.MoveNext
        Loop
        
        ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||64ea||fffd||256||7c2||fffd|
        adoRs.MoveFirst
        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|K|fffd||fffd||fffd||fffd|I|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||70bb||fffd||315||fffd||fffd|A|fffd|s|fffd||fffd||1c9||fffd|
        If (intItemCount > 30) Then
            For intCount = 0 To intItemCount - 31
                Range("39:39").Copy
                Range("39:39").Insert Shift:=xlDown
            Next
        End If
        m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX + intCount
    End If
    
    intAddRow = 11
    Do Until adoRs.EOF
        Cells(intAddRow, 2).Value = adoRs.Fields("LedgerLinkCode").Value
        Cells(intAddRow, 3).Value = adoRs.Fields("RequestDate").Value
        Cells(intAddRow, 5).Value = adoRs.Fields("RequestCurrency").Value
        Cells(intAddRow, 4).Value = adoRs.Fields("RequestAmount").Value
        Cells(intAddRow, 6).Value = adoRs.Fields("ContactPlace").Value
        If (IsNull(adoRs.Fields("Comment").Value) = False) Then
            Cells(intAddRow, 8).Value = adoRs.Fields("Comment").Value
        End If
        Cells(intAddRow, 11).Value = adoRs.Fields("ReceiptDate").Value
        Cells(intAddRow, 13).Value = adoRs.Fields("ReceiptCurrency").Value
        Cells(intAddRow, 12).Value = adoRs.Fields("ReceiptAmount").Value
        adoRs.MoveNext
        intAddRow = intAddRow + 1
    Loop
    
    On Error GoTo 0
    
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_SetupDetail:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetupDetail", strMSG
    GoTo LBL_END
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(10) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub
Attribute VB_Name = "wsLedSubcon"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|O|fffd||fffd||fffd|x|fffd||fffd||fffd||44a0||fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s

Public m_strEditInvCode As String               ''SubConCode(|fffd||102||44f|o|fffd||fffd||fffd||fffd|LEDGER|fffd||150||752||fffd|)
Public m_strEditInvLinkCode As String           ''LedgerLinkCode(|fffd||102||44f|o|fffd||fffd||fffd||fffd|LEDGER|fffd||150||752||fffd|)
Public m_intCallLedger As Integer               ''|fffd||102||44f|o|fffd||fffd||fffd||fffd|LEDGER
Public m_blnEditInv As Boolean                  ''|fffd||fffd||fffd|z|fffd|s|fffd||fffd|v|fffd||242||fffd||fffd|C|fffd||fffd||fffd|t|fffd||fffd||fffd|O

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 33 ''|fffd||fffd||fffd||34d||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l

'-----------------------------------------------------------------
' |fffd||fffd||fffd|I|fffd||fffd||515||fffd||fffd||fffd||fffd||fffd||8414|
'-----------------------------------------------------------------
Private Const mc_strStatPaid As String = "Paid"               ''Status|fffd|F|fffd|x|fffd||fffd||fffd||fffd|
Private Const mc_strStatVoid As String = "Void"               ''Status|fffd|F|fffd||fffd||fffd||fffd|
Private Const mc_strStatCompWorks As String = "Complet.Works" ''Status|fffd|F|fffd||fffd||18a||fffd||fffd||fffd|
Private Const mc_strStatEstimated As String = "Estimated"     ''Status|fffd|F|fffd||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/03/02 : Knowlbo Suzuki : Detail|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean

    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|

    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_SC) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        If g_blnAryCmnMstUpdate(GLED_SC) Then
            s_SetupHeader                           ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            g_blnAryCmnMstUpdate(GLED_SC) = False
        End If
        
        s_SetupDetailCells
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        Exit Function
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''Sub-contractor|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_SC) = False Then
        MsgBox c_strMSG_MASTER_SUBC, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''|fffd||151||fffd||fffd||fffd||34d|s|fffd||752||fffd|i|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b5||fffd|A|fffd|f|fffd|[|fffd|^|fffd||282||242||fffd||fffd||fffd||10d|s|fffd||11742||20b7||fffd|j
    ''m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intSCDetailRowST)
    Cells(c_intSCDetailRowST, 2).Activate
    sg_SetScreenUpdate False
 
    m_blnDirty = False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True                            ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_SetupHeader                                               ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_ClearDetailCells                                          ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    s_SetupDetailValidationCells                                ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells                                          ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False                           ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True    ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    g_blnArySetupSheet(GLED_SC) = True                          ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_SC) = False                       ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()
    Dim lngIndex As Long
    Dim strDatas As String
     
    s_SetupSubcontractCells    ''|fffd|O|fffd||fffd||fffd||18e||fffd|Code,Name|fffd||303|R|fffd||fffd||fffd|{|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
  
    If Cells(3, 4).Value <> "" Then
        ''Sub-contractorCode
        lngIndex = fg_GetSubConCodeOrName(Cells(3, 4).Value, strDatas)
        If lngIndex >= 0 Then
            ''ContractAmount
            Cells(4, 14).Value = g_typArySConInfo(lngIndex).m_curContract
            ''ContractAdvance
            Cells(5, 14).Value = g_typArySConInfo(lngIndex).m_curAdvance
        End If
    End If
    
    ''Currency/ContractAmount/ContractAdvance |fffd||34b||18e||491|I|fffd||fffd||fffd||fffd||250||752||80b7||fffd||fffd|

    Cells(2, 13).Value = g_typAryPJTInfo(0).m_strPJTCode    ''Project Code
    Cells(3, 13).Value = g_typAryPJTInfo(0).m_strPJTName    ''Project Name
    
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("N4:N7").NumberFormat = g_strFORMAT_DEC_XX

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd||18e||491|I|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||283|}|fffd|X|fffd|^|fffd||250||752||fffd||3c2||742||30a|O|fffd||fffd||fffd||18e||483||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||342||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/10/30 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupSubcontractCells()

    Dim lngIx As Long
    Dim strAreaCd As String
    Dim strAreaNm As String
        
    
    ''|fffd|O|fffd||fffd||fffd||18e||483||fffd||fffd|X|fffd|gCode|fffd||fffd|R|fffd||fffd|AName|fffd||fffd|S|fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    For lngIx = 0 To UBound(g_typArySConInfo)
        Cells(c_intSCDetailRowST + lngIx, 18).Value = g_typArySConInfo(lngIx).m_strCode
        Cells(c_intSCDetailRowST + lngIx, 19).Value = g_typArySConInfo(lngIx).m_strName
    Next
    
    strAreaCd = "=$R$" & c_intSCDetailRowST & ":$R$" & c_intSCDetailRowST + lngIx - 1
    strAreaNm = "=$S$" & c_intSCDetailRowST & ":$S$" & c_intSCDetailRowST + lngIx - 1
    
    sg_SetupValidation Range("D3").Validation, c_strMSG_SUBCON_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strAreaCd, Null
    sg_SetupValidation Range("D4").Validation, c_strMSG_SUBCON_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strAreaNm, Null

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Status|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||fffd|Status|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupStatusCells( _
    ByRef rngTarget As Range _
)
    Dim strDatas As String

    strDatas = mc_strStatPaid & "," & mc_strStatCompWorks & "," & mc_strStatEstimated & "," & mc_strStatVoid
    sg_SetupValidation rngTarget.Validation, c_strMSG_SelectList, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    ''DateReceived, DatePaid
    sg_SetupValidation Range("D" & c_intSCDetailRowST, "E" & m_lngModfyMAX_ROWINDEX).Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range("D" & c_intSCDetailRowST, "E" & m_lngModfyMAX_ROWINDEX).NumberFormat = c_strFORMAT_DATE
    
    ''Status
    s_SetupStatusCells Range("F" & c_intSCDetailRowST, "F" & m_lngModfyMAX_ROWINDEX)
    
    ''InvoiceAmount, RepaymentAmount
    sg_SetupValidation Range("H" & c_intSCDetailRowST, "I" & m_lngModfyMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=-999999999999999", Null
   
    ''Addition / Deduction
    sg_SetupValidation Range("K" & c_intSCDetailRowST, "M" & m_lngModfyMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=-999999999999999", Null
    
    ''|fffd|\|fffd||fffd||fffd|`|fffd||fffd|
    Range("H" & c_intSCDetailRowST - 1, "N" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DEC_XX
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/03/02 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_ClearDetailCells()
    
    Dim intCount As Integer         ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim lngDelRow As Long           ''Delete|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If m_lngModfyMAX_ROWINDEX > mc_lngMAX_ROWINDEX Then
        lngDelRow = mc_lngMAX_ROWINDEX - 1
        For intCount = 0 To (m_lngModfyMAX_ROWINDEX - mc_lngMAX_ROWINDEX) - 1
            'Range("A" & lngDelRow, "N" & lngDelRow).Delete Shift:=xlUp
            Range("A" & lngDelRow, "P" & lngDelRow).Delete Shift:=xlUp
        Next
    End If
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    Range("B" & c_intSCDetailRowST, "B" & mc_lngMAX_ROWINDEX).ClearContents
    Range("C" & c_intSCDetailRowST, "C" & mc_lngMAX_ROWINDEX).ClearContents
    Range("C" & c_intSCDetailRowST).Value = "Advance"
    Range("D" & c_intSCDetailRowST, "I" & mc_lngMAX_ROWINDEX).ClearContents
    Range("K" & c_intSCDetailRowST, "M" & mc_lngMAX_ROWINDEX).ClearContents
    Range("O" & c_intSCDetailRowST, "P" & mc_lngMAX_ROWINDEX).ClearContents
    Range("U" & c_intSCDetailRowST, "U" & mc_lngMAX_ROWINDEX).ClearContents
    
    ''Lock|fffd||fffd||fffd||fffd|
    Range("B" & c_intSCDetailRowST, "B" & mc_lngMAX_ROWINDEX).Locked = False
    Range("C" & c_intSCDetailRowST + 1, "C" & mc_lngMAX_ROWINDEX).Locked = False
    Range("D" & c_intSCDetailRowST, "D" & mc_lngMAX_ROWINDEX).Locked = False
    Range("F" & c_intSCDetailRowST, "F" & mc_lngMAX_ROWINDEX).Locked = False
    Range("H" & c_intSCDetailRowST, "I" & mc_lngMAX_ROWINDEX).Locked = False
    Range("K" & c_intSCDetailRowST, "M" & mc_lngMAX_ROWINDEX).Locked = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/23 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/27 : Knowlbo Suzuki : Description|fffd|\|fffd||fffd||fffd||3cd|X
'   2004/03/02 : Knowlbo Suzuki : Detail|fffd||fffd||fffd||fffd||fffd||18d||151||fffd|s|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd|P
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim intCount As Integer
    Dim intItemCount As Integer     ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim lngDetailRow As Long        ''|fffd||fffd||fffd||5d5||fffd||fffd||30d|s
    Dim lngIndex As Long
    Dim strData As String
    Dim blnLock As Boolean
    Dim lngRowIndex As Long
    
    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_blnDirty = False

    ''|fffd|f|fffd|[|fffd|^|fffd||151||fffd|s|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||73c9||fffd||fffd||fffd|l|fffd||256||7c2||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
    sg_SetScreenUpdate False
    s_ClearDetailCells                 ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    
    ''DB|fffd||fffd||fffd||fffd||fffd||38f||fffd|(Sub-ContractorCode)|fffd||fffd||fffd||fffd||202||302||14f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If Cells(3, 4).Value = "" Or Cells(4, 4).Value = "" Then
        Exit Sub
    End If

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SubConPayment & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.SubConCode = " & fg_AddSingleQuotation(Cells(3, 4).Value)
    strSQL = strSQL & " ORDER BY " & "tb.InvRefNo"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    
    intItemCount = 0
    lngDetailRow = mc_lngMAX_ROWINDEX - 12    ''|fffd||fffd||fffd||5d5||fffd||fffd||30d|s|fffd||348||342||fffd||fffd||64fe|
    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe|
    If Not (adoRs Is Nothing) And adoRs.EOF = False Then
        Do Until adoRs.EOF
            intItemCount = intItemCount + 1
            adoRs.MoveNext
        Loop
        
        ''|fffd||fffd||fffd||34d|s|fffd||fffd||fffd|T|fffd|s|fffd||209||fffd||fffd|A|fffd||702||fffd||fffd||343|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||34d|s|fffd||11742||20b7|
        If ((lngDetailRow - intItemCount) < 5) Or (intItemCount > lngDetailRow) Then
            For intCount = 0 To (intItemCount + 4) - lngDetailRow
                Range("A32:N32").Copy
                Range("A32:N32").Insert Shift:=xlDown
            Next
            m_lngModfyMAX_ROWINDEX = m_lngModfyMAX_ROWINDEX + intCount
        Else
            m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
        End If
    
        ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||64ea||fffd||256||7c2||fffd|
        adoRs.MoveFirst
    End If

    lngIndex = c_intSCDetailRowST + 1
    Do Until adoRs.EOF
        blnLock = False
        If Not IsNull(adoRs.Fields("AdvanceData").Value) And _
            adoRs.Fields("AdvanceData").Value = "1" Then  'Advance|fffd|s
            lngRowIndex = c_intSCDetailRowST
        Else
            lngRowIndex = lngIndex
            lngIndex = lngIndex + 1
        End If
        If Not IsNull(adoRs.Fields("InvRefNo").Value) Then
            Cells(lngRowIndex, 2).Value = adoRs.Fields("InvRefNo").Value
        End If
        If Not IsNull(adoRs.Fields("Description").Value) Then
            Cells(lngRowIndex, 3).Value = adoRs.Fields("Description").Value
        End If
        If Not IsNull(adoRs.Fields("ReceivedDate").Value) Then
            Cells(lngRowIndex, 4).Value = adoRs.Fields("ReceivedDate").Value
        End If
        If Not IsNull(adoRs.Fields("PaidDate").Value) Then
            Cells(lngRowIndex, 5).Value = adoRs.Fields("PaidDate").Value
        End If
        If Cells(lngRowIndex, 5).Value <> "" Then blnLock = True
        Cells(lngRowIndex, 6).Value = adoRs.Fields("Status").Value
        Cells(lngRowIndex, 7).Value = adoRs.Fields("LedgerLinkCode").Value

        If Not IsNull(adoRs.Fields("InvoiceAmount").Value) And _
            adoRs.Fields("InvoiceAmount").Value <> 0 Then
            Cells(lngRowIndex, 8).Value = adoRs.Fields("InvoiceAmount").Value
        End If
        If Not IsNull(adoRs.Fields("Repayment").Value) And _
            adoRs.Fields("Repayment").Value <> 0 Then
            Cells(lngRowIndex, 9).Value = adoRs.Fields("Repayment").Value
        End If
        If Not IsNull(adoRs.Fields("Vat").Value) And _
            adoRs.Fields("Vat").Value <> 0 Then
            Cells(lngRowIndex, 11).Value = adoRs.Fields("Vat").Value
        End If
        If Not IsNull(adoRs.Fields("HoldingTax").Value) And _
            adoRs.Fields("HoldingTax").Value <> 0 Then
            Cells(lngRowIndex, 12).Value = adoRs.Fields("HoldingTax").Value
        End If
        If Not IsNull(adoRs.Fields("Others").Value) And _
            adoRs.Fields("Others").Value <> 0 Then
            Cells(lngRowIndex, 13).Value = adoRs.Fields("Others").Value
        End If

        ''|fffd|X|fffd|V|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||80b7||fffd||90bd||fffd||7c2||fffd|ID|fffd||182||fffd||fffd||fffd|LinkCode|fffd||fffd||6d1||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|i|fffd|d|fffd|v|fffd|j
        Cells(lngRowIndex, 15).Value = adoRs.Fields("LedgerLinkCode").Value
        
        ''|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
        If blnLock Then Range("B" & lngRowIndex, "M" & lngRowIndex).Locked = blnLock
        adoRs.MoveNext
    Loop
   
    On Error GoTo 0
   
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    sg_GetCurrentLinkCodeNo GLNK_SC ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||64fe|
    Application.GoTo Range("A" & c_intSCDetailRowST), Scroll:=True    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED6]s_SetupDetailCells:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetupDetailCells", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   NULL|fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|w|fffd||fffd|sNo
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|s|fffd||30a|e|fffd||fffd||fffd|NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_IsNullRow( _
    ByVal lngRowIndex As Long _
) As Boolean
    Dim intIxCol As Integer
    f_IsNullRow = False
    For intIxCol = 2 To 9
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    For intIxCol = 11 To 13
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    
    f_IsNullRow = True
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
    
    Dim lngRowIndex As Long
        
    f_CheckInputData = False
    
    For lngRowIndex = c_intSCDetailRowST To m_lngModfyMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 16).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|

            ''InvRefNo
            If Cells(lngRowIndex, 2).Value = "" Then
                strMessage = c_strMSG_INVOICE_NUM
                Cells(lngRowIndex, 2).Activate
                Exit Function
            Else
                If Len(Cells(lngRowIndex, 2).Value) > 30 Then
                    strMessage = c_strMSGCmn_LENGTHOVER & "30"
                    Cells(lngRowIndex, 2).Activate
                    Exit Function
                End If
            End If
            
            ''Description
            If Cells(lngRowIndex, 3).Value = "" Then
                strMessage = c_strMSG_DESCRIPTION
                Cells(lngRowIndex, 3).Activate
                Exit Function
            End If
            
            ''Received Date
            If Cells(lngRowIndex, 4).Value = "" Then
                strMessage = c_strMSG_DATE_FORMAT
                Cells(lngRowIndex, 4).Activate
                Exit Function
            End If
            
            ''Status
            If Cells(lngRowIndex, 6).Value = "" Then
                strMessage = c_strMSG_SUBCON_STATUS
                Cells(lngRowIndex, 6).Activate
                Exit Function
            End If
            
            ''Invoice Amount
            If Cells(lngRowIndex, 8).Value = "" Then
                strMessage = c_strMSG_SUBCON_InvoiceAmount
                Cells(lngRowIndex, 8).Activate
                Exit Function
            End If
            
            ''Repayment
            If Cells(lngRowIndex, 9).Value <> "" Then
                
                If Cells(c_intSCDetailRowST, 8).Value <> 0 Then  ''|fffd|O|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd|
                    If Cells(c_intSCDetailRowST, 8).Value + Cells(c_intSCDetailRowST - 1, 9).Value < 0 Then
                    ''Repayment|fffd||fffd||fffd||fffd|
                        strMessage = c_strMSG_SUBCON_RepaymentOver
                        Cells(lngRowIndex, 9).Activate
                        Exit Function
                    End If
                Else    ''|fffd|O|fffd|n|fffd||fffd||fffd||202||fffd|
                    strMessage = c_strMSG_SUBCON_AdvRepayment
                    Cells(lngRowIndex, 9).Activate
                    Exit Function
                End If
            End If
        
        End If
    Next

    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/01/10 : Knowlbo Nakarai : |fffd||fffd||fffd||34d|s|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    Dim lngIndex As Long
    Dim blnSetSCCode As Boolean
    Dim blnSetSCName As Boolean
    Dim blnSetData As Boolean
    Dim blnSetLinkCode As Boolean
    Dim lngTokenIdx As Long
    Dim strDatas As String
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim lngCopyRow As Long      ''Copy|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X(Insert|fffd|p)
    Dim blnSetStatus As Boolean
    
    blnSetData = False
    blnSetSCCode = False
    blnSetSCName = False
    blnSetLinkCode = False
    blnSetStatus = False
       
    ''Sub-contract Code
    If rngTarget.Row = 3 And rngTarget.Column = 4 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetSCCode = True
        blnSetData = True
    
    ''Sub-contract Name
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 4 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetSCName = True
        blnSetData = True
    
    ''Detail
    ElseIf rngTarget.Row >= c_intSCDetailRowST Then
    
        ''Sub-Contract|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(3, 4).Value = "" Then
            MsgBox c_strMSG_SUBCON_CODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(3, 4).Activate
            Exit Function
        End If
        
        blnSetLinkCode = True
                
        Select Case rngTarget.Column
        
        Case 2 ''Inv.Ref.No.
        Case 3 ''Description
        Case 4 ''ReceivedDate
        ''Paid Date |fffd||343||fffd||fffd|[|fffd|U|fffd||3cd|X|fffd|s|fffd||fffd|
        'Case 5 ''PaidDate
        Case 6 ''StatusCode
            If rngTarget.Value = mc_strStatVoid Then
                If vbNo = MsgBox(c_strMSG_SUBCON_StatusVoid, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                    f_onChangeCell = False
                    ActiveCell.Activate
                    Exit Function
                End If
                blnSetStatus = True
            End If
        Case 7 ''LedgerLinkCode
            blnSetLinkCode = False
            
        Case 8 ''InvoiceAmount
        Case 9 ''RepaymentAdvance
        Case 10 ''ClaimedsubTotal
        Case 11 ''Vat
        Case 12 ''Tax
        Case 13 ''Others
        Case 14 ''PaymentAmount
            
        End Select
 
    End If

    ''Sub-contractor Code / Name |fffd||3cd|X
    If blnSetSCCode Or blnSetSCName Then
        m_blnSetupCellsInProgress = True
        strDatas = ""
        If blnSetSCCode Then
            ''Sub-contractorCode
            lngIndex = fg_GetSubConCodeOrName(rngTarget.Value, strDatas)
            Cells(4, 4).Value = strDatas
        Else
            ''Sub-contractorName
            lngIndex = fg_GetSubConCodeOrName(strDatas, rngTarget.Value)
            Cells(3, 4).Value = strDatas
        End If
        
        If lngIndex <= UBound(g_typArySConInfo) Then
            ''Currency
            Cells(5, 4).Value = g_typArySConInfo(lngIndex).m_strCurrency
            ''ContractAmount
            Cells(4, 14).Value = g_typArySConInfo(lngIndex).m_curContract
            ''ContractAdvance
            Cells(5, 14).Value = g_typArySConInfo(lngIndex).m_curAdvance
            
            ''Reimbursable
            If g_typArySConInfo(lngIndex).m_intReimbursable = 0 Then
                Cells(6, 4).Value = c_strSbCReimbursable
            Else
                Cells(6, 4).Value = c_strSbCNonReimbursable
            End If
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''LedgerLinkCode|fffd||fffd||fffd||fffd|
    If blnSetLinkCode And Cells(rngTarget.Row, 7).Value = "" Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        Cells(rngTarget.Row, 7).Value = fg_CreateLinkCode(GLNK_SC)
        Cells(rngTarget.Row, 6).Value = mc_strStatCompWorks
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    If blnSetStatus Then ''Status Void
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        Cells(rngTarget.Row, 8).Value = 0
        Cells(rngTarget.Row, 9).ClearContents
        Cells(rngTarget.Row, 11).ClearContents
        Cells(rngTarget.Row, 12).ClearContents
        Cells(rngTarget.Row, 13).ClearContents
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        s_SetupDetailCells        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|
    If rngTarget.Row >= c_intSCDetailRowST And rngTarget.Row <= m_lngModfyMAX_ROWINDEX Then
        m_blnSetupCellsInProgress = True
        Cells(rngTarget.Row, 16) = 1
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If

    ''|fffd||fffd||fffd||34d|s|fffd||fffd||fffd|c|fffd||fffd|Q|fffd|s|fffd||242||202||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||1c9||fffd|
    If (rngTarget.Row = m_lngModfyMAX_ROWINDEX - 2) Then
        m_blnSetupCellsInProgress = True
        ''|fffd|s|fffd||1c9||fffd||fffd||fffd||fffd||fffd|
        lngCopyRow = m_lngModfyMAX_ROWINDEX - 1
        For intCount = 1 To 3
            Range("A" & lngCopyRow, "N" & lngCopyRow).Copy
            Range("A" & lngCopyRow, "N" & lngCopyRow).Insert Shift:=xlDown
        Next
        Application.CutCopyMode = False
        m_lngModfyMAX_ROWINDEX = m_lngModfyMAX_ROWINDEX + intCount - 1
        m_blnSetupCellsInProgress = False
    End If

    f_onChangeCell = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/27 : Knowlbo Suzuki : UpDate|fffd||fffd||fffd|ReLoad|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim strMSG As String
    Dim blnUpdate As Boolean
    Dim datValue As Date
    Dim strData As String
    Dim blnCleateLinkCode As Boolean
    Dim datPrNow As Date

    datPrNow = Now()
    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    If Not f_CheckInputData(strMSG) Then    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
        MsgBox strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    sg_SetScreenUpdate False

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_SubConPayment & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.SubConCode = " & fg_AddSingleQuotation(Cells(3, 4).Value)
    strSQL = strSQL & " ORDER BY " & "tb.InvRefNo"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_SubConPayment
        GoTo LBL_ERR
    End If
    
    blnCleateLinkCode = False
    ''DB|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V------------------------------------------------------------
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    For lngRowIndex = c_intSCDetailRowST To m_lngModfyMAX_ROWINDEX Step 1
        If Cells(lngRowIndex, 16).Value = 1 Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            If f_IsNullRow(lngRowIndex) Then
                ''NULL|fffd|s|fffd||202||302||143|f|fffd|[|fffd|^|fffd||d3dc|(|fffd||fffd||fffd||389||fffd|)
            Else
                ''|fffd|X|fffd|V/|fffd||1c9||fffd|
                blnUpdate = False
                adoRs.Filter = adFilterNone

                ''|fffd|X|fffd|V |fffd|iLinkCode|fffd||fffd|ID|fffd||311||582||fffd||243|}|fffd|b|fffd|`|fffd||fffd||fffd|O|fffd||24e|g|fffd|p|fffd||fffd||fffd||fffd|j
                If Cells(lngRowIndex, 15).Value <> "" Then ''Linkcode(ID)|fffd||fffd||fffd||fffd||fffd||fffd|
                    adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(Cells(lngRowIndex, 15).Value)
                    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                        objdba.SQLString = fg_setSubConPaymentHistorySQLString(adoRs, datPrNow)
                        If (objdba.ExecuteSQL(adoCn) <> 0) Then
                            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_SubConPayment
                            GoTo LBL_ERR
                        End If
                    Else
                        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_SubConPayment
                        GoTo LBL_ERR
                    End If
                    blnUpdate = True
                    blnCleateLinkCode = False
                Else
                    blnCleateLinkCode = True
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                    blnUpdate = True
                End If
                If blnUpdate Then
                    adoRs.Fields("OfficeCode").Value = g_strOfficeCode                  ''OfficeCode
                    adoRs.Fields("LedgerLinkCode").Value = Cells(lngRowIndex, 7).Value  ''LedgerLinkCode
                    adoRs.Fields("SubConCode").Value = Cells(3, 4).Value                ''SubContractorCode
                    If Cells(lngRowIndex, 2).Value <> "" Then                           ''InvRefNo
                        strData = CStr(Cells(lngRowIndex, 2).Value)
                        adoRs.Fields("InvRefNo").Value = strData
                    Else
                        adoRs.Fields("InvRefNo").Value = Null
                    End If
                    adoRs.Fields("Currency").Value = Cells(5, 4).Value                  ''Currency
                    If Cells(lngRowIndex, 3).Value <> "" Then                           ''Description
                        strData = CStr(Cells(lngRowIndex, 3).Value)
                        If Left$(strData, 4) = c_strKwdModifyBR Or _
                           Left$(strData, 4) = c_strKwdModifyNK Then
                            strData = c_strKwdModifyNK & Mid$(strData, 5)
                        Else
                            strData = c_strKwdModifyNK & strData
                        End If
                        If Len(strData) > 128 Then strData = Left$(strData, 128)
                        adoRs.Fields("Description").Value = strData
                    Else
                        adoRs.Fields("Description").Value = c_strKwdModifyNK
                    End If
                    If Cells(lngRowIndex, 4).Value <> "" Then                           ''ReceivedDate
                        datValue = DateValue(Cells(lngRowIndex, 4).Value)
                        adoRs.Fields("ReceivedDate").Value = datValue
                    Else
                        adoRs.Fields("ReceivedDate").Value = Null
                    End If
                    If Cells(lngRowIndex, 5).Value <> "" Then                           ''PaidDate
                        datValue = DateValue(Cells(lngRowIndex, 5).Value)
                        adoRs.Fields("PaidDate").Value = datValue
                    Else
                        adoRs.Fields("PaidDate").Value = Null
                    End If
                    
                    adoRs.Fields("Status").Value = Cells(lngRowIndex, 6).Value          ''Status
                    If Not IsEmpty(Cells(lngRowIndex, 8).Value) Then                ''InvoiceAmount
                        adoRs.Fields("InvoiceAmount").Value = Cells(lngRowIndex, 8).Value
                    Else
                        adoRs.Fields("InvoiceAmount").Value = 0
                    End If
                    If Not IsEmpty(Cells(lngRowIndex, 9).Value) Then                ''Repayment
                        adoRs.Fields("Repayment").Value = Cells(lngRowIndex, 9).Value
                    Else
                        adoRs.Fields("Repayment").Value = 0
                    End If
                    If Not IsEmpty(Cells(lngRowIndex, 11).Value) Then               ''Vat
                        adoRs.Fields("Vat").Value = Cells(lngRowIndex, 11).Value
                    Else
                        adoRs.Fields("Vat").Value = 0
                    End If
                    If Not IsEmpty(Cells(lngRowIndex, 12).Value) Then               ''HoldingTax
                        adoRs.Fields("HoldingTax").Value = Cells(lngRowIndex, 12).Value
                    Else
                        adoRs.Fields("HoldingTax").Value = 0
                    End If
                    
                    If Not IsEmpty(Cells(lngRowIndex, 13).Value) Then               ''Others
                        adoRs.Fields("Others").Value = Cells(lngRowIndex, 13).Value
                    Else
                        adoRs.Fields("Others").Value = 0
                    End If
                    
                    If Not IsEmpty(Cells(lngRowIndex, 14).Value) Then               ''PaymentAmount
                        adoRs.Fields("PaymentAmount").Value = Cells(lngRowIndex, 14).Value
                    Else
                        adoRs.Fields("PaymentAmount").Value = 0
                    End If
                    If lngRowIndex = c_intSCDetailRowST Then
                        adoRs.Fields("AdvanceData").Value = "1"                     ''AdvanceData
                    Else
                        adoRs.Fields("AdvanceData").Value = Null
                    End If
                    adoRs.Fields("ModifyPlace").Value = "1"                         ''ModifyPlace
                    ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
                    adoRs.Fields("InsertDate").Value = datPrNow
                    adoRs.Fields("InsertUID").Value = g_strLoginId
                    adoRs.Update
                    
                    ''ReLoad|fffd||fffd||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g
                    ''ID|fffd||311||582||fffd||fffd|LinkCode|fffd||fffd|ID|fffd||fffd||255||6d1||fffd|
                    ''Cells(lngRowIndex, 15).Value = Cells(lngRowIndex, 7).Value
                    ''Cells(lngRowIndex, 16).Value = 0
                End If
                adoRs.MoveFirst
            End If
        End If
    Next
    Call objdba.closeRecordset(adoRs)
    
    If blnCleateLinkCode Then
        ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_SC, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    s_SetupDetailCells        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    m_blnDirty = False
    CmdBtnDbUpDate.Visible = True
    
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    
    If (m_blnEditInv = True) Then
        ThisWorkbook.Sheets(g_strArywsName(m_intCallLedger)).Activate
        m_blnEditInv = False
        Exit Sub
    End If
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    sg_SetScreenUpdate True
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED7]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/28 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    
    If (m_blnEditInv = True) Then
        ThisWorkbook.Sheets(g_strArywsName(m_intCallLedger)).Activate
        m_blnEditInv = False
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(6) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If

    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If


    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd|BOOK|fffd||fffd||fffd||fffd||30f|C|fffd||fffd||fffd|p|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd|BOOK|fffd||fffd||fffd||fffd||30f|C|fffd||fffd||fffd|p|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/06 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub sw_EditRecord()

    Dim lngRow As Long      ''|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    Cells(3, 4).Value = m_strEditInvCode    ''SubConCode|fffd||fffd||752||fffd|
    
    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||fffd|s|fffd||fffd||752||fffd|
    lngRow = 13
    Do While Cells(lngRow, 7) <> ""
        If (Cells(lngRow, 7).Value = m_strEditInvLinkCode) Then
            Cells(lngRow, 8).Activate
        End If
        lngRow = lngRow + 1
    Loop
   
End Sub

Attribute VB_Name = "wsPLBalance"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdWBS, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnQuit, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdSearch, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "tglComma, 4, 3, MSForms, ToggleButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| PL|fffd||fffd||fffd||5cf|W|fffd|v|fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection         ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                   ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long          ''|fffd||fffd||fffd||34d||151||fffd|s
Private m_strWBSBuf As String                   ''WBS|fffd|R|fffd|[|fffd|h|fffd|o|fffd|b|fffd|t|fffd|@|fffd|i|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||fffd|j
Private m_blnShiftKeyDOWN As Boolean            ''Shift|fffd|L|fffd|[|fffd||30f||fffd||50e||fffd||fffd||fffd|

Private m_blnChkProject As Boolean
Private m_blnChkOperatingTechnology As Boolean
Private m_blnChkPartExpense As Boolean
'Private m_blnChkCompletionProject As Boolean
Private m_strWorkSubject As String
Private m_strOrganization As String
Private m_strSection As String
Private m_strName As String

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const c_valLightCOLOR As Variant = 15 'PL|fffd|R|fffd|[|fffd|h|fffd||fffd|2|fffd||fffd||fffd||315|\|fffd||fffd||fffd|F

Private Const mc_intMAX_WBSAddNUMS As Integer = 10 ''|fffd||fffd||fffd||34d||151||fffd|s
Private Const mc_lngMAX_ROWINDEX As Long = 500 ''|fffd||fffd||fffd||34d||151||fffd|s
Private Const mc_lngRowST As Integer = 10 ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Private Const mc_strWorkSheet_SETTING As String = "Setting" '|fffd|V|fffd|[|fffd|g|fffd||fffd|
Private Const mc_lngWorkSheet_SETTING_RowST As Long = 2 '|fffd||fffd||fffd||8340||fffd||683|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Private Const mc_strWorkSheet_SETTING_ACCODE As String = "C" 'AccountCode|fffd||fffd|
Private Const mc_strWorkSheet_SETTING_SUMMARY1 As String = "N" 'AccountCode 6|fffd||fffd||fffd||fffd||fffd||317||fffd|
Private Const mc_lngWorkSheet_MAXROWINDEX As Long = 65536 ''|fffd|V|fffd|[|fffd|g|fffd||151||fffd|s

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean
    Dim lngRowIndex As Long

    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_PL) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
            
        sg_SetupTargetMonthCell Cells(3, 3) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        If g_blnAryCmnMstUpdate(GLED_PL) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        End If
        
        g_blnArySetupSheet(GLED_PL) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        g_blnAryCmnMstUpdate(GLED_PL) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        Exit Function
    End If

    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If

    ''Cash,Book|fffd||fffd||4b902||242||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False And _
       fg_IsSetCommonInfo(GCMN_CB) = False Then
        MsgBox c_strMSG_MASTER_CASHorBANK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If

    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & mc_lngRowST)
 
    Cells(1, 1).Activate
 
     ''|fffd||151||fffd|s|fffd||fffd||fffd||752||fffd|
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    
    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    Range("B" & mc_lngRowST, "N" & m_lngModfyMAX_ROWINDEX).ClearContents
    lngRowIndex = mc_lngRowST
    Do While Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = True And lngRowIndex <= 65536
        Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|

    g_blnArySetupSheet(GLED_PL) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_PL) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strData As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim rngTarget As Range
    Dim blnJVUse As Boolean
    Dim strCName() As String
    Dim strCCode As String
    Dim strCountry As String
    
    Dim rngLstTgt As Range
    Dim strLstAdr As String
    
    blnJVUse = False
    
    ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'    sg_SetupTargetMonthCell Range("C3")
    sg_SetTargetMonthSearchCombo g_strOfficeCode, Range("C3")
    Range("C3").NumberFormat = c_strFORMAT_MONTH
    
    ''Currency |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngTarget = Range("C4")
    Set rngLstTgt = Range("AM10")
    sg_SetCurrencyCombo rngTarget, rngLstTgt, True

    ''Ledger Type(NK/JV) |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    strData = c_strPurposeNK & "," & c_strPurposeJV
    Set rngTarget = Cells(5, 3)
    sg_SetupValidation rngTarget.Validation, c_strMSG_NKJV, _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    rngTarget.Value = fg_GetTokenFromIndexInCSV(0, rngTarget.Validation.Formula1)

    'Country|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||752||fffd|
    Set rngTarget = Range("E3")
    Set rngLstTgt = Range("AK10")
    sg_SetCountryCombo rngTarget, rngLstTgt, True
    strData = fg_GetCurrencyByCName(rngTarget.Value)
    If strData <> "" Then
        '|fffd||fffd||fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||743|R|fffd|[|fffd|h|fffd||fffd||752||fffd|
        Range("C4") = strData
    End If

    'Office Code|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||752||fffd|
    Set rngTarget = Range("E4")
    Set rngLstTgt = Range("AD10")
    sg_SetOCodeCombo Mid$(g_strOfficeCode, 3, 2), rngTarget, rngLstTgt
    Range("E4").Value = g_strOfficeCode
   
    ''Expense Burden|fffd|iWBS/Others|fffd|j
    s_SetWBSComboByOffice Range("E4").Value, Range("E5"), Range("AI10"), True
    s_WBSBufInit Range("E5").Value
    
    s_SetAccountComboForPL Range("E6"), Range("G6"), Range("AF10"), True
    
    Range("E6").Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||389||fffd|
    
    Columns("AF:AG").Hidden = True
    
    Range("E6").Value = "*"
    Range("G6").Value = ""

    Set rngLstTgt = Nothing
    Set rngTarget = Nothing
  
  End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/03/27 : Knowlbo m.o : |fffd||fffd||fffd||fffd||fffd||752||fffd||348||342||fffd||fffd|g|fffd||fffd|
'   2002/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    Me.Range("B" & mc_lngRowST, "D" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    Me.Range("F" & mc_lngRowST, "I" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    Me.Range("J" & mc_lngRowST, "M" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Me.Range("N" & mc_lngRowST, "N" & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = c_strFORMAT_MONTH
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
            
    f_CheckInputData = False
   
    If Cells(3, 3).Value = "" Then ''TargetMonth
        strMessage = c_strMSG_MONTH
        Cells(3, 3).Activate
        Exit Function
    End If
    
    If Cells(4, 3).Value = "" Then ''Currency
        strMessage = c_strMSG_RIGHTCURRENCY
        Cells(4, 3).Activate
        Exit Function
    End If
    
    If Cells(5, 3).Value = "" Then ''Ledger Type
        strMessage = c_strMSG_NKJV
        Cells(5, 3).Activate
        Exit Function
    End If
    
    If Cells(3, 5).Value = "" Then ''Country
        strMessage = c_strMSG_COUNTRY_SEARCH
        Cells(3, 5).Activate
        Exit Function
    End If
    
    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/02 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean
    
    Dim lngIndex As Long
    Dim lngMax As Long
    Dim strData As String
    Dim rngMyTarget As Range
    Dim strCode As String
    Dim strCountry As String
    
    f_onChangeCell = False
    
    ''TargetMonth
    If rngTarget.Row = 3 And rngTarget.Column = 3 Then
        m_blnDirty = True
        If rngTarget.Value = "" Then
            Exit Function
        End If
    ''Currency
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 3 Then
        m_blnDirty = True
        If rngTarget.Value = "" Then
            Exit Function
        End If
        If InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 And _
           rngTarget.Value <> String$(Len(rngTarget.Value), "*") Then
            Exit Function
        End If
    ''Ledger Type
    ElseIf rngTarget.Row = 5 And rngTarget.Column = 3 Then
        m_blnDirty = True
        If rngTarget.Value = "" Then
            Exit Function
        End If
    ''Country|fffd|i|fffd||389||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|R|fffd||fffd||fffd|{|fffd|AWBS|fffd|R|fffd|[|fffd|h|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd|j
    ElseIf rngTarget.Row = 3 And rngTarget.Column = 5 Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        strCode = fg_GetCCodeByCName(rngTarget.Value)
        If strCode <> "" Then
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            sg_SetOCodeCombo strCode, Range("E4"), Range("AD10")
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        ElseIf rngTarget.Value = String$(Len(rngTarget.Value), "*") And _
               rngTarget.Value <> "" Then
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            sg_SetupValidation Range("E4").Validation, c_strMSG_OFFCODE_SEARCH, _
                xlValidateList, xlValidAlertStop, xlBetween, "*", Null
            Range("E4").Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||351||389||fffd||fffd|p
            Range("E4").Value = "*"
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        Else
            m_blnSetupCellsInProgress = False
            Exit Function
        End If
        strData = fg_GetCurrencyByCName(rngTarget.Value)
        If strData <> "" Then
            Range("C4").Value = strData
        End If
        
        'WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
        strData = Range("E4").Value
        Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
        If strData = "" Or InStr(1, strData, "*", vbTextCompare) > 0 Then
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByCountry rngTarget.Value, Range("E5"), Range("AI10"), True
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                If InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 Then
                    sg_SetTargetMonthSearchCombo "%", Range("C3")
                    strData = "*"
                Else
                    sg_SetTargetMonthSearchCombo "__" & fg_GetCCodeByCName(Range("E3").Value) & "___", Range("C3")
                    strData = fg_GetCurrencyByCName(Range("E3").Value)
                End If
        Else
            '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByOffice strData, Range("E5"), Range("AI10"), True
            '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
            sg_SetTargetMonthSearchCombo strData, Range("C3")
            strData = fg_GetCurrencyByOCode(strData)
        End If
        s_WBSBufInit Range("E5").Value
        '|fffd||289||742||fffd||752||fffd|
        If strData <> "" Then Range("C4").Value = strData
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        m_blnSetupCellsInProgress = False
    ''Office Code
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 5 Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        strCode = rngTarget.Value
        'office code|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||64fe||fffd|E|fffd||752||fffd|
        If f_ChkOfficeCode(strCode) Then
            strData = fg_GetCNameByCCode(Mid$(strCode, 3, 2))
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            If UCase$(Range("E3").Value) <> UCase$(strData) Then
                '|fffd||fffd||fffd||315||3cd|X|fffd||254||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                Range("E3").Value = strData
                sg_SetOCodeCombo Mid$(strCode, 3, 2), rngTarget, Range("AD10")
                rngTarget.Value = strCode
            End If
            strData = rngTarget.Value
            
            If strData = "" Or InStr(1, strData, "*", vbTextCompare) > 0 Then
                '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
                s_SetWBSComboByCountry Range("E3").Value, Range("E5"), Range("AI10"), True
                '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                If InStr(1, Range("E3").Value, "*", vbTextCompare) > 0 Then
                    sg_SetTargetMonthSearchCombo "%", Range("C3")
                    strData = "*"
                Else
                    sg_SetTargetMonthSearchCombo "__" & fg_GetCCodeByCName(Range("E3").Value) & "___", Range("C3")
                    strData = fg_GetCurrencyByCName(Range("E3").Value)
                End If
            Else
                '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
                s_SetWBSComboByOffice strData, Range("E5"), Range("AI10"), True
                '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
                sg_SetTargetMonthSearchCombo strData, Range("C3")
                strData = fg_GetCurrencyByOCode(strData)
            End If
            s_WBSBufInit Range("E5").Value
            '|fffd||289||742||fffd||752||fffd|
            If strData <> "" Then Range("C4").Value = strData
            
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        ElseIf rngTarget.Value = String$(Len(rngTarget.Value), "*") Then
            Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByCountry Range("E3").Value, Range("E5"), Range("AI10"), True
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||fffd||64fe||fffd||fffd||fffd||38f||6d4|N|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||30d||110||752||fffd|
            If InStr(1, Range("E3").Value, "*", vbTextCompare) > 0 Then
                sg_SetTargetMonthSearchCombo "%", Range("C3")
                strData = "*"
            Else
                sg_SetTargetMonthSearchCombo "__" & fg_GetCCodeByCName(Range("E3").Value) & "___", Range("C3")
                strData = fg_GetCurrencyByCName(Range("E3").Value)
            End If
            Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        Else
            m_blnSetupCellsInProgress = False
            Exit Function
        End If
        m_blnSetupCellsInProgress = False
    ''WBS Code
    ElseIf rngTarget.Row = 5 And rngTarget.Column = 5 Then
        strData = rngTarget.Value
'        If strData = "" Or _
           InStr(1, strData, "*", vbTextCompare) < 1 Then
        If strData = "" Or Left$(strData, 1) = "," Then
            Exit Function
        End If
        strData = f_WBSBufAddCode(strData, mc_intMAX_WBSAddNUMS)
        If strData = "" Then
            Exit Function
        End If
        m_blnSetupCellsInProgress = True
        rngTarget.Value = strData
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    ''Account Code
    ElseIf rngTarget.Row = 6 And rngTarget.Column = 5 Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        If Not f_GetEndCel(Range("AF10").Row, Range("AF10").Column) Is Nothing Then
            lngMax = f_GetEndCel(Range("AF10").Row, Range("AF10").Column).Row - Range("AF10").Row
        Else
            lngMax = -1
        End If
        For lngIndex = 0 To lngMax
            If rngTarget.Value = Range("AF10").Offset(lngIndex, 0).Value Then
                rngTarget.Offset(0, 2).Value = Range("AF10").Offset(lngIndex, 1).Value
                rngTarget.Characters(Start:=7, Length:=2).Font.ColorIndex = c_valLightCOLOR
                Exit For
            End If
        Next
        If lngIndex > lngMax Then
'            rngTarget.Offset(0, 1).ClearContents
            If InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 Then
                rngTarget.Offset(0, 2).Cells = ""
            Else
                m_blnSetupCellsInProgress = False
                Exit Function
            End If
        End If
        m_blnSetupCellsInProgress = False
    ''Account Name
    ElseIf rngTarget.Row = 6 And rngTarget.Column = 7 Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf strData = "" Or strData = Space$(Len(strData)) Then
            rngTarget.Value = ""
            rngTarget.Offset(0, -2).Value = "*"
        Else
            If Not f_GetEndCel(Range("AF10").Row, Range("AF10").Column) Is Nothing Then
                lngMax = f_GetEndCel(Range("AF10").Row, Range("AF10").Column).Row - Range("AF10").Row
            Else
                lngMax = -1
            End If
            For lngIndex = 0 To lngMax
                If rngTarget.Value = Range("AG10").Offset(lngIndex, 0).Value Then
                    ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
    ''               If Cells(7???, 9???).Value = c_strPurposeJV Then
'                        If fg_GetIndexFromTokenInCSV(g_strAryAcCode(lngIndex), g_strLCodeIndispensableAccount) >= 0 Then
    ''                       ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
    ''                       MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    ''                       rngTarget.Activate
    ''                       Exit Function
    ''                   End If
    ''               End If
                    rngTarget.Offset(0, -2).Value = Range("AF10").Offset(lngIndex, 0).Value
                    rngTarget.Offset(0, -2).Characters(Start:=7, Length:=2).Font.ColorIndex = c_valLightCOLOR
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcName) Then
                If rngTarget.Value = "*" Then
                    rngTarget.Offset(0, -2).Cells = "*"
                Else
                    m_blnSetupCellsInProgress = False
                    Exit Function
                End If
            End If
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    End If
    
    f_onChangeCell = True
    
LBL_END:
    Set rngMyTarget = Nothing

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Search|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/08 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub cmdSearch_Click()
    Dim strMessage As String
    Dim datTarget As Date
    Dim lngDate As Long
    Dim strCurrency As String
    Dim intLedgerType As Integer
    Dim lngRowIndex As Long
    Dim strCName As String
    Dim strOCode As String
    Dim strACode As String
    Dim strWCode As String

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData(strMessage) Then
        MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        cmdSearch.Visible = True
        Exit Sub
    End If
    

'    If m_blnDirty = False Then Exit Sub

    datTarget = Range("C3").Value
'    If fg_CreateAccountSummary(datTarget, True) <> True Then ''|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||c42c|
'        Exit Sub
'    End If

    ''|fffd||38f||6cc||fffd||fffd|A|fffd||289||741|A|fffd||fffd|v
    lngDate = DateValue(datTarget)
    
    strCurrency = Range("C4").Value
    s_CnvAstToPer strCurrency
    
    If StrComp(Range("C5").Value, c_strPurposeNK) = 0 Then
        intLedgerType = "0"
    Else
        intLedgerType = "1"
    End If
    
    ''|fffd||fffd|
    strCName = Range("E3").Value
    If strCName = "" Or strCName = Space$(Len(strCName)) Or _
       strCName = String$(Len(strCName), "*") Then
        strCName = "%"
    Else
        s_CnvAstToPer strCName
    End If
    
    ''|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
    strOCode = Range("E4").Value
    If strOCode = "" Or strOCode = Space$(Len(strOCode)) Or _
       strOCode = String$(Len(strOCode), "*") Then
        strOCode = "%"
    Else
        s_CnvAstToPer strOCode
    End If
    
    ''WBS|fffd|R|fffd|[|fffd|h
    strWCode = Range("E5").Value
    If strWCode = "" Or strWCode = Space$(Len(strWCode)) Or _
       strWCode = String$(Len(strWCode), "*") Then
        strWCode = "%"
    Else
        s_CnvAstToPer strWCode
    End If
    
    ''|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
    strACode = Range("E6").Value
    If strACode = "" Or strACode = Space$(Len(strACode)) Or _
       strACode = String$(Len(strACode), "*") Then
        strACode = "%"
    Else
        s_CnvAstToPer strACode
    End If
    
    sg_SetScreenUpdate False
    
    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    Range("B" & mc_lngRowST, "N" & m_lngModfyMAX_ROWINDEX).ClearContents
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX '|fffd||151||fffd|s|fffd||fffd||fffd|Z|fffd|b|fffd|g
    
    lngRowIndex = mc_lngRowST
    Do While Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = True _
             And lngRowIndex <= 65536
        Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    
    ''PL|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||30f|W|fffd|v|fffd||195|\|fffd||fffd|
    s_GetPLAccountSummary lngDate, strCurrency, intLedgerType, strCName, strOCode, strWCode, strACode

    ''DrCr|fffd|}|fffd|[|fffd|N|fffd||1c9||fffd|
    s_SetDrCrMarker

    ''|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    Application.GoTo Range("a" & mc_lngRowST), Scroll:=True
    
    cmdSearch.Visible = True
    sg_SetScreenUpdate True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    Dim lngRowIndex As Long
    
    sg_SetScreenUpdate False
    Range("B" & mc_lngRowST, "N" & m_lngModfyMAX_ROWINDEX).ClearContents
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX '|fffd||151||fffd|s|fffd||fffd||fffd|Z|fffd|b|fffd|g
    lngRowIndex = mc_lngRowST
    Do While Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = True And lngRowIndex <= 65536
        Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    sg_SetScreenUpdate True
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS, "------End LEDGER [" & g_strArywsName(12) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/18 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdWBS_Click()

    '|fffd||fffd||189||216||68c||fffd||fffd||fffd|(|fffd|I|fffd||fffd|)
    Dim frmFind As New frmFindWBS

    frmFind.TargetDate = DateValue(Range("C3").Value)  '|fffd||38f||6d3||fffd||fffd||fffd|n|fffd||fffd|

    '|fffd|O|fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||110||752||fffd|
    frmFind.chkProject.Value = m_blnChkProject
    frmFind.chkOperatingTechnology.Value = m_blnChkOperatingTechnology
    frmFind.chkPartExpense.Value = m_blnChkPartExpense
'    frmFind.chkCompletionProject.Value = m_blnChkCompletionProject
    frmFind.txtWorkSubject.Value = m_strWorkSubject
    frmFind.cmbOrganization.Value = m_strOrganization
    frmFind.cmbSection.Value = m_strSection
    frmFind.txtName.Value = m_strName
    
    frmFind.Show vbModal
    
    '|fffd||fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
    m_blnChkProject = frmFind.chkProject.Value
    m_blnChkOperatingTechnology = frmFind.chkOperatingTechnology.Value
    m_blnChkPartExpense = frmFind.chkPartExpense.Value
'    m_blnChkCompletionProject = frmFind.chkCompletionProject.Value
    m_strWorkSubject = frmFind.txtWorkSubject.Value
    m_strOrganization = frmFind.cmbOrganization.Value
    m_strSection = frmFind.cmbSection.Value
    m_strName = frmFind.txtName.Value
    
    cmdWBS.Visible = False '|fffd|{|fffd|^|fffd||fffd||fffd||10cc2||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c2||30f||fffd||fffd||fffd|
    cmdWBS.Visible = True
    With frmFind
        If (.SelectedFlag = True) Then
            Range("E5").Value = .WBS
'            MsgBox .WBS, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
''            fncSheetProtect (False)
'            '|fffd||fffd||189||216||690||752||fffd|
'            Range("|fffd||fffd||189||216||fffd|" & CStr(selNo)).Value = .WBS
'            '|fffd||fffd||fffd||fffd||fffd||752||fffd|
'            Range("|fffd|S|fffd||fffd||fffd||196||fffd|" & CStr(selNo)).Value = .JapaneseSubjectName
''            fncSheetProtect (True)
        End If
    End With
    frmFind.CloseForm

End Sub

Private Sub tglComma_Click()
    If tglComma.Value Then
        tglComma.BackColor = &HC0FFFF
    Else
        tglComma.BackColor = &HE0E0E0
    End If
    tglComma.Visible = False '|fffd|\|fffd||fffd||fffd||10cc2||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c2||30f||fffd||fffd||fffd|
    tglComma.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If
    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If

    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|hBS|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd|i|fffd|O|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> WBS|fffd|R|fffd|[|fffd|h
'   (7)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/12 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/19 : Knowlbo m.o : SS|fffd||389||fffd|
'   2003/04/08 : Knowlbo m.o : |fffd|e|fffd||fffd||fffd||389||fffd|
'   2013/02/28 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetPLAccountSummaryPastMonth( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strWCode As String, _
    ByVal strACode As String _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strLed As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim intNum As Integer
    Dim lngRet As Long
    Dim strMSG As String
    Dim curBl As Currency
    Dim datSDate As Date
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LB_ERR
    End If

On Error GoTo LB_ERR
    
    '|fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||364||fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
    datSDate = fg_GetEndOfYear(fg_GetFiscalYear(CDate(lngDate)) - 1)
    
'    If Month(CDate(lngDate)) > 3 Then
'        datSDate = DateValue(Year(CDate(lngDate)) & "/03/31")
'    Else
'        datSDate = DateValue(Year(CDate(lngDate)) - 1 & "/03/31")
'    End If
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''OfficeCode TargetPeriod Currency AccountCode Dr Cr
    strSQL = "SELECT "
    strSQL = strSQL & "cm.EnglishName AS EName, pm.ProjectName AS PName, sa.OfficeCode AS OCode, "
    strSQL = strSQL & "sa.AccountCode AS ACode, sa.WBSCode AS WCode, sa.Currency AS Currency, "
    strSQL = strSQL & "Sum(" & "sa.Balance) AS Bl, MAX(sa.TargetPeriod) AS TDate  "
    
    strSQL = strSQL & "FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_SummaryAC & " sa, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " om, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_CountryMaster & " cm, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_PJTMaster & " pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "cm.CountryCode = om.Country AND  "
    strSQL = strSQL & "om.OfficeCode = sa.OfficeCode AND  "
    strSQL = strSQL & "pm.OfficeCode = sa.OfficeCode AND  "
    
    strSQL = strSQL & "sa.TargetPeriod >= " & fg_AddSingleQuotation(datSDate) & " AND "
    strSQL = strSQL & "sa.TargetPeriod < " & fg_AddSingleQuotation(CDate(lngDate)) & " AND "
    
    strSQL = strSQL & "sa.AccountCode >= " & fg_AddSingleQuotation(c_strPLCODE_BEGIN) & " AND "  'PL|fffd||302||752||fffd||fffd|o
'    strSQL = strSQL & "sa.AccountCode LIKE " & fg_AddSingleQuotation(strACode) & " AND "
    strSQL = strSQL & "LEFT(sa.AccountCode, 6) LIKE " & fg_AddSingleQuotation(Left$(strACode, 6)) & " AND "
    
'    strSQL = strSQL & "sa.WBSCode LIKE " & fg_AddSingleQuotation(strWCode) & " AND "
    strSQL = strSQL & f_SetupWBSForWhere("sa.WBSCode LIKE", "OR", strWCode) & " AND "
    
    strSQL = strSQL & "sa.Currency LIKE " & fg_AddSingleQuotation(strCurrency) & " AND "
    
    strSQL = strSQL & "sa.Purpose = " & fg_AddSingleQuotation(CStr(intLedgerType)) & " AND "

    strSQL = strSQL & "cm.EnglishName LIKE " & fg_AddSingleQuotation(strCName) & " AND "
    
    strSQL = strSQL & "sa.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode)
    
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "cm.EnglishName, pm.ProjectName, sa.OfficeCode, sa.WBSCode, sa.AccountCode, sa.Currency "
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "sa.WBSCode, sa.AccountCode, cm.EnglishName, sa.OfficeCode "
    
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LB_ERR
    End If
    
    '|fffd|W|fffd|v|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||fffd|
    lngRowIndex = mc_lngRowST
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    Do Until adoRs.EOF
        If Cells(lngRowIndex, 2).Value <> Empty Then
            GoTo LB_Loop_End
        End If
        Cells(lngRowIndex, 2).Value = adoRs.Fields("WCode").Value 'Expense Burden|fffd||fffd||fffd|Z|fffd|b|fffd|g
        Cells(lngRowIndex, 3).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
        curBl = 0
        If Not (IsNull(adoRs.Fields("Bl").Value)) Then
            curBl = CCur(adoRs.Fields("Bl").Value)
        End If
        'If curBl < 0 Then curBl = -curBl
        Cells(lngRowIndex, 10).Value = curBl 'Past Balance|fffd||fffd||fffd|Z|fffd|b|fffd|g
        Cells(lngRowIndex, 13).Value = Cells(lngRowIndex, 10).Value '|fffd||fffd||fffd||fffd||fffd||fffd|Balance|fffd||fffd||fffd|Z|fffd|b|fffd|g
        
        Cells(lngRowIndex, 6).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
        Cells(lngRowIndex, 7).Value = adoRs.Fields("Currency").Value '|fffd||289||743|R|fffd|[|fffd|h
        Cells(lngRowIndex, 8).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
        Cells(lngRowIndex, 9).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
        Cells(lngRowIndex, 14).Value = adoRs.Fields("TDate").Value '|fffd||38f||6d4|N|fffd||fffd||fffd||fffd|
        
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
LB_Loop_End:
        lngRowIndex = lngRowIndex + 1
    Loop
    m_blnSetupCellsInProgress = False
   
LB_End:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    On Error GoTo 0

    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LB_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_GetPLAccountSummaryPastMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_GetPLAccountSummaryPastMonth", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|hBS|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> WBS|fffd|R|fffd|[|fffd|h
'   (7)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/12 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/02/20 : Knowlbo m.o : |fffd|O|fffd||fffd||fffd||fffd||fffd||182||302||82||fffd||fffd||fffd||fffd||d0b9||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd|
'   2003/03/19 : Knowlbo m.o : SS|fffd||389||fffd|
'   2003/04/08 : Knowlbo m.o : |fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetPLAccountSummaryThisMonth( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strWCode As String, _
    ByVal strACode As String _
)
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strLed As String
    Dim lngRowIndex As Long
    Dim lngIndex As Long
    Dim intNum As Integer
    Dim lngRet As Long
    Dim datValue As Date
    Dim strMSG As String
    Dim curDr As Currency
    Dim curCr As Currency
    Dim rngFindCelEnd As Range
    Dim rngCelEnd As Range
    Dim rngCel As Range
    Dim strFirstAdr As String
    Dim lngLastRowIndex As Long
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LB_ERR
    End If

On Error GoTo LB_ERR
    
    ''OfficeCode TargetPeriod Currency AccountCode Dr Cr
    
    strSQL = "SELECT "
    strSQL = strSQL & "cm.EnglishName AS EName, pm.ProjectName AS PName, sa.OfficeCode AS OCode, "
    strSQL = strSQL & "sa.AccountCode AS ACode, sa.WBSCode AS WCode, sa.Currency AS Currency, "
    strSQL = strSQL & "Sum(" & "sa.Debit) AS Dr, Sum(" & "sa.Credit) AS Cr, MAX(sa.TargetPeriod) AS TDate "
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_SummaryAC & " sa, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_OfficeMaster & " om, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_CountryMaster & " cm, "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_PJTMaster & " pm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "cm.CountryCode = om.Country AND  "
    strSQL = strSQL & "om.OfficeCode = sa.OfficeCode AND  "
    strSQL = strSQL & "pm.OfficeCode = sa.OfficeCode AND  "
    
    strSQL = strSQL & "sa.TargetPeriod = " & fg_AddSingleQuotation(CDate(lngDate)) & " AND "
    
    strSQL = strSQL & "sa.AccountCode >= " & fg_AddSingleQuotation(c_strPLCODE_BEGIN) & " AND "  'PL|fffd||302||752||fffd||fffd|o
'    strSQL = strSQL & "sa.AccountCode LIKE " & fg_AddSingleQuotation(strACode) & " AND "
    strSQL = strSQL & "LEFT(sa.AccountCode, 6) LIKE " & fg_AddSingleQuotation(Left$(strACode, 6)) & " AND "
    
'    strSQL = strSQL & "sa.WBSCode LIKE " & fg_AddSingleQuotation(strWCode) & " AND "
    strSQL = strSQL & f_SetupWBSForWhere("sa.WBSCode LIKE", "OR", strWCode) & " AND "
    
    strSQL = strSQL & "sa.Currency LIKE " & fg_AddSingleQuotation(strCurrency) & " AND "
    
    strSQL = strSQL & "sa.Purpose = " & fg_AddSingleQuotation(CStr(intLedgerType)) & " AND "
    
    strSQL = strSQL & "cm.EnglishName LIKE " & fg_AddSingleQuotation(strCName) & " AND "
    
    strSQL = strSQL & "sa.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode)
    
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & "cm.EnglishName, pm.ProjectName, sa.OfficeCode, sa.WBSCode, sa.AccountCode, sa.Currency "
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "sa.WBSCode, sa.AccountCode, cm.EnglishName, sa.OfficeCode "
    
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LB_ERR
    End If
    
    lngRowIndex = mc_lngRowST
    Do While Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = True And lngRowIndex <= 65536
        Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    
    '|fffd|W|fffd|v|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||fffd|
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|Expense Burden|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngFindCelEnd = f_GetEndCel(mc_lngRowST, 2)
    If rngFindCelEnd Is Nothing Then
        lngLastRowIndex = mc_lngRowST
    Else
        lngLastRowIndex = rngFindCelEnd.Row + 1
    End If
    
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    
    Do Until adoRs.EOF

        If Not rngFindCelEnd Is Nothing Then
            '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|Expense Burden|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
'            Set rngCel = ActiveSheet. '_
            Set rngCel = Me. _
                Range("B" & mc_lngRowST & ":B" & rngFindCelEnd.Row). _
                Find(what:=adoRs.Fields("WCode").Value, LookAt:=xlWhole)
        Else
            Set rngCel = Nothing
        End If

        If rngCel Is Nothing Then
            '|fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||fffd||38d||14f|I|fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
            lngRowIndex = lngLastRowIndex
            lngLastRowIndex = lngLastRowIndex + 1 '|fffd||14f|I|fffd||d448d|s|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd|X|fffd|V
            Cells(lngRowIndex, 2).Value = adoRs.Fields("WCode").Value 'Expense Burden|fffd||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 3).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 10).Value = 0 '|fffd|O|fffd||fffd||fffd||702||142||fffd|Balance|fffd||fffd|0|fffd||242||fffd||fffd||fffd|
        
            Cells(lngRowIndex, 6).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
            Cells(lngRowIndex, 7).Value = adoRs.Fields("Currency").Value '|fffd||289||743|R|fffd|[|fffd|h
            Cells(lngRowIndex, 8).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
            Cells(lngRowIndex, 9).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
        Else
            ''Account Code|fffd||183|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||192||289||742||fffd||fffd||fffd|v|fffd||fffd||fffd||90a9|
            If Cells(rngCel.Row, 3).Value = adoRs.Fields("ACode").Value And _
                Cells(rngCel.Row, 7).Value = adoRs.Fields("Currency").Value And _
                Cells(rngCel.Row, 8).Value = adoRs.Fields("OCode").Value Then
                'Account Code|fffd||fffd|Connection Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                lngRowIndex = rngCel.Row
            Else
                strFirstAdr = rngCel.Address
                lngRowIndex = Empty
                Do
                    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Expense Burden|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
                    Set rngCel = Me. _
                        Range("B" & mc_lngRowST & ":B" & rngFindCelEnd.Row). _
                        FindNext(after:=rngCel)
                    
                    'Account Code|fffd||183|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||192||289||742||fffd||fffd||fffd|v|fffd||fffd||fffd||90a9|
                    If Not rngCel Is Nothing And _
                       Cells(rngCel.Row, 3).Value = adoRs.Fields("ACode").Value And _
                       Cells(rngCel.Row, 7).Value = adoRs.Fields("Currency").Value And _
                       Cells(rngCel.Row, 8).Value = adoRs.Fields("OCode").Value Then
                        'Account Code|fffd||fffd|Expense Burden|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                        lngRowIndex = rngCel.Row
                      Exit Do
                    End If
                    
                Loop Until strFirstAdr = rngCel.Address
                
                If lngRowIndex = Empty Then
                    'Expense Burden|fffd||fffd|Account Code|fffd||308||fffd|v|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||302||14d||14f|I|fffd||fffd|s|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    lngRowIndex = lngLastRowIndex
                    lngLastRowIndex = lngLastRowIndex + 1 '|fffd||14f|I|fffd||d448d|s|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd|X|fffd|V
                    Cells(lngRowIndex, 2).Value = adoRs.Fields("WCode").Value 'Expense Burden|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    Cells(lngRowIndex, 3).Value = adoRs.Fields("ACode").Value 'Account Code|fffd||fffd||fffd|Z|fffd|b|fffd|g
                    Cells(lngRowIndex, 10).Value = 0 '|fffd|O|fffd||fffd||fffd||702||142||fffd|Balance|fffd||fffd|0|fffd||242||fffd||fffd||fffd|
                
                    Cells(lngRowIndex, 6).Value = adoRs.Fields("EName").Value '|fffd||fffd||fffd||fffd|
                    Cells(lngRowIndex, 7).Value = adoRs.Fields("Currency").Value '|fffd||289||743|R|fffd|[|fffd|h
                    Cells(lngRowIndex, 8).Value = adoRs.Fields("OCode").Value '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
                    Cells(lngRowIndex, 9).Value = adoRs.Fields("PName").Value '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
                End If
            End If
        End If
    
        curDr = 0
        curCr = 0
        If Not (IsNull(adoRs.Fields("Dr").Value)) Then
            curDr = CCur(adoRs.Fields("Dr").Value)
        End If
        If Not (IsNull(adoRs.Fields("Cr").Value)) Then
            curCr = CCur(adoRs.Fields("Cr").Value)
        End If
        Cells(lngRowIndex, 13).Value = Cells(lngRowIndex, 10).Value + curDr + curCr 'Balance|fffd||fffd||fffd|Z|fffd|o|fffd|E|fffd|Z|fffd|b|fffd|g
'        Cells(lngRowIndex, 13).Value = curDr + curCr 'Balance|fffd||fffd||fffd|Z|fffd|o|fffd|E|fffd|Z|fffd|b|fffd|g
        'Debit|fffd||fffd||fffd|Z|fffd|b|fffd|g
        If curDr > 0 Then
            Cells(lngRowIndex, 11).Value = curDr
        ElseIf curDr < 0 Then
            Cells(lngRowIndex, 11).Value = -curDr
        End If
        'Credit|fffd||fffd||fffd|Z|fffd|b|fffd|g
        If curCr > 0 Then
            Cells(lngRowIndex, 12).Value = curCr
        ElseIf curCr < 0 Then
            Cells(lngRowIndex, 12).Value = -curCr
        End If
        
        Cells(lngRowIndex, 14).Value = adoRs.Fields("TDate").Value '|fffd||38f||6d4|N|fffd||fffd||fffd||fffd|
        
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    
    m_blnSetupCellsInProgress = False
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|Account Code|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngFindCelEnd = f_GetEndCel(mc_lngRowST, 2)
    If rngFindCelEnd Is Nothing Then
        lngRowIndex = mc_lngRowST
    Else
        lngRowIndex = rngFindCelEnd.Row
    End If
    
    '|fffd|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd|Account Code|fffd||fffd|Connect Code|fffd|A|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||14f||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g
    Range("B" & mc_lngRowST & ":N" & lngRowIndex).Sort _
    key1:=Range("B" & mc_lngRowST), key2:=Range("C" & mc_lngRowST), key3:=Range("H" & mc_lngRowST)
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||151||530f||fffd||fffd||fffd||12d02||fffd||fffd||fffd||fffd||fffd|r|fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    If lngRowIndex >= mc_lngMAX_ROWINDEX + mc_lngRowST Then
        If m_lngModfyMAX_ROWINDEX < lngRowIndex Then m_lngModfyMAX_ROWINDEX = lngRowIndex
        With Me.Range("B" & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ": N" & lngRowIndex)
            .BorderAround LineStyle:=xlContinuous, Weight:=xlThin
            If lngRowIndex > mc_lngMAX_ROWINDEX + mc_lngRowST Then
                .Borders(xlInsideHorizontal).LineStyle = xlContinuous
            End If
            .Borders(xlInsideVertical).LineStyle = xlContinuous
        End With
        With Me.Range("D" & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ": E" & lngRowIndex)
            .Borders(xlInsideVertical).LineStyle = xlLineStyleNone
        End With
    End If
    
    '|fffd||fffd||fffd||8340||fffd||696||fffd||fffd||183|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||65bc||fffd||fffd||fffd||fffd||fffd||a0bc||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||731f||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    lngRowIndex = mc_lngRowST
    '[Setting]|fffd|V|fffd|[|fffd|g|fffd||fffd|Account Code|fffd||fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngCelEnd = wsSettings. _
        Range(mc_strWorkSheet_SETTING_ACCODE & mc_lngWorkSheet_SETTING_RowST).End(xlDown)
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    
    Do While Cells(lngRowIndex, 3).Value <> Empty
        
'|fffd|Z|fffd||fffd||fffd||30c||fffd||fffd||fffd|        Range("D" & lngRowIndex & ":E" & lngRowIndex).Merge
        '[Setting]|fffd|V|fffd|[|fffd|g|fffd||14f|W|fffd|v|fffd|f|fffd|[|fffd|^|fffd||fffd|Account Code|fffd||fffd||fffd||fffd||fffd||fffd|
        Set rngCel = wsSettings. _
            Range(mc_strWorkSheet_SETTING_ACCODE & mc_lngWorkSheet_SETTING_RowST & ":" & _
                  mc_strWorkSheet_SETTING_ACCODE & rngCelEnd.Row). _
            Find(what:=Left$(Cells(lngRowIndex, 3).Value, 6), LookAt:=xlPart)
        If Not rngCel Is Nothing Then
            '|fffd|Y|fffd||fffd||fffd||fffd||fffd||95bc||fffd||302||fffd||fffd|Z|fffd|b|fffd|g
            Cells(lngRowIndex, 4).Value = wsSettings. _
                Cells(rngCel.Row, mc_strWorkSheet_SETTING_SUMMARY1)
        End If
        lngRowIndex = lngRowIndex + 1
    Loop
    m_blnSetupCellsInProgress = False
    
LB_End:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LB_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_GetPLAccountSummaryThisMonth:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_GetPLAccountSummaryThisMonth", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|hBS|fffd||fffd||fffd||30f|W|fffd|v|fffd||fffd||fffd||fffd||455|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd||38f||6cc||fffd|
'   (2)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (3)<Integer |fffd|^> |fffd||38f||6c9||fffd|v|fffd|i0|fffd|FNK|fffd|^1|fffd|FJV|fffd|j
'   (4)<String |fffd|^> |fffd||fffd||fffd||fffd|
'   (5)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (6)<String |fffd|^> WBS|fffd|R|fffd|[|fffd|h
'   (7)<String |fffd|^> |fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|uAccount Code|fffd|v|fffd||fffd||fffd||182||30f|o|fffd|[|fffd||fffd||fffd|uSummaryAccount|fffd|v|fffd||fffd||fffd||fffd||fffd||182||24f|W|fffd|v|fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/12 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/08 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_GetPLAccountSummary( _
    ByVal lngDate As Long, _
    ByVal strCurrency As String, _
    ByVal intLedgerType As Integer, _
    ByVal strCName As String, _
    ByVal strOCode As String, _
    ByVal strWCode As String, _
    ByVal strACode As String _
)

    '|fffd|O|fffd||fffd||fffd||702||142||30f|W|fffd|v|fffd|E|fffd|\|fffd||fffd|
    s_GetPLAccountSummaryPastMonth lngDate, strCurrency, intLedgerType, strCName, strOCode, strWCode, strACode
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f|W|fffd|v|fffd|E|fffd|\|fffd||fffd|
    s_GetPLAccountSummaryThisMonth lngDate, strCurrency, intLedgerType, strCName, strOCode, strWCode, strACode
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|J|fffd|n|fffd|s
'   (2)<Long |fffd|^> |fffd||38f||6d7||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd||fffd||fffd||502||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Range |fffd|^> |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd|J|fffd|n|fffd|s|fffd||20d|~|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||30f||a347||fffd||fffd|Nothing|fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/20 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetEndCel( _
    ByVal lngStartRow As Long, _
    ByVal lngTargetCol As Long _
) As Range

    Dim strCol As String
    Dim rndCel As Range

    '|fffd||fffd||fffd||fffd||64fe|
    strCol = Right$(Cells(lngStartRow, lngTargetCol).Address, _
             Len(Cells(lngStartRow, lngTargetCol).Address) - 1)

    strCol = Left$(strCol, InStr(strCol, "$") - 1)

    'END|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd|P|fffd|[|fffd|X|fffd||30f||fffd||fffd||fffd|
    If Cells(lngStartRow, lngTargetCol).Value = Empty Then
        Set f_GetEndCel = Nothing
        Exit Function
    ElseIf Cells(lngStartRow + 1, lngTargetCol).Value = Empty Then
        Set f_GetEndCel = Range(strCol & lngStartRow)
        Exit Function
    ElseIf lngStartRow >= 65536 Then
        Set f_GetEndCel = Range(strCol & 65536)
        Exit Function
    End If

    '|fffd|I|fffd|[|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Set f_GetEndCel = Range(strCol & lngStartRow).End(xlDown)

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True : |fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^False : |fffd|s|fffd||fffd||fffd||203|R|fffd|[|fffd|h
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/03 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_ChkOfficeCode( _
    ByVal strOCode As String _
) As Boolean
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    f_ChkOfficeCode = False
    strMSG = "DBExecuteError"
    
    If strOCode = "*" Or strOCode = " " Or strOCode = "" Then
        Exit Function
    End If
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT OfficeCode as Oc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".OfficeMaster tbl "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(OfficeCode) = " & fg_AddSingleQuotation(UCase$(strOCode))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
        
    '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||64fe||fffd||202||fffd|True
    If Not adoRs.EOF Then
        f_ChkOfficeCode = True
    End If

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "f_ChkOfficeCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_ChkOfficeCode", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   "*"|fffd||fffd|"%"|fffd|A"?"|fffd||fffd|"_"|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/04 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_CnvAstToPer( _
    ByRef strStr As String _
)

    Dim lngIdx As Long
    Dim strPut As String
    Dim strGet As String
    
    strPut = ""
    
    For lngIdx = 1 To Len(strStr) + 1
        strGet = Mid$(strStr, lngIdx, 1)
        Select Case strGet
        Case "*"
            strGet = "%"
        Case "?"
            strGet = "_"
        Case Else
        End Select
        
        strPut = strPut & strGet
    Next
    
    strStr = strPut

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/17 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetWBSComboByOffice( _
    ByVal strCode As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    s_SetWBSCombo strCode, rngTarget, rngLstTgt, False, blnWCFlg
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/17 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetWBSComboByCountry( _
    ByVal strName As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    Dim strCode As String
    
    strCode = fg_GetCCodeByCName(strName)
    s_SetWBSCombo strCode, rngTarget, rngLstTgt, True, blnWCFlg
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd||251||389||fffd| / False :  |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd|
'   (5)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/17 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetWBSCombo( _
    ByVal strOCode As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnOFlg As Boolean, _
    ByVal blnWCFlg As Boolean _
)

    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim strCCodeRng As String
    Dim intIx As Integer
    Dim rngClrTgt As Range

    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||289||743|R|fffd|[|fffd|h|fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT WBSCode as Wc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".ExpenceBurden eb "
    
    strSQL = strSQL & " WHERE "
    If blnOFlg Then
        strSQL = strSQL & " SUBSTRING (eb.OfficeCode, 3, 2) = " & fg_AddSingleQuotation(strOCode)
    Else
        strSQL = strSQL & " eb.OfficeCode = " & fg_AddSingleQuotation(strOCode)
    End If
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "eb.WBSCode "
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    '|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc|
    Set rngClrTgt = f_GetEndCel(rngLstTgt.Row, rngLstTgt.Column)
    If Not rngClrTgt Is Nothing Then
        Range(rngLstTgt.Address, _
              rngLstTgt.Offset(rngClrTgt.Row - mc_lngRowST, 0).Address).ClearContents
    End If
    
    If blnWCFlg Then
        rngLstTgt.Value = "*"
        intIx = 1
    Else
        intIx = 0
    End If
    Do Until adoRs.EOF
        rngLstTgt.Offset(intIx, 0).Value = adoRs.Fields("Wc").Value
        intIx = intIx + 1
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    rngLstTgt.Columns.Hidden = True
    
    If intIx < 1 Then intIx = 1
    strCCodeRng = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    rngTarget.Validation.ShowError = False
    
    If blnWCFlg And rngLstTgt.Offset(1, 0).Value <> "" Then
'        rngTarget.Value = rngLstTgt.Offset(1, 0).Value
        rngTarget.Value = rngLstTgt.Value
    Else
        rngTarget.Value = rngLstTgt.Value
    End If

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_SetWBSCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetWBSCombo", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd|R|fffd|[|fffd|h|fffd||313||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBS|fffd|R|fffd|[|fffd|h|fffd||313||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/22 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_WBSBufInit( _
    ByVal strData As String _
)
    m_strWBSBuf = strData
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd|R|fffd|[|fffd|h|fffd||313||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||582||312||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||6d1||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h
'   (2)<Integer |fffd|^> |fffd||6d1||fffd||fffd||fffd||fffd||30f||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBS|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> ""|fffd||20a|O|fffd|F|fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||311|SWBS|fffd|R|fffd|[|fffd|h|fffd|^""|fffd|F|fffd||fffd||fffd||fffd|l|fffd||12d02||fffd||fffd||fffd||fffd|i|fffd||1c9||fffd||fffd||fffd||fffd||5c1|j
'  |fffd||fffd||fffd|l
'   |fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||8576||fffd||fffd||fffd||fffd||182||fffd||fffd||115||6d1||fffd||fffd||fffd||fffd||fffd|B
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/22 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/05/12 : Knowlbo m.o : |fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||343|f|fffd|[|fffd|^|fffd||30f|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function f_WBSBufAddCode( _
    ByVal strAddWBS As String, _
    ByVal intMax As Integer _
) As String

    Dim intNums As Integer
    Dim intAddNums As Integer
    Dim straryBuf() As String
    Dim strWBS As String
    Dim intIdx As Integer
    Dim intMaxNums As Integer

    strWBS = ""

    '|fffd||fffd||fffd||742||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||192||1c9||fffd||fffd||fffd||fffd||303|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    intNums = CInt(fg_GetTokensFromStr(m_strWBSBuf, straryBuf, ","))
    Erase straryBuf
    intMaxNums = CInt(fg_GetTokensFromStr(strAddWBS, straryBuf, ","))

    If tglComma.Value = -1 Then
        '|fffd||1c9||fffd||fffd||fffd||fffd||fffd|
        intAddNums = 0
        For intIdx = 0 To intMaxNums - 1
            '|fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
            If InStr(1, m_strWBSBuf, straryBuf(intIdx), vbTextCompare) = 0 Then
                intAddNums = intAddNums + 1
                If intNums + intAddNums > intMax Then Exit For
                strWBS = strWBS + straryBuf(intIdx) & ","
            End If
        Next
        If m_strWBSBuf <> "" Or Right$(m_strWBSBuf, 1) <> "," Then m_strWBSBuf = m_strWBSBuf & ","
        m_strWBSBuf = m_strWBSBuf & strWBS  '|fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||252||1c9||fffd|
    Else
        '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|
        m_strWBSBuf = ""
        intAddNums = 0
        For intIdx = 0 To intMaxNums - 1
            intAddNums = intAddNums + 1
            If intAddNums > intMax Then Exit For
            m_strWBSBuf = m_strWBSBuf & straryBuf(intIdx) & "," '|fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||255||6d1||fffd|
        Next
    End If
    Erase straryBuf

    If Right$(m_strWBSBuf, 1) = "," Then m_strWBSBuf = Left$(m_strWBSBuf, Len(m_strWBSBuf) - 1)
    f_WBSBufAddCode = m_strWBSBuf
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   WBS|fffd|R|fffd|[|fffd|h|fffd||fffd|WHERE|fffd||fffd||fffd||fffd||fffd||582||313|W|fffd|J|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||4d5||fffd||fffd||fffd||fffd||fffd|i|fffd||56f01|A|fffd||fffd||fffd|Z|fffd|q|fffd||fffd||fffd|iex|fffd|F"tbl.WBSCode = "|fffd|j|fffd|j
'   (2)<String |fffd|^> |fffd|_|fffd||fffd||fffd||fffd||fffd|Z|fffd|q
'   (3)<String |fffd|^> WBS|fffd|R|fffd|[|fffd|h|fffd|i|fffd|J|fffd||fffd||fffd|}|fffd||fffd||602||fffd|j
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)WBS|fffd|R|fffd|[|fffd|h|fffd||fffd|WHERE|fffd||fffd||fffd||fffd||fffd||253|W|fffd|J|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> WHERE|fffd||fffd||fffd||fffd||fffd|p|fffd||315||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/22 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_SetupWBSForWhere( _
    ByVal strLeft As String, _
    ByVal strOpe As String, _
    ByVal strWBS As String _
) As String

    Dim strWhere As String
    
    Dim intNums As Integer
    Dim intIdx As Integer
    Dim straryWBS() As String

    strWhere = " ( "

    '|fffd||fffd||fffd||742||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||192||1c9||fffd||fffd||fffd||fffd||303|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    intNums = CInt(fg_GetTokensFromStr(strWBS, straryWBS, ",")) - 1
    intIdx = 0
    Do While True
        If straryWBS(intIdx) <> "" Then
            strWhere = strWhere & strLeft & " " & fg_AddSingleQuotation(straryWBS(intIdx))
            If intIdx < intNums Then strWhere = strWhere & " " & strOpe & " "
        End If
        intIdx = intIdx + 1
        If intIdx > intNums Then Exit Do
    Loop
    
    strWhere = strWhere & ") "
    
    Erase straryWBS
    f_SetupWBSForWhere = strWhere
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd|PL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd|PL|fffd||fffd||fffd||fffd||fffd||252||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||10f|o|fffd||fffd||fffd||14e||fffd||fffd|O|fffd||24a||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/23 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_TuneupAccountComboForPL( _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range _
)

    Dim strData As String
    Dim intIx As Integer
    Dim strLstAdr As String
    
    Dim rng As Range
    
    If rngLstTgt.Value = "*" Then
        intIx = 1
    Else
        intIx = 0
    End If
    
    Do While rngLstTgt.Offset(intIx, 0).Value <> "" Or rngLstTgt.Offset(intIx, 1).Value <> ""
        If rngLstTgt.Offset(intIx, 0).Value < c_strPLCODE_BEGIN Then
            Range(rngLstTgt.Offset(intIx, 0).Address, _
                  rngLstTgt.Offset(intIx, 1).Address).Delete Shift:=xlShiftUp
        Else
'            rngLstTgt.Offset(intIx, 0).Value = Left$(rngLstTgt.Offset(intIx, 0).Value, 6) & "XX"
            intIx = intIx + 1
        End If
    Loop
    
    strLstAdr = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_ACCOUNT_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
    rngTarget.Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||389||fffd|
    strLstAdr = rngLstTgt.Offset(0, 1).Address & ":" & rngLstTgt.Offset(intIx - 1, 1).Address
    sg_SetupValidation rngTarget.Offset(0, 2).Validation, c_strMSG_ACCOUNT_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (2)<Range |fffd|^> |fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd|ETRUE : |fffd||fffd||fffd||fffd|^FALSE : |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd||fffd|O|fffd||303||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/24 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetAccountComboForPL( _
    ByVal rngCodeTgt As Range, _
    ByVal rngNameTgt As Range, _
    ByVal rngListTgt As Range, _
    ByVal blnWc As Boolean _
)

    Dim strData As String
    Dim intIx As Integer
    Dim intListIx As Integer
    Dim strLstAdr As String
    
    Dim rng As Range
    
    If blnWc Then
        rngListTgt.Value = "*"
        rngListTgt.Offset(0, 1) = ""
        intListIx = 1
    Else
        intListIx = 0
    End If
    
    rngCodeTgt.NumberFormat = "@"
    rngNameTgt.NumberFormat = "@"
'    Range(rngListTgt.Address, _
          rngListTgt.Offset(UBound(g_strAryAcCode), 1).Address).NumberFormat = "@"
    
    For intIx = 0 To UBound(g_strAryAcCode)
        If g_strAryAcCode(intIx) >= c_strPLCODE_BEGIN Then
            rngListTgt.Offset(intListIx, 0).NumberFormat = "@"
            rngListTgt.Offset(intListIx, 1).NumberFormat = "@"
            rngListTgt.Offset(intListIx, 0).Value = g_strAryAcCode(intIx)
            rngListTgt.Offset(intListIx, 1).Value = g_strAryAcName(intIx)
            intListIx = intListIx + 1
        End If
    Next
    rngListTgt.Columns.Hidden = True
    rngListTgt.Offset(0, 1).Columns.Hidden = True

    strLstAdr = rngListTgt.Address & ":" & rngListTgt.Offset(intListIx - 1, 0).Address
    sg_SetupValidation rngCodeTgt.Validation, c_strMSG_ACCOUNT_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
    If blnWc Then
        rngCodeTgt.Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||389||fffd|
    End If
    
    strLstAdr = rngListTgt.Offset(0, 1).Address & ":" & rngListTgt.Offset(intListIx - 1, 1).Address
    sg_SetupValidation rngNameTgt.Validation, c_strMSG_ACCOUNT_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null

    rngCodeTgt.Value = rngListTgt.Value
    rngNameTgt.Value = rngListTgt.Offset(0, 1).Value

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||6cc||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (1)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cc||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/05/14 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2013/02/28 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub sg_SetTargetMonthSearchCombo( _
    ByVal strOCode As String, _
    ByVal rngTarget As Range _
)

    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim intYear As Integer
    Dim intMon As Integer
    Dim strCombo As String
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datSDate As Date
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||150|V|fffd||311||38f||6d4|N|fffd||fffd||fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT "
    strSQL = strSQL & "IsNULL(YEAR(MAX(TargetPeriod)),0) AS Yy,  "
    strSQL = strSQL & "IsNULL(MONTH(MAX(TargetPeriod)),0) AS Mm "
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".Decision tbl "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "tbl.OfficeCode LIKE " & fg_AddSingleQuotation(strOCode) & " AND "
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    strSQL = strSQL & "tbl.TargetPeriod >= " & _
            fg_AddSingleQuotation(CStr(fg_GetStartOfYear(g_intTargetSysYear))) & " AND "
    strSQL = strSQL & "tbl.TargetPeriod < " & _
            fg_AddSingleQuotation(CStr(fg_GetStartOfYear(g_intTargetSysYear + 1)))
            
'    strSQL = strSQL & "tbl.TargetPeriod >= " & _
'            fg_AddSingleQuotation(CStr(DateValue(g_intTargetSysYear & "/04/01"))) & " AND "
'    strSQL = strSQL & "tbl.TargetPeriod < " & _
'            fg_AddSingleQuotation(CStr(DateValue((g_intTargetSysYear + 1) & "/04/01"))) '& " AND "
''    strSQL = strSQL & "tbl.DecisionDate  IS NOT NULL"
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    If adoRs.Fields("Yy").Value <= 0 Or adoRs.Fields("Mm").Value <= 0 Then
        ' |fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe|
        datSDate = fg_GetStartOfYear(g_intTargetSysYear)
        
        intYear = Year(datSDate)
        intMon = Month(datSDate)
        strCombo = Format$(datSDate, "yyyy/mm")
    Else
        ' |fffd||38f||6d4|N|fffd|x|fffd||30a||fffd||fffd||fffd||fffd||fffd||64fe|
        datSDate = fg_GetStartOfYear(fg_GetFiscalYear(DateValue(adoRs.Fields("Yy").Value & "/" & adoRs.Fields("Mm").Value & "/1")))
        
        intYear = Year(datSDate)
        intMon = Month(datSDate)
        strCombo = ""
        Do
            strCombo = strCombo & Format$(DateValue(intYear & "/" & intMon), "yyyy/mm")
            If adoRs.Fields("Mm").Value = intMon Then Exit Do
            strCombo = strCombo & ","
            intMon = intMon + 1
            If intMon > 12 Then
                intMon = 1
                intYear = intYear + 1
            End If
        Loop
    End If

'    intYear = adoRs.Fields("Yy").Value
'    If intYear <= 0 Or adoRs.Fields("Mm").Value <= 0 Then
'        intYear = g_intTargetSysYear
'        intMon = 4
'        strCombo = Format$(DateValue(g_intTargetSysYear & "/04"), "yyyy/mm")
'    Else
'        If adoRs.Fields("Mm").Value < 4 Then
'            intYear = intYear - 1
'        End If
'        intMon = 4
'        strCombo = ""
'        Do
'            strCombo = strCombo & Format$(DateValue(intYear & "/" & intMon), "yyyy/mm")
'            If adoRs.Fields("Mm").Value = intMon Then Exit Do
'            strCombo = strCombo & ","
'            intMon = intMon + 1
'            If intMon > 12 Then
'                intMon = 1
'                intYear = intYear + 1
'            End If
'        Loop
'    End If
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    sg_SetupValidation rngTarget.Validation, c_strMSG_MONTH, _
        xlValidateList, xlValidAlertStop, xlBetween, strCombo, Null
    rngTarget.Value = intYear & "/" & Format$(intMon, "00")

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "sg_SetTargetMonthSearchCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "sg_SetTargetMonthSearchCombo", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||fffd|Dr.Cr.|fffd||303|}|fffd|[|fffd|N|fffd||fffd||1c9||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|Dr[D], Cr[C]|fffd||303|}|fffd|[|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/16 : Knowlbo S.Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetDrCrMarker()
    
    Dim lngIx As Long
    Dim lngRowIndex As Long
    Dim PreCode As String
    Dim PreCodedisp As String
        
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
        
    For lngRowIndex = mc_lngRowST To m_lngModfyMAX_ROWINDEX
        If Cells(lngRowIndex, 3).Value = "" Then Exit For
        
        If PreCode <> Cells(lngRowIndex, 3).Value Then
            PreCode = Cells(lngRowIndex, 3).Value
            PreCodedisp = PreCode & "  (D)"
            For lngIx = 0 To UBound(g_strAryAcCode)
                If Left$(PreCode, 6) = Left$(g_strAryAcCode(lngIx), 6) Then
                    If g_intAryAcDrCr(lngIx) = 1 Then   ''Cr|fffd||fffd||fffd||fffd|
                        PreCodedisp = PreCode & "  (C)"
                    End If
                    Exit For
                End If
            Next
        End If
        Cells(lngRowIndex, 3).Value = PreCodedisp
    Next
    m_blnSetupCellsInProgress = False

End Sub

Attribute VB_Name = "wsPrePaid"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnConnCodeEdit, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnTransfer, 4, 3, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|O|fffd||fffd||fffd||fffd||fffd||44a0||fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s
Private m_strAryLinkCode() As String         ''LinkCode|fffd|z|fffd||fffd|
Private m_lngTransferMonths As Long          ''|fffd|U|fffd||58d||3c2||74c||fffd||fffd||fffd|
Private m_curMonthlyAmount As Currency       ''|fffd|U|fffd||597|\|fffd||830e||fffd|z
Private m_curAmountmod As Currency           ''|fffd|U|fffd||597|\|fffd||830e||fffd|z|fffd|[|fffd||fffd|

Private Type clsPrepaidTRAmount              ''|fffd|O|fffd||fffd||fffd||fffd||fffd|U|fffd||58f||fffd||fffd|
    m_datLedgerDate As Date                  ''LedgerDate
    m_curAmount As Currency                  ''|fffd|U|fffd||58b||fffd||fffd|z(Dr.)
End Type
Private m_typAryPrepaidTRAmount() As clsPrepaidTRAmount         ''|fffd|O|fffd||fffd||fffd||fffd||fffd|U|fffd||58f||fffd||fffd|z|fffd||fffd|
Private m_intTransferCount As Integer          ''|fffd|U|fffd||58d||3c2||749||fffd|
Private m_datLastTransferMonth As Date        ''|fffd||14f|I|fffd|U|fffd||593||fffd|
Private m_datTarget As Date                  ''|fffd|U|fffd||591||38f||6cc||fffd|
Private m_blnIsTrans As Boolean              ''|fffd||38f||6cc||fffd||fffd|U|fffd||58d||3d4||fffd||fffd||fffd|
'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 29 ''|fffd||fffd||fffd||34d||151||fffd|s
Private Const mc_lngRowST As Integer = 20 ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean


    m_blnIsTrans = False
    
    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    
    CmdBtnTransfer.Enabled = m_blnIsTrans
    
    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_PP) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True

'        m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
        s_ClearDataCells                    ''|fffd|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd|N|fffd||fffd||fffd|A
        Cells(3, 3).Value = ""  ''LinkCode
        Cells(1, 1).Activate

        If g_blnAryCmnMstUpdate(GLED_PP) Then
            s_SetupHeader
        End If

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        g_blnArySetupSheet(GLED_PP) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        g_blnAryCmnMstUpdate(GLED_PP) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Exit Function
    End If

    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If

    ''Cash,Book|fffd||fffd||4b902||242||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False And _
       fg_IsSetCommonInfo(GCMN_CB) = False Then
        MsgBox c_strMSG_MASTER_CASHorBANK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & mc_lngRowST)
 
    Cells(1, 1).Activate
 
     ''|fffd||151||fffd|s|fffd||fffd||fffd||752||fffd|
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    s_ClearDataCells                    ''|fffd|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd|N|fffd||fffd||fffd|A
    s_SetupHeader                       ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|

    g_blnArySetupSheet(GLED_PP) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_PP) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
    Erase m_strAryLinkCode
    Erase m_typAryPrepaidTRAmount
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||fffd|LinkCode|fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
'-----------------------------------------------------------------
Private Sub _
s_GetPrePaidLinkCode()
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim lngDataCount As Long

    lngDataCount = 0
    ''|fffd||289||756||fffd||fffd||fffd|InvoiceNo|fffd|z|fffd||4f24a||fffd||fffd||fffd|
    ReDim m_strAryLinkCode(lngDataCount)
    m_strAryLinkCode(lngDataCount) = "New"
    lngDataCount = lngDataCount + 1
    
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY " & "tb.LedgerLinkCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If

    Do Until adoRs.EOF
        ReDim Preserve m_strAryLinkCode(lngDataCount)
        m_strAryLinkCode(lngDataCount) = adoRs.Fields("LedgerLinkCode").Value
        lngDataCount = lngDataCount + 1
        adoRs.MoveNext
    Loop

    On Error GoTo 0

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub

LBL_ERR:
    sg_MsgBoxError "s_GetPrePaidLinkCode", strMSG
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_GetPrePaidLinkCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCode|fffd|I|fffd||fffd||fffd||fffd||343|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Boolean |fffd|^> |fffd|Z|fffd||fffd||fffd|l|fffd||315||6ce||fffd||fffd|t|fffd||fffd||fffd|O
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCode|fffd|I|fffd||fffd||fffd||fffd||342||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_SetupLinkCodeCell( _
    Optional ByVal blnKeepValue As Boolean = False _
)
    Dim lngIx As Long
    Dim strLinkCode As String
    Dim strArea As String
    
    strLinkCode = ""
    
    For lngIx = 0 To UBound(m_strAryLinkCode)
        Cells(4 + lngIx, 15).Value = m_strAryLinkCode(lngIx)
        If Range("C3").Value = m_strAryLinkCode(lngIx) Then
            strLinkCode = Range("C3").Value
        End If
    Next
    strArea = "=$O$4" & ":$O$" & 4 + lngIx - 1
    sg_SetupValidation Range("C3").Validation, c_strMSG_PRLinkCODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strArea, Null
    
    Range("C3").NumberFormat = "@"
    Range("C3").Validation.ShowError = False
        
    If blnKeepValue Then
        Range("C3").Value = strLinkCode
    Else
        Range("C3").Value = ""
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/02/28 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strDatas As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim rngTarget As Range
    Dim blnJVUse As Boolean
    
    s_GetPrePaidLinkCode                ''LinkCode|fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    s_SetupLinkCodeCell                 ''|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    
    ''ConnectionCode
    sg_SetupConnCodeCells Range("C6"), Range("C5"), Range("P4"), "OTH"
    
    ''Expense Burden (WBS-CODE)
    sg_SetupBurdenCells Range("C7"), Range("R4")
    
    ''PrePaidCategory
    strDatas = "Office/House, Car, Others"
    Set rngTarget = Cells(9, 3)
    sg_SetupValidation rngTarget.Validation, c_strMSG_PP_Cat, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
'    rngTarget.Value = fg_GetTokenFromIndexInCSV(0, rngTarget.Validation.Formula1)
    
    
    Set rngTarget = Cells(13, 5)         ''Currency |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    strDatas = ""
    If fg_IsSetCommonInfo(GCMN_CB) Then
        intIxEnd = UBound(g_typAryCBInfo)
        For intIx = 0 To intIxEnd
            If InStr(strDatas, g_typAryCBInfo(intIx).m_strCurrency) = 0 Then
                If strDatas <> "" Then
                    strDatas = strDatas & ","
                End If
                strDatas = strDatas & g_typAryCBInfo(intIx).m_strCurrency
            End If
        Next
    End If
    If fg_IsSetCommonInfo(GCMN_BB) Then
        intIxEnd = UBound(g_typAryBBInfo)
        For intIx = 0 To intIxEnd
            If InStr(strDatas, g_typAryBBInfo(intIx).m_strCurrency) = 0 Then
                If strDatas <> "" Then
                    strDatas = strDatas & ","
                End If
                strDatas = strDatas & g_typAryBBInfo(intIx).m_strCurrency
            End If
        Next
    End If
    
    sg_SetupValidation rngTarget.Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    ''|fffd||289||74f||fffd||fffd||fffd||fffd|l
    'rngTarget.Value = fg_GetTokenFromIndexInCSV(0, rngTarget.Validation.Formula1)

    ''PaymentAmount
    sg_SetupValidation Range("C13").Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    Range("C13").NumberFormat = g_strFORMAT_DECR_XX

    ''Period(start/end)|fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd||195|\|fffd||fffd||fffd|`|fffd||fffd||fffd||752||fffd|
    sg_SetupValidation Range("C14").Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range("C14").NumberFormat = c_strFORMAT_MONTH
    sg_SetupValidation Range("E14").Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range("E15").NumberFormat = c_strFORMAT_MONTH
    Range("C15").NumberFormat = c_strFORMAT_DATE

    Cells(3, 6).Value = g_typAryPJTInfo(0).m_strOfficeCode          ''Office Code
    Cells(4, 6).Value = g_typAryPJTInfo(0).m_strPJTCode             ''Project Code
    Cells(4, 8).Value = g_typAryPJTInfo(0).m_strPJTName             ''Project Name
    
    Range("C17").NumberFormat = g_strFORMAT_DECR_XX    ''Transfered Total
    Range("E17").NumberFormat = g_strFORMAT_DECR_XX    ''Amount Balance
    
    If g_datImportMonth <> 0 Then  ''Import|fffd||3c2||74f|o|fffd|[|fffd||fffd|
        ''Import|fffd||30f||a347||fffd||342|P|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||202||fffd|
        m_datTarget = g_datImportMonth
    Else
        ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        m_datTarget = fg_GetStartOfYear(g_intTargetSysYear)
'        m_datTarget = DateValue(g_intTargetSysYear & "/" & "04/01")
        ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    End If
    
    Range("I17").NumberFormat = g_strFORMAT_DECR_XX    ''Amount plan
    Range("J17").NumberFormat = g_strFORMAT_DECR_XX    ''Amount
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    Range("B" & mc_lngRowST, "B" & m_lngModfyMAX_ROWINDEX).NumberFormat = c_strFORMAT_MONTH
    Range("C" & mc_lngRowST, "C" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("D" & mc_lngRowST, "D" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("E" & mc_lngRowST, "E" & m_lngModfyMAX_ROWINDEX).NumberFormat = c_strFORMAT_MONTH
    Range("F" & mc_lngRowST, "F" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("G" & mc_lngRowST, "G" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("H" & mc_lngRowST, "H" & m_lngModfyMAX_ROWINDEX).NumberFormat = c_strFORMAT_MONTH
    Range("I" & mc_lngRowST, "I" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("J" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||68d||5c3|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub s_SetupDataCells()
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strLinkCode As String
    Dim datSt As Date
    Dim datEd As Date
    Dim intMcount As Integer
    Dim strValue As String
    Dim blnRet As Boolean
    
    s_ClearDataCells    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A

    Erase m_typAryPrepaidTRAmount
    m_intTransferCount = 0
    
    ''DB|fffd||fffd||fffd||fffd||fffd||38f||fffd|(LinkCode)|fffd||fffd||fffd||fffd||202||302||14f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If Cells(3, 3).Value = "" Then
        Exit Sub
    End If
    
    strLinkCode = Cells(3, 3).Value

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR

    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = False) Then
        Cells(4, 12).Value = adoRs.Fields("LedgerLinkCode").Value      ''SaveLinkCode
        Cells(4, 3).Value = adoRs.Fields("Description").Value          ''Description
        Cells(5, 3).Value = adoRs.Fields("ConnectionName").Value           ''Payee
        Cells(6, 3).Value = adoRs.Fields("ConnectionCode").Value           ''Connection Code
        Cells(7, 3).Value = adoRs.Fields("WBSCode").Value              ''ExpenseBurden
        strValue = adoRs.Fields("AcCategory").Value                    ''PrePaidCategory
        Cells(9, 3).Value = strValue
        Select Case strValue
        Case "Office/House"
            Cells(10, 3).Value = c_strACPP_MonthRentOfficeCode
            Cells(10, 5).Value = c_strACPP_MonthRentOfficeName
            Cells(11, 3).Value = c_strACPP_RentOFFICECode
            Cells(11, 5).Value = c_strACPP_RentOFFICEName
        Case "Car"
            Cells(10, 3).Value = c_strACPP_MonthRentCarCode
            Cells(10, 5).Value = c_strACPP_MonthRentCarName
            Cells(11, 3).Value = c_strACPP_ComTranspCode
            Cells(11, 5).Value = c_strACPP_ComTranspName
        Case "Others"
            Cells(10, 3).Value = c_strACPP_MonthRentOtherCode
            Cells(10, 5).Value = c_strACPP_MonthRentOtherName
            Cells(11, 3).Value = c_strACPP_RentExpCode
            Cells(11, 5).Value = c_strACPP_RentExpName
        Case Else
            Cells(10, 3).Value = ""
            Cells(10, 5).Value = ""
            Cells(11, 3).Value = ""
            Cells(11, 5).Value = ""
        End Select
        
        If (IsNull(adoRs.Fields("PaymentAmount").Value) = False And _
            adoRs.Fields("PaymentAmount").Value <> 0) Then
            Cells(13, 3).Value = adoRs.Fields("PaymentAmount").Value    ''PaymentAmount
        End If
        Cells(13, 5).Value = adoRs.Fields("Currency").Value             ''Currency

        datSt = adoRs.Fields("PeriodStart").Value                      ''PeriodStart
        Cells(14, 3).Value = datSt
        datEd = adoRs.Fields("PeriodEnd").Value                        ''PeriodEnd
        Cells(14, 5).Value = datEd
        intMcount = DateDiff("m", datSt, datEd) + 1
        Cells(14, 7).Value = intMcount
        
        Cells(15, 3).Value = adoRs.Fields("PaymentDate").Value         ''PaymentDate
        
        
        If (IsNull(adoRs.Fields("TransferAmount").Value) = False And _
            adoRs.Fields("TransferAmount").Value <> 0) Then        ''TransferAmount
            Cells(17, 3).Value = adoRs.Fields("TransferAmount").Value
        Else
            Cells(17, 3).Value = 0
        End If
'        If Cells(15, 3).Value <> "" Then  ''Amount Balance
            Cells(17, 5).Value = Cells(13, 3).Value - Cells(17, 3).Value
'        Else
'            Cells(17, 5).Value = 0
'        End If
        
        m_lngTransferMonths = adoRs.Fields("TransferMonths").Value   ''TransferMonths
        m_curMonthlyAmount = adoRs.Fields("MonthlyAmount").Value   ''MonthlyAmount
        If IsNull(adoRs.Fields("LastTransferMonth").Value) = False Then
            m_datLastTransferMonth = adoRs.Fields("LastTransferMonth").Value  ''LastTransferMonth
        Else
            m_datLastTransferMonth = 0
        End If
    End If
   
    On Error GoTo 0
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    ''Lock|fffd||fffd||fffd||fffd|
    If Cells(15, 3).Value <> "" Then ''PaymentDate|fffd||fffd||fffd||d4482||142||202||fffd|
        Range("C4", "D4").Locked = True    ''Description
        Range("C5", "D5").Locked = True    ''Payee
        Range("C6", "C8").Locked = True    ''ConnectionCode/Ledgerfor/ExpenseBurden
        Range("C9", "C9").Locked = True  ''PrePaidCategory
        Range("C13", "C13").Locked = True  ''PaymentAmount
        Range("E13", "E13").Locked = True  ''Currency
        Range("C14", "C14").Locked = True  ''PeriodStart
        If Cells(13, 3).Value = Cells(17, 3).Value Then ''|fffd|U|fffd||58a||fffd||fffd||fffd|
            Range("E14", "E14").Locked = True  ''PeriodEnd
        End If
    End If

    ''|fffd|U|fffd||58e||fffd||fffd||443|f|fffd|[|fffd|^|fffd||64fe|
    If Cells(15, 3).Value <> "" And m_lngTransferMonths <> 0 Then
        ''|fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
        blnRet = f_GetPrepaidTransferData(Cells(4, 12).Value, Cells(11, 3).Value, Cells(13, 5).Value, 0, _
                m_intTransferCount, m_typAryPrepaidTRAmount)
    End If
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED08]s_SetupDataCells:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetupDataCells", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||38f||fffd|LinkCode|fffd||310|U|fffd||583|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||38f||fffd|LinkCode
'   (2)<String |fffd|^> |fffd||38f||fffd|AccountCode
'   (3)<String |fffd|^> |fffd||38f||6d2||289||fffd|
'   (4)<Integer |fffd|^> |fffd||38f||6ce||fffd||281|iNK:0,JV:1) |fffd||fffd||fffd||fffd|NK|fffd||302||fffd|
'   (5)<Integer |fffd|^> |fffd||64fe||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd|
'   (6)<clsPrepaidTRAmount |fffd|^> |fffd||64fe||fffd||fffd||fffd|z|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||fffd|LinkCode|fffd||310|U|fffd||583|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
'-----------------------------------------------------------------
Private Function _
f_GetPrepaidTransferData( _
    ByVal strLinkCode As String, _
    ByVal strAcCode As String, _
    ByVal strCurrency As String, _
    ByVal intPurpose As Integer, _
    ByRef intGetCount As Integer, _
    ByRef typAryTRAmount() As clsPrepaidTRAmount _
) As Boolean
    
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim lngIx As Long
    Dim intCount As Integer
    Dim strLedID As String
    
    intGetCount = 0
    intCount = 0
    f_GetPrepaidTransferData = False
    If strLinkCode = "" Then Exit Function
    If fg_IsSetCommonInfo(GCMN_TR) <> True Then Exit Function
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strLedID = ""
    For lngIx = 0 To UBound(g_typAryTRInfo)
        ''|fffd||38f||6d4|N|fffd|xDB|fffd||243|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd|A|fffd||289||fffd|, NK/JV, Auto
        If strCurrency = g_typAryTRInfo(lngIx).m_strCurrency And _
           InStr(g_typAryTRInfo(lngIx).m_strDescript, "Auto") <> 0 And _
           g_typAryTRInfo(lngIx).m_intPurpose = intPurpose Then
            If strLedID <> "" Then strLedID = strLedID & ","
            strLedID = strLedID & g_typAryTRInfo(lngIx).m_strCode
        End If
    Next
    
    ''Transfer|fffd||fffd||fffd||5cf||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Transfer & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(strLinkCode)
    strSQL = strSQL & " AND tb.LedgerCode IN (" & fg_AddSingleQuotation(strLedID) & ")"

    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Transfer
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
        If strAcCode = adoRs.Fields("AccountCode").Value Then
            ReDim Preserve typAryTRAmount(intCount)
            typAryTRAmount(intCount).m_datLedgerDate = adoRs.Fields("LedgerDate").Value
            If (IsNull(adoRs.Fields("Paid").Value) = False And adoRs.Fields("Paid").Value <> 0) Then
                typAryTRAmount(intCount).m_curAmount = CCur(adoRs.Fields("Paid").Value)
            End If
            If (IsNull(adoRs.Fields("Received").Value) = False And adoRs.Fields("Received").Value <> 0) Then
                typAryTRAmount(intCount).m_curAmount = CCur(adoRs.Fields("Received").Value) * -1
            End If
            intCount = intCount + 1
        End If
        adoRs.MoveNext
    Loop

    On Error GoTo 0
    intGetCount = intCount
    
    f_GetPrepaidTransferData = True
LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    f_GetPrepaidTransferData = False
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetPrepaidTransferData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_GetPrepaidTransferData", strMSG
    GoTo LBL_END
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd||310||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd||310||752||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/05/20 : Knowlbo Suzuki : |fffd||fffd||fffd||50e|w|fffd||fffd||fffd||fffd|P|fffd||fffd||fffd||255||2433||fffd|i|fffd|P|fffd||fffd||fffd||20a|O|fffd||150|U|fffd||582||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||311||389||fffd||fffd|j
'-----------------------------------------------------------------
Private Sub s_SetDetailDataCells()
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngCount As Long
    Dim lngTimes As Long
    Dim datValue As Date
    Dim curPlanAmount As Currency
    Dim curAmount As Currency
    Dim curValue As Currency
    Dim lngAmount As Long
    Dim lngIx As Long
    Dim blnAdjustment As Boolean
    Dim blnAdjustZeroTrans As Boolean
    Dim lngRowCount As Long
    
    m_blnIsTrans = False
    blnAdjustZeroTrans = False
    
    ''|fffd|f|fffd|[|fffd|^|fffd||38f||6cc||fffd|
    Cells(17, 8).Value = "" ''TargetMonth
    Cells(17, 9).Value = "" ''Amount Plan
    Cells(17, 10).Value = "" ''Amount
    Range(Cells(17, 8), Cells(17, 10)).Font.Bold = False
    
    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||5d5||fffd|
    Range("B" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).ClearContents
    Range("B" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).Interior.ColorIndex = xlNone
    Range("B" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).Font.Bold = False
    
    CmdBtnTransfer.Enabled = m_blnIsTrans
    
    If Cells(13, 3).Value = "" Then Exit Sub ''PaymentAmount|fffd||fffd||fffd||fffd|
    If Cells(14, 7).Value = "" Then Exit Sub ''TotalMonth|fffd||fffd||fffd||fffd|
    If Cells(14, 7).Value = 0 Then Exit Sub ''TotalMonth|fffd||fffd|0
    
    sg_SetScreenUpdate False
    
    ''|fffd|f|fffd|[|fffd|^|fffd||151||fffd|s|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||73c9||fffd||fffd||fffd|l|fffd||256||7c2||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
    If m_lngModfyMAX_ROWINDEX > mc_lngMAX_ROWINDEX Then
        lngRow = mc_lngMAX_ROWINDEX - 1
        lngRowCount = (m_lngModfyMAX_ROWINDEX - mc_lngMAX_ROWINDEX) - 1
        
        Range("A" & lngRow, "J" & lngRow + lngRowCount).Delete Shift:=xlUp
        m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
    End If
    
    lngCount = Cells(14, 7).Value ''TotalMonth
    If lngCount > (m_lngModfyMAX_ROWINDEX - mc_lngRowST + 1) * 3 Then       ''|fffd|s|fffd||1c9||fffd|
        lngRowCount = lngCount \ 3
        If lngCount Mod 3 <> 0 Then lngRowCount = lngRowCount + 1
        For lngIx = 0 To lngRowCount - (mc_lngMAX_ROWINDEX - mc_lngRowST + 1) - 1
            Range("A" & mc_lngMAX_ROWINDEX - 1 & ":J" & mc_lngMAX_ROWINDEX - 1).Copy
            Range("A" & mc_lngMAX_ROWINDEX - 1 & ":J" & mc_lngMAX_ROWINDEX - 1).Insert Shift:=xlDown
        Next
        m_lngModfyMAX_ROWINDEX = mc_lngRowST + lngRowCount - 1
    End If
    
    ''|fffd||fffd||fffd|z / |fffd||fffd||fffd||fffd| = |fffd|\|fffd||830e||fffd|z
    curValue = CCur(Cells(13, 3).Value)
    ''Replace sho 2003/08/15 >>
'    lngAmount = curValue \ lngCount
'    m_curMonthlyAmount = lngAmount              ''|fffd|U|fffd||597|\|fffd||830e||fffd|z
'    m_curAmountmod = curValue Mod lngCount      ''|fffd|U|fffd||597|\|fffd||830e||fffd|z|fffd|[|fffd||fffd|
    
    lngAmount = CLng(Cells(13, 3).Value) \ lngCount
    m_curMonthlyAmount = lngAmount              ''|fffd|U|fffd||597|\|fffd||830e||fffd|z
    m_curAmountmod = curValue - (lngCount * lngAmount)    ''|fffd|U|fffd||597|\|fffd||830e||fffd|z|fffd|[|fffd||fffd|
    ''Replace sho 2003/08/15 <<
   
    ''|fffd||38f||6cc||fffd||fffd|f|fffd|[|fffd|^
    Cells(17, 8).Value = m_datTarget ''TargetMonth
    Cells(17, 9).Value = 0
    Cells(17, 10).Value = 0
    
    ''1|fffd||fffd||fffd||255||2433|
    datValue = Cells(14, 3).Value ''Period Start
    datValue = DateValue(CStr(Year(datValue)) & "/" & CStr(Month(datValue)) & "/01")
    
    lngRow = mc_lngRowST
    lngCol = 2
    For lngTimes = 0 To lngCount - 1
        If lngRow > m_lngModfyMAX_ROWINDEX Then
            lngRow = mc_lngRowST
            lngCol = lngCol + 3
        End If
        If lngCol > 10 Then lngCol = 2
        If lngTimes <> 0 Then datValue = DateAdd("m", 1, datValue)
        
        ''|fffd|c|fffd|z|fffd||30c||fffd||fffd||fffd||fffd|v|fffd|Z
        If lngTimes = lngCount - 1 Then ''|fffd||14f|I|fffd||fffd|
            curPlanAmount = m_curMonthlyAmount + m_curAmountmod
        Else
            curPlanAmount = m_curMonthlyAmount
        End If
      
        If Cells(15, 3).Value <> "" Then
            blnAdjustment = False
            ''|fffd|U|fffd||583|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
            If lngTimes + 1 <= m_lngTransferMonths Then
                ''|fffd|U|fffd||58d||3c2||743|f|fffd|[|fffd|^|fffd||30c||fffd||fffd|z|fffd||752||fffd|
                curAmount = 0
                For lngIx = 0 To m_intTransferCount - 1
                    If Year(datValue) = Year(m_typAryPrepaidTRAmount(lngIx).m_datLedgerDate) And _
                       Month(datValue) = Month(m_typAryPrepaidTRAmount(lngIx).m_datLedgerDate) Then
                        curAmount = m_typAryPrepaidTRAmount(lngIx).m_curAmount
                        
                        ''|fffd|U|fffd||591||38f||6cc||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd|
                        If datValue = m_datTarget Then
                            m_blnIsTrans = True
                            Cells(17, 9).Value = curPlanAmount ''Amount Plan
                            Cells(17, 10).Value = curAmount ''Amount
                            Range(Cells(17, 8), Cells(17, 10)).Font.Bold = True
                        End If
                        Exit For
                    End If
                Next
                If lngTimes + 1 = m_lngTransferMonths And m_blnIsTrans = False And datValue = m_datTarget Then
                    ''|fffd|U|fffd||58d||3cc||fffd||fffd||fffd||fffd||141|A|fffd|[|fffd||fffd||fffd|U|fffd||582||302||fffd||fffd||fffd|Transfer|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd|
                    ''|fffd||38f||6cc||fffd||fffd||fffd|Transfer|fffd||74f|o|fffd||342||14f||fffd||fffd||fffd|(|fffd|U|fffd||fffd|)|fffd||3c2||742||202||302||141|ABold|fffd||242||fffd||fffd|A|fffd|[|fffd||fffd||fffd|U|fffd||583|t|fffd||fffd||fffd|O|fffd||179c2||102||fffd|
                    blnAdjustZeroTrans = True
                    Range(Cells(17, 8), Cells(17, 10)).Font.Bold = True
                End If
                
                Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol + 2)).Font.Bold = True
            Else
                ''|fffd||fffd||fffd|U|fffd||581|i|fffd||3565||fffd||fffd||fffd||fffd||fffd||702||fffd|m_lngTransferMonths=0|fffd|j
                curAmount = curPlanAmount
                Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol + 2)).Font.Bold = False
                If m_lngTransferMonths = 0 Then
                    ''|fffd||fffd||fffd|U|fffd||fffd|
                    If datValue < m_datTarget Then
                        curAmount = 0
                        Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol + 2)).Font.Bold = True
                    End If
                End If
            End If
            If (datValue = m_datTarget) And (m_blnIsTrans = False) Then
                ''|fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd|U|fffd||582||30f||a347||fffd||351||38f||6cc||fffd||fffd||152||fffd||fffd||fffd|
                blnAdjustment = True
            End If
            If datValue = DateAdd("m", 1, m_datTarget) Then
                ''|fffd||38f||6cc||fffd||fffd||fffd||fffd|U|fffd||58d||3c1|A|fffd||702||fffd||fffd||343|[|fffd||fffd||fffd|U|fffd||582||30f||a347||fffd||357||fffd||fffd||fffd||fffd||152||fffd||fffd||fffd|
                If m_blnIsTrans Or blnAdjustZeroTrans Then
                    blnAdjustment = True
                End If
            End If
            
            If blnAdjustment Then
                ''|fffd|U|fffd||58b||fffd||fffd|z|fffd||312||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                ''|fffd||fffd||fffd||44e|c|fffd|||fffd|\|fffd||fffd|c |fffd||fffd| |fffd|\|fffd||830e||fffd|z|fffd||249||fffd||fffd|Z
                curValue = CCur(Cells(13, 3).Value) - CCur(Cells(17, 3).Value)
                curValue = curValue - ((lngCount - lngTimes) * m_curMonthlyAmount + m_curAmountmod)
                curAmount = curPlanAmount + curValue
                If m_blnIsTrans = False Then
                    If blnAdjustZeroTrans And datValue = m_datTarget Then
                        curAmount = 0
                    End If
                    If datValue = m_datTarget Then
                        Cells(17, 9).Value = curPlanAmount ''Amount Plan
                        Cells(17, 10).Value = curAmount ''Amount
                    End If
                End If
            End If
        Else
            curAmount = curPlanAmount
            If datValue < m_datTarget Then
                curAmount = 0
            End If
            If datValue = m_datTarget Then
                ''|fffd||fffd||fffd||fffd||fffd|U|fffd||58b||fffd||fffd|z|fffd||312||fffd||fffd||fffd|
                curAmount = (lngTimes + 1) * m_curMonthlyAmount
                If lngTimes = lngCount - 1 Then ''|fffd||14f|I|fffd||fffd|
                    curAmount = curAmount + m_curAmountmod
                End If
                Cells(17, 9).Value = curPlanAmount ''Amount Plan
                Cells(17, 10).Value = curAmount ''Amount
            End If
            Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol + 2)).Font.Bold = False
        End If
        
        Cells(lngRow, lngCol).Value = datValue
        Cells(lngRow, lngCol + 1).Value = curPlanAmount
        Cells(lngRow, lngCol + 2).Value = curAmount
        lngRow = lngRow + 1
    Next
    
    If Cells(15, 3).Value <> "" And m_blnIsTrans = False Then
        If Cells(13, 3).Value <> Cells(17, 3).Value Then
    
            ''|fffd||fffd||fffd|S|fffd||3565||fffd||fffd||fffd||30f||a347|
            ''|fffd||28f||fffd||34a||fffd||fffd||50f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||38f||6cc||fffd||fffd||211|O|fffd||242||342||202||fffd||202||fffd||fffd||fffd||fffd|A|fffd||a287||fffd||30e|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||7c2||fffd||fffd||fffd||182||fffd||fffd||30f||cbd42||242||202||fffd|
            If Cells(17, 10).Value = 0 And datValue < m_datTarget Then
                Cells(17, 10).Value = Cells(17, 5).Value
            End If
            If blnAdjustZeroTrans = False Then
                ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd| SS|fffd||34f||fffd||256||fffd||fffd||fffd|
                ''CmdBtnTransfer.Enabled = g_blnLedgerModify
            End If
        End If
    End If

    ''PaymentDate|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||fffd||a347|SS|fffd||142||355||48f|W|fffd||fffd||fffd||58e|~|fffd||fffd||fffd||fffd|
    If Cells(15, 3).Value <> "" Then            ''PaymentDate
        CmdBtnDbUpDate.Enabled = False
        Range("E14", "E14").Locked = True  ''PeriodEnd
    Else
        CmdBtnDbUpDate.Enabled = g_blnLedgerModify
    End If
    
    sg_SetScreenUpdate True
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   Balance|fffd|l|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
            
    f_CheckInputData = False
    
    If Cells(3, 3).Value = "" Then          ''LedgerLinkCode
        strMessage = c_strMSG_PRLinkCODE
        Cells(3, 3).Activate
        Exit Function
    End If
    If Cells(4, 3).Value = "" Then          ''Description
        strMessage = c_strMSG_DESCRIPTION
        Cells(4, 3).Activate
        Exit Function
    Else
        If Len(Cells(4, 3).Value) > 64 Then
            strMessage = c_strMSGCmn_LENGTHOVER & "64"
            Cells(4, 3).Activate
            Exit Function
        End If
    End If
    If Cells(6, 3).Value = "" Then          ''ConnectionCode/Name
        strMessage = c_strMSG_CONNECT_CODE
        Cells(6, 3).Activate
        Exit Function
    End If
    If Cells(7, 3).Value = "" Then          ''Expense Burden
        strMessage = c_strMSG_WBS
        Cells(7, 3).Activate
        Exit Function
    End If
    
    If Cells(9, 3).Value = "" Then          ''PrepaidCategory
        strMessage = c_strMSG_PP_Cat
        Cells(9, 3).Activate
        Exit Function
    End If
    If Cells(13, 3).Value = "" Then          ''PaymentAmount
        strMessage = c_strMSG_DECEIMAL_NUM
        Cells(13, 3).Activate
        Exit Function
    End If
    If Cells(13, 5).Value = "" Then          ''Currency
        strMessage = c_strMSG_RIGHTCURRENCY
        Cells(13, 5).Activate
        Exit Function
    End If
    If Cells(14, 3).Value = "" Then         ''PeriodStart
        strMessage = c_strMSG_DATE_FORMAT
        Cells(14, 3).Activate
        Exit Function
    End If
    If Cells(14, 5).Value = "" Then         ''PeriodEnd
        strMessage = c_strMSG_DATE_FORMAT
        Cells(14, 5).Activate
        Exit Function
    End If
    If Cells(14, 3).Value >= Cells(14, 5).Value Then        ''|fffd||fffd||fffd||510||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        strMessage = c_strMSG_BETWEENPERIOD
        Cells(14, 3).Activate
        Exit Function
    End If
    
    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_ClearDataCells()
    
    m_blnDirty = False                  ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    m_lngTransferMonths = 0
    m_curMonthlyAmount = 0
    m_curAmountmod = 0

    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A|fffd|w|fffd|b|fffd|_|fffd||fffd|
    Cells(4, 3).Value = ""  ''Description
    Cells(5, 3).Value = ""  ''Payee
    Cells(6, 3).Value = ""  ''Connection Code
    Cells(7, 3).Value = ""  ''Expense Burden
    Cells(9, 3).Value = "" ''PrepaidCategory
    Cells(10, 3).Value = "" ''PrepaidAcCode
    Cells(10, 5).Value = "" ''PrepaidAcName
    Cells(11, 3).Value = "" ''AccountCode
    Cells(11, 5).Value = "" ''AccountName
    Cells(13, 3).Value = ""  ''PaymentAmount
    Cells(13, 5).Value = ""  ''Currency
    
    Cells(14, 3).Value = "" ''Period Start
    Cells(14, 5).Value = "" ''PeriodEnd
    Cells(14, 7).Value = "" ''Months
    
    Cells(15, 3).Value = "" ''PaymentDate
    Cells(17, 3).Value = "" ''TransferAmount
    Cells(17, 5).Value = "" ''Amount Balance
    Cells(4, 12).Value = "" ''ID(LinkCode)
    
    ''|fffd|f|fffd|[|fffd|^|fffd||38f||6cc||fffd|
    Cells(17, 8).Value = "" ''TargetMonth
    Cells(17, 9).Value = "" ''Amount Plan
    Cells(17, 10).Value = "" ''Amount
    
    ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||5d5||fffd|
    Range("B" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).ClearContents
    Range("B" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).Interior.ColorIndex = xlNone
    Range("B" & mc_lngRowST, "J" & m_lngModfyMAX_ROWINDEX).Font.Bold = False
    
    ''Lock|fffd||fffd||fffd||fffd|
    Range("C4", "D4").Locked = False    ''Description
    Range("C5", "D5").Locked = False    ''Payee
    Range("C6", "C8").Locked = False    ''ConnectionCode/Ledgerfor/ExpenseBurden
    Range("C9", "C9").Locked = False    ''PrePaidCategory
    Range("C13", "C13").Locked = False  ''PaymentAmount
    Range("E13", "E13").Locked = False  ''Currency
    Range("C14", "C14").Locked = False  ''PeriodStart
    Range("E14", "E14").Locked = False  ''PeriodStart

    sg_GetCurrentLinkCodeNo GLNK_PP   ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||64fe|
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean
    
    Dim blnSetData As Boolean
    Dim blnDirty As Boolean
    Dim blnNewLinkCode As Boolean
    Dim strLinkCode As String
    Dim blnSetACCode As Boolean
    Dim lngTokenIdx As Long
    Dim blnSetConnCode As Boolean
    Dim blnCalcMonth As Boolean
    Dim blnCheckMonth As Boolean
    Dim lngMonths As Long
    Dim datSt As Date
    Dim datEd As Date
    Dim strValue As String
    lngMonths = 0
    
    blnSetData = False
    blnSetACCode = False
    blnSetConnCode = False
    blnNewLinkCode = False
    blnCalcMonth = False
    blnCheckMonth = False
    blnDirty = False

    If rngTarget.Column = 3 Then
        Select Case rngTarget.Row
        Case 3      ''LinkCode
            If Not fg_QuestionSave(m_blnDirty) Then
                f_onChangeCell = False
                Exit Function
            End If
            ''|fffd|R|fffd||fffd||fffd|{|fffd|I|fffd||fffd|Item|fffd||fffd|"New"
            If (rngTarget.Value <> "") And (UCase(rngTarget.Value) = "NEW") Then
                blnNewLinkCode = True
            End If
            blnSetData = True
        Case 4   ''Description
            blnDirty = True
        Case 5    ''Payee|fffd|iConnectionName)
            blnSetConnCode = True
        Case 6    ''ConnectionCode
            m_blnSetupCellsInProgress = True
            strValue = UCase$(rngTarget.Value)
            rngTarget.Value = strValue
            m_blnSetupCellsInProgress = False
            blnSetConnCode = True
        Case 7   ''ExpenseBurden
            blnDirty = True
        Case 9      ''PrepaidCategory
            blnSetACCode = True
        Case 13      ''PaymentAmount
            blnCalcMonth = True
            If rngTarget.Value <> "" Then
                MsgBox c_strMSG_PP_Amount, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
            End If
        Case 14     ''PeriodStart
            blnCalcMonth = True
            blnCheckMonth = True
        End Select
    End If
    
    If rngTarget.Column = 5 Then
        Select Case rngTarget.Row
        Case 13   ''Currency
            blnDirty = True
        Case 14      ''PeriodEnd
            blnCalcMonth = True
            blnCheckMonth = True
        End Select
    End If

    If blnSetData = False And Cells(3, 3).Value = "" Then ''LinkCode|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
        MsgBox c_strMSG_PRLinkCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
'        Cells(3, 3).Activate
        rngTarget.Activate

        f_onChangeCell = False
        Exit Function
    End If

    If blnCheckMonth And Cells(14, 3).Value <> "" And Cells(14, 5).Value <> "" Then
        If Cells(14, 3).Value >= Cells(14, 5).Value Then        ''|fffd||fffd||fffd||510||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
            MsgBox c_strMSG_BETWEENPERIOD, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
        datSt = Cells(14, 3).Value
        datEd = Cells(14, 5).Value
        lngMonths = DateDiff("m", datSt, datEd) + 1
        If lngMonths > 60 Then ''|fffd||151||fffd|T|fffd|N
            MsgBox c_strMSG_ERRORMONTH, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
        If m_datTarget > Cells(14, 5).Value Then
            MsgBox c_strMSG_PP_BETWEENPERIOD & "TargetMonth.", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
        ''|fffd|U|fffd||58d||3cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||502||fffd||fffd|Z|fffd||fffd||fffd||202||fffd||a347||fffd||343|G|fffd||fffd||fffd|[
        If m_lngTransferMonths >= lngMonths Then
            MsgBox c_strMSG_PP_BETWEENPERIOD & "Transfered Month.", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
    End If

    ''|fffd|f|fffd|[|fffd|^|fffd|X|fffd|V
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    If blnSetConnCode Then
        If rngTarget.Row = 6 Then
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnCodeTSV)
            rngTarget.Offset(-1, 0).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnNameTSV)
        Else
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnNameTSV)
            rngTarget.Offset(1, 0).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnCodeTSV)
        End If
        blnDirty = True
    End If

    
    If blnSetACCode Then
        If rngTarget.Value <> "" Then
            Select Case rngTarget.Value
            Case "Office/House"
                Cells(10, 3).Value = c_strACPP_MonthRentOfficeCode
                Cells(10, 5).Value = c_strACPP_MonthRentOfficeName
                Cells(11, 3).Value = c_strACPP_RentOFFICECode
                Cells(11, 5).Value = c_strACPP_RentOFFICEName
            Case "Car"
                Cells(10, 3).Value = c_strACPP_MonthRentCarCode
                Cells(10, 5).Value = c_strACPP_MonthRentCarName
                Cells(11, 3).Value = c_strACPP_ComTranspCode
                Cells(11, 5).Value = c_strACPP_ComTranspName
            Case "Others"
                Cells(10, 3).Value = c_strACPP_MonthRentOtherCode
                Cells(10, 5).Value = c_strACPP_MonthRentOtherName
                Cells(11, 3).Value = c_strACPP_RentExpCode
                Cells(11, 5).Value = c_strACPP_RentExpName
            End Select
        Else
            Cells(10, 3).Value = ""
            Cells(10, 5).Value = ""
            Cells(11, 3).Value = ""
            Cells(11, 5).Value = ""
        End If
    
        blnDirty = True
    End If

    ''|fffd|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        If blnNewLinkCode Then
            s_ClearDataCells         ''|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
            Cells(3, 3).Value = fg_CreateLinkCode(GLNK_PP) 'LinkCode|fffd||fffd||fffd||fffd|
            blnDirty = True
        Else
            s_SetupDataCells         ''|fffd|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            s_SetDetailDataCells     ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||752||fffd|
        End If
    End If

    ''|fffd||fffd||fffd||50c||fffd||fffd||30c|v|fffd|Z
    If blnCalcMonth = True Then
        If Cells(14, 3).Value <> "" And Cells(14, 5).Value <> "" Then
            datSt = Cells(14, 3).Value
            datEd = Cells(14, 5).Value
            If datSt < datEd Then
                lngMonths = DateDiff("m", datSt, datEd) + 1
            End If
        End If
        Cells(14, 7).Value = lngMonths
        s_SetDetailDataCells ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||752||fffd|
        blnDirty = True
    End If

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False

    If blnDirty Then m_blnDirty = True
    
    If m_blnDirty Then CmdBtnTransfer.Enabled = False
    
    f_onChangeCell = True
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Connection Code|fffd||48f|W|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Connection Code|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/10 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnConnCodeEdit_Click()
    frmConnect_Setting.Show
    
    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
    If g_blnConnCodeEdit = False Then
        Exit Sub
    End If
    
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    
    
    ''ConnectionCode |fffd||113||1c2||74d||fffd||fffd||fffd|
    sg_GetConnectionCodeList
    
    ''ConnectionCode |fffd||110||752||fffd|
    sg_SetupConnCodeCells Range("C6"), Range("C5"), Range("P4"), "OTH"

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strData As String
    Dim datValue As Date
    Dim blnUpdate As Boolean
    Dim datPrNow As Date
    Dim strDescription As String
    
    strDescription = ""

    datPrNow = Now()
    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData(strMSG) Then
        MsgBox strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        ActiveCell.Activate
        Exit Sub
    End If

    sg_SetScreenUpdate False

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If

    blnUpdate = False
    adoRs.Filter = adFilterNone
    ''DB|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V------------------------------------------------------------
    If Cells(4, 12).Value <> "" Then ''Linkcode|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd|X|fffd|V)
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(Cells(4, 12).Value)
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setPrePaidExpenseHistorySQLString(adoRs, datPrNow)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PrePaidExpense
                GoTo LBL_ERR
            End If
        Else
            strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_PrePaidExpense
            GoTo LBL_ERR
        End If
        blnUpdate = True
    ''|fffd||1c9||fffd|
    Else
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
    End If
    
    m_blnSetupCellsInProgress = True        ''|fffd||6cc||fffd||fffd||fffd||fffd|
    Unprotect Password:=c_strSheetPWD

    adoRs.Fields("OfficeCode").Value = g_strOfficeCode              ''OfficeCode
    adoRs.Fields("LedgerLinkCode").Value = Cells(3, 3).Value        ''LedgerLinkCode
    adoRs.Fields("Currency").Value = Cells(13, 5).Value             ''Currency
    If Cells(4, 3).Value <> "" Then                                 ''Description
        strData = CStr(Cells(4, 3).Value)
        If Left$(strData, 4) = c_strKwdModifyBR Or _
           Left$(strData, 4) = c_strKwdModifyNK Then
            strData = c_strKwdModifyNK & Mid$(strData, 5)
        Else
            strData = c_strKwdModifyNK & strData
        End If
        If Len(strData) > 64 Then strData = Left$(strData, 64)
        adoRs.Fields("Description").Value = strData
        strDescription = strData
    Else
        adoRs.Fields("Description").Value = c_strKwdModifyNK
        strDescription = c_strKwdModifyNK
    End If
    adoRs.Fields("Purpose").Value = "0"                             ''Purpose
    adoRs.Fields("ConnectionCode").Value = Cells(6, 3).Value        ''Connection Code
    adoRs.Fields("ConnectionName").Value = Cells(5, 3).Value        ''ConnectionName
    adoRs.Fields("AcCategory").Value = Cells(9, 3).Value            ''AcCategory
    adoRs.Fields("WBSCode").Value = Cells(7, 3).Value               ''Expense Burden
    datValue = DateValue(Cells(14, 3).Value)                        ''PeriodStart
    adoRs.Fields("PeriodStart").Value = datValue
    datValue = DateValue(Cells(14, 5).Value)                        ''PeriodEnd
    adoRs.Fields("PeriodEnd").Value = datValue
    adoRs.Fields("PaymentAmount").Value = Cells(13, 3).Value        ''PaymentAmount
    adoRs.Fields("MonthlyAmount").Value = m_curMonthlyAmount        ''MonthlyAmount
    If blnUpdate = False Then ''|fffd|V|fffd|K|fffd||1c9||fffd|
        adoRs.Fields("TransferAmount").Value = 0                    ''TransferAmount
        adoRs.Fields("TransferMonths").Value = 0                    ''TransferMonths
    End If
    adoRs.Fields("ModifyPlace").Value = "1"                         ''ModifyPlace
    ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
    ''ID|fffd||311||582||fffd||fffd|LinkCode|fffd||fffd|ID|fffd||fffd||255||6d1||fffd|
    Cells(4, 12).Value = Cells(3, 3).Value

    If blnUpdate = False Then ''|fffd|V|fffd|K|fffd||1c9||fffd|
        ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_PP, adoCn, objdba) = False Then GoTo LBL_ERR
    End If

    Call objdba.closeRecordset(adoRs)
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    If blnUpdate = False Then ''|fffd|V|fffd|K|fffd||1c9||fffd|
        ActiveCell.Select
        s_GetPrePaidLinkCode                ''LinkCode|fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
        s_SetupLinkCodeCell True                 ''|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    End If
    
    If strDescription <> "" Then Cells(4, 3).Value = strDescription
    
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    m_blnDirty = False
    CmdBtnDbUpDate.Visible = True
    
    ''|fffd|U|fffd||583|{|fffd|^|fffd||fffd||fffd||30f||fffd||515||3cd|X
    If m_datLastTransferMonth = m_datTarget Then
        CmdBtnTransfer.Enabled = False  ''|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        If Cells(15, 3).Value <> "" Then
            ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd| SS|fffd||34f||fffd||256||fffd||fffd||fffd|
            ''CmdBtnTransfer.Enabled = g_blnLedgerModify
        End If
    End If
    ThisWorkbook.Activate
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM

LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    m_blnDirty = False
    CmdBtnDbUpDate.Visible = True
    
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED8]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/03 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    Dim lngRow As Long
    Dim lngRowCount As Long
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    
    ''|fffd|f|fffd|[|fffd|^|fffd||151||fffd|s|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||73c9||fffd||fffd||fffd|l|fffd||256||7c2||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
    If m_lngModfyMAX_ROWINDEX > mc_lngMAX_ROWINDEX Then
        lngRow = mc_lngMAX_ROWINDEX - 1
        lngRowCount = (m_lngModfyMAX_ROWINDEX - mc_lngMAX_ROWINDEX) - 1
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        Range("A" & lngRow, "J" & lngRow + lngRowCount).Delete Shift:=xlUp
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(7) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|U|fffd||583|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6cc||fffd||fffd|f|fffd|[|fffd|^|fffd||310|U|fffd||58f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/20 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnTransfer_Click()

    Dim typAryTRBookData() As clsTransBookData ''|fffd|U|fffd||597|p|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
    Dim intCount As Integer
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim datValue As Date
    Dim curAmountTotal As Currency
    Dim curAmount As Currency
    Dim blnUpdate As Boolean
    Dim intMcount As Integer
    Dim datPrNow As Date

    datPrNow = Now()
    ''|fffd|x|fffd||fffd||fffd||fffd||fffd||3c2||743|`|fffd|F|fffd|b|fffd|N
    If m_blnIsTrans = True Then
        CmdBtnTransfer.Visible = True
        Exit Sub
    End If
    
    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If vbNo = MsgBox(c_strMSG_PP_QUESTR, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnTransfer.Visible = True
        Exit Sub
    End If

    intCount = 0
    ReDim Preserve typAryTRBookData(intCount)
    typAryTRBookData(intCount).m_datTargetPeriod = m_datTarget
    
    If m_lngTransferMonths = 0 Then ''|fffd||fffd||fffd||fffd|U|fffd||fffd|
        typAryTRBookData(intCount).m_datLedgerDate = m_datTarget
    Else
        datValue = Cells(17, 8).Value
        typAryTRBookData(intCount).m_datLedgerDate = datValue
    End If
    
    typAryTRBookData(intCount).m_strDescription = CStr(Cells(4, 3).Value)   ''Description
    typAryTRBookData(intCount).m_strDetails = ""                            ''Details
    typAryTRBookData(intCount).m_strWBSCode = CStr(Cells(7, 3).Value)       ''Expense Burden
    typAryTRBookData(intCount).m_strAcCode = CStr(Cells(10, 3).Value)       ''AccountCode
    typAryTRBookData(intCount).m_strAcName = CStr(Cells(10, 5).Value)       ''AccountName
    typAryTRBookData(intCount).m_strConectCode = CStr(Cells(6, 3).Value)    ''ConectCode
    typAryTRBookData(intCount).m_strConectName = CStr(Cells(5, 3).Value)    ''ConectName
    typAryTRBookData(intCount).m_strLedgerLinkCode = CStr(Cells(3, 3).Value)    ''LinkCode
    typAryTRBookData(intCount).m_strEviNo = ""                              ''EviNo
    typAryTRBookData(intCount).m_strCheckNo = ""                            ''CheckNo
    typAryTRBookData(intCount).m_strNKJV = "NK"                             ''NKJV
    typAryTRBookData(intCount).m_strClaim = "Y"                             ''Claim
                        
    blnUpdate = True
    If Cells(17, 10).Value = 0 Then ''|fffd|[|fffd||fffd||fffd|U|fffd||582||30f||a347|
        blnUpdate = False
    End If
    
    If Cells(17, 10).Value < 0 Then ''|fffd||fffd||fffd|l|fffd||30f||a347|
        typAryTRBookData(intCount).m_curPaid = 0
        typAryTRBookData(intCount).m_curReceived = CCur(Cells(17, 10).Value) * -1 ''Amount
    Else
        typAryTRBookData(intCount).m_curPaid = Cells(17, 10).Value              ''Amount
        typAryTRBookData(intCount).m_curReceived = 0
    End If
    
    sg_GetCurrentRecIDNo GLED_TR ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    
    sg_SetScreenUpdate False
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PrePaidExpense & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(Cells(4, 12).Value)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
        objdba.SQLString = fg_setPrePaidExpenseHistorySQLString(adoRs, datPrNow)
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PrePaidExpense
            GoTo LBL_ERR
        End If
    Else
        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_PrePaidExpense
        GoTo LBL_ERR
    End If
    
    ''|fffd||fffd||fffd||fffd||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
    If blnUpdate Then
        If (fg_PrepaidTransfer(adoCn, objdba, Cells(3, 3).Value, typAryTRBookData, False) <> True) Then
            GoTo LBL_ERR
        End If
    End If

    ''|fffd||44a0||fffd|X|fffd|V--------------------------------------
    m_blnSetupCellsInProgress = True        ''|fffd||6cc||fffd||fffd||fffd||fffd|
    Unprotect Password:=c_strSheetPWD

    curAmountTotal = Cells(17, 3).Value
    curAmount = Cells(17, 10).Value
    adoRs.Fields("TransferAmount").Value = curAmountTotal + curAmount ''TransferAmount
    datValue = Cells(14, 3).Value
    intMcount = DateDiff("m", datValue, m_datTarget) + 1
    adoRs.Fields("TransferMonths").Value = intMcount                    ''TransferMonths
    adoRs.Fields("LastTransferMonth").Value = m_datTarget               ''LastTransferMonth
    
    adoRs.Fields("ModifyPlace").Value = "1"                             ''ModifyPlace
    ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
    adoRs.Fields("InsertDate").Value = datPrNow
    adoRs.Fields("InsertUID").Value = g_strLoginId
    adoRs.Update
   
    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerRecID|fffd|X|fffd|V
    If blnUpdate Then
        If fg_UpdateCurrentRecIDNo(GLED_TR, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
   
    Call objdba.closeRecordset(adoRs)
    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    s_SetupDataCells         ''|fffd|f|fffd|[|fffd|^|fffd|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetDetailDataCells     ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||752||fffd|
    
    Erase typAryTRBookData
    
    ThisWorkbook.Activate
    sg_SetScreenUpdate True
    
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    
    MsgBox c_strMSG_PP_QUESTR_COMP, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    
    CmdBtnTransfer.Enabled = False  ''|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Exit Sub
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    Erase typAryTRBookData
    CmdBtnTransfer.Visible = True
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False

    sg_SetScreenUpdate True
    MsgBox c_strMSG_FALSEUPDATE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED8]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If
    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If

    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    Target.Activate
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

Attribute VB_Name = "wsRemitRequest"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdSave, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "cmdShowTable, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdQuit, 3, 2, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd||fffd||fffd||343|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/14 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnDirty As Boolean           ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_blnNewData As Boolean         ''|fffd|V|fffd||fffd||fffd||fffd|REQUESTDATA|fffd|t|fffd||fffd||fffd|O
Private m_blnPast As Boolean            ''|fffd||fffd||fffd||fffd||fffd||3c2||fffd|PASTDATA|fffd|t|fffd||fffd||fffd|O
Private m_blnReceipt As Boolean         ''|fffd||fffd||fffd||fffd||fffd||3c2||fffd|PASTDATA|fffd|t|fffd||fffd||fffd|O
Private m_blnUpDate As Boolean          ''UpDate|fffd|t|fffd||fffd||fffd|O
Private m_blnShowTable As Boolean       ''ShowTable|fffd|t|fffd||fffd||fffd|O
Private m_intLCodeCount As Integer      ''LedgerLinkCode|fffd||fffd|
Private m_strNewCode As String          ''|fffd|V|fffd|KLedgerLinkCode
Private m_strEditCode As String         ''Edit|fffd||fffd||fffd||fffd|LedgerLinkCode
Private m_lngPastRemitRow As Long       ''PastRemittance|fffd||30d|s|fffd||fffd|
Private m_intReSetUp As Integer         ''PastRemittanceData|fffd||30d||110||752||839e||fffd|g|fffd|p(0:|fffd||110||752||85b3||fffd||fffd| 1:|fffd||110||752||fffd|(NEW) 2:|fffd||110||752||fffd|(PAST))
Private m_blnSetUp As Boolean           ''SETUP|fffd|t|fffd||fffd||fffd|O
Private m_blnWSChangeEscape As Boolean  ''WorkSheetChange|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 60 ''PastRemittance|fffd||151||fffd|s|fffd||fffd||fffd||fffd||fffd|l

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean

    ''SETUP|fffd|t|fffd||fffd||fffd|O,WorkSheetChange|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_blnSetUp = False
    
    ''Replace sho 2003/07/26
    m_blnWSChangeEscape = True
    
    ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnDirty = False
    
    ''|fffd|X|fffd|V|fffd||fffd||fffd||90||752||fffd|
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        cmdSave.Enabled = g_blnLedgerModify
    Else
        cmdSave.Enabled = False
    End If
'    cmdSave.Enabled = g_blnLedgerModify
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    cmdShowTable.Enabled = False
    
    ''PAST REMITTANCE DATA|fffd||110||752||fffd|t|fffd||fffd||fffd|O|fffd||24f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||fffd|
    m_intReSetUp = 0
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''BackBook|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False Then
        MsgBox c_strMSG_MASTER_BBOOK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If

    Unprotect Password:=c_strSheetPWD    ''|fffd|V|fffd|[|fffd|g|fffd||315||6cc||fffd||fffd||fffd||fffd||fffd||fffd|
    
    sg_SetScreenUpdate False
    
    If m_lngPastRemitRow = 0 Then m_lngPastRemitRow = mc_lngMAX_ROWINDEX
    
    s_Setup_AccountData                     ''ACCOUNT DATA |fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupValidationCells                  ''|fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_Setup_BalanceData                     ''BalanceData|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v

    ''REQUEST DATA |fffd|E PAST REMITTANCE DATA|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_Setup_PastRemitData
    
    ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    
    g_blnArySetupSheet(GLED_RF) = True      ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_RF) = False    ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    fw_SetupSheet = True
    
    sg_SetScreenUpdate True
    
    ''SETUP|fffd|t|fffd||fffd||fffd|O|fffd||fffd|TRUE|fffd||242||fffd||fffd||fffd|
    m_blnSetUp = True

    ''Add sho 2003/07/26
    m_blnWSChangeEscape = False

End Function


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|O|fffd||fffd||fffd|c|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<clsDBAccess |fffd|^> DB|fffd|A|fffd|N|fffd|Z|fffd|X|fffd|N|fffd||fffd||fffd|X
'   (2)<ADODB.Connection |fffd|^> |fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'   (3)<String |fffd|^> LedgerCode
'   (4)<Currency |fffd|^> |fffd|c|fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|LedgerCode / |fffd||38f||6cc||fffd||fffd|i|fffd||311|O|fffd||fffd||fffd|j|fffd||30e|c|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   <Boolean |fffd|^>|fffd|@|fffd||fffd||fffd||fffd|:True ,|fffd|G|fffd||fffd||fffd|[:False
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/12/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2005/05/27 : Knowlbo Suzuki : |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd|Q|fffd|{|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||251||389||fffd|
'   2013/02/28 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'   2013/07/24 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|(|fffd|o|fffd|O|fffd|C|fffd||fffd|)
'-----------------------------------------------------------------
Private Function f_GetLastBalance( _
    ByRef objdba As clsDBAccess, _
    ByRef adoCn As ADODB.Connection, _
    ByRef strCode As String, _
    ByRef curRetBalance _
) As Boolean

    Dim strSQL As String
    Dim adoRs As ADODB.Recordset
    Dim strMSG As String
    Dim curBalance As Currency
    Dim datTgtSt As Date
    Dim nTargetYear As Integer
    
    curRetBalance = 0

    strMSG = "DBSelectProcError"
    Set adoRs = New ADODB.Recordset
    
On Error GoTo LBL_ERR

    ''|fffd||150|V|fffd|N|fffd|x|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||94|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||141|A|fffd|N|fffd|xDB|fffd||30c||fffd||fffd||fffd||34a|m|fffd||fffd||fffd||42a42||74fe||fffd||fffd|
    ''<<<2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd||364||fffd|O|fffd|N|fffd|x|fffd||fffd||fffd||fffd|
    nTargetYear = g_intTargetSysYear
    If g_datImportMonth <> 0 Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
        nTargetYear = fg_GetFiscalYear(g_datImportMonth)
    End If
    
    ''<<<2013.07.24 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|(|fffd|o|fffd|O|fffd|C|fffd||fffd|)
    datTgtSt = fg_GetEndOfYear(nTargetYear - 1)
'    datTgtSt = fg_GetEndOfYear(nTargetYear)
    ''>>>2013.07.24 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|(|fffd|o|fffd|O|fffd|C|fffd||fffd|)
    
'    nTargetYear = g_intTargetSysYear
'    If g_datImportMonth <> 0 Then  ''|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
'
'        nTargetYear = Year(g_datImportMonth)
'        If Month(g_datImportMonth) < 4 Then
'            If g_intAryYear(UBound(g_intAryYear)) < nTargetYear Then
'                nTargetYear = nTargetYear - 1
'            End If
'        End If
'    End If
'
'    datTgtSt = DateValue(CStr(nTargetYear) & "/03/31")
    ''>>>2013.02.28 Add By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''LastBalance|fffd||30e||64fe|
    strSQL = "SELECT " & "Sum(" & "tb.Balance) AS Balance"
    strSQL = strSQL & " FROM " & c_NKFAOwner & "." & c_strTBL_AcBalance & " tb"
    strSQL = strSQL & " WHERE " & "tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod >= " & fg_AddSingleQuotation(datTgtSt)
    strSQL = strSQL & " AND " & "tb.LedgerCode = " & fg_AddSingleQuotation(strCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_AcBalance
        GoTo LBL_ERR
    End If
    If Not adoRs.EOF Then
        If Not IsNull(adoRs.Fields("Balance").Value) Then
            curBalance = adoRs.Fields("Balance").Value
        End If
    End If

    On Error GoTo 0
    
    curRetBalance = curBalance
    f_GetLastBalance = True

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Set adoRs = Nothing
    Exit Function
   
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "f_GetLastBalance:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, vbError)
    sg_MsgBoxError "f_GetLastBalance", strMSG
    f_GetLastBalance = False
    GoTo LBL_END

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Balance Data|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Balance Data|fffd|i|fffd||289||756||fffd||fffd||30e|c|fffd||fffd||fffd|j|fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/12/21 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_Setup_BalanceData()
    Dim nIxAry As Integer
    Dim nIx, nIxt As Integer
    Dim IsExist As Boolean
    Dim blRet As Boolean
    Dim strAryBrCur(4) As String
    Dim curAryBrCB(4) As Currency
    Dim curAryBrBB(4) As Currency
    
    Dim adoCn As ADODB.Connection
    Dim objdba As clsDBAccess
    Dim curBalance As Currency
    Dim strMSG As String
    Dim lngRow As Long
    
    ''UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||289||742||fffd|z|fffd||fffd||64ea||fffd||254|z|fffd|u
    nIxAry = -1
    For nIx = 0 To UBound(g_typAryBBInfo)
        If (g_typAryBBInfo(nIx).m_blnUseRemittance = True) Then
            nIxAry = nIx
            Exit For
        End If
    Next

    If (nIxAry >= 0) Then
        strAryBrCur(0) = g_typAryBBInfo(nIxAry).m_strCurrency
        nIxAry = 1
    Else
        nIxAry = 0
    End If

    ''BankBook|fffd|g|fffd|p|fffd||289||74e||fffd||fffd|W
    For nIx = 0 To UBound(g_typAryBBInfo)
        If (g_typAryBBInfo(nIx).m_intPurpose = 0) Then
            IsExist = False
            For nIxt = 0 To 4
                If (strAryBrCur(nIxt) = g_typAryBBInfo(nIx).m_strCurrency) Then
                    IsExist = True
                    Exit For
                End If
            Next
            If (IsExist = False) Then
                If (nIxAry > 4) Then Exit For
                strAryBrCur(nIxAry) = g_typAryBBInfo(nIx).m_strCurrency
                nIxAry = nIxAry + 1
            End If
        End If
    Next
    
    ''CashBook|fffd|g|fffd|p|fffd||289||74e||fffd||fffd|W
    If fg_IsSetCommonInfo(GCMN_CB) = True Then
       For nIx = 0 To UBound(g_typAryCBInfo)
           If (g_typAryCBInfo(nIx).m_intPurpose = 0) Then
               IsExist = False
               For nIxt = 0 To 4
                   If (strAryBrCur(nIxt) = g_typAryCBInfo(nIx).m_strCurrency) Then
                       IsExist = True
                       Exit For
                   End If
               Next
               If (IsExist = False) Then
                If (nIxAry > 4) Then Exit For
                   strAryBrCur(nIxAry) = g_typAryCBInfo(nIx).m_strCurrency
                   nIxAry = nIxAry + 1
               End If
           End If
       Next
    End If

    ''DB|fffd||691||fffd|
    strMSG = "DBSelectProcError"
    Set adoCn = New ADODB.Connection
    Set objdba = New clsDBAccess
    objdba.CallPlace = ID_NKFAS_SS
    objdba.ServerName = c_strServerName
    objdba.DBName = c_strDBName
    objdba.UserID = c_strUserID
    objdba.Password = c_strPassword
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
 
    ''BankBook|fffd|c|fffd||fffd||fffd||64fe|
    For nIxAry = 0 To 4
        If (strAryBrCur(nIxAry) <> "") Then
            For nIx = 0 To UBound(g_typAryBBInfo)
                If (g_typAryBBInfo(nIx).m_intPurpose = 0 And _
                    g_typAryBBInfo(nIx).m_strCurrency = strAryBrCur(nIxAry)) Then
                    blRet = f_GetLastBalance(objdba, adoCn, g_typAryBBInfo(nIx).m_strCode, curBalance)
                    If (blRet = False) Then GoTo LBL_ERR
                    curAryBrBB(nIxAry) = curAryBrBB(nIxAry) + curBalance
                End If
            Next
        End If
    Next

    ''CashBook|fffd|c|fffd||fffd||fffd||64fe|
    If fg_IsSetCommonInfo(GCMN_CB) = True Then
        For nIxAry = 0 To 4
            If (strAryBrCur(nIxAry) <> "") Then
                For nIx = 0 To UBound(g_typAryCBInfo)
                    If (g_typAryCBInfo(nIx).m_intPurpose = 0 And _
                        g_typAryCBInfo(nIx).m_strCurrency = strAryBrCur(nIxAry)) Then
                        blRet = f_GetLastBalance(objdba, adoCn, g_typAryCBInfo(nIx).m_strCode, curBalance)
                        If (blRet = False) Then GoTo LBL_ERR
                        curAryBrCB(nIxAry) = curAryBrCB(nIxAry) + curBalance
                    End If
                Next
            End If
        Next
    End If

    On Error GoTo 0
    lngRow = 20
    For nIxAry = 0 To 4
        If (strAryBrCur(nIxAry) <> "") Then
            Cells(lngRow + nIxAry, 3).Value = strAryBrCur(nIxAry)
            Cells(lngRow + nIxAry, 6).Value = curAryBrCB(nIxAry)
            Cells(lngRow + nIxAry, 8).Value = curAryBrBB(nIxAry)
            Cells(lngRow + nIxAry, 10).Value = curAryBrCB(nIxAry) + curAryBrBB(nIxAry)
        End If
    Next
 
LBL_END:
    Call objdba.closeADOConnection(adoCn)
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
   
LBL_ERR:
    GoTo LBL_END
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   ACCOUNT DATA|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)ACCOUNT DATA|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/14 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_Setup_AccountData()

    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim intBBIndex As Integer   ''UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd|BankBook|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    
    ''Project Code
    Cells(4, 6).Value = g_typAryPJTInfo(0).m_strPJTCode
    ''Project Name
    Cells(5, 6).Value = g_typAryPJTInfo(0).m_strPJTName
    ''UseRemittance|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd|BANKBOOK|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe|
    For intCount = 0 To UBound(g_typAryBBInfo)
        If (g_typAryBBInfo(intCount).m_blnUseRemittance = True) Then
            intBBIndex = intCount
        End If
    Next
    ''BankName,Branch
    Cells(6, 6).NumberFormat = "@"
    Cells(6, 6).Value = g_typAryBBInfo(intBBIndex).m_strName _
            & Space$(1) & "," & Space$(1) & g_typAryBBInfo(intBBIndex).m_strBranch
    ''Bank(Branch)Address
    Cells(7, 6).NumberFormat = "@"
    Cells(7, 6).Value = g_typAryBBInfo(intBBIndex).m_strAdress
    ''Beneficiary's Name
    Cells(8, 6).NumberFormat = "@"
    Cells(8, 6).Value = g_typAryBBInfo(intBBIndex).m_strBeneficiaryName
    ''A/C No
    Cells(9, 6).NumberFormat = "@"
    Cells(9, 6).Value = g_typAryBBInfo(intBBIndex).m_strAccountNo
    ''Signer
    Cells(10, 6).NumberFormat = "@"
    Cells(10, 6).Value = g_typAryBBInfo(intBBIndex).m_strSigner
    ''Currency
    Cells(11, 6).Value = g_typAryBBInfo(intBBIndex).m_strCurrency
    
    ''|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_blnShowTable = False
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||683|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v(REQUEST DATA|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||683|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/05 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupValidationCells()

    Dim strCurrncy As String    ''|fffd||289||743|R|fffd||fffd||fffd|{|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strRequestTo As String  ''RemittanceRequestTo|fffd|R|fffd||fffd||fffd|{|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    
    'Request Date
    Range("F15").NumberFormat = c_strFORMAT_DATE
    sg_SetupValidation Range("F15").Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    
    'Amount-Currency |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    If (Cells(11, 6).Value = "JPY") Or (Cells(11, 6).Value = "USD") Then
        strCurrncy = "JPY,USD"
    Else
        strCurrncy = Cells(11, 6).Value & ",JPY,USD"
    End If
    sg_SetupValidation Range("F16").Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, strCurrncy, Null

    ''Remittance Request to|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    strRequestTo = g_typAryRTInfo(0).m_strRequestTo1 & "," & _
                   g_typAryRTInfo(0).m_strRequestTo2 & "," & _
                   g_typAryRTInfo(0).m_strRequestTo3
    sg_SetupValidation Range("F17").Validation, c_strMSG_REQESTTO, _
        xlValidateList, xlValidAlertStop, xlBetween, strRequestTo, Null
    Range("F17").NumberFormat = "@"
        
    ''Remittance Advice to
    Cells(18, 6).Value = g_typAryRTInfo(0).m_strAdviceTo
    Range("F18").NumberFormat = "@"
    
    ''BalanceData|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
    Range("F20:J24").NumberFormat = g_strFORMAT_DECR_XX
    
    
    ''MainUse-Currency|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    sg_SetupValidation Range("E26:E33").Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, strCurrncy, Null
    
    ''AmountCells
    sg_SetupValidation Range("H16").Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    
    ''|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||255||3cd|X
    sg_SetupValidation Range("F26:F33").Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=-999999999999999", Null
    
    ''PAST DATE
    Range("D41:D60").NumberFormat = c_strFORMAT_DATE
    Range("H41:D60").NumberFormat = c_strFORMAT_DATE
    Range("H16").NumberFormat = g_strFORMAT_DECR_XX
    Range("F26:F33").NumberFormat = g_strFORMAT_DECR_XX
    Range("F41:F60").NumberFormat = g_strFORMAT_DECR_XX
    Range("J41:J60").NumberFormat = g_strFORMAT_DECR_XX
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   PAST REQUEST DATA|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)PAST REQUEST DATA|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/24 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'-----------------------------------------------------------------
Private Sub s_Setup_PastRemitData()

    Dim intPastRow As Integer   ''PAST REMITTANCE|fffd|p|fffd||30d|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim intItemCount As Integer ''|fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim intCount As Integer     ''|fffd||fffd||fffd|[|fffd|v|fffd|J|fffd|E|fffd||fffd||fffd|^
    Dim strRange As String      ''LedgerLinkCode|fffd|R|fffd||fffd||fffd|{|fffd||c42c||fffd|pRange
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    
    ''Add Sho 2003/07/26
    m_blnWSChangeEscape = True
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    ''PAST REMITTANCE DATA/LedgerLinkCode|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY LedgerLinkCode"
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    If (adoRs.EOF = True) Then     ''|fffd|f|fffd|[|fffd|^|fffd||fffd|1|fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||30f||fffd||fffd||fffd|
        ''LedgerLinkCode|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
        
        Cells(40, 30) = "NEW"
        strRange = "=$AD$40:$AD$40"
        sg_SetupValidation Range("F14").Validation, c_strMSG_SELECTLCODE, _
            xlValidateList, xlValidAlertStop, xlBetween, strRange, Null
        m_intLCodeCount = 40
        If m_lngPastRemitRow > mc_lngMAX_ROWINDEX Then
            Range("B60:J" & m_lngPastRemitRow - 1).Delete Shift:=xlUp
        End If
        ''Data|fffd|N|fffd||fffd||fffd|A
        Range("B41:J" & m_lngPastRemitRow).ClearContents
        
        m_lngPastRemitRow = mc_lngMAX_ROWINDEX
    Else    ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||a347|
        Do Until adoRs.EOF        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe|
            intItemCount = intItemCount + 1
            adoRs.MoveNext
        Loop
        adoRs.MoveFirst
        
        ''|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30d|s|fffd||fffd||fffd||193||fffd||fffd||fffd||fffd|A|fffd||702||fffd||fffd||343|I|fffd|[|fffd|o|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||70bb||fffd||315||fffd||fffd|A|fffd|s|fffd||fffd||1c9||fffd|
        If intItemCount >= 20 Then
            If (m_intReSetUp = 0) Then
                
                ''Add Sho 2003/07/26 |fffd||7cb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||fffd||fffd||fffd||302||14d|s|fffd||d3dc||fffd||fffd| |fffd|N|fffd||fffd||fffd|A|fffd||1c9||fffd|
                If m_lngPastRemitRow > mc_lngMAX_ROWINDEX Then
                    Range("B60:J" & m_lngPastRemitRow - 1).Delete Shift:=xlUp
                End If
                
                For intCount = 0 To intItemCount - 20
                    Range("B53:J53").Copy
                    Range("B53:J53").Insert Shift:=xlDown
                Next
                m_lngPastRemitRow = mc_lngMAX_ROWINDEX + intCount
            ElseIf (m_intReSetUp = 1) Then
                Range("B53:J53").Copy
                Range("B53:J53").Insert Shift:=xlDown
                m_lngPastRemitRow = m_lngPastRemitRow + 1
            End If
        Else
            ''Add Sho 2003/07/26 |fffd||7cb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||fffd||fffd||fffd||302||14d|s|fffd||d3dc||fffd||fffd| |fffd|N|fffd||fffd||fffd|A|fffd||1c9||fffd|
            If m_lngPastRemitRow > mc_lngMAX_ROWINDEX Then
                Range("B60:J" & m_lngPastRemitRow - 1).Delete Shift:=xlUp
            End If
            m_lngPastRemitRow = mc_lngMAX_ROWINDEX
        End If
        
        ''Data|fffd|N|fffd||fffd||fffd|A
        Range("B41:J" & m_lngPastRemitRow).ClearContents
        
        ''PAST REMITTANCE|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||18b||fffd||fffd||fffd| LedgerLinkCode|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
        Cells(40, 30) = "NEW"
    
        intPastRow = 41
        Do Until adoRs.EOF
            Cells(intPastRow, 2).Value = adoRs.Fields("LedgerLinkCode").Value
            ''LedgerLinkCode|fffd|R|fffd||fffd||fffd|{|fffd||c42c||fffd|p
            If (m_intReSetUp = 0) Or (m_intReSetUp = 1) Then
                Cells(intPastRow, 30).Value = adoRs.Fields("LedgerLinkCode").Value
            End If
            Cells(intPastRow, 4).Value = adoRs.Fields("RequestDate").Value
            Cells(intPastRow, 5).Value = adoRs.Fields("RequestCurrency").Value
            Cells(intPastRow, 6).Value = adoRs.Fields("RequestAmount").Value
            If Not IsNull(adoRs.Fields("ReceiptDate").Value) Then
                Cells(intPastRow, 8).Value = adoRs.Fields("ReceiptDate").Value
            End If
            If Not IsNull(adoRs.Fields("ReceiptCurrency").Value) Then
                Cells(intPastRow, 9).Value = adoRs.Fields("ReceiptCurrency").Value
            End If
            If Not IsNull(adoRs.Fields("ReceiptAmount").Value) And _
                adoRs.Fields("ReceiptAmount").Value <> 0 Then
                Cells(intPastRow, 10).Value = adoRs.Fields("ReceiptAmount").Value
            End If
            adoRs.MoveNext
            intPastRow = intPastRow + 1
        Loop
    
        ''|fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LedgerLinkCode|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||250||752||fffd|
        If (m_intReSetUp = 0) Then
            m_intLCodeCount = intPastRow - 1
            strRange = "=$AD$40:$AD$" & intPastRow - 1
            sg_SetupValidation Range("F14").Validation, c_strMSG_SELECTLCODE, _
                xlValidateList, xlValidAlertStop, xlBetween, strRange, Null
            Columns("AD:AD").EntireColumn.Hidden = True
        End If
    End If
    
    On Error GoTo 0
    
    ''|fffd||3cd|X|fffd||94|\|fffd||348||342||fffd||fffd|w|fffd||fffd|(|fffd||14f||fffd||fffd||fffd|LedgerLinkCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|)
    Range("F14:J17,C26:J36").Locked = False
    ''|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|I|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||752||fffd|
    Range("F14:J14").Activate

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    
    ''Add Sho 2003/07/26
    m_blnWSChangeEscape = False
    
    Exit Sub
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_Setup_PastRemitData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_Setup_PastRemitData", strMSG
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/29 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub cmdQuit_Click()

    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    
    ''|fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||242||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|Change|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
    m_blnWSChangeEscape = True
    
    ''REQUEST DATA|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Range("F14:J17,C26:J36").ClearContents
    
    ''|fffd||3d0||fffd||fffd|A|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_strNewCode = ""
    m_strEditCode = ""
    m_blnDirty = False
    m_blnNewData = False
    m_blnPast = False
    m_blnReceipt = False
    m_blnWSChangeEscape = False
    
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(8) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SAVE|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd||2d7||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/15 : Knowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 : Knowlbo Suzuki : |fffd||690|A
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace, ProofDate|fffd||1c9||fffd|
'   2004/02/27 : Knowlbo Suzuki : Comment|fffd||30d|X|fffd|V
'   2005/09/30 : Knowlbo Suzuki : MAINUSE|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd|C|fffd||fffd|
'-----------------------------------------------------------------
Private Sub cmdSave_Click()
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim strData As String
    Dim datValue As Date
    Dim blnUpdate As Boolean
    Dim intRow As Integer           ''|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strRange As String          ''|fffd|Z|fffd||fffd||fffd||348||fffd|
    Dim strBeginLCode As String     ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|pLedgerLinkCode
    Dim datPrNow As Date
    Dim strComment As String
    
    strComment = ""

    datPrNow = Now()
    ''UpDate|fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|(UpDate|fffd||fffd||fffd||fffd||fffd||fffd||fffd||14c||fffd||702||142||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd||fffd||fffd|True|fffd||242||fffd||fffd||fffd|)
    m_blnUpDate = False
    
    ''|fffd||fffd||fffd||fffd||fffd||3c2||742||fffd|Remittance|fffd||24a||582||fffd||fffd||102||343|A|fffd|b|fffd|v|fffd|f|fffd|[|fffd|g|fffd||142||fffd||fffd||202||fffd|
    If (m_blnReceipt = True) Then ''|fffd||fffd||fffd||fffd||fffd||3c2||743|f|fffd|[|fffd|^|fffd||30f||a347|
        MsgBox c_strMSG_NOUPDATE, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Sub
    ElseIf (m_blnDirty = False) Then    ''|fffd||1c9||fffd||fffd|E|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        MsgBox c_strMSG_NOEDIT, vbOKOnly + vbCritical, c_strNAME_SYSTEM
        Exit Sub
    End If
        
' 1.|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    ''LedgerLinkCode
    If (fg_InputCheck(Cells(14, 6).Value, "LedgerLinkCode", 0) = True) Then
        Cells(14, 6).Activate
        Exit Sub
    End If
    ''Request Date
    If (fg_InputCheck(Cells(15, 6).Value, "Request Date", 2) = True) Then
        Cells(15, 6).Activate
        Exit Sub
    End If
    ''Currency
    If (fg_InputCheck(Cells(16, 6).Value, "Currency", 0) = True) Then
        Cells(16, 6).Activate
        Exit Sub
    End If
    ''AMOUNT
    If (fg_InputCheck(Cells(16, 8).Value, "Amount", 1) = True) Then
        Cells(16, 8).Activate
        Exit Sub
    End If
    ''Remittance Request to
    If (fg_InputCheck(Cells(17, 6).Value, "Remittance Request to", 0) = True) Then
        Cells(17, 6).Activate
        Exit Sub
    End If
    
    ''MAINUSE|fffd||fffd||fffd||fffd||fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    For intRow = 26 To 33
        ''ITEM|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||fffd|CURRENCY|fffd|EAMOUNT|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
        If (Cells(intRow, 3).Value <> "") Then
            If (fg_InputCheck(Cells(intRow, 5).Value, "Currency", 0) = True) Then
                Cells(intRow, 5).Activate
                Exit Sub
            End If
            If (fg_InputCheck(Cells(intRow, 6).Value, "Amount", 1) = True) Then
                Cells(intRow, 6).Activate
                Exit Sub
            End If
        End If
        ''CURRENCY|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||fffd|ITEM|fffd|EAMOUNT|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
        If (Cells(intRow, 5).Value <> "") Then
            If (fg_InputCheck(Cells(intRow, 3).Value, "Item", 0, 64) = True) Then
                Cells(intRow, 3).Activate
                Exit Sub
            End If
            If (fg_InputCheck(Cells(intRow, 6).Value, "Amount", 1) = True) Then
                Cells(intRow, 6).Activate
                Exit Sub
            End If
        End If
        ''AMOUNT|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||fffd|ITEM|fffd|ECURRENCY|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
        If (Cells(intRow, 6).Value <> "") Then
            If (fg_InputCheck(Cells(intRow, 3).Value, "Item", 0, 64) = True) Then
                Cells(intRow, 3).Activate
                Exit Sub
            End If
            If (fg_InputCheck(Cells(intRow, 5).Value, "Currency", 0) = True) Then
                Cells(intRow, 5).Activate
                Exit Sub
            End If
        End If
        ''REMARKS|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||fffd|ITEM|fffd|ECURRENCY|fffd|EAMOUNT|fffd||313||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
        If (Cells(intRow, 8).Value <> "") Then
            If (fg_InputCheck(Cells(intRow, 3).Value, "Item", 0, 64) = True) Then
                Cells(intRow, 3).Activate
                Exit Sub
            End If
            If (fg_InputCheck(Cells(intRow, 5).Value, "Currency", 0) = True) Then
                Cells(intRow, 5).Activate
                Exit Sub
            End If
            If (fg_InputCheck(Cells(intRow, 6).Value, "Amount", 1) = True) Then
                Cells(intRow, 6).Activate
                Exit Sub
            End If
            If (fg_InputCheck(Cells(intRow, 8).Value, "Remarks", 3, 64) = True) Then
                Cells(intRow, 8).Activate
                Exit Sub
            End If
        End If
    Next
    
    ''Comments
    If (fg_InputCheck(Cells(34, 3).Value, "Comments", 3, 256) = True) Then
        Cells(34, 3).Activate
        Exit Sub
    End If
    
    
    ''|fffd|X|fffd|V|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If vbNo = MsgBox(c_strQUESTION_UPDATE, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        Exit Sub
    End If


    ''2.REQUEST DATA|fffd||fffd|Master|fffd||fffd|PastRemittanceData|fffd|V|fffd|[|fffd|g|fffd||252||1c9||fffd|
    sg_SetScreenUpdate False
    
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    
    adoRs.Filter = adFilterNone
    
    blnUpdate = False
    If (m_blnNewData = True) Then
        adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
        blnUpdate = True
    ElseIf (m_blnPast = True) Then
        ''EDIT|fffd||38f||6c3||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd|X|fffd|V|fffd|s|fffd||64fe|)
        adoRs.Filter = "LedgerLinkCode=" & fg_AddSingleQuotation(Cells(14, 6).Value)
        If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
            ''|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N
            If Not IsNull(adoRs.Fields("RequestDate").Value) Then
                datValue = DateValue(Cells(15, 6).Value)
                If datValue <> adoRs.Fields("RequestDate").Value Then blnUpdate = True
            End If
            If adoRs.Fields("RequestAmount").Value <> Cells(16, 8).Value Then blnUpdate = True
            If adoRs.Fields("RequestCurrency").Value <> Cells(16, 6).Value Then blnUpdate = True
            If adoRs.Fields("ContactPlace").Value <> Cells(17, 6).Value Then blnUpdate = True
            
            If Not IsNull(adoRs.Fields("Comment").Value) Then
                If Cells(34, 3).Value <> adoRs.Fields("Comment").Value Then blnUpdate = True
            Else
                If Cells(34, 3).Value <> "" Then blnUpdate = True
            End If
            If blnUpdate Then
                objdba.SQLString = fg_setPastRemittanceDataHistorySQLString(adoRs, datPrNow)
                If (objdba.ExecuteSQL(adoCn) <> 0) Then
                    strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_PastRemittance
                    GoTo LBL_ERR
                End If
            End If
        Else
            strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_PastRemittance
            GoTo LBL_ERR
        End If
    End If
    
    If blnUpdate Then
        adoRs.Fields("OfficeCode").Value = g_strOfficeCode              ''OfficeCode
        adoRs.Fields("LedgerLinkCode").Value = Cells(14, 6).Value       ''LedgerLinkCode
        datValue = DateValue(Cells(15, 6).Value)                        ''RequestDate
        adoRs.Fields("RequestDate").Value = datValue
        adoRs.Fields("RequestAmount").Value = Cells(16, 8).Value        ''RequestAmount
        adoRs.Fields("RequestCurrency").Value = Cells(16, 6).Value      ''RequestCurrency
        adoRs.Fields("ContactPlace").Value = Cells(17, 6).Value         ''ContactPlace
        If Cells(34, 3).Value <> "" Then                                ''Comment
            strData = CStr(Cells(34, 3).Value)
            If Left$(strData, 4) = c_strKwdModifyBR Or _
               Left$(strData, 4) = c_strKwdModifyNK Then
                strData = c_strKwdModifyNK & Mid$(strData, 5)
            Else
                strData = c_strKwdModifyNK & strData
            End If
            If Len(strData) > 256 Then strData = Left$(strData, 256)
            adoRs.Fields("Comment").Value = strData
            strComment = strData
        Else
            adoRs.Fields("Comment").Value = c_strKwdModifyNK
            strComment = c_strKwdModifyNK
        End If
        adoRs.Fields("ModifyPlace").Value = "1"                         ''ModifyPlace
        ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
        adoRs.Fields("InsertDate").Value = datPrNow
        adoRs.Fields("InsertUID").Value = g_strLoginId
        adoRs.Update
    End If
    Call objdba.closeRecordset(adoRs)
    

    ''3.MAINUSE|fffd||fffd||fffd||fffd||fffd||fffd|RequestData|fffd|V|fffd|[|fffd|g|fffd||252||1c9||fffd|
    If (m_blnPast = True) Then
        strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_RequestData & " tb"
        strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        strSQL = strSQL & " AND tb.LedgerLinkCode = " & fg_AddSingleQuotation(Cells(14, 6).Value)
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_RequestData
            GoTo LBL_ERR
        End If
        Do Until adoRs.EOF ''|fffd||fffd||fffd||fffd|}|fffd||fffd|
            objdba.SQLString = fg_setRequestDataHistorySQLString(adoRs, datPrNow)
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RequestData
                GoTo LBL_ERR
            End If
            adoRs.MoveNext
        Loop
        ''|fffd||38f||6c3|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc|(|fffd|{|fffd||fffd||fffd||34d||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd|.....|fffd||fffd|)
        strSQL = "DELETE FROM " & c_NKFAOwner & "." & c_strTBL_RequestData
        strSQL = strSQL & " WHERE OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        strSQL = strSQL & " AND LedgerLinkCode = " & fg_AddSingleQuotation(Cells(14, 6).Value)
        objdba.SQLString = strSQL
        If (objdba.ExecuteSQL(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_RequestData
            GoTo LBL_ERR
        End If
        Call objdba.closeRecordset(adoRs)
    End If

    ''|fffd||38f||6c3|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
    For intRow = 26 To 33
        If (Cells(intRow, 3).Value <> "") Then
            strSQL = fg_setRequestDataFieldsSQLString(c_strTBL_RequestData)
            strSQL = strSQL & "( "
            strSQL = strSQL & fg_AddSingleQuotation(g_strOfficeCode) & ", "         ''OfficeCode
            strSQL = strSQL & fg_AddSingleQuotation(Cells(14, 6).Value) & ", "      ''LedgerLinkCode
            If Cells(intRow, 3).Value <> "" Then                                    ''Item
                strSQL = strSQL & fg_AddSingleQuotation(Cells(intRow, 3).Value) & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
            strSQL = strSQL & fg_AddSingleQuotation(Cells(intRow, 5).Value) & ", "  ''Currency
            strSQL = strSQL & Cells(intRow, 6).Value & ", " ''Amount
            If Cells(intRow, 8).Value <> "" Then                                    ''Remarks
                strSQL = strSQL & fg_AddSingleQuotation(Cells(intRow, 8).Value) & ", "
            Else
                strSQL = strSQL & "Null, "
            End If
            strSQL = strSQL & fg_AddSingleQuotation("1") & ", "                     ''ModifyPlace
            ''Update|fffd||fffd||fffd||fffd|ProofDate|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
            strSQL = strSQL & "Null, "                                              ''ProofDate
            strSQL = strSQL & fg_AddSingleQuotation(datPrNow) & ", "                ''InsertDate
            strSQL = strSQL & "Null, "                                              ''DeleteDate
            strSQL = strSQL & fg_AddSingleQuotation(g_strLoginId) & ", "            ''InsertUID
            strSQL = strSQL & " Null) "                                             ''DeleteUID
            objdba.SQLString = strSQL
            If (objdba.ExecuteSQL(adoCn) <> 0) Then
                strMSG = c_strMSG_DB_Update & ":" & c_strTBL_RequestData
                GoTo LBL_ERR
            End If
        End If
    Next

    If m_blnNewData Then
        ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_RM, adoCn, objdba) = False Then GoTo LBL_ERR
    End If

    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)

    If strComment <> "" Then Cells(34, 3).Value = strComment

' 4. |fffd|g|fffd|p|fffd||fffd||fffd||fffd|No(LinkCode)|fffd||fffd||fffd|X|fffd|V(NEW|fffd||30f||a347||fffd||302||fffd|)
    If (m_blnNewData = True) Then
        
        ''|fffd|V|fffd|[|fffd|g|fffd||315||6cc||fffd||fffd||fffd||fffd||fffd||fffd|
        Unprotect Password:=c_strSheetPWD
        ''|fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||110||752||fffd|
        Columns("AD:AD").EntireColumn.Hidden = False
        m_intLCodeCount = m_intLCodeCount + 1
        Cells(m_intLCodeCount, 30).Value = Cells(14, 6).Value
        strRange = "=$AD$40:$AD$" & m_intLCodeCount
        sg_SetupValidation Range("F14").Validation, "", _
            xlValidateList, xlValidAlertStop, xlBetween, strRange, Null
        Columns("AD:AD").EntireColumn.Hidden = True
        
        ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    End If
    
    m_blnUpDate = True    ''UpDate|fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    
    ''LedgerLinkCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24e|g|fffd|p)
    strBeginLCode = Cells(14, 6).Value
    
    ''PastRemittanceData|fffd||30d||110||752||fffd|l|fffd||fffd||752||fffd|
    If (m_blnNewData = True) Then
        m_intReSetUp = 1
    ElseIf (m_blnPast = True) Then
        m_intReSetUp = 2
    End If
    
    ''PAST REMITTANCE DATA|fffd||110||752||fffd|
    Range("B41:J" & m_lngPastRemitRow).ClearContents
    s_Setup_PastRemitData
    
    
    ''ShowTable|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If (m_blnShowTable = False) Then
        ''|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        m_strNewCode = ""
        m_strEditCode = ""
        m_blnDirty = False
        ''|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        m_blnNewData = False
        m_blnPast = False
        m_blnReceipt = False
'        ''PAST REMITTANCE DATA|fffd||110||752||fffd|
'        Range("B41:J" & m_lngPastRemitRow).ClearContents
'        s_Setup_PastRemitData
        m_intReSetUp = 0
        ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerLinkCode|fffd||fffd||752||fffd|
        Cells(14, 6).Value = strBeginLCode
    End If
    
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM

LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    sg_SetScreenUpdate True
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED9]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/15 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2002/12/06 : Knowlbo Nakarai : DELETE|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    ''|fffd|V|fffd|[|fffd|g|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd|
    If (m_blnWSChangeEscape = True) Then
        Exit Sub
    End If
    ''|fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||a0bd||fffd||182||fffd||fffd||241|ALedgerLinkCode|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||202||fffd||fffd||a347||fffd||343|A|fffd||fffd||fffd|[|fffd|g
    If (m_blnSetUp = True) And (m_blnWSChangeEscape = False) Then
        If Not (Target.Row = 14 And Target.Column = 6) Then
            If (Cells(14, 6).Value = "") Then
                m_blnWSChangeEscape = True
                MsgBox c_strMSG_SELECTLCODE, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
                Cells(Target.Row, Target.Column).Value = ""
                Cells(14, 6).Activate
                m_blnWSChangeEscape = False
                Exit Sub
            End If
        End If
    End If

    If g_blnLedgerModify Then
        ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
        If g_blnWrite = True Then
            ''cmdShowTable|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd||602||fffd||582||fffd||fffd||fffd|
            If (Cells(14, 6).Value = "") Then
                cmdShowTable.Enabled = False
            ElseIf (Cells(14, 6).Value <> "") Then
                cmdShowTable.Enabled = True
            End If
        End If
        
'        ''cmdShowTable|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Enable|fffd||fffd||602||fffd||582||fffd||fffd||fffd|
'        If (Cells(14, 6).Value = "") Then
'            cmdShowTable.Enabled = False
'        ElseIf (Cells(14, 6).Value <> "") Then
'            cmdShowTable.Enabled = True
'        End If
        ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    End If
    
    ''PAST DATA|fffd||fffd||48f|W|fffd||fffd||fffd||fffd||fffd||a347|
    If (m_blnPast = True And m_blnReceipt = False) Then
        If Not (Target.Row = 14 And Target.Column = 6) Then
            ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
            m_blnDirty = True
        End If
    End If
    
    ''LedgerLinkCode|fffd||312|l|fffd||242||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
    If (Target.Row = 14 And Target.Column = 6) Then
        ''DELETE|fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||303|`|fffd|F|fffd|b|fffd|N
        If (IsEmpty(Cells(14, 6).Value) = False) Then
            If (UCase(Cells(14, 6).Value) = "NEW") Then    ''NEWDATA|fffd||30f||a347|
                ''PASTDATA|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||101|A|fffd||48f|W|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||a347||fffd||303|`|fffd|F|fffd|b|fffd|N
                If (m_blnPast = True And m_blnReceipt = False And m_blnDirty = True) Then
                    If MsgBox(c_strQUESTION_SAVE, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbCancel Then
                        Cells(14, 6).Value = m_strEditCode
                        Exit Sub
                    End If
                End If
                ''NEW REQUEST DATA|fffd||64fe|
                s_getRequestData UCase(Target.Value)
            Else
                ''NEWDATA|fffd|AEdit|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||308||4ca|O|fffd||30f||a347|
                If (Cells(14, 6).Value <> m_strNewCode Or Cells(14, 6).Value <> m_strEditCode) Then
                    If (m_blnDirty = True) Then
                        If MsgBox(c_strQUESTION_SAVE, vbOKCancel + vbExclamation, c_strNAME_SYSTEM) = vbCancel Then
                            If (m_blnNewData = True) Then
                                Cells(14, 6).Value = m_strNewCode
                            ElseIf (m_blnPast = True) Then
                                Cells(14, 6).Value = m_strEditCode
                            End If
                            Exit Sub
                        End If
                    End If
                    ''PAST REQUEST DATA|fffd||64fe|
                    s_getRequestData UCase(Target.Value)
                    ''|fffd||48f|W|fffd||fffd||fffd||fffd|LedgerLinkCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
                    m_strEditCode = Target.Value
                End If
            End If
        End If
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   REQUEST DATA|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> LedgerLinkCode
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)REQUEST DATA|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/25 : Knowlbo Nakarai|fffd|F|fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 : Knowlbo Suzuki : |fffd||690|A
'-----------------------------------------------------------------
Private Sub s_getRequestData(strCode As String)

    Dim intRow As Integer  ''|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String

    m_blnDirty = False
    
    ''Add Sho 2003/07/26
    m_blnWSChangeEscape = True
    
    If (strCode = "NEW") Then                       ''NEW REMITTANCE DATA|fffd||752||fffd|
        m_blnNewData = True                         ''|fffd||3cd|X|fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
        m_blnPast = False
        m_blnReceipt = False
        sg_GetCurrentLinkCodeNo GLNK_RM             ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLinkCodeNo|fffd||64fe|
        Range("F14:J17,C26:J36").Locked = False     ''|fffd||3cd|X|fffd||94|\|fffd||348||342||fffd||fffd|w|fffd||fffd|(REQUEST DATA|fffd||fffd||fffd||fffd|)
        m_strNewCode = fg_CreateLinkCode(GLNK_RM)   ''No(LedgerLinkCode)
        Cells(14, 6).Value = m_strNewCode
        Cells(15, 6).Value = Now                    ''RequestDate
        Range("F16:J17").Value = ""                 ''AMOUNT/Remittance Request to
        Range("C26:J36").Value = ""                 ''MAINUSE
        Range("C26").Value = "Income" '|fffd|V|fffd|K|fffd||30f||a347||fffd||341|A|fffd|uIncome|fffd|v|fffd|\|fffd||fffd|
        m_blnDirty = True                           ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
        m_blnWSChangeEscape = False
        Exit Sub
    End If
    
    
    If (strCode <> m_strNewCode) Then    ''PAST REMITTANCE DATA|fffd||752||fffd|
        strMSG = "DBSelectProcError"
        Call sg_setDBACondition(adoCn, adoRs, objdba)
        If (objdba.openADOConnection(adoCn) <> 0) Then
            strMSG = c_strMSG_DB_CONNECTFAIL
            GoTo LBL_ERR
        End If

On Error GoTo LBL_ERR
        
        strSQL = "SELECT " & "hd.LedgerLinkCode, " & "hd.RequestDate, "
        strSQL = strSQL & "hd.RequestCurrency, " & "hd.RequestAmount, "
        strSQL = strSQL & "hd.ContactPlace, " & "hd.Comment, "
        strSQL = strSQL & "hd.ReceiptDate, "
        strSQL = strSQL & "dt.Item, " & "dt.Currency, "
        strSQL = strSQL & "dt.Amount, " & "dt.Remarks "
        strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance
        strSQL = strSQL & " hd" & " LEFT JOIN "
        strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_RequestData & " dt" & " ON "
        strSQL = strSQL & "hd.LedgerLinkCode = " & "dt.LedgerLinkCode WHERE "
        strSQL = strSQL & "hd.LedgerLinkCode = " & fg_AddSingleQuotation(strCode)
        strSQL = strSQL & " AND hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
        strSQL = strSQL & " ORDER BY " & "hd.LedgerLinkCode"
        objdba.SQLString = strSQL
        If objdba.openRecordset(adoCn, adoRs) <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
            GoTo LBL_ERR
        End If
        
        If (adoRs.EOF = False) Then
            Cells(15, 6).Value = adoRs.Fields("RequestDate").Value      ''RequestDate
            Cells(16, 6).Value = adoRs.Fields("RequestCurrency").Value  ''RequestCurrency
            Cells(16, 8).Value = adoRs.Fields("RequestAmount").Value    ''RequestAmount
            Cells(17, 6).Value = adoRs.Fields("ContactPlace").Value     ''ContactPlace
            Range("C26:J36").Value = ""                                 ''MAINUSE|fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
            If Not IsNull(adoRs.Fields("Comment").Value) Then
                Cells(34, 3).Value = adoRs.Fields("Comment").Value      ''Comment
            End If
            
            intRow = 26
            ''Item/Currency/Amount/Remarks
            Do Until adoRs.EOF
                If (IsNull(adoRs.Fields("Item").Value) = False) Then
                    Cells(intRow, 3).Value = adoRs.Fields("Item").Value
                End If
                If (IsNull(adoRs.Fields("Currency").Value) = False) Then
                    Cells(intRow, 5).Value = adoRs.Fields("Currency").Value
                End If
                If (IsNull(adoRs.Fields("Amount").Value) = False) Then
                    Cells(intRow, 6).Value = adoRs.Fields("Amount").Value
                End If
                If (IsNull(adoRs.Fields("Remarks").Value) = False) Then
                    Cells(intRow, 8).Value = adoRs.Fields("Remarks").Value
                End If
                intRow = intRow + 1
                adoRs.MoveNext
            Loop
           
            adoRs.MoveFirst            ''|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd||fffd||64ea||fffd||256||7c2||fffd|
           
            ''|fffd||fffd||fffd||fffd||fffd||3c2||742||fffd||fffd||1c2||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd|t|fffd||fffd||fffd|O|fffd||fffd||752||fffd|
            If (IsNull(adoRs.Fields("ReceiptDate").Value) = False) Then
                m_blnReceipt = True
                m_blnPast = False
                m_blnNewData = False
                m_blnDirty = False
            Else
                m_blnReceipt = False
                m_blnPast = True
                m_blnNewData = False
                m_blnDirty = False
            End If
        End If
        
        ''|fffd||3cd|X|fffd||94|\|fffd||348||342||fffd||fffd|w|fffd||fffd|
        If (m_blnReceipt = True) Then ''|fffd||fffd||fffd||fffd||fffd||3c2||fffd|
            ''LedgerLinkCode|fffd||20a|O|fffd||3cd|X|fffd|s|fffd||fffd|
            Range("F15:J18,C26:J36").Locked = True
        Else                        ''|fffd||fffd||fffd||fffd||fffd||fffd|
            ''REQUEST DATA|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd||fffd|
            Range("F14:J17,C26:J36").Locked = False
        End If

        On Error GoTo 0
        
        Call objdba.closeRecordset(adoRs)
        Call objdba.closeADOConnection(adoCn)
    
        Set adoRs = Nothing
        Set adoCn = Nothing
        Set objdba = Nothing
    End If
    
    ''Add Sho 2003/07/26
    m_blnWSChangeEscape = False
    
    Exit Sub
    
LBL_ERR:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Call g_objLog.PrintOut(ID_NKFAS_SS, "s_getRequestData:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_getRequestData", strMSG
    
    ''Add Sho 2003/07/26
    m_blnWSChangeEscape = False
    Exit Sub
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SHOWTABLE|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)RemittanceRequest|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|APastRemittance|fffd||a5d7||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/26 : Knowlbo Nakarai : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/24 : Knowlbo Suzuki : |fffd||690|A
'-----------------------------------------------------------------
Private Sub cmdShowTable_Click()

    Dim ExcelObj As Application
    Dim wsTgtSheet As Worksheet     ''|fffd||a5d7||fffd|p|fffd||303|V|fffd|[|fffd|g
    Dim intRow As Integer           ''|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim intFirstRow As Integer      ''|fffd|}|fffd|[|fffd|W|fffd||38f||fffd|First|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X(|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|p)
    Dim intLastRow As Integer       ''|fffd|}|fffd|[|fffd|W|fffd||38f||fffd|Last|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X(|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|p)
    Dim intSearchRow As Integer     ''|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X(|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|p)
    Dim strLCode As String          ''LedgerLinkCode(|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|p)
    Dim intItemCount As Integer     ''|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim strRange As String          ''|fffd|Z|fffd||fffd||fffd||348||fffd|
    Dim strFileName As String       ''SendFile|fffd||fffd|
    Dim strFindFile As String       ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
    Dim intFindCount As Integer     ''|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
    Dim blnFindFile As Boolean      ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim strBeginLCode As String     ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|pLedgerLinkCode
    Dim strCurDir As String
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String

' =============================================
' 1.Sheet|fffd||c42c||fffd||302||fffd||fffd||7c2||303|`|fffd|F|fffd|b|fffd|N
' 2.BOOK|fffd||c42c|
' 3.RemittanceRequest|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||c42c|
' 4.PastRemittance|fffd||a5d7||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||c42c|
' 5.|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||752||80b5||fffd|A|fffd||6d1||fffd|
' 6.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' =============================================
    
' 1.Sheet|fffd||c42c||fffd||302||fffd||fffd||7c2||303|`|fffd|F|fffd|b|fffd|N-------------------------------
    m_blnShowTable = True    ''ShowTable|fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    
    If (m_blnDirty = True) Then         ''|fffd||48f|W|fffd||fffd||fffd||30f||a347|
        If g_blnLedgerModify Then
            cmdSave_Click   ''Save|fffd||fffd||fffd||fffd||fffd||fffd|
        End If
        If (m_blnUpDate = False) Then   ''Save|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||a347|
            'MsgBox c_strMSG_FALSEUPDATE, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            Exit Sub
        End If
    ElseIf (m_blnDirty = False) Then    ''|fffd||48f|W|fffd||fffd||fffd||142||342||202||fffd||fffd||a347|
        If (m_blnReceipt = True) Then   ''|fffd||fffd||fffd||fffd||fffd||3c2||742||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||14c82||fffd||fffd||fffd|
            MsgBox c_strMSG_NORECEIVED, vbOKOnly + vbCritical, c_strNAME_SYSTEM
            Exit Sub
        End If
    End If
    strBeginLCode = Cells(14, 6).Value    ''LedgerLinkCode|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|p)
    

' 2.|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||c42c|------------------------------------------
    Set ExcelObj = CreateObject("Excel.Application")
    ExcelObj.Application.SheetsInNewWorkbook = 2
    sg_SetScreenUpdate False    ''|fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    ExcelObj.Workbooks.Add      ''|fffd|V|fffd||fffd||fffd||fffd|BOOK|fffd||fffd||fffd||c42c|
    Set wsTgtSheet = ExcelObj.ActiveWorkbook.Worksheets("Sheet1")
    ExcelObj.ActiveWindow.Zoom = 75
    
' 3.Remittance Request(Sheet1)|fffd||c42c|-------------------------
    Set wsTgtSheet = ExcelObj.ActiveWorkbook.Worksheets("Sheet1")
    
    ''|fffd||55742||fffd||752||fffd|
    wsTgtSheet.Columns("A:A").ColumnWidth = 5
    wsTgtSheet.Columns("B:B").ColumnWidth = 17.5
    wsTgtSheet.Columns("C:C").ColumnWidth = 4
    wsTgtSheet.Columns("D:D").ColumnWidth = 11.13
    wsTgtSheet.Columns("E:E").ColumnWidth = 5
    wsTgtSheet.Columns("F:F").ColumnWidth = 4.5
    wsTgtSheet.Columns("G:G").ColumnWidth = 10
    wsTgtSheet.Columns("H:H").ColumnWidth = 11.75
    wsTgtSheet.Columns("I:I").ColumnWidth = 5
    wsTgtSheet.Columns("J:J").ColumnWidth = 15
    
    ''|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||c42c|
    wsTgtSheet.Range("B1").Value = "REMITTANCE REQUEST" & "(" & Format$(Now, "yyyy/mm/dd") & ")"
    wsTgtSheet.Range("B1:G1").Merge
    wsTgtSheet.Range("B1:G1").HorizontalAlignment = xlCenter
    wsTgtSheet.Range("B1:G1").Font.Bold = True
    wsTgtSheet.Range("B1:G1").Font.Name = "Times New Roman"
    wsTgtSheet.Range("B1:G1").Characters.Font.Size = 18
    
    ''Master|fffd||fffd||fffd||fffd|V|fffd||fffd||fffd||fffd|Book|fffd||243|R|fffd|s|fffd|[
    ''Replace Sho 2003/07/26 m_lngPastRemitRow
    'wsRemitRequest.Range("B3:J54").Copy
    wsRemitRequest.Range("B3:J" & m_lngPastRemitRow).Copy
    
    wsTgtSheet.Paste Destination:=wsTgtSheet.Range("B3")
    
' 4.Remittance Table(Sheet2)|fffd||c42c|---------------------------
    Set wsTgtSheet = ExcelObj.ActiveWorkbook.Worksheets("Sheet2")
    ''|fffd|\|fffd||fffd||fffd|T|fffd|C|fffd|Y|fffd||fffd||752||80b7||fffd||fffd|
    ExcelObj.ActiveWindow.Zoom = 75

    ''|fffd||55742||fffd||752||fffd|
    wsTgtSheet.Columns("A:A").ColumnWidth = 2.5
    wsTgtSheet.Columns("B:B").ColumnWidth = 17
    wsTgtSheet.Columns("C:C").ColumnWidth = 11
    wsTgtSheet.Columns("D:D").ColumnWidth = 4
    wsTgtSheet.Columns("E:E").ColumnWidth = 15
    wsTgtSheet.Columns("F:F").ColumnWidth = 21
    wsTgtSheet.Columns("G:G").ColumnWidth = 11
    wsTgtSheet.Columns("H:H").ColumnWidth = 4
    wsTgtSheet.Columns("I:I").ColumnWidth = 15
    wsTgtSheet.Columns("J:J").ColumnWidth = 25
    wsTgtSheet.Columns("K:K").ColumnWidth = 25
    wsTgtSheet.Columns("L:L").ColumnWidth = 11
    wsTgtSheet.Columns("M:M").ColumnWidth = 4
    wsTgtSheet.Columns("N:N").ColumnWidth = 15

    ''|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||c42c|
    wsTgtSheet.Range("B1").Value = "REMITTANCE REQUEST TABLE" & Space$(9) & Format$(Now, c_strFORMAT_DATE)
    wsTgtSheet.Range("B1:F1").Merge
    wsTgtSheet.Range("B1:F1").HorizontalAlignment = xlCenter
    wsTgtSheet.Range("B1:F1").Font.Bold = True

    ''|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||752||fffd|
    ''LedgerLinkCode
    wsTgtSheet.Range("B3").Value = "LedgerLinkCode"
    wsTgtSheet.Range("B3:B4").Merge
    ''Date
    wsTgtSheet.Range("C4").Value = "Date"
    ''Amount
    wsTgtSheet.Range("D4").Value = "Amount"
    wsTgtSheet.Range("D4:E4").Merge
    ''Remittance Request to
    wsTgtSheet.Range("F4").Value = "Remittance Request to"
    ''Item
    wsTgtSheet.Range("G4").Value = "Item"
    ''Amount
    wsTgtSheet.Range("H4").Value = "Amount"
    wsTgtSheet.Range("H4:I4").Merge
    ''Remarks
    wsTgtSheet.Range("J4").Value = "Remarks"
    ''Comments
    wsTgtSheet.Range("K4").Value = "Comments"
    ''Request|fffd||fffd||fffd|o|fffd||fffd|
    wsTgtSheet.Range("C3").Value = "Request"
    wsTgtSheet.Range("C3:K3").Merge
    ''Date
    wsTgtSheet.Range("L4").Value = "Date"
    ''Amount
    wsTgtSheet.Range("M4").Value = "Amount"
    wsTgtSheet.Range("M4:N4").Merge
    ''Receipt|fffd||fffd||fffd|o|fffd||fffd|
    wsTgtSheet.Range("L3").Value = "Receipt"
    wsTgtSheet.Range("L3:N3").Merge

    ''|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|Bold|fffd||242||fffd||fffd|A|fffd|J|fffd||fffd||fffd|[|fffd||fffd||752||fffd|
    wsTgtSheet.Range("B3:N4").Font.Bold = True
    wsTgtSheet.Range("B3:N4").Interior.ColorIndex = 34
    wsTgtSheet.Range("B3:N4").HorizontalAlignment = xlCenter

    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT " & "hd.LedgerLinkCode, " & "hd.RequestDate, "
    strSQL = strSQL & "hd.RequestCurrency, " & "hd.RequestAmount, "
    strSQL = strSQL & "hd.ContactPlace, " & "hd.Comment, "
    strSQL = strSQL & "hd.ReceiptDate, " & "hd.ReceiptCurrency, "
    strSQL = strSQL & "hd.ReceiptAmount, "
    strSQL = strSQL & "dt.Item, " & "dt.Currency, "
    strSQL = strSQL & "dt.Amount, " & "dt.Remarks "
    strSQL = strSQL & "FROM " & c_NKFAOwner & "." & c_strTBL_PastRemittance
    strSQL = strSQL & " hd" & " LEFT JOIN "
    strSQL = strSQL & c_NKFAOwner & "." & c_strTBL_RequestData & " dt" & " ON "
    strSQL = strSQL & "hd.LedgerLinkCode = " & "dt.LedgerLinkCode WHERE "
    strSQL = strSQL & " hd.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " ORDER BY " & "hd.LedgerLinkCode"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_PastRemittance
        GoTo LBL_ERR
    End If
    ''|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd||fffd||fffd||250||752||fffd|
    intRow = 5
    Do Until adoRs.EOF
        wsTgtSheet.Cells(intRow, 2).Value = adoRs.Fields("LedgerLinkCode").Value
        wsTgtSheet.Cells(intRow, 3).Value = adoRs.Fields("RequestDate").Value
        wsTgtSheet.Cells(intRow, 4).Value = adoRs.Fields("RequestCurrency").Value
        wsTgtSheet.Cells(intRow, 5).Value = adoRs.Fields("RequestAmount").Value
        wsTgtSheet.Cells(intRow, 6).Value = adoRs.Fields("ContactPlace").Value
        wsTgtSheet.Cells(intRow, 7).Value = adoRs.Fields("Item").Value
        wsTgtSheet.Cells(intRow, 8).Value = adoRs.Fields("Currency").Value
        wsTgtSheet.Cells(intRow, 9).Value = adoRs.Fields("Amount").Value
        If (IsNull(adoRs.Fields("Remarks").Value) = False) Then
            wsTgtSheet.Cells(intRow, 10).Value = adoRs.Fields("Remarks").Value
        End If
        If (IsNull(adoRs.Fields("Comment").Value) = False) Then
            wsTgtSheet.Cells(intRow, 11).Value = adoRs.Fields("Comment").Value
        End If
        If (IsNull(adoRs.Fields("ReceiptDate").Value) = False) Then
            wsTgtSheet.Cells(intRow, 12).Value = adoRs.Fields("ReceiptDate").Value
        End If
        If (IsNull(adoRs.Fields("ReceiptCurrency").Value) = False) Then
            wsTgtSheet.Cells(intRow, 13).Value = adoRs.Fields("ReceiptCurrency").Value
        End If
        If (IsNull(adoRs.Fields("ReceiptAmount").Value) = False) Then
            wsTgtSheet.Cells(intRow, 14).Value = adoRs.Fields("ReceiptAmount").Value
        End If
        adoRs.MoveNext
    Loop
    On Error GoTo 0

    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)

    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing

    ''|fffd||fffd||fffd||fffd|LedgerLinkCode|fffd||317||fffd||fffd||fffd|}|fffd|[|fffd|W|fffd||fffd||fffd||fffd|
    intItemCount = 0    ''|fffd|d|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||752||fffd|
    intSearchRow = 5    ''|fffd||fffd||fffd||fffd||fffd|p|fffd||317||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|l|fffd||752||fffd|
    strLCode = ""       ''|fffd||fffd|r|fffd|p|fffd||fffd|LedgerLinkCode
    intRow = 5
    Do Until wsTgtSheet.Cells(intSearchRow, 2).Value = ""
        ''|fffd|O|fffd||fffd|LedgerLinkCode|fffd||183|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd|LedgerLinkCode|fffd||fffd||fffd|r
        If (strLCode = wsTgtSheet.Cells(intSearchRow, 2).Value) Then
            ''|fffd|d|fffd||fffd||fffd||fffd||fffd||102||fffd|f|fffd|[|fffd|^|fffd||30c||90||fffd||fffd||fffd||fffd||64fe|
            intRow = intSearchRow - 1
            Do While wsTgtSheet.Cells(intRow, 2).Value = strLCode
                intItemCount = intItemCount + 1
                intRow = intRow + 1
            Loop
            ''|fffd|d|fffd||fffd||fffd||fffd||fffd||102||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|A
            strRange = "B" & intSearchRow & ":F" & intSearchRow - 1 + intItemCount - 1 _
                            & ",K" & intSearchRow & ":N" & intSearchRow - 1 + intItemCount - 1
            wsTgtSheet.Range(strRange).Value = ""

            ''|fffd|}|fffd|[|fffd|W|fffd||38f||6c2||303|Z|fffd||fffd||fffd||348||342||310||752||fffd|
            intFirstRow = intSearchRow - 1
            intLastRow = intSearchRow - 1 + intItemCount - 1

            ''LedgerLinkCode
            strRange = "B" & intFirstRow & ":B" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Date
            strRange = "C" & intFirstRow & ":C" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Currency
            strRange = "D" & intFirstRow & ":D" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Amount
            strRange = "E" & intFirstRow & ":E" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Remittance Request to
            strRange = "F" & intFirstRow & ":F" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Comments
            strRange = "K" & intFirstRow & ":K" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Rec Date
            strRange = "L" & intFirstRow & ":L" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Rec Currency
            strRange = "M" & intFirstRow & ":M" & intLastRow
            wsTgtSheet.Range(strRange).Merge
            ''Rec Amount
            strRange = "N" & intFirstRow & ":N" & intLastRow
            wsTgtSheet.Range(strRange).Merge

            ''|fffd||fffd||fffd||fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||243|}|fffd|[|fffd|W|fffd|s|fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd|A|fffd||fffd|r|fffd|pLedgerLinkCode|fffd||fffd||752||fffd|
            intSearchRow = intSearchRow - 1 + intItemCount - 1
            strLCode = wsTgtSheet.Cells(intSearchRow, 2).Value
            ''|fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            intItemCount = 0
        Else
            strLCode = wsTgtSheet.Cells(intSearchRow, 2).Value
        End If
        intSearchRow = intSearchRow + 1
    Loop

    ''|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strRange = "B3:N" & intSearchRow - 1    ''|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||348||342||fffd||752||fffd|
    wsTgtSheet.Range(strRange).Borders(xlEdgeLeft).LineStyle = xlContinuous
    wsTgtSheet.Range(strRange).Borders(xlEdgeLeft).Weight = xlThin
    wsTgtSheet.Range(strRange).Borders(xlEdgeLeft).ColorIndex = xlAutomatic
    wsTgtSheet.Range(strRange).Borders(xlEdgeTop).LineStyle = xlContinuous
    wsTgtSheet.Range(strRange).Borders(xlEdgeTop).Weight = xlThin
    wsTgtSheet.Range(strRange).Borders(xlEdgeTop).ColorIndex = xlAutomatic
    wsTgtSheet.Range(strRange).Borders(xlEdgeBottom).LineStyle = xlContinuous
    wsTgtSheet.Range(strRange).Borders(xlEdgeBottom).Weight = xlThin
    wsTgtSheet.Range(strRange).Borders(xlEdgeBottom).ColorIndex = xlAutomatic
    wsTgtSheet.Range(strRange).Borders(xlEdgeRight).LineStyle = xlContinuous
    wsTgtSheet.Range(strRange).Borders(xlEdgeRight).Weight = xlThin
    wsTgtSheet.Range(strRange).Borders(xlEdgeRight).ColorIndex = xlAutomatic
    wsTgtSheet.Range(strRange).Borders(xlInsideVertical).LineStyle = xlContinuous
    wsTgtSheet.Range(strRange).Borders(xlInsideVertical).Weight = xlThin
    wsTgtSheet.Range(strRange).Borders(xlInsideVertical).ColorIndex = xlAutomatic
    wsTgtSheet.Range(strRange).Borders(xlInsideHorizontal).LineStyle = xlContinuous
    wsTgtSheet.Range(strRange).Borders(xlInsideHorizontal).Weight = xlThin
    wsTgtSheet.Range(strRange).Borders(xlInsideHorizontal).ColorIndex = xlAutomatic

    ''|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|E|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|T|fffd|C|fffd|Y|fffd||fffd||752||fffd|
    wsTgtSheet.Cells.Font.Name = "Times New Roman"
    wsTgtSheet.Cells.Font.Size = 12
    wsTgtSheet.Range("B1:F1").Characters.Font.Size = 16

    ''|fffd||fffd||fffd|z/|fffd||fffd||fffd|t|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||752||fffd|
    wsTgtSheet.Columns("C:C").NumberFormat = c_strFORMAT_DATE
    wsTgtSheet.Columns("E:E").NumberFormat = g_strFORMAT_DEC_XX
    wsTgtSheet.Columns("I:I").NumberFormat = g_strFORMAT_DEC_XX
    wsTgtSheet.Columns("L:L").NumberFormat = c_strFORMAT_DATE
    wsTgtSheet.Columns("N:N").NumberFormat = g_strFORMAT_DEC_XX

    ''|fffd|\|fffd||fffd||fffd|T|fffd|C|fffd|Y|fffd||fffd||752||80b7||fffd||fffd|
    wsTgtSheet.Select
    ExcelObj.ActiveWindow.Zoom = 75
    ExcelObj.ActiveWorkbook.Worksheets("Sheet1").Select

' 5.|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||752||80b5||fffd|ABOOK|fffd||fffd||6d1||fffd|-------------------
    ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|
    blnFindFile = False
    strCurDir = g_strAppPath & c_strRequestFolder
    If Dir(strCurDir, vbDirectory) = "" Then    ''|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||c42c|
        MkDir strCurDir
    End If
    strFileName = "Request_" & Format$(Cells(15, 6).Value, "mmdd")
    strFindFile = Dir(strCurDir & Application.PathSeparator & "*.xls")
    Do While strFindFile <> ""
        If (InStr(strFindFile, strFileName) <> 0) Then
            blnFindFile = True
            intFindCount = intFindCount + 1
        End If
        strFindFile = Dir()
    Loop
    ''|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    If (blnFindFile = True) Then
        strFileName = strCurDir & Application.PathSeparator & strFileName & "(" & intFindCount + 1 & ")" & ".xls"
    Else
        strFileName = strCurDir & Application.PathSeparator & strFileName & ".xls"
    End If
    
    ExcelObj.ActiveWorkbook.SaveAs Filename:=strFileName    ''BOOK|fffd||6d1||fffd|
    
    ExcelObj.Application.SheetsInNewWorkbook = 3    '|fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||c42c||fffd||142||fffd|sheet|fffd||316||fffd||fffd||fffd||fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|
    sg_SetScreenUpdate True                         ''|fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    ExcelObj.Visible = True                         ''|fffd||c42c||fffd||fffd||fffd||fffd|BOOK|fffd||fffd|Visible|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    Set ExcelObj = Nothing

' 6.PastRemittanceData|fffd||110||752||fffd|E|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------------------------------------------
    ''|fffd||fffd||fffd||303|t|fffd||fffd||fffd|O|fffd||242||fffd||fffd|V|fffd|[|fffd|gChange|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_blnWSChangeEscape = True

    ''PastRemittanceData|fffd||30d||110||752||fffd|l|fffd||fffd||752||fffd|
    If (m_blnNewData = True) Then
        m_intReSetUp = 1
    ElseIf (m_blnPast = True) Then
        m_intReSetUp = 2
    End If
    
    ''Contents Clear
'    Workbooks(c_strLEDInputFile).Worksheets("LED09").Range("F14:J17,C20:J30").ClearContents
    wsRemitRequest.Range("F14:J17,C26:J36").ClearContents

    
    ''|fffd||3d0||fffd||fffd|E|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    m_strNewCode = ""
    m_strEditCode = ""
    m_blnDirty = False
    m_blnNewData = False
    m_blnPast = False
    m_blnReceipt = False
    m_blnShowTable = False
    ''PAST REMITTANCE DATA|fffd||110||752||fffd|
    Range("B41:J" & m_lngPastRemitRow).ClearContents
    s_Setup_PastRemitData
    m_intReSetUp = 0
    ''|fffd|V|fffd|[|fffd|gChange|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd||242||fffd||fffd||fffd|
    m_blnWSChangeEscape = False
    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerLinkCode|fffd||fffd||752||fffd|
    Cells(14, 6).Value = strBeginLCode
    Exit Sub
    
LBL_ERR:
    sg_SetScreenUpdate True                         ''|fffd||fffd||282||fffd||fffd|X|fffd|V|fffd||fffd|True|fffd||242||fffd||fffd||fffd|
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Call g_objLog.PrintOut(ID_NKFAS_SS, "cmdShowTable_Click:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "cmdShowTableClick", strMSG
    Exit Sub
End Sub

Attribute VB_Name = "wsSearchAccount"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "cmdSearch, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdExtract, 3, 2, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd||fffd||fffd|a|fffd||fffd||fffd||fffd||fffd|U|fffd||591||44a0||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/09 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'-----------------------------------------------------------------
Private Const c_strMSG_YEAR As String = "Please input a Target Year." ''#|fffd||38f||6d3||fffd||fffd||fffd|

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_lngModfyMAX_ROWINDEX As Long       ''|fffd||fffd||fffd||34d||151||fffd|s
Private m_lngLastDataNums As Long            ''|fffd||fffd||fffd||742||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|

'bank
Private m_strBDTbl As String '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strBDAli As String '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
Private m_strBMTbl As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strBMAli As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j

'cash
Private m_strCDTbl As String '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strCDAli As String '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
Private m_strCMTbl As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strCMAli As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j

'transfer
Private m_strTDTbl As String '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strTDAli As String '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
Private m_strTMTbl As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strTMAli As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j

'pjtmaster
Private m_strPMTbl As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
Private m_strPMAli As String '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j

'|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
Private m_strCAli As String

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------
Private Const mc_lngMAX_ROWINDEX As Long = 500 ''|fffd||fffd||fffd||34d||151||fffd|s
Private Const mc_lngWorkSheet_MAXROWINDEX As Long = 65536 ''|fffd|V|fffd|[|fffd|g|fffd||151||fffd|s
Private Const mc_lngRowSearchOPTION As Long = 11 ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||34d|s
Private Const mc_lngRowST As Long = 17 ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s
Private Const mc_lngColST As Long = 2 ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd||fffd|
Private Const mc_strColST As String = "B" ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd||fffd|
Private Const mc_lngColEND As Long = 21 ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||14f|I|fffd||fffd|
'Private Const mc_strColEND As String = "U" ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||14f|I|fffd||fffd|
Private Const mc_strColEND As String = "V" ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||14f|I|fffd||fffd|

Private Const mc_lngSearchNumQ As Long = 500 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd|m|fffd|F|fffd|J|fffd|n|fffd||fffd||fffd||fffd|
Private Const mc_lngSearchNumMAX As Long = 15000 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||151||530f||fffd||fffd|

'|fffd||fffd||fffd|Z|fffd||fffd||fffd||308||292|u|fffd|i|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|j
Private Const mc_strCountryRNG As String = "D3" '|fffd||fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCountryROW As Long = 3 '|fffd||fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngCountryCOL As Long = 4 '|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strTargetYearRNG As String = "D4" '|fffd||38f||6d4|N|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngTargetYearROW As Long = 4 '|fffd||38f||6d4|N|fffd|E|fffd|s
Private Const mc_lngTargetYearCOL As Long = 4 '|fffd||38f||6d4|N|fffd|E|fffd||fffd|

Private Const mc_strTargetMonthFromRNG As String = "D5" '|fffd||38f||6cc||fffd|From
Private Const mc_lngTargetMonthFromROW As Long = 5 '|fffd||38f||6cc||fffd|From|fffd|E|fffd|s
Private Const mc_lngTargetMonthFromCOL As Long = 4 '|fffd||38f||6cc||fffd|From|fffd|E|fffd||fffd|

Private Const mc_strTargetMonthToRNG As String = "D6" '|fffd||38f||6cc||fffd|to
Private Const mc_lngTargetMonthToROW As Long = 6 '|fffd||38f||6cc||fffd|to|fffd|E|fffd|s
Private Const mc_lngTargetMonthToCOL As Long = 4 '|fffd||38f||6cc||fffd|to|fffd|E|fffd||fffd|

Private Const mc_strCurrencyRNG As String = "D7" '|fffd||289||743|R|fffd|[|fffd|h|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCurrencyROW As Long = 7 '|fffd||289||743|R|fffd|[|fffd|h|fffd|E|fffd|s
Private Const mc_lngCurrencyCOL As Long = 4 '|fffd||289||743|R|fffd|[|fffd|h|fffd|E|fffd||fffd|

Private Const mc_strInputLedgerCodeRNG As String = "F5" '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|i|fffd||fffd||fffd||341|j|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngInputLedgerCodeROW As Long = 5 '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|i|fffd||fffd||fffd||341|j|fffd|E|fffd|s
Private Const mc_lngInputLedgerCodeCOL As Long = 6 '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|i|fffd||fffd||fffd||341|j|fffd|E|fffd||fffd|

Private Const mc_strThisLedgerRNG As String = "F6" '|fffd||44a0||fffd||656a||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngThisLedgerROW As Long = 6 '|fffd||44a0||fffd||656a||fffd|E|fffd|s
Private Const mc_lngThisLedgerCOL As Long = 6 '|fffd||44a0||fffd||656a||fffd|E|fffd||fffd|

Private Const mc_strSTDateRNG As String = "B13" '|fffd|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngSTDateROW As Long = 13 '|fffd|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngSTDateCOL As Long = 2 '|fffd|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strEDDateRNG As String = "B15" '|fffd|I|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngEDDateROW As Long = 15 '|fffd|I|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngEDDateCOL As Long = 2 '|fffd|I|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strLedgerCodeRNG As String = "C12" '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngLedgerCodeROW As Long = 12 '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|E|fffd|s
Private Const mc_lngLedgerCodeCOL As Long = 3 '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|E|fffd||fffd|

Private Const mc_strItemRNG As String = "D12" '|fffd||fffd||fffd||fffd||216||681|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngItemROW As Long = 12 '|fffd||fffd||fffd||fffd||216||681|E|fffd|s
Private Const mc_lngItemCOL As Long = 4 '|fffd||fffd||fffd||fffd||216||681|E|fffd||fffd|

Private Const mc_strDetailRNG As String = "F12" '|fffd||fffd||fffd|l|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngDetailROW As Long = 12 '|fffd||fffd||fffd|l|fffd|E|fffd|s
Private Const mc_lngDetailCOL As Long = 6 '|fffd||fffd||fffd|l|fffd|E|fffd||fffd|

Private Const mc_strOfficeCodeRNG As String = "H12" '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngOfficeCodeROW As Long = 12 '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|E|fffd|s
Private Const mc_lngOfficeCodeCOL As Long = 8 '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|E|fffd||fffd|

Private Const mc_strProjectNameRNG As String = "I12" '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngProjectNameROW As Long = 12 '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|E|fffd|s
Private Const mc_lngProjectNameCOL As Long = 9 '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strWBSRNG As String = "J12" 'Expense Burden|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngWBSROW As Long = 12 'Expense Burden|fffd|E|fffd|s
Private Const mc_lngWBSCOL As Long = 10 'Expense Burden|fffd|E|fffd||fffd|

Private Const mc_strAcCodeRNG As String = "K12" '|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngAcCodeROW As Long = 12 '|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd|s
Private Const mc_lngAcCodeCOL As Long = 11 '|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|E|fffd||fffd|

Private Const mc_strAcNameRNG As String = "L12" '|fffd||fffd||fffd||fffd||216||696||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngAcNameROW As Long = 12 '|fffd||fffd||fffd||fffd||216||696||fffd||fffd|E|fffd|s
Private Const mc_lngAcNameCOL As Long = 12 '|fffd||fffd||fffd||fffd||216||696||fffd||fffd|E|fffd||fffd|

Private Const mc_strCcCodeRNG As String = "M12" '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCcCodeROW As Long = 12 '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd|s
Private Const mc_lngCcCodeCOL As Long = 13 '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd||fffd|

Private Const mc_strCcNameRNG As String = "N12" '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCcNameROW As Long = 12 '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngCcNameCOL As Long = 14 '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strLlinkCodeRNG As String = "O12" '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd|R|fffd|[|fffd|h|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngLlinkCodeROW As Long = 12 '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd|R|fffd|[|fffd|h|fffd|E|fffd|s
Private Const mc_lngLlinkCodeCOL As Long = 15 '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd|R|fffd|[|fffd|h|fffd|E|fffd||fffd|

Private Const mc_strEviNoRNG As String = "P12" 'Evidence No.|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngEviNoROW As Long = 12 'Evidence No.|fffd|E|fffd|s
Private Const mc_lngEviNoCOL As Long = 16 'Evidence No.|fffd|E|fffd||fffd|

Private Const mc_strChkNoRNG As String = "Q12" 'Check No.|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngChkNoROW As Long = 12 'Check No.|fffd|E|fffd|s
Private Const mc_lngChkNoCOL As Long = 17 'Check No.|fffd|E|fffd||fffd|

Private Const mc_strNkJvRNG As String = "R12" 'NK/JV|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngNkJvROW As Long = 12 'NK/JV|fffd|E|fffd|s
Private Const mc_lngNkJvCOL As Long = 18 'NK/JV|fffd|E|fffd||fffd|

Private Const mc_strClaimRNG As String = "S12" 'Claim|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngClaimROW As Long = 12 'Claim|fffd|E|fffd|s
Private Const mc_lngClaimCOL As Long = 19 'Claim|fffd|E|fffd||fffd|

Private Const mc_strDebitLowRNG As String = "T13" 'Debit|fffd||fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngDebitLowROW As Long = 13 'Debit|fffd||fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngDebitLowCOL As Long = 20 'Debit|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strDebitHighRNG As String = "T15" 'Debit|fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngDebitHighROW As Long = 15 'Debit|fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngDebitHighCOL As Long = 20 'Debit|fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strCreditLowRNG As String = "U13" 'Credit|fffd||fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCreditLowROW As Long = 13 'Credit|fffd||fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngCreditLowCOL As Long = 21 'Credit|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strCreditHighRNG As String = "U15" 'Credit|fffd||fffd||fffd||fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCreditHighROW As Long = 15 'Credit|fffd||fffd||fffd||fffd|E|fffd|s
Private Const mc_lngCreditHighCOL As Long = 21 'Credit|fffd||fffd||fffd||fffd|E|fffd||fffd|

Private Const mc_strDebitTotalRNG As String = "T16" 'Debit|fffd||fffd||fffd|v|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngDebitTotalROW As Long = 16 'Debit|fffd||fffd||fffd|v|fffd|E|fffd|s
Private Const mc_lngDebitTotalCOL As Long = 20 'Debit|fffd||fffd||fffd|v|fffd|E|fffd||fffd|

Private Const mc_strCreditTotalRNG As String = "U16" 'Credit|fffd||fffd||fffd|v|fffd|E|fffd|A|fffd|h|fffd||fffd||fffd|X
Private Const mc_lngCreditTotalROW As Long = 16 'Credit|fffd||fffd||fffd|v|fffd|E|fffd|s
Private Const mc_lngCreditTotalCOL As Long = 21 'Credit|fffd||fffd||fffd|v|fffd|E|fffd||fffd|
'|fffd||fffd||fffd|Z|fffd||fffd||fffd||308||292|u|fffd|i|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|j

'|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||303|Z|fffd||fffd|
Private Const mc_strLedgerDateCOL As String = "B" '
Private Const mc_strLedgerCodeCOL As String = "C" '
Private Const mc_strItemCOL As String = "D" '
Private Const mc_strItemContCOL As String = "E" '
Private Const mc_strDetailCOL As String = "F" '
Private Const mc_strDetailContCOL As String = "G" '

Private Const mc_strOCodeCOL As String = "H" '
Private Const mc_strPNameCOL As String = "I" '

Private Const mc_strWBSCbLstCOL As String = "AA" '
Private Const mc_strCcCodeCbLstCOL As String = "AE" '
Private Const mc_strAccountCbLstCOL As String = "AI" '
Private Const mc_strCountryCbLstCOL As String = "AM" '
Private Const mc_strCurrencyCbLstCOL As String = "AQ" '
Private Const mc_strOCodeCbLstCOL As String = "AU" '
Private Const mc_strPNameCbLstCOL As String = "AV" '
Private Const mc_strCrrencyCbLstCOL As String = "AY" '
Private Const mc_strConnectionCbLstCOL As String = "BA" '

Private Const mc_strWBSCOL As String = "J" '
Private Const mc_strAcCodeCOL As String = "K" '
Private Const mc_strAcNameCOL As String = "L" '
Private Const mc_strCcCodeCOL As String = "M" '
Private Const mc_strCcNameCOL As String = "N" '
Private Const mc_strLlinkCodeCOL As String = "O" '
Private Const mc_strEviNoCOL As String = "P" '
Private Const mc_strChkNoCOL As String = "Q" '
Private Const mc_strNkJvCOL As String = "R" '
Private Const mc_strClaimCOL As String = "S" '
Private Const mc_strDebitCOL As String = "T" '
Private Const mc_strCreditCOL As String = "U" '
Private Const mc_strRecIDCOL As String = "V" '

'Private Const mc_strCOL As String = "" '

'DB|fffd||fffd||fffd||696||fffd||fffd|iBB|fffd|ACB|fffd|ATR|fffd|j
Private Const mc_strDbID As String = "ID" '
Private Const mc_strDbOfficeCode As String = "OfficeCode" '
Private Const mc_strDbLedgerCode As String = "LedgerCode" '
Private Const mc_strDbTargetPeriod As String = "TargetPeriod" '
Private Const mc_strDbLedgerDate As String = "LedgerDate" '
Private Const mc_strDbDescription As String = "Description" '
Private Const mc_strDbDetails As String = "Details" '
Private Const mc_strDbWBSCode As String = "WBSCode" '
Private Const mc_strDbAcCode As String = "AccountCode" '
Private Const mc_strDbAcName As String = "AccountName" '
Private Const mc_strDbConectCode As String = "ConnectionCode" '
Private Const mc_strDbConectName As String = "ConnectionName" '
Private Const mc_strDbLedgerLinkCode As String = "LedgerLinkCode" '
Private Const mc_strDbEviNo As String = "EviNo" '
Private Const mc_strDbCheckNo As String = "CheckNo" '
Private Const mc_strDbNKJV As String = "NKJV" '
Private Const mc_strDbPaid As String = "Paid" '
Private Const mc_strDbClaim As String = "Claim" '
Private Const mc_strDbReceived As String = "Received" '
Private Const mc_strDbUpdateDate As String = "ImportDate" '
Private Const mc_strDbSendDate As String = "InsertDate" '

Private Const mc_strDbPName As String = "ProjectName" '

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/04/15 : Knowlbo m.o : |fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean

    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_SS) = True Then
        fw_SetupSheet = True
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True

        If g_blnAryCmnMstUpdate(GLED_SS) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            g_blnAryCmnMstUpdate(GLED_SS) = False
        End If

        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        m_blnSetupCellsInProgress = False
        Exit Function
    End If


    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If

    ''Cash,Book|fffd||fffd||4b902||242||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_BB) = False And _
       fg_IsSetCommonInfo(GCMN_CB) = False Then
        MsgBox c_strMSG_MASTER_CASHorBANK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & mc_lngRowST)
 
    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
'    Application.GoTo Range("a" & mc_lngRowST), Scroll:=True
    Cells(1, 1).Activate
 
     ''|fffd||151||fffd|s|fffd||fffd||fffd||752||fffd|
    m_lngModfyMAX_ROWINDEX = mc_lngMAX_ROWINDEX

'    m_lngLastDataNums = 0

    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD   ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    
    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    s_ClearContentsALL
    
'|fffd||a39e||fffd|I|fffd||24c||fffd||fffd||282||fffd||283|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||155|\|fffd||fffd||fffd||fffd||fffd||93c8||fffd||fffd||fffd||343|X|fffd|g|fffd|b|fffd|v
    cmdExtract.Visible = False
'    cmdExtract.Enabled = False
    
    s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|

    '|fffd||fffd||fffd||fffd||fffd||38f||6c3|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDBTblInfo
    
    g_blnArySetupSheet(GLED_SS) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_SS) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    fw_SetupSheet = True
    sg_SetScreenUpdate True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/09 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'   2004/01/22 : Knowlbo Suzuki : TargetMonth|fffd||752||fffd||1c9||fffd|
'   2013/03/08 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strData As String
    Dim intIx As Integer
    Dim intIxEnd As Integer
    Dim rngTarget As Range
    
    Dim rngLstTgt As Range
    Dim strLstAdr As String
    
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim intSMonth As Integer
    Dim intEMonth As Integer
    Dim intCount As Integer
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    ''Country |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngTarget = Range(mc_strCountryRNG)
    Set rngLstTgt = Range(mc_strCountryCbLstCOL & mc_lngRowST)
    rngTarget.NumberFormat = "@"
    sg_SetCountryCombo rngTarget, rngLstTgt, False

    ''|fffd||38f||6d4|N|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    Range(mc_strTargetYearRNG).NumberFormat = "@"
    intIx = Range(mc_strTargetYearRNG).Value
    s_SetupTargetYearCell Range(mc_strTargetYearRNG)
    If intIx > 0 Then
        Range(mc_strTargetYearRNG).Value = intIx
    Else
        Range(mc_strTargetYearRNG).Value = g_intTargetSysYear
    End If
    
    ''TargetMonth|fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    ''<<<2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||fffd||fffd||4c382||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||fffd||fffd||4c382||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    intSMonth = Month(fg_GetStartOfYear(CInt(Range(mc_strTargetYearRNG).Value)))
    intEMonth = intSMonth + 11
    
    strData = ""
    For intCount = intSMonth To intEMonth
        If (intCount > 12) Then
            strData = strData & CStr(intCount - 12)
        Else
            strData = strData & CStr(intCount)
        End If
        If intCount = intEMonth Then Exit For
        strData = strData & ","
    Next
    
'    strData = "4,5,6,7,8,9,10,11,12,1,2,3"
    ''>>>2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Set rngTarget = Range(mc_strTargetMonthFromRNG)
    sg_SetupValidation rngTarget.Validation, c_strMSG_MONTH, _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    Set rngTarget = Range(mc_strTargetMonthToRNG)
    sg_SetupValidation rngTarget.Validation, c_strMSG_MONTH, _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    
    ''Currency |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngTarget = Range(mc_strCurrencyRNG)
    Set rngLstTgt = Range(mc_strCurrencyCbLstCOL & mc_lngRowST)
    rngTarget.NumberFormat = "@"
    sg_SetCurrencyCombo rngTarget, rngLstTgt, False
    rngTarget.Value = g_typAryPJTInfo(0).m_strCurrency

    ''Ledger Code |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngTarget = Range(mc_strInputLedgerCodeRNG)
    rngTarget.NumberFormat = "@"
    ''modify Sho 2003/07/09 CB,BB,TR|fffd||341|A|fffd||fffd||fffd||fffd||fffd|"CB01"|fffd||fffd||fffd||94|\|fffd||fffd||fffd||182||fffd||fffd||fffd||fffd|K|fffd|C|fffd|h|fffd||308||4d6||fffd||fffd||202||302||14d||d3dc|
    ''strData = "*, BB*, CB*, TR*, BB, CB, TR"
    strData = "*, BB*, CB*, TR*"
    sg_SetupValidation rngTarget.Validation, c_strMSG_LEDCODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    rngTarget.Validation.ShowError = False
    If rngTarget.Value = "" Then
        rngTarget.Value = fg_GetTokenFromIndexInCSV(0, rngTarget.Validation.Formula1)
    End If
    
    ''Ledger Type(NK/JV) |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    strData = c_strPurposeNK & "," & c_strPurposeJV
    Set rngTarget = Range(mc_strThisLedgerRNG)
    rngTarget.NumberFormat = "@"
    sg_SetupValidation rngTarget.Validation, c_strMSG_NKJV, _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    If rngTarget.Value = "" Then
        rngTarget.Value = fg_GetTokenFromIndexInCSV(0, rngTarget.Validation.Formula1)
    End If

    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|i|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|A|fffd||fffd||fffd|A|fffd|j|fffd||303|o|fffd||fffd||fffd|f|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||752||fffd|i|fffd||a287||fffd||94|\|fffd||215||fffd||fffd||fffd||fffd|j
    Range(Range(mc_strLedgerCodeRNG).Address, _
          Range(mc_strLlinkCodeRNG).Offset(3, 0).Address).NumberFormat = "@"
    Range(Range(mc_strNkJvRNG).Address, _
          Range(mc_strClaimRNG).Offset(3, 0).Address).NumberFormat = "@"

    ''Office Code & Project Name |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|...|fffd|y|fffd|A|fffd||158|A|fffd||fffd|
    Set rngTarget = Range(mc_strOfficeCodeRNG)
    Set rngLstTgt = Range(mc_strOCodeCbLstCOL & mc_lngRowST)
    s_SetOfficeCombo Range(mc_strCountryRNG).Value, rngTarget, rngLstTgt, True
    rngTarget.Value = g_typAryPJTInfo(0).m_strOfficeCode
    rngTarget.Offset(0, 1).Value = g_typAryPJTInfo(0).m_strPJTName
    
    ''Ledger Date
    sg_SetupValidation Range(mc_strLedgerDateCOL & mc_lngSTDateROW, mc_strLedgerDateCOL & mc_lngSTDateROW).Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range(mc_strLedgerDateCOL & mc_lngSTDateROW, mc_strLedgerDateCOL & mc_lngSTDateROW).NumberFormat = c_strFORMAT_DATE
    sg_SetupValidation Range(mc_strLedgerDateCOL & mc_lngEDDateROW, mc_strLedgerDateCOL & mc_lngEDDateROW).Validation, _
         c_strMSG_DATE_FORMAT, xlValidateDate, xlValidAlertStop, xlBetween, "1/1/1980", "12/31/2050"
    Range(mc_strLedgerDateCOL & mc_lngEDDateROW, mc_strLedgerDateCOL & mc_lngEDDateROW).NumberFormat = c_strFORMAT_DATE
       
    ''Ledger Code
    Range(mc_strLedgerCodeRNG).Font.Color = vbWhite
    '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd|
    Range(mc_strLedgerCodeRNG).Value = Range(mc_strInputLedgerCodeRNG).Value
    
    ''Item
'    Set rngTarget = Range(mc_strItemRNG)
    
    ''Details
'    Set rngTarget = Range(mc_strDetailRNG)
    
    ''Expense Burden|fffd|iWBS/Others|fffd|j...|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    s_SetWBSComboByOffice Range(mc_strOfficeCodeRNG).Value, Range(mc_strWBSRNG), _
                        Range(mc_strWBSCbLstCOL & mc_lngRowST), True
    
    ''Account Code & Account Name
    Set rngTarget = Range(mc_strAcCodeRNG)
    Set rngLstTgt = Range(mc_strAccountCbLstCOL & mc_lngRowST)
    Range(rngLstTgt.Address, _
          rngLstTgt.Offset(mc_lngRowST + UBound(g_strAryAcCode) + 1, 1).Address).NumberFormat = "@"
    
    sg_SetupDetailACCodeCells Range(mc_strAcCodeRNG), _
                              Range(mc_strAcNameRNG), _
                              Range(mc_strAccountCbLstCOL & mc_lngRowST)
    
    Range(rngLstTgt, rngLstTgt.Offset(0, 1)).Insert Shift:=xlShiftDown
    Set rngLstTgt = rngLstTgt.Offset(-1, 0)
    rngLstTgt.NumberFormat = "@"
    rngLstTgt.Value = "*"
    rngLstTgt.Offset(0, 1).Value = ""
    strLstAdr = rngLstTgt.Address & ":" & _
                rngLstTgt.Offset(UBound(g_strAryAcCode) + 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_ACCOUNT_CODE, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
    Range(mc_strAcCodeRNG).Validation.ShowError = False '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||351||389||fffd||fffd|p
    strLstAdr = rngLstTgt.Offset(0, 1).Address & ":" & _
                rngLstTgt.Offset(0, 1).Offset(UBound(g_strAryAcCode) + 1, 0).Address
    sg_SetupValidation rngTarget.Offset(0, 1).Validation, c_strMSG_ACCOUNT_NAME, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strLstAdr, Null
    Range(rngLstTgt, rngLstTgt.Offset(0, 1)).Columns.Hidden = True
    rngTarget.Value = "*"
    rngTarget.Offset(0, 1).Value = ""
    
    ''Connection Code & Connection Code Name
    Range(mc_strCcCodeCbLstCOL & mc_lngRowST, _
          mc_strCcCodeCbLstCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    
    Set rngTarget = Range(mc_strCcCodeRNG)
    Set rngLstTgt = Range(mc_strCcCodeCbLstCOL & mc_lngRowST)
    s_SetConectCombo Range(mc_strOfficeCodeRNG).Value, rngTarget, rngLstTgt, True
    rngTarget.Value = "*"
    rngTarget.Offset(0, 1).Value = ""
    
    ''Ledger Link Code
    '|fffd||fffd||fffd||fffd||317|v|fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||10c||fffd||fffd||fffd|
'    Set rngTarget = Range(mc_strLlinkCodeRNG)
    
    
    ''EviNo. CheckNo.
    sg_SetupValidation Range(mc_strEviNoRNG, Range(mc_strChkNoRNG).Offset(3, 0).Address).Validation, _
         c_strMSG_WHOLE_NUM, xlValidateWholeNumber, xlValidAlertStop, xlGreaterEqual, "=1", Null

    'NK/JV
    sg_SetupDetailNKJVCells Range(mc_strNkJvCOL & mc_lngNkJvROW, mc_strNkJvCOL & mc_lngNkJvROW)
    Range(mc_strNkJvRNG).Validation.ShowError = False
    Range(mc_strNkJvRNG).HorizontalAlignment = xlHAlignCenter
    Range(mc_strNkJvRNG).VerticalAlignment = xlVAlignCenter
    
    ''Claim
    sg_SetupValidation Range(mc_strClaimCOL & mc_lngClaimROW, mc_strClaimCOL & mc_lngClaimROW).Validation, _
         c_strMSG_CLAIM, xlValidateList, xlValidAlertStop, xlBetween, "Y,N", Null
    Range(mc_strClaimRNG).Validation.ShowError = False
    Range(mc_strClaimRNG).HorizontalAlignment = xlHAlignCenter
    Range(mc_strClaimRNG).VerticalAlignment = xlVAlignCenter

    ''Debit, Credit
    sg_SetupValidation Range(mc_strDebitCOL & mc_lngDebitLowROW, mc_strCreditCOL & mc_lngCreditLowROW).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    Range(mc_strDebitCOL & mc_lngDebitLowROW, mc_strCreditCOL & mc_lngCreditLowROW).NumberFormat = g_strFORMAT_DECR_XX
    sg_SetupValidation Range(mc_strDebitCOL & mc_lngDebitHighROW, mc_strCreditCOL & mc_lngCreditHighROW).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    Range(mc_strDebitCOL & mc_lngDebitHighROW, mc_strCreditCOL & mc_lngCreditHighROW).NumberFormat = g_strFORMAT_DECR_XX

    Set rngTarget = Nothing
    Set rngLstTgt = Nothing

  End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2002/03/27 : Knowlbo m.o : |fffd||fffd||fffd||fffd||fffd||752||fffd||348||342||fffd||fffd|g|fffd||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()
    
    'Ledger Date|fffd|iyyyy/mm/dd|fffd|j
    Range(mc_strLedgerDateCOL & mc_lngRowST, mc_strLedgerDateCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = c_strFORMAT_DATE
    
    ''Ledger Code
    Range(mc_strLedgerCodeRNG, mc_strLedgerCodeCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    
    ''Item & Details
    Range(mc_strItemRNG, mc_strDetailCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    
    ''Account Code
    Range(mc_strAcCodeRNG, mc_strDetailCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    
    ''Connection Code
    Range(mc_strCcCodeRNG, mc_strDetailCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    
    ''Ledger Link Code
    Range(mc_strLlinkCodeRNG, mc_strDetailCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    
    ''NK/JV, Claim|fffd|i|fffd|e|fffd|L|fffd|X|fffd|g|fffd||12189||fffd||fffd||fffd||fffd||fffd||fffd||155|\|fffd||fffd||fffd|j
    Range(mc_strNkJvCOL & mc_lngRowST, mc_strClaimCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = "@"
    Range(mc_strNkJvCOL & mc_lngRowST, mc_strClaimCOL & mc_lngWorkSheet_MAXROWINDEX).HorizontalAlignment = xlHAlignCenter
    Range(mc_strNkJvCOL & mc_lngRowST, mc_strClaimCOL & mc_lngWorkSheet_MAXROWINDEX).VerticalAlignment = xlVAlignCenter
    
    
    ''Debit, Credit|fffd|i|fffd||fffd||fffd|l|fffd|E|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|\|fffd||fffd||fffd|j
    Range(mc_strDebitCOL & mc_lngRowST, mc_strCreditCOL & mc_lngWorkSheet_MAXROWINDEX).NumberFormat = g_strFORMAT_DECR_XX

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2004/01/22 : Knowlbo Suzuki : TargetMonth|fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData( _
    ByRef strMessage As String _
) As Boolean
            
    f_CheckInputData = False
   
    If Cells(mc_lngTargetYearROW, mc_lngTargetYearCOL).Value = "" Then ''Target Year
        strMessage = c_strMSG_YEAR
        Cells(mc_lngTargetYearROW, mc_lngTargetYearCOL).Activate
        Exit Function
    End If
        
    If Range(mc_strTargetMonthFromRNG).Value <> "" And _
       Range(mc_strTargetMonthToRNG).Value <> "" Then                   ''Target Month
        Dim nFrom As Integer
        Dim nTo As Integer
        nFrom = Range(mc_strTargetMonthFromRNG).Value
        nTo = Range(mc_strTargetMonthToRNG).Value
        ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        ' |fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||194||fffd|r|fffd||fffd||fffd||fffd|
        If nFrom <= Month(fg_GetEndOfYear(CInt(Range(mc_strTargetYearRNG).Value))) Then nFrom = nFrom + 12
        If nTo <= Month(fg_GetEndOfYear(CInt(Range(mc_strTargetYearRNG).Value))) Then nTo = nTo + 12
        
'        If nFrom <= 3 Then nFrom = nFrom + 12
'        If nTo <= 3 Then nTo = nTo + 12
        ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
        If nFrom > nTo Then
            strMessage = c_strMSG_ERRORMONTH
            Range(mc_strTargetMonthToRNG).Activate
            Exit Function
        End If
    End If
    
    If Cells(mc_lngCurrencyROW, mc_lngCurrencyCOL).Value = "" Then ''Currency
        strMessage = c_strMSG_RIGHTCURRENCY
        Cells(mc_lngCurrencyROW, mc_lngCurrencyCOL).Activate
        Exit Function
    End If
    
    If Cells(mc_lngInputLedgerCodeROW, mc_lngInputLedgerCodeCOL).Value = "" Then ''Ledger Code
        strMessage = c_strMSG_LEDCODE
        Cells(mc_lngInputLedgerCodeROW, mc_lngInputLedgerCodeCOL).Activate
        Exit Function
    End If
    
    If Cells(mc_lngThisLedgerROW, mc_lngThisLedgerCOL).Value = "" Then ''Ledger Type
        strMessage = c_strMSG_NKJV
        Cells(mc_lngThisLedgerROW, mc_lngThisLedgerCOL).Activate
        Exit Function
    End If
    
    If Range(mc_strSTDateRNG).Value > Range(mc_strEDDateRNG).Value _
        And Range(mc_strSTDateRNG).Value <> "" And Range(mc_strEDDateRNG).Value <> "" Then 'Start&End Date
        strMessage = c_strMSG_BETWEENPERIOD
        Range(mc_strSTDateRNG).Activate
        Exit Function
    End If
    
    If Range(mc_strDebitLowRNG).Value > Range(mc_strDebitHighRNG).Value _
        And Range(mc_strDebitLowRNG).Value <> "" And Range(mc_strDebitHighRNG).Value <> "" Then 'Debit
        strMessage = "Lower Limit exceeds Upper Limit." '"|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||12d02||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
        Range(mc_strDebitLowRNG).Activate
        Exit Function
    End If
    
    If Range(mc_strCreditLowRNG).Value > Range(mc_strCreditHighRNG).Value _
        And Range(mc_strCreditLowRNG).Value <> "" And Range(mc_strCreditHighRNG).Value <> "" Then 'Credit
        strMessage = "Lower Limit exceeds Upper Limit." '"|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||12d02||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
        Range(mc_strCreditLowRNG).Activate
        Exit Function
    End If
    
    f_CheckInputData = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd||30c||fffd||fffd||fffd||fffd||38f||6c3|e|fffd|[|fffd|u|fffd||fffd||fffd||30f||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)DB|fffd||30c||fffd||fffd||fffd||fffd||38f||6c3|e|fffd|[|fffd|u|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   "|fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/15 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDBTblInfo( _
 _
)

    'bank
    m_strBDTbl = c_strTBL_BankBook '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strBDAli = "bd" '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    m_strBMTbl = c_strTBL_BBMaster '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strBMAli = "bm" '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    
    'cash
    m_strCDTbl = c_strTBL_CashBook '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strCDAli = "cd" '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    m_strCMTbl = c_strTBL_CBMaster '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strCMAli = "cm" '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    
    'transfer
    m_strTDTbl = c_strTBL_Transfer '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strTDAli = "td" '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    m_strTMTbl = c_strTBL_TRMaster '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strTMAli = "tm" '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    
    'pjtmaster
    m_strPMTbl = c_strTBL_PJTMaster '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
    m_strPMAli = "pm" '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||303|G|fffd|C|fffd||fffd||fffd|A|fffd|X|fffd||fffd||fffd|iSQL|fffd|p|fffd|j
    m_strCAli = "Nums"

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/10 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'   2004/01/22 : Knowlbo Suzuki : TargetMonth|fffd||389||fffd||fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean
    
    Dim lngIndex As Long
    Dim lngTokenIdx As Long
    Dim strData As String
    Dim rngDst As Range
    Dim rngLst As Range
    
    f_onChangeCell = False
    
    ''|fffd||fffd||fffd||fffd||fffd|i|fffd||389||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||183|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|A|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|j
    If rngTarget.Row = mc_lngCountryROW And _
       rngTarget.Column = mc_lngCountryCOL Then
        strData = fg_GetCCodeByCName(rngTarget.Value)
        m_blnSetupCellsInProgress = True
        If strData = "" Or rngTarget.Value = "" Or _
           rngTarget.Value = String$(Len(rngTarget.Value), "*") Or _
           rngTarget.Value = Space$(Len(rngTarget.Value)) Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        End If
        m_blnDirty = True
        Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
        '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|E|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||c42c|
        Set rngDst = Range(mc_strOfficeCodeRNG)
        Set rngLst = Range(mc_strOCodeCbLstCOL & mc_lngRowST)
        s_SetOfficeCombo rngTarget.Value, rngDst, rngLst, True
        
        '|fffd||389||fffd||fffd||fffd||fffd||fffd||289||742||fffd||752||fffd|
        strData = rngLst.Offset(1, 2).Value
        If strData = "" Then strData = fg_GetCurrencyByCName(Range(mc_strCountryRNG).Value)
        If strData <> "" Then Range(mc_strCurrencyRNG).Value = strData
        
        'WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
        strData = Range(mc_strOfficeCodeRNG).Value
        If strData = "" Or InStr(1, strData, "*", vbTextCompare) > 0 Then
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByCountry rngTarget.Value, Range(mc_strWBSRNG), Range(mc_strWBSCbLstCOL & mc_lngRowST), True
        Else
            '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByOffice strData, Range(mc_strWBSRNG), Range(mc_strWBSCbLstCOL & mc_lngRowST), True
        End If
        
        '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||c42c|
        Set rngDst = Range(mc_strCcCodeRNG)
        Set rngLst = Range(mc_strCcCodeCbLstCOL & mc_lngRowST)
        s_SetConectCombo Range(mc_strOfficeCodeRNG), rngDst, rngLst, True
        rngDst.Value = "*"
        rngDst.Offset(0, 1).Value = ""
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        m_blnSetupCellsInProgress = False
    
    ''|fffd||38f||6d4|N
    ElseIf rngTarget.Row = mc_lngTargetYearROW And _
       rngTarget.Column = mc_lngTargetYearCOL Then
        If "2003" <= rngTarget.Value And rngTarget.Value <= "2050" Then
            m_blnDirty = True
        Else
            GoTo LBL_END
        End If
    
    ''|fffd||38f||6cc||fffd|From
    ElseIf rngTarget.Row = mc_lngTargetMonthFromROW And _
       rngTarget.Column = mc_lngTargetMonthFromCOL Then
        m_blnDirty = True
    
    ''|fffd||38f||6cc||fffd|to
    ElseIf rngTarget.Row = mc_lngTargetMonthToROW And _
       rngTarget.Column = mc_lngTargetMonthToCOL Then
        m_blnDirty = True
    
    ''|fffd||289||743|R|fffd|[|fffd|h|fffd|i|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd||191||44a0||fffd||656a||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd||fffd|...|fffd||fffd||fffd||202||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngCurrencyROW And _
           rngTarget.Column = mc_lngCurrencyCOL Then
        If rngTarget.Value = "" Or rngTarget.Value = Space$(Len(rngTarget.Value)) Or _
           InStr(1, rngTarget.Value, "*", vbTextCompare) > 0 Then
            GoTo LBL_END
        End If
        m_blnDirty = True
    
    ''|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd|i|fffd||289||743|R|fffd|[|fffd|h|fffd||191||44a0||fffd||656a||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd||fffd|...|fffd||fffd||fffd||202||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngInputLedgerCodeROW And _
           rngTarget.Column = mc_lngInputLedgerCodeCOL Then
        If rngTarget.Value = "" Or rngTarget.Value = Space$(Len(rngTarget.Value)) Then
            GoTo LBL_END
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        '|fffd||752||80b3||fffd||a0bd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||fffd|f|fffd||fffd||fffd||fffd|
        Range(mc_strLedgerCodeRNG).Value = Range(mc_strInputLedgerCodeRNG).Value
        m_blnSetupCellsInProgress = False

    
    ''|fffd||44a0||fffd||656a||fffd|i|fffd||289||743|R|fffd|[|fffd|h|fffd||183||fffd||fffd|W|fffd||fffd||fffd|[|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||fffd||fffd|...|fffd||fffd||fffd||202||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngThisLedgerROW And _
           rngTarget.Column = mc_lngThisLedgerCOL Then
        If rngTarget.Value = "" Or rngTarget.Value = Space$(Len(rngTarget.Value)) Then
            GoTo LBL_END
        End If
        m_blnDirty = True
    
    ''|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd|i|fffd|A|fffd||fffd||fffd||fffd||fffd||111||389||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngOfficeCodeROW And _
           rngTarget.Column = mc_lngOfficeCodeCOL Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If strData = "" Or strData = Space$(Len(strData)) Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf InStr(1, strData, "*", vbTextCompare) > 0 Then
            rngTarget.Offset(0, 1).Value = ""
        Else
            Set rngLst = Range(mc_strOCodeCbLstCOL & mc_lngRowST, _
                                mc_strOCodeCbLstCOL & mc_lngWorkSheet_MAXROWINDEX) _
                                .Find(what:=strData, LookAt:=xlWhole)
            If rngLst Is Nothing Then
                m_blnSetupCellsInProgress = False
                GoTo LBL_END
            End If
            rngTarget.Offset(0, 1).Value = rngLst.Offset(0, 1).Value '|fffd||389||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
            Range(mc_strCurrencyRNG).Value = rngLst.Offset(0, 2).Value '|fffd||389||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||289||fffd|
        End If
        Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
        'WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByCountry Range(mc_strCountryRNG).Value, Range(mc_strWBSRNG), Range(mc_strWBSCbLstCOL & mc_lngRowST), True
        Else
            '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByOffice strData, Range(mc_strWBSRNG), Range(mc_strWBSCbLstCOL & mc_lngRowST), True
        End If
        
        '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||c42c|
        Set rngDst = Range(mc_strCcCodeRNG)
        Set rngLst = Range(mc_strCcCodeCbLstCOL & mc_lngRowST)
        s_SetConectCombo Range(mc_strOfficeCodeRNG), rngDst, rngLst, True
        rngDst.Value = "*"
        rngDst.Offset(0, 1).Value = ""
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        
        m_blnDirty = True
        m_blnSetupCellsInProgress = False

'    ''|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h
'    ElseIf rngTarget.Row = mc_lngProjectCodeROW And _
'           rngTarget.Column = mc_lngProjectCodeCOL Then
'        m_blnDirty = True

    ''|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|i|fffd|A|fffd||fffd||fffd||fffd||fffd||111||389||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngProjectNameROW And _
           rngTarget.Column = mc_lngProjectNameCOL Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf strData = "" Or strData = Space$(Len(strData)) Then
            rngTarget.Value = ""
            rngTarget.Offset(0, -1).Value = "*"
        Else
            Set rngLst = Range(mc_strPNameCbLstCOL & mc_lngRowST, _
                                mc_strPNameCbLstCOL & mc_lngWorkSheet_MAXROWINDEX) _
                                .Find(what:=strData, LookAt:=xlWhole)
            If rngLst Is Nothing Then
                m_blnSetupCellsInProgress = False
                GoTo LBL_END
            End If
            rngTarget.Offset(0, -1).Value = rngLst.Offset(0, -1).Value
            Range(mc_strCurrencyRNG).Value = rngLst.Offset(0, 1).Value
        End If
        Unprotect Password:=c_strSheetPWD '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
        'WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            '|fffd||fffd||fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByCountry Range(mc_strCountryRNG).Value, Range(mc_strWBSRNG), Range(mc_strWBSCbLstCOL & mc_lngRowST), True
        Else
            '|fffd|I|fffd|t|fffd|B|fffd|X|fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c|
            s_SetWBSComboByOffice strData, Range(mc_strWBSRNG), Range(mc_strWBSCbLstCOL & mc_lngRowST), True
        End If
        
        '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||c42c|
        Set rngDst = Range(mc_strCcCodeRNG)
        Set rngLst = Range(mc_strCcCodeCbLstCOL & mc_lngRowST)
        s_SetConectCombo Range(mc_strOfficeCodeRNG), rngDst, rngLst, True
        rngDst.Value = "*"
        rngDst.Offset(0, 1).Value = ""
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
        m_blnDirty = True
        m_blnSetupCellsInProgress = False

    ''|fffd|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd|
    ElseIf rngTarget.Row = mc_lngSTDateROW And _
           rngTarget.Column = mc_lngSTDateCOL Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd|I|fffd||fffd||fffd|N|fffd||fffd|
    ElseIf rngTarget.Row = mc_lngEDDateROW And _
           rngTarget.Column = mc_lngEDDateCOL Then
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd||fffd||fffd||fffd||216||681|i|fffd||389||fffd||fffd||fffd||fffd||92a8||fffd||fffd|R|fffd|[|fffd|h|fffd||18a||fffd||fffd||fffd||216||696||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngItemROW And _
           rngTarget.Column = mc_lngItemCOL Then
        ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
        m_blnSetupCellsInProgress = True
        If Cells(mc_lngThisLedgerROW, mc_lngThisLedgerCOL).Value = c_strPurposeJV And g_strMapACCode <> "" Then
            If fg_GetIndexFromTokenInCSV(g_strMapACCode, g_strLCodeIndispensableAccount) >= 0 Then
                ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                rngTarget.Activate
                m_blnSetupCellsInProgress = False
                GoTo LBL_END
            End If
        ElseIf rngTarget.Value = "" Then
'|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||34a||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||18a||fffd||fffd||fffd||216||696||fffd||fffd||251||382||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'            Cells(mc_lngAcCodeROW, mc_lngAcCodeCOL).Value = ""
'            Cells(mc_lngAcNameROW, mc_lngAcNameCOL).Value = ""
        Else
            Cells(mc_lngAcCodeROW, mc_lngAcCodeCOL).Value = g_strMapACCode
            Cells(mc_lngAcNameROW, mc_lngAcNameCOL).Value = g_strMapACName
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd||fffd||fffd|l
    ElseIf rngTarget.Row = mc_lngDetailROW And _
           rngTarget.Column = mc_lngDetailCOL Then
        m_blnDirty = True
    
    ''Expense Burden
    ElseIf rngTarget.Row = mc_lngWBSROW And _
           rngTarget.Column = mc_lngWBSCOL Then
        m_blnDirty = True
    
    ''|fffd||fffd||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd|i|fffd||389||fffd||fffd||fffd||fffd||92a8||fffd||fffd||216||696||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngAcCodeROW And _
           rngTarget.Column = mc_lngAcCodeCOL Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If strData = "" Or strData = Space$(Len(strData)) Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf InStr(1, strData, "*", vbTextCompare) > 0 Then
            rngTarget.Offset(0, 1).Value = ""
        Else
            For lngIndex = 0 To UBound(g_strAryAcCode)
                If rngTarget.Value = g_strAryAcCode(lngIndex) Then
                    rngTarget.Offset(0, 1).Value = g_strAryAcName(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcCode) Then
                rngTarget.Offset(0, 1).Value = ""
            End If
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd||fffd||fffd||fffd||216||696||fffd||fffd|i|fffd||389||fffd||fffd||fffd||fffd||92a8||fffd||fffd||216||683|R|fffd|[|fffd|h|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngAcNameROW And _
           rngTarget.Column = mc_lngAcNameCOL Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf strData = "" Or strData = Space$(Len(strData)) Then
            rngTarget.Value = ""
            rngTarget.Offset(0, -1).Value = "*"
        Else
            For lngIndex = 0 To UBound(g_strAryAcName)
                If rngTarget.Value = g_strAryAcName(lngIndex) Then
                    ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
    ''               If Cells(7???, 9???).Value = c_strPurposeJV Then
    ''                   If fg_GetIndexFromTokenInCSV(g_strAryAcCode(lngIndex), g_strLCodeIndispensableAccount) >= 0 Then
    ''                       ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
    ''                       MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    ''                       rngTarget.Activate
    ''                       goto LBL_End
    ''                   End If
    ''               End If
                    rngTarget.Offset(0, -1).Value = g_strAryAcCode(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcName) Then
                rngTarget.Offset(0, -1).Value = "*"
            End If
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|i|fffd||389||fffd||fffd||fffd||fffd||fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngCcCodeROW And _
           rngTarget.Column = mc_lngCcCodeCOL Then
        
        m_blnSetupCellsInProgress = True
        strData = rngTarget.Value
        If Len(rngTarget.Value) >= 3 Then
            strData = UCase$(Left$(rngTarget.Value, 3))
            If strData = "NKS" Then
                strData = strData & Mid(rngTarget.Value, 4)
            Else
                strData = UCase$(rngTarget.Value)
            End If
        End If
        rngTarget.Value = strData
        If strData = "" Or strData = Space$(Len(strData)) Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf InStr(1, strData, "*", vbTextCompare) > 0 Then
            rngTarget.Offset(0, 1).Value = ""
        Else
            Set rngLst = f_GetEndCel(Range(mc_strCcCodeCbLstCOL & mc_lngRowST).Row, _
                                     Range(mc_strCcCodeCbLstCOL & mc_lngRowST).Column)
            lngTokenIdx = rngLst.Row - mc_lngRowST
            Set rngLst = Range(mc_strCcCodeCbLstCOL & mc_lngRowST)
            If Not rngLst Is Nothing Then
                For lngIndex = 0 To lngTokenIdx
                    If rngTarget.Value = rngLst.Offset(lngIndex, 0).Value Then
                        rngTarget.Offset(0, 1).Value = rngLst.Offset(lngIndex, 1).Value
                        Exit For
                    End If
                Next
            End If
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||389||fffd||fffd||fffd||fffd||fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|j
    ElseIf rngTarget.Row = mc_lngCcNameROW And _
           rngTarget.Column = mc_lngCcNameCOL Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If InStr(1, strData, "*", vbTextCompare) > 0 Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf strData = "" Or strData = Space$(Len(strData)) Then
            rngTarget.Value = ""
            rngTarget.Offset(0, -1).Value = "*"
        Else
            Set rngLst = f_GetEndCel(Range(mc_strCcCodeCbLstCOL & mc_lngRowST).Row, _
                                     Range(mc_strCcCodeCbLstCOL & mc_lngRowST).Column)
            lngTokenIdx = rngLst.Row - mc_lngRowST
            Set rngLst = Range(mc_strCcCodeCbLstCOL & mc_lngRowST)
            If Not rngLst Is Nothing Then
                For lngIndex = 0 To lngTokenIdx
                    If rngTarget.Value = rngLst.Offset(lngIndex, 1).Value Then
                        rngTarget.Offset(0, -1).Value = rngLst.Offset(lngIndex, 0).Value
                        Exit For
                    End If
                Next
            End If
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    
    ''|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd|R|fffd|[|fffd|h
    ElseIf rngTarget.Row = mc_lngLlinkCodeROW And _
           rngTarget.Column = mc_lngLlinkCodeCOL Then
        strData = rngTarget.Value
        m_blnSetupCellsInProgress = True
        If InStr(1, strData, "*", vbTextCompare) > 0 Or Len(strData) > 14 Then
            m_blnSetupCellsInProgress = False
            GoTo LBL_END
        ElseIf strData = "" Or strData = Space$(Len(strData)) Then
            rngTarget.Value = ""
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = False
    
    ''Evidence No.
    ElseIf rngTarget.Row = mc_lngEviNoROW And _
           rngTarget.Column = mc_lngEviNoCOL Then
        m_blnDirty = True
    
    ''Check No.
    ElseIf rngTarget.Row = mc_lngChkNoROW And _
           rngTarget.Column = mc_lngChkNoCOL Then
        m_blnDirty = True
    
    ''NK/JV
    ElseIf rngTarget.Row = mc_lngNkJvROW And _
           rngTarget.Column = mc_lngNkJvCOL Then
        strData = UCase$(rngTarget.Value)
        If strData = Space$(Len(strData)) Then strData = ""
        If strData <> "" And strData <> "NK" And strData <> "JV" Then
            MsgBox c_strMSG_NKJV, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            GoTo LBL_END
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        rngTarget.Value = strData
        m_blnSetupCellsInProgress = False
    
    ''Claim
    ElseIf rngTarget.Row = mc_lngNkJvROW And _
           rngTarget.Column = mc_lngClaimCOL Then
        strData = UCase$(rngTarget.Value)
        If strData = Space$(Len(strData)) Then strData = ""
        If strData <> "" And strData <> "Y" And strData <> "N" Then
            MsgBox c_strMSG_CLAIM, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            GoTo LBL_END
        End If
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        rngTarget.Value = strData
        m_blnSetupCellsInProgress = False
    
    ''Debit|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||182||314||348||342||303|`|fffd|F|fffd|b|fffd|N|fffd|j
    ElseIf rngTarget.Row = mc_lngDebitLowROW And _
           rngTarget.Column = mc_lngDebitLowCOL Then
        m_blnDirty = True
    
    ''Debit|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||182||314||348||342||303|`|fffd|F|fffd|b|fffd|N|fffd|j
    ElseIf rngTarget.Row = mc_lngDebitHighROW And _
           rngTarget.Column = mc_lngDebitHighCOL Then
        m_blnDirty = True
    
    ''Credit|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||182||314||348||342||303|`|fffd|F|fffd|b|fffd|N|fffd|j
    ElseIf rngTarget.Row = mc_lngCreditLowROW And _
           rngTarget.Column = mc_lngCreditLowCOL Then
        m_blnDirty = True
    
    ''Credit|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||182||314||348||342||303|`|fffd|F|fffd|b|fffd|N|fffd|j
    ElseIf rngTarget.Row = mc_lngCreditHighROW And _
           rngTarget.Column = mc_lngCreditHighCOL Then
        m_blnDirty = True
    End If
    
    f_onChangeCell = True '|fffd||fffd||fffd||fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|Z|fffd|b|fffd|g
    
LBL_END:
    Set rngDst = Nothing
    Set rngLst = Nothing
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Search|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdSearch_Click()
    Dim strMessage As String
    Dim lngRowIndex As Long

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData(strMessage) Then
        MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
'        cmdSearch.Visible = True
        Exit Sub
    End If
    
'    sg_SetScreenUpdate False
    
'    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
'    s_ClearContentsBody
    
    lngRowIndex = mc_lngRowST
    Do While Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = True And lngRowIndex <= 65536
        Range("D" & lngRowIndex & ":E" & lngRowIndex).MergeCells = False
        lngRowIndex = lngRowIndex + 1
    Loop
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
    s_SearchData
    
    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    Application.GoTo Range("a" & mc_lngRowST), Scroll:=True
    
'    cmdSearch.Visible = True
'    sg_SetScreenUpdate True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    Dim lngRowIndex As Long
    
    sg_SetScreenUpdate False
'    s_ClearContentsALL
    sg_SetScreenUpdate True
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS, "------End LEDGER [" & g_strArywsName(13) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Extract Results|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||14c82||fffd||fffd|o|fffd||fffd||fffd||115||283|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||155|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/28 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub cmdExtract_Click()
    Dim strSBkName As String
    Dim strDBkName As String
    Dim strSName As String
    Dim strDName As String
    Dim rngCell As Range
    Dim shtSSheet As Worksheet
    Dim shtDSheet As Worksheet
    
    sg_SetScreenUpdate False
    
    strSBkName = ThisWorkbook.Name '|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||64fe|
    strSName = Me.Name '|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
    Set shtSSheet = Me '|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
   
    '|fffd|V|fffd|K|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||c42c|
    ThisWorkbook.Worksheets.Add after:=shtSSheet
    Set shtDSheet = ActiveSheet
    
    '|fffd|V|fffd|K|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||752||fffd|
    strDName = "Results" '|fffd|R|fffd|s|fffd|[|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
    shtDSheet.Name = strDName
    
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd|R|fffd|s|fffd|[
    shtSSheet.Range(mc_strColST & mc_lngTargetYearROW, mc_strCreditTotalRNG).Copy
    
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd|y|fffd|[|fffd|X|fffd|g
    shtDSheet.Range(mc_strColST & mc_lngTargetYearROW).Select
    shtDSheet.Paste
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|R|fffd|s|fffd|[
    Set rngCell = f_GetEndCel(mc_lngRowST, mc_lngColST)
    If Not rngCell Is Nothing Then
        shtSSheet.Range(mc_strColST & mc_lngRowST, mc_strColEND & rngCell.Row).Copy
    Else
        shtSSheet.Range(mc_strColST & mc_lngRowST, mc_strColEND & mc_lngRowST).Copy
    End If
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|y|fffd|[|fffd|X|fffd|g
    shtDSheet.Range(mc_strColST & mc_lngRowST).Select
    shtDSheet.Paste
    
    '|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    Application.CutCopyMode = False
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|V|fffd|K|fffd|u|fffd|b|fffd|N|fffd||248||693||fffd|
    shtDSheet.Move
    
    '|fffd|R|fffd|s|fffd|[|fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||64fe|
    strDBkName = ActiveWorkbook.Name
    '|fffd|V|fffd|K|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd||fffd||752||fffd|
'    Application.ActiveWindow.Caption = "Results " & Format(Time, "hh:mm:ss")

    Application.ActiveWindow.Zoom = 75
    
    '|fffd||64ea||fffd|s|fffd||fffd|\|fffd||fffd|
    ActiveSheet.Range("A1").Select
    
    Workbooks(strSBkName).Activate
    Worksheets(strSName).Activate
    Workbooks(strDBkName).Activate
    Worksheets(strDName).Activate
    
    Set rngCell = Nothing
    Set shtSSheet = Nothing
    Set shtDSheet = Nothing
    
    sg_SetScreenUpdate True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|}|fffd|E|fffd|X|fffd|E|fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||303|v|fffd||fffd||fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Boolean |fffd|^> |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||313||18e||fffd||fffd|||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/19 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
    
    If Target.Column <> mc_lngItemCOL Or Target.Row <> mc_lngItemROW Then
        Cancel = False
        Exit Sub
    End If

    If Target.Column = mc_lngItemCOL And Target.Row = mc_lngItemROW Then
        g_strMapACCode = ""
        g_strMapACName = ""
        g_strMapWarn = ""
        
        g_objDscrptCmdBar.ShowPopup   ''Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||315|\|fffd||fffd|
        Cancel = True                 ''|fffd||fffd||fffd||fffd||303||fffd||fffd|j|fffd||fffd||fffd|[|fffd||314||fffd|\|fffd||fffd|
        Exit Sub
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If
    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If

    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo LBL_ERR
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

LBL_ERR:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/13 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/19 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_ClearContentsALL()

    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
    s_ClearContentsHeader
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
    s_ClearContentsBody
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/19 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2002/04/09 : Knowlbo m.o : SS|fffd|E|fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub _
s_ClearContentsHeader()

    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
    Range(mc_strSTDateRNG).ClearContents ''|fffd|J|fffd|n|fffd|N|fffd||fffd||fffd||fffd|
    Range(mc_strEDDateRNG).ClearContents ''|fffd|I|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|
    Range(mc_strItemRNG).Value = "" ''Item
    Range(mc_strDetailRNG).Value = "" ''Detail
    
    Range(mc_strOfficeCodeRNG).Value = "" ''Office Code
    Range(mc_strProjectNameRNG).Value = "" ''Project Name
    
    Range(mc_strWBSRNG).Value = "" ''Expense Burden
    Range(mc_strAcCodeRNG).Value = "" ''Account Code
    Range(mc_strAcNameRNG).Value = "" ''Account Name
    Range(mc_strCcCodeRNG).Value = "" ''Connection Code
    Range(mc_strCcNameRNG).Value = "" ''Connetction Name
    Range(mc_strLlinkCodeRNG).Value = "" ''Ledger INK Code
    Range(mc_strEviNoRNG).Value = "" ''Evidence No. Check No.
    Range(mc_strChkNoRNG).Value = "" ''Check No. Check No.
    Range(mc_strNkJvRNG).Value = "" ''NK/JV
    Range(mc_strClaimRNG).Value = "" ''Claim
    Range(mc_strDebitLowRNG, mc_strCreditLowRNG).ClearContents ''Debit|fffd||fffd||fffd||fffd||fffd|ACredit|fffd||fffd||fffd||fffd|
    Range(mc_strDebitHighRNG, mc_strCreditHighRNG).ClearContents ''Debit|fffd||fffd||fffd||fffd|ACredit|fffd||fffd||fffd|
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/19 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_ClearContentsBody()

    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
'    Range(mc_strColST & mc_lngRowST, mc_strColEND & m_lngModfyMAX_ROWINDEX).ClearContents
    If m_lngLastDataNums > 0 Then
        If m_lngLastDataNums >= mc_lngWorkSheet_MAXROWINDEX Then
            m_lngLastDataNums = mc_lngWorkSheet_MAXROWINDEX - mc_lngRowST + 1
        End If
        Range(mc_strColST & mc_lngRowST, mc_strColEND & (mc_lngRowST + m_lngLastDataNums - 1)).ClearContents
    End If
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|L|fffd||fffd||fffd||fffd|Book Code|fffd||312||fffd||fffd|o|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd||fffd|Book|fffd||311||fffd||fffd||742||fffd||fffd|m|fffd|F|fffd||fffd||fffd||112||289||742||191||44a0||fffd||656a||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd|L|fffd||fffd||fffd||fffd|Book Code|fffd||303|J|fffd||fffd||fffd|}|fffd||fffd||602||8576||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/27 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/20 : Knowlbo m.o : SS|fffd||151||389||fffd|
'   2003/04/15 : Knowlbo m.o : |fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Function f_SelectBook( _
 _
) As String
    Dim strDTbl As String
    
    f_SelectBook = ""
    strDTbl = UCase$(Left$(Range(mc_strInputLedgerCodeRNG).Value, 2))
    
    If InStr(1, Range(mc_strInputLedgerCodeRNG).Value, "*", vbTextCompare) < 1 Then
        '|fffd|P|fffd||18e|w|fffd||fffd||30f||a347|
        Select Case strDTbl
            Case "BB"
                strDTbl = c_strTBL_BankBook & ","
            Case "CB"
                strDTbl = c_strTBL_CashBook & ","
            Case "TR"
                strDTbl = c_strTBL_Transfer & ","
            Case Else
                strDTbl = ""
        End Select
    Else
        '|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||30f||a347|
        Select Case strDTbl
            Case "BB", "B*"
                strDTbl = c_strTBL_BankBook & ","
            Case "CB", "C*"
                strDTbl = c_strTBL_CashBook & ","
            Case "TR", "T*"
                strDTbl = c_strTBL_Transfer & ","
            Case "*"
                strDTbl = c_strTBL_CashBook & "," _
                            & c_strTBL_BankBook & "," _
                            & c_strTBL_Transfer & ","
            Case Else
                strDTbl = ""
        End Select
    End If
    
    f_SelectBook = strDTbl
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> SQL|fffd||fffd|
'   (2)<Boolean |fffd|^> True : |fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd|^FALSE : |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||14c||fffd||fffd|a|fffd||fffd||fffd|E|fffd|U|fffd||592||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/26 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/20 : Knowlbo m.o : SS|fffd||151||389||fffd|
'   2003/04/15 : Knowlbo m.o : |fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Function f_SearchExec( _
    ByVal strSQL As String, _
    ByVal blnExec As Boolean _
) As String
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim strMSG As String
    Dim lngRowIndex As Long
    Dim rngCel As Range
    
    f_SearchExec = 0
    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd||fffd||fffd||fffd||752||fffd|
    sg_setDBACondition adoCn, adoRs, objdba
    
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe|
    If Not blnExec Then
        objdba.SQLString = strSQL
        lngRet = objdba.openRecordset(adoCn, adoRs)
        If lngRet <> 0 Then
            strMSG = c_strMSG_DB_RECSETFAIL
            GoTo LBL_ERR
        End If
        
        '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
        f_SearchExec = adoRs.Fields(m_strCAli).Value
        Call objdba.closeRecordset(adoRs)
        On Error GoTo 0
        Call objdba.closeADOConnection(adoCn)
        Set adoRs = Nothing
        Set adoCn = Nothing
        Set objdba = Nothing
        Exit Function
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
    objdba.SQLString = strSQL
    lngRet = objdba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
'    sg_SetScreenUpdate False
    m_blnSetupCellsInProgress = True '|fffd|Z|fffd||fffd||fffd||30d|X|fffd|V|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|}|fffd||fffd|
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd|V|fffd|[|fffd|g|fffd||30d||14f|I|fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe|
    Set rngCel = f_GetEndCel(mc_lngRowST, mc_lngColST)
    If rngCel Is Nothing Then
        lngRowIndex = mc_lngRowST
    Else
        lngRowIndex = rngCel.Row + 1
    End If
    
    Do Until adoRs.EOF
        Cells(lngRowIndex, mc_strLedgerDateCOL) = adoRs.Fields(mc_strDbLedgerDate).Value '
        Cells(lngRowIndex, mc_strLedgerCodeCOL) = adoRs.Fields(mc_strDbLedgerCode).Value '
        Cells(lngRowIndex, mc_strItemCOL) = adoRs.Fields(mc_strDbDescription).Value '
        Cells(lngRowIndex, mc_strDetailCOL) = adoRs.Fields(mc_strDbDetails).Value '
        If Cells(lngRowIndex, mc_strDetailCOL) = "" Then Cells(lngRowIndex, mc_strDetailCOL) = " "
        Cells(lngRowIndex, mc_strOCodeCOL) = adoRs.Fields(mc_strDbOfficeCode).Value '
        Cells(lngRowIndex, mc_strPNameCOL) = adoRs.Fields(mc_strDbPName).Value '
        Cells(lngRowIndex, mc_strWBSCOL) = adoRs.Fields(mc_strDbWBSCode).Value '
        If Cells(lngRowIndex, mc_strWBSCOL) = "" Then Cells(lngRowIndex, mc_strWBSCOL) = " "
        Cells(lngRowIndex, mc_strAcCodeCOL) = adoRs.Fields(mc_strDbAcCode).Value '
        Cells(lngRowIndex, mc_strAcNameCOL) = adoRs.Fields(mc_strDbAcName).Value '
        Cells(lngRowIndex, mc_strCcCodeCOL) = adoRs.Fields(mc_strDbConectCode).Value '
        Cells(lngRowIndex, mc_strCcNameCOL) = adoRs.Fields(mc_strDbConectName).Value '
        Cells(lngRowIndex, mc_strLlinkCodeCOL) = adoRs.Fields(mc_strDbLedgerLinkCode).Value '
        Cells(lngRowIndex, mc_strEviNoCOL) = adoRs.Fields(mc_strDbEviNo).Value '
        Cells(lngRowIndex, mc_strChkNoCOL) = adoRs.Fields(mc_strDbCheckNo).Value '
        Cells(lngRowIndex, mc_strNkJvCOL) = adoRs.Fields(mc_strDbNKJV).Value '
        If adoRs.Fields(mc_strDbClaim).Value = "1" Then
            Cells(lngRowIndex, mc_strClaimCOL) = "Y" '
        Else
            Cells(lngRowIndex, mc_strClaimCOL) = "N" '
        End If
        Cells(lngRowIndex, mc_strDebitCOL) = adoRs.Fields(mc_strDbPaid).Value '
        Cells(lngRowIndex, mc_strCreditCOL) = adoRs.Fields(mc_strDbReceived).Value '
        Cells(lngRowIndex, mc_strRecIDCOL) = adoRs.Fields(mc_strDbID).Value '
        
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
        lngRowIndex = lngRowIndex + 1
    Loop
    
    If rngCel Is Nothing Then
        f_SearchExec = lngRowIndex - mc_lngRowST
    Else
        f_SearchExec = lngRowIndex - rngCel.Row - 1
    End If
    
LB_End:
    m_blnSetupCellsInProgress = False
'    sg_SetScreenUpdate True
    
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set rngCel = Nothing
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "f_SearchExec:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_SearchExec", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   SQL|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd|a|fffd||fffd||fffd|E|fffd|U|fffd||591||44a0||fffd||303|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|
'   (2)<Boolean |fffd|^> True : |fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd|^False : |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||303|J|fffd|E|fffd||fffd||fffd|g
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)SQL|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> LED14|fffd||30c||fffd||fffd||fffd||fffd|pSQL|fffd||fffd||fffd|i|fffd||fffd||fffd|a|fffd||fffd||fffd|E|fffd|U|fffd||591||44a0||fffd||fffd||fffd|j
'  |fffd||fffd||fffd|l
'
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/14 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/07/07 : Knowlbo sho : FiscalYear|fffd||fffd||fffd||fffd|,LedgerCode|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2004/01/22 : Knowlbo sho : TargetMonth|fffd||fffd||fffd||fffd||fffd||1c9||fffd|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Function f_SetupSqlForSerchAccount( _
    ByVal strDtb As String, _
    ByVal blnFlg As Boolean _
) As String

    Dim strDa As String
    Dim strMtb As String
    Dim strMa As String
    Dim strSQL As String
    Dim strDat As String
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim datSDate As Date
    Dim intSYear As Integer
    Dim intSMonth As Integer
    Dim datEDate As Date
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    f_SetupSqlForSerchAccount = ""
    
    Select Case strDtb
        Case m_strBDTbl
            strDa = m_strBDAli
            strMtb = m_strBMTbl
            strMa = m_strBMAli
            
        Case m_strCDTbl
            strDa = m_strCDAli
            strMtb = m_strCMTbl
            strMa = m_strCMAli
            
        Case m_strTDTbl
            strDa = m_strTDAli
            strMtb = m_strTMTbl
            strMa = m_strTMAli
            
        Case Else
    End Select
    
    If blnFlg Then
        '|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30e||64fe|
        strSQL = "SELECT " & strDa & ".*, " & strMa & ".Currency, " & m_strPMAli & ".ProjectName "
    Else
        '|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||30e||64fe|
        strSQL = "SELECT COUNT(*) AS " & m_strCAli
    End If
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & "." & strDtb & " " & strDa & ", " '|fffd|f|fffd|[|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd|
    strSQL = strSQL & c_NKFAOwner & "." & strMtb & " " & strMa & ", " '|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd|
    strSQL = strSQL & c_NKFAOwner & "." & m_strPMTbl & " " & m_strPMAli  '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|}|fffd|X|fffd|^|fffd|e|fffd|[|fffd|u|fffd||fffd|
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & strMa & ".OfficeCode = " & strDa & ".OfficeCode"
    strSQL = strSQL & " AND " & strMa & ".LedgerCode = " & strDa & ".LedgerCode"
    strSQL = strSQL & " AND " & m_strPMAli & ".OfficeCode = " & strDa & ".OfficeCode"
    
    ''LedgerCode 2003/07/07 Add Sho
    strDat = UCase$(Range(mc_strInputLedgerCodeRNG).Value)
    If InStr(strDat, "*") = 0 Then
        strSQL = strSQL & " AND " & strMa & ".LedgerCode = " & fg_AddSingleQuotation(strDat)
    End If

'    '|fffd||289||fffd| *
'    strDat = Range(mc_strCurrencyRNG).Value
'    s_CnvAstToPer strDat
'    strSql = strSql & " AND UPPER(" & strMa & ".Currency) LIKE UPPER(" & fg_AddSingleQuotation(strDat) & ")"
'
    '|fffd||289||fffd|
    strDat = Range(mc_strCurrencyRNG).Value
    strSQL = strSQL & " AND UPPER(" & strMa & ".Currency) = UPPER(" & fg_AddSingleQuotation(strDat) & ")"
    
    '|fffd||44a0||fffd||656a|
    If Range(mc_strThisLedgerRNG).Value = c_strPurposeNK Then
        strSQL = strSQL & " AND " & strMa & ".Purpose = '0'"
    ElseIf Range(mc_strThisLedgerRNG).Value = c_strPurposeJV Then
        strSQL = strSQL & " AND " & strMa & ".Purpose = '1'"
    End If
    
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    datEDate = fg_GetEndOfYear(CInt(Range(mc_strTargetYearRNG).Value))
    datSDate = fg_GetStartOfYear(CInt(Range(mc_strTargetYearRNG).Value))
    intSYear = Year(datSDate)
    intSMonth = Month(datSDate)
    
    If Range(mc_strTargetMonthFromRNG).Value <> "" Then
        strDat = intSYear & "/" & Range(mc_strTargetMonthFromRNG).Value & "/01"
        If Range(mc_strTargetMonthFromRNG).Value < intSMonth Then
            ' |fffd||fffd||fffd||4c382||fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|v|fffd||fffd||fffd|X
            strDat = (intSYear + 1) & "/" & Range(mc_strTargetMonthFromRNG).Value & "/01"
        End If
        If Range(mc_strTargetMonthToRNG).Value <> "" Then
            strSQL = strSQL & " AND " & strDa & ".TargetPeriod >= " & fg_AddSingleQuotation(strDat)
            strDat = intSYear & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
            If Range(mc_strTargetMonthToRNG).Value < intSMonth Then
                ' |fffd||fffd||fffd||4c382||fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|v|fffd||fffd||fffd|X
                strDat = (intSYear + 1) & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
            End If
            strSQL = strSQL & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
        Else
            strSQL = strSQL & " AND " & strDa & ".TargetPeriod = " & fg_AddSingleQuotation(strDat)
        End If
    Else
        strDat = CStr(Format(datSDate, "yyyy/mm/dd"))
        strSQL = strSQL & " AND " & strDa & ".TargetPeriod >= " & fg_AddSingleQuotation(strDat)
        If Range(mc_strTargetMonthToRNG).Value <> "" Then
            strDat = intSYear & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
            If Range(mc_strTargetMonthToRNG).Value < intSMonth Then
                ' |fffd||fffd||fffd||4c382||fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|v|fffd||fffd||fffd|X
                strDat = (intSYear + 1) & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
            End If
            strSQL = strSQL & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
        Else
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
            strDat = CStr(Format(datEDate, "yyyy/mm")) & "/01"
            strSQL = strSQL & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
        End If
    End If

'    ''FiscalYear (Target Period) 2003/07/07 Add Sho
'    ''strDat = Range(mc_strTargetYearRNG).Value & "/04/01"
'    ''strSql = strSql & " AND " & strDa & ".TargetPeriod >= " & fg_AddSingleQuotation(strDat)
'    ''strDat = (Range(mc_strTargetYearRNG).Value + 1) & "/03/01 "
'    ''strSql = strSql & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
'    ''TargetMonth 2004/01/22 Modify Sho
'    If Range(mc_strTargetMonthFromRNG).Value <> "" Then
'        strDat = Range(mc_strTargetYearRNG).Value & "/" & Range(mc_strTargetMonthFromRNG).Value & "/01"
'        If Range(mc_strTargetMonthFromRNG).Value < 4 Then
'            strDat = (Range(mc_strTargetYearRNG).Value + 1) & "/" & Range(mc_strTargetMonthFromRNG).Value & "/01"
'        End If
'        If Range(mc_strTargetMonthToRNG).Value <> "" Then
'            strSQL = strSQL & " AND " & strDa & ".TargetPeriod >= " & fg_AddSingleQuotation(strDat)
'            strDat = Range(mc_strTargetYearRNG).Value & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
'            If Range(mc_strTargetMonthToRNG).Value < 4 Then
'                strDat = (Range(mc_strTargetYearRNG).Value + 1) & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
'            End If
'            strSQL = strSQL & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
'        Else
'            strSQL = strSQL & " AND " & strDa & ".TargetPeriod = " & fg_AddSingleQuotation(strDat)
'        End If
'    Else
'        strDat = Range(mc_strTargetYearRNG).Value & "/04/01"
'        strSQL = strSQL & " AND " & strDa & ".TargetPeriod >= " & fg_AddSingleQuotation(strDat)
'        If Range(mc_strTargetMonthToRNG).Value <> "" Then
'            strDat = Range(mc_strTargetYearRNG).Value & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
'            If Range(mc_strTargetMonthToRNG).Value < 4 Then
'                strDat = (Range(mc_strTargetYearRNG).Value + 1) & "/" & Range(mc_strTargetMonthToRNG).Value & "/01"
'            End If
'            strSQL = strSQL & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
'        Else
'            strDat = (Range(mc_strTargetYearRNG).Value + 1) & "/03/01 "
'            strSQL = strSQL & " AND " & strDa & ".TargetPeriod <= " & fg_AddSingleQuotation(strDat)
'        End If
'    End If
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    '|fffd|o|fffd|[|fffd|N|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j2003/07/07 Modify Sho
    If Range(mc_strSTDateRNG).Value <> "" Then
        strDat = CStr(Range(mc_strSTDateRNG).Value)
        strSQL = strSQL & " AND " & strDa & ".LedgerDate >= " & fg_AddSingleQuotation(strDat)
    End If
    
    '|fffd|o|fffd|[|fffd|N|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|j
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    strDat = CStr(Format(datEDate, "yyyy/mm/dd"))
'    strDat = (Range(mc_strTargetYearRNG).Value + 1) & "/03/31 "
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    If Range(mc_strEDDateRNG).Value <> "" And strDat > CStr(Range(mc_strEDDateRNG).Value) Then
        strDat = CStr(Range(mc_strEDDateRNG).Value)
    End If
    strSQL = strSQL & " AND " & strDa & ".LedgerDate <= " & fg_AddSingleQuotation(strDat)
    
    '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h *
    strDat = Range(mc_strOfficeCodeRNG).Value
    If strDat = String$(Len(strDat), "*") Then
        strDat = "__" & Mid$(Range(mc_strOCodeCbLstCOL & mc_lngRowST).Offset(1, 0).Value, 3, 2) & "%"
    Else
        s_CnvAstToPer strDat
    End If
    strSQL = strSQL & " AND UPPER(" & strDa & ".OfficeCode) LIKE UPPER(" & _
             fg_AddSingleQuotation(strDat) & ")"
    
    'WBS|fffd|R|fffd|[|fffd|h *
    strDat = Range(mc_strWBSRNG).Value
    If strDat <> "" And strDat <> String$(Len(strDat), "*") Then
        s_CnvAstToPer strDat
        strSQL = strSQL & " AND UPPER(" & strDa & ".WBSCode) LIKE UPPER(" & _
                 fg_AddSingleQuotation(strDat) & ")"
    End If
    
    '|fffd||fffd||fffd||fffd||216||fffd|
    strDat = Range(mc_strItemRNG).Value
    If strDat <> "" Then
        strSQL = strSQL & " AND UPPER(" & strDa & ".Description) = UPPER(" & _
                 fg_AddSingleQuotation(strDat) & ")"
    End If
    
    '|fffd||fffd||fffd||fffd||216||682||30f||68d||fffd|
    strDat = Range(mc_strDetailRNG).Value
    If strDat <> "" Then
        strSQL = strSQL & " AND UPPER(" & strDa & ".Details) = UPPER(" & _
                 fg_AddSingleQuotation(strDat) & ")"
    End If
    
    'Account|fffd|R|fffd|[|fffd|h *
    strDat = Range(mc_strAcCodeRNG).Value
    If strDat <> "" And strDat <> String$(Len(strDat), "*") Then
        s_CnvAstToPer strDat
        strSQL = strSQL & " AND UPPER(" & strDa & ".AccountCode) LIKE UPPER(" & _
                 fg_AddSingleQuotation(strDat) & ")"
    End If
    
    'Connection|fffd|R|fffd|[|fffd|h *
    strDat = Range(mc_strCcCodeRNG).Value
    If strDat <> "" And strDat <> String$(Len(strDat), "*") Then
        s_CnvAstToPer strDat
        strSQL = strSQL & " AND UPPER(" & strDa & ".ConnectionCode) LIKE UPPER(" & _
                 fg_AddSingleQuotation(strDat) & ")"
    End If
    
    'Ledger Link|fffd|R|fffd|[|fffd|h
    strDat = Range(mc_strLlinkCodeRNG).Value
    If strDat <> "" And strDat <> String$(Len(strDat), "*") Then
        strSQL = strSQL & " AND UPPER(" & strDa & ".LedgerLinkCode) = UPPER(" & _
                 fg_AddSingleQuotation(strDat) & ")"
    End If
    
    'Evidence No.
    If Range(mc_strEviNoRNG).Value <> "" Then
        strSQL = strSQL & " AND " & strDa & ".EviNo = " & Range(mc_strEviNoRNG).Value
    End If
    
    'Check No.
    If Range(mc_strChkNoRNG).Value <> "" Then
        strSQL = strSQL & " AND " & strDa & ".CheckNo = " & Range(mc_strChkNoRNG).Value
    End If
    
    'NK/JV
    If Range(mc_strNkJvRNG).Value <> "" Then
        strSQL = strSQL & " AND UPPER(" & strDa & ".NKJV) = UPPER(" & _
                 fg_AddSingleQuotation(Range(mc_strNkJvRNG).Value) & ")"
    End If
    
    'Claim
    If Range(mc_strClaimRNG).Value = "Y" Then
        strSQL = strSQL & " AND " & strDa & ".Claim = '1'"
    ElseIf Range(mc_strClaimRNG).Value = "N" Then
        strSQL = strSQL & " AND " & strDa & ".Claim = '0'"
    End If
    
    'Debit
    If Range(mc_strDebitLowRNG).Value <> "" Then
        strSQL = strSQL & " AND " & strDa & ".Paid >= " & Range(mc_strDebitLowRNG).Value
    End If
    If Range(mc_strDebitHighRNG).Value <> "" Then
        strSQL = strSQL & " AND " & strDa & ".Paid <= " & Range(mc_strDebitHighRNG).Value
    End If
    
    'Credit
    If Range(mc_strCreditLowRNG).Value <> "" Then
        strSQL = strSQL & " AND " & strDa & ".Received >= " & Range(mc_strCreditLowRNG).Value
    End If
    If Range(mc_strCreditHighRNG).Value <> "" Then
        strSQL = strSQL & " AND " & strDa & ".Received <= " & Range(mc_strCreditHighRNG).Value
    End If
    
    If blnFlg Then
        '|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd||a347||fffd||30e|w|fffd||fffd|
        strSQL = strSQL & " ORDER BY " & strDa & ".LedgerDate, " & strDa & ".OfficeCode, " & _
                 strDa & ".WBSCode, " & strDa & ".AccountCode, " & strDa & ".ConnectionCode "
    End If
    
    f_SetupSqlForSerchAccount = strSQL

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Bank Book|fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Bank Book|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10e||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/27 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/03/20 : Knowlbo m.o : SS|fffd||151||389||fffd|
'   2003/04/15 : Knowlbo m.o : |fffd|e|fffd||fffd||fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SearchData()

    Dim strSearchTbl As String
    Dim strCriteria As String
    Dim strDtblName As String
    Dim strSQL As String
    Dim lngNums As Long
    Dim lngIdx As Long
    
    ''|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|A
    sg_SetScreenUpdate False
    s_ClearContentsBody
    m_lngLastDataNums = 0
    Range(mc_strDebitTotalRNG).Value = ""
    Range(mc_strCreditTotalRNG).Value = ""
    cmdExtract.Enabled = False
'    sg_SetScreenUpdate True
    
    '|fffd|V|fffd|[|fffd|g|fffd||253||fffd||fffd||342||fffd||fffd||a0bd||fffd||44a0||fffd||50d||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||117|L|fffd||fffd||fffd||202||fffd||fffd||302||302||752||fffd||fffd|o
    strSearchTbl = f_SelectBook
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    lngNums = 0
    lngIdx = 0
    Do
        strDtblName = fg_GetTokenFromIndexInCSV(lngIdx, strSearchTbl)
        '|fffd|V|fffd|[|fffd|g|fffd||253||fffd||fffd||342||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd|SQL|fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd||fffd||fffd||fffd||fffd|
        strSQL = ""
        Select Case strDtblName
            Case m_strBDTbl
                strSQL = f_SetupSqlForSerchAccount(m_strBDTbl, False)
                
            Case m_strCDTbl
                strSQL = f_SetupSqlForSerchAccount(m_strCDTbl, False)
                
            Case m_strTDTbl
                strSQL = f_SetupSqlForSerchAccount(m_strTDTbl, False)
                
            Case Else
        End Select
        If strSQL <> "" Then
            lngNums = lngNums + f_SearchExec(strSQL, False)
        End If
        lngIdx = lngIdx + 1
    Loop While strDtblName <> ""
    
        '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||315|\|fffd||fffd||fffd||18c||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||30a|m|fffd|F
        Select Case lngNums
            Case Is <= 0 '|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||202||fffd||fffd||a347|
                MsgBox c_strMSG_SEACH_NFound, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                Exit Sub
            Case Is >= mc_lngSearchNumMAX '|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        
                MsgBox c_strMSG_SEACH_MorePFX & mc_lngSearchNumMAX & c_strMSG_SEACH_MoreSFX, _
                                vbExclamation Or vbOKOnly, c_strNAME_SYSTEM
                Exit Sub
            Case Is >= mc_lngSearchNumQ '|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
                If vbNo = MsgBox(c_strMSG_SEACH_GoPFX & lngNums & c_strMSG_SEACH_GoSFX, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                    Exit Sub '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~
                End If
            Case Else '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd|K|fffd||282||30f||a347|
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
        End Select

    cmdExtract.Enabled = True '|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||283|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||155|\|fffd||fffd||fffd||142||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
    If lngNums >= mc_lngSearchNumQ Then
        sg_SetScreenUpdate True
    Else
        sg_SetScreenUpdate False
    End If
    lngNums = 0
    lngIdx = 0
    Do
        strDtblName = fg_GetTokenFromIndexInCSV(lngIdx, strSearchTbl)
        '|fffd|V|fffd|[|fffd|g|fffd||253||fffd||fffd||342||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd|SQL|fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d90||fffd||fffd||fffd||fffd||fffd|
        strSQL = ""
        '|fffd|w|fffd||fffd||30f||fffd||fffd||fffd||fffd||242||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|g|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
        Select Case strDtblName
            Case m_strBDTbl
                strSQL = f_SetupSqlForSerchAccount(m_strBDTbl, True)
                
            Case m_strCDTbl
                strSQL = f_SetupSqlForSerchAccount(m_strCDTbl, True)
                
            Case m_strTDTbl
                strSQL = f_SetupSqlForSerchAccount(m_strTDTbl, True)
                
            Case Else
        End Select
        If strSQL <> "" Then
            lngNums = lngNums + f_SearchExec(strSQL, True)
        End If
        lngIdx = lngIdx + 1
    Loop While strDtblName <> ""
    sg_SetScreenUpdate False
    
    'TOTAL|fffd||752||fffd|
    Range(mc_strDebitTotalRNG).Font.Bold = True
    Range(mc_strCreditTotalRNG).Font.Bold = True
    Range(mc_strDebitTotalRNG).Value = "=SUM(" & mc_strDebitCOL & mc_lngRowST & ":" & _
                                                 mc_strDebitCOL & (mc_lngRowST + lngNums - 1) & ")"
    Range(mc_strCreditTotalRNG).Value = "=SUM(" & mc_strCreditCOL & mc_lngRowST & ":" & _
                                                  mc_strCreditCOL & (mc_lngRowST + lngNums - 1) & ")"
    
    m_lngLastDataNums = lngNums
    
    '|fffd|r|fffd||fffd||fffd|`|fffd||fffd|i|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|z|fffd||8414||fffd||12d02||fffd||fffd||fffd||fffd||a347||fffd|j
    If lngNums > mc_lngMAX_ROWINDEX Then
        With Range(mc_strColST & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ": " & mc_strColEND & (lngNums + mc_lngRowST - 1))
            .BorderAround LineStyle:=xlContinuous, Weight:=xlThin
            If lngNums + mc_lngRowST - 1 > mc_lngMAX_ROWINDEX + mc_lngRowST Then
                .Borders(xlInsideHorizontal).LineStyle = xlContinuous
            End If
            .Borders(xlInsideVertical).LineStyle = xlContinuous
        End With
        With Range(mc_strItemCOL & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ":" & mc_strItemContCOL & (lngNums + mc_lngRowST - 1))
            .Borders(xlInsideVertical).LineStyle = xlLineStyleNone
        End With
        With Range("F" & (mc_lngMAX_ROWINDEX + mc_lngRowST) & ":" & mc_strDetailContCOL & (lngNums + mc_lngRowST - 1))
            .Borders(xlInsideVertical).LineStyle = xlLineStyleNone
        End With
    End If
    
    '|fffd|\|fffd|[|fffd|g
    Range(mc_strColST & mc_lngRowST, mc_strColEND & lngNums + mc_lngRowST - 1).Sort _
        key1:=Range(mc_strLedgerDateCOL & mc_lngRowST), order1:=xlAscending, _
        key2:=Range(mc_strOCodeCOL & mc_lngRowST), order2:=xlAscending, _
        key3:=Range(mc_strWBSCOL & mc_lngRowST), order3:=xlAscending, _
        Header:=xlNo
    
    sg_SetScreenUpdate True

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|v|fffd||fffd||38f||6cc||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||38f||6c3||fffd||fffd||fffd||fffd|W|fffd||24c|v|fffd||fffd||38f||6d4|N|fffd||fffd||fffd||34b|K|fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/14 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/08 : |fffd|n|7c97|S|fffd|q    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub _
s_SetupTargetYearCell( _
    ByRef rngTarget As Range _
)
    Dim strData As String
    Dim lngIdx As Long
    Dim lngIdxEnd As Long
    
    ''<<<2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    lngIdxEnd = UBound(g_intAryYear)
    For lngIdx = 0 To lngIdxEnd
        strData = strData & CStr(g_intAryYear(lngIdx))
        If lngIdx <> lngIdxEnd Then
            strData = strData & ","
        End If
    Next
    
'    lngIdxEnd = 15
'    For lngIdx = 3 To lngIdxEnd
'        strData = strData & CStr(2000 + lngIdx)
'        If lngIdx <> lngIdxEnd Then
'            strData = strData & ","
'        End If
'    Next
    ''>>>2013.03.08 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    sg_SetupValidation rngTarget.Validation, "Please input a Target Year", _
        xlValidateList, xlValidAlertStop, xlBetween, strData, Null
    rngTarget.Validation.ShowError = False
    rngTarget.Value = g_intAryYear(UBound(g_intAryYear))
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|J|fffd|n|fffd|s
'   (2)<Long |fffd|^> |fffd||38f||6d7||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd||fffd||fffd||502||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Range |fffd|^> |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||14f|I|fffd|[|fffd|Z|fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd|J|fffd|n|fffd|s|fffd||20d|~|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||342||30f||a347||fffd||fffd|Nothing|fffd||fffd||502||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/02/20 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_GetEndCel( _
    ByVal lngStartRow As Long, _
    ByVal lngTargetCol As Long _
) As Range

Dim strCol As String

    '|fffd||fffd||fffd||fffd||64fe|
    strCol = Right(Cells(lngStartRow, lngTargetCol).Address, _
             Len(Cells(lngStartRow, lngTargetCol).Address) - 1)

    strCol = Left(strCol, InStr(strCol, "$") - 1)

    'END|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd|P|fffd|[|fffd|X|fffd||30f||fffd||fffd||fffd|
    If Cells(lngStartRow, lngTargetCol).Value = Empty Then
        Set f_GetEndCel = Nothing
        Exit Function
    ElseIf Cells(lngStartRow + 1, lngTargetCol).Value = Empty Then
        Set f_GetEndCel = Range(strCol & lngStartRow)
        Exit Function
    ElseIf lngStartRow >= 65536 Then
        Set f_GetEndCel = Range(strCol & 65536)
        Exit Function
    End If

    '|fffd|I|fffd|[|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Set f_GetEndCel = Range(strCol & lngStartRow).End(xlDown)
    
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True : |fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^False : |fffd|s|fffd||fffd||fffd||203|R|fffd|[|fffd|h
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/03 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function f_ChkOfficeCode( _
    ByVal strOCode As String _
) As Boolean
    
    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    
    f_ChkOfficeCode = False
    strMSG = "DBExecuteError"
    
    If strOCode = "*" Or strOCode = " " Or strOCode = "" Then
        Exit Function
    End If
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT OfficeCode as Oc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".OfficeMaster tbl "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & "UPPER(OfficeCode) = " & fg_AddSingleQuotation(UCase$(strOCode))
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
        
    '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||64fe||fffd||202||fffd|True
    If Not adoRs.EOF Then
        f_ChkOfficeCode = True
    End If

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Function

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "f_ChkOfficeCode:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "f_ChkOfficeCode", strMSG
    GoTo LB_End
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||183|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||183|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd|p|fffd||243|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||183|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|2|fffd||55a82||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/10 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetOfficeCombo( _
    ByVal strCountry As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim strCCodeRng As String
    Dim intIx As Integer
    Dim rngClrTgt As Range

    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||183|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||30e||64fe||fffd|i|fffd|mPJTMaster|fffd|n|fffd||fffd||fffd|j
    strSQL = "SELECT  pm.OfficeCode AS OCode, pm.ProjectName as PName, pm.Currency as Crn"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".PJTMaster pm, "
    strSQL = strSQL & c_NKFAOwner & ".OfficeMaster om, "
    strSQL = strSQL & c_NKFAOwner & ".GeCountry cm "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & " cm.EnglishName like " & fg_AddSingleQuotation(strCountry) & " AND"
    strSQL = strSQL & " om.Country = cm.CountryCode" & " AND"
    strSQL = strSQL & " pm.OfficeCode = om.OfficeCode"
    
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & " pm.OfficeCode, pm.ProjectName, pm.Currency "
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & " pm.OfficeCode, pm.ProjectName, pm.Currency "
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    '|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc|
    Set rngClrTgt = f_GetEndCel(rngLstTgt.Row, rngLstTgt.Column)
    If Not rngClrTgt Is Nothing Then
        Range(rngLstTgt.Address, _
              rngLstTgt.Offset(rngClrTgt.Row - mc_lngRowST, 2).Address).ClearContents
    End If
    
    If blnWCFlg Then
        rngLstTgt.Value = "*"
        rngLstTgt.Offset(0, 1).Value = ""
        rngLstTgt.Offset(0, 2).Value = ""
        intIx = 1
    Else
        intIx = 0
    End If
    
    Do Until adoRs.EOF
        rngLstTgt.Offset(intIx, 0).Value = adoRs.Fields("OCode").Value
        rngLstTgt.Offset(intIx, 1).Value = adoRs.Fields("PName").Value
        rngLstTgt.Offset(intIx, 2).Value = adoRs.Fields("Crn").Value
        intIx = intIx + 1
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    rngLstTgt.Columns.Hidden = True
    rngLstTgt.Offset(0, 1).Columns.Hidden = True
    rngLstTgt.Offset(0, 2).Columns.Hidden = True
    
    rngTarget.NumberFormat = "@"
    rngTarget.Offset(0, 1).NumberFormat = "@"
    
    If intIx < 1 Then intIx = 1
    strCCodeRng = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_OFFCODE_SEARCH, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    strCCodeRng = rngLstTgt.Offset(0, 1).Address & ":" & rngLstTgt.Offset(intIx - 1, 1).Address
    sg_SetupValidation rngTarget.Offset(0, 1).Validation, c_strMSG_PRJNAME_SEARCH, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    
    If blnWCFlg And rngLstTgt.Offset(1, 0).Value <> "" Then
        rngTarget.Value = rngLstTgt.Offset(1, 0).Value
        rngTarget.Offset(0, 1).Value = rngLstTgt.Offset(1, 1).Value
    Else
        rngTarget.Value = rngLstTgt.Value
        rngTarget.Offset(0, 1).Value = rngLstTgt.Offset(0, 1).Value
    End If
    
    rngTarget.Validation.ShowError = False
    rngTarget.Offset(0, 1).Validation.ShowError = False

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    
    Set rngClrTgt = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_SetOfficeCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetOfficeCombo", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||183|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||183|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd|p|fffd||243|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||183|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||55a82||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/11 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'   2003/05/30 : Knowlbo m.o : |fffd||fffd||fffd||fffd||fffd||142||342||202||fffd||fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||60a4||fffd||3cd|X
'-----------------------------------------------------------------

Private Sub s_SetConectCombo( _
    ByVal strOCode As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim strCCodeRng As String
    Dim intIx As Integer
    Dim rngClrTgt As Range

    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||183|R|fffd|l|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||64fe||fffd|i|fffd|mConnectionCode|fffd|n|fffd||fffd||fffd|j
    strSQL = "SELECT  ccv.Code AS CCode, ccv.Name as CName"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & "." & c_strView_ConnectCode & " ccv "
    
    strSQL = strSQL & " WHERE "
    strSQL = strSQL & " ccv.OfficeCode = " & fg_AddSingleQuotation(strOCode)
    
    strSQL = strSQL & " GROUP BY "
    strSQL = strSQL & " ccv.Code, ccv.Name "
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & " ccv.Code, ccv.Name "
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    '|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc|
    Set rngClrTgt = f_GetEndCel(rngLstTgt.Row, rngLstTgt.Column)
    If Not rngClrTgt Is Nothing Then
        Range(rngLstTgt.Address, _
              rngLstTgt.Offset(rngClrTgt.Row - mc_lngRowST, 0).Address).ClearContents
    End If
    
    If blnWCFlg Then
        rngLstTgt.Value = "*"
        rngLstTgt.Offset(0, 1).Value = ""
        intIx = 1
    Else
        intIx = 0
    End If
    Do Until adoRs.EOF
        rngLstTgt.Offset(intIx, 0).Value = adoRs.Fields("CCode").Value
        rngLstTgt.Offset(intIx, 1).Value = adoRs.Fields("CName").Value
        intIx = intIx + 1
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    rngLstTgt.Columns.Hidden = True
    rngLstTgt.Offset(0, 1).Columns.Hidden = True
    
    rngTarget.NumberFormat = "@"
    rngTarget.Offset(0, 1).NumberFormat = "@"
    
    If intIx < 1 Then intIx = 1
    strCCodeRng = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_OFFCODE_SEARCH, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    strCCodeRng = rngLstTgt.Offset(0, 1).Address & ":" & rngLstTgt.Offset(intIx - 1, 1).Address
    sg_SetupValidation rngTarget.Offset(0, 1).Validation, c_strMSG_PRJNAME_SEARCH, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    
    If blnWCFlg Then
        rngTarget.Value = rngLstTgt.Offset(1, 0).Value
        rngTarget.Offset(0, 1).Value = rngLstTgt.Offset(1, 1).Value
    Else
        rngTarget.Value = rngLstTgt.Value
        rngTarget.Offset(0, 1).Value = rngLstTgt.Offset(0, 1).Value
    End If
    
    rngTarget.Validation.ShowError = False
    rngTarget.Offset(0, 1).Validation.ShowError = False

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_SetConectCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetConectCombo", strMSG
    GoTo LB_End
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   "*"|fffd||fffd|"%"|fffd|A"?"|fffd||fffd|"_"|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/04 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_CnvAstToPer( _
    ByRef strStr As String _
)

    Dim lngIdx As Long
    Dim strPut As String
    Dim strGet As String
    
    strPut = ""
    
    For lngIdx = 1 To Len(strStr) + 1
        strGet = Mid$(strStr, lngIdx, 1)
        Select Case strGet
        Case "*"
            strGet = "%"
        Case "?"
            strGet = "_"
        Case Else
        End Select
        
        strPut = strPut & strGet
    Next
    
    strStr = strPut

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/17 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetWBSComboByOffice( _
    ByVal strCode As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    s_SetWBSCombo strCode, rngTarget, rngLstTgt, False, blnWCFlg
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd|j
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/17 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetWBSComboByCountry( _
    ByVal strName As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnWCFlg As Boolean _
)

    Dim strCode As String
    
    strCode = fg_GetCCodeByCName(strName)
    s_SetWBSCombo strCode, rngTarget, rngLstTgt, True, blnWCFlg
    
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd||743|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd|E|fffd||752||83c8||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h
'   (2)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||310||752||fffd||fffd|
'   (3)<Range |fffd|^> |fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||30d||c42c||fffd||fffd|
'   (4)<Boolean |fffd|^> True : |fffd||fffd||fffd||251||389||fffd| / False :  |fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd|
'   (5)<Boolean |fffd|^> True : |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd| / False :  |fffd||fffd||fffd|C|fffd||fffd||fffd|h|fffd|J|fffd|[|fffd|h|fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd|t|fffd|B|fffd|X|fffd|R|fffd|[|fffd|h|fffd||251||389||fffd||fffd||fffd||fffd||fffd|WBS|fffd|R|fffd|[|fffd|h|fffd||303|R|fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd|E|fffd||752||80b7||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/04/17 : Knowlbo m.o : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------

Private Sub s_SetWBSCombo( _
    ByVal strOCode As String, _
    ByVal rngTarget As Range, _
    ByVal rngLstTgt As Range, _
    ByVal blnOFlg As Boolean, _
    ByVal blnWCFlg As Boolean _
)

    Dim lngRet As Long
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim odba As clsDBAccess
    Dim strSQL As String
    Dim strMSG As String
    Dim strCCodeRng As String
    Dim intIx As Integer
    Dim rngClrTgt As Range

    strMSG = "DBExecuteError"
    
    'DB|fffd||691||fffd|
    Call sg_setDBACondition(adoCn, adoRs, odba)
    
    If (odba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    '|fffd||289||743|R|fffd|[|fffd|h|fffd||30e||64fe|
    strSQL = "SELECT  DISTINCT WBSCode as Wc"
    
    strSQL = strSQL & " FROM "
    strSQL = strSQL & c_NKFAOwner & ".ExpenceBurden eb "
    
    strSQL = strSQL & " WHERE "
    If blnOFlg Then
        strSQL = strSQL & " SUBSTRING (eb.OfficeCode, 3, 2) = " & fg_AddSingleQuotation(strOCode)
    Else
        strSQL = strSQL & " eb.OfficeCode = " & fg_AddSingleQuotation(strOCode)
    End If
    
    strSQL = strSQL & " ORDER BY "
    strSQL = strSQL & "eb.WBSCode "
    
    odba.SQLString = strSQL
    lngRet = odba.openRecordset(adoCn, adoRs)
    If lngRet <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL
        GoTo LBL_ERR
    End If
    
    '|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc|
    Set rngClrTgt = f_GetEndCel(rngLstTgt.Row, rngLstTgt.Column)
    If Not rngClrTgt Is Nothing Then
        Range(rngLstTgt.Address, _
              rngLstTgt.Offset(rngClrTgt.Row - mc_lngRowST, 0).Address).ClearContents
    End If
    
    If blnWCFlg Then
        rngLstTgt.Value = "*"
        intIx = 1
    Else
        intIx = 0
    End If
    Do Until adoRs.EOF
        rngLstTgt.Offset(intIx, 0).Value = adoRs.Fields("Wc").Value
        intIx = intIx + 1
        adoRs.MoveNext '|fffd||fffd||fffd||303||fffd||fffd|R|fffd|[|fffd|h
    Loop
    rngLstTgt.Columns.Hidden = True
    
    If intIx < 1 Then intIx = 1
    strCCodeRng = rngLstTgt.Address & ":" & rngLstTgt.Offset(intIx - 1, 0).Address
    sg_SetupValidation rngTarget.Validation, c_strMSG_RIGHTCURRENCY, _
        xlValidateList, xlValidAlertStop, xlBetween, "=" & strCCodeRng, Null
    rngTarget.Validation.ShowError = False
    
    If blnWCFlg And rngLstTgt.Offset(1, 0).Value <> "" Then
'        rngTarget.Value = rngLstTgt.Offset(1, 0).Value
        rngTarget.Value = rngLstTgt.Value
    Else
        rngTarget.Value = rngLstTgt.Value
    End If

LB_End:
    
    Call odba.closeRecordset(adoRs)
    Call odba.closeADOConnection(adoCn)
    On Error GoTo 0
    
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set odba = Nothing
    Exit Sub

LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS, "s_SetWBSCombo:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "s_SetWBSCombo", strMSG
    GoTo LB_End
End Sub

Attribute VB_Name = "wsSettings"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsTransfer"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtnQuit, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnDbUpDate, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnConnCodeEdit, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnReferData, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnLinkCodeSelect, 5, 4, MSForms, CommandButton"
Attribute VB_Control = "CmdBtnLumpTransfer, 8, 5, MSForms, CommandButton"
'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd|n|fffd||749||fffd|v|fffd|V|fffd|X|fffd|e|fffd||fffd| |fffd|U|fffd||58f|o|fffd|[|fffd||fffd||fffd||343|V|fffd|[|fffd|g
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Option Explicit

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||3d0||fffd||fffd||fffd|`
'-----------------------------------------------------------------
Private m_blnSetupCellsInProgress As Boolean ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||50e||fffd||fffd||fffd|
Private m_collBeforeValue As Collection      ''|fffd||fffd||fffd|O|fffd|l|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnDirty As Boolean                ''|fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||fffd||fffd||fffd|
Private m_blnDecisionLock As Boolean         ''|fffd|m|fffd||fffd||38f||6cc||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
Private m_blnMasterUpdate As Boolean         ''LedgerMaster|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
Private m_blnCreateLinkcode As Boolean       ''Linkcode|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
Private m_lngCurRecIdNo As Long              ''RecIdNo(ID|fffd||fffd||fffd||517|p)
Private m_intPurpose As Integer              ''NK/JV (LedgerType)

'-----------------------------------------------------------------
'  |fffd||fffd||fffd|I|fffd||8414||fffd||fffd|`
'-----------------------------------------------------------------

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd|V|fffd|[|fffd|g|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/26 : |fffd|n|7c97|S|fffd|q       : Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
'-----------------------------------------------------------------
Public Function _
fw_SetupSheet() As Boolean
    m_blnDecisionLock = False
    
    ''Setup|fffd||3c2||74e||fffd||fffd||283|t|fffd||fffd||fffd|O|fffd||303|`|fffd|F|fffd|b|fffd|N
    If g_blnArySetupSheet(GLED_TR) = True Then
        Dim strData As String
        Dim lngIdx As Long
        Dim datTarget As Date
        
        sg_SetScreenUpdate False
        Unprotect Password:=c_strSheetPWD
        m_blnSetupCellsInProgress = True
        
        datTarget = DateValue(Cells(3, 5).Value)
        sg_SetupTargetMonthCell Cells(3, 5) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        If IsDate(datTarget) Then
            strData = Format(datTarget, "yyyy/mm")
           lngIdx = fg_GetIndexFromTokenInCSV(strData, Range("E3").Validation.Formula1)
            If lngIdx >= 0 Then Cells(3, 5).Value = strData
        End If
        
        If g_blnAryCmnMstUpdate(GLED_TR) Then
            s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
            
            ''Month/ Date
            sg_SetupDetailDateCells Range("B" & c_intTRDetailRowST, "C" & c_lngMAX_ROWINDEX), _
                                    Range("C" & c_intTRDetailRowST, "C" & c_lngMAX_ROWINDEX)
    
            ''Expense Burden (WBS-CODE)
            sg_SetupBurdenCells Range("I" & c_intTRDetailRowST, "I" & c_lngMAX_ROWINDEX), _
                                    Range("AA" & c_intTRDetailRowST)
            ''ConnectionCode
            sg_SetupConnCodeCells Range("L" & c_intTRDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                                        Range("M" & c_intTRDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                                        Range("AC" & c_intTRDetailRowST)
        End If
        s_SetupDetailCells
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
        sg_SetScreenUpdate True
        GoTo LBL_END
    End If
    
    ''Project|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_PJ) = False Then
        MsgBox c_strMSG_MASTER_PROJ, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    ''Transfer|fffd||fffd||42a90||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||352||fffd||fffd|~
    If fg_IsSetCommonInfo(GCMN_TR) = False Then
        MsgBox c_strMSG_MASTER_BBOOK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        fw_SetupSheet = False
        Exit Function
    End If
    
    
    '|fffd|Z|fffd||fffd||fffd|l|fffd||3cd|X|fffd|O|fffd||303|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||c42c|
    If m_collBeforeValue Is Nothing Then Set m_collBeforeValue = New Collection
    sg_SetRangeValueToCollection m_collBeforeValue, Range("B" & c_intTRDetailRowST)
    Cells(c_intTRDetailRowST, 2).Activate

    sg_SetScreenUpdate False
    Unprotect Password:=c_strSheetPWD                           ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||fffd||fffd||fffd|
    m_blnSetupCellsInProgress = True    ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||752||fffd|
    sg_SetupTargetMonthCell Cells(3, 5) ''|fffd||38f||6cc||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupHeader                      ''LEDGER|fffd|w|fffd|b|fffd|_|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    ''<<<2013.03.26 Mod By Y.Watanabe Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
    ' s_SetupDetailCells|fffd||fffd||fffd||fffd|fg_GetAccountsDetailData|fffd||fffd||fffd||fffd|ClearContents|fffd||149||fffd||fffd||302||fffd||fffd|~|fffd||702||fffd|
    ' |fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||113||fffd||fffd||fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd||fffd|
    ' |fffd||202||302||141|A|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||582||fffd||fffd||702||fffd||fffd||fffd|
    s_SetupDetailCells                 ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    
'    s_SetupDetailValidationCells       ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
'    s_SetupDetailCells                 ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    ''>>>2013.03.26 Mod By Y.Watanabe Office 2007|fffd||14b||fffd||fffd||fffd||fffd||fffd||fffd||10a4|(|fffd|r|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||702||fffd|)
    m_blnSetupCellsInProgress = False   ''|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||503|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True     ''|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||752||fffd|
    sg_SetScreenUpdate True
LBL_END:
    g_blnArySetupSheet(GLED_TR) = True  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    g_blnAryCmnMstUpdate(GLED_TR) = False  ''Setup|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fw_SetupSheet = True
    sg_MsgBoxInputStart "TransferSheet", "Now starting the entry for " _
            & Year(DateValue(Cells(3, 5).Value)) & "/" & Month(DateValue(Cells(3, 5).Value))
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/11 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Public Sub _
sw_WrapupSheet()
    Set m_collBeforeValue = Nothing

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||752||fffd|l|fffd||343|}|fffd|X|fffd|^|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||74d||3c2||742||30a|e|fffd||fffd||fffd|z|fffd||42a42||fffd|s|fffd||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2005/05/27 : Knowlbo Suzuki : R/3 IF|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||3cd|X
'-----------------------------------------------------------------
Private Sub _
s_SetupHeader()

    Dim strDatas As String
    Dim intIx As Integer, intIxEnd As Integer
    Dim intSelect As Integer
    Dim rngLedCode As Range
    
    intSelect = 0 ''|fffd||fffd||fffd||fffd|LEDGER INDEX
    
    ''Ledger Code |fffd|R|fffd||fffd||fffd|{|fffd||752||fffd|
    Set rngLedCode = Cells(4, 5)
    strDatas = ""
    intIxEnd = UBound(g_typAryTRInfo)
    For intIx = 0 To intIxEnd
        strDatas = strDatas & g_typAryTRInfo(intIx).m_strCode
        If intIx <> intIxEnd Then
            strDatas = strDatas & ","
        End If
    Next
    sg_SetupValidation rngLedCode.Validation, c_strMSG_LEDCODE, _
        xlValidateList, xlValidAlertStop, xlBetween, strDatas, Null
    
    rngLedCode.Value = fg_GetTokenFromIndexInCSV(intSelect, rngLedCode.Validation.Formula1)
    Cells(5, 5).Value = g_typAryTRInfo(intSelect).m_strDescript  ''Description
    Cells(6, 5).Value = g_typAryTRInfo(intSelect).m_strCurrency  ''Currency
    ''This Ledger for
    m_intPurpose = g_typAryTRInfo(intSelect).m_intPurpose
    If m_intPurpose = 0 Then
        Cells(7, 5).Value = c_strPurposeNK
    Else
        Cells(7, 5).Value = c_strPurposeJV
    End If
    Cells(3, 9).Value = g_typAryPJTInfo(0).m_strOfficeCode       ''Office Code
    Cells(4, 9).Value = g_typAryPJTInfo(0).m_strPJTCode          ''Project Code
    Cells(5, 9).Value = g_typAryPJTInfo(0).m_strPJTName          ''Project Name

    ''R/3 IF|fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||310|F|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
    If g_blnR3IfEnable = False Then ''R3IF |fffd||fffd||fffd||fffd|
        Range("C1:F1").Interior.ColorIndex = 3
        Range("C1").Font.ColorIndex = 2
        Cells(2, 3).Value = "Disable R/3 Interface!"
        Range("C2").Font.ColorIndex = 38
        Range("C2").Font.Italic = True
        Range("C2").Font.Bold = True
    End If

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub s_SetupDetailValidationCells()

    ''Month/ Date
    sg_SetupDetailDateCells Range("B" & c_intTRDetailRowST, "C" & c_lngMAX_ROWINDEX), _
                            Range("C" & c_intTRDetailRowST, "C" & c_lngMAX_ROWINDEX)
    
    ''Expense Burden (WBS-CODE)
    sg_SetupBurdenCells Range("I" & c_intTRDetailRowST, "I" & c_lngMAX_ROWINDEX), _
                        Range("AA" & c_intTRDetailRowST)

    ''AccountCode / Name
    sg_SetupDetailACCodeCells Range("J" & c_intTRDetailRowST, "J" & c_lngMAX_ROWINDEX), _
                              Range("K" & c_intTRDetailRowST, "K" & c_lngMAX_ROWINDEX), _
                              Range("AF" & c_intTRDetailRowST)
    Range("J" & c_intTRDetailRowST, "J" & c_lngMAX_ROWINDEX).NumberFormat = "@"

    ''ConnectionCode
    sg_SetupConnCodeCells Range("L" & c_intTRDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                                        Range("M" & c_intTRDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                                        Range("AC" & c_intTRDetailRowST)
   
    ''EviNo. CheckNo.
    sg_SetupValidation Range("O" & c_intTRDetailRowST, "P" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_WHOLE_NUM, xlValidateWholeNumber, xlValidAlertStop, xlBetween, "-2147483648", "2147483647"
    
    'NK/JV
    sg_SetupDetailNKJVCells Range("Q" & c_intTRDetailRowST, "Q" & c_lngMAX_ROWINDEX)

    ''Claim
    sg_SetupValidation Range("R" & c_intTRDetailRowST, "R" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_CLAIM, xlValidateList, xlValidAlertStop, xlBetween, "Y,N", Null
    With Range("R" & c_intTRDetailRowST, "R" & c_lngMAX_ROWINDEX).Validation
        .ShowError = False
    End With
    
    ''Paid, Received
    sg_SetupValidation Range("S" & c_intTRDetailRowST, "T" & c_lngMAX_ROWINDEX).Validation, _
         c_strMSG_DECEIMAL_NUM, xlValidateDecimal, xlValidAlertStop, xlGreaterEqual, "=0.001", Null
    ''Range("S" & c_intTRDetailRowST, "U" & c_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DECR_XX
    Range("S" & c_intTRDetailRowST, "U" & c_lngMAX_ROWINDEX).NumberFormat = g_strFORMAT_DEC_CBT

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||5d5||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2014/03/05 : |fffd|n|7c97|S|fffd|q : |fffd|Q|fffd||194||151||389||fffd|
'-----------------------------------------------------------------
Private Sub s_SetupDetailCells()

    Dim strLedCode As String
    Dim intIx As Integer
    
    m_blnDirty = False    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    fg_GetAccountsDetailData ActiveSheet    ''|fffd|o|fffd|[|fffd|f|fffd|[|fffd|^|fffd||64fe|(|fffd|c|fffd||702||fffd|)

    ''Transfer|fffd||157|L|fffd||303||fffd||fffd|b|fffd|N|fffd|A|fffd||50a|||fffd||fffd||fffd||fffd||fffd||fffd|
''    Range("B" & c_intTRDetailRowST, "U" & c_lngMAX_ROWINDEX).Interior.ColorIndex = xlNone
    
    ''AutoTransfer|fffd||303||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    For intIx = 0 To UBound(g_typAryTRInfo)
        If Cells(4, 5).Value = g_typAryTRInfo(intIx).m_strCode Then
            If InStr(g_typAryTRInfo(intIx).m_strDescript, "Auto") <> 0 Then
                m_blnDecisionLock = True
            Else
                m_blnDecisionLock = False
            End If
            Exit For
        End If
    Next
    
    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(3, 5).Value <> "" And m_blnDecisionLock = False Then
        If g_datDecisionMonth <> 0 Then  ''|fffd|m|fffd||830e|
            If DateValue(Cells(3, 5).Value) <= g_datDecisionMonth Then
               m_blnDecisionLock = True
            End If
        Else
            If DateValue(Cells(3, 5).Value) < g_datImportMonth Then
                m_blnDecisionLock = True
            End If
        End If
    End If
    
    If (m_blnDecisionLock = True) Then
        Range("B" & c_intTRDetailRowST, "T" & c_lngMAX_ROWINDEX).Locked = m_blnDecisionLock
    End If
    ''<<<2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    If g_blnWrite = True Then
        CmdBtnDbUpDate.Enabled = Not m_blnDecisionLock
    Else
        CmdBtnDbUpDate.Enabled = False
    End If
'    CmdBtnDbUpDate.Enabled = Not m_blnDecisionLock
    ''>>>2014.03.05 Mod By Y.Watanabe |fffd|Q|fffd||194||151||389||fffd|
    CmdBtnReferData.Enabled = Not m_blnDecisionLock
    CmdBtnLumpTransfer.Enabled = Not m_blnDecisionLock
    CmdBtnLinkCodeSelect.Enabled = Not m_blnDecisionLock

    sg_GetCurrentLinkCodeNo GLNK_FA ''|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||152||8391||fffd|YLinkCodeNo|fffd||64fe|
    sg_GetCurrentRecIDNo GLED_TR ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|
    
    Application.GoTo Range("A" & c_intTRDetailRowST), Scroll:=True    '|fffd||64ea||fffd|s|fffd|\|fffd||fffd|
    
    m_blnMasterUpdate = False
    m_blnCreateLinkcode = False

End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   NULL|fffd|s|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Long |fffd|^> |fffd|w|fffd||fffd|sNo
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|w|fffd||fffd|s|fffd||30a|e|fffd||fffd||fffd|NULL|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_IsNullRow( _
    ByVal lngRowIndex As Long _
) As Boolean

    Dim intIxCol As Integer
    
    f_IsNullRow = False
    
    For intIxCol = 2 To 20
        If Cells(lngRowIndex, intIxCol).Value <> "" Then
            Exit Function
        End If
    Next
    f_IsNullRow = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
s_CheckSheetUpdate()
   
    Dim lngRowIndex As Long
    Dim lngUpdateCount As Long

    If m_blnDirty = False Then
        Exit Sub
    End If

    lngUpdateCount = 0

    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    
    For lngRowIndex = c_intTRDetailRowST To c_lngMAX_ROWINDEX Step 1
        
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            lngUpdateCount = lngUpdateCount + 1
            If f_IsNullRow(lngRowIndex) And Cells(lngRowIndex, 23).Value = "" Then
                lngUpdateCount = lngUpdateCount - 1
                ''Dirty |fffd|t|fffd||fffd||fffd|O|fffd||17382||182||fffd|
                Cells(lngRowIndex, 24).Value = ""
            End If
        End If
    Next

    If lngUpdateCount = 0 Then
        m_blnDirty = False
    End If

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<String |fffd|^> |fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|e|fffd||fffd||315|K|fffd|{|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2003/05/29 : Knowlbo Suzuki : |fffd||fffd||fffd||fffd||fffd||fffd|tBalance Check|fffd||1c9||fffd|
'   2003/10/16 : Knowlbo Suzuki : LinkCode|fffd|`|fffd|F|fffd|b|fffd|N|fffd||1c9||fffd|(OfficeCode Left7|fffd||fffd|)
'   2004/07/22 : Knowlbo Suzuki : |fffd|Q|fffd||183|f|fffd|[|fffd|^|fffd||30f|o|fffd|[|fffd|N|fffd|x|fffd||fffd||6d1||fffd||fffd||fffd||fffd||113||fffd||fffd||350|U|fffd||58d|s|fffd||314|N|fffd|x|fffd||fffd||fffd||fffd||fffd||d0b9||fffd||fffd|
'-----------------------------------------------------------------
Private Function _
f_CheckInputData() As Boolean
    
    Dim strMessage As String
    Dim lngRowIndex As Long
    Dim blnCCode As Boolean
    Dim blnLCode As Boolean
    Dim lngRowNo As Long
    Dim strCCodeKind As String
    Dim strLCodeKind As String
    Dim lngInputLastRow As Long
    Dim curBalance As Currency
    Dim blnDatBalChk As Boolean
    Dim blnDatBal As Boolean
    Dim blnFind As Boolean
    Dim lngDatBalIx As Long
    Dim curaryDatBal() As Currency
    Dim dataryDatBal() As Date
    Dim lngaryDatBalRow() As Long
    Dim datValue As Date
    Dim curBalChk As Currency
    Dim lngIx As Long
    Dim strSplit As Variant
    Dim strValue As Variant
    Dim blnMatch As Boolean
    Dim strAcCode As String
    Dim lngPrRecYear As Long
    
    blnDatBalChk = False
    lngDatBalIx = -1
    If InStr(Cells(5, 5).Value, "Manual") <> 0 Then ''Manual|fffd|`|fffd|F|fffd|b|fffd|N
        blnDatBalChk = True
    End If
        
    f_CheckInputData = False
    lngInputLastRow = 0
    curBalance = 0
    lngPrRecYear = 0

    For lngRowIndex = c_intTRDetailRowST To c_lngMAX_ROWINDEX Step 1
        blnDatBal = False
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            blnCCode = False
            blnLCode = False

            ''Month
            If Cells(lngRowIndex, 2).Value = "" Then
                strMessage = c_strMSG_SETMON
                Cells(lngRowIndex, 2).Activate
                GoTo LBL_ERR
            End If
            
            ''Date
            If Cells(lngRowIndex, 3).Value = "" Then
                strMessage = c_strMSG_SETDAY
                Cells(lngRowIndex, 3).Activate
                GoTo LBL_ERR
            End If
            
            ''|fffd||fffd||fffd|O|fffd||30e|Q|fffd||fffd|Data|fffd||314|N|fffd|x(LedgerDate|fffd||fffd||fffd||7532||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd|N|fffd|x)|fffd||fffd||6d1||fffd|
            datValue = DateValue(Cells(3, 5).Value)
            If Cells(lngRowIndex, 22).Value <> "" Then
                lngPrRecYear = Cells(lngRowIndex, 22).Value
                datValue = DateSerial(lngPrRecYear, Cells(lngRowIndex, 2).Value, 1)
            Else
                If lngPrRecYear <> 0 Then
                    If ((Cells(lngRowIndex, 2).Value = Cells(lngRowIndex - 1, 2).Value) And _
                        (Cells(lngRowIndex, 3).Value = Cells(lngRowIndex - 1, 3).Value)) Then
                        datValue = DateSerial(lngPrRecYear, Cells(lngRowIndex, 2).Value, 1)
                    Else
                        lngPrRecYear = 0 ''Reset
                    End If
                End If
            End If
            If Not fg_IsDateCells(Cells(lngRowIndex, 2), Cells(lngRowIndex, 3), datValue) Then
                ''|fffd|L|fffd||fffd||fffd||213||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
                strMessage = c_strMSG_ERRORDATE
                Cells(lngRowIndex, 3).Activate
                GoTo LBL_ERR
            End If
            
            ''Description Details
            If Cells(lngRowIndex, 7).Value = "" Then
                If Cells(lngRowIndex, 10).Value <> "" Then
                    If (Cells(lngRowIndex, 4).Value = "") Or _
                       (Cells(lngRowIndex, 4).Value <> "" And Trim$(Cells(lngRowIndex, 4).Value) = "") Then
                        strMessage = c_strMSG_SETDETAILS
                        Cells(lngRowIndex, 7).Activate
                        GoTo LBL_ERR
                    End If
                End If
            Else
                If Len(Cells(lngRowIndex, 7).Value) > 128 Then
                    MsgBox c_strMSGCmn_LENGTHOVER & "128", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(lngRowIndex, 7).Activate
                    GoTo LBL_EXIT
                End If
            End If
           
            ''Expense Burden
            If Cells(lngRowIndex, 9).Value = "" Then
                strMessage = c_strMSG_WBS
                Cells(lngRowIndex, 9).Activate
                GoTo LBL_ERR
            
            Else
                ''WBSCode|fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
                Dim strDumyCode As String
                If fg_CheckWBSExist(Cells(lngRowIndex, 9).Value, strDumyCode) = False Then
                    strMessage = c_strMSGCmn_NotEXISTWBS & "(NK-Sales or NK-Material)"
                    Cells(lngRowIndex, 9).Activate
                    GoTo LBL_ERR
                End If
            End If
           
            ''AccountCode/Name
            If Cells(lngRowIndex, 10).Value = "" Then
                strMessage = c_strMSG_ACCOUNT_CODE
                Cells(lngRowIndex, 10).Activate
                GoTo LBL_ERR
            Else
                lngRowNo = fg_FindSameDataRowNo(Cells(lngRowIndex, 10), _
                            wsSettings.Range("C2", "C65536"))
                If lngRowNo <> 0 Then
                    If wsSettings.Cells(lngRowNo, 10).Value <> "" Then
                        blnCCode = True ''ConnectionCode|fffd|K|fffd|{
                        If wsSettings.Cells(lngRowNo, 10).Value = 2 Then 'CCode|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                            strCCodeKind = wsSettings.Cells(lngRowNo, 11).Value
                        Else
                            strCCodeKind = ""
                        End If
                    End If
                    If wsSettings.Cells(lngRowNo, 12).Value <> "" Then
                        If InStr(wsSettings.Cells(lngRowNo, 12).Value, "(") = 0 Then
                            blnLCode = True ''LinkCode|fffd|K|fffd|{
                            strLCodeKind = wsSettings.Cells(lngRowNo, 12).Value
                        End If
                    End If
                End If
                
                strAcCode = Cells(lngRowIndex, 10).Value

                ''|fffd||289||74c||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                If Left$(strAcCode, 4) = "2019" Then
                    If strAcCode = c_strACEx_MoneySndCode Or _
                       strAcCode = c_strACRM_SndHeadCode Or _
                       strAcCode = c_strACRM_SndOtherCode Or _
                       strAcCode = c_strACR3_AdjustDebtorCode Then
                       
                        If Cells(lngRowIndex, 19).Value = "" Then ''Paid
                            strMessage = c_strMSG_PAID_NUM
                            Cells(lngRowIndex, 19).Activate
                            GoTo LBL_ERR
                        End If
                    Else
                        If Cells(lngRowIndex, 20).Value = "" Then ''Received
                            strMessage = c_strMSG_RECV_NUM
                            Cells(lngRowIndex, 20).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            
                ''Expense Burden|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||92a8||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N--------------------------
                If strAcCode = c_strACKND_PriGainCostCode Or _
                   strAcCode = c_strACKND_PriLossCostCode Then
                    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||20a|O|fffd||313||fffd||fffd||342||fffd||fffd||94|\
                    If Left$(Cells(lngRowIndex, 9).Value, 1) = "X" Or _
                       Left$(Cells(lngRowIndex, 9).Value, 1) = "Z" Then
                        strMessage = c_strMSG_CHK_ExBurden
                        Cells(lngRowIndex, 9).Activate
                        GoTo LBL_ERR
                    End If
                End If
                If strAcCode = c_strACKND_PriGainOtherCode Or _
                   strAcCode = c_strACKND_PriLossOtherCode Then
                    ''|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|^|fffd||302||753||fffd||fffd||342||fffd||fffd||94|\
                    If Left$(Cells(lngRowIndex, 9).Value, 1) <> "X" And _
                       Left$(Cells(lngRowIndex, 9).Value, 1) <> "Z" Then
                        strMessage = c_strMSG_CHK_CostCenter
                        Cells(lngRowIndex, 9).Activate
                        GoTo LBL_ERR
                    End If
                End If
            End If
            
            ''ConnectionCode/Name
            If Cells(lngRowIndex, 12).Value = "" Then
                If blnCCode = True Then
                    strMessage = c_strMSG_CONNECT_CODE
                    Cells(lngRowIndex, 12).Activate
                    GoTo LBL_ERR
                End If
            Else
                ''|fffd||fffd|CCode|fffd|s|fffd|v|fffd||202||302||253||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||90a9||fffd|H
                If blnCCode = True And strCCodeKind <> "" Then ''CCode|fffd||303|J|fffd|e|fffd|S|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If InStr(strCCodeKind, ",") <> 0 Then ''|fffd||fffd||fffd||fffd||fffd|J|fffd|e|fffd|S|fffd||fffd|
                        blnMatch = False
                        strSplit = Split(strCCodeKind, ",")
                        For Each strValue In strSplit
                            If InStr(Cells(lngRowIndex, 12).Value, strValue) <> 0 Then
                                blnMatch = True
                                Exit For
                            End If
                        Next strValue
                        Erase strSplit
                        If blnMatch = False Then
                            strMessage = c_strMSG_CCODE_KIND
                            Cells(lngRowIndex, 12).Activate
                            GoTo LBL_ERR
                        End If
                    Else
                        If InStr(Cells(lngRowIndex, 12).Value, strCCodeKind) = 0 Then
                            strMessage = c_strMSG_CCODE_KIND
                            Cells(lngRowIndex, 12).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            End If
            
            ''LinkCode
            If blnLCode = True Then
                Select Case strLCodeKind
                Case "IV"
                    strMessage = c_strMSG_IVLinkCODE
                Case "AS"
                    strMessage = c_strMSG_ASLinkCODE
                Case "SC"
                    strMessage = c_strMSG_SBLinkCODE
                Case "RM"
                    strMessage = c_strMSG_RMLinkCODE
                Case "PP"
                    strMessage = c_strMSG_PRLinkCODE
                Case "FA"
                    strMessage = c_strMSG_FALinkCODE
                End Select
            End If
            If Cells(lngRowIndex, 14).Value = "" Then
                If blnLCode = True Then
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERR
                End If
            Else
                If blnLCode = False Then ''|fffd|s|fffd|v LinkCode
                    strMessage = c_strMSG_NOLinkCODE
                    Cells(lngRowIndex, 14).Activate
                    GoTo LBL_ERR
                Else
                    If Not IsNumeric(Mid$(Cells(lngRowIndex, 14).Value, 5, 5)) Then
                        strMessage = strMessage & "(Unknown format!)"
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    
                    ''|fffd|{|fffd||411||fffd||fffd||fffd||fffd||30f||a347||fffd||fffd|LinkCode|fffd||fffd||fffd||fffd||fffd||fffd|'HDO'|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd|
                    ''|fffd||fffd||fffd||30d||6c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||90aa||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd|'OPN'|fffd||242||202||fffd|i|fffd||fffd||fffd||fffd|/|fffd||d1913||fffd||fffd|l|fffd|j
                    ''|fffd||fffd||fffd||fffd||fffd|Q|fffd||fffd||fffd||fffd||fffd|l|fffd|`|fffd|F|fffd|b|fffd|N|fffd||341|ATransfer|fffd||30f||a347||fffd||fffd||fffd||a3c8||fffd||fffd||fffd||242||202||fffd|
                    If strAcCode <> c_strACRM_SndHeadCode And _
                        strAcCode <> c_strACRM_RecHeadCode And _
                       Not IsNumeric(Right$(Cells(lngRowIndex, 14).Value, 2)) Then
                        strMessage = strMessage & "(Unknown format!)"
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    
                    If InStr(Right$(Cells(lngRowIndex, 14).Value, 5), strLCodeKind) = 0 Then
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If Len(Cells(lngRowIndex, 14).Value) <> 14 Then
                        strMessage = c_strMSG_RIGHTLCODE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If fg_IsExistOfficeCode(Left$(Cells(lngRowIndex, 14).Value, 7)) <> True Then
                        strMessage = c_strMSG_ERRLCodeOFFICE
                        Cells(lngRowIndex, 14).Activate
                        GoTo LBL_ERR
                    End If
                    If Left$(Cells(lngRowIndex, 14).Value, 7) <> g_strOfficeCode Then
                        If (strLCodeKind = "PP") Then
                            strMessage = strMessage & "(Other Office LinkCode)"
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                        If (strLCodeKind = "RM") And _
                           (strAcCode = c_strACRM_RecHeadCode Or strAcCode = c_strACRM_RecOtherCode) Then
                            strMessage = strMessage & "(Other Office LinkCode)"
                            Cells(lngRowIndex, 14).Activate
                            GoTo LBL_ERR
                        End If
                    End If
                End If
            End If
            
            ''NK/JV
            If Cells(lngRowIndex, 17).Value = "" Then
                strMessage = c_strMSG_NKJV
                Cells(lngRowIndex, 17).Activate
                GoTo LBL_ERR
            End If
            
            ''Claim
            If Cells(lngRowIndex, 18).Value = "" Then
                strMessage = c_strMSG_CLAIM
                Cells(lngRowIndex, 18).Activate
                GoTo LBL_ERR
            End If
            
            ''Paid,Received
            If (Cells(lngRowIndex, 19).Value = "") And (Cells(lngRowIndex, 20).Value = "") Then
                strMessage = c_strMSG_DECEIMAL_NUM
                Cells(lngRowIndex, 19).Activate
                GoTo LBL_ERR
            End If
            
            ''Balance|fffd|l|fffd||315||6d1||fffd|
            If lngInputLastRow < lngRowIndex Then
                curBalance = Cells(lngRowIndex, 21).Value
                lngInputLastRow = lngRowIndex
            End If
            blnDatBal = True
            
            ''|fffd||38f||6d4|N|fffd|xHiddenCell|fffd||310||752||fffd|
            If lngPrRecYear <> 0 And Cells(lngRowIndex, 22).Value = "" Then
                m_blnSetupCellsInProgress = True
                Unprotect Password:=c_strSheetPWD
                Cells(lngRowIndex, 22).Value = lngPrRecYear
                Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                m_blnSetupCellsInProgress = False
            End If
            
            ''|fffd||6d1||fffd||fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd|N|fffd||fffd||fffd|A
            If Cells(lngRowIndex, 21).Value = 0 Then lngPrRecYear = 0
            
            
            If Cells(lngRowIndex, 22).Value = "" Then ''HiddenYear|fffd||fffd||fffd||fffd|
                ''|fffd|O|fffd|N|fffd|x|fffd|F|fffd||fffd||fffd||313||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N
                If Month(DateValue(Cells(3, 5).Value)) < Cells(lngRowIndex, 2).Value Then
                    Cells(lngRowIndex, 2).Activate
                    strMessage = "(" & Year(DateValue(Cells(3, 5).Value)) - 1 & "/" _
                                & Format$(Cells(lngRowIndex, 2).Value, "00") & "/" _
                                & Format$(Cells(lngRowIndex, 3).Value, "00") & ")"
                    strMessage = c_strMSG_WARNPastMonthPFX & strMessage & c_strMSG_WARNPastMonthSFX
                    If (MsgBox(strMessage, vbExclamation Or vbYesNo, c_strNAME_SYSTEM) = vbNo) Then
                        ''|fffd|O|fffd|N|fffd|x|fffd|o|fffd|[|fffd||fffd||fffd|t|fffd|C|fffd||fffd|
                        GoTo LBL_EXIT
                    End If
                End If
            End If
        Else
            If Cells(lngRowIndex, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd|
                If lngInputLastRow < lngRowIndex Then
                    curBalance = Cells(lngRowIndex, 21).Value
                    lngInputLastRow = lngRowIndex
                End If
                blnDatBal = True
            End If
        End If
        If blnDatBalChk And blnDatBal Then   ''|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||303|o|fffd||fffd||fffd||fffd||fffd|X|fffd||fffd||fffd|W
            ''Paid,Received
            If Cells(lngRowIndex, 19).Value <> "" Then
                curBalChk = Cells(lngRowIndex, 19).Value * -1
            Else
                curBalChk = Cells(lngRowIndex, 20).Value
            End If
        
            If Cells(lngRowIndex, 22).Value = "" Then ''HiddenYear|fffd||fffd||fffd||fffd|
                If Month(Cells(3, 5).Value) < Cells(lngRowIndex, 2).Value Then
                    datValue = DateSerial(Year(Cells(3, 5).Value) - 1, _
                                          Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                Else
                    datValue = DateSerial(Year(Cells(3, 5).Value), _
                                          Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                End If
            Else
                datValue = DateSerial(Cells(lngRowIndex, 22).Value, _
                                          Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
            End If
            
            blnFind = False
            For lngIx = 0 To lngDatBalIx
                If datValue = dataryDatBal(lngIx) Then
                    blnFind = True
                    Exit For
                End If
            Next
            If blnFind Then
                curaryDatBal(lngIx) = curaryDatBal(lngIx) + curBalChk
            Else
                lngDatBalIx = lngDatBalIx + 1
                ReDim Preserve dataryDatBal(lngDatBalIx)
                ReDim Preserve curaryDatBal(lngDatBalIx)
                ReDim Preserve lngaryDatBalRow(lngDatBalIx)
                dataryDatBal(lngDatBalIx) = datValue
                curaryDatBal(lngDatBalIx) = curBalChk
                lngaryDatBalRow(lngDatBalIx) = lngRowIndex
            End If
        End If
    Next
    
    If curBalance <> 0 Then ''Balance|fffd|`|fffd|F|fffd|b|fffd|N
        strMessage = c_strMSGTr_BALACE_ERR
        Cells(lngInputLastRow, 21).Activate
        GoTo LBL_ERR
    End If

    If blnDatBalChk And lngDatBalIx >= 0 Then
        For lngIx = 0 To lngDatBalIx
            If CCur(curaryDatBal(lngIx)) <> 0 Then
                strMessage = c_strMSGTr_BALACE_ERR & "(Date Balance)"
                Cells(lngaryDatBalRow(lngDatBalIx), 2).Activate
                GoTo LBL_ERR
            End If
        Next
    End If
    
    f_CheckInputData = True
    Exit Function

LBL_ERR:
    MsgBox strMessage, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
LBL_EXIT:
    If blnDatBalChk And lngDatBalIx >= 0 Then
        Erase dataryDatBal
        Erase curaryDatBal
        Erase lngaryDatBalRow
    End If
    f_CheckInputData = False
    Exit Function
End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||30e||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd||315||3cd|X|fffd||fffd||fffd|e|fffd||24f|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   (1)<Boolean |fffd|^> True:|fffd||fffd||fffd||fffd|  False:|fffd||fffd||fffd|s
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Function _
f_onChangeCell( _
    ByVal rngTarget As Range _
) As Boolean

    Dim lngIndex As Long
    Dim blnSelectDescription As Boolean
    Dim blnSetACCode As Boolean
    Dim blnSetACName As Boolean
    Dim blnSetNKorJV As Boolean
    Dim blnSetChgCode As Boolean
    Dim blnSetData As Boolean
    Dim lngTokenIdx As Long
    Dim blnSetConnName As Boolean
    Dim blnSetConnCode As Boolean
    Dim strValue As String
    
    blnSetData = False
    blnSetACCode = False
    blnSetACName = False
    blnSetNKorJV = False
    blnSelectDescription = False
    blnSetChgCode = False
    blnSetConnName = False
    blnSetConnCode = False
    
    ''TargetMonth
    If rngTarget.Row = 3 And rngTarget.Column = 5 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        blnSetData = True
    
    ''LedgerCodeNo.
    ElseIf rngTarget.Row = 4 And rngTarget.Column = 5 Then
        If Not fg_QuestionSave(m_blnDirty) Then
            f_onChangeCell = False
            Exit Function
        End If
        
        If rngTarget.Value <> "" Then
            lngTokenIdx = fg_GetIndexFromTokenInCSV(rngTarget.Value, rngTarget.Validation.Formula1)
            If lngTokenIdx > 0 Then
                If InStr(g_typAryTRInfo(lngTokenIdx).m_strDescript, "Auto") <> 0 Then
                    CmdBtnReferData.Enabled = False
                    CmdBtnLumpTransfer.Enabled = False
                    CmdBtnLinkCodeSelect.Enabled = False
                Else
                    CmdBtnReferData.Enabled = True
                    CmdBtnLumpTransfer.Enabled = True
                    CmdBtnLinkCodeSelect.Enabled = True
                End If
            Else
                CmdBtnReferData.Enabled = False
                CmdBtnLumpTransfer.Enabled = False
                CmdBtnLinkCodeSelect.Enabled = False
            End If
        End If
        blnSetData = True
    
    ''Detail
    ElseIf rngTarget.Row >= c_intTRDetailRowST Then
    
        ''|fffd|v|fffd||fffd||38f||6cc||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(3, 5).Value = "" Then
            MsgBox c_strMSG_MONTH, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(3, 5).Activate
            Exit Function
        End If
    
        ''|fffd||38f||fffd|Book|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|P|fffd|C|fffd|X
        If Cells(4, 5).Value = "" Then
            MsgBox c_strMSG_LEDCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Cells(4, 5).Activate
            Exit Function
        End If
    
        If f_IsNullRow(rngTarget.Row - 1) Then ''|fffd||fffd||fffd|O|fffd|s|fffd||fffd||fffd||d4482||30f||a347|
            MsgBox c_strMSG_BLANKLINE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
            f_onChangeCell = False
            Exit Function
        End If
    
        blnSetNKorJV = True
        blnSetChgCode = True
        Select Case rngTarget.Column
        
        Case 2 ''Month
        Case 3 ''Date
        Case 4 ''Description Item
            blnSelectDescription = True
        Case 7 ''Description Detailes
        Case 9 ''WBSCode
            blnSetChgCode = False
        Case 10 ''AccountCode
            blnSetACCode = True
        Case 11 ''AccountName
            blnSetACName = True
        Case 12 ''ConnectionCode
            If Len(rngTarget.Value) >= 3 Then
                m_blnSetupCellsInProgress = True
                strValue = UCase$(Left$(rngTarget.Value, 3))
                If strValue = "NKS" Then
                    strValue = strValue & Mid(rngTarget.Value, 4)
                Else
                    strValue = UCase$(rngTarget.Value)
                End If
                rngTarget.Value = strValue
                m_blnSetupCellsInProgress = False
            End If
            blnSetConnCode = True
        Case 13 ''ConnectionName
            blnSetConnName = True
        Case 14 ''LedgerLinkCode
        Case 15 ''Evi.No.
        Case 16 ''CheckNo.
        Case 17 ''NK/JV
            blnSetNKorJV = False
        Case 18 ''Claim
            If rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                strValue = UCase$(rngTarget.Value)
                If strValue <> "Y" And strValue <> "N" Then
                    MsgBox c_strMSG_CLAIM, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    rngTarget.Value = ""
                    m_blnSetupCellsInProgress = False
                    f_onChangeCell = False
                    rngTarget.Activate
                    Exit Function
                End If
                rngTarget.Value = strValue
                m_blnSetupCellsInProgress = False
            End If
        Case 19 ''Paid
            ''Paid/Received|fffd|Q|fffd|d|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
            If Cells(rngTarget.Row, 20).Value <> "" And rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                Cells(rngTarget.Row, 20).Value = ""
                m_blnSetupCellsInProgress = False
                'f_onChangeCell = False
                'Exit Function
            End If
        Case 20 ''Received
            ''Paid/Received|fffd|Q|fffd|d|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
            If Cells(rngTarget.Row, 19).Value <> "" And rngTarget.Value <> "" Then
                m_blnSetupCellsInProgress = True
                Cells(rngTarget.Row, 19).Value = ""
                m_blnSetupCellsInProgress = False
                'f_onChangeCell = False
                'Exit Function
            End If
        End Select
    End If

    ''DescriptionItem |fffd||fffd| ACCode|fffd||752||fffd|
    If blnSelectDescription Then
        ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
        If Cells(7, 5).Value = c_strPurposeJV And g_strMapACCode <> "" Then
            If fg_GetIndexFromTokenInCSV(g_strMapACCode, g_strLCodeIndispensableAccount) >= 0 Then
                ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                rngTarget.Activate
                f_onChangeCell = False
                Exit Function
            End If
        End If
        m_blnSetupCellsInProgress = True
        If rngTarget.Value = "" Then
            Cells(rngTarget.Row, 10).Value = ""
            Cells(rngTarget.Row, 11).Value = ""
        Else
            Cells(rngTarget.Row, 10).Value = g_strMapACCode
            Cells(rngTarget.Row, 11).Value = g_strMapACName
        End If

        If g_strMapWarn <> "" Then        ''Warning|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
            MsgBox g_strMapWarn, vbOKOnly + vbExclamation, c_strNAME_SYSTEM
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd||fffd||fffd|O|fffd|v|fffd|a|fffd|r|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
    If blnSetChgCode And Cells(rngTarget.Row, 9).Value = "" And rngTarget.Value <> "" And rngTarget.Row <> c_intTRDetailRowST Then
        m_blnSetupCellsInProgress = True

        If Cells(rngTarget.Row - 1, 9).Value <> "" Then
            Cells(rngTarget.Row, 9).Value = Cells(rngTarget.Row - 1, 9).Value
        End If
        m_blnSetupCellsInProgress = False
        g_strMapACCode = ""
        g_strMapACName = ""
        g_strMapWarn = ""
    End If

    If blnSetACCode Or blnSetACName Then
        m_blnSetupCellsInProgress = True
        If blnSetACCode Then
            ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
            If Cells(7, 5).Value = c_strPurposeJV And rngTarget.Value <> "" Then
                If fg_GetIndexFromTokenInCSV(rngTarget.Value, g_strLCodeIndispensableAccount) >= 0 Then
                    ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    rngTarget.Activate
                    f_onChangeCell = False
                    m_blnSetupCellsInProgress = False
                    Exit Function
                End If
            End If
            For lngIndex = 0 To UBound(g_strAryAcCode)
                If rngTarget.Value = g_strAryAcCode(lngIndex) Then
                    rngTarget.Offset(0, 1).Value = g_strAryAcName(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcCode) Then
                rngTarget.Offset(0, 1).ClearContents
            End If
        Else
            For lngIndex = 0 To UBound(g_strAryAcName)
                If rngTarget.Value = g_strAryAcName(lngIndex) Then
                    ''JV Main|fffd||fffd|LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd||351|I|fffd||fffd|s|fffd||82||182||fffd||fffd||fffd|
                    If Cells(7, 5).Value = c_strPurposeJV Then
                        If fg_GetIndexFromTokenInCSV(g_strAryAcCode(lngIndex), g_strLCodeIndispensableAccount) >= 0 Then
                            ''LinkCode|fffd|K|fffd|{|fffd||fffd||fffd||fffd|
                            MsgBox c_strMSG_CANT_ACCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                            rngTarget.Activate
                            f_onChangeCell = False
                            m_blnSetupCellsInProgress = False
                            Exit Function
                        End If
                    End If
                    rngTarget.Offset(0, -1).Value = g_strAryAcCode(lngIndex)
                    Exit For
                End If
            Next
            If lngIndex > UBound(g_strAryAcName) Then
                rngTarget.Offset(0, -1).ClearContents
            End If
        End If
        m_blnSetupCellsInProgress = False
    End If
    
    ''LinkcodeSelect|fffd|{|fffd|^|fffd||fffd||fffd||fffd||515||3cd|X
    If blnSelectDescription Or blnSetACCode Or blnSetACName Then
        If Cells(rngTarget.Row, 10).Value <> "" Then ''|fffd||fffd||fffd||fffd||216||693||fffd||fffd||34d||3c2||fffd|
            lngIndex = fg_GetIndexFromTokenInCSV(Cells(rngTarget.Row, 10).Value, g_strLCodeIndispensableAccount)
            If lngIndex >= 0 Then
                CmdBtnLinkCodeSelect.Enabled = True
            End If
            If Cells(rngTarget.Row, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
                CmdBtnLinkCodeSelect.Enabled = False
            End If
        End If
    End If
    
    If blnSetConnCode Or blnSetConnName Then
        m_blnSetupCellsInProgress = True
        If blnSetConnCode Then
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnCodeTSV)
            rngTarget.Offset(0, 1).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnNameTSV)
        Else
            lngTokenIdx = fg_GetIndexFromTokenInTSV(rngTarget.Value, g_strConnNameTSV)
            rngTarget.Offset(0, -1).Value = fg_GetTokenFromIndexInTSV(lngTokenIdx, g_strConnCodeTSV)
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''NKorJV |fffd||310||752||fffd|
    If blnSetNKorJV And Cells(rngTarget.Row, 17).Value = "" And rngTarget.Value <> "" Then
        m_blnSetupCellsInProgress = True
        If Cells(7, 5).Value = c_strPurposeNK Then
            Cells(rngTarget.Row, 17).Value = "NK"
        Else
            Cells(rngTarget.Row, 17).Value = "JV"
        End If
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd||fffd||fffd||5c3|f|fffd|[|fffd|^|fffd||315||3cd|X|fffd|i|fffd||113||1c2||74d||fffd||fffd||741|j
    If blnSetData Then
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        If rngTarget.Row = 4 Then ''LedgerCode Change
            ''|fffd|w|fffd|b|fffd|_|fffd|Z|fffd||fffd||fffd||3cd|X
            lngTokenIdx = fg_GetIndexFromTokenInCSV(rngTarget.Value, rngTarget.Validation.Formula1)
            
            If lngTokenIdx < 0 Then
                Cells(5, 5).Value = ""             ''Description
                Cells(6, 5).Value = ""             ''Currency
                Cells(7, 5).Value = ""             ''This Ledger for
            Else
                Cells(5, 5).Value = g_typAryTRInfo(lngTokenIdx).m_strDescript    ''Description
                Cells(6, 5).Value = g_typAryTRInfo(lngTokenIdx).m_strCurrency    ''Currency
            
                ''This Ledger for
                If g_typAryTRInfo(lngTokenIdx).m_intPurpose = 0 Then
                    Cells(7, 5).Value = c_strPurposeNK
                Else
                    Cells(7, 5).Value = c_strPurposeJV
                End If
                m_intPurpose = g_typAryTRInfo(lngTokenIdx).m_intPurpose         ''Purpose
            End If
        End If
        
        ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
        s_SetupDetailCells
        
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If

    ''|fffd|_|fffd|[|fffd|e|fffd|B|fffd|t|fffd||fffd||fffd|O |fffd||310||752||fffd|
    If rngTarget.Row >= c_intTRDetailRowST And rngTarget.Row <= c_lngMAX_ROWINDEX Then
        m_blnSetupCellsInProgress = True
        Cells(rngTarget.Row, 24) = 1
        Cells(rngTarget.Row, 22).Value = "" ''|fffd|N|fffd|xHiddenCell|fffd|N|fffd||fffd||fffd|A
        m_blnSetupCellsInProgress = False
        m_blnDirty = True
    End If

    f_onChangeCell = True

End Function

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   DB|fffd|X|fffd|V|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||fffd|DB|fffd|X|fffd|V|fffd|A|fffd||fffd||fffd||fffd||452||1c9||fffd||fffd||fffd||fffd|s|fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2003/03/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|(|fffd||690|A)
'   2004/02/09 : Knowlbo Suzuki : ModifyPlace|fffd||1c9||fffd|
'   2004/07/22 : Knowlbo Suzuki : LedgerDate|fffd||314|N|fffd|x|fffd||fffd|,HiddenCell|fffd|l|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'   2005/11/29 : Knowlbo Suzuki : IFRequestNo|fffd||1c9||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnDbUpDate_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim lngRowIndex As Long
    Dim datTarget As Date
    Dim datValue As Date
    Dim strMSG As String
    Dim strLedID As String
    Dim lngRecIDNo As Long
    Dim strData As String
    Dim blnUpdate As Boolean
    Dim blnInsert As Boolean
    Dim datPrNow As Date

    datPrNow = Now()
    s_CheckSheetUpdate    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N

    If Not m_blnDirty Then ''|fffd|V|fffd|[|fffd|g|fffd||3cd|X|fffd||202||fffd|
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|K|fffd|{|fffd||fffd||fffd||34d||fffd||fffd||682||303|`|fffd|F|fffd|b|fffd|N
    If Not f_CheckInputData() Then
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    ''|fffd|m|fffd|F|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd|
    If g_blnR3IfEnable Then ''R3IF |fffd|L|fffd||fffd|
        strMSG = c_strQUESTION_UPDATE
    Else                    ''R3IF |fffd||fffd||fffd||fffd|
        strMSG = "Now Setting is Disable R/3 Interface!" & vbCrLf & c_strQUESTION_UPDATE
    End If
    If vbNo = MsgBox(strMSG, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
        CmdBtnDbUpDate.Visible = True
        Exit Sub
    End If

    blnInsert = False
    sg_SetScreenUpdate False
    
    sg_GetCurrentRecIDNo GLED_TR ''  |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd|[|fffd|hIDNo|fffd||64fe|

    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If
    
    Call objdba.startTransaction(adoCn)

On Error GoTo LBL_ERR

    datTarget = DateValue(Cells(3, 5).Value)
    strLedID = Cells(4, 5).Value
    
    ''Book|fffd|\|fffd||fffd||fffd||fffd||fffd||64fe|
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & c_strTBL_Transfer & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.TargetPeriod = " & fg_AddSingleQuotation(datTarget)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strLedID)
    
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & c_strTBL_Transfer
        GoTo LBL_ERR
    End If
    
    ''DB|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V=================================================
    m_blnSetupCellsInProgress = True
    For lngRowIndex = c_intTRDetailRowST To c_lngMAX_ROWINDEX Step 1
        If Cells(lngRowIndex, 24).Value <> "" Then ''Dirty |fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            If f_IsNullRow(lngRowIndex) Then
                ''NULL|fffd|s|fffd||202||302||143|f|fffd|[|fffd|^|fffd||d3dc|(|fffd||fffd||fffd||389||fffd|)
            Else
                ''|fffd|X|fffd|V/|fffd||1c9||fffd|
                blnUpdate = False
                adoRs.Filter = adFilterNone
                
                ''|fffd|X|fffd|V
                If Cells(lngRowIndex, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd||fffd||fffd|
                    lngRecIDNo = Cells(lngRowIndex, 23).Value
                    adoRs.Filter = "ID=" & lngRecIDNo
                    If Not adoRs.EOF Then   ''Update |fffd||fffd||fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|}|fffd||fffd|
                        objdba.SQLString = fg_setLedgerCBTHistorySQLString(adoRs, c_strTBL_TransferHST, datPrNow)
                        If (objdba.ExecuteSQL(adoCn) <> 0) Then
                            strMSG = c_strMSG_DB_UpdateHIST & ":" & c_strTBL_Transfer
                            GoTo LBL_ERR
                        End If
                    Else
                        strMSG = c_strMSG_DB_RECSETMATCHFAIL & ":" & c_strTBL_Transfer
                        GoTo LBL_ERR
                    End If
                    blnUpdate = True

                ''|fffd||1c9||fffd|
                Else
                    adoRs.AddNew    ''|fffd|V|fffd|K|fffd||1c9||fffd|
                    lngRecIDNo = g_lngAryCurRecIDNumber(GLED_TR)
                    lngRecIDNo = lngRecIDNo + 1
                    g_lngAryCurRecIDNumber(GLED_TR) = lngRecIDNo
                    blnUpdate = True
                    blnInsert = True
                End If
                If blnUpdate Then
                
                    ''|fffd|o|fffd|[|fffd||fffd||fffd|t|fffd||30d||c42c|
                    If Cells(lngRowIndex, 22).Value <> "" Then
                        ''HiddenCell|fffd||254|N|fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||382||fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
                            datValue = DateSerial(Cells(lngRowIndex, 22).Value, _
                                                  Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                    Else
                        If Month(datTarget) < Cells(lngRowIndex, 2).Value Then
                            datValue = DateSerial(Year(datTarget) - 1, _
                                                  Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                        Else
                            datValue = DateSerial(Year(datTarget), _
                                                  Cells(lngRowIndex, 2).Value, Cells(lngRowIndex, 3).Value)
                        End If
                    End If

                    adoRs.Fields("ID").Value = lngRecIDNo                   ''ID
                    adoRs.Fields("OfficeCode").Value = g_strOfficeCode      ''OfficeCode
                    adoRs.Fields("LedgerCode").Value = strLedID             ''LedgerCode
                    adoRs.Fields("TargetPeriod").Value = datTarget          ''TargetPeriod
                    adoRs.Fields("LedgerDate").Value = datValue             ''LedgerDate
                    If Cells(lngRowIndex, 4).Value <> "" Then               ''Description
                        strData = CStr(Cells(lngRowIndex, 4).Value)
                        adoRs.Fields("Description").Value = strData
                    Else
                        adoRs.Fields("Description").Value = Null
                    End If
                    strData = c_strKwdModifyNK
                    If Cells(lngRowIndex, 7).Value <> "" Then
                        strData = strData & CStr(Cells(lngRowIndex, 7).Value)
                        If Len(strData) > 128 Then strData = Left$(strData, 128)
                    End If
                    adoRs.Fields("Details").Value = strData                         ''Details
                    adoRs.Fields("WBSCode").Value = Cells(lngRowIndex, 9).Value     ''WBSCode
                    strData = CStr(Cells(lngRowIndex, 10).Value)                    ''AccountCode
                    adoRs.Fields("AccountCode").Value = strData
                    strData = Cells(lngRowIndex, 11).Value                          ''AccountName
                    adoRs.Fields("AccountName").Value = strData
                    If Cells(lngRowIndex, 12).Value <> "" Then                      ''ConnectionCode
                        strData = Cells(lngRowIndex, 12).Value
                        adoRs.Fields("ConnectionCode").Value = strData
                    Else
                        adoRs.Fields("ConnectionCode").Value = Null
                    End If
                    If Cells(lngRowIndex, 13).Value <> "" Then                      ''ConnectionName
                        strData = Cells(lngRowIndex, 13).Value
                        adoRs.Fields("ConnectionName").Value = strData
                    Else
                        adoRs.Fields("ConnectionName").Value = Null
                    End If
                    If Cells(lngRowIndex, 14).Value <> "" Then                      ''LedgerLinkCode
                        strData = Cells(lngRowIndex, 14).Value
                        adoRs.Fields("LedgerLinkCode").Value = strData
                    Else
                        adoRs.Fields("LedgerLinkCode").Value = Null
                    End If
                    If Cells(lngRowIndex, 15).Value <> "" Then                      ''EviNo
                        adoRs.Fields("EviNo").Value = Cells(lngRowIndex, 15).Value
                    Else
                        adoRs.Fields("EviNo").Value = Null
                    End If
                    If Cells(lngRowIndex, 16).Value <> "" Then                      ''CheckNo
                        adoRs.Fields("CheckNo").Value = Cells(lngRowIndex, 16).Value
                    Else
                        adoRs.Fields("CheckNo").Value = Null
                    End If
                    adoRs.Fields("NKJV").Value = Cells(lngRowIndex, 17).Value       ''NKJV
                            
                    If Cells(lngRowIndex, 18).Value = "Y" Then                      ''Claim
                        adoRs.Fields("Claim").Value = "1"
                    Else
                        adoRs.Fields("Claim").Value = "0"
                    End If
    
                    If Cells(lngRowIndex, 19).Value <> "" Then                      ''Paid
                        adoRs.Fields("Paid").Value = Cells(lngRowIndex, 19).Value
                    Else
                        adoRs.Fields("Paid").Value = 0
                    End If
                    If Cells(lngRowIndex, 20).Value <> "" Then                      ''Received
                        adoRs.Fields("Received").Value = Cells(lngRowIndex, 20).Value
                    Else
                        adoRs.Fields("Received").Value = 0
                    End If
                    adoRs.Fields("ModifyPlace").Value = "1" ''SS_Edit=1
                    adoRs.Fields("InsertDate").Value = datPrNow
                    adoRs.Fields("InsertUID").Value = g_strLoginId
        
                    adoRs.Fields("IFRequestNo").Value = -1
                    
                    If Cells(7, 5).Value <> c_strPurposeJV Then
                        If (g_blnR3IfEnable = False) Then ''R3IF|fffd||fffd||fffd||fffd|
                            adoRs.Fields("IFSendDate").Value = 1
                            adoRs.Fields("IFRequestNo").Value = -9
                        End If
                    End If
                    
                    adoRs.Update
                
                    ''|fffd||113||1c2||74d||fffd||fffd||742||fffd||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
                    'Cells(lngRowIndex, 23).Value = lngRecIDNo
                    'Cells(lngRowIndex, 24).Value = ""
                End If
                adoRs.MoveFirst
            End If
        End If
    Next
    Call objdba.closeRecordset(adoRs)


    If m_blnCreateLinkcode Then
    ''LinkCode|fffd|J|fffd||fffd||fffd||fffd||fffd|gNo.|fffd||6d1||fffd||fffd||fffd||fffd||fffd|(|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|g|fffd|p|fffd||fffd||fffd||fffd|No|fffd||fffd|DB|fffd||256||7c2||fffd||fffd|j
        If fg_UpdateCurrentLinkCodeNo(GLNK_FA, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    ''|fffd|J|fffd||fffd||fffd||fffd||fffd|gLedgerRecID|fffd|X|fffd|V
    If blnInsert Then
        If fg_UpdateCurrentRecIDNo(GLED_TR, adoCn, objdba) = False Then GoTo LBL_ERR
    End If
    
    
    ''|fffd||fffd|v|fffd|A|fffd|g|fffd|f|fffd|[|fffd|^|fffd|}|fffd||fffd|
    If g_blnR3IfEnable Then ''R3IF |fffd|L|fffd||fffd|
        If Cells(7, 5).Value <> c_strPurposeJV Then
            ''|fffd|L|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||50e||64fe|
            If fg_GetR3FIPeriod(strData) = False Then GoTo LBL_ERR
            If fg_SetR3AccountsData(adoCn, objdba, strLedID, datTarget, _
                                    Cells(6, 5).Value, "", strData, False) <> True Then GoTo LBL_ERR
        End If
    End If

    ''SummaryAccount|fffd||c42c|--------------------------------
    If fg_CreateAccountSummaryByLedCode(adoCn, objdba, datTarget, strLedID, Cells(6, 5).Value, _
                                        m_intPurpose, "") <> True Then GoTo LBL_ERR

    Call objdba.commitTransaction(adoCn)
    
    On Error GoTo 0
    Call objdba.closeADOConnection(adoCn)
    
    m_blnDirty = False
    
    ''|fffd||fffd||fffd||5c3|Z|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v
    s_SetupDetailCells
    
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    
    
    m_blnMasterUpdate = False ''Flag|fffd||3cd|X
    m_blnCreateLinkcode = False
    
    ThisWorkbook.Activate
    
    sg_SetScreenUpdate True
    MsgBox c_strQUESTION_COMPLETE, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
    
LBL_END:
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
LBL_ERR:
    Call objdba.rollbackTransaction(adoCn)
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    m_blnSetupCellsInProgress = False
    CmdBtnDbUpDate.Visible = True
    sg_SetScreenUpdate True
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED3]Update Error:" & strMSG & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    MsgBox c_strMSG_FALSEUPDATE & ": " & strMSG, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
    GoTo LBL_END
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   QUIT|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2017/08/02 : Y.Watanabe     : Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'   2018/01/15 : Y.Watanabe     : |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnQuit_Click()
    
    s_CheckSheetUpdate    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N
    If Not fg_QuestionSave(m_blnDirty) Then
        Exit Sub
    End If
    Application.ActiveWindow.WindowState = xlMinimized
    Call g_objLog.PrintOut(ID_NKFAS_SS, "------End LEDGER [" & g_strArywsName(2) & "]", Err, LEVEL_LOG)
    ''<<<2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    VBA.AppActivate g_lngCurrentProcessId
'    ''<<<2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
'    ''Excel|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
'    VBA.AppActivate Excel.Application.Caption
'    ''>>>2017.08.02 Add By Y.Watanabe Excel2016|fffd||fffd|Book|fffd||14f||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||302||755|\|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    ''>>>2018.01.15 Mod By Y.Watanabe |fffd|M|fffd||fffd||fffd||3c2||743|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||182||fffd||fffd||10a|J|fffd||fffd||fffd||18e||fffd||fffd|s|fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd|
    frmLauncher.Show
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   Connection Code|fffd||48f|W|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Connection Code|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/22 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnConnCodeEdit_Click()
    
    frmConnect_Setting.Show
    If g_blnConnCodeEdit = False Then    ''|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
        GoTo LBL_END
    End If
    
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
    sg_GetConnectionCodeList    ''ConnectionCode |fffd||113||1c2||74d||fffd||fffd||fffd|
    ''ConnectionCode |fffd||110||752||fffd|
    sg_SetupConnCodeCells Me.Range("L" & c_intTRDetailRowST, "L" & c_lngMAX_ROWINDEX), _
                          Me.Range("M" & c_intTRDetailRowST, "M" & c_lngMAX_ROWINDEX), _
                          Me.Range("AC" & c_intTRDetailRowST)

    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
LBL_END:
    CmdBtnConnCodeEdit.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|U|fffd||58c||fffd||fffd|f|fffd|[|fffd|^|fffd|Q|fffd||183|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|U|fffd||58c||fffd||fffd|f|fffd|[|fffd|^|fffd|Q|fffd||183|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/12/05 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2004/07/22 : Knowlbo Suzuki : |fffd|Q|fffd||fffd|Data|fffd||fffd|V|fffd||fffd||254|N|fffd|x|fffd||fffd||6d1||fffd|
'   2013/03/01 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnReferData_Click()

    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim datValue As Date
    Dim strMSG As String
    Dim lngRowIndex As Long
    Dim lngAddRowNo As Long
    Dim strRefTrLedgerCode As String
    Dim strDbTable As String
    Dim lngRefTrSrcID As Long
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim intSMonth As Integer
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    If Cells(4, 5).Value = "" Then
        MsgBox c_strMSG_LEDCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnReferData.Visible = True
        Exit Sub
    End If
 
    If Cells(7, 5).Value = c_strPurposeNK Then
        frmModifyContents.PrmPurpose = 0 ''NK|fffd||fffd||752||fffd|
    Else
        frmModifyContents.PrmPurpose = 1 ''JV|fffd||fffd||752||fffd|
    End If
    
    ''<<<2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    ' |fffd||38f||6d4|N|fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd||fffd||fffd||4c382||194||fffd|r|fffd||fffd||fffd||fffd|
    datValue = DateValue(Cells(3, 5).Value)
    intSMonth = Month(fg_GetStartOfYear(fg_GetFiscalYear(datValue)))
    If Month(datValue) <> intSMonth Then
        datValue = DateAdd("m", -1, datValue)
    End If
    
'    datValue = DateValue(Cells(3, 5).Value)
'    If Month(datValue) <> 4 Then
'        datValue = DateAdd("m", -1, datValue)
'    End If
    ''>>>2013.03.01 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    frmModifyContents.PrmCurrency = Cells(6, 5).Value
    frmModifyContents.PrmRefTrTargetMonth = datValue
    frmModifyContents.s_SetUpForm
    frmModifyContents.Show  ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|ID,TargetMonth,LedgerCode|fffd||fffd||fffd||64fe|
    If (frmModifyContents.Result <> True) Then
        frmModifyContents.s_CloseForm     ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
        Exit Sub
    End If
    lngRefTrSrcID = frmModifyContents.GetRefTrSrcID
    datValue = frmModifyContents.GetRefTrTargetMonth
    strRefTrLedgerCode = frmModifyContents.GetRefTrLedgerCode
    frmModifyContents.s_CloseForm     ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h

    Select Case Left$(strRefTrLedgerCode, 2)
    Case "CB" ''CashBook
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select

    ''|fffd||d448d|s|fffd||fffd||fffd||fffd|
    lngRowIndex = c_intTRDetailRowST
    Do While lngRowIndex <= c_lngMAX_ROWINDEX
        If Cells(lngRowIndex, 2).Value = "" And f_IsNullRow(lngRowIndex) Then
            lngAddRowNo = lngRowIndex
            Exit Do
        End If
        lngRowIndex = lngRowIndex + 1
    Loop

    m_blnDirty = True    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|X|fffd|V
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
        
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strRefTrLedgerCode)
    strSQL = strSQL & " AND tb.ID = " & lngRefTrSrcID
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
    
        datValue = adoRs.Fields("LedgerDate").Value
        Cells(lngAddRowNo, 22).Value = Year(datValue) ''HiddenCell|fffd||254|N|fffd|x|fffd||fffd||6d1||fffd|
        Cells(lngAddRowNo, 2).Value = Month(datValue)
        Cells(lngAddRowNo, 3).Value = Day(datValue)
        Cells(lngAddRowNo, 4).Value = adoRs.Fields("Description").Value
        If Not IsNull(adoRs.Fields("Details").Value) Then
            Cells(lngAddRowNo, 7).Value = adoRs.Fields("Details").Value
            If Len(Cells(lngAddRowNo, 7).Value) > 128 Then
                Cells(lngAddRowNo, 7).Value = Left$(adoRs.Fields("Details").Value, 128)
            End If
        End If
        Cells(lngAddRowNo, 9).Value = adoRs.Fields("WBSCode").Value
        Cells(lngAddRowNo, 10).Value = adoRs.Fields("AccountCode").Value
        Cells(lngAddRowNo, 11).Value = adoRs.Fields("AccountName").Value
        If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
            Cells(lngAddRowNo, 12).Value = adoRs.Fields("ConnectionCode").Value
        End If
        If Not IsNull(adoRs.Fields("ConnectionName").Value) Then
            Cells(lngAddRowNo, 13).Value = adoRs.Fields("ConnectionName").Value
        End If
        If Not IsNull(adoRs.Fields("LedgerLinkCode").Value) Then
            Cells(lngAddRowNo, 14).Value = adoRs.Fields("LedgerLinkCode").Value
        End If
        If Not IsNull(adoRs.Fields("EviNo").Value) Then
            Cells(lngAddRowNo, 15).Value = adoRs.Fields("EviNo").Value
        End If
        If Not IsNull(adoRs.Fields("CheckNo").Value) Then
            Cells(lngAddRowNo, 16).Value = adoRs.Fields("CheckNo").Value
        End If
        Cells(lngAddRowNo, 17).Value = adoRs.Fields("NKJV").Value
        
        If adoRs.Fields("Claim").Value = 1 Then
            Cells(lngAddRowNo, 18).Value = "Y"
        Else
            Cells(lngAddRowNo, 18).Value = "N"
        End If
        
        ''Paid Received |fffd||14f53|]|fffd||fffd||fffd||fffd|i|fffd|U|fffd||58b|t|fffd|`|fffd|[|fffd|j
        If Not IsNull(adoRs.Fields("Received").Value) And adoRs.Fields("Received").Value <> 0 Then
            Cells(lngAddRowNo, 19).Value = CCur(adoRs.Fields("Received").Value)
        End If
        If Not IsNull(adoRs.Fields("Paid").Value) And adoRs.Fields("Paid").Value <> 0 Then
            Cells(lngAddRowNo, 20).Value = CCur(adoRs.Fields("Paid").Value)
        End If
        Cells(lngAddRowNo, 23).Value = ""
        Cells(lngAddRowNo, 24).Value = 1
     
        
        ''|fffd||fffd||fffd|b|fffd|N|fffd|A|fffd||50a|||fffd||fffd|
'        With Range("B" & lngAddRowNo, "U" & lngAddRowNo).Interior
'            .ColorIndex = 15
'            .Pattern = xlSolid
'            .PatternColorIndex = xlAutomatic
'        End With
        Range("B" & lngAddRowNo, "T" & lngAddRowNo).Locked = True
        
        Exit Do
    Loop
   
    On Error GoTo 0

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    CmdBtnReferData.Visible = True
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED3]cmdReferData:DBError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "cmdReferData", strMSG
    GoTo LBL_END

End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd||a287||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd|Q|fffd||183|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd||a287||fffd|U|fffd||583|f|fffd|[|fffd|^|fffd|Q|fffd||183|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2004/07/29 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'   2013/03/04 : |fffd|n|7c97|S|fffd|q       : |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
'-----------------------------------------------------------------
Private Sub CmdBtnLumpTransfer_Click()
    Dim strSQL As String
    Dim adoCn As ADODB.Connection
    Dim adoRs As ADODB.Recordset
    Dim objdba As clsDBAccess
    Dim datValue As Date
    Dim strMSG As String
    Dim lngRowIndex As Long
    Dim lngAddRowNo As Long
    Dim strRefTrLedgerCode As String
    Dim strDbTable As String
    Dim strIDcsv As String
    Dim strDstWBS As String
    Dim strDstAcCode As String
    Dim strDstAcName As String
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    Dim intSMonth As Integer
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    
    strIDcsv = ""
    If Cells(4, 5).Value = "" Then
        MsgBox c_strMSG_LEDCODE, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnLumpTransfer.Visible = True
        Exit Sub
    End If
 
    ''|fffd||d448d|s|fffd||fffd||fffd||fffd|
    lngRowIndex = c_intTRDetailRowST
    Do While lngRowIndex <= c_lngMAX_ROWINDEX
        If Cells(lngRowIndex, 2).Value = "" And f_IsNullRow(lngRowIndex) Then
            lngAddRowNo = lngRowIndex
            Exit Do
        End If
        lngRowIndex = lngRowIndex + 1
    Loop
 
    ''|fffd||3ca||fffd||fffd||fffd||fffd|Capacity|fffd||752||fffd|
    frmLumpTransfer.PrmCapacity = (c_lngMAX_ROWINDEX - lngAddRowNo + 1) / 2
    
    If Cells(7, 5).Value = c_strPurposeNK Then
        frmLumpTransfer.PrmPurpose = 0 ''NK|fffd||fffd||752||fffd|
    Else
        frmLumpTransfer.PrmPurpose = 1 ''JV|fffd||fffd||752||fffd|
    End If
    
    ''<<<2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
    datValue = DateValue(Cells(3, 5).Value)
    intSMonth = Month(fg_GetStartOfYear(fg_GetFiscalYear(datValue)))
    If Month(datValue) <> intSMonth Then
        datValue = DateAdd("m", -1, datValue)
    End If
    
'    datValue = DateValue(Cells(3, 5).Value)
'    If Month(datValue) <> 4 Then
'        datValue = DateAdd("m", -1, datValue)
'    End If
    ''>>>2013.03.04 Mod By Y.Watanabe |fffd||fffd||fffd|Z|fffd||fffd||fffd||3cd|X|fffd||389||fffd|
 
    frmLumpTransfer.PrmCurrency = Cells(6, 5).Value
    frmLumpTransfer.PrmRefTrTargetMonth = datValue
    frmLumpTransfer.s_SetUpForm
    frmLumpTransfer.Show  ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    
    ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|ID,TargetMonth,LedgerCode|fffd||fffd||fffd||64fe|
    If (frmLumpTransfer.Result <> True) Then
        frmLumpTransfer.s_CloseForm     ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
        Exit Sub
    End If
    
    strIDcsv = frmLumpTransfer.GetSelectedIDcsv
    strDstWBS = frmLumpTransfer.DestWBSCode
    strDstAcCode = frmLumpTransfer.DestAcCode
    strDstAcName = frmLumpTransfer.DestAcName
    strRefTrLedgerCode = frmLumpTransfer.GetRefTrLedgerCode
    frmLumpTransfer.s_CloseForm     ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h

    If (strIDcsv = "") Then
        MsgBox "Can't Find Selected-Data!", vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        CmdBtnLumpTransfer.Visible = True
        Exit Sub
    End If

    Select Case Left$(strRefTrLedgerCode, 2)
    Case "CB" ''CashBook
        strDbTable = c_strTBL_CashBook
    Case "BB" ''BankBook
        strDbTable = c_strTBL_BankBook
    Case "TR" ''Transfer
        strDbTable = c_strTBL_Transfer
    End Select
    
    m_blnDirty = True    ''|fffd|V|fffd|[|fffd|g|fffd|X|fffd|V|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|X|fffd|V
    m_blnSetupCellsInProgress = True
    Unprotect Password:=c_strSheetPWD
        
    ''|fffd|c|fffd|a|fffd|f|fffd|[|fffd|^|fffd|Q|fffd||fffd|
    strMSG = "DBSelectProcError"
    Call sg_setDBACondition(adoCn, adoRs, objdba)
    If (objdba.openADOConnection(adoCn) <> 0) Then
        strMSG = c_strMSG_DB_CONNECTFAIL
        GoTo LBL_ERR
    End If

On Error GoTo LBL_ERR
    
    strSQL = "SELECT * FROM " & c_NKFAOwner & "." & strDbTable & " tb"
    strSQL = strSQL & " WHERE tb.OfficeCode = " & fg_AddSingleQuotation(g_strOfficeCode)
    strSQL = strSQL & " AND tb.LedgerCode = " & fg_AddSingleQuotation(strRefTrLedgerCode)
    strSQL = strSQL & " AND tb.ID IN (" & strIDcsv & ")"
    objdba.SQLString = strSQL
    If objdba.openRecordset(adoCn, adoRs) <> 0 Then
        strMSG = c_strMSG_DB_RECSETFAIL & ":" & strDbTable
        GoTo LBL_ERR
    End If
    
    Do Until adoRs.EOF
    
        datValue = adoRs.Fields("LedgerDate").Value
        Cells(lngAddRowNo, 22).Value = Year(datValue) ''HiddenCell|fffd||254|N|fffd|x|fffd||fffd||6d1||fffd|
        Cells(lngAddRowNo + 1, 22).Value = Year(datValue) ''HiddenCell|fffd||254|N|fffd|x|fffd||fffd||6d1||fffd|
        Cells(lngAddRowNo, 2).Value = Month(datValue)
        Cells(lngAddRowNo + 1, 2).Value = Month(datValue)
        Cells(lngAddRowNo, 3).Value = Day(datValue)
        Cells(lngAddRowNo + 1, 3).Value = Day(datValue)
        Cells(lngAddRowNo, 4).Value = adoRs.Fields("Description").Value
        Cells(lngAddRowNo + 1, 4).Value = adoRs.Fields("Description").Value
        If Not IsNull(adoRs.Fields("Details").Value) Then
            Cells(lngAddRowNo, 7).Value = adoRs.Fields("Details").Value
            Cells(lngAddRowNo + 1, 7).Value = adoRs.Fields("Details").Value
            If Len(Cells(lngAddRowNo, 7).Value) > 128 Then
                Cells(lngAddRowNo, 7).Value = Left$(adoRs.Fields("Details").Value, 128)
                Cells(lngAddRowNo + 1, 7).Value = Left$(adoRs.Fields("Details").Value, 128)
            End If
        End If
        Cells(lngAddRowNo, 9).Value = adoRs.Fields("WBSCode").Value
        Cells(lngAddRowNo + 1, 9).Value = strDstWBS
        Cells(lngAddRowNo, 10).Value = adoRs.Fields("AccountCode").Value
        Cells(lngAddRowNo, 11).Value = adoRs.Fields("AccountName").Value
        If strDstAcCode = "9000*" Then
            Cells(lngAddRowNo + 1, 10).Value = adoRs.Fields("AccountCode").Value
            Cells(lngAddRowNo + 1, 11).Value = adoRs.Fields("AccountName").Value
        Else
            Cells(lngAddRowNo + 1, 10).Value = strDstAcCode
            Cells(lngAddRowNo + 1, 11).Value = strDstAcName
        End If
        
        If Not IsNull(adoRs.Fields("ConnectionCode").Value) Then
            Cells(lngAddRowNo, 12).Value = adoRs.Fields("ConnectionCode").Value
            Cells(lngAddRowNo + 1, 12).Value = adoRs.Fields("ConnectionCode").Value
        End If
        If Not IsNull(adoRs.Fields("ConnectionName").Value) Then
            Cells(lngAddRowNo, 13).Value = adoRs.Fields("ConnectionName").Value
            Cells(lngAddRowNo + 1, 13).Value = adoRs.Fields("ConnectionName").Value
        End If
        If Not IsNull(adoRs.Fields("LedgerLinkCode").Value) Then
            Cells(lngAddRowNo, 14).Value = adoRs.Fields("LedgerLinkCode").Value
            Cells(lngAddRowNo + 1, 14).Value = adoRs.Fields("LedgerLinkCode").Value
        End If
        If Not IsNull(adoRs.Fields("EviNo").Value) Then
            Cells(lngAddRowNo, 15).Value = adoRs.Fields("EviNo").Value
            Cells(lngAddRowNo + 1, 15).Value = adoRs.Fields("EviNo").Value
        End If
        If Not IsNull(adoRs.Fields("CheckNo").Value) Then
            Cells(lngAddRowNo, 16).Value = adoRs.Fields("CheckNo").Value
            Cells(lngAddRowNo + 1, 16).Value = adoRs.Fields("CheckNo").Value
        End If
        Cells(lngAddRowNo, 17).Value = adoRs.Fields("NKJV").Value
        Cells(lngAddRowNo + 1, 17).Value = adoRs.Fields("NKJV").Value
        
        If adoRs.Fields("Claim").Value = 1 Then
            Cells(lngAddRowNo, 18).Value = "Y"
            Cells(lngAddRowNo + 1, 18).Value = "Y"
        Else
            Cells(lngAddRowNo, 18).Value = "N"
            Cells(lngAddRowNo + 1, 18).Value = "N"
        End If
        
        ''Paid Received |fffd||14f53|]|fffd||fffd||fffd||fffd|i|fffd|U|fffd||58b|t|fffd|`|fffd|[|fffd|j
        If Not IsNull(adoRs.Fields("Received").Value) And adoRs.Fields("Received").Value <> 0 Then
            Cells(lngAddRowNo, 19).Value = CCur(adoRs.Fields("Received").Value)
            Cells(lngAddRowNo + 1, 20).Value = CCur(adoRs.Fields("Received").Value)
        
        End If
        If Not IsNull(adoRs.Fields("Paid").Value) And adoRs.Fields("Paid").Value <> 0 Then
            Cells(lngAddRowNo, 20).Value = CCur(adoRs.Fields("Paid").Value)
            Cells(lngAddRowNo + 1, 19).Value = CCur(adoRs.Fields("Paid").Value)
        End If
        Cells(lngAddRowNo, 23).Value = ""
        Cells(lngAddRowNo + 1, 23).Value = ""
        Cells(lngAddRowNo, 24).Value = 1
        Cells(lngAddRowNo + 1, 24).Value = 1
        Range("B" & lngAddRowNo, "T" & lngAddRowNo).Locked = True
        
        lngAddRowNo = lngAddRowNo + 2
        adoRs.MoveNext
    Loop
   
    On Error GoTo 0

LBL_END:
    Call objdba.closeRecordset(adoRs)
    Call objdba.closeADOConnection(adoCn)
    
    CmdBtnLumpTransfer.Visible = True
    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
    m_blnSetupCellsInProgress = False
    Set adoRs = Nothing
    Set adoCn = Nothing
    Set objdba = Nothing
    Exit Sub
    
LBL_ERR:
    Call g_objLog.PrintOut(ID_NKFAS_SS, "[LED3]cmdLumpTransfer:DBError" & Str(Err.number) & " - " & Err.Description, Err, LEVEL_ERROR)
    sg_MsgBoxError "cmdLumpTransfer", strMSG
    GoTo LBL_END
End Sub


'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   LinkCode|fffd|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   |fffd||202||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)LinkCode|fffd|I|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/11/13 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub CmdBtnLinkCodeSelect_Click()

    Dim lngRowNo As Long
    Dim intKind As Integer
    
    intKind = -1
    If Cells(ActiveCell.Row, 10).Value = "" Then
        GoTo LBL_END
    End If
    lngRowNo = fg_FindSameDataRowNo(Cells(ActiveCell.Row, 10), _
                wsSettings.Range("C2", "C65536"))
    If lngRowNo = 0 Then
        GoTo LBL_END
    End If
    If wsSettings.Cells(lngRowNo, 12).Value <> "" Then
        If InStr(wsSettings.Cells(lngRowNo, 12).Value, "(") = 0 Then
            Select Case wsSettings.Cells(lngRowNo, 12).Value
            Case "IV"
                intKind = GLNK_IV
            Case "AS"
                intKind = GLNK_AS
            Case "SC"
                intKind = GLNK_SC
            Case "RM"
                intKind = GLNK_RM
                If Cells(ActiveCell.Row, 10).Value = c_strACRM_SndHeadCode Then ''|fffd|{|fffd||402||591||fffd||fffd||fffd|
                    Dim strCode As String
                    ''|fffd|{|fffd||402||591||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||356||fffd||fffd||fffd||fffd||152||fffd| "HeaD Office"
                    strCode = g_strOfficeCode & Format$(g_intTargetSysYear Mod 100, "00")
                    strCode = strCode & "RM" & "HDO"
                    m_blnDirty = True
                    m_blnSetupCellsInProgress = True
                    Unprotect Password:=c_strSheetPWD
                    Cells(ActiveCell.Row, 14) = strCode
                    Cells(ActiveCell.Row, 24) = 1
                    Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
                    m_blnSetupCellsInProgress = False
                    GoTo LBL_END
                End If
                
                If Cells(ActiveCell.Row, 10).Value = c_strACRM_SndOtherCode Then ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||591||fffd||fffd||fffd|
                    ''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||34e||fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_RM_ReqToCode, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(ActiveCell.Row, 14).Activate
                    GoTo LBL_END
                End If
            Case "PP"
                intKind = GLNK_PP
            Case "FA"
                intKind = GLNK_FA
                If Cells(ActiveCell.Row, 10).Value = c_strACFA_SaleCode Then ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
                    ''|fffd||152||8391||fffd|Y|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|LinkCode|fffd||34e||fffd||fffd||fffd||fffd|
                    MsgBox c_strMSG_FA_SaleCode, vbInformation Or vbOKOnly, c_strNAME_SYSTEM
                    Cells(ActiveCell.Row, 14).Activate
                    GoTo LBL_END
                ElseIf Cells(ActiveCell.Row, 10).Value = c_strACFA_BuyCode Then ''|fffd||152||8391||fffd|Y|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If vbYes <> MsgBox(c_strMSG_FA_BuyNEWCode, vbQuestion Or vbYesNo, c_strNAME_SYSTEM) Then
                        Cells(ActiveCell.Row, 14).Activate
                        GoTo LBL_END
                    End If
                    Cells(ActiveCell.Row, 14).Value = fg_CreateLinkCode(GLNK_FA)  ''|fffd||152||8391||fffd|YLinkCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    m_blnMasterUpdate = True
                    m_blnCreateLinkcode = True
                    GoTo LBL_END
                End If
            End Select
        End If
    End If
    
    frmSelectLinkCode.PrmLedgerType = intKind    ''BankBook|fffd||312||289||742||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||250||752||fffd|
    frmSelectLinkCode.PrmCurrency = Cells(6, 5).Value
    frmSelectLinkCode.PrmCondition = 1    ''Condition|fffd||fffd||752||fffd| (Paid|fffd||fffd||fffd||38f||fffd|)
    frmSelectLinkCode.PrmPurpose = 0    ''0|fffd||152||fffd|
    frmSelectLinkCode.setUpForm    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    frmSelectLinkCode.Show    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    If (frmSelectLinkCode.Result = True) Then   ''|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd|LedgerLinkCode|fffd||fffd||fffd||64fe|
        m_blnDirty = True
        m_blnSetupCellsInProgress = True
        Unprotect Password:=c_strSheetPWD
        Cells(ActiveCell.Row, 14) = frmSelectLinkCode.PrmSelectLCode
        Cells(ActiveCell.Row, 24) = 1
        Protect Password:=c_strSheetPWD, UserInterfaceOnly:=True
        m_blnSetupCellsInProgress = False
    End If
    frmSelectLinkCode.CloseForm    ''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
LBL_END:
    CmdBtnLinkCodeSelect.Visible = True
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|}|fffd|E|fffd|X|fffd|E|fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||303|v|fffd||fffd||fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'   (2)<Boolean |fffd|^> |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)Description|fffd||313||18e||fffd||fffd|||fffd|b|fffd|v|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub _
Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
    Dim strLedCode As String
    Dim intIx As Integer
    
    If Target.Row < c_intTRDetailRowST Or Target.Row > c_lngMAX_ROWINDEX Then
        Cancel = False
        Exit Sub
    End If
    If Target.Column < 4 Or Target.Column > 6 Then
        Cancel = False
        Exit Sub
    End If
    
    
    If Cells(4, 5).Value <> "" Then
        strLedCode = Right$(Cells(4, 5).Value, 2)
        For intIx = 0 To UBound(g_typAryTRInfo)
            If Cells(4, 5).Value = g_typAryTRInfo(intIx).m_strCode Then
                If InStr(g_typAryTRInfo(intIx).m_strDescript, "Auto") <> 0 Then
                    MsgBox c_strMSG_EDITLOCKAUTO_TR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
                    Cancel = True
                    Exit Sub
                End If
                Exit For
            End If
        Next
    End If

    ''TargetMonth|fffd||fffd|Decition|fffd|`|fffd|F|fffd|b|fffd|N
    If Cells(3, 5).Value <> "" And m_blnDecisionLock = True Then
        MsgBox c_strMSG_EDITLOCK, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Cancel = True
        Exit Sub
    End If

    If Target.Locked = True Then
        MsgBox c_strMSG_EDITLOCK_TR, vbCritical Or vbOKOnly, c_strNAME_SYSTEM
        Cancel = True
        Exit Sub
    End If

    If Target.Row >= c_intTRDetailRowST Then
        If Target.Column = 4 Then         ''Description Item
            g_strMapACCode = ""
            g_strMapACName = ""
            g_strMapWarn = ""
           
            g_objDscrptCmdBar.ShowPopup   ''Description|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||315|\|fffd||fffd|
            Cancel = True                 ''|fffd||fffd||fffd||fffd||303||fffd||fffd|j|fffd||fffd||fffd|[|fffd||314||fffd|\|fffd||fffd|
            Exit Sub
        End If
    End If
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|V|fffd|[|fffd|g|fffd||315||3cd|X|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||242||fffd||fffd|A|fffd|f|fffd|[|fffd|^|fffd||3cd|X|fffd||4cf||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
    
    Dim lngCollIndex As Long
    If m_blnSetupCellsInProgress Then
        Exit Sub
    End If

    If fg_IsEqualRangeValueAndCollection(m_collBeforeValue, Target) Then
        Exit Sub
    End If


    For lngCollIndex = 1 To Target.Count Step 1
        If Not f_onChangeCell(Target.Item(lngCollIndex)) Then
            GoTo ERROR_END
        End If
    Next

    sg_SetRangeValueToCollection m_collBeforeValue, Target
    Exit Sub

ERROR_END:
    m_blnSetupCellsInProgress = True
    sg_SetCollectionToRangeValue Target, m_collBeforeValue
    m_blnSetupCellsInProgress = False
End Sub

'-----------------------------------------------------------------
'  |fffd|T|fffd|v
'   |fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'  |fffd|p|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|
'   (1)<Range |fffd|^> |fffd||38f||6c3||fffd||fffd||fffd||fffd|W
'  |fffd|@|fffd|\|fffd||fffd||fffd||fffd|
'   (1)|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||303|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd|l|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
'  |fffd||7c2||fffd|l
'   |fffd||202||fffd|
'  |fffd||fffd||fffd|l
'   |fffd||202||fffd|
'  |fffd||3cd|X|fffd||fffd||fffd||fffd|
'   2002/09/17 : Knowlbo Suzuki : |fffd|V|fffd|K|fffd||c42c|
'-----------------------------------------------------------------
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    
    Dim blnLCode As Boolean
    Dim lngIx As Long
    blnLCode = False
'    If Cells(6, 5).Value <> "" And Cells(6, 5).Value = g_typAryPJTInfo(0).m_strCurrency Then ''PRJ|fffd||289||743|`|fffd|F|fffd|b|fffd|N
    If Cells(6, 5).Value <> "" Then  ''PRJ|fffd||289||743|`|fffd|F|fffd|b|fffd|N|fffd||342||fffd||fffd||202||fffd|
        If Target.Row >= c_intBBDetailRowST And Target.Row <= c_lngMAX_ROWINDEX Then
            If Cells(Target.Row, 10).Value <> "" Then ''|fffd||fffd||fffd||fffd||216||693||fffd||fffd||34d||3c2||fffd|
                lngIx = fg_GetIndexFromTokenInCSV(Cells(Target.Row, 10).Value, g_strLCodeIndispensableAccount)
                If lngIx >= 0 Then
                    blnLCode = True
                End If
                If Cells(Target.Row, 23).Value <> "" Then ''ID|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
                    blnLCode = False
                End If
            End If
        End If
    End If
LBL_END:
    CmdBtnLinkCodeSelect.Enabled = blnLCode
    sg_SetRangeValueToCollection m_collBeforeValue, Target
End Sub


' InQuest injected base64 decoded content
' lK+-z
' L\zP
' $"{^
' lK+-z
' &"w^
' ^"wb
' &"w^
' j)UjX
' Liz{

INQUEST-PP=macro
