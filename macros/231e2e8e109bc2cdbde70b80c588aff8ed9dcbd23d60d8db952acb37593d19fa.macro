Attribute VB_Name = "PublicFunctions"
Public Function CharCount(str As String, chr As String) As Integer
'counts how many times character Chr appears in string Str
     CharCount = Len(str) - Len(Replace(str, chr, ""))
End Function

Public Function IsEven(ByVal Number As Long) As Boolean
'Quick check to see if a number is even because I'm lazy
    IsEven = (Number Mod 2 = 0)
End Function

Public Function GetEmailFromCell(emailCell As Range)
'*searches a cell for a designated email format
'*usage:  @Username becomes Username@homestreet.com
Dim charString  As String
Dim em_start    As Integer
Dim em_finish   As Integer
Dim y           As Integer

charString = emailCell
If CharCount(charString, "@") > 0 Then
    em_start = 1
    em_finish = 1
    For y = 1 To CharCount(charString, "@")
        em_start = InStr(em_finish, emailCell, "@")
        If InStr(em_start, emailCell, " ") = 0 Then
            em_finish = Len(emailCell) + 1
        Else
            em_finish = InStr(em_start, emailCell, " ")
        End If
        GetEmailFromCell = Mid(emailCell, em_start + 1, em_finish - em_start - 1) & "@homestreet.com; "
    Next
End If

End Function


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub workbook_open()
'dormant workbook - if the workbook is dormant we don't want to auto-update
Call gridRefreshDB

End Sub
Attribute VB_Name = "dbGridBranch"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "dbGridLO"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "dbGridLOA"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "dbGridLOAList"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "dbGridOp"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "mGRID"
Option Explicit
Sub btnSearchName()

'input is blank
If shGridSearch.cmbLoName.Value = "" Then
    MsgBox "Please enter Loan Officer name. To search by Branch, use the other button."
    Exit Sub
End If

'LO is listed
Call gridSearchLOName(shGridSearch.cmbLoName)

End Sub

Sub btnSearchBranch()
If shGridSearch.cmbBranchCode = "" And shGridSearch.cmbBranchName = "" Then
    MsgBox "Please enter either a Branch Code or a Branch Name."
    Exit Sub
End If

If shGridSearch.cmbBranchName = "" Then
    Call SearchGridByBranch(shGridSearch.cmbBranchCode.Value)
Else
    Call SearchGridByBranch(shGridSearch.cmbBranchName)
End If

End Sub


Sub SearchGridByBranch(searchBranch As Variant)
'===============================================================
'SearchGridByBranch
'---------------------------------------------------------------
'Purpose : searches GRID by either Branch Code or Branch Name,
'           and generates a report on shGridSearch
'
' Author : Christopher Tien Sept 2018
'
' Notes  :
'---------------------------------------------------------------
' Parameters
'-----------
' searchBranch -
'       integer:  HSB Organization Branch Code formatted without leading 0s or H
'
'       string: Branch name
'---------------------------------------------------------------
'Revision History
' Sept 27, 2018 : added check for match error when branch has no Op Assist assigned
'
' Sept 26, 2018 : updated so instead of using shGridCalc we use
'                 arrays of data.  loading time is now an average of 0.20 seconds
'                 previously, some branches loading time as 2.5 seconds
'---------------------------------------------------------------
'===============================================================
Dim arrLA As Collection
Dim arrLO As New Collection
Dim nTintAndShade As Double
Dim OpenNewOutlook As Integer
Dim nCounterLO As Integer
Dim nMatchBranchCur As Integer
Dim nMatchLaCur As Integer
Dim nMatchLoCur As Integer
Dim nMatchOpCur As Integer
Dim nRowLaAdjusted As Integer
Dim nRowTableCur As Integer
Dim sEmployeeName As String
Dim sEmployeeID As String
Dim rngCell As Range

If IsNumeric(searchBranch) Then
    If IsError(Application.Match(CDbl(searchBranch), dbGridBranch.Range("A:A"), 0)) Then
        MsgBox "Branch Code note found, please try again!"
        Exit Sub
    End If
    nMatchBranchCur = Application.Match(CDbl(searchBranch), dbGridBranch.Range("A:A"), 0)
Else
    If IsError(Application.Match(searchBranch, dbGridBranch.Range("B:B"), 0)) Then
        MsgBox "Branch Name not found, please try again!"
        Exit Sub
    End If
    nMatchBranchCur = Application.Match(searchBranch, dbGridBranch.Range("B:B"), 0)
End If

Call gridClear
Application.ScreenUpdating = False
shGridSearch.Unprotect

'generate top table
shGridSearch.Range("B9") = dbGridBranch.Range("B" & nMatchBranchCur)
shGridSearch.Range("B9").Font.Size = 20
shGridSearch.Range("C9") = dbGridBranch.Range("A" & nMatchBranchCur)
shGridSearch.Range("C9").Font.Size = 20
shGridSearch.Range("B11") = "Primary Op Assist:"
shGridSearch.Range("B11:B15").HorizontalAlignment = xlRight
shGridSearch.Range("B13") = "Return Envelope:"
shGridSearch.Range("C13") = dbGridBranch.Range("D" & nMatchBranchCur)
shGridSearch.Range("C13").Font.Bold = True
shGridSearch.Range("B15") = "Notes:"
shGridSearch.Range("C15") = dbGridBranch.Range("F" & nMatchBranchCur)
'Op Assist Check
If dbGridBranch.Range("E" & nMatchBranchCur) <> "" Then
    nMatchOpCur = Application.Match(dbGridBranch.Range("e" & nMatchBranchCur), dbGridOp.Range("A:A"), 0)
    shGridSearch.Range("C11") = _
        dbGridOp.Range("B" & nMatchOpCur) & " " & dbGridOp.Range("C" & nMatchOpCur) & " (" & dbGridOp.Range("A" & nMatchOpCur) & ")"
    shGridSearch.Range("C11").Font.Bold = True
    shGridSearch.Range("C12") = dbGridOp.Range("D" & nMatchOpCur)
    If shGridSearch.Range("C12") <> "" Then
        shGridSearch.Range("C12").Hyperlinks.Add _
            ANCHOR:=shGridSearch.Range("C12"), _
            Address:="mailto:" & shGridSearch.Range("C12").Value, _
            TextToDisplay:=shGridSearch.Range("C12").Value
    End If
End If

'Generate LO Table
shGridSearch.Range("B17") = "LO Name"
shGridSearch.Range("C17") = "Op Assist"
shGridSearch.Range("D17") = "LOA"
shGridSearch.Range("E17") = "Notes"

'Create an array of LOs in branch searched
If Application.CountIf(dbGridLO.Range("E:E"), dbGridBranch.Range("A" & nMatchBranchCur)) > 0 Then
dbGridLO.ListObjects("tblGridLO").Range.AutoFilter field:=5, _
    Criteria1:=dbGridBranch.Range("A" & nMatchBranchCur)
For Each rngCell In _
dbGridLO.Range("A2:A" & dbGridLO.UsedRange.Rows(dbGridLO.UsedRange.Rows.Count).Row).SpecialCells(xlCellTypeVisible)
        arrLO.Add rngCell
Next rngCell
dbGridLO.ListObjects("tblGridlo").Range.AutoFilter field:=5
End If

nRowTableCur = 18
For nCounterLO = 1 To arrLO.Count
    nMatchLoCur = Application.Match(arrLO(nCounterLO), dbGridLO.Range("A:A"), 0)
    'Column A - Bullet Points
    shGridSearch.Range("A" & nRowTableCur) = "'="
    'Column B - Loan Officer Name and Email
    sEmployeeName = dbGridLO.Range("H" & nMatchLoCur)
    sEmployeeID = dbGridLO.Range("A" & nMatchLoCur)
    shGridSearch.Range("B" & nRowTableCur) = sEmployeeName & " (" & sEmployeeID & ")"
    shGridSearch.Range("B" & nRowTableCur).Font.Bold = True
    shGridSearch.Range("B" & nRowTableCur + 1) = dbGridLO.Range("F" & nMatchLoCur)
    shGridSearch.Range("B" & nRowTableCur + 1).Hyperlinks.Add _
        ANCHOR:=shGridSearch.Range("B" & nRowTableCur + 1), _
        Address:="mailto:" & shGridSearch.Range("B" & nRowTableCur + 1).Value, _
        TextToDisplay:=shGridSearch.Range("B" & nRowTableCur + 1).Value
    'Column C - Custom Op Assist Name and Email
    If dbGridLO.Range("D" & nMatchLoCur) <> "" Then
        nMatchOpCur = Application.Match(dbGridLO.Range("D" & nMatchLoCur), dbGridOp.Range("A:A"), 0)
        sEmployeeName = dbGridOp.Range("B" & nMatchOpCur) & " " & dbGridOp.Range("C" & nMatchOpCur)
        sEmployeeID = dbGridOp.Range("A" & nMatchOpCur)
        shGridSearch.Range("C" & nRowTableCur) = sEmployeeName & " (" & sEmployeeID & ")"
        shGridSearch.Range("C" & nRowTableCur).Font.Bold = True
        shGridSearch.Range("C" & nRowTableCur + 1) = dbGridOp.Range("D" & nMatchOpCur)
        shGridSearch.Range("B" & nRowTableCur + 1).Hyperlinks.Add _
            ANCHOR:=shGridSearch.Range("C" & nRowTableCur + 1), _
            Address:="mailto:" & shGridSearch.Range("B" & nRowTableCur + 1).Value, _
            TextToDisplay:=shGridSearch.Range("C" & nRowTableCur + 1).Value
    End If
    'Column E - LO specific Notes
    shGridSearch.Range("E" & nRowTableCur) = dbGridLO.Range("G" & nMatchLoCur)
    'Column D - LA Name and Email
    'Nested Loop for LA
    If Application.CountIf(dbGridLOAList.Range("B:B"), arrLO(nCounterLO)) > 0 Then
        Set arrLA = New Collection
        dbGridLOAList.ListObjects("tblgridlist").Range.AutoFilter field:=2, _
            Criteria1:=arrLO(nCounterLO)
        For Each rngCell In _
        dbGridLOAList.Range("C2:C" & dbGridLOAList.UsedRange.Rows(dbGridLOAList.UsedRange.Rows.Count).Row).SpecialCells(xlCellTypeVisible)
            arrLA.Add rngCell
        Next rngCell
        dbGridLOAList.ListObjects("tblgridlist").Range.AutoFilter field:=2
        For OpenNewOutlook = 1 To arrLA.Count
            nMatchLaCur = Application.Match(arrLA(OpenNewOutlook), dbGridLOA.Range("A:A"), 0)
            sEmployeeName = dbGridLOA.Range("B" & nMatchLaCur) & " " & dbGridLOA.Range("C" & nMatchLaCur)
            shGridSearch.Range("D" & nRowTableCur) = sEmployeeName & " (" & arrLA(OpenNewOutlook) & ")"
            shGridSearch.Range("D" & nRowTableCur).Font.Bold = True
            shGridSearch.Range("D" & nRowTableCur + 1) = dbGridLOA.Range("D" & nMatchLaCur)
            shGridSearch.Range("B" & nRowTableCur + 1).Hyperlinks.Add _
                ANCHOR:=shGridSearch.Range("D" & nRowTableCur + 1), _
                Address:="mailto:" & shGridSearch.Range("D" & nRowTableCur + 1).Value, _
                TextToDisplay:=shGridSearch.Range("D" & nRowTableCur + 1).Value
            If OpenNewOutlook <> arrLA.Count Then nRowTableCur = nRowTableCur + 2
        Next OpenNewOutlook
        Set arrLA = Nothing
    End If
    nRowTableCur = nRowTableCur + 2
Next nCounterLO

'Format LO Table
nRowTableCur = 18
nTintAndShade = -4.99893185216834E-02
For nCounterLO = 1 To arrLO.Count
    nRowLaAdjusted = Application.CountIf(dbGridLOAList.Range("B:B"), arrLO(nCounterLO)) * 2 - 1
    If nRowLaAdjusted < 0 Then nRowLaAdjusted = 1
    With shGridSearch.Range("B" & nRowTableCur & ":E" & nRowTableCur + nRowLaAdjusted).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = nTintAndShade
        .PatternTintAndShade = 0
    End With
    If nTintAndShade = -4.99893185216834E-02 Then
        nTintAndShade = -0.149998474074526
    Else
        nTintAndShade = -4.99893185216834E-02
    End If
    nRowTableCur = nRowTableCur + nRowLaAdjusted + 1
Next nCounterLO
With shGridSearch.Range("B17:E17").Interior
    .Pattern = xlSolid
    .PatternColorIndex = xlAutomatic
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0
    .PatternTintAndShade = 0
End With
With shGridSearch.Range("B17:E17").Font
    .ThemeColor = xlThemeColorDark1
    .TintAndShade = 0
End With

'Generate bottom table
shGridSearch.Range("b" & nRowTableCur + 1) = "Other Info"
shGridSearch.Range("b" & nRowTableCur + 2) = "Branch Manager"
shGridSearch.Range("b" & nRowTableCur + 3) = "Region"
shGridSearch.Range("b" & nRowTableCur + 4) = "Regional Production Manager"
shGridSearch.Range("b" & nRowTableCur + 5) = "Regional Ops Manager"
shGridSearch.Range("b" & nRowTableCur + 6) = "Branch Ops Manager"
shGridSearch.Range("b" & nRowTableCur + 7) = "Alls Ops"
shGridSearch.Range("b" & nRowTableCur + 8) = "FC Processing Branch Center"
shGridSearch.Range("b" & nRowTableCur + 9) = "FC Underwriting"
shGridSearch.Range("b" & nRowTableCur + 10) = "FC Funding"
shGridSearch.Range("c" & nRowTableCur + 2) = dbGridBranch.Range("g" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 3) = dbGridBranch.Range("c" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 4) = dbGridBranch.Range("h" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 5) = dbGridBranch.Range("i" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 6) = dbGridBranch.Range("j" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 7) = dbGridBranch.Range("k" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 8) = dbGridBranch.Range("l" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 9) = dbGridBranch.Range("m" & nMatchBranchCur)
shGridSearch.Range("c" & nRowTableCur + 10) = dbGridBranch.Range("n" & nMatchBranchCur)

'Format Bottom Table
With shGridSearch.Range("B" & nRowTableCur + 1 & ":C" & nRowTableCur + 1).Font
    .ThemeColor = xlThemeColorDark1
    .TintAndShade = 0
End With
With shGridSearch.Range("B" & nRowTableCur + 1 & ":C" & nRowTableCur + 1).Interior
    .Pattern = xlSolid
    .PatternColorIndex = xlAutomatic
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0
    .PatternTintAndShade = 0
End With
nRowTableCur = nRowTableCur + 2
nTintAndShade = -4.99893185216834E-02
Do While shGridSearch.Range("B" & nRowTableCur) <> ""
    With shGridSearch.Range("B" & nRowTableCur & ":C" & nRowTableCur).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = nTintAndShade
        .PatternTintAndShade = 0
    End With
    If nTintAndShade = -4.99893185216834E-02 Then
        nTintAndShade = -0.149998474074526
    Else
        nTintAndShade = -4.99893185216834E-02
    End If
nRowTableCur = nRowTableCur + 1
Loop

Application.ScreenUpdating = True
shGridSearch.Protect

'memory mgmt
Set arrLO = Nothing
Set arrLA = Nothing
    
End Sub

Sub gridSearchLOName(loName)
'===============================================================
'SearchGridByLoName
'---------------------------------------------------------------
'Purpose :  searches GRID by LO Name - generates report on shGridSearch
'
' Author :  Christopher Tien Sept 2018
'
' Notes  :
'---------------------------------------------------------------
' Parameters
'-----------
'
'---------------------------------------------------------------
' Returns :
'---------------------------------------------------------------
'Revision History
'---------------------------------------------------------------
'===============================================================
Dim loMatch     As Integer
Dim nMatchBranchCur As Integer
Dim nMatchOpCur     As Integer
Dim sendTo      As Button
Dim sendLO      As Button
Dim arrLA As Collection
Dim OpenNewOutlook As Integer
Dim rngCell As Range
Dim sEmployeeName As String
Dim nRowTableCur As Integer
Dim nMatchLaCur As Integer



'check if LO is listed
If IsError(Application.Match(loName, dbGridLO.Range("h:h"), 0)) Then
    MsgBox "Loan Officer not found, please try again!  To search by Branch, use the other button."
    GoTo ending
End If

loMatch = Application.Match(loName, dbGridLO.Range("h:h"), 0)
nMatchBranchCur = Application.Match(dbGridLO.Range("e" & loMatch), dbGridBranch.Range("A:A"), 0)


Call gridClear


shGridSearch.Unprotect
Application.ScreenUpdating = False

'*Generate table*

shGridSearch.Range("B9:B20").HorizontalAlignment = xlRight
With shGridSearch.Range("B9").Font
    .Size = 16
    .Bold = True
End With
shGridSearch.Range("B9") = dbGridLO.Range("H" & loMatch)
shGridSearch.Range("C9") = dbGridLO.Range("F" & loMatch)
shGridSearch.Range("C9").Hyperlinks.Add _
    ANCHOR:=shGridSearch.Range("C9"), _
    Address:="mailto:" & shGridSearch.Range("C9").Value, _
    TextToDisplay:=shGridSearch.Range("C9").Value
shGridSearch.Range("D9") = dbGridLO.Range("A" & loMatch)
    
shGridSearch.Range("B11") = "Branch:"
shGridSearch.Range("B12") = "Return envelope:"
shGridSearch.Range("B14") = "branch notes:"
shGridSearch.Range("B16") = "LO notes:"
shGridSearch.Range("B18") = "Op Assistant:"
shGridSearch.Range("B20") = "LOA:"
shGridSearch.Range("C11") = dbGridBranch.Range("B" & nMatchBranchCur)
shGridSearch.Range("C12") = dbGridBranch.Range("D" & nMatchBranchCur)
shGridSearch.Range("C11:C12").Font.Bold = True
shGridSearch.Range("C14") = dbGridBranch.Range("F" & nMatchBranchCur)
shGridSearch.Range("C16") = dbGridLO.Range("G" & loMatch)
    
'if not custom op, then use primary op
If dbGridLO.Range("D" & loMatch) = "" Then
    nMatchOpCur = Application.Match(dbGridBranch.Range("E" & nMatchBranchCur), dbGridOp.Range("A:A"), 0)
Else
    nMatchOpCur = Application.Match(dbGridLO.Range("D" & loMatch), dbGridOp.Range("A:A"), 0)
End If
    
shGridSearch.Range("C18") = _
    dbGridOp.Range("B" & nMatchOpCur) & " " & dbGridOp.Range("C" & nMatchOpCur) & " (" & dbGridOp.Range("A" & nMatchOpCur) & ")"
shGridSearch.Range("C19") = dbGridOp.Range("D" & nMatchOpCur)
If shGridSearch.Range("C19") <> "" Then
    shGridSearch.Range("C19").Hyperlinks.Add _
        ANCHOR:=shGridSearch.Range("C19"), _
        Address:="mailto:" & shGridSearch.Range("C19").Value, _
        TextToDisplay:=shGridSearch.Range("C19").Value
End If




'Check if we have LOAs



If Application.CountIf(dbGridLOAList.Range("B:B"), dbGridLO.Range("A" & loMatch)) > 0 Then
    Set arrLA = New Collection
    dbGridLOAList.ListObjects("tblgridlist").Range.AutoFilter field:=2, _
        Criteria1:=dbGridLO.Range("A" & loMatch)
    For Each rngCell In _
    dbGridLOAList.Range("C2:C" & dbGridLOAList.UsedRange.Rows(dbGridLOAList.UsedRange.Rows.Count).Row).SpecialCells(xlCellTypeVisible)
        arrLA.Add rngCell
    Next rngCell
    dbGridLOAList.ListObjects("tblgridlist").Range.AutoFilter field:=2
    
    nRowTableCur = 20
    For OpenNewOutlook = 1 To arrLA.Count
        nMatchLaCur = Application.Match(arrLA(OpenNewOutlook), dbGridLOA.Range("A:A"), 0)
        sEmployeeName = dbGridLOA.Range("B" & nMatchLaCur) & " " & dbGridLOA.Range("C" & nMatchLaCur)
        shGridSearch.Range("C" & nRowTableCur) = sEmployeeName & " (" & arrLA(OpenNewOutlook) & ")"
        shGridSearch.Range("C" & nRowTableCur + 1) = dbGridLOA.Range("D" & nMatchLaCur)
        shGridSearch.Range("C" & nRowTableCur + 1).Hyperlinks.Add _
            ANCHOR:=shGridSearch.Range("C" & nRowTableCur + 1), _
            Address:="mailto:" & shGridSearch.Range("C" & nRowTableCur + 1).Value, _
            TextToDisplay:=shGridSearch.Range("C" & nRowTableCur + 1).Value
        nRowTableCur = nRowTableCur + 2
    Next OpenNewOutlook
End If


'Send to buttons

Set sendTo = shGridSearch.Buttons.Add(75, 330, 85, 25)
sendTo.Caption = "send to all"
sendTo.OnAction = "gridSendTo"

Set sendTo = shGridSearch.Buttons.Add(75, 360, 85, 25)
sendTo.Caption = "send to LO/LOA"
sendTo.OnAction = "gridSendLOA"

ending:
Application.ScreenUpdating = True
shGridSearch.Protect

'memory mgmt
Set arrLA = Nothing

End Sub


Sub gridRefreshDB()
'===============================================================
'RefreshGridData
'---------------------------------------------------------------
'Purpose : rereshes the tables on worksheet to match Grid Database
'           and then updates the data validation for combobox objects
' Author : Christopher Tien
'
' Notes  :
'---------------------------------------------------------------
'Revision History
'---------------------------------------------------------------
'===============================================================
'refresh data

ActiveWorkbook.Connections("gridBranch").Refresh
ActiveWorkbook.Connections("gridLO").Refresh
ActiveWorkbook.Connections("gridLOA").Refresh
ActiveWorkbook.Connections("gridOpAssistant").Refresh
ActiveWorkbook.Connections("gridLoaList").Refresh

shGridSearch.Unprotect
Application.ScreenUpdating = False

shGridSearch.Range("F5") = " Last Updated " & Date

'update dv
shDV.Range("AE2:AE" & Application.CountA(shDV.Range("AE:AE"))).ClearContents
shDV.Range("AG2:AG" & Application.CountA(shDV.Range("AG:AG"))).ClearContents
shDV.Range("AI2:AI" & Application.CountA(shDV.Range("AI:AI"))).ClearContents

'copy
dbGridBranch.Range("b2:b" & Application.CountA(dbGridBranch.Range("a:a"))).Copy shDV.Range("AE2")
dbGridBranch.Range("a2:a" & Application.CountA(dbGridBranch.Range("a:a"))).Copy shDV.Range("AG2")
dbGridLO.Range("h2:h" & Application.CountA(dbGridLO.Range("h:H"))).Copy shDV.Range("AI2")

'sort
With shDV.ListObjects("Table20").Sort
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

With shDV.ListObjects("Table21").Sort
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

With shDV.ListObjects("Table22").Sort
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

shGridSearch.cmbLoName.ListFillRange = "gridLO2"
shGridSearch.cmbBranchName.ListFillRange = "gridbranchname2"
shGridSearch.cmbBranchCode.ListFillRange = "gridbranchcode2"
Application.ScreenUpdating = True
shGridSearch.Protect

End Sub

Sub gridSendTo()
'sends to ALL
'===============================================================
'OpenOutlookGridAll
'---------------------------------------------------------------
'Purpose : opens new outlook window addressed according to GRID
'
' Author : Christopher Tien
'
' Notes  :  It would be smarter to update the way we address emails
'           from creating a single long string, to an array of string
'           this removes some formatting issues and would also let us
'           remove any duplicate emails
'
'           (to):LO, LOA, LO notes
'           (cc):Op Assist, Branch notes
'---------------------------------------------------------------
'Revision History
'---------------------------------------------------------------
'===============================================================
Dim sEmailTo As String
Dim sEmailCC As String
Dim nCounterLA As Integer

sEmailTo = shGridSearch.Range("C9") & "; "
If shGridSearch.Range("C20") <> "" Then
    nCounterLA = 21
    Do While CharCount(shGridSearch.Range("C" & nCounterLA), "@") > 0
        sEmailTo = sEmailTo & shGridSearch.Range("C" & nCounterLA) & "; "
        nCounterLA = nCounterLA + 2
    Loop
End If
sEmailTo = sEmailTo & GetEmailFromCell(shGridSearch.Range("C16"))
sEmailCC = shGridSearch.Range("C19") & "; "
sEmailCC = sEmailCC & GetEmailFromCell(shGridSearch.Range("C14"))

Call OpenNewOutlook("", sEmailTo, sEmailCC)

End Sub

Sub gridSendLOA()
'sends to LO/LOA
'===============================================================
'OpenOutlookLO
'---------------------------------------------------------------
'Purpose :
'
' Author :
'
' Notes  :
'---------------------------------------------------------------
' Parameters
'-----------
'
'---------------------------------------------------------------
' Returns :
'---------------------------------------------------------------
'Revision History
'---------------------------------------------------------------
'===============================================================
Dim sEmailTo As String
Dim nCounterLA As Integer
Dim sEmailCC As String


sEmailTo = shGridSearch.Range("C9") & "; "
If shGridSearch.Range("C20") <> "" Then
    nCounterLA = 21
    Do While CharCount(shGridSearch.Range("C" & nCounterLA), "@") > 0
        sEmailTo = sEmailTo & shGridSearch.Range("C" & nCounterLA) & "; "
        nCounterLA = nCounterLA + 2
    Loop
End If
sEmailTo = sEmailTo & GetEmailFromCell(shGridSearch.Range("C16"))

Call OpenNewOutlook("", sEmailTo, sEmailCC)

End Sub

Sub gridClear()
'===============================================================
'ClearGrid
'---------------------------------------------------------------
'Purpose : clears the GRID
'
' Author : Christopher Tien Sept 2018
'
' Notes  : tacks on an extra 5 rows to accomodate buttons
'           have to mess around with screenupdating and screen protection
'---------------------------------------------------------------
'Revision History
'---------------------------------------------------------------
'===============================================================
Application.ScreenUpdating = False
shGridSearch.Unprotect

shGridSearch.cmbLoName = ""
shGridSearch.cmbBranchName = ""
shGridSearch.cmbBranchCode = ""
shGridSearch.Rows("9:" & shGridSearch.UsedRange.Rows(shGridSearch.UsedRange.Rows.Count).Row + 5).Delete

shGridSearch.Protect
Application.ScreenUpdating = True

End Sub



Attribute VB_Name = "mOutlook"
Sub OpenNewOutlook(Optional ByVal subjectLine As String, Optional ByVal emailTo As String, Optional ByVal ccTo As String)
'* Opens a new outlook window - Optional arguments allow you to set the subject line, who the email is addressed to, and who it is CCed to

'define
Dim outlookGet As Object
Dim outlookCreate As Object
Dim outlookMail As Object

'open outlook
On Error Resume Next
Set outlookGet = GetObject(, "outlook.application")
On Error GoTo 0

If Not outlookGet Is Nothing Then
Else
    Shell ("OUTLOOK")
End If

Set outlookCreate = CreateObject("Outlook.Application")
outlookCreate.Session.Logon
'create email
Set outlookMail = outlookCreate.CreateItem(0)

On Error Resume Next

'show email, set parameters
With outlookMail
.display
.To = emailTo
.CC = ccTo
.Subject = subjectLine
End With

On Error GoTo 0

outlookCreate.Session.Logoff

'memory mgmt
Set outlookGet = Nothing
Set outlookMail = Nothing
Set outlookCreate = Nothing
End Sub


Attribute VB_Name = "shDV"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "shGridCalc"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "shGridSearch"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmbLoName, 1, 0, MSForms, ComboBox"
Attribute VB_Control = "cmbBranchCode, 2, 1, MSForms, ComboBox"
Attribute VB_Control = "cmbBranchName, 3, 2, MSForms, ComboBox"


INQUEST-PP=macro
