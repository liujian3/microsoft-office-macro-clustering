Attribute VB_Name = "Module1"

' Unprotect the spreadsheet
Sub UnProtectSheet()
Password = "finance867"
ActiveSheet.Unprotect Password
End Sub
' Protect the worksheet
Sub ProtectSheet()
Password = "finance867"
ActiveSheet.Protect Password, True, True, True
End Sub

'Add a row to the imprest or journal
Private Sub Addrow()

    Call UnProtectSheet
           
    Do Until ActiveCell.Value = "x"
        Selection.End(xlToLeft).Select
    Loop
    
        ActiveCell.Offset(0, -8).Range("A1:i1").Select
        ActiveCell.Activate
        Selection.EntireColumn.Hidden = False
    
    Do Until ActiveCell.Value = "x"
        Selection.End(xlToLeft).Select
    Loop
    
        
    ActiveCell.Offset(0, 6).Range("A1").Select
    
    If ActiveCell.Range("A1").Value = 11 Then
        info = MsgBox("You cannot exceed maximum of 200 rows for Journal Transfer", vbCritical + vbOKOnly, "File Size Warning")
        Columns("A:H").Select
        Selection.EntireColumn.Hidden = True
        Range("L16").Select
    End If
        
    If ActiveCell.Range("A1").Value = 10 Then
        info = MsgBox("You cannot exceed maximum of 200 rows for Imprest return", vbCritical + vbOKOnly, "File Size Warning")
        Columns("A:H").Select
        Selection.EntireColumn.Hidden = True
        Range("L16").Select
    End If
    
    If ActiveCell.Range("A1").Value = 9 Then
        info = MsgBox("You cannot add a row here, please select a numbered row", vbExclamation, "Row Delete Warning")
        Columns("A:H").Select
        Selection.EntireColumn.Hidden = True
        Range("L16").Select
    End If
    
    If ActiveCell.Range("A1").Value = 1 Or ActiveCell.Range("A1").Value = 2 Then
        Range("Imp").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(-1, 0).Range("A1").Select
        Selection.EntireRow.Insert
        Rows("1:2").Select
        Selection.EntireRow.Hidden = False
        Rows("1:1").Select
        Selection.Copy
        Range("Imp").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Offset(0, -7).Range("A1").Select
        ActiveSheet.Paste
        ActiveCell.Offset(0, 7).Range("A1").Select
        ActiveCell.Offset(-1, 0).Range("A1").Select
        Selection.Copy
        ActiveCell.Offset(1, 0).Range("A1:A2").Select
        Range(Selection, Selection.End(xlDown)).Select
        ActiveSheet.Paste
        ActiveCell.Offset(0, 3).Range("A1").Select
        ActiveCell.Range("A1").Select
          
        Columns("A:H").Select
        Selection.EntireColumn.Hidden = True
          
        Rows("1:2").Select
        Selection.EntireRow.Hidden = True
    
        ActiveCell.Offset(15, 11).Range("A1").Select
        ActiveCell.Range("A1").Select
    
    End If
    
    If ActiveCell.Range("A1").Value = 3 Or ActiveCell.Range("A1").Value = 4 Then
        Range("Jnl").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(-1, 0).Range("A1").Select
        Selection.EntireRow.Insert
        Rows("1:2").Select
        Selection.EntireRow.Hidden = False
        Rows("2:2").Select
        Selection.Copy
        Range("Jnl").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Offset(0, -7).Range("A1").Select
        ActiveSheet.Paste
        ActiveCell.Offset(0, 7).Range("A1").Select
        ActiveCell.Offset(-1, 0).Range("A1").Select
        Selection.Copy
        ActiveCell.Offset(1, 0).Range("A1:A2").Select
        Range(Selection, Selection.End(xlDown)).Select
        ActiveSheet.Paste
        ActiveCell.Offset(0, 3).Range("A1").Select
        ActiveCell.Range("A1").Select
    
        Columns("A:H").Select
        Selection.EntireColumn.Hidden = True
          
        Rows("1:2").Select
        Selection.EntireRow.Hidden = True
    
        ActiveCell.Offset(15, 11).Range("A1").Select
        ActiveCell.Range("A1").Select
        
    End If
    
    Call ProtectSheet

End Sub


'Delete the active row
Private Sub Deleterow()

    Call UnProtectSheet
    
    Do Until ActiveCell.Value = "x"
        Selection.End(xlToLeft).Select
    Loop

    ActiveCell.Offset(0, -8).Range("A1:I1").Select
        ActiveCell.Activate
        Selection.EntireColumn.Hidden = False
    
    Do Until ActiveCell.Value = "x"
        Selection.End(xlToLeft).Select
    Loop
    
    ActiveCell.Offset(0, 6).Range("A1").Select
    
    If ActiveCell.Range("A1").Value = 9 Then
        response = MsgBox("This row cannot be deleted, please select a numbered row", vbExclamation + vbOKOnly, "Row Delete Warning")
            If response = vbOK Then
                    Columns("A:H").Select
                    Selection.EntireColumn.Hidden = True
                    Range("L16").Select
                GoTo 1
            End If
    End If
    
    If ActiveCell.Range("A1").Value = 2 Or ActiveCell.Range("A1").Value = 4 Then
        response = MsgBox("This row contains data which will be lost, do you wish to continue?", vbCritical + vbYesNo, "Row Delete Warning")
            If response = vbYes Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(0, 1).Range("A1").Select
                ActiveCell.FormulaR1C1 = "=1+R[-1]C"
                Selection.Copy
                Range(Selection, Selection.End(xlDown)).Select
                ActiveSheet.Paste
                ActiveCell.Offset(0, 3).Range("A1").Select
            
                Columns("A:H").Select
                Selection.EntireColumn.Hidden = True
            
                ActiveCell.Offset(15, 11).Range("A1").Select
                ActiveCell.Range("A1").Select
            
            End If
            
            If response = vbNo Then
                ActiveCell.Activate
            End If
    Else
     
        Selection.EntireRow.Delete
        ActiveCell.Offset(0, 1).Range("A1").Select
        ActiveCell.FormulaR1C1 = "=1+R[-1]C"
        Selection.Copy
        Range(Selection, Selection.End(xlDown)).Select
        ActiveSheet.Paste
        ActiveCell.Offset(0, 3).Range("A1").Select
    
        Columns("A:H").Select
        Selection.EntireColumn.Hidden = True
            
        ActiveCell.Offset(15, 11).Range("A1").Select
        ActiveCell.Range("A1").Select
        
    End If
    
1    Call ProtectSheet
        
        
End Sub
'Check for errors & warnings
Private Sub Errorcheck()

    If Range("AP10").Value = 0 Then
        info = MsgBox("There are no errors or warnings present", vbInformation + vbOKOnly, "Errors / Warning Check")
    End If
        
    If Range("AP10").Value = 1 Then
        info = MsgBox("This return contains " & Range("AK13").Value & " Error(s), Displayed as Red Cells - Please see error List for action required", vbCritical + vbOKOnly, "Error / Warning Check")
    End If
    
    If Range("AP10").Value = 2 Then
        info = MsgBox("This return contains " & Range("AO13").Value & " Warning(s), Displayed as Yellow Cells - Please see error List for action required", vbExclamation + vbOKOnly, "Error / Warning Check")
    End If
    
    If Range("AP10").Value = 3 Then
        info = MsgBox("This return contains " & Range("AK13") & " Error(s), Displayed as Red Cells & " & Range("AO13").Value & " Warning(s), Displayed as Yellow Cells - Please see error List for action required", vbCritical + vbOKOnly, "Error / Warning Check")
    End If

    If Range("AP10").Value = 4 Then
        info = MsgBox("This return contains " & Range("AO13") & " Warning(s)which have been reviewed as OK by the user", vbInformation + vbOKOnly, "Error / Warning Check")
    End If


    If Range("AP10").Value = 5 Then
        info = MsgBox("This return contains " & Range("AK13") & " Error(s), Displayed as Red Cells & " & Range("AO13").Value & " Warning(s) which have been reviewed as OK by the user - Please see error List for action required", vbCritical + vbOKOnly, "Error / Warning Check")
    End If
    
End Sub

'Print preview imprest only
Private Sub PreviewImprest()
    
    Application.ScreenUpdating = False
    
    Call UnProtectSheet
    
    
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = False
    Application.GoTo Reference:="Imprest"
    ActiveSheet.PageSetup.PrintArea = "Imprest"
    ActiveWindow.SelectedSheets.PrintPreview

    Call Worksheet_Activate
            
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = True
        
    ActiveSheet.PageSetup.PrintArea = "(AT4:AT5)"
    Range("L16").Select
    
    Call ProtectSheet
    
    Application.ScreenUpdating = True

End Sub
'Print preview journal only
Private Sub PreviewJournal()

    Application.ScreenUpdating = False
    
    Call UnProtectSheet
    
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = False
    Application.GoTo Reference:="Journal"
    ActiveSheet.PageSetup.PrintArea = "Journal"
    ActiveWindow.SelectedSheets.PrintPreview

    Call Worksheet_Activate
        
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = True
        
    ActiveSheet.PageSetup.PrintArea = "(AT4:AT5)"
    Range("L16").Select

    Call ProtectSheet

    Application.ScreenUpdating = True

End Sub
'Print imprest only
Private Sub PrintImprest()
    
    Application.ScreenUpdating = False
    
    Call UnProtectSheet
    
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = False
    Application.GoTo Reference:="Imprest"
    ActiveSheet.PageSetup.PrintArea = "Imprest"
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True
    
    Call Worksheet_Activate
            
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = True

    ActiveSheet.PageSetup.PrintArea = "(AT4:AT5)"
    Range("L16").Select
    
    Call ProtectSheet
    
    Application.ScreenUpdating = True

End Sub
'Print journal only
Private Sub PrintJournal()
    
    Application.ScreenUpdating = False
    
    Call UnProtectSheet
    
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = False
    Application.GoTo Reference:="Journal"
    ActiveSheet.PageSetup.PrintArea = "Journal"
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True
    
    Call Worksheet_Activate
            
    Columns("AA:AH").Select
    Selection.EntireColumn.Hidden = True

    ActiveSheet.PageSetup.PrintArea = "(AT4:AT5)"
    Range("L16").Select
    
    Call ProtectSheet
    
    Application.ScreenUpdating = True

End Sub

'Print Imprest & Journal
Private Sub Printall()
    Call PrintImprest
    Call PrintJournal
End Sub



'Hide columns AA-AH everytime worksheet is activated
Private Sub Worksheet_Activate()
    If ActiveCell.Range("AT4").Value = 1 Then
    
        Columns("AA:AH").Select
        Selection.EntireColumn.Hidden = True
    End If
    
    
End Sub
Private Sub PrintMenuOnOff()
' Ctrl+Shift+P
    Call UnProtectSheet
    If Range("B7").Value = 1 Then
        Range("B7").Select
        Range("B7").Value = 0
        info = MsgBox("Print icons & menu enabled", vbInformation + vbOKOnly, "Timesheet Information")
    Else
        Range("B7").Value = 1
        info = MsgBox("Print icons & menu disabled", vbInformation + vbOKOnly, "Timesheet Information")
    
    End If
    
    Call ProtectSheet
    Range("L8").Activate
    
End Sub




Private Sub Auto_Open()
    
    If Range("B7").Value = 1 Then
        'Prevent Printing, Set print area & Print preview via menu
        MenuBars(xlWorksheet).Menus("File").MenuItems("Print...").Delete
        MenuBars(xlWorksheet).Menus("File").MenuItems("Print Area").Delete
        MenuBars(xlWorksheet).Menus("File").MenuItems("Print Preview").Delete
        MenuBars(xlWorksheet).Menus("Insert").MenuItems("Cells...").Delete
        MenuBars(xlWorksheet).Menus("Insert").MenuItems("Rows").Delete
        MenuBars(xlWorksheet).Menus("Insert").MenuItems("Columns").Delete
    
    
    
    
        'Turn off Print, Print preview & print area icons wherever it they are in the toolbars
        For J = 1 To Toolbars.Count
            For K = 1 To Toolbars(J).ToolbarButtons.Count
                If Toolbars(J).ToolbarButtons(K).ID = 3 Then
                    Toolbars(J).ToolbarButtons(K).Enabled = False
                End If
                If Toolbars(J).ToolbarButtons(K).ID = 4 Then
                    Toolbars(J).ToolbarButtons(K).Enabled = False
                End If
                If Toolbars(J).ToolbarButtons(K).ID = 5 Then
                    Toolbars(J).ToolbarButtons(K).Enabled = False
                End If
            Next K
        Next J
    
    Else
    
    Range("L8").Activate
    
    End If
    
    
End Sub


Private Sub Auto_Close()
    'Reset the menu items
    For Each mb In MenuBars
        mb.Reset
    Next mb

    'Reset the buttons
    For J = 1 To Toolbars.Count
        For K = 1 To Toolbars(J).ToolbarButtons.Count
            If Toolbars(J).ToolbarButtons(K).ID = 3 Then
                Toolbars(J).ToolbarButtons(K).Enabled = True
            End If
            If Toolbars(J).ToolbarButtons(K).ID = 4 Then
                Toolbars(J).ToolbarButtons(K).Enabled = True
            End If
            If Toolbars(J).ToolbarButtons(K).ID = 5 Then
                Toolbars(J).ToolbarButtons(K).Enabled = True
            End If
        Next K
    Next J
End Sub



Sub BIFSort()
'
' Sorts File into BIF format for Agresso upload
    If Range("W9").Value = 1 Then
        info = MsgBox("Access denied - password required", vbCritical, "BIF Upload")
    Else

    Sheets("BIF Upload").Visible = True
    
    Sheets("Imprest").Select
    
    Call UnProtectSheet
    Columns("AA:AJ").Select
    Selection.EntireColumn.Hidden = False
    
    Range("ImpBIF1").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("F74").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
  
    Sheets("Imprest").Select
    Range("ImpBIF2").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("J74").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets("Imprest").Select
    Range("ImpBIF3").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("Q74").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets("Imprest").Select
    Range("ImpBIF4").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("B74").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    Sheets("Imprest").Select
    Range("JnlBIF1").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("F274").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets("Imprest").Select
    Range("JnlBIF2").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("J274").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
  
    Sheets("Imprest").Select
    Range("JnlBIF3").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("Q274").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    Sheets("Imprest").Select
    Range("JnlBIF4").Select
    Selection.Copy
    Sheets("BIF Upload").Select
    Range("B274").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets("BIF Upload").Select
    Range("B74:S485").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    
    Range("B74:R473").Select
    Selection.Sort Key1:=Range("R74"), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
    Range("R74:R473").Select
    Cells.Find(What:="XXX", After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
        xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
        , SearchFormat:=False).Activate
            
    ActiveCell.Select
    Range(Selection, Selection.End(xlDown)).Select
    
    Selection.EntireRow.Delete


    Sheets("Imprest").Select
    Call UnProtectSheet
        Range("W9").Select
        Range("W9").Value = 1
    Call ProtectSheet

    Sheets("BIF Upload").Select

End If

End Sub

Private Sub HideSheets()
Dim sht As Object

Application.ScreenUpdating = False

For Each sht In ThisWorkbook.Sheets

If sht.Name = "Lookups" Then sht.Visible = xlSheetVisible
If sht.Name = "BIF Upload" Then sht.Visible = xlSheetVisible
If sht.Name = "_GL07_505" Then sht.Visible = xlSheetVisible
If sht.Name = "_messages" Then sht.Visible = xlSheetVisible
    
Next sht

Application.ScreenUpdating = True

End Sub
Sub Administrator()
    UserForm1.Show
End Sub

Sub UnhideSheets()
Dim sht As Object

If Range("W9").Value = 0 Then

Application.ScreenUpdating = False


For Each sht In ThisWorkbook.Sheets

If sht.Name = "Lookups" Then sht.Visible = xlSheetVisible
If sht.Name = "BIF Upload" Then sht.Visible = xlSheetVisible
If sht.Name = "_GL07_505" Then sht.Visible = xlSheetVisible
If sht.Name = "_messages" Then sht.Visible = xlSheetVisible
    
Next sht

Else

GoTo 10

10 Application.ScreenUpdating = True

End If


End Sub

Sub EmailtoFinance()

    If Range("AP10").Value = 0 And Range("B9").Value = 0 Then
        
        UserForm2.Show
        
    End If
        
    If Range("AP10").Value = 0 And Range("B9").Value = 1 Then
        
                ActiveWorkbook.SendMail _
                Recipients:="education.finance@bracknell-forest.gov.uk", _
                Subject:="Imprest Claim " & Range("N8").Value & " - " & Range("P8").Value
                info = MsgBox("Please check your sent items to verify a successful email submission to Education Finance" & Chr(13) & "You should have a sent email titled '" & Range("L8").Value & " - Imprest Claim " & Range("N8").Value & " - " & Range("P8").Value & "' with this file attached.", vbInformation, "Imprest Information")
        
    End If
    
    If Range("AP10").Value = 1 Then
    
        info = MsgBox("File cannot be submitted as there are errors and or warnings present." & Chr(13) & "Please correct the errors and review the warnings before sending.", vbCritical, "Imprest Warning")
    
    End If

End Sub



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 29, 0, MSForms, CheckBox"
Attribute VB_Control = "ToggleButton1, 114, 5, MSForms, ToggleButton"

' Unprotect the spreeadsheet
Private Sub UnProtectSheet()
Password = "finance867"
ActiveSheet.Unprotect Password
End Sub
' Protect the worksheet
Private Sub ProtectSheet()
Password = "finance867"
ActiveSheet.Protect Password, True, True, True
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

'Forces text to UPPER case for the range "CostCImp etc"

If Target.Cells.Count > 1 Or Target.HasFormula Then Exit Sub
    On Error Resume Next
    If Not Intersect(Target, Range("CostCImp")) Is Nothing Then
        Application.EnableEvents = False
        Target = UCase(Target)
        Application.EnableEvents = True
    End If
    On Error GoTo 0

If Target.Cells.Count > 1 Or Target.HasFormula Then Exit Sub
    On Error Resume Next
    If Not Intersect(Target, Range("ProjImp")) Is Nothing Then
        Application.EnableEvents = False
        Target = UCase(Target)
        Application.EnableEvents = True
    End If
    On Error GoTo 0

If Target.Cells.Count > 1 Or Target.HasFormula Then Exit Sub
    On Error Resume Next
    If Not Intersect(Target, Range("ResImp")) Is Nothing Then
        Application.EnableEvents = False
        Target = UCase(Target)
        Application.EnableEvents = True
    End If
    On Error GoTo 0

If Target.Cells.Count > 1 Or Target.HasFormula Then Exit Sub
    On Error Resume Next
    If Not Intersect(Target, Range("CostCJnl")) Is Nothing Then
        Application.EnableEvents = False
        Target = UCase(Target)
        Application.EnableEvents = True
    End If
    On Error GoTo 0

If Target.Cells.Count > 1 Or Target.HasFormula Then Exit Sub
    On Error Resume Next
    If Not Intersect(Target, Range("ProjJnl")) Is Nothing Then
        Application.EnableEvents = False
        Target = UCase(Target)
        Application.EnableEvents = True
    End If
    On Error GoTo 0

If Target.Cells.Count > 1 Or Target.HasFormula Then Exit Sub
    On Error Resume Next
    If Not Intersect(Target, Range("TargetResno")) Is Nothing Then
        Application.EnableEvents = False
        Target = UCase(Target)
        Application.EnableEvents = True
    End If
    On Error GoTo 0

End Sub


Private Sub CheckBox1_Click()
    Call UnProtectSheet
     If CheckBox1.Value = True Then
        Range("B8").Value = 1
    Else
        Range("B8").Value = 0
    End If
    Call ProtectSheet
End Sub



Private Sub ToggleButton1_Click()
    If ToggleButton1.Value = True Then
    
        Call UnProtectSheet
               
        Range("ResnoType").Value = 0
               
        Range("GrantResno").Select
        Selection.Copy
        Range("TargetResno").Select
        Selection.PasteSpecial Paste:=xlPasteValidation, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
    
        info = MsgBox("The 'Resno' column of the Journal Transfer Section will now only accept grant types." & vbCrLf & "Please press 'Resno Type' to enable payroll ref entry.", vbInformation, "Resno Type")
            
    Else
        
        Call UnProtectSheet
        Range("ResnoType").Value = 1
        
        Range("PayResno").Select
        Selection.Copy
        Range("TargetResno").Select
        Selection.PasteSpecial Paste:=xlPasteValidation, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
        
        info = MsgBox("The 'Resno' column of the Journal Transfer Section will now only accept payroll references." & vbCrLf & "Please press 'Resno Type' to enable grant type entry.", vbInformation, "Resno Type")
        
        
        Call ProtectSheet
    
    End If
End Sub




Private Sub Worksheet_Deactivate()

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_Calculate()

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

End Sub

Private Sub Worksheet_Deactivate()

End Sub

Private Sub Worksheet_FollowHyperlink(ByVal Target As Hyperlink)

End Sub

Private Sub Worksheet_PivotTableUpdate(ByVal Target As PivotTable)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{3112743E-A79B-4654-86B5-F46799908E9D}{8A8675F6-9BE9-45AC-B4CF-B1D3BCE1C580}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
    If TextBox1.Value = "finance867" Then
               
        Call UnProtectSheet
        Range("W9").Select
        Range("W9").Value = 0
        Call ProtectSheet
                       
        Call UnhideSheets
        UserForm1.Hide
        TextBox1.Value = ""
    Else
        Call UnProtectSheet
        Range("W9").Select
        Range("W9").Value = 1
        Call ProtectSheet
        
        info = MsgBox("Access Denied - Incorrect Password", vbCritical, "Imprest Security")
        
    End If

End Sub


Private Sub CommandButton2_Click()
    UserForm1.Hide
End Sub

Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{A51ECEBB-B2C5-4743-A01B-4384B15E3A42}{02F6350D-FD6D-4448-A2DB-5682F1C87D4A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CheckBox1_Click()
    
    Call UnProtectSheet
    
    If CheckBox1.Value = True Then
        Range("B9").Value = 1
    Else
        Range("B9").Value = 0
    End If
    
    Call ProtectSheet
    
    End Sub

Private Sub CommandButton1_Click()
    UserForm2.Hide
End Sub


Private Sub CommandButton2_Click()
            
            ActiveWorkbook.SendMail _
            Recipients:="education.finance@bracknell-forest.gov.uk", _
            Subject:="Imprest Claim " & Range("N8").Value & " - " & Range("P8").Value
            info = MsgBox("Please check your sent items to verify a successful email submission to Education Finance" & Chr(13) & "You should have a sent email titled '" & Range("L8").Value & " - Imprest Claim " & Range("N8").Value & " - " & Range("P8").Value & "' with this file attached.", vbInformation, "Imprest Information")

            UserForm2.Hide
End Sub



INQUEST-PP=macro
