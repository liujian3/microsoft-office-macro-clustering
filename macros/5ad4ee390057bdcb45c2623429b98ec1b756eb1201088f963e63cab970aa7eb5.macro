Attribute VB_Name = "Foglio1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modulo1"
Option Explicit

#If VBA7 Then
 'Found 64-bit API declarations here: http://spreadsheet1.com/uploads/3/0/6/6/3066620/win32api_ptrsafe.txt
Private Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal wFlags As Long, ByVal dwBytes As LongPtr) As LongPtr
Private Declare PtrSafe Function GlobalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Private Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Private Declare PtrSafe Function GlobalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Private Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Private Declare PtrSafe Function OpenClipboard Lib "user32" (ByVal hwnd As LongPtr) As Long
Private Declare PtrSafe Function CloseClipboard Lib "user32" () As Long
Private Declare PtrSafe Function EmptyClipboard Lib "user32" () As Long
Private Declare PtrSafe Function SetClipboardData Lib "user32" (ByVal wFormat As Long, ByVal hMem As LongPtr) As LongPtr
Private Declare PtrSafe Function GetClipboardData Lib "user32" (ByVal wFormat As Long) As LongPtr
Private Declare PtrSafe Function lstrcpy Lib "kernel32" (ByVal lpString1 As Any, ByVal lpString2 As Any) As LongPtr
#Else
  Declare Function GlobalUnlock Lib "kernel32" (ByVal hMem As Long) As Long
  Declare Function GlobalLock Lib "kernel32" (ByVal hMem As Long) As Long
  Declare Function GlobalAlloc Lib "kernel32" (ByVal wFlags As Long, _
    ByVal dwBytes As Long) As Long
  Declare Function CloseClipboard Lib "User32" () As Long
  Declare Function OpenClipboard Lib "User32" (ByVal hwnd As Long) As Long
  Declare Function EmptyClipboard Lib "User32" () As Long
  Declare Function lstrcpy Lib "kernel32" (ByVal lpString1 As Any, _
    ByVal lpString2 As Any) As Long
  Declare Function SetClipboardData Lib "User32" (ByVal wFormat _
    As Long, ByVal hMem As Long) As Long
#End If




Dim m_Row_DescrizioneRadice As Long
Dim m_Row_DescrizioneEstensione As Long
Dim m_Row_DataType As Long
Dim m_Row_Decimali As Long
Dim m_Row_Array As Long
Dim m_Row_Address As Long
Dim m_Row_Commento As Long
Dim m_Row_R_W As Long



Private Const GMEM_MOVEABLE = &H2
Private Const GMEM_ZEROINIT = &H40
Private Const GHND = (GMEM_MOVEABLE Or GMEM_ZEROINIT)

Public Const CF_TEXT = 1
Public Const MAXSIZE = 4096

Sub ClipBoard_SetData(MyString As String)
'32-bit code by Microsoft: http://msdn.microsoft.com/en-us/library/office/ff192913.aspx
    Dim hGlobalMemory As LongPtr, lpGlobalMemory As LongPtr
    Dim hClipMemory As LongPtr, X As Long

    ' Allocate moveable global memory.
    hGlobalMemory = GlobalAlloc(GHND, Len(MyString) + 1)

    ' Lock the block to get a far pointer to this memory.
    lpGlobalMemory = GlobalLock(hGlobalMemory)

    ' Copy the string to this global memory.
    lpGlobalMemory = lstrcpy(lpGlobalMemory, MyString)

    ' Unlock the memory.
    If GlobalUnlock(hGlobalMemory) <> 0 Then
       MsgBox "Could not unlock memory location. Copy aborted."
       'Debug.Print "GlobalFree returned: " & CStr(GlobalFree(hGlobalMemory))
       GoTo OutOfHere
    End If

    ' Open the Clipboard to copy data to.
    If OpenClipboard(0&) = 0 Then
       MsgBox "Could not open the Clipboard. Copy aborted."
       Exit Sub
    End If

    ' Clear the Clipboard.
    X = EmptyClipboard()

    ' Copy the data to the Clipboard.
    hClipMemory = SetClipboardData(CF_TEXT, hGlobalMemory)

OutOfHere:
    If CloseClipboard() = 0 Then
       MsgBox "Could not close Clipboard."
    End If
End Sub

Sub AlarmReactionList()
Dim l_sheet As Worksheet
Dim nRows As Long
Dim sAlarmList As String
Dim sIndex As String
Dim sDescription As String
Dim srow As String
Dim sClass As String
Dim i As Long
Dim iClass As Integer


On Error GoTo ErrHandler

    Set l_sheet = Worksheets("Allarmi")
     
    nRows = FindlastRow(l_sheet)
    
    sAlarmList = ""
     
    For i = 2 To nRows
         
        sIndex = l_sheet.Cells(i, 1)
        If IsNumeric(sIndex) Then
            sDescription = l_sheet.Cells(i, 2)
            sClass = l_sheet.Cells(i, 3)
            If sClass = "" Then
                sClass = "0"
            End If
            
            If IsNumeric(sClass) Then
                
                iClass = Int(sClass) Mod 10
                srow = "G1_2_All_Reaction_Array[" + sIndex + "]:= " + Str$(iClass) + "; (* " + sDescription + " *)"
            
                sAlarmList = sAlarmList + srow + vbCrLf
            End If
        End If
    Next
     
    ClipBoard_SetData (sAlarmList)
     
ErrHandler:
     
     
     
End Sub


Sub CheckHeader()
Dim l_sheet As Worksheet
Dim l_HeaderRow As Range
Dim l_Header_DescrizioneRadice As Range
Dim l_Header_DescrizioneEstensione As Range
Dim l_Header_DataType As Range
Dim l_Header_Decimali As Range
Dim l_Header_Array As Range
Dim l_Header_Address As Range
Dim l_Header_Commento As Range
Dim l_Header_R_W As Range
    

    On Error GoTo ErrHandler

    Set l_sheet = Worksheets("Variabili")
    
    Set l_HeaderRow = l_sheet.Rows(1)
    
    Set l_Header_DescrizioneRadice = l_HeaderRow.Find("DescrizioneRadice")
    Set l_Header_DescrizioneEstensione = l_HeaderRow.Find("DescrizioneEstensione")
    Set l_Header_DataType = l_HeaderRow.Find("DataType")
    Set l_Header_Decimali = l_HeaderRow.Find("Decimali")
    Set l_Header_Array = l_HeaderRow.Find("Array")
    Set l_Header_Address = l_HeaderRow.Find("Address")
    Set l_Header_Commento = l_HeaderRow.Find("Commento")
    Set l_Header_R_W = l_HeaderRow.Find("R/W")
    
    m_Row_DescrizioneRadice = l_Header_DescrizioneRadice.Column
    m_Row_DescrizioneEstensione = l_Header_DescrizioneEstensione.Column
    m_Row_DataType = l_Header_DataType.Column
    m_Row_Decimali = l_Header_Decimali.Column
    m_Row_Array = l_Header_Array.Column
    m_Row_Address = l_Header_Address.Column
    m_Row_Commento = l_Header_Commento.Column
    m_Row_R_W = l_Header_R_W.Column
  
  
  
       
ErrHandler:
    Err.Clear

End Sub

Function FindlastRow(lSheet As Worksheet) As Long

    FindlastRow = lSheet.UsedRange.Rows.Count + lSheet.UsedRange.Rows(1).Row - 1
    

End Function

Sub Modbus_Data()
Attribute Modbus_Data.VB_ProcData.VB_Invoke_Func = "M\n14"
Dim l_sheet As Worksheet
Dim nRows As Long
Dim sRW As String
Dim sDescrizioneRadice  As String
Dim sDescrizioneEstensione  As String
Dim sdataType  As String
Dim sAddress  As String
Dim sCommento As String
Dim sArray As String
Dim l_Row As Range
Dim i As Long
Dim sModbusData As String
Dim sVarName As String
Dim srow As String

    Set l_sheet = Worksheets("Variabili")
     
    Call CheckHeader
    nRows = FindlastRow(l_sheet)
    
    sModbusData = ""
    
    For i = 2 To nRows
        Set l_Row = l_sheet.Rows(i)
        
        
        sRW = l_sheet.Cells(i, m_Row_R_W)
        sDescrizioneRadice = l_sheet.Cells(i, m_Row_DescrizioneRadice)
        sDescrizioneEstensione = l_sheet.Cells(i, m_Row_DescrizioneEstensione)
        sdataType = l_sheet.Cells(i, m_Row_DataType)
        sAddress = l_sheet.Cells(i, m_Row_Address)
        sCommento = l_sheet.Cells(i, m_Row_Commento)
        sArray = l_sheet.Cells(i, m_Row_Array)
        
     
        
        If UCase(sRW <> "NO") Then
            If sDescrizioneRadice <> "" Or sDescrizioneEstensione <> "" Then
            
                If sDescrizioneRadice = "" Then
                    sVarName = sDescrizioneEstensione
                Else
                    If sDescrizioneEstensione = "" Then
                        sVarName = sDescrizioneRadice
                    Else
                        sVarName = sDescrizioneRadice + "_" + sDescrizioneEstensione
                    End If
                End If
                
                Select Case UCase(sArray)
                    Case "B0"
                        srow = "MDI_" + sVarName + ": " + sdataType + "; (* MDD_a_bArrB0000[" + sAddress + "] - " + sCommento + " *)"
                    Case "B1"
                        srow = "MDI_" + sVarName + ": " + sdataType + "; (* MDD_a_bArrB1000[" + sAddress + "] - " + sCommento + " *)"
                    Case "W3"
                        srow = "MDQ_" + sVarName + ": " + sdataType + "; (* MDD_a_bArrW3000[" + sAddress + "] - " + sCommento + " *)"
                    Case "W4"
                        srow = "MDD_" + sVarName + ": " + sdataType + "; (* MDD_a_bArrW4000[" + sAddress + "] - " + sCommento + " *)"
                    Case Else
                        srow = ""
                End Select
                
                sModbusData = sModbusData + srow + vbCrLf
                
            Else
                If sCommento <> "" Then
                    sModbusData = sModbusData + "(* " + sCommento + " *)" + vbCrLf
                Else
                    sModbusData = sModbusData + vbCrLf
                End If
            End If
        End If
            
            
    Next
    
     
    Dim DataObj As New MSForms.DataObject
  
    DataObj.SetText (sModbusData)
    DataObj.PutInClipboard
    
    

End Sub

Sub PanelCOmmand()
Attribute PanelCOmmand.VB_ProcData.VB_Invoke_Func = "P\n14"
Dim l_sheet As Worksheet
Dim nRows As Long
Dim sRW As String
Dim sDescrizioneRadice  As String
Dim sDescrizioneEstensione  As String
Dim sdataType  As String
Dim sAddress  As String
Dim sCommento As String
Dim sDecimali As String
Dim sconversion As String
Dim sArray As String
Dim smult As String
Dim l_Row As Range
Dim i As Long
Dim spanelCommand As String
Dim sconversionInv As String
Dim sdiv  As String
Dim sVarName As String
Dim srow As String
Dim nDec As Integer

    Set l_sheet = Worksheets("Variabili")
     
    Call CheckHeader
    nRows = FindlastRow(l_sheet)
    
    spanelCommand = ""
    
    For i = 2 To nRows
        Set l_Row = l_sheet.Rows(i)
        
        
        sRW = l_sheet.Cells(i, m_Row_R_W)
        sDescrizioneRadice = l_sheet.Cells(i, m_Row_DescrizioneRadice)
        sDescrizioneEstensione = l_sheet.Cells(i, m_Row_DescrizioneEstensione)
        sdataType = l_sheet.Cells(i, m_Row_DataType)
        sAddress = l_sheet.Cells(i, m_Row_Address)
        sCommento = l_sheet.Cells(i, m_Row_Commento)
        sArray = l_sheet.Cells(i, m_Row_Array)
        sDecimali = l_sheet.Cells(i, m_Row_Decimali)
        
   
        
        If UCase(sRW <> "NO") Then
            If sDescrizioneRadice <> "" Or sDescrizioneEstensione <> "" Then
            
                If sDescrizioneRadice = "" Then
                    sVarName = sDescrizioneEstensione
                Else
                    If sDescrizioneEstensione = "" Then
                        sVarName = sDescrizioneRadice
                    Else
                        sVarName = sDescrizioneRadice + "_" + sDescrizioneEstensione
                    End If
                End If
                
                Select Case UCase(sArray)
                    Case "B0"
                        If UCase(sRW) <> "SI" Then
                            srow = "MDI_" + sVarName + " := MDD_a_bArrB0000[" + sAddress + "]; (* " + sCommento + " *)"
                        Else
                            srow = "IF MDD_a_bArrB0000[" + sAddress + "]<>G_OLD_B0000[" + sAddress + "] THEN  MDI_" + sVarName + ":=(MDD_a_bArrB0000[" + sAddress + "]);    (* " + sCommento + " *)   ELSE MDD_a_bArrB0000[" + sAddress + "]:=(MDI_" + sVarName + "); END_IF G_OLD_B0000[" + sAddress + "]:=MDD_a_bArrB0000[" + sAddress + "];"
                        End If
                    Case "B1"
                        srow = "MDD_a_bArrB1000[" + sAddress + "]:=MDI_" + sVarName + ";    (* " + sCommento + " *)"
                    Case "W3"
                        If (sdataType <> "INT") Then
                            sconversion = sdataType + "_TO_INT"
                            If sDecimali <> "" And sDecimali <> "0" Then
                                If IsNumeric(sDecimali) Then
                                    
                                    nDec = Int(sDecimali)
                                    smult = " * " + Str$(10 ^ nDec) + ".0"
                                Else
                                    smult = ""
                                End If
                            Else
                                smult = ""
                            End If
                        Else
                            sconversion = ""
                            smult = ""
                        End If
                        srow = "MDD_a_bArrW3000[" + sAddress + "]:=" + sconversion + "(MDQ_" + sVarName + smult + ");    (* " + sCommento + " *)"
                    Case "W4"
                        If (sdataType <> "INT") Then
                            sconversion = sdataType + "_TO_INT"
                            sconversionInv = "INT_TO_" + sdataType
                            If sDecimali <> "" And sDecimali <> "0" Then
                                If IsNumeric(sDecimali) Then
                                    
                                    nDec = Int(sDecimali)
                                    smult = " * " + Str$(10 ^ nDec) + ".0"
                                    sdiv = " / " + Str$(10 ^ nDec) + ".0"
                                Else
                                    smult = ""
                                    sdiv = ""
                                End If
                            Else
                                smult = ""
                                sdiv = ""
                            End If
                        Else
                            sconversion = ""
                            sconversionInv = ""
                            smult = ""
                            sdiv = ""
                        End If
                        srow = "IF MDD_a_bArrW4000[" + sAddress + "]<>G_OLD_W4000[" + sAddress + "] THEN  MDD_" + sVarName + ":=" + sconversionInv + "(MDD_a_bArrW4000[" + sAddress + "]) " + sdiv + ";    (* " + sCommento + " *)  ELSE MDD_a_bArrW4000[" + sAddress + "]:=" + sconversion + "(MDD_" + sVarName + smult + "); END_IF G_OLD_W4000[" + sAddress + "]:=MDD_a_bArrW4000[" + sAddress + "];"
                    Case Else
                        srow = ""
                End Select
                
                spanelCommand = spanelCommand + srow + vbCrLf
                
            Else
                If sCommento <> "" Then
                    spanelCommand = spanelCommand + "(* " + sCommento + " *)" + vbCrLf
                Else
                    spanelCommand = spanelCommand + vbCrLf
                End If
            End If
        End If
            
            
    Next
    
     
    Dim DataObj As New MSForms.DataObject
  
    DataObj.SetText (spanelCommand)
    DataObj.PutInClipboard
    
    

End Sub

Sub PanelCOmmand_New()
Dim l_sheet As Worksheet
Dim nRows As Long
Dim sRW As String
Dim sDescrizioneRadice  As String
Dim sDescrizioneEstensione  As String
Dim sdataType  As String
Dim sAddress  As String
Dim sCommento As String
Dim sDecimali As String
Dim sconversion As String
Dim sArray As String
Dim smult As String
Dim l_Row As Range
Dim i As Long
Dim spanelCommand As String
Dim sconversionInv As String
Dim sdiv  As String
Dim sVarName As String
Dim srow As String
Dim nDec As Integer
Dim sArrayVar As String
Dim sMultiplier As String
Dim sMultiplierString As String

    Set l_sheet = Worksheets("Variabili")
     
    Call CheckHeader
    nRows = FindlastRow(l_sheet)
    
    spanelCommand = ""
    
    For i = 2 To nRows
        Set l_Row = l_sheet.Rows(i)
        
        
        sRW = l_sheet.Cells(i, m_Row_R_W)
        sDescrizioneRadice = l_sheet.Cells(i, m_Row_DescrizioneRadice)
        sDescrizioneEstensione = l_sheet.Cells(i, m_Row_DescrizioneEstensione)
        sdataType = l_sheet.Cells(i, m_Row_DataType)
        sAddress = l_sheet.Cells(i, m_Row_Address)
        sCommento = l_sheet.Cells(i, m_Row_Commento)
        sArray = l_sheet.Cells(i, m_Row_Array)
        sDecimali = l_sheet.Cells(i, m_Row_Decimali)
        
   
        
        If UCase(sRW <> "NO") Then
            If sDescrizioneRadice <> "" Or sDescrizioneEstensione <> "" Then
            
                If sDescrizioneRadice = "" Then
                    sVarName = sDescrizioneEstensione
                Else
                    If sDescrizioneEstensione = "" Then
                        sVarName = sDescrizioneRadice
                    Else
                        sVarName = sDescrizioneRadice + "_" + sDescrizioneEstensione
                    End If
                End If
                
                Select Case UCase(sArray)
                    Case "B0"
                        If UCase(sRW) <> "SI" Then
                            srow = "MDI_" + sVarName + " := MDD_a_bArrB0000[" + sAddress + "]; (* " + sCommento + " *)"
                        Else
                            srow = "IF MDD_a_bArrB0000[" + sAddress + "]<>G_OLD_B0000[" + sAddress + "] THEN  MDI_" + sVarName + ":=(MDD_a_bArrB0000[" + sAddress + "]);    (* " + sCommento + " *)   ELSE MDD_a_bArrB0000[" + sAddress + "]:=(MDI_" + sVarName + "); END_IF G_OLD_B0000[" + sAddress + "]:=MDD_a_bArrB0000[" + sAddress + "];"
                        End If
                    Case "B1"
                        srow = "MDD_a_bArrB1000[" + sAddress + "]:=MDI_" + sVarName + ";    (* " + sCommento + " *)"
                    Case "W3"
                       If IsNumeric(sDecimali) Then
                            sMultiplier = Trim(Str$(10 ^ (Int(sDecimali))))
                        Else
                            sMultiplier = "1"
                        End If
                    
                        If sDescrizioneRadice <> "" And sDescrizioneEstensione <> "" Then
                            sVar = "MDQ_" & sDescrizioneRadice & "_" & sDescrizioneEstensione
                        ElseIf sDescrizioneRadice <> "" Then
                            sVar = "MDQ_" & sDescrizioneRadice
                        Else
                            sVar = "MDQ_" & sDescrizioneEstensione
                        End If
                        sArrayVar = "MDD_a_bArrW3000[" & sAddress & "]"
                        
                        Select Case UCase(Trim(sdataType))
                            Case "DWORD"
                                srow = "ptr_DWORD := ADR(" & sArrayVar & "); ptr_DWORD^ :=" & sVar & ";"
                            Case "DINT"
                                srow = "ptr_DINT := ADR(" & sArrayVar & "); ptr_DINT^ :=" & sVar & ";"
                            Case Else
                                sconversion = IIf(sdataType <> "INT", sdataType & "_TO_INT ", "")
                                sMultiplierString = IIf((sdataType = "REAL" Or sdataType = "LREAL") And sMultiplier <> "1", " * " & sMultiplier, "")
                                srow = sArrayVar & " := " & sconversion & "( " & sVar & sMultiplierString & " ); "
                        End Select
                    Case "W4"
                        If (sdataType <> "INT") Then
                            sconversion = sdataType + "_TO_INT"
                            sconversionInv = "INT_TO_" + sdataType
                            If sDecimali <> "" And sDecimali <> "0" Then
                                If IsNumeric(sDecimali) Then
                                    
                                    nDec = Int(sDecimali)
                                    smult = " * " + Str$(10 ^ nDec) + ".0"
                                    sdiv = " / " + Str$(10 ^ nDec) + ".0"
                                Else
                                    smult = ""
                                    sdiv = ""
                                End If
                            Else
                                smult = ""
                                sdiv = ""
                            End If
                        Else
                            sconversion = ""
                            sconversionInv = ""
                            smult = ""
                            sdiv = ""
                        End If
                        srow = "IF MDD_a_bArrW4000[" + sAddress + "]<>G_OLD_W4000[" + sAddress + "] THEN  MDD_" + sVarName + ":=" + sconversionInv + "(MDD_a_bArrW4000[" + sAddress + "]) " + sdiv + ";    (* " + sCommento + " *)  ELSE MDD_a_bArrW4000[" + sAddress + "]:=" + sconversion + "(MDD_" + sVarName + smult + "); END_IF G_OLD_W4000[" + sAddress + "]:=MDD_a_bArrW4000[" + sAddress + "];"
                    Case Else
                        srow = ""
                End Select
                
                spanelCommand = spanelCommand + srow + vbCrLf
                
            Else
                If sCommento <> "" Then
                    spanelCommand = spanelCommand + "(* " + sCommento + " *)" + vbCrLf
                Else
                    spanelCommand = spanelCommand + vbCrLf
                End If
            End If
        End If
            
            
    Next
    
     
    Dim DataObj As New MSForms.DataObject
  
    DataObj.SetText (spanelCommand)
    DataObj.PutInClipboard
    
    

End Sub


Sub IO()
Dim l_sheet As Worksheet
Dim nRows As Long
Dim sdataType  As String
Dim sAddress  As String
Dim l_Row As Range
Dim i As Long
Dim sIO As String
Dim sVarName As String
Dim sVarName2 As String
Dim sDescription As String
Dim sParName As String
Dim sDescription2 As String
Dim sdevicename As String
Dim srow As String

    Set l_sheet = ActiveSheet
         
    nRows = FindlastRow(l_sheet)
    
    sIO = ""
    
    For i = 4 To nRows
        Set l_Row = l_sheet.Rows(i)
        
        sVarName = l_sheet.Cells(i, 1)
        sParName = l_sheet.Cells(i, 2)
        sDescription = l_sheet.Cells(i, 4)
        sAddress = l_sheet.Cells(i, 5)
        sdevicename = l_sheet.Cells(i, 6)
        sVarName2 = l_sheet.Cells(i, 7)
        sDescription2 = l_sheet.Cells(i, 8)
            
        If sVarName <> "" Or sVarName2 <> "" Then
        
            If sVarName2 <> "" Then
                sVarName = sVarName2
            End If
            If sDescription2 <> "" Then
                sDescription = sDescription2
            End If
            
            If InStr(sAddress, "%IW") Or InStr(sAddress, "%QW") Then
                sdataType = "WORD"
            ElseIf InStr(sAddress, "%IX") Or InStr(sAddress, "%QX") Then
                sdataType = "BOOL"
            ElseIf InStr(sAddress, "%IB") Or InStr(sAddress, "%QB") Then
                sdataType = "BYTE"
            ElseIf InStr(sAddress, "%ID") Or InStr(sAddress, "%QD") Then
                sdataType = "DWORD"
            End If
                    
            srow = sVarName + " AT " + sAddress + " : " + sdataType + "; (*" + sdevicename + "." + sParName + ": " + sDescription + "*)"
         
            
           
            sIO = sIO + srow + vbCrLf
            
        End If
           
             
    Next
    
     
    Dim DataObj As New MSForms.DataObject
  
    DataObj.SetText (sIO)
    DataObj.PutInClipboard
    
    

End Sub
Attribute VB_Name = "Questa_cartella_di_lavoro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{D6DF2750-B536-46B2-B643-02E388AACE53}{CED0572C-3621-476D-B5BC-6CF7E538BFBE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


INQUEST-PP=macro
