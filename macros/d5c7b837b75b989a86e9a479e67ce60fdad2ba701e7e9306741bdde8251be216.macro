Attribute VB_Name = "List01"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List02"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List03"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List04"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List05"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List06"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List07"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List08"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List09"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "List20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "List33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List42"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List45"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List46"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List47"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List48"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List49"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List50"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List51"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List52"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List53"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List54"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List55"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List56"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List57"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List58"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List59"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List60"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'   Author: Ond|fffd|ej Lopu|fffd|n|fffd|k
'   Ministry of Finance of the Czech Republic
'   Macroeconomic Forecasts and Structural Policies Unit

Attribute VB_Name = "Module1"
Public bDelkaRetezce As Byte
Public bPoziceOddelovace As Byte

Sub formGrafIQInit()
    
    sVychoziText = "Select..."
    formGrafIQ.cboPredikce.Clear
    
    For Each PrvekFormulare In formGrafIQ.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            PrvekFormulare.Value = False
        End If
    Next PrvekFormulare
    
    For bCounter = 1 To bPocetListu
        formGrafIQ.cboPredikce.AddItem Predikce(bPocetListu - bCounter + 1)
    Next bCounter
    
    formGrafIQ.cboPredikce.Value = sVychoziText
    
End Sub

Sub GrafIQ()

    Call formGrafIQInit
    formGrafIQ.Show

End Sub

Sub GrafIQRun()
Attribute GrafIQRun.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro pro tvorbu graf|fffd| na nov|fffd|m listu
'
    
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
'   Prom|fffd|nn|fffd|

    Dim sTitulek As String
    Dim rGrafyPopiskyOsyX As Range
    Dim boJeLeden As Boolean
    
    Dim GrafyZdrojeDat() As Range
    Dim GrafyJednotky() As String
    Dim GrafyNazvyRad() As String
   
    Dim bRada As Byte
    Dim SmyckaVelikostGrafu As Byte
   
    Dim wsListVybranePredikce As Worksheet
    Set wsListVybranePredikce = Worksheets(bPocetListu - formGrafIQ.cboPredikce.ListIndex)
    
    Dim rBunka As Range
    
    sTitulek = wsListVybranePredikce.Cells(3, 2).Value
    Set rGrafyPopiskyOsyX = wsListVybranePredikce.Range("D6:K6")
    
    boJeLeden = False
    If wsListVybranePredikce.Range("I7").Value <> "" Then
        boJeLeden = True
    End If
    
    Call NastavMaticiGrafu
    
    bCounter = 1
    
    ReDim GrafyZdrojeDat(1 To bVybranoUkazatelu)
    ReDim GrafyJednotky(1 To bVybranoUkazatelu)
    ReDim GrafyNazvyRad(1 To bVybranoUkazatelu)
    
'   Z|fffd|sk|fffd|n|fffd| zdrojov|fffd|ch dat pro zobrazovan|fffd| grafy
 
    For Each PrvekFormulare In formGrafIQ.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
            
                Set rBunka = wsListVybranePredikce.Cells.Find(PrvekFormulare.Caption, searchorder:=xlByColumns)
                Set GrafyZdrojeDat(bCounter) = Range(rBunka.Offset(0, 2), rBunka.Offset(0, 9))
                GrafyJednotky(bCounter) = rBunka.Offset(0, 1).Value
                GrafyNazvyRad(bCounter) = rBunka.Value
                
                bCounter = bCounter + 1
                
            End If
        End If
    Next PrvekFormulare
            
'   Vytvo|fffd|en|fffd| nov|fffd|ho listu
            
    Sheets.Add After:=Sheets(Sheets.Count)
    Rows.RowHeight = siVyskaRadku
    Columns.ColumnWidth = bSirkaSloupce
    
    With ActiveSheet.Cells.Font
        .Name = "Calibri"
        .Size = "8"
    End With
    
    ActiveSheet.Tab.Color = RGB(163, 196, 255)
    
'   Skryt|fffd| |fffd||fffd|dk|fffd| a sloupc|fffd|
                
    Rows((21 * MaticeGrafu(1, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
                
    Columns((10 * MaticeGrafu(2, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
    
'   Ur|fffd|en|fffd| "dla|fffd|dic"
    
    bCounter = 1
    
    ReDim MaticeGrafuOblasti(1 To 16)
    
    For bMaticeGrafuRadky = 1 To MaticeGrafu(1, bVybranoUkazatelu)
        
        For bMaticeGrafuSloupce = 1 To MaticeGrafu(2, bVybranoUkazatelu)
        
            Set MaticeGrafuOblasti(bCounter) = Range(Cells(1 + 21 * (bMaticeGrafuRadky - 1), 1 + 10 * (bMaticeGrafuSloupce - 1)), Cells(21 * bMaticeGrafuRadky, bMaticeGrafuSloupce * 10))
            bCounter = bCounter + 1
        
        Next bMaticeGrafuSloupce
    
    Next bMaticeGrafuRadky
    
'   Tvorba graf|fffd| v|fffd|etn|fffd| tabulek a legend
    
    For bCounter = 1 To bVybranoUkazatelu
    
        With MaticeGrafuOblasti(bCounter)
            
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
        End With
        
        With MaticeGrafuOblasti(bCounter)(2, 1)
            .Value = GrafyNazvyRad(bCounter)
            .Font.Size = "10"
            .Font.Bold = True
        End With
        
        With MaticeGrafuOblasti(bCounter)(3, 1)
            .Value = GrafyJednotky(bCounter)
            .Font.Italic = True
        End With
                
        MaticeGrafuOblasti(bCounter)(4, 1).Value = sTitulek
    
    '   Tvorba legendy grafu
                
        With MaticeGrafuOblasti(bCounter)(8, 8)
            .Value = "Data"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
        
        With MaticeGrafuOblasti(bCounter)(10, 8)
            .Value = "Forecast"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
                    
        Range(MaticeGrafuOblasti(bCounter)(8, 6), MaticeGrafuOblasti(bCounter)(8, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(55, 96, 146)
                    .TintAndShade = 0
                End With
            End With
        End With
        
        Range(MaticeGrafuOblasti(bCounter)(10, 6), MaticeGrafuOblasti(bCounter)(10, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(149, 179, 215)
                    .TintAndShade = 0
                End With
            End With
        End With
    
    '   Tvorba tabulky dat pro graf
                
        rGrafyPopiskyOsyX.Copy
        MaticeGrafuOblasti(bCounter)(19, 2).PasteSpecial Paste:=xlPasteValues
        Set rGrafyPopiskyOsyX = Range(MaticeGrafuOblasti(bCounter)(19, 2), MaticeGrafuOblasti(bCounter)(19, 9))
        rGrafyPopiskyOsyX.HorizontalAlignment = xlCenter
        
        bRada = GrafyZdrojeDat(bCounter).Row
        GrafyZdrojeDat(bCounter).Copy
        MaticeGrafuOblasti(bCounter)(20, 2).PasteSpecial Paste:=xlPasteValues
        Set GrafyZdrojeDat(bCounter) = Range(MaticeGrafuOblasti(bCounter)(20, 2), MaticeGrafuOblasti(bCounter)(20, 9))
        GrafyZdrojeDat(bCounter).HorizontalAlignment = xlCenter
        GrafyZdrojeDat(bCounter).NumberFormat = "# ##0.0"
        
        MaticeGrafuOblasti(bCounter)(20, 1).NumberFormat = "@"
        MaticeGrafuOblasti(bCounter)(20, 1).Value = formGrafIQ.cboPredikce.Value
           
    '   Tvorba grafu
                
        ActiveSheet.Shapes.AddChart.Select
        
        Set cGraf = ActiveChart
        
        With cGraf
            .ChartType = xlColumnClustered
            .HasLegend = False
            .ChartArea.Format.Line.Visible = msoFalse
            .SetElement msoElementPrimaryCategoryGridLinesMajor
        End With
            
        With cGraf.SeriesCollection(1)
            .Values = GrafyZdrojeDat(bCounter)
            .XValues = rGrafyPopiskyOsyX
            .Name = MaticeGrafuOblasti(bCounter)(2, 1).Value
            .Format.Fill.ForeColor.RGB = RGB(55, 96, 146)
            .Points(7).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
            .Points(8).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
        End With
        
        cGraf.ChartTitle.Delete
        
        If boJeLeden = True And (bRada <> 16 And bRada <> 22 And bRada <> 23 And bRada <> 24) Then
            cGraf.SeriesCollection(1).Points(6).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
        Else: End If
    
    '   Form|fffd|tov|fffd|n|fffd| vodorovn|fffd| osy
        
        With cGraf.Axes(xlCategory)
            .MajorTickMark = xlNone
            .TickLabelPosition = xlLow
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
        
    '   Form|fffd|tov|fffd|n|fffd| svisl|fffd| osy
    
        With cGraf.Axes(xlValue)
            .MajorTickMark = xlNone
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
        
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) >= (10 * cGraf.Axes(xlValue).MajorUnit) Then
           cGraf.Axes(xlValue).MajorUnit = cGraf.Axes(xlValue).MajorUnit * 2
        Else: End If
        
    '   Volba po|fffd|tu desetinn|fffd|ch m|fffd|st popisk|fffd| svisl|fffd| osy
        
        If cGraf.Axes(xlValue).MajorUnit >= 1 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0"
        Else
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.0"
        End If
    
    '   Ohrani|fffd|en|fffd| grafu
        
        With cGraf.PlotArea.Format.Line
            .Visible = msoTrue
            .ForeColor.RGB = RGB(0, 0, 0)
            .Weight = 0.25
        End With
        
    '   M|fffd||fffd|ky
        
        With cGraf.Axes(xlCategory).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
        
        With cGraf.Axes(xlValue).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
                  
    '   Nastaven|fffd| fontu a um|fffd|st|fffd|n|fffd| grafu
        
        With cGraf.ChartArea
            .AutoScaleFont = False
            .Font.Name = "Calibri"
            .Font.Size = "7"
            .Left = ((MaticeGrafuOblasti(bCounter)(6, 1).Column - 1) * MaticeGrafuOblasti(bCounter)(6, 1).Width) + 1
            .Top = MaticeGrafuOblasti(bCounter)(6, 1).Row * siVyskaRadku
        End With
    
    '   Nastaven|fffd| rozm|fffd|r|fffd| je pot|fffd|eba prov|fffd|st dvakr|fffd|t, aby si to "sedlo"
        
        For SmyckaVelikostGrafu = 1 To 2
            cGraf.Parent.Width = 221
            cGraf.Parent.Height = 146
            With cGraf.PlotArea
                .InsideWidth = 185
                .InsideLeft = 18
                .InsideHeight = 124
                .InsideTop = 4
            End With
        Next SmyckaVelikostGrafu
        
    '   Vlo|fffd|en|fffd| odkazu na list N|fffd|stroje
            
        MaticeGrafuOblasti(bCounter).Cells(2, 9).Select
        ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
            "Tools!F1", TextToDisplay:="Jump to Tools"
    
'   Konec smy|fffd|ky
    
    Next bCounter

KonecProcedury:

    formGrafIQ.Hide
    Range("D2").Select
    With ActiveWindow
        .DisplayGridlines = False
        .Zoom = 130
        .DisplayHeadings = False
    End With
    Application.ScreenUpdating = True
    
'   |fffd|i|fffd|t|fffd|n|fffd|
    
    Set wsListVybranePredikce = Nothing
    Set cGraf = Nothing
    Set rBunka = Nothing
    Set rGrafyPopiskyOsyX = Nothing
    
    Exit Sub
    
ErrHandler:
    
    MsgBox "Oops, something went wrong...", vbCritical, "GraphIQ"
    formGrafIQ.Hide
    Application.ScreenUpdating = True
            
End Sub

Attribute VB_Name = "Module2"
Sub formKomparatorInit()
    
    Const iPrvniRok As Integer = 2005
    Const bRozsah As Byte = 15   '   Po p|fffd|id|fffd|n|fffd| dal|fffd||fffd| lednov|fffd| predikce nutno zv|fffd||fffd|it o 1
    
    Dim iCounterBack As Integer
    
    sVychoziText = "Select..."
    formKomparator.cboRok.Clear
    
    For Each PrvekFormulare In formKomparator.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            PrvekFormulare.Value = False
        End If
    Next PrvekFormulare
    
    For iCounterBack = bRozsah To 0 Step -1
        formKomparator.cboRok.AddItem iPrvniRok + iCounterBack
    Next iCounterBack
    
    formKomparator.cboRok.Value = sVychoziText
   
End Sub

Sub Komparator()

    Call formKomparatorInit
    formKomparator.Show

End Sub

Sub KomparatorRun()
    
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim iRok As Integer     '   U|fffd|ivatelem vybran|fffd| rok
    iRok = formKomparator.cboRok.Text
   
'   V|fffd|sledn|fffd| po|fffd|et datov|fffd|ch bod|fffd|, kter|fffd| budou zobrazeny v grafech

    Dim bPocetDatovychBodu As Byte
    Dim bIndexPrvnihoListu As Byte
    Dim bIndexPoslednihoListu As Byte
    bIndexPrvnihoListu = WorksheetFunction.Max(1, 56 - (2020 - iRok) * 4)   '   Vzorec po p|fffd|id|fffd|n|fffd| dal|fffd||fffd| lednov|fffd| predikce nutno upravit
    bIndexPoslednihoListu = WorksheetFunction.Min(5 + (iRok - 2005) * 4, bPocetListu)
    bPocetDatovychBodu = bIndexPoslednihoListu - bIndexPrvnihoListu + 1
   
'   Dal|fffd||fffd| prom|fffd|nn|fffd|
    Dim GrafyJednotky() As String
    ReDim GrafyJednotky(1 To bVybranoUkazatelu) As String
    
    Dim GrafyPopiskyOsyX() As String
    ReDim GrafyPopiskyOsyX(1 To bPocetDatovychBodu) As String
    
    Dim GrafyZdrojeDat() As Single  '   Zdrojov|fffd| data graf|fffd|
    ReDim GrafyZdrojeDat(1 To bVybranoUkazatelu, 1 To bPocetDatovychBodu) As Single
    
    Dim GrafyNazvyRad() As String
    ReDim GrafyNazvyRad(1 To bVybranoUkazatelu) As String
    
    Dim CislaRadku() As Byte
    ReDim CislaRadku(1 To bVybranoUkazatelu) As Byte
    
    Dim JeKonsenzus() As Boolean
    ReDim JeKonsenzus(1 To bVybranoUkazatelu) As Boolean
    
    Dim bKonsenzusCheckSum As Byte
    bKonsenzusCheckSum = 0
    
    Dim bKonsenzusOffset As Byte
    
    Dim KonsenzualniData() As Single
    ReDim KonsenzualniData(1 To bVybranoUkazatelu, 1 To 3, 1 To bPocetDatovychBodu) As Single
    
    Dim JsouZnamaData() As Boolean
    ReDim JsouZnamaData(1 To bVybranoUkazatelu) As Boolean
    
    Dim boJeLeden As Boolean
    boJeLeden = False
'    If iRok = 2018 Then boJeLeden = True    '   Jen pokud je na posledn|fffd|m datov|fffd|m listu lednov|fffd| predikce, podm|fffd|nku nutno jednou ro|fffd|n|fffd| upravit
    
    Dim rGrafPopisky As Range
    Dim rGrafData As Range
    Dim rGrafMinimum As Range
    Dim rGrafKonsenzus As Range
    Dim rGrafMaximum As Range
    
    Dim siDiamantLeft As Single
    Dim siDiamantTop As Single
    
    Dim rBunka As Range
    
    Dim bIndexVybranehoIndikatoru As Byte
    bIndexVybranehoIndikatoru = 1

    Dim bSmycka As Byte
    bSmycka = 1

'   Z|fffd|sk|fffd|n|fffd| dat
    
    For bCounter = bIndexPrvnihoListu To bIndexPoslednihoListu
    
        Worksheets(bCounter).Select
        GrafyPopiskyOsyX(bSmycka) = ActiveSheet.Name
    
        If bCounter = bIndexPrvnihoListu Then
        
            For Each PrvekFormulare In formKomparator.Controls
                If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                    If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                        
                        GrafyNazvyRad(bIndexVybranehoIndikatoru) = PrvekFormulare.Caption
                        Set rBunka = Cells.Find(PrvekFormulare.Caption, searchorder:=xlByColumns)
                        CislaRadku(bIndexVybranehoIndikatoru) = rBunka.Row
                        GrafyJednotky(bIndexVybranehoIndikatoru) = rBunka.Offset(0, 1).Value
                        
                        JeKonsenzus(bIndexVybranehoIndikatoru) = False
                        If CislaRadku(bIndexVybranehoIndikatoru) = 10 Or CislaRadku(bIndexVybranehoIndikatoru) = 16 _
                         Or CislaRadku(bIndexVybranehoIndikatoru) = 20 Then
                            JeKonsenzus(bIndexVybranehoIndikatoru) = True
                            bKonsenzusCheckSum = bKonsenzusCheckSum + 1
                        End If
                        
                        bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
                
                    End If
                End If
            Next PrvekFormulare
        
        End If
        
        bIndexVybranehoIndikatoru = 1
        
        For Each PrvekFormulare In formKomparator.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
            
                    GrafyZdrojeDat(bIndexVybranehoIndikatoru, bSmycka) = WorksheetFunction.HLookup(iRok, Range("B6:K25"), CislaRadku(bIndexVybranehoIndikatoru) - 5)
                    
                    If JeKonsenzus(bIndexVybranehoIndikatoru) = True Then
                        
                        Select Case CislaRadku(bIndexVybranehoIndikatoru)
                            Case 10
                                bKonsenzusOffset = 4
                            Case 16
                                bKonsenzusOffset = 5
                            Case 20
                                bKonsenzusOffset = 6
                        End Select
                        
                        Set rBunka = ActiveSheet.Range("P6:U6").Find(iRok)
                        If Not rBunka Is Nothing Then
                            KonsenzualniData(bIndexVybranehoIndikatoru, 1, bSmycka) = rBunka.Offset(bKonsenzusOffset, -1).Value
                            KonsenzualniData(bIndexVybranehoIndikatoru, 2, bSmycka) = rBunka.Offset(bKonsenzusOffset, 0).Value
                            KonsenzualniData(bIndexVybranehoIndikatoru, 3, bSmycka) = rBunka.Offset(bKonsenzusOffset, 1).Value
                        End If
                    
                    End If
                    
                    bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
                    
                End If
            End If
        Next PrvekFormulare
     
        bSmycka = bSmycka + 1
    
    Next bCounter
   
    For bCounter = 1 To bVybranoUkazatelu
        JsouZnamaData(bCounter) = True
        If iRok = 2019 Or iRok = 2020 Then JsouZnamaData(bCounter) = False  '   P|fffd|i posunu o dal|fffd||fffd| rok nutno upravit podm|fffd|nku
        If ActiveSheet.Index Mod 4 = 0 And (CislaRadku(bCounter) <> 16 And CislaRadku(bCounter) <> 22 And CislaRadku(bCounter) <> 23 And CislaRadku(bCounter) <> 24) Then
            JsouZnamaData(bCounter) = False
        End If
    Next bCounter
    
    If bKonsenzusCheckSum > 1 Then bKonsenzusCheckSum = 1
    
    Call NastavMaticiGrafu
   
 '   Vytvo|fffd|en|fffd| nov|fffd|ho listu, zm|fffd|na jeho form|fffd|tov|fffd|n|fffd|, vypln|fffd|n|fffd| popisk|fffd| a dat
    
    Sheets.Add After:=Sheets(Sheets.Count)
    Rows.RowHeight = siVyskaRadku
    
    With ActiveSheet.Cells.Font
        .Name = "Calibri"
        .Size = "8"
    End With
   
    ActiveSheet.Tab.Color = RGB(255, 162, 161)
   
'   Skryt|fffd| |fffd||fffd|dk|fffd| a sloupc|fffd|

    Dim bKoeficientVelikostiDlazdice As Byte
    bKoeficientVelikostiDlazdice = 4 * bKonsenzusCheckSum

    Rows(((21 + bKoeficientVelikostiDlazdice) * MaticeGrafu(1, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
                
    Columns((12 * MaticeGrafu(2, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
   
 '   Nastaven|fffd| "dla|fffd|dic"
    
    bCounter = 1
    
    ReDim MaticeGrafuOblasti(1 To 16)
    
    For bMaticeGrafuRadky = 1 To MaticeGrafu(1, bVybranoUkazatelu)
        
        For bMaticeGrafuSloupce = 1 To MaticeGrafu(2, bVybranoUkazatelu)
        
            Set MaticeGrafuOblasti(bCounter) = Range(Cells(1 + (21 + bKoeficientVelikostiDlazdice) * (bMaticeGrafuRadky - 1), _
            1 + 12 * (bMaticeGrafuSloupce - 1)), Cells((21 + bKoeficientVelikostiDlazdice) * bMaticeGrafuRadky, bMaticeGrafuSloupce * 12))
            bCounter = bCounter + 1
        
        Next bMaticeGrafuSloupce
    
    Next bMaticeGrafuRadky
    
'   Tvorba graf|fffd| v|fffd|etn|fffd| tabulek a legend
    
    For bCounter = 1 To bVybranoUkazatelu
    
        With MaticeGrafuOblasti(bCounter)
            
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
        End With
        
        With MaticeGrafuOblasti(bCounter)(2, 1)
            .Value = GrafyNazvyRad(bCounter) & " (forecasts for the year " & iRok & ")"
            .Font.Size = "10"
            .Font.Bold = True
        End With
        
        With MaticeGrafuOblasti(bCounter)(3, 1)
            .Value = GrafyJednotky(bCounter)
            .Font.Italic = True
        End With
        
        MaticeGrafuOblasti(bCounter)(4, 1).Value = "The evolution of the MoF forecasts in time"
        If JsouZnamaData(bCounter) = True And JeKonsenzus(bCounter) = True Then
            MaticeGrafuOblasti(bCounter)(4, 1).Value = MaticeGrafuOblasti(bCounter)(4, 1).Value & " and comparison with the first data available and consensual forecasts"
        ElseIf JsouZnamaData(bCounter) = True And JeKonsenzus(bCounter) = False Then
            MaticeGrafuOblasti(bCounter)(4, 1).Value = MaticeGrafuOblasti(bCounter)(4, 1).Value & " and comparison with the first data available"
        ElseIf JsouZnamaData(bCounter) = False And JeKonsenzus(bCounter) = True Then
            MaticeGrafuOblasti(bCounter)(4, 1).Value = MaticeGrafuOblasti(bCounter)(4, 1).Value & " and comparison with consensual forecasts"
        End If
        
        Set rGrafPopisky = Range(MaticeGrafuOblasti(bCounter)(19, 2), MaticeGrafuOblasti(bCounter)(19, 2).Offset(0, bPocetDatovychBodu - 1 + JsouZnamaData(bCounter)))
        Set rGrafData = Range(MaticeGrafuOblasti(bCounter)(20, 2), MaticeGrafuOblasti(bCounter)(20, 2).Offset(0, bPocetDatovychBodu - 1))
        rGrafPopisky.Value = GrafyPopiskyOsyX
        For bSmycka = 1 To bPocetDatovychBodu
            MaticeGrafuOblasti(bCounter)(20, 2).Offset(0, bSmycka - 1).Value = GrafyZdrojeDat(bCounter, bSmycka)
        Next bSmycka
        
        MaticeGrafuOblasti(bCounter)(20, 1).Value = "Forecast/data"
        
        rGrafData.HorizontalAlignment = xlCenter
        rGrafData.NumberFormat = "# ##0.0"
        rGrafPopisky.HorizontalAlignment = xlCenter
        
        If JsouZnamaData(bCounter) = True Then
            
            With MaticeGrafuOblasti(bCounter)(19, 2).Offset(0, bPocetDatovychBodu - 1)
                .Value = "First data available"
                .Font.Bold = True
                .HorizontalAlignment = xlLeft
                With .Offset(1, 0)
                    .Font.Bold = True
                End With
            End With
            
            If CislaRadku(bCounter) = 16 Or CislaRadku(bCounter) = 22 Or CislaRadku(bCounter) = 23 Or CislaRadku(bCounter) = 24 Then
            
                 With MaticeGrafuOblasti(bCounter)(19, 2).Offset(0, bPocetDatovychBodu - boJeLeden - 2)
                    .Value = "First data available"
                    .Font.Bold = True
                    .HorizontalAlignment = xlLeft
                    With .Offset(1, 0)
                        .Font.Bold = True
                    End With
                End With
                MaticeGrafuOblasti(bCounter)(19, 2).Offset(0, bPocetDatovychBodu - boJeLeden - 1).Value = vbNullString
                MaticeGrafuOblasti(bCounter)(20, 2).Offset(0, bPocetDatovychBodu - boJeLeden - 1).Value = vbNullString
                Set rGrafPopisky = Range(MaticeGrafuOblasti(bCounter)(19, 2), MaticeGrafuOblasti(bCounter)(19, 2).Offset(0, bPocetDatovychBodu - boJeLeden - 2 + JsouZnamaData(bCounter)))
                Set rGrafData = Range(MaticeGrafuOblasti(bCounter)(20, 2), MaticeGrafuOblasti(bCounter)(20, 2).Offset(0, bPocetDatovychBodu - boJeLeden - 2))
            
            End If
        
        End If
            
        If JeKonsenzus(bCounter) = True Then
        
            If iRok = 2019 Or iRok = 2020 Then  '   Po p|fffd|id|fffd|n|fffd| lednov|fffd| predikce nutno upravit podm|fffd|nku
                For bSmycka = 1 To bPocetDatovychBodu
                    MaticeGrafuOblasti(bCounter)(22, 2).Offset(0, bSmycka - 1).Value = KonsenzualniData(bCounter, 1, bSmycka)
                    MaticeGrafuOblasti(bCounter)(23, 2).Offset(0, bSmycka - 1).Value = KonsenzualniData(bCounter, 2, bSmycka)
                    MaticeGrafuOblasti(bCounter)(24, 2).Offset(0, bSmycka - 1).Value = KonsenzualniData(bCounter, 3, bSmycka)
                Next bSmycka
            Else
                For bSmycka = 1 To bPocetDatovychBodu - 1
                    MaticeGrafuOblasti(bCounter)(22, 2).Offset(0, bSmycka - 1).Value = KonsenzualniData(bCounter, 1, bSmycka)
                    MaticeGrafuOblasti(bCounter)(23, 2).Offset(0, bSmycka - 1).Value = KonsenzualniData(bCounter, 2, bSmycka)
                    MaticeGrafuOblasti(bCounter)(24, 2).Offset(0, bSmycka - 1).Value = KonsenzualniData(bCounter, 3, bSmycka)
                Next bSmycka
            End If
        
            Set rGrafMinimum = rGrafData.Offset(2, 0)
            Set rGrafKonsenzus = rGrafData.Offset(3, 0)
            Set rGrafMaximum = rGrafData.Offset(4, 0)
            
            rGrafMinimum.HorizontalAlignment = xlCenter
            rGrafMinimum.NumberFormat = "# ##0.0"
            rGrafKonsenzus.HorizontalAlignment = xlCenter
            rGrafKonsenzus.NumberFormat = "# ##0.0"
            rGrafMaximum.HorizontalAlignment = xlCenter
            rGrafMaximum.NumberFormat = "# ##0.0"
            
            MaticeGrafuOblasti(bCounter)(22, 1).Value = "Minimum"
            MaticeGrafuOblasti(bCounter)(23, 1).Value = "Consensus"
            MaticeGrafuOblasti(bCounter)(24, 1).Value = "Maximum"
            
            If iRok < 2010 And iRok > 2006 Then Range(MaticeGrafuOblasti(bCounter)(22, 2), MaticeGrafuOblasti(bCounter)(24, 2)).Value = vbNullString
            If iRok > 2007 Then Range(MaticeGrafuOblasti(bCounter)(22, 10), MaticeGrafuOblasti(bCounter)(24, 10)).Value = vbNullString
            
        End If
            
'   Tvorba legendy grafu
                
        With MaticeGrafuOblasti(bCounter)(7, 8)
            .Value = "MoF forecast"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
        
        Range(MaticeGrafuOblasti(bCounter)(7, 6), MaticeGrafuOblasti(bCounter)(7, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(149, 175, 215)
                    .TintAndShade = 0
                End With
            End With
        End With
        
        If JsouZnamaData(bCounter) = True Then
        
            With MaticeGrafuOblasti(bCounter)(9, 8)
                .Value = "First data available"
                .InsertIndent 1
                .VerticalAlignment = xlCenter
            End With
        
            Range(MaticeGrafuOblasti(bCounter)(9, 6), MaticeGrafuOblasti(bCounter)(9, 7)).Select
            Selection.Merge
            With Selection.Interior
                .Pattern = xlPatternLinearGradient
                With .Gradient
                    .Degree = 0
                    .ColorStops.Clear
                    With .ColorStops.Add(0)
                        .Color = RGB(255, 255, 255)
                        .TintAndShade = 0
                    End With
                    With .ColorStops.Add(1)
                        .Color = RGB(55, 96, 146)
                        .TintAndShade = 0
                    End With
                End With
            End With
            
        End If

        If JeKonsenzus(bCounter) = True Then
    
            iDiamantLeft = MaticeGrafuOblasti(bCounter)(11, 7).Column * MaticeGrafuOblasti(bCounter)(11, 7).Width - 13.5
            iDiamantTop = MaticeGrafuOblasti(bCounter)(11, 7).Row * MaticeGrafuOblasti(bCounter)(11, 7).Height - 13.5
            
            ActiveSheet.Shapes.AddShape(msoShapeDiamond, iDiamantLeft, iDiamantTop, 13.5, 13.5).Select
            Selection.ShapeRange.Line.Visible = msoFalse
            With Selection.ShapeRange.Fill
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .ForeColor.TintAndShade = 0
                .Transparency = 0
                .Solid
            End With
        
            With MaticeGrafuOblasti(bCounter)(11, 8)
                .VerticalAlignment = xlCenter
                .Value = "Consensual forecast"
                .InsertIndent 1
            End With
        
            iDiamantLeft = MaticeGrafuOblasti(bCounter)(13, 7).Column * MaticeGrafuOblasti(bCounter)(13, 7).Width - 13.5
            iDiamantTop = MaticeGrafuOblasti(bCounter)(13, 7).Row * MaticeGrafuOblasti(bCounter)(13, 7).Height - 13.5
            
            ActiveSheet.Shapes.AddShape(msoShapeDiamond, iDiamantLeft, iDiamantTop, 13.5, 13.5).Select
            Selection.ShapeRange.Line.Visible = msoFalse
            With Selection.ShapeRange.Fill
                .Visible = msoTrue
                .ForeColor.RGB = RGB(154, 47, 44)
                .ForeColor.TintAndShade = 0
                .Transparency = 0
                .Solid
            End With
        
            With MaticeGrafuOblasti(bCounter)(13, 8)
                .VerticalAlignment = xlCenter
                .Value = "Minimum"
                .InsertIndent 1
            End With
        
            iDiamantLeft = MaticeGrafuOblasti(bCounter)(15, 7).Column * MaticeGrafuOblasti(bCounter)(15, 7).Width - 13.5
            iDiamantTop = MaticeGrafuOblasti(bCounter)(15, 7).Row * MaticeGrafuOblasti(bCounter)(15, 7).Height - 13.5
            
            ActiveSheet.Shapes.AddShape(msoShapeDiamond, iDiamantLeft, iDiamantTop, 13.5, 13.5).Select
            Selection.ShapeRange.Line.Visible = msoFalse
            With Selection.ShapeRange.Fill
                .Visible = msoTrue
                .ForeColor.RGB = RGB(65, 125, 149)
                .ForeColor.TintAndShade = 0
                .Transparency = 0
                .Solid
            End With
        
            With MaticeGrafuOblasti(bCounter)(15, 8)
                .VerticalAlignment = xlCenter
                .Value = "Maximum"
                .InsertIndent 1
            End With
    
        End If

    '   Tvorba grafu
                
        ActiveSheet.Shapes.AddChart.Select
        
        Set cGraf = ActiveChart
        
        With cGraf
            .ChartType = xlColumnClustered
            .HasLegend = False
            .HasTitle = False
            .ChartArea.Format.Line.Visible = msoFalse
            .SetSourceData rGrafData
            .SeriesCollection(1).XValues = rGrafPopisky
            .SetElement msoElementPrimaryCategoryGridLinesMajor
        End With
            
        cGraf.SeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
       
        If JsouZnamaData(bCounter) = True Then
            cGraf.SeriesCollection(1).Points(rGrafData.Columns.Count).Format.Fill.ForeColor.RGB = RGB(55, 96, 146)
        End If
    
        If JeKonsenzus(bCounter) = True Then
        
            cGraf.SeriesCollection.NewSeries
            With cGraf.SeriesCollection(2)
                .Values = rGrafKonsenzus
                .Name = "Consensus"
                .ChartType = xlLineMarkers
                .MarkerStyle = 2
                .MarkerSize = 7
                .Format.Fill.ForeColor.RGB = RGB(0, 0, 0)
                .Format.Line.Visible = msoFalse
            End With
        
            cGraf.SeriesCollection.NewSeries
            With cGraf.SeriesCollection(3)
                .Values = rGrafMinimum
                .Name = "Minimum"
                .ChartType = xlLineMarkers
                .MarkerStyle = 2
                .MarkerSize = 7
                .Format.Fill.ForeColor.RGB = RGB(154, 47, 44)
                .Format.Line.Visible = msoFalse
            End With
        
            cGraf.SeriesCollection.NewSeries
            With cGraf.SeriesCollection(4)
                .Values = rGrafMaximum
                .Name = "Maximum"
                .ChartType = xlLineMarkers
                .MarkerStyle = 2
                .MarkerSize = 7
                .Format.Fill.ForeColor.RGB = RGB(65, 125, 149)
                .Format.Line.Visible = msoFalse
            End With
        
        End If
    
    
    '   Form|fffd|tov|fffd|n|fffd| vodorovn|fffd| osy
            
        With cGraf.Axes(xlCategory)
            .MajorTickMark = xlNone
            .TickLabelPosition = xlLow
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
        
    '   Drobn|fffd| optimalizace popisk|fffd| vodorovn|fffd| osy
    
        If bPocetDatovychBodu > 7 Then cGraf.Axes(xlCategory).TickLabelSpacing = 2
        
    '   Form|fffd|tov|fffd|n|fffd| svisl|fffd| osy
        
        With cGraf.Axes(xlValue)
            .MajorTickMark = xlNone
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
    
    '   Drobn|fffd| optimalizace m|fffd||fffd||fffd|tka na svisl|fffd| ose
    
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) >= (10 * cGraf.Axes(xlValue).MajorUnit) Then
            cGraf.Axes(xlValue).MajorUnit = cGraf.Axes(xlValue).MajorUnit * 2
        Else: End If
        
    '   Volba po|fffd|tu desetinn|fffd|ch m|fffd|st popisk|fffd| svisl|fffd| osy
    
        If cGraf.Axes(xlValue).MajorUnit >= 1 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0"
        Else
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.0"
        End If
        
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) <= 0.5 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.00"
        End If
        
    '   Ohrani|fffd|en|fffd| grafu
        
        With cGraf.PlotArea.Format.Line
            .Visible = msoTrue
            .ForeColor.RGB = RGB(0, 0, 0)
            .Weight = 0.25
        End With
    
    '   M|fffd||fffd|ky
        
        With cGraf.Axes(xlCategory).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
        
        With cGraf.Axes(xlValue).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
                  
    '   Nastaven|fffd| fontu a um|fffd|st|fffd|n|fffd| grafu
        
        With cGraf.ChartArea
            .AutoScaleFont = False
            .Font.Name = "Calibri"
            .Font.Size = "7"
            .Left = ((MaticeGrafuOblasti(bCounter)(5, 1).Column - 1) * MaticeGrafuOblasti(bCounter)(5, 1).Width) + 1
            .Top = MaticeGrafuOblasti(bCounter)(5, 1).Row * siVyskaRadku
        End With
    
    '   Nastaven|fffd| rozm|fffd|r|fffd| je pot|fffd|eba prov|fffd|st dvakr|fffd|t, aby si to "sedlo"
        
        For SmyckaVelikostGrafu = 1 To 2
            cGraf.Parent.Width = 221
            cGraf.Parent.Height = 146
            With cGraf.PlotArea
                .InsideWidth = 185
                .InsideLeft = 18
                .InsideHeight = 124
                .InsideTop = 4
            End With
        Next SmyckaVelikostGrafu
        
    '   Vlo|fffd|en|fffd| odkazu na list N|fffd|stroje
            
        MaticeGrafuOblasti(bCounter).Cells(2, 9).Select
        ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
            "Tools!F1", TextToDisplay:="Jump to Tools"


'   Konec smy|fffd|ky
  
    Next bCounter

    
KonecProcedury:

    formKomparator.Hide
    Range("F2").Select
    With ActiveWindow
        .DisplayGridlines = False
        .Zoom = 130
        .DisplayHeadings = False
    End With
    Application.ScreenUpdating = True
    
'   |fffd|i|fffd|t|fffd|n|fffd|

    Set rGrafPopisky = Nothing
    Set rGrafData = Nothing
    Set rGrafMinimum = Nothing
    Set rGrafKonsenzus = Nothing
    Set rGrafMaximum = Nothing
    Set rBunka = Nothing
    Set cGraf = Nothing
    
    Exit Sub
    
ErrHandler:
    
    MsgBox "Oops, something went wrong...", vbCritical, "Komparator"
    formKomparator.Hide
    Application.ScreenUpdating = True
       
End Sub
Attribute VB_Name = "Module3"
 Sub formRevizorInit()
    
    sVychoziText = "Select..."
    formRevizor.cboRok.Clear
    
    For Each PrvekFormulare In formRevizor.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            PrvekFormulare.Value = False
        End If
    Next PrvekFormulare
    
    Const iPosledniRok As Integer = 2018    '   Po p|fffd|id|fffd|n|fffd| dal|fffd||fffd| dubnov|fffd| predikce (k dispozici prvn|fffd| data za obdob|fffd| T-1) nutno zv|fffd||fffd|it o 1
    Const bRozsah As Byte = 20  '   Po p|fffd|id|fffd|n|fffd| dal|fffd||fffd| dubnov|fffd| predikce (k dispozici prvn|fffd| data za obdob|fffd| T-1) nutno zv|fffd||fffd|it o 1
    
    For bCounter = 1 To bRozsah
        formRevizor.cboRok.AddItem iPosledniRok - bCounter + 1
    Next bCounter
    
    formRevizor.cboRok.Value = sVychoziText
    
End Sub

Sub Revizor()

    Call formRevizorInit
    formRevizor.Show

End Sub

Sub RevizorRun()
    
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim iRok As Integer     '   U|fffd|ivatelem vybran|fffd| rok
    iRok = formRevizor.cboRok.Text
    
    Dim bPocetDatovychBodu As Byte  '   V|fffd|sledn|fffd| po|fffd|et datov|fffd|ch bod|fffd|, kter|fffd| budou zobrazeny v grafech
    bPocetDatovychBodu = WorksheetFunction.Min(bPocetListu, (iRok - 1999) * 4 + 3) - WorksheetFunction.Max(1, (iRok - 2004) * 4 + 1) + 1
    
    Dim GrafyJednotky() As String
    ReDim GrafyJednotky(1 To bVybranoUkazatelu)
    
    Dim GrafyPopiskyOsyX() As String
    ReDim GrafyPopiskyOsyX(1 To bPocetDatovychBodu) As String
    
    Dim GrafyZdrojeDat() As Single  '   Zdrojov|fffd| data graf|fffd|
    ReDim GrafyZdrojeDat(1 To bVybranoUkazatelu, 1 To bPocetDatovychBodu) As Single
    
    Dim GrafyNazvyRad() As String
    ReDim GrafyNazvyRad(1 To bVybranoUkazatelu)
    
    Dim CislaRadku() As Byte
    ReDim CislaRadku(1 To bVybranoUkazatelu)
    
    Dim rOblastPopisku As Range
    Dim rBunka As Range
    Dim rGrafPopisky As Range
    Dim rGrafData As Range
    
'   Z|fffd|sk|fffd|n|fffd| dat
    
    Dim bIndexVybranehoIndikatoru As Byte
    bIndexVybranehoIndikatoru = 1
    
    Worksheets(bPocetListu).Select
    
    For Each PrvekFormulare In formRevizor.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                
                GrafyNazvyRad(bIndexVybranehoIndikatoru) = PrvekFormulare.Caption
                Set rBunka = ActiveSheet.Cells.Find(PrvekFormulare.Caption, searchorder:=xlByColumns)
                CislaRadku(bIndexVybranehoIndikatoru) = rBunka.Row
                GrafyJednotky(bIndexVybranehoIndikatoru) = rBunka.Offset(0, 1).Value
                bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
        
            End If
        End If
    Next PrvekFormulare
    
    bIndexVybranehoIndikatoru = 1
    
    Dim bSmycka As Byte
    bSmycka = 1
    
    For bCounter = WorksheetFunction.Max(1, (iRok - 2004) * 4 + 1) To WorksheetFunction.Min(bPocetListu, (iRok - 1999) * 4 + 3)
    
        Worksheets(bCounter).Select
        GrafyPopiskyOsyX(bSmycka) = ActiveSheet.Name
    
        For Each PrvekFormulare In formRevizor.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
            
                    GrafyZdrojeDat(bIndexVybranehoIndikatoru, bSmycka) = WorksheetFunction.HLookup(iRok, Range("B6:K25"), CislaRadku(bIndexVybranehoIndikatoru) - 5)
                    bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
                    
                End If
            End If
        Next PrvekFormulare
    
        bIndexVybranehoIndikatoru = 1
        bSmycka = bSmycka + 1
    
    Next bCounter
     
    Call NastavMaticiGrafu
    
'   Vytvo|fffd|en|fffd| nov|fffd|ho listu, zm|fffd|na jeho form|fffd|tov|fffd|n|fffd|, vypln|fffd|n|fffd| popisk|fffd| a dat
    
    Sheets.Add After:=Sheets(Sheets.Count)
    Rows.RowHeight = siVyskaRadku
    
    With ActiveSheet.Cells.Font
        .Name = "Calibri"
        .Size = "8"
    End With
    
    ActiveSheet.Tab.Color = RGB(255, 190, 134)
    
'   Skryt|fffd| |fffd||fffd|dk|fffd| a sloupc|fffd|

    Dim bKoeficientVelikostiDlazdice As Byte
    bKoeficientVelikostiDlazdice = (bPocetDatovychBodu \ 8) * 2

    Rows(((21 + bKoeficientVelikostiDlazdice) * MaticeGrafu(1, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
                
    Columns((10 * MaticeGrafu(2, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
    
'   Nastaven|fffd| "dla|fffd|dic"
    
    bCounter = 1
    
    ReDim MaticeGrafuOblasti(1 To 16)
    
    For bMaticeGrafuRadky = 1 To MaticeGrafu(1, bVybranoUkazatelu)
        
        For bMaticeGrafuSloupce = 1 To MaticeGrafu(2, bVybranoUkazatelu)
        
            Set MaticeGrafuOblasti(bCounter) = Range(Cells(1 + (21 + bKoeficientVelikostiDlazdice) * (bMaticeGrafuRadky - 1), _
            1 + 10 * (bMaticeGrafuSloupce - 1)), Cells((21 + bKoeficientVelikostiDlazdice) * bMaticeGrafuRadky, bMaticeGrafuSloupce * 10))
            bCounter = bCounter + 1
        
        Next bMaticeGrafuSloupce
    
    Next bMaticeGrafuRadky
    
'   Tvorba graf|fffd| v|fffd|etn|fffd| tabulek a legend
    
    For bCounter = 1 To bVybranoUkazatelu
    
        With MaticeGrafuOblasti(bCounter)
            
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
        End With
        
        With MaticeGrafuOblasti(bCounter)(2, 1)
            .Value = GrafyNazvyRad(bCounter)
            .Font.Size = "10"
            .Font.Bold = True
        End With
        
        With MaticeGrafuOblasti(bCounter)(3, 1)
            .Value = GrafyJednotky(bCounter)
            .Font.Italic = True
        End With
                
        MaticeGrafuOblasti(bCounter)(4, 1).Value = "Revisions of the data for the year " & iRok
    
    '   Vypln|fffd|n|fffd| dat

        Set rOblastPopisku = Application.Union(Range(MaticeGrafuOblasti(bCounter)(19, 2), MaticeGrafuOblasti(bCounter)(19, 9)), _
        Range(MaticeGrafuOblasti(bCounter)(21, 2), MaticeGrafuOblasti(bCounter)(21, 9)), Range(MaticeGrafuOblasti(bCounter)(23, 2), _
        MaticeGrafuOblasti(bCounter)(23, 8)))
        
        Set rGrafPopisky = MaticeGrafuOblasti(bCounter)(19, 2)
        Set rGrafData = MaticeGrafuOblasti(bCounter)(20, 2)
        
        bSmycka = 1
        
        For Each rBunka In rOblastPopisku
        
            rBunka.Value = GrafyPopiskyOsyX(bSmycka)
            rBunka.Offset(1, 0).Value = GrafyZdrojeDat(bCounter, bSmycka)
            Set rGrafPopisky = Application.Union(rGrafPopisky, rBunka)
            Set rGrafData = Application.Union(rGrafData, rBunka.Offset(1, 0))
            If bSmycka = bPocetDatovychBodu Then Exit For
            bSmycka = bSmycka + 1
        
        Next rBunka
        
        rGrafData.HorizontalAlignment = xlCenter
        rGrafData.NumberFormat = "# ##0.0"
        rGrafPopisky.HorizontalAlignment = xlCenter
        
        For Each rBunka In rGrafData.Rows
            Cells(rBunka.Row, rBunka.Column - 1).Value = "Data"
        Next rBunka
            
    '   Tvorba a form|fffd|tov|fffd|n|fffd| grafu
            
        ActiveSheet.Shapes.AddChart.Select
    
        Set cGraf = ActiveChart
    
        With cGraf
            .ChartType = xlColumnClustered
            .HasLegend = False
            .HasTitle = False
            .ChartArea.Format.Line.Visible = msoFalse
            .SeriesCollection.NewSeries
            With .SeriesCollection(1)
                .Values = rGrafData
                .XValues = rGrafPopisky
            End With
            .SetElement msoElementPrimaryCategoryGridLinesMajor
        End With
        
        If cGraf.SeriesCollection.Count > 1 Then
            For bSmycka = 2 To cGraf.SeriesCollection.Count
                cGraf.SeriesCollection(bSmycka).Delete
            Next bSmycka
        End If
        
        cGraf.SeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(55, 96, 146)
        cGraf.SeriesCollection(1).Name = GrafyNazvyRad(bCounter)
        cGraf.ChartTitle.Delete
        
    '   Drobn|fffd| optimalizace |fffd||fffd||fffd|ky mezery mezi sloupci
    
        Select Case bPocetDatovychBodu
            Case 1 To 8
                cGraf.ChartGroups(1).GapWidth = 150
            Case 9 To 16
                cGraf.ChartGroups(1).GapWidth = 100
            Case Is > 16
                cGraf.ChartGroups(1).GapWidth = 75
        End Select
        
    '   Form|fffd|tov|fffd|n|fffd| vodorovn|fffd| osy
        
        With cGraf.Axes(xlCategory)
            .MajorTickMark = xlNone
            .TickLabelPosition = xlLow
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
    
    '   Drobn|fffd| optimalizace popisk|fffd| vodorovn|fffd| osy
    
        If bPocetDatovychBodu > 7 And bPocetDatovychBodu <= 12 Then
            With cGraf.Axes(xlCategory)
                .TickLabelSpacing = 2
                .TickMarkSpacing = 2
            End With
        End If
        
        If bPocetDatovychBodu > 12 Then
            With cGraf.Axes(xlCategory)
                .TickLabelSpacing = 4
                .TickMarkSpacing = 4
            End With
        End If
        
    '   Form|fffd|tov|fffd|n|fffd| svisl|fffd| osy
    
        With cGraf.Axes(xlValue)
            .MajorTickMark = xlNone
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With

    '   Drobn|fffd| optimalizace m|fffd||fffd||fffd|tka na svisl|fffd| ose
    
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) >= (10 * cGraf.Axes(xlValue).MajorUnit) Then
            cGraf.Axes(xlValue).MajorUnit = cGraf.Axes(xlValue).MajorUnit * 2
        Else: End If
    
    '   Volba po|fffd|tu desetinn|fffd|ch m|fffd|st popisk|fffd| svisl|fffd| osy
    
        If cGraf.Axes(xlValue).MajorUnit >= 1 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0"
        Else
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.0"
        End If
        
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) <= 0.5 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.00"
        End If

    '   Ohrani|fffd|en|fffd| grafu
        
        With cGraf.PlotArea.Format.Line
            .Visible = msoTrue
            .ForeColor.RGB = RGB(0, 0, 0)
            .Weight = 0.25
        End With
    
    '   M|fffd||fffd|ky
        
        With cGraf.Axes(xlCategory).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
        
        With cGraf.Axes(xlValue).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
                  
    '   Nastaven|fffd| fontu a um|fffd|st|fffd|n|fffd| grafu
        
        With cGraf.ChartArea
            .AutoScaleFont = False
            .Font.Name = "Calibri"
            .Font.Size = "7"
            .Left = ((MaticeGrafuOblasti(bCounter)(6, 1).Column - 1) * MaticeGrafuOblasti(bCounter)(6, 1).Width) + 1
            .Top = MaticeGrafuOblasti(bCounter)(6, 1).Row * siVyskaRadku
        End With
    
    '   Nastaven|fffd| rozm|fffd|r|fffd| je pot|fffd|eba prov|fffd|st dvakr|fffd|t, aby si to "sedlo"
        
        For SmyckaVelikostGrafu = 1 To 2
            cGraf.Parent.Width = 221
            cGraf.Parent.Height = 146
            With cGraf.PlotArea
                .InsideWidth = 185
                .InsideLeft = 18
                .InsideHeight = 124
                .InsideTop = 4
            End With
        Next SmyckaVelikostGrafu
        
    '   Vlo|fffd|en|fffd| odkazu na list N|fffd|stroje
            
        MaticeGrafuOblasti(bCounter).Cells(2, 9).Select
        ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
            "Tools!F1", TextToDisplay:="Jump to tools"

'   Konec smy|fffd|ky
  
    Next bCounter
    
KonecProcedury:

    formRevizor.Hide
    Range("D2").Select
    With ActiveWindow
        .DisplayGridlines = False
        .Zoom = 130
        .DisplayHeadings = False
    End With
    Application.ScreenUpdating = True
    
'   |fffd|i|fffd|t|fffd|n|fffd|
    
    Set rOblastPopisku = Nothing
    Set rBunka = Nothing
    Set rGrafPopisky = Nothing
    Set rGrafData = Nothing
    Set cGraf = Nothing
    
    Exit Sub
    
ErrHandler:
    
    MsgBox "Oops, something went wrong...", vbCritical, "Revisions"
    formRevizor.Hide
    Application.ScreenUpdating = True
       
End Sub

Attribute VB_Name = "Module4"
Sub formK2Init()
    
    sVychoziText = "Select..."
    
    For Each PrvekFormulare In formK2.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            PrvekFormulare.Value = False
        End If
    Next PrvekFormulare
    
    formK2.cboPredikce1.Clear
    formK2.cboPredikce2.Clear
    
    For bCounter = 1 To bPocetListu
        formK2.cboPredikce1.AddItem Predikce(bPocetListu - bCounter + 1)
        formK2.cboPredikce2.AddItem Predikce(bPocetListu - bCounter + 1)
    Next bCounter
    
    formK2.cboPredikce1.Value = sVychoziText
    formK2.cboPredikce2.Value = sVychoziText
    
End Sub

Sub K2Proc()

    Call formK2Init
    formK2.Show

End Sub

Sub K2Run()
'
' Makro pro tvorbu grafu na nov|fffd|m listu
'
    
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
'   Prom|fffd|nn|fffd|
    
    Dim sTitulky(1 To 2) As String
    Dim rGrafyPopiskyOsyX(1 To 2) As Range
    
    Dim boJeLeden(1 To 2) As Boolean
    boJeLeden(1) = False
    boJeLeden(2) = False
    
    Dim boJeNovejsi(1 To 2) As Boolean
    boJeNovejsi(1) = 0
    boJeNovejsi(2) = 0
    
    Dim bRada(1 To 2) As Byte
    
    Dim bIndexVybranehoIndikatoru As Byte
    
    Dim wsListVybranePredikce As Worksheet
    Set wsListVybranePredikce = Worksheets(bPocetListu - formK2.cboPredikce1.ListIndex)
    
    Dim rBunka As Range
    
    Dim GrafyZdrojeDat() As Range
    Dim GrafyJednotky() As String
    Dim GrafyNazvyRad() As String
    
    ReDim GrafyZdrojeDat(1 To 2, 1 To bVybranoUkazatelu)
    ReDim GrafyJednotky(1 To 2, 1 To bVybranoUkazatelu)
    ReDim GrafyNazvyRad(1 To 2, 1 To bVybranoUkazatelu)
    
    Dim bKoeficientPosunu As Byte
    
    Dim bSmycka As Byte
    Dim SmyckaVelikostGrafu As Byte
    
    If formK2.cboPredikce1.ListIndex < formK2.cboPredikce2.ListIndex Then
        boJeNovejsi(1) = True
    Else
        boJeNovejsi(2) = True
    End If
  
'   Z|fffd|sk|fffd|n|fffd| zdrojov|fffd|ch dat pro zobrazovan|fffd| grafy
    
    For bCounter = 1 To 2
    
        sTitulky(bCounter) = wsListVybranePredikce.Cells(3, 2).Value
        Set rGrafyPopiskyOsyX(bCounter) = wsListVybranePredikce.Range("D6:K6")
        
        If wsListVybranePredikce.Range("I7").Value <> "" Then
            boJeLeden(bCounter) = True
        End If
        
        bIndexVybranehoIndikatoru = 1
        
        For Each PrvekFormulare In formK2.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
            
                    Set rBunka = wsListVybranePredikce.Cells.Find(PrvekFormulare.Caption, searchorder:=xlByColumns)
                    Set GrafyZdrojeDat(bCounter, bIndexVybranehoIndikatoru) = Range(rBunka.Offset(0, 2), rBunka.Offset(0, 9))
                    GrafyJednotky(bCounter, bIndexVybranehoIndikatoru) = rBunka.Offset(0, 1).Value
                    GrafyNazvyRad(bCounter, bIndexVybranehoIndikatoru) = rBunka.Value
                    
                    bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
                
                End If
            End If
        Next PrvekFormulare
        
        Set wsListVybranePredikce = Worksheets(bPocetListu - formK2.cboPredikce2.ListIndex)
    
    Next bCounter
    
    Call NastavMaticiGrafu
    
'   Vytvo|fffd|en|fffd| nov|fffd|ho listu
            
    Sheets.Add After:=Sheets(Sheets.Count)
    Rows.RowHeight = siVyskaRadku
    Columns.ColumnWidth = bSirkaSloupce
    
    With ActiveSheet.Cells.Font
        .Name = "Calibri"
        .Size = "8"
    End With
    
    ActiveSheet.Tab.Color = RGB(188, 188, 188)
    
'   Skryt|fffd| |fffd||fffd|dk|fffd| a sloupc|fffd|
                
    bKoeficientPosunu = Abs(rGrafyPopiskyOsyX(1)(1, 1) - rGrafyPopiskyOsyX(2)(1, 1))
    
    Const bVyskaDlazdice As Byte = 23
    Dim bSirkaDlazdice As Byte
    bSirkaDlazdice = 10 + bKoeficientPosunu
    
    Rows((bVyskaDlazdice * MaticeGrafu(1, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
                
    Columns((bSirkaDlazdice * MaticeGrafu(2, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
    
    ReDim MaticeGrafuOblasti(1 To 16)
    
'   Ur|fffd|en|fffd| "dla|fffd|dic"
    
    bCounter = 1
    
    For bMaticeGrafuRadky = 1 To MaticeGrafu(1, bVybranoUkazatelu)
        
        For bMaticeGrafuSloupce = 1 To MaticeGrafu(2, bVybranoUkazatelu)
        
            Set MaticeGrafuOblasti(bCounter) = Range(Cells(1 + bVyskaDlazdice * (bMaticeGrafuRadky - 1), 1 + bSirkaDlazdice * (bMaticeGrafuSloupce - 1)), Cells(bVyskaDlazdice * bMaticeGrafuRadky, bMaticeGrafuSloupce * bSirkaDlazdice))
            bCounter = bCounter + 1
        
        Next bMaticeGrafuSloupce
    
    Next bMaticeGrafuRadky

'   Tvorba graf|fffd| v|fffd|etn|fffd| tabulek a legend
    
    For bCounter = 1 To bVybranoUkazatelu
    
    '   Ohrani|fffd|en|fffd| dla|fffd|dice
            
        With MaticeGrafuOblasti(bCounter)
            
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
        End With
        
        With MaticeGrafuOblasti(bCounter)(2, 1)
            .Value = GrafyNazvyRad(1, bCounter)
            .Font.Size = "10"
            .Font.Bold = True
        End With
        
        With MaticeGrafuOblasti(bCounter)(3, 1)
            .Value = GrafyJednotky(1, bCounter)
            .Font.Italic = True
        End With
                
        MaticeGrafuOblasti(bCounter)(4, 1).Value = sTitulky(1) & " vs."
        MaticeGrafuOblasti(bCounter)(5, 1).Value = sTitulky(2)
   
    '   Tvorba legendy grafu
       
        With MaticeGrafuOblasti(bCounter)(8, 8)
            .Value = formK2.cboPredikce1.Value & ", data"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
        
        With MaticeGrafuOblasti(bCounter)(10, 8)
            .Value = formK2.cboPredikce1.Value & ", forecast"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
        
        With MaticeGrafuOblasti(bCounter)(12, 8)
            .Value = formK2.cboPredikce2.Value & ", data"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
        
        With MaticeGrafuOblasti(bCounter)(14, 8)
            .Value = formK2.cboPredikce2.Value & ", forecast"
            .InsertIndent 1
            .VerticalAlignment = xlCenter
        End With
                    
        Range(MaticeGrafuOblasti(bCounter)(8, 6), MaticeGrafuOblasti(bCounter)(8, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(55, 96, 146)
                    .TintAndShade = 0
                End With
            End With
        End With
        
        Range(MaticeGrafuOblasti(bCounter)(10, 6), MaticeGrafuOblasti(bCounter)(10, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(149, 179, 215)
                    .TintAndShade = 0
                End With
            End With
        End With
        
        Range(MaticeGrafuOblasti(bCounter)(12, 6), MaticeGrafuOblasti(bCounter)(12, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(154, 47, 44)
                    .TintAndShade = 0
                End With
            End With
        End With
        
        Range(MaticeGrafuOblasti(bCounter)(14, 6), MaticeGrafuOblasti(bCounter)(14, 7)).Select
        Selection.Merge
        With Selection.Interior
            .Pattern = xlPatternLinearGradient
            With .Gradient
                .Degree = 0
                .ColorStops.Clear
                With .ColorStops.Add(0)
                    .Color = RGB(255, 255, 255)
                    .TintAndShade = 0
                End With
                With .ColorStops.Add(1)
                    .Color = RGB(222, 141, 139)
                    .TintAndShade = 0
                End With
            End With
        End With
        
    '   Tvorba tabulky dat pro graf
   
        MaticeGrafuOblasti(bCounter)(19, 2) = WorksheetFunction.Min(rGrafyPopiskyOsyX(1), rGrafyPopiskyOsyX(2))
        For bSmycka = 1 To (8 + bKoeficientPosunu - 1)
            MaticeGrafuOblasti(bCounter)(19, 2).Offset(0, bSmycka).Value = MaticeGrafuOblasti(bCounter)(19, 2).Value + bSmycka
        Next bSmycka
        Set rGrafyPopiskyOsyX(1) = Range(MaticeGrafuOblasti(bCounter)(19, 2), MaticeGrafuOblasti(bCounter)(19, 9 + bKoeficientPosunu))
        rGrafyPopiskyOsyX(1).HorizontalAlignment = xlCenter
        
        For bSmycka = 1 To 2
            bRada(bSmycka) = GrafyZdrojeDat(bSmycka, bCounter).Row
        Next bSmycka
                
        GrafyZdrojeDat(1, bCounter).Copy
        MaticeGrafuOblasti(bCounter)(20, 2 - bKoeficientPosunu * boJeNovejsi(1)).PasteSpecial Paste:=xlPasteValues
        Set GrafyZdrojeDat(1, bCounter) = Range(MaticeGrafuOblasti(bCounter)(20, 2), MaticeGrafuOblasti(bCounter)(20, 9 - bKoeficientPosunu * boJeNovejsi(1)))
        With GrafyZdrojeDat(1, bCounter)
            .HorizontalAlignment = xlCenter
            .NumberFormat = "# ##0.0"
        End With
        MaticeGrafuOblasti(bCounter)(20, 1).NumberFormat = "@"
        MaticeGrafuOblasti(bCounter)(20, 1).Value = formK2.cboPredikce1.Value
        
        GrafyZdrojeDat(2, bCounter).Copy
        MaticeGrafuOblasti(bCounter)(21, 2 - bKoeficientPosunu * boJeNovejsi(2)).PasteSpecial Paste:=xlPasteValues
        Set GrafyZdrojeDat(2, bCounter) = Range(MaticeGrafuOblasti(bCounter)(21, 2), MaticeGrafuOblasti(bCounter)(21, 9 - bKoeficientPosunu * boJeNovejsi(2)))
        With GrafyZdrojeDat(2, bCounter)
            .HorizontalAlignment = xlCenter
            .NumberFormat = "# ##0.0"
        End With
        MaticeGrafuOblasti(bCounter)(21, 1).NumberFormat = "@"
        MaticeGrafuOblasti(bCounter)(21, 1).Value = formK2.cboPredikce2.Value
        
        '   Tvorba grafu
            
        ActiveSheet.Shapes.AddChart.Select
        
        Set cGraf = ActiveChart
        
        With cGraf
            .ChartType = xlColumnClustered
            .HasTitle = False
            .HasLegend = False
            .ChartArea.Format.Line.Visible = msoFalse
            .SetElement (msoElementPrimaryCategoryGridLinesMajor)
            .SeriesCollection(1).Values = GrafyZdrojeDat(1, bCounter)
            .SeriesCollection(1).XValues = rGrafyPopiskyOsyX(1)
            .SeriesCollection.NewSeries
            .SeriesCollection(2).Values = GrafyZdrojeDat(2, bCounter)
            .SeriesCollection(2).XValues = rGrafyPopiskyOsyX(1)
        End With
            
        cGraf.ChartGroups(1).GapWidth = 60
        cGraf.ChartGroups(1).Overlap = -40
        
        With cGraf.SeriesCollection(1)
            .Format.Fill.ForeColor.RGB = RGB(55, 96, 146)
            .Points(cGraf.SeriesCollection(1).Points.Count - 1).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
            .Points(cGraf.SeriesCollection(1).Points.Count).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
        End With
        
        If boJeLeden(1) = True And (bRada(1) <> 16 And bRada(1) <> 22 And bRada(1) <> 23 And bRada(1) <> 24) Then
                cGraf.SeriesCollection(1).Points(cGraf.SeriesCollection(1).Points.Count - 2).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
        End If
        
        With cGraf.SeriesCollection(2)
            .Format.Fill.ForeColor.RGB = RGB(154, 47, 44)
            .Points(cGraf.SeriesCollection(2).Points.Count - 1).Format.Fill.ForeColor.RGB = RGB(222, 141, 139)
            .Points(cGraf.SeriesCollection(2).Points.Count).Format.Fill.ForeColor.RGB = RGB(222, 141, 139)
        End With
        
        If boJeLeden(2) = True And (bRada(2) <> 16 And bRada(2) <> 22 And bRada(2) <> 23 And bRada(2) <> 24) Then
            cGraf.SeriesCollection(2).Points(cGraf.SeriesCollection(2).Points.Count - 2).Format.Fill.ForeColor.RGB = RGB(222, 141, 139)
        End If
       
        '   Form|fffd|tov|fffd|n|fffd| vodorovn|fffd| osy
    
        With cGraf.Axes(xlCategory)
            .MajorTickMark = xlNone
            .TickLabelPosition = xlLow
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
        
    '   Form|fffd|tov|fffd|n|fffd| svisl|fffd| osy
    
        With cGraf.Axes(xlValue)
            .MajorTickMark = xlNone
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
        
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) >= (10 * cGraf.Axes(xlValue).MajorUnit) Then
            cGraf.Axes(xlValue).MajorUnit = cGraf.Axes(xlValue).MajorUnit * 2
        Else: End If
    
    '   Optimalizace po|fffd|tu desetinn|fffd|ch m|fffd|st popisk|fffd| svisl|fffd| osy
        
        If cGraf.Axes(xlValue).MajorUnit >= 1 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0"
        Else
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.0"
        End If
    
    '   Ohrani|fffd|en|fffd| grafu
        
        With cGraf.PlotArea.Format.Line
            .Visible = msoTrue
            .ForeColor.RGB = RGB(0, 0, 0)
            .Weight = 0.25
        End With
    
    '   M|fffd||fffd|ky
        
        With cGraf.Axes(xlCategory).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
        
        If rGrafyPopiskyOsyX(1).Columns.Count > 10 Then
            cGraf.Axes(xlCategory).TickLabelSpacing = 2
        Else: End If
            
        With cGraf.Axes(xlValue).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
     
    '   Nastaven|fffd| fontu a um|fffd|st|fffd|n|fffd| grafu
        
        With cGraf.ChartArea
            .AutoScaleFont = False
            .Font.Name = "Calibri"
            .Font.Size = "7"
            .Left = ((MaticeGrafuOblasti(bCounter)(6, 1).Column - 1) * MaticeGrafuOblasti(bCounter)(6, 1).Width) + 1
            .Top = MaticeGrafuOblasti(bCounter)(6, 1).Row * siVyskaRadku
        End With
        
    '   Nastaven|fffd| rozm|fffd|r|fffd| je pot|fffd|eba prov|fffd|st dvakr|fffd|t, aby si to "sedlo"
    
        For SmyckaVelikostGrafu = 1 To 2
            cGraf.Parent.Width = 221
            cGraf.Parent.Height = 146
            With cGraf.PlotArea
                .InsideWidth = 185
                .InsideLeft = 18
                .InsideHeight = 124
                .InsideTop = 4
            End With
        Next SmyckaVelikostGrafu
    
    '   Vlo|fffd|en|fffd| odkazu na list N|fffd|stroje
    
        MaticeGrafuOblasti(bCounter)(2, 9).Select
        ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
            "Tools!F1", TextToDisplay:="Jump to tools"
      
'   Konec smy|fffd|ky
    
    Next bCounter

KonecProcedury:

    formK2.Hide
    Range("D2").Select
    With ActiveWindow
        .DisplayGridlines = False
        .Zoom = 130
        .DisplayHeadings = False
    End With
    Application.ScreenUpdating = True
    
'   |fffd|i|fffd|t|fffd|n|fffd|
    
    Set wsListVybranePredikce = Nothing
    Set cGraf = Nothing
    Set rBunka = Nothing
    
    Exit Sub
    
ErrHandler:
    
    MsgBox "Oops, something went wrong...", vbCritical, "K2"
    formK2.Hide
    Application.ScreenUpdating = True

End Sub




Attribute VB_Name = "Module5"
Sub formAnalytIQInit()
    
    sVychoziText = "Select..."
    formAnalytIQ.cboAUkazatel.Clear
    
    For Each PrvekFormulare In formAnalytIQ.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            PrvekFormulare.Value = False
        End If
    Next PrvekFormulare
    
    formAnalytIQ.cboAUkazatel.AddItem "Average forecasting error"
    formAnalytIQ.cboAUkazatel.AddItem "Mean absolute error"
    formAnalytIQ.cboAUkazatel.AddItem "Mean squared error"
    formAnalytIQ.cboAUkazatel.AddItem "Theil's coefficient"
    
    formAnalytIQ.cboAUkazatel.Value = sVychoziText
   
End Sub

Sub AnalytIQ()

    Call formAnalytIQInit
    formAnalytIQ.Show

End Sub

Sub AnalytIQRun()

'    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
'   Prom|fffd|nn|fffd|

    Dim bIndexVybranehoIndikatoru As Byte
    bIndexVybranehoIndikatoru = 1
    
    Dim GrafyNazvyRad() As String
    ReDim GrafyNazvyRad(1 To bVybranoUkazatelu) As String
    
    Const cPrvniRok As Integer = 2005
    Const cPosledniRok As Integer = 2018    '   Po p|fffd|id|fffd|n|fffd| dubnov|fffd| predikce nutno zv|fffd||fffd|it o 1
    
    Dim bPocetObdobi As Byte
    bPocetObdobi = cPosledniRok - cPrvniRok + 1
    
    Dim PrvniZnamaData() As Single
    ReDim PrvniZnamaData(1 To bVybranoUkazatelu, 1 To bPocetObdobi) As Single
    
    Dim rBunka As Range
  
    Dim CislaRadku() As Byte
    ReDim CislaRadku(1 To bVybranoUkazatelu) As Byte
    
    Dim bSmycka As Byte
    Dim iCounterBack As Integer
    Dim bHorizont As Byte
    
    Dim PredikceFT() As Single
    ReDim PredikceFT(1 To bVybranoUkazatelu, 1 To bPocetObdobi, 1 To 9)
    
    Dim Vystup() As Single
    ReDim Vystup(1 To bVybranoUkazatelu, 1 To 9)
    
    Dim bVyplnitDataDo As Byte
    Dim rGrafPopisky As Range
    Dim rGrafData As Range
    
'   Z|fffd|sk|fffd|n|fffd| dat

    For Each PrvekFormulare In formAnalytIQ.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                
                GrafyNazvyRad(bIndexVybranehoIndikatoru) = PrvekFormulare.Caption
                
                Set rBunka = Worksheets(bPocetListu).Cells.Find(PrvekFormulare.Caption, searchorder:=xlByColumns)
                CislaRadku(bIndexVybranehoIndikatoru) = rBunka.Row
                
                For bCounter = 1 To bPocetObdobi
                    PrvniZnamaData(bIndexVybranehoIndikatoru, bCounter) = Worksheets(bCounter * 4 + 1).Cells(CislaRadku(bIndexVybranehoIndikatoru), 9).Value
                Next bCounter
                
                bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
        
            End If
        End If
    Next PrvekFormulare
    
    For bCounter = 1 To bPocetObdobi
    
        Select Case bCounter
            Case 1
                bHorizont = 4
            Case 2
                bHorizont = 8
            Case 3 To bPocetObdobi
                bHorizont = 9
        End Select
        
        For bSmycka = WorksheetFunction.Max((bCounter - 2) * 4, 1) To bCounter * 4
        
            bIndexVybranehoIndikatoru = 1
            
            For Each PrvekFormulare In formAnalytIQ.Controls
                If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                    If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                
                        PredikceFT(bIndexVybranehoIndikatoru, bCounter, bHorizont) = WorksheetFunction.HLookup(cPrvniRok + bCounter - 1, _
                        Worksheets(bSmycka).Range("B6:K25"), CislaRadku(bIndexVybranehoIndikatoru) - 5)
                        
                        bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
                
                    End If
                End If
            Next PrvekFormulare
                
            bHorizont = bHorizont - 1
        
        Next bSmycka
    
    Next bCounter
    
    If formAnalytIQ.cboAUkazatel.ListIndex = 3 Then
    
        Dim NaivniPrognoza() As Single
        ReDim NaivniPrognoza(1 To bVybranoUkazatelu, 1 To bPocetObdobi, 1 To 9)
        
        For bCounter = 1 To bPocetObdobi
    
            Select Case bCounter
                Case 1
                    bHorizont = 4
                Case 2
                    bHorizont = 8
                Case 3 To bPocetObdobi
                    bHorizont = 9
            End Select
            
            For bSmycka = WorksheetFunction.Max((bCounter - 2) * 4, 1) To bCounter * 4
            
                bIndexVybranehoIndikatoru = 1
                
                For Each PrvekFormulare In formAnalytIQ.Controls
                    If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                        If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                    
                            NaivniPrognoza(bIndexVybranehoIndikatoru, bCounter, bHorizont) = WorksheetFunction.HLookup(cPrvniRok + bCounter - 2, _
                            Worksheets(bSmycka).Range("B6:K25"), CislaRadku(bIndexVybranehoIndikatoru) - 5)
                            
                            bIndexVybranehoIndikatoru = bIndexVybranehoIndikatoru + 1
                    
                        End If
                    End If
                Next PrvekFormulare
                    
                bHorizont = bHorizont - 1
            
            Next bSmycka
    
        Next bCounter
    
    End If
    
    Call NastavMaticiGrafu
    
    Select Case formAnalytIQ.cboAUkazatel.ListIndex
        Case 0
            Vystup = AFE(PrvniZnamaData, PredikceFT, bPocetObdobi)
        Case 1
            Vystup = MAE(PrvniZnamaData, PredikceFT, bPocetObdobi)
        Case 2
            Vystup = MSE(PrvniZnamaData, PredikceFT, bPocetObdobi)
        Case 3
            Vystup = Theil(PrvniZnamaData, PredikceFT, NaivniPrognoza, bPocetObdobi)
    End Select
    
'   Vytvo|fffd|en|fffd| nov|fffd|ho listu, zm|fffd|na jeho form|fffd|tov|fffd|n|fffd|, vypln|fffd|n|fffd| popisk|fffd| a dat
    
    Sheets.Add After:=Sheets(Sheets.Count)
    Rows.RowHeight = siVyskaRadku
    
    With ActiveSheet.Cells.Font
        .Name = "Calibri"
        .Size = "8"
    End With
   
    ActiveSheet.Tab.Color = RGB(201, 181, 232)
    
'   Skryt|fffd| |fffd||fffd|dk|fffd| a sloupc|fffd|

    Rows((21 * MaticeGrafu(1, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
                
    Columns((11 * MaticeGrafu(2, bVybranoUkazatelu)) + 1).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
   
'   Nastaven|fffd| "dla|fffd|dic"
    
    bCounter = 1
    
    ReDim MaticeGrafuOblasti(1 To 16)
    
    For bMaticeGrafuRadky = 1 To MaticeGrafu(1, bVybranoUkazatelu)
        
        For bMaticeGrafuSloupce = 1 To MaticeGrafu(2, bVybranoUkazatelu)
        
            Set MaticeGrafuOblasti(bCounter) = Range(Cells(1 + 21 * (bMaticeGrafuRadky - 1), _
            1 + 11 * (bMaticeGrafuSloupce - 1)), Cells(21 * bMaticeGrafuRadky, bMaticeGrafuSloupce * 11))
            bCounter = bCounter + 1
        
        Next bMaticeGrafuSloupce
    
    Next bMaticeGrafuRadky
    
'   Tvorba graf|fffd| v|fffd|etn|fffd| tabulek a legend
    
    For bCounter = 1 To bVybranoUkazatelu
    
        With MaticeGrafuOblasti(bCounter)
            
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlMedium
                .Color = RGB(55, 96, 146)
            End With
        
        End With
        
        With MaticeGrafuOblasti(bCounter)(2, 1)
            .Value = GrafyNazvyRad(bCounter)
            .Font.Size = "10"
            .Font.Bold = True
        End With
       
        MaticeGrafuOblasti(bCounter)(3, 1).Value = formAnalytIQ.cboAUkazatel.Text
    
        With MaticeGrafuOblasti(bCounter)(4, 1)
            .Value = "in percentage points; forecast horizon (in months) on the horizontal axis"
            .Font.Italic = True
        End With
    
        If CislaRadku(bCounter) = 22 Or formAnalytIQ.cboAUkazatel.ListIndex = 2 Then
            MaticeGrafuOblasti(bCounter)(4, 1).Value = "forecast horizon (in months) on the horizontal axis"
        ElseIf CislaRadku(bCounter) = 24 Then
            MaticeGrafuOblasti(bCounter)(4, 1).Value = "in USD/barrel; forecast horizon (in months) on the horizontal axis"
        End If
        
        
        MaticeGrafuOblasti(bCounter)(19, 1).Value = "Horizon"
        MaticeGrafuOblasti(bCounter)(20, 1).Value = "Data"
        
        bVyplnitDataDo = 1
        If CislaRadku(bCounter) = 16 Or CislaRadku(bCounter) = 22 Or CislaRadku(bCounter) = 23 Or CislaRadku(bCounter) = 24 Then bVyplnitDataDo = 2
        
        bSmycka = 1
        
        For iCounterBack = 9 To bVyplnitDataDo Step -1
        
            MaticeGrafuOblasti(bCounter)(19, 1).Offset(0, bSmycka).Value = (iCounterBack - 1) * 3
            MaticeGrafuOblasti(bCounter)(20, 1).Offset(0, bSmycka).Value = Vystup(bCounter, iCounterBack)
            bSmycka = bSmycka + 1
        
        Next iCounterBack
    
        Set rGrafPopisky = Range(MaticeGrafuOblasti(bCounter)(19, 2), MaticeGrafuOblasti(bCounter)(19, 11 - bVyplnitDataDo))
        Set rGrafData = Range(MaticeGrafuOblasti(bCounter)(20, 2), MaticeGrafuOblasti(bCounter)(20, 11 - bVyplnitDataDo))
        
        rGrafData.HorizontalAlignment = xlCenter
        rGrafData.NumberFormat = "# ##0.00"
        rGrafPopisky.HorizontalAlignment = xlCenter
        
    '   Tvorba grafu
            
        ActiveSheet.Shapes.AddChart.Select
        
        Set cGraf = ActiveChart
        
        With cGraf
            .ChartType = xlColumnClustered
            .HasTitle = False
            .HasLegend = False
            .ChartArea.Format.Line.Visible = msoFalse
            .SetSourceData rGrafData
            .SeriesCollection(1).XValues = rGrafPopisky
            .SetElement msoElementPrimaryCategoryGridLinesMajor
        End With
        
        cGraf.SeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(149, 179, 215)
        
    '   U Theila zv|fffd|razn|fffd|n|fffd| 1 v grafu

        If formAnalytIQ.cboAUkazatel.ListIndex = 3 And (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MajorUnit >= 1) Then
        
            Dim rTheilZvyrazneni As Range
            Set rTheilZvyrazneni = ActiveSheet.Range(MaticeGrafuOblasti(bCounter)(21, 2), MaticeGrafuOblasti(bCounter)(21, 11 - bVyplnitDataDo))
            With rTheilZvyrazneni
                .Value = 1
                .HorizontalAlignment = xlCenter
                .NumberFormat = "# ##0.0"
                .Font.Color = RGB(255, 255, 255)
            End With
            
            cGraf.SeriesCollection.NewSeries
            With cGraf.SeriesCollection(2)
                .Values = rTheilZvyrazneni
                .Name = "Naivn|fffd| p|fffd|edpov|fffd||fffd|"
                .ChartType = xlLine
                .Format.Line.ForeColor.RGB = RGB(55, 96, 146)
                .Format.Line.Weight = 2
            End With
        
        End If
    
    '   Form|fffd|tov|fffd|n|fffd| vodorovn|fffd| osy
            
        With cGraf.Axes(xlCategory)
            .MajorTickMark = xlNone
            .TickLabelPosition = xlLow
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
        
    '   Drobn|fffd| optimalizace popisk|fffd| vodorovn|fffd| osy
    
        If bPocetDatovychBodu > 7 Then cGraf.Axes(xlCategory).TickLabelSpacing = 2
        
    '   Form|fffd|tov|fffd|n|fffd| svisl|fffd| osy
        
        With cGraf.Axes(xlValue)
            .MajorTickMark = xlNone
            With .Format.Line
                .Visible = msoTrue
                .ForeColor.RGB = RGB(0, 0, 0)
                .Style = msoLineSingle
                .Weight = 0.25
            End With
        End With
    
    '   Drobn|fffd| optimalizace m|fffd||fffd||fffd|tka na svisl|fffd| ose
    
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) >= (10 * cGraf.Axes(xlValue).MajorUnit) Then
            cGraf.Axes(xlValue).MajorUnit = cGraf.Axes(xlValue).MajorUnit * 2
        Else: End If
    
    '   Volba po|fffd|tu desetinn|fffd|ch m|fffd|st popisk|fffd| svisl|fffd| osy
    
        If cGraf.Axes(xlValue).MajorUnit >= 1 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0"
        Else
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.0"
        End If
        
        If (cGraf.Axes(xlValue).MaximumScale - cGraf.Axes(xlValue).MinimumScale) <= 0.5 Then
            cGraf.Axes(xlValue).TickLabels.NumberFormat = "# ##0.00"
        End If
        
    '   Ohrani|fffd|en|fffd| grafu
        
        With cGraf.PlotArea.Format.Line
            .Visible = msoTrue
            .ForeColor.RGB = RGB(0, 0, 0)
            .Weight = 0.25
        End With
    
    '   M|fffd||fffd|ky
        
        With cGraf.Axes(xlCategory).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
        
        With cGraf.Axes(xlValue).MajorGridlines.Format.Line
            .ForeColor.RGB = RGB(150, 150, 150)
            .Weight = 0.25
        End With
                  
    '   Nastaven|fffd| fontu a um|fffd|st|fffd|n|fffd| grafu
        
        With cGraf.ChartArea
            .AutoScaleFont = False
            .Font.Name = "Calibri"
            .Font.Size = "7"
            .Left = ((MaticeGrafuOblasti(bCounter)(5, 1).Column - 1) * MaticeGrafuOblasti(bCounter)(5, 1).Width) + 1
            .Top = MaticeGrafuOblasti(bCounter)(5, 1).Row * siVyskaRadku
        End With
    
    '   Nastaven|fffd| rozm|fffd|r|fffd| je pot|fffd|eba prov|fffd|st dvakr|fffd|t, aby si to "sedlo"
        
        For SmyckaVelikostGrafu = 1 To 2
            cGraf.Parent.Width = 221
            cGraf.Parent.Height = 146
            With cGraf.PlotArea
                .InsideWidth = 185
                .InsideLeft = 18
                .InsideHeight = 124
                .InsideTop = 4
            End With
        Next SmyckaVelikostGrafu
        
    '   Dopl|fffd|uj|fffd|c|fffd| informace

        MaticeGrafuOblasti(bCounter)(8, 6).Value = "A detailed assessment of the MoF forecasts can be found in:"
        Range(MaticeGrafuOblasti(bCounter)(8, 6), MaticeGrafuOblasti(bCounter)(10, 10)).Select
        Selection.Merge
        With Selection
            .HorizontalAlignment = xlJustify
            .VerticalAlignment = xlCenter
            .WrapText = True
        End With
        MaticeGrafuOblasti(bCounter)(11, 6).Select
        ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:= _
            "http://www.mfcr.cz/assets/en/media/Macroeconomic-Forecasts-at-the-MoF-A-Look-into-the-Rear-view-Mirror-July-2013-2013-Q3.pdf" _
            , TextToDisplay:="Macroeconomic Forecasts at the MoF - A Look into the Rear-View Mirror"
        MaticeGrafuOblasti(bCounter)(13, 6).Value = "Calculations based on the forecasts from April 2005 to January 2019."
    
    
    '   Vlo|fffd|en|fffd| odkazu na list N|fffd|stroje
            
        MaticeGrafuOblasti(bCounter).Cells(2, 9).Select
        ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
            "Tools!F1", TextToDisplay:="Jump to tools"


'   Konec smy|fffd|ky
    
    Next bCounter
 
KonecProcedury:

    formAnalytIQ.Hide
    Range("D2").Select
    With ActiveWindow
        .DisplayGridlines = False
        .Zoom = 130
        .DisplayHeadings = False
    End With
    Application.ScreenUpdating = True
    
'   |fffd|i|fffd|t|fffd|n|fffd|

    Set rGrafPopisky = Nothing
    Set rGrafData = Nothing
    Set rBunka = Nothing
    Set cGraf = Nothing
    
    Exit Sub
    
ErrHandler:
    
    MsgBox "Oops, something went wrong...", vbCritical, "AnalytIQ"
    formAnalytIQ.Hide
    Application.ScreenUpdating = True
    
End Sub

Function AFE(AFEPrvniZnamaData() As Single, AFEPredikceFT() As Single, AFEPocetObdobi As Byte)
    
    Dim AFEVystup() As Single
    ReDim AFEVystup(1 To bVybranoUkazatelu, 1 To 9)
    
    Dim AFECitatel As Single
    
    Dim bUpravaPoctuObdobi As Byte
    
    For bIndexVybranehoIndikatoru = 1 To bVybranoUkazatelu
    
        For bCounter = 1 To 9
        
            AFECitatel = 0
            
            Select Case bCounter    '   Pro predikce na roky 2005 a 2006 nejsou k dispozici horizonty nad 9, resp. 21 m|fffd|s|fffd|c|fffd|
            
                Case 1 To 4
                    bUpravaPoctuObdobi = 1
                Case 5 To 8
                    bUpravaPoctuObdobi = 2
                Case 9
                    bUpravaPoctuObdobi = 3
                
            End Select
            
            For bSmycka = bUpravaPoctuObdobi To AFEPocetObdobi
            
                AFECitatel = AFECitatel + AFEPredikceFT(bIndexVybranehoIndikatoru, bSmycka, bCounter) - AFEPrvniZnamaData(bIndexVybranehoIndikatoru, bSmycka)
            
            Next bSmycka
        
            AFEVystup(bIndexVybranehoIndikatoru, bCounter) = AFECitatel / (AFEPocetObdobi - bUpravaPoctuObdobi + 1)
            
        Next bCounter
        
    Next bIndexVybranehoIndikatoru

    AFE = AFEVystup

End Function

Function MAE(MAEPrvniZnamaData() As Single, MAEPredikceFT() As Single, MAEPocetObdobi As Byte)
    
    Dim MAEVystup() As Single
    ReDim MAEVystup(1 To bVybranoUkazatelu, 1 To 9)
    
    Dim MAECitatel As Single
    
    Dim bUpravaPoctuObdobi As Byte
    
    For bIndexVybranehoIndikatoru = 1 To bVybranoUkazatelu
    
        For bCounter = 1 To 9
        
            MAECitatel = 0
            
            Select Case bCounter    '   Pro predikce na roky 2005 a 2006 nejsou k dispozici horizonty nad 9, resp. 21 m|fffd|s|fffd|c|fffd|
            
                Case 1 To 4
                    bUpravaPoctuObdobi = 1
                Case 5 To 8
                    bUpravaPoctuObdobi = 2
                Case 9
                    bUpravaPoctuObdobi = 3
                
            End Select
            
            For bSmycka = bUpravaPoctuObdobi To MAEPocetObdobi
            
                MAECitatel = MAECitatel + Abs(MAEPredikceFT(bIndexVybranehoIndikatoru, bSmycka, bCounter) - MAEPrvniZnamaData(bIndexVybranehoIndikatoru, bSmycka))
            
            Next bSmycka
        
            MAEVystup(bIndexVybranehoIndikatoru, bCounter) = MAECitatel / (MAEPocetObdobi - bUpravaPoctuObdobi + 1)
            
        Next bCounter
        
    Next bIndexVybranehoIndikatoru

    MAE = MAEVystup

End Function

Function MSE(MSEPrvniZnamaData() As Single, MSEPredikceFT() As Single, MSEPocetObdobi As Byte)
    
    Dim MSEVystup() As Single
    ReDim MSEVystup(1 To bVybranoUkazatelu, 1 To 9)
    
    Dim MSECitatel As Single
    
    Dim bUpravaPoctuObdobi As Byte
    
    For bIndexVybranehoIndikatoru = 1 To bVybranoUkazatelu
    
        For bCounter = 1 To 9
        
            MSECitatel = 0
            
            Select Case bCounter    '   Pro predikce na roky 2005 a 2006 nejsou k dispozici horizonty nad 9, resp. 21 m|fffd|s|fffd|c|fffd|
            
                Case 1 To 4
                    bUpravaPoctuObdobi = 1
                Case 5 To 8
                    bUpravaPoctuObdobi = 2
                Case 9
                    bUpravaPoctuObdobi = 3
                
            End Select
            
            For bSmycka = bUpravaPoctuObdobi To MSEPocetObdobi
            
                MSECitatel = MSECitatel + (MSEPredikceFT(bIndexVybranehoIndikatoru, bSmycka, bCounter) - MSEPrvniZnamaData(bIndexVybranehoIndikatoru, bSmycka)) ^ 2
            
            Next bSmycka
        
            MSEVystup(bIndexVybranehoIndikatoru, bCounter) = MSECitatel / (MSEPocetObdobi - bUpravaPoctuObdobi + 1)
            
        Next bCounter
        
    Next bIndexVybranehoIndikatoru

    MSE = MSEVystup

End Function

Function Theil(TIEPrvniZnamaData() As Single, TIEPredikceFT() As Single, TIENaivniPrognoza() As Single, TIEPocetObdobi As Byte)
    
    Dim TIEVystup() As Single
    ReDim TIEVystup(1 To bVybranoUkazatelu, 1 To 9)
    
    Dim TIECitatel As Single
    Dim TIEJmenovatel As Single
    
    Dim bUpravaPoctuObdobi As Byte
    
    For bIndexVybranehoIndikatoru = 1 To bVybranoUkazatelu
    
        For bCounter = 1 To 9
        
            TIECitatel = 0
            TIEJmenovatel = 0
            
            Select Case bCounter    '   Pro predikce na roky 2005 a 2006 nejsou k dispozici horizonty nad 9, resp. 21 m|fffd|s|fffd|c|fffd|
            
                Case 1 To 4
                    bUpravaPoctuObdobi = 1
                Case 5 To 8
                    bUpravaPoctuObdobi = 2
                Case 9
                    bUpravaPoctuObdobi = 3
                
            End Select
            
            For bSmycka = bUpravaPoctuObdobi To TIEPocetObdobi
            
                TIECitatel = TIECitatel + (TIEPredikceFT(bIndexVybranehoIndikatoru, bSmycka, bCounter) - TIEPrvniZnamaData(bIndexVybranehoIndikatoru, bSmycka)) ^ 2
                TIEJmenovatel = TIEJmenovatel + (TIENaivniPrognoza(bIndexVybranehoIndikatoru, bSmycka, bCounter) - TIEPrvniZnamaData(bIndexVybranehoIndikatoru, bSmycka)) ^ 2
            
            Next bSmycka
        
            TIEVystup(bIndexVybranehoIndikatoru, bCounter) = TIECitatel / TIEJmenovatel
            
        Next bCounter
        
    Next bIndexVybranehoIndikatoru

    Theil = TIEVystup

End Function
Attribute VB_Name = "Spolecne"
Public Const bPocetListu As Byte = 59  '   Ur|fffd|uje po|fffd|et predikc|fffd| (list|fffd|); po p|fffd|id|fffd|n|fffd| dal|fffd||fffd| predikce (tj. i listu) nutno zv|fffd||fffd|it o 1
Public Const siVyskaRadku As Single = 12.75  '   V|fffd||fffd|ka |fffd||fffd|dku na nov|fffd| vytvo|fffd|en|fffd|m listu
Public Const bSirkaSloupce As Byte = 9     '   |fffd||fffd||fffd|ka sloupce na nov|fffd| vytvo|fffd|en|fffd|m listu

Public MaticeGrafu(1 To 2, 1 To 15) As Byte '   Nastav|fffd| rozm|fffd|ry matice (X graf|fffd| na v|fffd||fffd|ku, Y na |fffd||fffd||fffd|ku) pro zobrazen|fffd| v|fffd|ce graf|fffd| na jednom listu
Public MaticeGrafuOblasti() As Range    '   Prom|fffd|nn|fffd| pro nastaven|fffd| "dla|fffd|dic"
Public bMaticeGrafuRadky As Byte
Public bMaticeGrafuSloupce As Byte
    
Public bCounter As Byte     '   Prom|fffd|nn|fffd| na po|fffd||fffd|t|fffd|n|fffd| cykl|fffd| smy|fffd|ek
Public sVychoziText As String   '   Defaultn|fffd| text rozbalovac|fffd|ch seznam|fffd| ve formul|fffd||fffd||fffd|ch
Public PrvekFormulare As Control
Public bVybranoUkazatelu As Byte    '   Po|fffd|et vybran|fffd|ch ukazatel|fffd| (za|fffd|krtnut|fffd|ch pol|fffd||fffd|ek ve formul|fffd||fffd|i)

Public cGraf As Chart

Function Predikce(bIndexListu As Byte)

    bDelkaRetezce = Len(Worksheets(bIndexListu).Cells(3, 2))
    bPoziceOddelovace = WorksheetFunction.Search(",", Worksheets(bIndexListu).Cells(3, 2))
    Predikce = Right(Worksheets(bIndexListu).Cells(3, 2), bDelkaRetezce - bPoziceOddelovace - 1)
    
End Function

Sub NastavMaticiGrafu()

    For bCounter = 1 To 2
        MaticeGrafu(1, bCounter) = 1
    Next bCounter
    
    For bCounter = 3 To 6
        MaticeGrafu(1, bCounter) = 2
    Next bCounter
    
    For bCounter = 7 To 12
        MaticeGrafu(1, bCounter) = 3
    Next bCounter
    
    For bCounter = 13 To 15
        MaticeGrafu(1, bCounter) = 4
    Next bCounter
    
    MaticeGrafu(2, 1) = 1
    
    For bCounter = 2 To 4
        MaticeGrafu(2, bCounter) = 2
    Next bCounter
    
    For bCounter = 5 To 9
        MaticeGrafu(2, bCounter) = 3
    Next bCounter
    
    For bCounter = 10 To 15
        MaticeGrafu(2, bCounter) = 4
    Next bCounter

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

    formOpenInfo.Show
    
    If ActiveSheet.Index <> 59 Then Worksheets(59).Select

End Sub
Attribute VB_Name = "formAnalytIQ"
Attribute VB_Base = "0{7B213CAA-894A-4A85-92A8-E58C64285CFC}{FECFCAF9-6203-45F8-83B9-1456B0181D1F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdCancel_Click()
    formAnalytIQ.Hide
End Sub

Sub cmdOK_Click()
    
    If formAnalytIQ.cboAUkazatel.Value = sVychoziText Or formAnalytIQ.cboAUkazatel.Value = vbNullString Then
        MsgBox "No analytical indicator selected.", vbExclamation, "AnalytIQ"
        Exit Sub
    Else: End If
    
    bVybranoUkazatelu = 0
    
    For Each PrvekFormulare In formAnalytIQ.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                bVybranoUkazatelu = bVybranoUkazatelu + 1
            End If
        End If
    Next PrvekFormulare
    
    If bVybranoUkazatelu = 0 Then
        MsgBox "No macroeconomic indicator selected.", vbExclamation, "AnalytIQ"
        Exit Sub
    Else: End If
    
    Call AnalytIQRun

End Sub

Private Sub chbAll_Click()

    If chbAll.Value = True Then
        For Each PrvekFormulare In formAnalytIQ.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = True
            End If
        Next PrvekFormulare
    Else
        For Each PrvekFormulare In formAnalytIQ.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = False
            End If
        Next PrvekFormulare
    End If
  
End Sub
Attribute VB_Name = "formGrafIQ"
Attribute VB_Base = "0{F1CB631A-BCF4-41E9-A71D-A63E12BAC391}{8C1D045A-C3A8-4148-A0BD-87DC6E6AEF37}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdCancel_Click()
    
    formGrafIQ.Hide

End Sub

Sub cmdOK_Click()
    
    If formGrafIQ.cboPredikce.Value = sVychoziText Or formGrafIQ.cboPredikce.Value = vbNullString Then
        MsgBox "No forecast selected.", vbExclamation, "GraphIQ"
        Exit Sub
    Else: End If
    
    bVybranoUkazatelu = 0
    
    For Each PrvekFormulare In formGrafIQ.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                bVybranoUkazatelu = bVybranoUkazatelu + 1
            End If
        End If
    Next PrvekFormulare
    
    If bVybranoUkazatelu = 0 Then
        MsgBox "No macroeconomic indicator selected.", vbExclamation, "GraphIQ"
        Exit Sub
    Else: End If
    
    Call GrafIQRun

End Sub

Private Sub chbAll_Click()

    If chbAll.Value = True Then
        For Each PrvekFormulare In formGrafIQ.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = True
            End If
        Next PrvekFormulare
    Else
        For Each PrvekFormulare In formGrafIQ.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = False
            End If
        Next PrvekFormulare
    End If
  
End Sub


Attribute VB_Name = "formK2"
Attribute VB_Base = "0{E5342FD4-86D6-49F2-925B-417C83D604F6}{1C662FCA-373C-4856-A53C-38BB43A7E336}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdOK_Click()
        
    If formK2.cboPredikce1.Value = sVychoziText Or formK2.cboPredikce1.Value = vbNullString Then
        MsgBox "The 1st forecast not selected.", vbExclamation, "K2"
        Exit Sub
    End If
    
    If formK2.cboPredikce2.Value = sVychoziText Or formK2.cboPredikce2.Value = vbNullString Then
        MsgBox "The 2nd forecast not selected.", vbExclamation, "K2"
        Exit Sub
    End If
    
    bVybranoUkazatelu = 0
    
    For Each PrvekFormulare In formK2.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                bVybranoUkazatelu = bVybranoUkazatelu + 1
            End If
        End If
    Next PrvekFormulare
    
    If bVybranoUkazatelu = 0 Then
        MsgBox "No macroeconomic indicator selected.", vbExclamation, "K2"
        Exit Sub
    Else: End If
    
    Call K2Run
   
End Sub

Private Sub cmdCancel_Click()
    
    formK2.Hide

End Sub

Private Sub chbAll_Click()

    If chbAll.Value = True Then
        For Each PrvekFormulare In formK2.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = True
            End If
        Next PrvekFormulare
    Else
        For Each PrvekFormulare In formK2.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = False
            End If
        Next PrvekFormulare
    End If

End Sub
Attribute VB_Name = "formKomparator"
Attribute VB_Base = "0{46159713-A897-47F4-B45A-31FE08C393CD}{1B457378-6B70-4FA7-BF43-4BAD941C3E97}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdZrusit_Click()

    formKomparator.Hide
    
End Sub

Private Sub cmdOK_Click()
    
    If formKomparator.cboRok.Value = sVychoziText Or formKomparator.cboRok.Value = vbNullString Then
        MsgBox "No year selected.", vbExclamation, "Komparator"
        Exit Sub
    Else: End If
    
    bVybranoUkazatelu = 0
    
    For Each PrvekFormulare In formKomparator.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                bVybranoUkazatelu = bVybranoUkazatelu + 1
            End If
        End If
    Next PrvekFormulare
    
    If bVybranoUkazatelu = 0 Then
        MsgBox "No macroeconomic indicator selected.", vbExclamation, "Komparator"
        Exit Sub
    Else: End If
    
    Call KomparatorRun

   
End Sub

Private Sub chbAll_Click()

    If chbAll.Value = True Then
        For Each PrvekFormulare In formKomparator.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = True
            End If
        Next PrvekFormulare
    Else
        For Each PrvekFormulare In formKomparator.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = False
            End If
        Next PrvekFormulare
    End If
  
End Sub

Attribute VB_Name = "formOpenInfo"
Attribute VB_Base = "0{5FE0BB5A-F39E-447D-9C83-83842BB632B6}{7B7770A0-79D2-4D85-AD81-DCB9C04FF89F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdOK_Click()

    formOpenInfo.Hide

End Sub
Attribute VB_Name = "formRevizor"
Attribute VB_Base = "0{EA72FA32-2533-44C8-A68D-147E0FC62528}{4699F90F-D16F-42EA-A42F-9ADCC0B46637}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdOK_Click()

    If formRevizor.cboRok.Value = sVychoziText Or formRevizor.cboRok.Value = vbNullString Then
        MsgBox "No year selected.", vbExclamation, "Revisions"
        Exit Sub
    Else: End If
    
    bVybranoUkazatelu = 0
    
    For Each PrvekFormulare In formRevizor.Controls
        If TypeOf PrvekFormulare Is MSForms.CheckBox Then
            If PrvekFormulare.Value = True And PrvekFormulare.Name <> "chbAll" Then
                bVybranoUkazatelu = bVybranoUkazatelu + 1
            End If
        End If
    Next PrvekFormulare
    
    If bVybranoUkazatelu = 0 Then
        MsgBox "No macroeconomic indicator selected.", vbExclamation, "Revisions"
        Exit Sub
    Else: End If
    
    Call RevizorRun

End Sub

Private Sub cmdZrusit_Click()

    formRevizor.Hide

End Sub

Private Sub chbAll_Click()

    If chbAll.Value = True Then
        For Each PrvekFormulare In formRevizor.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = True
            End If
        Next PrvekFormulare
    Else
        For Each PrvekFormulare In formRevizor.Controls
            If TypeOf PrvekFormulare Is MSForms.CheckBox Then
                PrvekFormulare.Value = False
            End If
        Next PrvekFormulare
    End If
  
End Sub

' InQuest injected base64 decoded content
' ~'"z{UzX

INQUEST-PP=macro
