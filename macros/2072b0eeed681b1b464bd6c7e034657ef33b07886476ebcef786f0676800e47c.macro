Attribute VB_Name = "Calculator_Macs"
Option Explicit
'Calculator Developed By Randy Austin
'www.ExcelForFreelancers.com

Sub ShowCalculatorIcon()
With Sheet1.Shapes("CalculatorIcon")
    .Left = ActiveCell.Left
    .Top = ActiveCell.Top
    .IncrementLeft 1
    .IncrementTop 1
    .Visible = msoCTrue
End With
End Sub

Sub ShowCalculator()
With Sheet1.Shapes("Calculator")
    .Left = ActiveCell.Left
    .Top = ActiveCell.Offset(1, 0).Top
    .IncrementTop -4
    .Visible = msoCTrue
End With
'CalcHideShowSettings
End Sub
Sub HideCalculator()
Sheet1.Shapes("Calculator").Visible = msoFalse
Sheet1.Range("B10").ClearContents
End Sub
Sub CalcClear()
Sheet1.Range("B10,B11").ClearContents
End Sub
Sub CalcDeleteLastEntry()
On Error Resume Next
Sheet1.Range("B10").Value = Left(Sheet1.Range("B10").Value, Len(Sheet1.Range("B10").Value) - 1)
End Sub
Sub CalcDivide()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "/"
End Sub
Sub CalcMultiply()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "*"
End Sub
Sub CalcSubtract()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "-"
End Sub
Sub CalcAdd()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "+"
End Sub
Sub CalcMinus()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "-"
End Sub
Sub CalcBtn1()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 1
End Sub
Sub CalcBtn2()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 2
End Sub
Sub CalcBtn3()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 3
End Sub
Sub CalcBtn4()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 4
End Sub
Sub CalcBtn5()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 5
End Sub
Sub CalcBtn6()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 6
End Sub
Sub CalcBtn7()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 7
End Sub
Sub CalcBtn8()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 8
End Sub
Sub CalcBtn9()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 9
End Sub
Sub CalcBtn0()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & 0
End Sub
Sub CalcEquals()
On Error GoTo InvalidFormula
Sheet1.Range("B11").Value = "=" & Sheet1.Range("B10").Value
Sheet1.Calculate
Sheet1.Range("B10").Value = Sheet1.Range("B11").Value
Exit Sub
InvalidFormula:
Sheet1.Range("B10").Value = "Invalid Formula!"
End Sub
Sub CalcDecimal()
Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "."
End Sub
Sub CalcAddToSelCell()
ActiveCell.Value = Sheet1.Range("B10").Value
HideCalculator
End Sub
Sub CalcIncreaseDecimal()
If InStr(Sheet1.Range("B10").Value, ".") <> 0 Then
    Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & "0"
Else:
    Sheet1.Range("B10").Value = Sheet1.Range("B10").Value & ".0"
End If
End Sub
Sub CalcDecreaseDecimal()
If InStr(Sheet1.Range("B10").Value, ".") <> 0 Then
Sheet1.Range("B10").Value = Left(Sheet1.Range("B10").Value, Len(Sheet1.Range("B10").Value) - 1)
End If
End Sub

Sub CalcTheme1()
Sheet1.Shapes("Theme1").PickUp
Sheet1.Shapes("CalcBack").Apply
Sheet1.Shapes("SettingsBack").Apply
End Sub
Sub CalcTheme2()
Sheet1.Shapes("Theme2").PickUp
Sheet1.Shapes("CalcBack").Apply
Sheet1.Shapes("SettingsBack").Apply
End Sub
Sub CalcTheme3()
Sheet1.Shapes("Theme3").PickUp
Sheet1.Shapes("CalcBack").Apply
Sheet1.Shapes("SettingsBack").Apply
End Sub
Sub CalcTheme4()
Sheet1.Shapes("Theme4").PickUp
Sheet1.Shapes("CalcBack").Apply
Sheet1.Shapes("SettingsBack").Apply
End Sub
Sub CalcTheme5()
Sheet1.Shapes("Theme5").PickUp
Sheet1.Shapes("CalcBack").Apply
Sheet1.Shapes("SettingsBack").Apply
End Sub
Sub CalcTheme6()
Sheet1.Shapes("Theme6").PickUp
Sheet1.Shapes("CalcBack").Apply
Sheet1.Shapes("SettingsBack").Apply
End Sub

Sub CalcHideShowSettings()
If Sheet1.Shapes("SettingsBack").Visible = True Then
ActiveSheet.Shapes.Range(Array("SettingsBack", "DecreaseDec", "IncreaseDec", "Theme1", "Theme2", "Theme3", "Theme4", "Theme5", "Theme6")).Visible = False
Else:
ActiveSheet.Shapes.Range(Array("SettingsBack", "DecreaseDec", "IncreaseDec", "Theme1", "Theme2", "Theme3", "Theme4", "Theme5", "Theme6")).Visible = True
End If
End Sub

Attribute VB_Name = "CodeReset_Macs"
Option Explicit

Sub ResetCalc()
    With Application
        .EnableEvents = True
        .Calculation = xlCalculationAutomatic
          .ScreenUpdating = True
    End With
End Sub

Sub StopCalc()
    With Application
        .EnableEvents = False
        .Calculation = xlCalculationManual
        .ScreenUpdating = False
    End With

End Sub
    
Attribute VB_Name = "Compnd_Macros"
Option Explicit

Sub CompoundEntry_Open()
Dim TransRow As Long
Dim LastTransRow As Long
Dim LastFiltRow As Long
Dim LastResultRow As Long
Dim CIRows As Long

With Sheet1
If .Range("B2").Value = Empty Then Exit Sub 'Exit on no row
TransRow = .Range("B2").Value

'Check if new or existing Compound Entry
If .Range("C" & TransRow).Value <> Empty Then 'Existing Compound Trans
                Sheet3.Range("P3,P4").Value = .Range("C" & TransRow).Value 'Add in Transaction #
                Sheet3.Range("U3,U4").Value = "CI"
                Sheet3.Range("V3:AF9999").ClearContents 'Clear Previous results
                LastTransRow = Sheet3.Range("D99999").End(xlUp).Row
                If LastTransRow < 5 Then Exit Sub
                Sheet3.Range("D4:N" & LastTransRow).AdvancedFilter xlFilterCopy, CriteriaRange:=Sheet3.Range("P2:U4"), CopyToRange:=Sheet3.Range("V2:AG2"), Unique:=False
                LastResultRow = Sheet3.Range("V9999").End(xlUp).Row 'Last Filtered Results Row
                If LastResultRow < 3 Then Exit Sub
                CIRows = LastResultRow - 2 'Determine the # of Compound Entry Rows
                .Range(TransRow + 2 & ":" & TransRow + 2 + CIRows + (CIRows Mod 2)).EntireRow.Insert 'Add CI Rows Plus One Extra if # of Rows are Odd
                'Copy & Paste Compound Rows from Range Template
                .Range("CompoundRange").Copy .Range("D" & TransRow + 2 & ":K" & TransRow + 2 + CIRows + (CIRows Mod 2))
                If .Range("G" & TransRow).Value <> Empty Then 'Add In Compound Credit Items
                    .Range("E" & TransRow + 2 & ":H" & TransRow + 1 + CIRows).Value = Sheet3.Range("AC3:AF" & LastResultRow).Value 'Credit Items
                Else: 'Add in Compound Debit Items
                    .Range("E" & TransRow + 2 & ":H" & TransRow + 1 + CIRows).Value = Sheet3.Range("X3:AA" & LastResultRow).Value 'Debit Items
                End If
                .Range("L" & TransRow + 2 & ":L" & TransRow + 1 + CIRows).Value = Sheet3.Range("AG3:AG" & LastResultRow).Value 'Add In Row #'s
                    
Else: 'New Compound Entry Transaction
            Sheet3.Range("P3,P4,U3,U4").ClearContents 'Clear any Previous Criteria
            .Range(TransRow + 2 & ":" & TransRow + 3).EntireRow.Insert
            'Copy & Paste Compound Rows from Range Template
            .Range("CompoundRange").Copy .Range("D" & TransRow + 2 & ":K" & TransRow + 3)
                'Set Default Amounts (Credit or Debit)
                If .Range("G" & TransRow).Value <> Empty Then 'Debit entry
                    .Range("H" & TransRow + 1).ClearContents
                    .Range("H" & TransRow + 2).Value = .Range("G" & TransRow).Value  'Set Default Credit Amount
                Else ' Credit Entry
                    .Range("G" & TransRow).ClearContents
                    .Range("G" & TransRow + 2).Value = .Range("H" & TransRow + 1).Value  'Set Default Debit Amount
                End If
End If

.Range("E" & TransRow + 2).Select
.Shapes("CompoundBtn").Visible = msoFalse
ShowSaveBtn
End With
End Sub
Sub ShowCompEntryBtn()
Dim TransRow As Long
TransRow = Sheet1.Range("B2").Value
Sheet1.Shapes("HideCmpndBtn").Visible = msoFalse
With Sheet1.Shapes("CompoundBtn")
    .Left = Sheet1.Range("E" & TransRow + 1).Left
    .Top = Sheet1.Range("E" & TransRow + 1).Top
    .IncrementLeft -14
    .Visible = msoCTrue
End With
End Sub

Sub HideCmpndBtn()
Dim TransRow As Long
TransRow = Sheet1.Range("B2").Value
Sheet1.Shapes("CompoundBtn").Visible = msoFalse
With Sheet1.Shapes("HideCmpndBtn")
    .Left = Sheet1.Range("E" & TransRow + 1).Left
    .Top = Sheet1.Range("E" & TransRow + 1).Top
    .IncrementLeft -14
    .Visible = msoCTrue
End With
End Sub
Sub CompoundEntry_Close()
Dim TransRow As Long
Dim CIRows As Long
Dim FoundC As Range
Dim FoundBlank As Range
With Sheet1
    If .Range("B2").Value = Empty Then Exit Sub 'Exit on no row
    TransRow = .Range("B2").Value

    Set FoundBlank = .Range("K" & TransRow + 2 & ":K99999").Find("", , xlValues, xlWhole, xlByRows, xlNext):
    If Not FoundBlank Is Nothing Then CIRows = FoundBlank.Row - TransRow - 2
    .Shapes("HideCmpndBtn").Visible = msoFalse
    With .Shapes("CompoundBtn")
        .Left = Sheet1.Range("E" & TransRow + 1).Left
        .Top = Sheet1.Range("E" & TransRow + 1).Top
        .IncrementLeft -14
        .Visible = msoCTrue
    End With
.Range(TransRow + 2 & ":" & TransRow + 2 + CIRows - 1).EntireRow.Delete
End With
End Sub
Sub CompoundEntry_AddRows()
Dim CIRow As Long
With Sheet1
    CIRow = .Range("N3").Value 'Current Compound Item Row
    .Range(CIRow + 1 & ":" & CIRow + 2).EntireRow.Insert
    .Range(CIRow + 1 & ":" & CIRow + 2).Clear
    .Range("CompoundRange").Copy
    .Range("D" & CIRow + 1 & ":K" & CIRow + 1).PasteSpecial xlPasteAll
    .Range("D" & CIRow + 2 & ":K" & CIRow + 2).PasteSpecial xlPasteAll
    Application.CutCopyMode = False
    .Range("E" & CIRow).Select
End With
End Sub
Attribute VB_Name = "PopUp_Calendar"
Dim SelCell As Range
Dim DayName As String
Sub ShowSettings()
'Show or Hide Calendar Settings Panel
If ActiveSheet.Shapes.Range(Array("Settings")).Visible = True Then
    ActiveSheet.Shapes.Range(Array("Settings", "CalCol1", "CalCol2", "CalCol3", "CalCol4", "CalCol5", "CalCol6", "CalCol7", "CalCol8", "CalCol9")).Visible = False
  Else:
    ActiveSheet.Shapes.Range(Array("Settings", "CalCol1", "CalCol2", "CalCol3", "CalCol4", "CalCol5", "CalCol6", "CalCol7", "CalCol8", "CalCol9")).Visible = True
End If
End Sub
Sub CalendarHide()
Dim DayNum As Long
'Hide Calendar, Reset Day Colors
On Error GoTo NoCal
ActiveSheet.Shapes("Calendar").Visible = msoFalse
Sheets("CalPopUp").Range("A7").Value = ""
If Sheets("CalPopUp").Range("A20").Value <> Empty Then
For DayNum = 1 To 42
DayName = DayNum & "Day"
 With ActiveSheet.Shapes(DayName)
        .Fill.ForeColor.RGB = RGB(255, 255, 255)
        .TextFrame2.TextRange.Font.Bold = msoFalse
End With
Next DayNum
End If
Exit Sub
NoCal: 'If calendar has been removed by accident, paste in backup calendar from  CalPopUp Sheet
End Sub

Sub CalendarShow()
With ActiveSheet
    On Error GoTo ExitSub
    Set SelCell = Selection
    On Error GoTo 0
    'Check if active cell is a valid date
    If IsDate(SelCell.Value) = True Then
        Sheets("CalPopUp").Range("A1").Value = SelCell.Value
        Else: 'If No Date or incorrect Date user current date
        Sheets("CalPopUp").Range("A1").Value = "=Today()"
    End If
        Sheets("CalPopUp").Range("A3").Value = Month(Sheets("CalPopUp").Range("A1").Value) 'Set Month
        Sheets("CalPopUp").Range("A2").Value = Year(Sheets("CalPopUp").Range("A1").Value) 'Set Year
        DayName = Sheets("CalPopUp").Range("A20").Value & "Day"
        UnGroupCal
         If InStr(.Shapes("NextTri").OnAction, "!") <> 0 Or InStr(.Shapes("1Day").DrawingObject.Formula, "]") <> 0 Then   'Run Workbook Link Remover and Cell Link Replacement
            MacroLinkRemover
            CalFormulaReplacement
         End If
        GroupCal
        On Error GoTo NoCal
        With ActiveSheet.Shapes(DayName)
        .Fill.ForeColor.RGB = RGB(252, 213, 180)
        .TextFrame2.TextRange.Font.Bold = msoTrue
        End With
       On Error GoTo NoCal
    .Shapes("Calendar").Visible = msoCTrue
    .Shapes.Range(Array("Settings", "CalCol1", "CalCol2", "CalCol3", "CalCol4", "CalCol5", "CalCol6", "CalCol7", "CalCol8", "CalCol9")).Visible = False '
    .Shapes("Calendar").Left = SelCell.Left
    If SelCell.Row < 5 And ActiveWindow.ScrollRow > 6 Then .Shapes("Calendar").Top = SelCell.Offset(ActiveWindow.ScrollRow - 4, 0).Top Else: .Shapes("Calendar").Top = SelCell.Offset(1, 0).Top
        If Sheets("CalPopUp").Range("A6").Value > 0 Then
            .Shapes.Range(Array("36Day", "37Day", "38Day", "39Day", "40Day", "41Day", "42Day")).Visible = True
            Else:
            .Shapes.Range(Array("36Day", "37Day", "38Day", "39Day", "40Day", "41Day", "42Day")).Visible = False
        End If
    Sheets("CalPopUp").Range("A7").Value = SelCell.Address
     ActiveCell.Select
End With
Exit Sub
NoCal:
MsgBox "The Pop-up Calendar does not exist on this worksheet. Please copy the calendar over from another sheet and paste into this sheet"
ExitSub:
End Sub
Sub PrevMonth()
'Previous Month Button
If Sheets("CalPopUp").Range("A20").Value <> Empty Then
DayName = Sheets("CalPopUp").Range("A20").Value & "Day"
    With ActiveSheet.Shapes(DayName)
            .Fill.ForeColor.RGB = RGB(255, 255, 255)
            .TextFrame2.TextRange.Font.Bold = msoFalse
    End With
End If
With Sheets("CalPopUp")
If .Range("A3").Value = 1 Then
    .Range("A3").Value = 12
    .Range("A2").Value = .Range("A2").Value - 1
Else:
    .Range("A3").Value = .Range("A3").Value - 1
End If
 If .Range("A6").Value > 0 Then
    ActiveSheet.Shapes.Range(Array("36Day", "37Day", "38Day", "39Day", "40Day", "41Day", "42Day")).Visible = True
    Else:
    ActiveSheet.Shapes.Range(Array("36Day", "37Day", "38Day", "39Day", "40Day", "41Day", "42Day")).Visible = False
End If
End With
End Sub
Sub NextMonth()
'Next Month button
If Sheets("CalPopUp").Range("A20").Value <> Empty Then
DayName = Sheets("CalPopUp").Range("A20").Value & "Day"
    With ActiveSheet.Shapes(DayName)
            .Fill.ForeColor.RGB = RGB(255, 255, 255)
            .TextFrame2.TextRange.Font.Bold = msoFalse
    End With
End If
With Sheets("CalPopUp")
If .Range("A3").Value = 12 Then
    .Range("A3").Value = 1
    .Range("A2").Value = .Range("A2").Value + 1
Else:
    .Range("A3").Value = .Range("A3").Value + 1
End If
If .Range("A6").Value > 0 Then
    ActiveSheet.Shapes.Range(Array("36Day", "37Day", "38Day", "39Day", "40Day", "41Day", "42Day")).Visible = True
    Else:
    ActiveSheet.Shapes.Range(Array("36Day", "37Day", "38Day", "39Day", "40Day", "41Day", "42Day")).Visible = False
End If
End With
End Sub

''''''''''''''''''''''''''''''''''''''
'''''Individual Day Selection Buttons
''''''''''''''''''''''''''''''''''''''

Sub DayBtn1()
With Sheets("CalPopUp")
If .Range("B1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("B1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn2()
With Sheets("CalPopUp")
If .Range("C1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("C1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn3()
With Sheets("CalPopUp")
If .Range("D1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("D1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn4()
With Sheets("CalPopUp")
If .Range("E1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("E1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn5()
With Sheets("CalPopUp")
If .Range("F1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("F1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn6()
With Sheets("CalPopUp")
If .Range("G1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("G1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn7()
With Sheets("CalPopUp")
If .Range("H1").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("H1").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn8()
With Sheets("CalPopUp")
If .Range("B2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("B2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn9()
With Sheets("CalPopUp")
If .Range("C2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("C2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn10()
With Sheets("CalPopUp")
If .Range("D2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("D2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn11()
With Sheets("CalPopUp")
If .Range("E2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("E2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn12()
With Sheets("CalPopUp")
If .Range("F2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("F2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn13()
With Sheets("CalPopUp")
If .Range("G2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("G2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn14()
With Sheets("CalPopUp")
If .Range("H2").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("H2").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn15()
With Sheets("CalPopUp")
If .Range("B3").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("B3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn16()
With Sheets("CalPopUp")
If .Range("C3").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("C3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn17()
With Sheets("CalPopUp")
If .Range("D3").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("D3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn18()
With Sheets("CalPopUp")
If .Range("E3").Value <> Empty And .Range("A7").Value <> Empty Then
   ActiveSheet.Range(.Range("A7").Value).Value = .Range("E3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn19()
With Sheets("CalPopUp")
If .Range("F3").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("F3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn20()
With Sheets("CalPopUp")
If .Range("G3").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("G3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn21()
With Sheets("CalPopUp")
If .Range("H3").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("H3").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn22()
With Sheets("CalPopUp")
If .Range("B4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("B4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn23()
With Sheets("CalPopUp")
If .Range("C4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("C4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn24()
With Sheets("CalPopUp")
If .Range("D4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("D4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn25()
With Sheets("CalPopUp")
If .Range("E4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("E4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn26()
With Sheets("CalPopUp")
If .Range("F4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("F4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn27()
With Sheets("CalPopUp")
If .Range("G4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("G4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn28()
With Sheets("CalPopUp")
If .Range("H4").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("H4").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn29()
With Sheets("CalPopUp")
If .Range("B5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("B5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn30()
With Sheets("CalPopUp")
If .Range("C5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("C5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn31()
With Sheets("CalPopUp")
If .Range("D5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("D5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn32()
With Sheets("CalPopUp")
If .Range("E5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("E5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn33()
With Sheets("CalPopUp")
If .Range("F5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("F5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn34()
With Sheets("CalPopUp")
If .Range("G5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("G5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn35()
With Sheets("CalPopUp")
If .Range("H5").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("H5").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn36()
With Sheets("CalPopUp")
If .Range("B6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("B6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn37()
With Sheets("CalPopUp")
If .Range("C6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("C6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn38()
With Sheets("CalPopUp")
If .Range("D6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("D6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn39()
With Sheets("CalPopUp")
If .Range("E6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("E6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn40()
With Sheets("CalPopUp")
If .Range("F6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("F6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn41()
With Sheets("CalPopUp")
If .Range("G6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("G6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub
Sub DayBtn42()
With Sheets("CalPopUp")
If .Range("H6").Value <> Empty And .Range("A7").Value <> Empty Then
    ActiveSheet.Range(.Range("A7").Value).Value = .Range("H6").Value
End If
ActiveSheet.Shapes("Calendar").Visible = msoFalse
ActiveCell.Offset(0, 1).Select
End With
End Sub

'''''''''''''''''Color Calendar Background''''''''''''''''''''''
Sub CalCol1()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(234, 234, 234)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol2()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(197, 190, 151)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol3()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(141, 180, 227)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol4()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(184, 204, 228)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol5()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(230, 185, 184)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol6()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(215, 228, 188)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol7()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(204, 192, 218)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol8()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(182, 221, 232)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub
Sub CalCol9()
With ActiveSheet.Shapes.Range(Array("CalBack", "Settings")).Select
    With Selection.ShapeRange.Fill
    .ForeColor.RGB = RGB(252, 213, 180)
    End With
    ActiveSheet.Range(Sheets("CalPopUp").Range("A7").Value).Select
End With
End Sub

'Create Calendar Sheet on First Run of Calendar
Sub CreateCalSht()
Dim ColCnt, RowCnt, DayCnt, CalCol As Long
Dim ws, ActSht As Worksheet
Set ActSht = ActiveSheet
'On Error GoTo NoCal
ActiveSheet.Shapes("Calendar").Copy
Set ws = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
ws.Name = "CalPopUp"
ActSht.Activate

'Reassign Shape Links & Macros
With ActiveSheet
UnGroupCal
    '.Unprotect
    .Shapes("NextRec").OnAction = "'" & ActiveWorkbook.Name & "'!NextMonth"
    .Shapes("NextTri").OnAction = "'" & ActiveWorkbook.Name & "'!NextMonth"
    .Shapes("PrevRec").OnAction = "'" & ActiveWorkbook.Name & "'!PrevMonth"
    .Shapes("PrevTri").OnAction = "'" & ActiveWorkbook.Name & "'!PrevMonth"
    .Shapes("SetBtn").OnAction = "'" & ActiveWorkbook.Name & "'!ShowSettings"
    .Shapes("MonthYear").DrawingObject.Formula = "=CalPopUp!A5"
    DayCnt = 1
    For RowCnt = 1 To 6
        For ColCnt = 2 To 8
                .Shapes(DayCnt & "Day").DrawingObject.Formula = "=CalPopUp!" & .Cells(RowCnt, ColCnt).Address 'Assigned Linked Cell
                .Shapes(DayCnt & "Day").OnAction = "'" & ActiveWorkbook.Name & "'!DayBtn" & DayCnt 'Assign Macro
                DayCnt = DayCnt + 1
        Next ColCnt
    Next RowCnt
    
    'Assign Color Macros
    For CalCol = 1 To 9
     .Shapes("CalCol" & CalCol).OnAction = "'" & ActiveWorkbook.Name & "'!CalCol" & CalCol
    Next CalCol
End With

With Sheets("CalPopUp")
    .Paste
        .Visible = xlSheetHidden
    
    'Add in Formulas and Details
        .Range("A4").Value = "=INDEX(CalMonths,A3,)"
        .Range("A5").Value = "=A4&" & Chr(34) & " " & Chr(34) & "&CalYear"
        .Range("A6").Value = "=SUM(B6:H6)"
        .Range("A8").Value = "January"
        .Range("A8").AutoFill Destination:=.Range("A8:A19"), Type:=xlFillDefault
        .Range("A20").Value = "=IFERROR(INDIRECT(ADDRESS(SUMPRODUCT((B1:H6=A1)*ROW(B1:H6))+6,SUMPRODUCT((B1:H6=A1)*COLUMN(B1:H6)),1,1))," & Chr(34) & Chr(34) & ")"
    'Set Defined Names
    ActiveWorkbook.Names.Add Name:="CalMonths", RefersTo:="=CalPopUp!$A$8:$A$19"
    ActiveWorkbook.Names.Add Name:="CalYear", RefersTo:="=CalPopUp!$A$2"
    
    'Add in Calendar Formulas
        .Range("B1").Value = "=IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=1,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & ")"
        .Range("C1").Value = "=IF(B1<>" & Chr(34) & Chr(34) & ",B1+1,IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=2,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & "))"
        .Range("D1").Value = "=IF(C1<>" & Chr(34) & Chr(34) & ",C1+1,IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=3,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & "))"
        .Range("E1").Value = "=IF(D1<>" & Chr(34) & Chr(34) & ",D1+1,IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=4,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & "))"
        .Range("F1").Value = "=IF(E1<>" & Chr(34) & Chr(34) & ",E1+1,IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=5,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & "))"
        .Range("G1").Value = "=IF(F1<>" & Chr(34) & Chr(34) & ",F1+1,IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=6,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & "))"
        .Range("H1").Value = "=IF(G1<>" & Chr(34) & Chr(34) & ",G1+1,IF(WEEKDAY(DATE(CalYear,MATCH($A$4,CalMonths,0),1))=7,DATE(CalYear,MATCH($A$4,CalMonths,0),1)," & Chr(34) & Chr(34) & "))"
        .Range("B2").Value = "=H1+1"
        .Range("C2").Value = "=B2+1"
        .Range("C2").AutoFill Destination:=.Range("C2:H2"), Type:=xlFillDefault
        .Range("B2:H2").AutoFill Destination:=.Range("B2:H4"), Type:=xlFillDefault
        .Range("B5").Value = "=IF(OR(H4=" & Chr(34) & Chr(34) & ",MONTH(H4+1)<>$A$3)," & Chr(34) & Chr(34) & ",H4+1)"
        .Range("C5").Value = "=IFERROR(IF(MONTH(B5+1)<>$A$3," & Chr(34) & Chr(34) & ",B5+1)," & Chr(34) & Chr(34) & ")"
        .Range("B6").Value = "=IFERROR(IF(OR(H5=" & Chr(34) & Chr(34) & ",MONTH(H5+1)<>$A$3)," & Chr(34) & Chr(34) & ",H5+1)," & Chr(34) & Chr(34) & ")"
        .Range("C6").Value = "=IFERROR(F(MONTH(I5+1)<>$A$3," & Chr(34) & Chr(34) & ",I5+1)," & Chr(34) & Chr(34) & ")"
        .Range("C5:C6").AutoFill Destination:=.Range("C5:H6"), Type:=xlFillDefault
        
        'Set format to Single Day
        .Range("B1:H6").NumberFormat = "d"
        
        'Add in relative Day #'s
        .Range("B7").Value = "1"
        .Range("C7").Value = "2"
        .Range("B8").Value = "8"
        .Range("C8").Value = "9"
        .Range("B7:C8").AutoFill Destination:=.Range("B7:H8"), Type:=xlFillDefault
        .Range("B7:H8").AutoFill Destination:=.Range("B7:H12"), Type:=xlFillDefault
    GroupCal
End With
Exit Sub
NoCal:
MsgBox "The Pop-up Calendar does not exist on this worksheet. Please copy the calendar over from another sheet and paste into this sheet"
End Sub

Sub CheckForSheet()
'Checks for existance of Calendar Pop-up Worksheet
Dim ws As Worksheet
On Error GoTo CreateWS
Set ws = ActiveWorkbook.Sheets("CalPopUp")
Exit Sub
CreateWS:
CreateCalSht
End Sub

Sub MacroLinkRemover()
'PURPOSE: Remove an external workbook reference from all shapes triggering macros
'Source: www.ExcelForFreelancers.com
Dim Shp As Shape
Dim MacroLink, NewLink As String
Dim SplitLink As Variant

  For Each Shp In ActiveSheet.Shapes 'Loop through each shape in worksheet
  
    'Grab current macro link (if available)
    On Error GoTo NextShp
      MacroLink = Shp.OnAction
    
    'Determine if shape was linking to a macro
      If MacroLink <> "" And InStr(MacroLink, "!") <> 0 Then
        'Split Macro Link at the exclaimation mark (store in Array)
          SplitLink = Split(MacroLink, "!")
        
        'Pull text occurring after exclaimation mark
          NewLink = SplitLink(1)
        
        'Remove any straggling apostrophes from workbook name
            If Right(NewLink, 1) = "'" Then
              NewLink = Left(NewLink, Len(NewLink) - 1)
            End If
        
        'Apply New Link
          Shp.OnAction = NewLink
      End If
NextShp:
  Next Shp
End Sub
Sub CalFormulaReplacement()
With ActiveSheet
Dim DayNum, ColNum, RowNum As Long
Dim Shp As Shape
ColNum = 2
RowNum = 1
For DayNum = 1 To 42
 .Shapes(DayNum & "Day").DrawingObject.Formula = "=CalPopUp!" & .Cells(RowNum, ColNum).Address
 ColNum = ColNum + 1
 If ColNum = 9 Then
    ColNum = 2
    RowNum = RowNum + 1
 End If
 Next DayNum
 .Shapes("MonthYear").DrawingObject.Formula = "=CalPopUp!$A$5"
End With
End Sub

Sub UnGroupCal()
On Error Resume Next
ActiveSheet.Shapes("Calendar").Ungroup
ActiveSheet.Shapes("NextMonth").Ungroup
ActiveSheet.Shapes("PrevMonth").Ungroup
On Error GoTo 0
End Sub
Sub GroupCal()
ActiveSheet.Shapes.Range(Array("NextTri", "NextRec")).Group.Select
Selection.ShapeRange.Name = "NextMonth"
ActiveSheet.Shapes.Range(Array("PrevTri", "PrevRec")).Group.Select
Selection.ShapeRange.Name = "PrevMonth"
    ActiveSheet.Shapes.Range(Array("Settings", "40Day", "41Day", "39Day", "38Day" _
        , "42Day", "37Day", "36Day", "CalBack", "MonthYear", "CalBorder", "1Day", _
        "3Day", "14Day", "7Day", "4Day", "2Day", "5Day", "8Day", "10Day", "6Day", _
        "13Day", "11Day", "9Day", "12Day", "15Day", "17Day", "20Day", "21Day", "18Day" _
        , "16Day", "19Day", "22Day", "24Day", "26Day", "27Day", "25Day", "23Day", _
        "28Day", "29Day", "31Day", "34Day", "35Day", "32Day", "30Day", "33Day", "Sa", _
        "Fr", "Th", "We", "Tu", "Mo", "Su", "SetBtn", "CalCol1", "CalCol2", "CalCol3", _
        "CalCol4", "CalCol5", "CalCol6", "CalCol7", "CalCol8", "CalCol9", "PrevMonth", _
        "NextMonth")).Visible = msoCTrue
        ActiveSheet.Shapes.Range(Array("Settings", "40Day", "41Day", "39Day", "38Day" _
        , "42Day", "37Day", "36Day", "CalBack", "MonthYear", "CalBorder", "1Day", _
        "3Day", "14Day", "7Day", "4Day", "2Day", "5Day", "8Day", "10Day", "6Day", _
        "13Day", "11Day", "9Day", "12Day", "15Day", "17Day", "20Day", "21Day", "18Day" _
        , "16Day", "19Day", "22Day", "24Day", "26Day", "27Day", "25Day", "23Day", _
        "28Day", "29Day", "31Day", "34Day", "35Day", "32Day", "30Day", "33Day", "Sa", _
        "Fr", "Th", "We", "Tu", "Mo", "Su", "SetBtn", "CalCol1", "CalCol2", "CalCol3", _
        "CalCol4", "CalCol5", "CalCol6", "CalCol7", "CalCol8", "CalCol9", "PrevMonth", _
        "NextMonth")).Select
    Selection.ShapeRange.Group.Select
    Selection.ShapeRange.Name = "Calendar"
    Selection.Name = "Calendar"
    Selection.Placement = xlMove
    ActiveSheet.Shapes("Calendar").Placement = 2
End Sub







Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
If Target.CountLarge > 1 Then Exit Sub
If Not Intersect(Target, Range("D8:H999")) Is Nothing And Range("B1").Value = False Then
    If Target.Value <> "[Compound Entry]" Then ShowSaveBtn
End If
'On Change to Compound Transaction, open Up for Compound Transaction
If Not Intersect(Target, Range("E9:E338")) Is Nothing And Range("E" & Target.Row).Value = "[Compound Entry]" And Target.Row Mod 2 = 1 And Range("B1").Value = False Then CompoundEntry_Open

If Not Intersect(Target, Range("E4,G4,H4")) Is Nothing Then LoadTransactions

'Automate Amounts on Compound Items
If Not Intersect(Target, Range("G8:H99999")) Is Nothing And Range("K" & Target.Row).Value = "CI" And Range("N4").Value = False Then
            'Locate Original Debit/Credit Amount
            Dim FoundCompEntry As Range
            Dim FoundLastCompItem As Range
            Dim DebitAmt As Double
            Dim CreditAmt As Double
            Dim CompTotal As Double
            Dim ItemBalAmt As Double
            Dim CompEntryCol As Long
            Dim LastCIEntryRow As Long
            Dim TransRow As Long
        Range("N4").Value = True 'Set CI Change to True
        TransRow = Range("B2").Value
        
        'On Change of Credit Compound Item
        If Not Intersect(Target, Range("H8:H99999")) Is Nothing And Target.Value <> Empty Then
            DebitAmt = Range("G" & TransRow).Value 'Debit Amount
            ItemBalAmt = DebitAmt - Application.WorksheetFunction.Sum(Range("H" & TransRow + 2 & ":H" & Target.Row))
            If ItemBalAmt <> 0 Then Range("H" & Target.Row + 1).Value = ItemBalAmt
        End If
        
        'On Change of Debit Compound Item
        If Not Intersect(Target, Range("G8:G99999")) Is Nothing And Target.Value <> Empty Then
            CreditAmt = Range("H" & TransRow).Value 'Credit Amount
            ItemBalAmt = CreditAmt - Application.WorksheetFunction.Sum(Range("G" & TransRow + 2 & ":G" & Target.Row))
            If ItemBalAmt <> 0 Then Range("G" & Target.Row + 1).Value = ItemBalAmt
        End If
        
        Range("N4").Value = False 'Set CI Change Back to False
End If

'On Change of current Compound Item Row, add another one below if it does not exist and the value is not empty
On Error GoTo Invalidvalue
If Not Intersect(Target, Range("E8:H99999")) Is Nothing And Range("K" & Target.Row).Value = "CI" And Range("K" & Target.Row + 1).Value <> "CI" And Target.Value <> Empty Then
    'Add CI Row Below if none exist
    Range("N3").Value = Target.Row
    CompoundEntry_AddRows 'Run Macro to add a row
Invalidvalue:
End If
End Sub

Private Sub Worksheet_Deactivate()
Dim Cal As Shape
On Error Resume Next
Set Cal = Shapes("Calendar")
On Error GoTo 0
If Cal Is Nothing Then 'Shape Deleted
    Application.EnableEvents = False
    On Error Resume Next
    Application.Undo
    On Error GoTo 0
    Application.EnableEvents = True
End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim Cal As Shape
    On Error Resume Next
    Set Cal = Shapes("Calendar")
    On Error GoTo 0
    If Cal Is Nothing Then 'Shape Deleted
        Application.EnableEvents = False
         On Error Resume Next
        Application.Undo
        On Error GoTo 0
        Application.EnableEvents = True
    End If



'Popup Calculator Icon
If Not Intersect(Target, Range("G8:H999")) Is Nothing And Target.NumberFormat = "$#,##0.00_);($#,##0.00)" Then
    ShowCalculatorIcon
    Else:
    Shapes("CalculatorIcon").Visible = msoFalse
    HideCalculator
End If

    
    
    
    
    
 If Not Intersect(Target, Range("D8:J9999")) Is Nothing Then
         If Range("K" & Target.Row).Value <> "CI" Then
           If Target.Row Mod 2 = 0 Then Range("B2").Value = Target.Row Else Range("B2").Value = Target.Row - 1
           If Range("D" & Range("B2").Value).Value <> Empty Then Range("B6").Value = False 'Set New Trans To False
        Else: 'Compound Item Row Selected
            Dim FoundTransRow As Range
            Set FoundTransRow = Range("K" & Target.Row & ":K8").Find("", , xlValues, xlWhole, xlByRows, xlPrevious)
            If FoundTransRow Is Nothing Then Exit Sub
            Range("B2").Value = FoundTransRow.Row - 1
            
            Range("N3").Value = Target.Row
        End If
Else:
    Shapes("SaveBtn").Visible = msoFalse
End If

If Target.CountLarge > 1 Then Exit Sub
    If Not Intersect(Target, Range("G4,H4,D8:D99999")) Is Nothing And Range("K" & Target.Row).Value <> "CI" Then 'Change this to any cell (or cells) you would like to have the Pop-Up Calendar Appear
        If Target.Row Mod 2 = 1 Then Exit Sub
        CheckForSheet
        CalendarShow
     Else:
        CheckForSheet
        CalendarHide
    End If

'Display Compound Entry Icon On Account Selection (Odd rows Only)
If Not Intersect(Target, Range("E9:E99999")) Is Nothing And Target.Row Mod 2 = 1 And Range("K" & Target.Row + 1).Value <> "CI" Then ShowCompEntryBtn Else: Shapes("CompoundBtn").Visible = msoFalse

'Display Hide Compound Entry Icon On Account Selection when Compound Items are Open
If Not Intersect(Target, Range("E9:E9999")) Is Nothing And Range("K" & Target.Row).Value = "CI" Or Range("K" & Target.Row + 1).Value = "CI" Then HideCmpndBtn Else: Shapes("HideCmpndBtn").Visible = msoFalse
End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Trans_Macros"
Option Explicit

Sub ShowSaveBtn()
With Sheet1
    Dim SelRow As Long
    If .Range("B2").Value = Empty Then Exit Sub
    SelRow = .Range("B2").Value
    With .Shapes("SaveBtn")
        .Left = Sheet1.Range("J" & SelRow).Left
        .Top = Sheet1.Range("J" & SelRow).Top
        .IncrementLeft 3
       .IncrementTop 2
        .Visible = msoCTrue
    End With
End With
End Sub


Sub LoadTransactions()
Dim LastResultsRow As Long
Dim ResultsRow As Long
Dim TransRow As Long
Dim LastCIRow As Long
Dim LastTransDataRow As Long
Sheet1.Range("B1").Value = True 'Set Load To True
StopCalc
LastCIRow = Sheet1.Range("K99999").End(xlUp).Row
'Delete All Compound Entry Item Rows
If LastCIRow > 8 Then
    For TransRow = LastCIRow To 8 Step -1 'Delete in Reverse Order
        If Sheet1.Range("K" & TransRow).Value = "CI" Then Sheet1.Range(TransRow & ":" & TransRow).EntireRow.Delete
    Next TransRow
End If
Sheet1.Range("C8:H99999,K8:L999999").ClearContents
With Sheet3 'Transaction Sheet
    .Range("P3,P4,U3,U4,V3:AF999999").ClearContents 'Clear Results
    .Range("U3,U4").Value = "="
    LastTransDataRow = .Range("E999999").End(xlUp).Row
    If LastTransDataRow < 5 Then GoTo NoData
    .Range("D4:N" & LastTransDataRow).AdvancedFilter xlFilterCopy, CriteriaRange:=.Range("Q2:U4"), CopyToRange:=.Range("V2:AF2"), Unique:=False
    LastResultsRow = .Range("W999999").End(xlUp).Row
    'Sort List Based on Date
    .Sort.SortFields.Clear
    .Sort.SortFields.Add Key:=.Range("W3"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With .Sort
            .SetRange Range("V3:AF" & LastResultsRow)
            .Apply
    End With
    TransRow = 8
    For ResultsRow = 3 To LastResultsRow Step 2
        Sheet1.Range("C" & TransRow & ":H" & TransRow).Value = .Range("V" & ResultsRow & ":AA" & ResultsRow).Value
        Sheet1.Range("D" & TransRow + 1 & ":H" & TransRow + 1).Value = .Range("AB" & ResultsRow + 1 & ":AF" & ResultsRow + 1).Value
        TransRow = TransRow + 2
    Next ResultsRow
NoData:
    Sheet1.Range("B1").Value = False 'Set Load To False
    ResetCalc
End With
End Sub
Attribute VB_Name = "Trans_SaveMacs"
Option Explicit

Sub Trans_Save()
Dim LastTransRow As Long
Dim SelRow As Long
Dim AddCol As Long
Dim TransRow As Long
Dim TransNumb As Long
Dim CompItemRows As Long
Dim CompItemRow
Dim DebitAmt As Double
Dim CreditAmt As Double
Dim DebitAcct As String
Dim CreditAcct As String
Dim CompEntry As Boolean

With Sheet1
SelRow = .Range("B2").Value 'Selected Transaction Row

 'Determine Compound Entry or not
If .Range("E" & SelRow + 1).Value <> "[Compound Entry]" Then 'Simple Journal Entry
    CompEntry = False
Else: 'Compound Journal Entry
    CompEntry = True
     'Open Compound Transaction (if not open) to check for proper balance
    If .Range("K" & SelRow + 2).Value <> "CI" Then CompoundEntry_Open
    If .Range("G" & SelRow).Value <> "" Then AddCol = 1 Else: AddCol = 0 'SetAdd Column for Compound Entries
    CompItemRows = .Range("K" & SelRow + 2 & ":K99999").Find("", , xlValues, xlWhole, xlByRows, xlNext).Row - SelRow - 2 'Number Of Compound Item Rows
    If CompItemRows < 1 Then Exit Sub
End If

'Check for balancing Transaction
If CompEntry = False Then 'Simple Journal Entry
            If .Range("G" & SelRow).Value <> .Range("H" & SelRow + 1).Value Or .Range("G" & SelRow + 1).Value <> .Range("H" & SelRow).Value Then
                MsgBox "Please make sure your entry is in balance. Debits must equal Credits"
                Exit Sub
            End If
Else: 'Compound Entry

        If .Range("G" & SelRow).Value <> Empty Then 'Debit Entry (Compound Credit)
            DebitAmt = .Range("G" & SelRow).Value
            CreditAmt = Application.WorksheetFunction.Sum(.Range("H" & SelRow + 2 & ":H" & SelRow + 1 + CompItemRows))
        Else: 'Credit Entry (Compound Debit)
            CreditAmt = .Range("H" & SelRow + 1).Value  ''Determine Debit or Credit Base Transaction
            DebitAmt = Application.WorksheetFunction.Sum(.Range("G" & SelRow + 1 & ":G" & SelRow + 1 + CompItemRows))
        End If
    
        If DebitAmt <> CreditAmt Then
            MsgBox "Please make sure your Compound Journal Entry is in balance." & vbCrLf & "Debits must equal Credits"
            Exit Sub
        End If
End If

'Check for accounts
If CompEntry = False Then 'Simple Journal Entry
        If .Range("E" & SelRow).Value = Empty Or .Range("E" & SelRow + 1).Value = Empty Then
            MsgBox "Both From & To Accounts are Required"
            Exit Sub
        End If
Else: 'Compound Entry
        
        'Run Loop To Check for Accounts & Amounts for each Compound Item
        For CompItemRow = SelRow + 2 To SelRow + CompItemRows + 1
            If .Cells(CompItemRow, 7 + AddCol).Value <> Empty And .Range("E" & CompItemRow).Value = Empty Then
                MsgBox "Please make sure every Compound Item Contains an Account"
                End
            End If
        Next CompItemRow
End If

'Check for Date
If .Range("D" & SelRow).Value = Empty Then
    MsgBox "Please enter a valid date"
    Exit Sub
End If

'New or existing Transaction?
If .Range("B4").Value = Empty Then 'New Transaction
        TransRow = Sheet3.Range("D999999").End(xlUp).Row + 1
        TransNumb = .Range("B7").Value 'New Transaction #
Else: 'Existing Transaction
    TransRow = .Range("B4").Value 'Existing Transaction Row
    TransNumb = .Range("B3").Value 'Existing Transaction #
End If


Sheet3.Range("D" & TransRow, "D" & TransRow + 1).Value = TransNumb 'Transaction Number
Sheet3.Range("E" & TransRow, "E" & TransRow + 1).Value = .Range("D" & SelRow).Value 'Transaction Date
Sheet3.Range("F" & TransRow, "F" & TransRow + 1).Value = .Range("D" & SelRow + 1).Value 'Transaction Type
Sheet3.Range("G" & TransRow, "G" & TransRow + 1).Value = .Range("F" & SelRow).Value 'Name/Vendor
Sheet3.Range("M" & TransRow, "M" & TransRow + 1).Value = .Range("F" & SelRow + 1).Value 'Memo

If .Range("G" & SelRow).Value <> "" Then
    Sheet3.Range("H" & TransRow, "H" & TransRow + 1).Value = .Range("E" & SelRow).Value 'Debit Account
    Sheet3.Range("I" & TransRow, "I" & TransRow + 1).Value = .Range("E" & SelRow + 1).Value 'Credit Account
Else:
    Sheet3.Range("H" & TransRow, "H" & TransRow + 1).Value = .Range("E" & SelRow + 1).Value 'Credit Account
    Sheet3.Range("I" & TransRow, "I" & TransRow + 1).Value = .Range("E" & SelRow).Value 'Debit Account
End If



If .Range("G" & SelRow).Value <> "" Then
    Sheet3.Range("J" & TransRow).Value = .Range("G" & SelRow).Value 'Debit Amount
    Sheet3.Range("K" & TransRow + 1).Value = .Range("H" & SelRow + 1).Value 'Credit Amount
    Sheet3.Range("J" & TransRow + 1).ClearContents 'Clear Other Two Fields
    Sheet3.Range("K" & TransRow).ClearContents 'Clear Other Two Fields
Else:
    Sheet3.Range("J" & TransRow + 1).Value = .Range("G" & SelRow + 1).Value 'Debit Amount
    Sheet3.Range("K" & TransRow).Value = .Range("H" & SelRow).Value 'CreditAmount
    Sheet3.Range("J" & TransRow).ClearContents 'Clear Other Two Fields
    Sheet3.Range("K" & TransRow + 1).ClearContents 'Clear Other Two Fields
End If

'Add in Compound Entry items New/existing
If CompEntry = True Then
        'Run Loop To Add or Update Items
        For CompItemRow = SelRow + 2 To SelRow + CompItemRows + 1
            If .Range("G" & CompItemRow).Value = "" And .Range("H" & CompItemRow).Value = Empty Then GoTo NextRow
                    'Determine Debit & Credit Accounts
                    If .Range("G" & SelRow).Value <> Empty Then
                        DebitAcct = .Range("E" & SelRow).Value 'Debit Account Name
                        CreditAcct = .Range("E" & CompItemRow).Value 'Compound Item Credit Account Name
                    Else:
                        CreditAcct = .Range("E" & SelRow + 1).Value 'Debit Account Name
                        DebitAcct = .Range("E" & CompItemRow).Value 'Compound Item Debit Account Name
                    End If
                    
                     If .Range("L" & CompItemRow).Value <> Empty Then TransRow = .Range("L" & CompItemRow).Value Else: TransRow = Sheet3.Range("D999999").End(xlUp).Row + 1 'Use Existing Or Add new Row
                    Sheet3.Range("D" & TransRow).Value = TransNumb 'Transaction Number
                    Sheet3.Range("E" & TransRow).Value = .Range("D" & SelRow).Value 'Transaction Date
                    Sheet3.Range("F" & TransRow).Value = .Range("D" & SelRow + 1).Value 'Transaction Type
                    Sheet3.Range("G" & TransRow).Value = .Range("F" & SelRow).Value 'Name/Vendor
                    Sheet3.Range("H" & TransRow).Value = DebitAcct 'Debit Account Name
                    Sheet3.Range("I" & TransRow).Value = CreditAcct 'Credit Account Name
                    Sheet3.Cells(TransRow, 10 + AddCol).Value = .Cells(CompItemRow, 7 + AddCol).Value 'Add In Debit/ Credit Amount
                    Sheet3.Range("L" & TransRow).Value = "CI" 'Compound Item Notation
                    Sheet3.Range("M" & TransRow).Value = .Range("F" & CompItemRow).Value   'Add in Compound Item Memo
                    Sheet3.Range("N" & TransRow).Value = "=Row()" 'Add in Row formula
                    .Range("L" & CompItemRow).Value = TransRow  'Add In Transaction Row for Future updates.
NextRow:
        Next CompItemRow
End If


.Range("C" & SelRow).Value = TransNumb
.Shapes("SaveBtn").Visible = msoFalse 'Hide save button
.Range("B5").Value = SelRow
Application.Wait Now + TimeValue("00:00:02")
.Range("B5").ClearContents
End With 'End With Sheet 1

With Sheet3
'Resort list
    LastTransRow = .Range("D99999").End(xlUp).Row
    'Sort List Based on Date
    .Sort.SortFields.Clear
    .Sort.SortFields.Add Key:=.Range("E5"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With .Sort
            .SetRange Range("D5:M" & LastTransRow)
            .Apply
End With
ResetCalc
End With
End Sub


INQUEST-PP=macro
