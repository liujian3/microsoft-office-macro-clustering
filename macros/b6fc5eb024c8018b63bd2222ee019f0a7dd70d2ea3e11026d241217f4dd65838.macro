Attribute VB_Name = "NewMacros"
'>>MSP20101119----------------------------------------------
    
Dim send_mail2p_cnt As Integer
Dim send_mail4p_cnt As Integer
Dim send_mail5p_cnt As Integer
Dim FOOTER_OPEN_cnt As Integer
Dim FOOTER_CLOSE_cnt As Integer
Dim HEADER_OPEN_cnt As Integer
Dim HEADER_CLOSE_cnt As Integer
Dim TABULATOR_cnt As Integer
Dim FORMAT_UEBERSCHRIFT_cnt As Integer
Dim FORMAT1_cnt As Integer
Dim FORMAT2_cnt As Integer
Dim Ende_cnt As Integer
Dim FORMAT3_cnt As Integer
Dim FORMAT4_cnt As Integer
Dim GEHEZU2_cnt As Integer
Dim GEHEZU1_cnt As Integer
Dim SENDEN_AN_cnt As Integer

Const TagFett As String = "<H>"
Const TagFettB As String = "<B>"
Const TagFett1 As String = "<H1>"
Const TagFettQ As String = "<Q>"
'Const TagFett2 As String = "<H2>"
'Const TagFettS As String = "<Q>"
Const TagBgGray As String = "<BGGRAY>"
Const TagTxtGray As String = "<TXTGRAY>"
Const TagUnderline As String = "<U>"
Const TagEnde As String = "</>"
Const TabulatorStr As String = ",,"


Const TagFettEsc As String = "<-H->"
Const TagFettBEsc As String = "<-B->"
Const TagFett1Esc As String = "<-H1->"
Const TagFettQEsc As String = "<-Q->"
'Const TagFett2 As String = "<H2>"
'Const TagFettS As String = "<Q>"
Const TagBgGrayEsc As String = "<-BGGRAY->"
Const TagTxtGrayEsc As String = "<-TXTGRAY->"
Const TagUnderlineEsc As String = "<-U->"
Const TagEndeEsc As String = "<-/->"


Sub FORMAT_ALL()
' MAKE_BOLD Makro
'
'
    ' Alle Tabulatoren setzten (replace ",," mit TAB)
    TABULATOR_ALL
    
    ' Fett Formatierungen umsetzten
    'CONVERT_TAGS TagFett999, TagEnde, False
    'CONVERT_TAGS TagFett2, TagEnde, False
    CONVERT_TAGS TagFett1, TagEnde, False
    CONVERT_TAGS TagFett, TagEnde, False
    CONVERT_TAGS TagFettB, TagEnde, False
    CONVERT_TAGS TagFettQ, TagEnde, False
    
    ' Grauer Hintergrund
    CONVERT_TAGS TagBgGray, TagEnde, False
    
    ' Grauer Text
    CONVERT_TAGS TagTxtGray, TagEnde, False
    
    ' Text Unterstreichen
    CONVERT_TAGS TagUnderline, TagEnde, False
    
    ' BEG INS MJA Replace escaped Tags
    ' CONVERT_ITF_TO_ASCII removes char formating, i.e. <H>Bold Text</>
    ' so we need to escape them on SAP side before converting to ASCII text ...
    CONVERT_TAGS TagFett1Esc, TagEndeEsc, False
    CONVERT_TAGS TagFettEsc, TagEndeEsc, False
    CONVERT_TAGS TagFettBEsc, TagEndeEsc, False
    CONVERT_TAGS TagFettQEsc, TagEndeEsc, False
    
    ' Grauer Hintergrund
    CONVERT_TAGS TagBgGrayEsc, TagEndeEsc, False
    
    ' Grauer Text
    CONVERT_TAGS TagTxtGrayEsc, TagEndeEsc, False
    
    ' Text Unterstreichen
    CONVERT_TAGS TagUnderlineEsc, TagEndeEsc, False
    ' END INS MJA
    
    
    ' Anschliessend alle Tags entfernen
    'REPLACE_ALL TagFett, ""
    'REPLACE_ALL TagFett1, ""
    'REPLACE_ALL TagFett2, ""
    'REPLACE_ALL TagFett999, ""
    'REPLACE_ALL TagBgGray, ""
    'REPLACE_ALL TagTxtGray, ""
    'REPLACE_ALL TagUnderline, ""
    'REPLACE_ALL TagEnde, ""
   
End Sub


Function CONVERT_TAGS(strStart As String, strEnd As String, Optional bInclude As Boolean = False)
'
' CONVERT_TAGS - (Original from from http://www.chf-online.de/vba/vbafindreplace2.htm#Index)
' Sucht nach Texten zwischen Start-Tag und End-Tag und setzt diese in die jeweilige Formatierung um
' L|fffd|sst die Tags anschliessend stehen. Diese werden im Nachgang mit einem anderem Makro entfernt!


Dim rng As Range
Dim rngText As Range
' Range festlegen
Set rng = ActiveDocument.Range
' Range festlegen
Set rngText = ActiveDocument.Range(0, 0)
rngText.Collapse wdCollapseStart
' Such-Schleife
With rng.Find
 .Format = False
 .Text = strStart
 ' Suche nach Start-Tag
 .Execute
 Do While .Found = True
   ' Fundstelle mit Start-Tag anlegen
   rngText.SetRange rng.Start, rng.End
   ' Suchtextbereich reduzieren
   rng.SetRange rng.End, ActiveDocument.Range.End
   ' Suche nach End-Tag
   .Execute FindText:=strEnd, Forward:=True

   ' Nochmal suchen wenn neues Ende kleiner als altes Suchende
   If rngText.End > rng.End Then
     .Execute FindText:=strEnd, Forward:=True
     If rngText.End > rng.End Then Exit Function
   End If

   ' Abbruch wenn kein End-Tag
   If .Found = False Then Exit Function
   ' Fundstelle bis End-Tag erweitern
   rngText.SetRange rngText.Start, rng.End
   
   'If bInclude = False Then
    ' ohne Tags
    'rngText.SetRange rngText.Start + Len(strStart), rngText.End - Len(strEnd)
   'End If
   
   rngText.Select
   
   rngText.Text = Replace(rngText.Text, strStart, "", 1, 1)
   rngText.Text = Replace(rngText.Text, strEnd, "", 1, 1)
   
   
   ' Beispiel: einf|fffd|rben
   '  rngText.Font.Color = wdColorAqua
   
    'If strStart = TagFett Or strStart = TagFett1 Or strStart = TagFett2 Or strStart = TagFett999 Then
    If strStart = TagFett Or strStart = TagFettB Or strStart = TagFett1 Or strStart = TagFettQ Or strStart = TagFettEsc Or strStart = TagFettBEsc Or strStart = TagFett1Esc Or strStart = TagFettQEsc Then
      ' Fett machen (Ersetzt FORMAT2)
      rngText.Font.Bold = True
      
    ElseIf strStart = TagBgGray Or strStart = TagBgGrayEsc Then
    ' Hintergrund Grau machen (Ersetzt FORMAT1)
      rngText.Font.Size = 12
      rngText.HighlightColorIndex = wdGray25
      rngText.Font.Color = wdColorAutomatic
      rngText.Font.Bold = wdToggle
      
    ElseIf strStart = TagTxtGray Or strStart = TagTxtGrayEsc Then
    ' TExt Grau machen (Ersetzt FORMAT3)
      rngText.Font.Color = wdColorGray50
      
    ElseIf strStart = TagUnderline Or strStart = TagUnderlineEsc Then
    ' Unterstreichen oder nicht (Ersetzt FORMAT4)
      If rngText.Font.Underline = wdUnderlineNone Then
          rngText.Font.Underline = wdUnderlineSingle
      Else
          rngText.Font.Underline = wdUnderlineNone
      End If
    
    End If
      
   ' Suchtextbereich zur Endposition reduzieren
   rng.Collapse wdCollapseEnd
   ' Start-Tag suchen
   .Execute FindText:=strStart, Forward:=True
 Loop
 rng.Collapse wdCollapseEnd
End With
End Function


Sub TABULATOR_ALL()
' TABULATOR_ALL Makro
' Sucht nach ",," und ersetzt diese mit Tabs!
' Kleines Makro - gro|fffd|e Wirkung
'
 
    REPLACE_ALL TabulatorStr, vbTab
    
End Sub


Sub REPLACE_ALL(strSeekFor As String, strReplaceWith As String)
' REPLACE_ALL Makro
' Sucht nach einem String und ersetzt diese mit einem anderen!
'
  
    With ActiveDocument.Content.Find
        .ClearFormatting
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        .Replacement.ClearFormatting
        .Execute Forward:=True, Replace:=wdReplaceAll, _
                    FindText:=strSeekFor, ReplaceWith:=strReplaceWith

    End With
    
End Sub


Sub send_mail5p(ByVal Empfaenger As String, Anhang As String, Betreff As String, Mailtext As String, Cc As String)
'
' send_mail5p Makro
'
'
        send_mail5p_cnt = send_mail5p_cnt + 1
        Dim o As Outlook.Application
        Dim e As MailItem

        ActiveDocument.SaveAs Environ("TEMP") & "\" & Anhang

        Set o = CreateObject("Outlook.Application")
        Set e = o.CreateItem(olMailItem)
        With e
            .To = Empfaenger            '   eMail-Empf|fffd|nger
            .Cc = Cc                    '   eMail-Cc
            If Len(Betreff) > 0 Then
                .Subject = Betreff
            Else
                .Subject = Anhang       '   Dokumentname
            End If
            If Len(Mailtext) > 0 Then
                .Body = Mailtext
            End If
            .Attachments.Add Environ("Temp") & "\" & Anhang, _
               olByValue, , _
               Anhang
            .Display
        End With

End Sub

'<<MSP20101119----------------------------------------------

Sub send_mail2p(ByVal param1 As String, param2 As String)
'
' send_mail2p Makro
' Makro erstellt am 10.05.2005 von mSpringer
'
'    MsgBox (param1)
'    MsgBox (param2)
'    Dim antwort As Integer
    
'    antwort = MsgBox("eMail versenden?", vbYesNo, "eMail-Best|fffd|tigung")
    
'    If antwort = vbYes Then
    
        Dim o As Outlook.Application
        Dim e As MailItem

        ActiveDocument.SaveAs Environ("TEMP") & "\" & param2

        Set o = CreateObject("Outlook.Application")
        Set e = o.CreateItem(olMailItem)
        With e
            .To = param1            '   eMail-Empf|fffd|nger
            .Subject = param2       '   Dokumentname
            .Attachments.Add Environ("Temp") & "\" & param2, _
               olByValue, , _
               param2
            .Display
        End With

'        o.Quit
'        Set o = Nothing
'    End If


End Sub
Sub send_mail4p(ByVal Empfaenger As String, Anhang As String, Betreff As String, Mailtext As String)
'
' send_mail4p Makro
' Makro erstellt am 10.05.2005 von mSpringer
'
        Dim o As Outlook.Application
        Dim e As MailItem

        ActiveDocument.SaveAs Environ("TEMP") & "\" & Anhang

        Set o = CreateObject("Outlook.Application")
        Set e = o.CreateItem(olMailItem)
        With e
            .To = Empfaenger            '   eMail-Empf|fffd|nger
            If Len(Betreff) > 0 Then
                .Subject = Betreff
            Else
                .Subject = Anhang       '   Dokumentname
            End If
            If Len(Mailtext) > 0 Then
                .Body = Mailtext
            End If
            .Attachments.Add Environ("Temp") & "\" & Anhang, _
               olByValue, , _
               Anhang
            .Display
        End With

End Sub


Sub FOOTER_OPEN()
Attribute FOOTER_OPEN.VB_Description = "Makro aufgezeichnet am 06.02.2007 von mSpringer"
Attribute FOOTER_OPEN.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.FOOTER_OPEN"
'
' FOOTER_OPEN Makro
' Makro aufgezeichnet am 06.02.2007 von mSpringer
'
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
        ActivePane.View.Type = wdOutlineView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    If Selection.HeaderFooter.IsHeader = True Then
        ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
    Else
        ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    End If
End Sub
Sub FOOTER_CLOSE()
Attribute FOOTER_CLOSE.VB_Description = "Makro aufgezeichnet am 06.02.2007 von mSpringer"
Attribute FOOTER_CLOSE.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.FOOTER_CLOSE"
'
' FOOTER_CLOSE Makro
' Makro aufgezeichnet am 06.02.2007 von mSpringer
'
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
Sub HEADER_OPEN()
Attribute HEADER_OPEN.VB_Description = "Makro aufgezeichnet am 07.02.2007 von mSpringer"
Attribute HEADER_OPEN.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.HEADER_OPEN"
'
' HEADER_OPEN Makro
' Makro aufgezeichnet am 07.02.2007 von mSpringer
'
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
        ActivePane.View.Type = wdOutlineView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
End Sub
Sub HEADER_CLOSE()
Attribute HEADER_CLOSE.VB_Description = "Makro aufgezeichnet am 07.02.2007 von mSpringer"
Attribute HEADER_CLOSE.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.HEADER_CLOSE"
'
' HEADER_CLOSE Makro
' Makro aufgezeichnet am 07.02.2007 von mSpringer
'
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
Sub TABULATOR()
Attribute TABULATOR.VB_Description = "Makro aufgezeichnet am 16.02.2007 von mSpringer"
Attribute TABULATOR.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.TABULATOR"
'
' TABULATOR Makro
' Makro aufgezeichnet am 16.02.2007 von mSpringer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    With Selection.Find
        .Text = ",,"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.Delete unit:=wdCharacter, Count:=1
    Selection.TypeText Text:=vbTab
End Sub
Sub FORMAT_UEBERSCHRIFT()
Attribute FORMAT_UEBERSCHRIFT.VB_Description = "Makro aufgezeichnet am 20.02.2007 von mSpringer"
Attribute FORMAT_UEBERSCHRIFT.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.FORMAT_UEBERSCHRIFT"
'
' FORMAT_UEBERSCHRIFT Makro
' Makro aufgezeichnet am 20.02.2007 von mSpringer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "#"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.Delete unit:=wdCharacter, Count:=1
    Selection.MoveRight unit:=wdCharacter, Count:=26, Extend:=wdExtend
    Selection.Range.HighlightColorIndex = wdGray25
    Selection.Font.Color = wdColorWhite
    Selection.Font.Size = 12
    Selection.Font.Bold = wdToggle
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
End Sub
Sub FORMAT1(ByVal param1 As String)
Attribute FORMAT1.VB_Description = "Makro aufgezeichnet am 25.02.2007 von mSpringer"
Attribute FORMAT1.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.FORMAT1"
'
' FORMAT1 Makro
' Makro aufgezeichnet am 25.02.2007 von mSpringer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = param1
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.Font.Size = 12
    Selection.Range.HighlightColorIndex = wdGray25
    'Selection.Font.Color = wdColorWhite
    Selection.Font.Color = wdColorAutomatic
    Selection.Font.Bold = wdToggle
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
End Sub


Sub FORMAT2(ByVal param1 As String)
'
' FORMAT2 Makro
' Makro aufgezeichnet am 12.03.2007 von mSpringer
'
    Selection.MoveDown unit:=wdLine, Count:=6
    Selection.MoveUp unit:=wdLine, Count:=1
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = param1
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.Font.Bold = wdToggle
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.MoveRight unit:=wdCharacter, Count:=1
End Sub
Sub Ende()
'
' Ende Makro
' Makro aufgezeichnet am 12.03.2007 von mSpringer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.MoveRight unit:=wdCharacter, Count:=1
End Sub


Sub FORMAT3(ByVal param1 As String)
'
' FORMAT3 Makro
' Makro aufgezeichnet am 27.04.2007 von mSpringer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    With Selection.Find
        .Text = param1
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.Font.Color = wdColorGray50
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
End Sub
Sub FORMAT4(ByVal param1 As String)
'
' FORMAT4 Makro
' Makro aufgezeichnet am 27.04.2007 von mSpringer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    With Selection.Find
        .Text = param1
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    If Selection.Font.Underline = wdUnderlineNone Then
        Selection.Font.Underline = wdUnderlineSingle
    Else
        Selection.Font.Underline = wdUnderlineNone
    End If
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
End Sub

Sub GEHEZU2()
'
' GEHEZU2 Makro
' Makro aufgezeichnet am 30.04.2007 von mSpringer
'
    Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext, Name:="2"
    Selection.Find.ClearFormatting
    With Selection.Find
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
End Sub

Sub GEHEZU1()
'
' GEHEZU2 Makro
' Makro aufgezeichnet am 09.05.2007 von mSpringer
'
    Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext, Name:="1"
    Selection.Find.ClearFormatting
    With Selection.Find
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
End Sub

Sub SENDEN_AN()
'
' SENDEN_AN Makro
' Makro aufgezeichnet am 31.10.2008 von Markus.Springer
'
    ActiveDocument.SendMail
End Sub

'>>MSP20101204----------------------------------------------
' Logo variabel setzen!

Sub LogoFirstPage(ByVal p_pfad As String, p_height As String, p_width As String, p_left As String, p_top As String)
' Logo erste Kopfzeile anders!
' Markus Springer
Dim oShape As Shape, oRange As Range
Dim Pfad As String

Pfad = p_pfad

Set oRange = ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range
Set oShape = ActiveDocument.Shapes.AddPicture(FileName:=Pfad, _
LinkToFile:=False, SaveWithDocument:=True, Anchor:=oRange)

' Platzierung des Logos
'oShape.Height = MillimetersToPoints(26)
'oShape.Width = MillimetersToPoints(50)
'oShape.Left = MillimetersToPoints(124)
'oShape.Top = MillimetersToPoints(4)
oShape.Height = MillimetersToPoints(p_height)
oShape.Width = MillimetersToPoints(p_width)
oShape.Left = MillimetersToPoints(p_left)
oShape.Top = MillimetersToPoints(p_top)

End Sub

Sub LogoSecondPage(ByVal p_pfad As String, p_height As String, p_width As String, p_left As String, p_top As String)
' Logo erste Kopfzeile anders!
' Markus Springer
Dim oShape As Shape, oRange As Range
Dim Pfad As String

Pfad = p_pfad

Set oRange = ActiveDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range
Set oShape = ActiveDocument.Shapes.AddPicture(FileName:=Pfad, _
LinkToFile:=False, SaveWithDocument:=True, Anchor:=oRange)

' Platzierung des Logos
'oShape.Height = MillimetersToPoints(26)
'oShape.Width = MillimetersToPoints(50)
'oShape.Left = MillimetersToPoints(124)
'oShape.Top = MillimetersToPoints(4)
oShape.Height = MillimetersToPoints(p_height)
oShape.Width = MillimetersToPoints(p_width)
oShape.Left = MillimetersToPoints(p_left)
oShape.Top = MillimetersToPoints(p_top)

End Sub

'<<MSP20101204----------------------------------------------


Attribute VB_Name = "SAPEvent"
' MJA
' Will be called by the DOI-Container as the STARTUP_MACRO on opening the document
Sub StartUpMacro()
    UpdateAllFields
    NewMacros.FORMAT_ALL

    ' Positionierung auf erste Seite
    GEHEZU1
End Sub

' MJA
' Will be called directy from ABAP, as the SAP-User may select, if first page ( = "Anschreiben") shall be displayed or not !
Sub DeleteFirstPage()
    ' Header and Footer following first page are linked to Header,Footer of first page
    ' => Unset this, so that Deletion of first page preserves Header, Footer of following pages
    ' Otherwise Header and Footer are also deleted !
    UnsetLinkToPreviosHeaderFooter
    
    Selection.HomeKey unit:=wdStory, Extend:=wdMove
    Selection.Bookmarks("\Page").Select
    Selection.Delete
End Sub

' MJA
Sub UnsetLinkToPreviosHeaderFooter()
    
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
        ActivePane.View.Type = wdOutlineView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    ActiveWindow.ActivePane.View.NextHeaderFooter
    Selection.HeaderFooter.LinkToPrevious = Not Selection.HeaderFooter. _
        LinkToPrevious
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
        ActivePane.View.Type = wdOutlineView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    Selection.EscapeKey

End Sub

' MJA: Updates all fields in the current document
' such as IncludeText, IncludePicture, TOC, etc.
Sub UpdateAllFields()

Dim oStory As Range

  For Each oStory In ActiveDocument.StoryRanges
    oStory.Fields.Update
    If oStory.StoryType <> wdMainTextStory Then
      While Not (oStory.NextStoryRange Is Nothing)
        Set oStory = oStory.NextStoryRange
        oStory.Fields.Update
      Wend
    End If
  Next oStory

Set oStory = Nothing

' Update TOC
Dim toc As TableOfContents
For Each toc In ActiveDocument.TablesOfContents
  toc.Update
Next

End Sub

Sub SaveAs(strDirectory As String, strFileName As String)

    With ActiveDocument
        .XMLSaveDataOnly = False
        .XMLUseXSLTWhenSaving = False
        .XMLSaveThroughXSLT = ""
        .XMLHideNamespaces = False
        .XMLShowAdvancedErrors = False
        .XMLSchemaReferences.HideValidationErrors = False
        .XMLSchemaReferences.AutomaticValidation = False
        .XMLSchemaReferences.IgnoreMixedContent = True
        .XMLSchemaReferences.AllowSaveAsXMLWithoutValidation = True
        .XMLSchemaReferences.ShowPlaceholderText = False
    End With
    
    ChangeFileOpenDirectory strDirectory
    
' wdFormatXML => WordML
    ActiveDocument.SaveAs FileName:=strFileName, FileFormat:= _
        wdFormatXML, LockComments:=False, Password:="", AddToRecentFiles:=False, _
        WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
         SaveNativePictureFormat:=False, SaveFormsData:=False, SaveAsAOCELetter:= _
        False

End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Sub send_mail2p(ByVal param1 As String, param2 As String)
'
' send_mail2p Makro
' Makro erstellt am 10.05.2005 von mSpringer
'
'    MsgBox (param1)
'    MsgBox (param2)
'    Dim antwort As Integer
    
'    antwort = MsgBox("eMail versenden?", vbYesNo, "eMail-Best|fffd|tigung")
    
'    If antwort = vbYes Then
    
        Dim o As Outlook.Application
        Dim e As MailItem

        ActiveDocument.SaveAs Environ("TEMP") & "\" & param2

        Set o = CreateObject("Outlook.Application")
        Set e = o.CreateItem(olMailItem)
        With e
            .To = param1            '   eMail-Empf|fffd|nger
            .Subject = param2       '   Dokumentname
            .Attachments.Add Environ("Temp") & "\" & param2, _
               olByValue, , _
               param2
            .Display
        End With

'        o.Quit
'        Set o = Nothing
'    End If


End Sub
Sub send_mail4p(ByVal Empfaenger As String, Anhang As String, Betreff As String, Mailtext As String)
'
' send_mail4p Makro
' Makro erstellt am 10.05.2005 von mSpringer
'
        Dim o As Outlook.Application
        Dim e As MailItem

        ActiveDocument.SaveAs Environ("TEMP") & "\" & Anhang

        Set o = CreateObject("Outlook.Application")
        Set e = o.CreateItem(olMailItem)
        With e
            .To = Empfaenger            '   eMail-Empf|fffd|nger
            If Len(Betreff) > 0 Then
                .Subject = Betreff
            Else
                .Subject = Anhang       '   Dokumentname
            End If
            If Len(Mailtext) > 0 Then
                .Body = Mailtext
            End If
            .Attachments.Add Environ("Temp") & "\" & Anhang, _
               olByValue, , _
               Anhang
            .Display
        End With

End Sub

Sub GRAFIK(ByVal Pfad As String)
'
' GRAFIK Makro
' Makro aufgezeichnet am 01.04.2008 von Markus.Springer
'
    Selection.InlineShapes.AddPicture FileName:=Pfad _
        , LinkToFile:=False, SaveWithDocument:=True
End Sub

Sub GRAFIK_NEU(ByVal var_pfad As String, var_grafikname As String)
'
' GRAFIK_NEU Makro
' Makro aufgezeichnet am 09.09.2008 von Markus Springer
'
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = var_grafikname
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchKashida = False
        .MatchDiacritics = False
        .MatchAlefHamza = False
        .MatchControl = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.InlineShapes.AddPicture FileName:=var_pfad, _
         LinkToFile:=False, SaveWithDocument:=True
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "<W_ENDE>"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchKashida = False
        .MatchDiacritics = False
        .MatchAlefHamza = False
        .MatchControl = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
End Sub



INQUEST-PP=macro
