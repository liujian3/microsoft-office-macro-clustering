Attribute VB_Name = "Module1"
'
Sub SaveAndClose()

Dim strDate As String ' Current date
strDate = Date ' Convert the date to a string

UserFormUploadToDMS.TextBoxSummary.Text = "Quick Letter for " + ThisDocument.StudentName
UserFormUploadToDMS.TextBoxNotes.Text = "Created " + strDate
UserFormUploadToDMS.Show (1)
    
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Private Const MAX_PATH = 260
Private Const CSIDL_PERSONAL = &H5&
Private Const SHGFP_TYPE_CURRENT = 0

Public StudentName

' We will use the Windows API to get the path to My Documents
#If (Win64 And VBA7) Then
Private Declare PtrSafe Function SHGetFolderPath Lib "shfolder" _
    Alias "SHGetFolderPathA" _
    (ByVal hwndOwner As Long, ByVal nFolder As Long, _
    ByVal hToken As Long, ByVal dwFlags As Long, _
    ByVal pszPath As String) As Long
#Else

Private Declare Function SHGetFolderPath Lib "shfolder" _
    Alias "SHGetFolderPathA" _
    (ByVal hwndOwner As Long, ByVal nFolder As Long, _
    ByVal hToken As Long, ByVal dwFlags As Long, _
    ByVal pszPath As String) As Long
#End If


Private Sub Document_Open()

'
'  /z /t is NOT supported pre windows 2003
'  So the use of real templates isn't possible
'
'  This document represents a "dummy" template
'

Dim oCommandBar As CommandBar
Dim strMyDocuments As String
Dim valReturned As Long
Dim fso
Dim rtfFile As String
Dim templateFile As String

Set fso = CreateObject("Scripting.FileSystemObject")

' Initialize the string
strMyDocuments = String(MAX_PATH, 0)
        
' Call the Shell API function to get the path to My Documents
' and store it in the strMyDocuments folder
valReturned = SHGetFolderPath(0, CSIDL_PERSONAL, _
                              0, SHGFP_TYPE_CURRENT, strMyDocuments)
' "Trim" the string
strMyDocuments = Left(strMyDocuments, InStr(1, strMyDocuments, Chr(0)) - 1)

strMyDocuments = strMyDocuments + "\tempSimsRpt\"

Dim file ' The name and path of the merge file
file = strMyDocuments + "\mergeDMS.txt"

' Does the file exist?  This file should NOT exist when opening this document for editing by the user
If fso.FileExists(file) Then

For Each oCommandBar In Application.CommandBars

  If oCommandBar.Name = "SIMSDMS" Then
    oCommandBar.Visible = True
  End If

Next

Dim InputData
Dim item
item = 0
Open file For Input As #1    ' Open file for input.
Do While Not EOF(1)    ' Check for end of file.
    item = item + 1
    Line Input #1, InputData    ' Read line of data.
    
    If item = 1 Then ' First line is the name
           StudentName = InputData ' Make the name visible to the dialog used when saving
           Selection.Find.ClearFormatting
           Selection.Find.Replacement.ClearFormatting
           
           With Selection.Find
            .Text = "<NAME>"
            .Replacement.Text = InputData
            .Forward = True
            .Wrap = wdFindContinue
            .Format = False
            .MatchCase = False
            .MatchWholeWord = False
            .MatchWildcards = False
            .MatchSoundsLike = False
            .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
    End If

    If item = 2 Then ' Second line is the address
           
           Selection.Find.ClearFormatting
           Selection.Find.Replacement.ClearFormatting
           
           With Selection.Find
            .Text = "<ADDRESS>"
            .Replacement.Text = InputData
            .Forward = True
            .Wrap = wdFindContinue
            .Format = False
            .MatchCase = False
            .MatchWholeWord = False
            .MatchWildcards = False
            .MatchSoundsLike = False
            .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        
            ' The address also comes in with "\par " tags.  We need to replace these with line breaks
            With Selection.Find
            .Text = "\par "
            .Replacement.Text = "^l"
            .Forward = True
            .Wrap = wdFindContinue
            .Format = False
            .MatchCase = False
            .MatchWholeWord = False
            .MatchWildcards = False
            .MatchSoundsLike = False
            .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        
        
    End If
    
        If item = 3 Then ' Third line is the salutation
           
           Selection.Find.ClearFormatting
           Selection.Find.Replacement.ClearFormatting
           
           With Selection.Find
            .Text = "<SALUTATION>"
            .Replacement.Text = InputData
            .Forward = True
            .Wrap = wdFindContinue
            .Format = False
            .MatchCase = False
            .MatchWholeWord = False
            .MatchWildcards = False
            .MatchSoundsLike = False
            .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
    End If
    
       If item = 4 Then ' Fourth line is the entity we are dealing with
           
           Selection.Find.ClearFormatting
           Selection.Find.Replacement.ClearFormatting
           
           If InputData = "Enquiry" Then
           
               With Selection.Find
                .Text = "Student:"
                .Replacement.Text = "Enquirer ID:"
                .Forward = True
                .Wrap = wdFindContinue
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With
            Selection.Find.Execute Replace:=wdReplaceAll
               
           End If
           
           If InputData = "BillPayer" Then
           
            With Selection.Find
                        .Text = "Student:"
                        .Replacement.Text = "Bill Payer ID:"
                        .Forward = True
                        .Wrap = wdFindContinue
                        .Format = False
                        .MatchCase = False
                        .MatchWholeWord = False
                        .MatchWildcards = False
                        .MatchSoundsLike = False
                        .MatchAllWordForms = False
                    End With
                    Selection.Find.Execute Replace:=wdReplaceAll
          End If
           
           
           
    End If
   
    
Loop
Close #1    ' Close file.

'Insert todays date
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting

With Selection.Find
    .Text = "<DATE>"
    .Replacement.Text = DateTime.Date
    .Forward = True
    .Wrap = wdFindContinue
    .Format = False
    .MatchCase = False
    .MatchWholeWord = False
    .MatchWildcards = False
    .MatchSoundsLike = False
    .MatchAllWordForms = False
End With
            
Selection.Find.Execute Replace:=wdReplaceAll

'Clean up by removing this file now we have processed it
fso.DeleteFile (file)

Else


'If the mergefile.txt doesn't exist, then it's likely the user is editing the "Template"
'So hide the DMS button

For Each oCommandBar In Application.CommandBars

  If oCommandBar.Name = "SIMSDMS" Then
    oCommandBar.Visible = False
  End If

Next

'
'Check to see if the rtf exists to import from
'
rtfFile = ActiveDocument.Path + "\QuickLetterTemplate.rtf"
If fso.FileExists(rtfFile) Then

    Selection.WholeStory ' Select everything
    Selection.InsertFile Filename:=rtfFile, Range:="", _
        ConfirmConversions:=False, Link:=False, Attachment:=False 'Copy in the rtf
        
    'Save it
    ActiveDocument.Save
    
    'Now remove the original

End If

End If

End Sub
Attribute VB_Name = "UserFormUploadToDMS"
Attribute VB_Base = "0{40F9009D-304D-4128-9667-D8E9744009C5}{801493D2-B4F9-4368-8F27-46B70B24ABCA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Const MAX_PATH = 260
Private Const CSIDL_PERSONAL = &H5&
Private Const SHGFP_TYPE_CURRENT = 0

' We will use the Windows API to get the path to My Documents
#If (Win64 And VBA7) Then
Private Declare PtrSafe Function SHGetFolderPath Lib "shfolder" _
    Alias "SHGetFolderPathA" _
    (ByVal hwndOwner As Long, ByVal nFolder As Long, _
    ByVal hToken As Long, ByVal dwFlags As Long, _
    ByVal pszPath As String) As Long
    
#Else
Private Declare Function SHGetFolderPath Lib "shfolder" _
    Alias "SHGetFolderPathA" _
    (ByVal hwndOwner As Long, ByVal nFolder As Long, _
    ByVal hToken As Long, ByVal dwFlags As Long, _
    ByVal pszPath As String) As Long
#End If


Private Sub CommandButtonCancel_Click()
        Unload Me ' Close the form and do nothing
End Sub

Private Sub CommandButtonOK_Click()
        
        Dim strMyDocuments As String
        Dim valReturned As Long
        Dim fs
        Dim a
        Dim fso
        Dim rtfFile As String
        Dim templateFile As String
    
        ' Initialize the string
        strMyDocuments = String(MAX_PATH, 0)
        
        ' Call the Shell API function to get the path to My Documents
        ' and store it in the strMyDocuments folder
        valReturned = SHGetFolderPath(0, CSIDL_PERSONAL, _
                                      0, SHGFP_TYPE_CURRENT, strMyDocuments)
        ' "Trim" the string
        strMyDocuments = Left(strMyDocuments, InStr(1, strMyDocuments, Chr(0)) - 1)

        strMyDocuments = strMyDocuments + "\tempSimsRpt\"
        ' Output the user note and summary selections to the file
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set a = fs.CreateTextFile(strMyDocuments + "dmsupload.txt", True) ' Overwrite existing file if it exists
        a.WriteLine (TextBoxSummary.Text)
        a.WriteLine (TextBoxNotes.Text)
        a.Close
        
        ' Save the document to the known location
        ActiveDocument.SaveAs Filename:=strMyDocuments + "NewLetter.doc", FileFormat:= _
        wdFormatDocument, LockComments:=False, Password:="", AddToRecentFiles:= _
        True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:= _
        False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
        SaveAsAOCELetter:=False
         
        Unload Me ' Close the form
        
        Application.Quit 'Quit word
End Sub



INQUEST-PP=macro
