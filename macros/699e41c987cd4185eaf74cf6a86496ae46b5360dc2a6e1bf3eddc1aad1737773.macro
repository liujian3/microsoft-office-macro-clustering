Attribute VB_Name = "Module1"
Sub cardprint()

'notes to make this work properly:
' cell c1 should be the draw (A,B,C,D)
' cell d1 should be the event (Men's Doubles)
' box in H1:H9 with a heavy border
' change print margins to 0.25 on all sides (header=0, footer=0)
' merge and wrap cells H3/H4  and also H7/H8 and BOLD H1
Dim sStartCell As String
Dim sStartSheet As String
Dim Delay As String

ActiveCell.Select


sStartCell = ActiveCell.Address
sStartSheet = ActiveSheet.Name



Range("h1") = Range("c1") & "  " & Range("d1")
Range("h3") = ActiveCell.Value
Range("h5") = "versus"

'find other name in bracket
'determine search direction based on whether selected box has a right edge line

If (ActiveCell.Borders(xlEdgeRight).LineStyle = xlLineStyleNone) = True Then
'go down
    incr = 1
Else
    incr = -1
'go up
    End If
    
ActiveCell.Offset(incr, 0).Select
I = incr

Do Until (ActiveCell.Borders(xlEdgeBottom).LineStyle = xlLineStyleNone) = False Or I > 50 Or I < -50
   ActiveCell.Offset(incr, 0).Select
   I = I + incr
   Loop
   
If I > 50 Or I < -50 Or ActiveCell.Value = vbNullString Then
     reply = MsgBox(prompt:="No opponent found")
     Exit Sub
     End If
     
minutes = 20
Delay = InputBox(prompt:=minutes & " minute delay until next match assumed." & vbNewLine & "If a different value is desired, then enter it now", Title:="Enter Delay or just press enter", Default:=minutes)
If Delay = vbNullString Then
    Exit Sub   'cancel was pressed
    End If

If Delay > "0" And Delay < "60" Then minutes = Delay


            
     
Range("h7") = ActiveCell.Value

'Now() + 20 / 1440   is 20 minutes from now
Range("H9") = Hour(Now() + minutes / 1440) & ":" & Minute(Now() + minutes / 1440)
ActiveSheet.PageSetup.LeftMargin = Application.InchesToPoints(0.25)
ActiveSheet.PageSetup.RightMargin = Application.InchesToPoints(0)
ActiveSheet.PageSetup.TopMargin = Application.InchesToPoints(5.75)
ActiveSheet.PageSetup.BottomMargin = Application.InchesToPoints(0)
ActiveSheet.PageSetup.HeaderMargin = Application.InchesToPoints(0)
ActiveSheet.PageSetup.FooterMargin = Application.InchesToPoints(0)

ActiveSheet.PageSetup.PrintArea = Range("H1:H9").Address


'Range("H1:H9").PrintPreview

Range("H1:H9").PrintOut

'jump to next column and move to find an bottom edge line
ActiveCell.Offset(-incr, 1).Select
I = 0
Do Until (ActiveCell.Borders(xlEdgeBottom).LineStyle = xlLineStyleNone) = False Or I > 25
   ActiveCell.Offset(-incr, 0).Select
   I = I + 1
   Loop
ActiveCell.Value = "(Card Printed)" & ActiveCell.Value  'indicate that card was printed


'return to original position
Worksheets(sStartSheet).Select
Range(sStartCell).Select


End Sub

Attribute VB_Name = "Module2"
Option Compare Text ' "A" is equal to "a".
Sub scores()

'to invoke this macro, right click the winner of the match
' note - underscores are added behind winners names to indicate how many "byes" they have had

Dim I As Integer
Dim score As String
Dim reply As String
Dim winner As String
Dim loser As String
Dim sStartCell As String
Dim sStartSheet As String
Dim sLoserSheet As String
Dim sLoserStart As String

Dim alreadyThere As String

ActiveCell.Select
winner = ActiveCell.Value

sStartCell = ActiveCell.Address
sStartSheet = ActiveSheet.Name


'           FIND LOSER (the winner has already already clicked)
'determine search direction based on whether winner's box has a right edge line
'the cell with the lower name in the bracket has a right edge

If (ActiveCell.Borders(xlEdgeRight).LineStyle = xlLineStyleNone) = True Then
'go down
    incr = 1
Else
'go up
    incr = -1
    End If
    
ActiveCell.Offset(incr, 0).Select
I = 0

'start the search for the next cell with an underline
Do Until (ActiveCell.Borders(xlEdgeBottom).LineStyle = xlLineStyleNone) = False Or I > 50
   ActiveCell.Offset(incr, 0).Select
   I = I + 1
   Loop
   
If I > 50 Then
     reply = MsgBox(prompt:="No opponent found for " & winner)
     Exit Sub
     End If
     

loser = ActiveCell.Value
If loser = vbNullString And ActiveCell.Column = 2 Then loser = "bye"



'                   GET THE SCORE
If loser = vbNullString Or loser = "(Card Printed)" Then
    reply = MsgBox(prompt:="No opponent found for " & winner)
    Exit Sub
    End If
If loser <> "bye" And loser <> vbNullString Then
    score = InputBox(prompt:="Scores for the winner: " & winner & vbNewLine & "  against the loser: " & loser, Title:="Enter Scores")
    If score = vbNullString Then
        reply = MsgBox(prompt:="Cancelled because no score given")
        Exit Sub
        End If
Else
    score = " "
    End If
    
    
    
'                   MOVE THE WINNER
'add a trailing underscore indicating winner had a bye
'but only in the first 2 rounds
If loser = "bye" Or score = "bye" Or loser = vbNullString Then
    If winner <> "bye" And ActiveCell.Column < 5 Then
        winner = winner & "_"
        End If
    End If

'find where to write winners name by jumping to next column
' and move to find a cell with a bottom edge line

ActiveCell.Offset(-incr, 1).Select
I = 0
Do Until (ActiveCell.Borders(xlEdgeBottom).LineStyle = xlLineStyleNone) = False Or I > 25
   ActiveCell.Offset(-incr, 0).Select
   I = I + 1
   Loop
   
'actually place the winner and score into the next column
ActiveCell.Value = winner
ActiveCell.Offset(1, 0).Select
ActiveCell.Value = score



'           MOVE THE LOSER TO ANOTHER SHEET IF APPLICABLE

'count the number of trailing underscores (which is the number of byes received)
'and remove any trailing underscores (could be one or two)
ct = 0
L = Len(loser)
If L > 0 Then
    If Right(loser, 1) = "_" Then
        ct = ct + 1
        L = L - 1
        loser = Left(loser, L) ' remove the trailing underscore
        End If
    If Right(loser, 1) = "_" Then
        ct = ct + 1
        L = L - 1
        loser = Left(loser, L) ' remove the trailing underscore
        End If
    End If

If (loser = "bye" Or loser = vbNullString) = False Then
 reply = " "
 sLoserSheet = "na"
 sLoserStart = "B2"

 ActiveCell.Offset(0, -1).Select   'shift back to the original column

 If ActiveSheet.Name = "A" And ActiveCell.Column = 2 Then
    sLoserSheet = "C"  'drop normal 1st round losers to the C bracket
    End If
    
 If ActiveSheet.Name = "A" And ActiveCell.Column = 3 Then
    sLoserSheet = "B"  'drop normal 1st round losers to the B bracket
    End If
      
 If ActiveSheet.Name = "A" And ActiveCell.Column = 3 And ct = 1 Then
    sLoserSheet = "C"   'had a bye in the first round
    End If
  
 If ActiveSheet.Name = "A" And ActiveCell.Column = 4 And ct = 2 Then
    sLoserSheet = "C"   'had byes in first & second round
    End If
    
  If ActiveSheet.Name = "A" And ActiveCell.Column = 4 And ct = 1 Then
    sLoserSheet = "B"   'had 1 bye in first 2 rounds
    End If
    
  If ActiveSheet.Name = "A" And ActiveCell.Column = 5 And ct = 2 Then
    sLoserSheet = "B"   'had 2 byes in first 3 rounds
    End If
          
 If ActiveSheet.Name = "C" And ActiveCell.Column = 2 Then
    sLoserSheet = "D"
    End If
    
 If ActiveSheet.Name = "C" And ActiveCell.Column = 3 And ct = 1 Then
    sLoserSheet = "D"  'had a bye in the first C round
    End If
    
If ActiveSheet.Name = "C" And ActiveCell.Column = 4 And ct = 2 Then
    sLoserSheet = "D"  'had bye in the first & second C round
    End If
    
 'do the actual drop to another bracket is a sheet is specified
 If sLoserSheet <> "na" Then
    Worksheets(sLoserSheet).Select
    Range(sLoserStart).Select
    
    ' check if name is already there
    I = 0
    alreadyThere = "no"
    Do Until (I > 35 Or alreadyThere = "yes")
        ActiveCell.Offset(1, 0).Select
        I = I + 1
        If ActiveCell.Value = loser Then alreadyThere = "yes"
        Loop
    
    ' add name to first blank line in left column
    If alreadyThere = "no" Then
        Range(sLoserStart).Select
        I = 0
        Do Until (ActiveCell.Borders(xlEdgeBottom).LineStyle <> xlLineStyleNone And (ActiveCell.Value = vbNullString Or ActiveCell.Value = "bye")) Or I > 60
            ActiveCell.Offset(1, 0).Select
            I = I + 1
            Loop
                   
        If I <= 60 Then
            ActiveCell.Value = loser
            reply = MsgBox(prompt:=loser & vbNewLine & "moved to " & sLoserSheet)
        End If
        
        If I > 60 Then
            reply = MsgBox(prompt:="No line available for " & loser & " on sheet " & sLoserSheet & vbNewLine & "add a line in column B of that sheet and reenter score")
        End If
        
        Range(sLoserStart).Select 'reset cursor to top of sheet
    End If
 End If   'sLoserSheet <> "na"

End If   'if loser is not a bye


'return to original position
Worksheets(sStartSheet).Select
Range(sStartCell).Select


End Sub
Attribute VB_Name = "Module3"
Sub Auto_open()
    Dim ctl As CommandBarControl
    Const MENU_TAG As String = "MACROS"
    With Application.CommandBars("Cell")
        Set ctl = .FindControl(msoControlButton, 1, MENU_TAG)
        If Not ctl Is Nothing Then ctl.Delete
        On Error Resume Next
        Application.CommandBars("Cell").Controls("Print Card").Delete
        On Error GoTo 0
        With .Controls.Add(msoControlButton, temporary:=True)
            .Caption = "Print Card"
            .FaceId = 4
            .Style = msoButtonIconAndCaption
            .OnAction = "cardprint"
            .Tag = MENU_TAG
        End With
         On Error Resume Next
        Application.CommandBars("Cell").Controls("Enter Scores").Delete
        On Error GoTo 0
        With .Controls.Add(msoControlButton, temporary:=True)
            .Caption = "Enter Scores"
            .FaceId = 4
            .Style = msoButtonIconAndCaption
            .OnAction = "scores"
            .Tag = MENU_TAG
        End With
       On Error Resume Next
        Application.CommandBars("Cell").Controls("Print Page").Delete
        On Error GoTo 0
        With .Controls.Add(msoControlButton, temporary:=True)
            .Caption = "Print Page"
            .FaceId = 4
            .Style = msoButtonIconAndCaption
            .OnAction = "Pageprint"
            .Tag = MENU_TAG
        End With
    End With
End Sub
Attribute VB_Name = "Module4"
Sub Pageprint()

'Print current page

    verify = InputBox(prompt:="Do you really want to print the entire page? (Y/N)")
    If verify = vbNullString Or Not (verify = "Y" Or verify = "y") Then
                GoTo Lastline
                End If
            ActiveSheet.PageSetup.Orientation = xlLandscape
            ActiveSheet.PageSetup.FitToPagesWide = 1
            ActiveSheet.PageSetup.FitToPagesTall = 1
            ActiveSheet.PageSetup.Zoom = False
            ActiveSheet.PageSetup.LeftMargin = Application.InchesToPoints(0.25)
            ActiveSheet.PageSetup.RightMargin = Application.InchesToPoints(0.25)
            ActiveSheet.PageSetup.TopMargin = Application.InchesToPoints(0.5)
            ActiveSheet.PageSetup.BottomMargin = Application.InchesToPoints(0)
            ActiveSheet.PageSetup.HeaderMargin = Application.InchesToPoints(0)
            ActiveSheet.PageSetup.FooterMargin = Application.InchesToPoints(0)

            ActiveSheet.PageSetup.PrintArea = Range("A1:G67").Address

            'COMMENT OUT UNWANTED LINES ON THE NEXT 2 LINES
            'Range("A1:G67".PrintPreview

            Range("A1:G67").PrintOut
Lastline:
        End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
