Attribute VB_Name = "Class1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public WithEvents butEvents As MSForms.CommandButton
Attribute butEvents.VB_VarHelpID = -1
Public Capt As String
Public Sign As String
Private Sub butEvents_click()

    Dim MyText As String
    Dim MyRange As Object
    Set MyRange = ActiveDocument.Range
    MyText = Capt
    If Sign = "+" Then
        Selection.InsertAfter ("[start " & MyText & "] [end " & MyText & "]")
    ElseIf Sign = "-" Then
        Selection.InsertAfter ("#" & MyText & "#")
    End If
End Sub
Attribute VB_Name = "Module1"
'Option Explicit

'Public Declare Function FindWindowA& Lib "User32" (ByVal lpClassName$, ByVal lpWindowName$)
'Public Declare Function GetWindowLongA& Lib "User32" (ByVal hWnd&, ByVal nIndex&)
'Public Declare Function SetWindowLongA& Lib "User32" (ByVal hWnd&, ByVal nIndex&, ByVal dwNewLong&)
 
' D|fffd|claration des constantes
'Public Const GWL_STYLE As Long = -16
'Public Const WS_MINIMIZEBOX = &H20000
'Public Const WS_MAXIMIZEBOX = &H10000
'Public Const WS_FULLSIZING = &H70000

'Attention, envoyer apr|fffd|s changement du caption de l'UF
'Public Sub InitMaxMin(mCaption As String, Optional Max As Boolean = True, Optional Min As Boolean = True _
        , Optional Sizing As Boolean = True)
'Dim hWnd As Long
    'hWnd = FindWindowA(vbNullString, mCaption)
    'If Min Then SetWindowLongA hWnd, GWL_STYLE, GetWindowLongA(hWnd, GWL_STYLE) Or WS_MINIMIZEBOX
    'If Max Then SetWindowLongA hWnd, GWL_STYLE, GetWindowLongA(hWnd, GWL_STYLE) Or WS_MAXIMIZEBOX
    'If Sizing Then SetWindowLongA hWnd, GWL_STYLE, GetWindowLongA(hWnd, GWL_STYLE) Or WS_FULLSIZING
'End Sub

Attribute VB_Name = "NewMacros"
Const BaseUrl = "http://5.141.28.42:10657/docxgen-master/upload_doc.php"
Const TemplateUrl = "http://5.141.28.42:10657/docxgen-master/upload_template.php"

Function GetFile(FileName)
  Dim Stream: Set Stream = CreateObject("ADODB.Stream")
  Stream.Type = 1 'Binary
  Stream.Open
  Stream.LoadFromFile FileName
  GetFile = Stream.Read
  Stream.Close
End Function

Function mpFields(FieldName, FileName, ContentType)
  Dim MPTemplate 'template For multipart header
  MPTemplate = "Content-Disposition: form-data; name=""{field}"";" + _
   " filename=""{file}""" + vbCrLf + _
   "Content-Type: {ct}" + vbCrLf + vbCrLf
  Dim Out
  Out = Replace(MPTemplate, "{field}", FieldName)
  Out = Replace(Out, "{file}", FileName)
  mpFields = Replace(Out, "{ct}", ContentType)
End Function

Function StringToMB(s)
  Dim i, B
  For i = 1 To Len(s)
    B = B & ChrB(Asc(Mid(s, i, 1)))
  Next
  StringToMB = B
End Function

Function BuildFormData(FileContents, Boundary, FileName, FieldName)
  Dim FormData, Pre, Po
  Const ContentType = "application/x-zip"
  
  'The two parts around file contents In the multipart-form data.
  Pre = "--" + Boundary + vbCrLf + mpFields(FieldName, FileName, ContentType)
  Po = vbCrLf + "--" + Boundary + "--" + vbCrLf
  
  'Build form data using recordset binary field
  Const adLongVarBinary = 205
  Dim RS: Set RS = CreateObject("ADODB.Recordset")
  RS.Fields.Append "b", adLongVarBinary, Len(Pre) + LenB(FileContents) + Len(Po)
  RS.Open
  RS.AddNew
    Dim LenData
    'Convert Pre string value To a binary data
    LenData = Len(Pre)
    RS("b").AppendChunk (StringToMB(Pre) & ChrB(0))
    Pre = RS("b").GetChunk(LenData)
    RS("b") = ""
    
    'Convert Po string value To a binary data
    LenData = Len(Po)
    RS("b").AppendChunk (StringToMB(Po) & ChrB(0))
    Po = RS("b").GetChunk(LenData)
    RS("b") = ""
    
    'Join Pre + FileContents + Po binary data
    RS("b").AppendChunk (Pre)
    RS("b").AppendChunk (FileContents)
    RS("b").AppendChunk (Po)
  RS.Update
  FormData = RS("b")
  RS.Close
  BuildFormData = FormData
End Function

Function WinHTTPPostRequest(URL, FileName, docname)
    Dim http 'As New MSXML2.XMLHTTP
    
    'Create XMLHTTP/ServerXMLHTTP/WinHttprequest object
    'You can use any of these three objects.
    'Set http = CreateObject("WinHttp.WinHttprequest.5")
    'Set http = CreateObject("MSXML2.XMLHTTP")
    Const Boundary = "---------------------------229251091019737"
    Set oHTTP = CreateObject("Microsoft.XMLHTTP")
    oHTTP.Open "POST", URL, False
    
    FileContents = GetFile(FileName)
    oHTTP.setRequestHeader "Content-Type", "multipart/form-data; boundary=" + Boundary
    FormData = BuildFormData(FileContents, Boundary, docname, "filename")
    oHTTP.Send FormData
    If oHTTP.Status <> "200" Then
        WinHTTPPostRequest = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " + objHTTP.Status + " " + oHTTP.ResponseText
    Else
        WinHTTPPostRequest = oHTTP.ResponseText
    End If
End Function

Sub SaveCopyAs(SaveAsPath)
    Const lCancelled_c As Long = 0
  
    If VBA.LenB(SaveAsPath) = lCancelled_c Then Exit Sub
    
    'ActiveDocument.SaveAs FileName:=ActiveDocument.Path + Application.PathSeparator + ActiveDocument.Name + "temp"
    FN = Replace(ActiveDocument.Name, "temp_", "")
    FN = "temp_" + FN
    'Save changes to original document
    ActiveDocument.SaveAs FileName:=ActiveDocument.Path + Application.PathSeparator + FN
    'the next line copies the active document
    Application.Documents.Add ActiveDocument.FullName
    'the next line saves the copy to your location and name
    ActiveDocument.SaveAs SaveAsPath, wdFormatXMLDocumentMacroEnabled
 
    'next line closes the copy leaving you with the original document
    ActiveDocument.Close
End Sub
 
Function GetFilePath(sFile As String)
    GetFilePath = Left(sFile, InStrRev(sFile, "\"))
End Function

Function LoadSetting()
    Dim MyDictionary As Object
    Set MyDictionary = CreateObject("Scripting.Dictionary")
    SettingFile = GetFilePath(ActiveDocument.FullName) + "settings.txt"
    Open SettingFile For Input As #1
    Do While Not (EOF(1))
        Line Input #1, MyLine
        MyLine = Trim(MyLine)
        MyAr = Split(MyLine, "=")
        MyDictionary.Add MyAr(0), MyAr(1)
    Loop
    Close #1
    Set LoadSetting = MyDictionary
End Function
 

Sub |fffd||fffd||fffd||fffd||fffd||fffd|1()
'
' |fffd||fffd||fffd||fffd||fffd||fffd|1 |fffd||fffd||fffd||fffd||fffd||fffd|
'

   'LoadSetting
    
   FileName = ActiveDocument.FullName + "temp"
    
   SaveCopyAs FileName
   
   'Set Setting = LoadSetting
    
   MsgBox WinHTTPPostRequest(BaseUrl, FileName, ActiveDocument.Name)
   
   
 
End Sub
 
Sub |fffd||fffd||fffd||fffd||fffd||fffd|2()
Attribute |fffd||fffd||fffd||fffd||fffd||fffd|2.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.|fffd||fffd||fffd||fffd||fffd||fffd|2"
'
' |fffd||fffd||fffd||fffd||fffd||fffd|2 |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
   FileName = ActiveDocument.FullName + "temp"
    
   SaveCopyAs FileName
 
   MsgBox WinHTTPPostRequest(TemplateUrl, FileName, ActiveDocument.Name)
   
End Sub
Sub |fffd||fffd||fffd||fffd||fffd||fffd|3()
'
' |fffd||fffd||fffd||fffd||fffd||fffd|3 |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
UserForm1.Show 0
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{DE45AFB5-14B0-4842-9F42-233327BBF0D5}{F2D1614D-9254-4186-B86A-D183CF412D66}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim Lg As Single
Dim Ht As Single
Dim Fini As Boolean
Dim ButArray() As New Class1

Private Sub UserForm_Initialize()
    Dim i As Integer, L As Integer, TB
    InitMaxMin Me.Caption
    Ht = Me.Height
    Lg = Me.Width
    
    Dim o As Document
    Dim docname As String, fname As String, Sign As String, ReplacePattern As String
    Dim myIDs As Variant, myArray As Variant
    Dim j As Integer, jj As Integer, myHeight As Integer
    Dim tmpname As String
    Dim RE As Object
    Dim btn As Control
     
    Set RE = CreateObject("vbscript.regexp")
    With RE
        .IgnoreCase = True
        .Pattern = "(-\d+)"
    End With
    
    Set o = ActiveDocument
    fname = CreateObject("scripting.filesystemobject").getbasename(o.Name)
    myIDs = Split(fname, "_")
    
    If fname = "template" Then
        docname = "template.txt"
    Else
        For j = LBound(myIDs, 1) To UBound(myIDs, 1)
            tmpname = myIDs(j)
            If tmpname = "report" Or tmpname = "doc" Then
                jj = j + 2
            End If
        Next j
        docname = "data_" & myIDs(jj) & "_" & myIDs(jj + 1) & "_" & myIDs(jj + 2) & ".txt"
        docname = RE.Replace(docname, "")
    End If
      
        
    Set MyRequest = CreateObject("WinHttp.WinHttpRequest.5.1")
    
    MyRequest.Open "GET", _
    "http://5.141.28.42:10657/docxgen-master/TMP/" & docname
    
    MyRequest.Send
        
    jj = 0
    myHeight = 25
    myArray = Split(MyRequest.ResponseText, vbCrLf)
    
    
    For j = LBound(myArray, 1) To UBound(myArray, 1)
        Sign = Mid(myArray(j), 1, 1)
        If Sign <> "" Then
            Set btn = Me.Controls.Add("Forms.CommandButton.1")
            With btn
                .Caption = Mid(myArray(j), 2, Len(myArray(j)))
                If Sign = "+" And jj <> 0 Then
                    jj = jj + 1
                    myHeight = myHeight + 25
                End If
                .Top = jj * 25
                .Width = 300
                If Sign = "+" Then
                    .FontBold = True
                    .BackColor = 9760334
                ElseIf Sign = "-" Then
                    .Left = 25
                    If (j Mod 2) <> 0 Then
                        .BackColor = RGB(238, 242, 244)
                    Else
                        .BackColor = RGB(247, 247, 247)
                    End If
                End If
                myHeight = myHeight + 25
                .MousePointer = fmMousePointerCustom
            End With
            ReDim Preserve ButArray(0 To j)
            Set ButArray(j).butEvents = btn
            ButArray(j).Capt = Mid(myArray(j), 2, Len(myArray(j)))
            ButArray(j).Sign = Sign
            jj = jj + 1
        End If
    Next j
    
    With Me
        .ScrollBars = fmScrollBarsVertical
        .ScrollHeight = myHeight
        .ScrollWidth = .InsideWidth * 9
        .Width = 350
        .BackColor = RGB(255, 255, 255)
    End With
    
End Sub

Private Sub UserForm_Resize()
Dim RtL As Single, RtH As Single
    If Me.Width < 300 Or Me.Height < 200 Or Fini Then Exit Sub
    RtL = Me.Width / Lg
    RtH = Me.Height / Ht
    Me.Zoom = IIf(RtL < RtH, RtL, RtH) * 100
End Sub

Private Sub UserForm_Terminate()
    Fini = True
End Sub




' InQuest injected base64 decoded content
' z{Li

INQUEST-PP=macro
