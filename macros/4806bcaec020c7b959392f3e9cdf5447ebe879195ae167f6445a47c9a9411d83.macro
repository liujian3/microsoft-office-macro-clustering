Attribute VB_Name = "Abweichungen"
Attribute VB_Base = "0{CBF855E7-259E-43A7-BC41-D8E003494F84}{FFC0B16C-0D68-4DF6-A844-95A0AE174562}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub Abbrechen_Click()
    Unload Me
End Sub


Private Sub Farbendarstellen_Click()
    If IsNumeric(Me.Abweichung2.Value) And IsNumeric(Me.Abweichung3.Value) And IsNumeric(Me.Abweichung4.Value) Then
        AbweichungenKennzeichnen
        Unload Me
    Else
        MsgBox "F|fffd|r die Abweichung sind nur Zahlen von 1 bis 1000 m|fffd|glich!"
        Exit Sub
    End If
End Sub
Attribute VB_Name = "AusblendungssFilter"
Attribute VB_Base = "0{A3E73BCC-C7FC-4BEF-883B-C7341B771875}{3958F99B-A7E5-44B3-8CC2-5C7CC5374E2C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub Abbrechen_Click()
    Unload Me
End Sub




Private Sub Filtersetzen_Click()
    ZFilter = ""
    SFilter = ""

    If Me.Zvhn.Value Then ZFilter = ZFilter + "VHN"
    If Me.Zp.Value Then ZFilter = ZFilter + "P"
    If Me.zg.Value Then ZFilter = ZFilter + "G"
    If Me.Zb.Value Then ZFilter = ZFilter + "B"
    If Me.Zo.Value Then ZFilter = ZFilter + "O"
    If Me.Zaw.Value Then ZFilter = ZFilter + "AW"
    If Me.Z1bis9.Value Then ZFilter = ZFilter + "123456789"
    
    If Me.Stg.Value Then SFilter = SFilter + "T"
    If Me.Sks.Value Then SFilter = SFilter + "K"
    If Me.Smp.Value Then SFilter = SFilter + "B"
    If Me.Sbp.Value Then SFilter = SFilter + "M"
    If Me.Sfm.Value Then SFilter = SFilter + "F"
    If Me.Ssp.Value Then SFilter = SFilter + "S"
    If Me.Sep.Value Then SFilter = SFilter + "E"
    If Me.Sgp.Value Then SFilter = SFilter + "G"
    If Me.Stp.Value Then SFilter = SFilter + "P"
    If Me.Sko.Value Then SFilter = SFilter + "C"
    
    AnsichtsFilterSetzen ZFilter, SFilter
    
    Unload Me
End Sub

Attribute VB_Name = "BieterWahl"
Attribute VB_Base = "0{B09C7B1E-9AE0-4C37-B81B-5A102456F87F}{5172CE95-1131-4282-8B32-9CB60628D573}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "ChangeHistory"
'2017-02-01 MDS: * ChangeHistory hinzugefuegt
'                * Drucken: Header definiert mit Confidential-Kennzeichnung
'---------------
Attribute VB_Name = "Darstellungsspalte"
Attribute VB_Base = "0{0B80479D-8123-418F-A580-9E07F24830CA}{B3A45D9D-D38D-4539-9483-1501F2451246}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub Abbrechen_Click()
    Unload Me
End Sub




Private Sub |fffd|bernehmen_Click()
    Wahl = 0
    If Me.OptionButton1.Value Then Wahl = 1
    If Me.OptionButton2.Value Then Wahl = 2
    If Me.OptionButton3.Value Then Wahl = 3
    If Me.OptionButton4.Value Then Wahl = 4
    If Me.OptionButton5.Value Then Wahl = 5
    
    AuswertungsSpalteSetzen Wahl
    
    Unload Me
End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

'******************************************************************'
' PS-Service (c) 2010                                              '
' Erstellt am:     24.02.2010  Dipl.-Ing. Horst Becker (K-SIE 3/3) '
' Letzte |fffd|nderung: 26.09.2012                                      '
'******************************************************************'


Private Sub Workbook_Open()
    Cells(6, ActiveCell.Column).Select          'Homeposition
    ' *** Speichern der aktiven zelle *** '
    activCell = ActiveCell.Address
    activValue = ActiveCell.Value


   Dim oBar As CommandBar
   Dim oPopUp As CommandBarPopup
   Dim oBtn As CommandBarControl
   Dim rechnung As Boolean
   
   Set oBar = Application.CommandBars("Worksheet Menu Bar")
   
   On Error Resume Next
   Application.CommandBars("Worksheet Menu Bar").Reset
   On Error GoTo 0
   
    If Cells(5, 1).Value = "Rechnung" Then
        rechnung = True
    Else
        rechnung = False
    End If
   
   
   Set oPopUp = oBar.Controls.Add(Type:=msoControlPopup, Temporary:=True)
   oPopUp.Caption = "Angebotsvergleich"
   oPopUp.Enabled = Not rechnung
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "LV formatieren"
      .TooltipText = "Format/Gruppierung/Formeln"
      .FaceId = 430
      .Style = msoButtonIconAndCaption
      .OnAction = "LV_Format"
   End With
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Angebote nach Preis sortieren"
      .TooltipText = "Nach Preis aufsteigend sortieren"
      .FaceId = 194
      .Style = msoButtonIconAndCaption
      .OnAction = "BieterSort"
   End With
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Bedarfs- und Alternativpos. aktivieren"
      .TooltipText = "Bedarfs- und Alternativpositionen aktivieren"
      .FaceId = 215
      .Style = msoButtonIconAndCaption
      .OnAction = "PreisAktiv"
   End With
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Bedarfs- und Alternativpos. deaktivieren"
      .TooltipText = "Bedarfs- und Alternativpositionen deaktivieren"
      .FaceId = 330
      .Style = msoButtonIconAndCaption
      .OnAction = "PreisDeaktiv"
   End With
   
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .BeginGroup = True
      .Caption = "Ansicht festlegen"
      .TooltipText = "Zeilen bzw. Spalten ein- / ausblenden"
      .FaceId = 1098 '439
      .Style = msoButtonIconAndCaption
      .OnAction = "AnsichtsFilter"
   End With

   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Preise farblich kennzeichnen"
      .TooltipText = "Kenzeichung f|fffd|r Minpreise, Ausrei|fffd|er und Abweichungen"
      .FaceId = 436 ' 437
      .Style = msoButtonIconAndCaption
      .OnAction = "PreiseFarblich"
   End With
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Schwerpunktfilter setzen / entfernen"
      .TooltipText = "Nur Positionen anzeigen, die dem Schwerpunktfilter entsprechen."
      .FaceId = 432
      .Style = msoButtonIconAndCaption
      .OnAction = "Schwerpunkt"
   End With



   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .BeginGroup = True
      .Caption = "Technisch i.O. setzen"
      .TooltipText = "Alle markierten Zellen mit i.O. f|fffd|llen"
      .FaceId = 161
      .Style = msoButtonIconAndCaption
      .OnAction = "TechnischIO"
   End With
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Technisch n.i.O. setzen"
      .TooltipText = "Alle markierten Zellen mit n.i.O. f|fffd|llen"
      .FaceId = 352
      .Style = msoButtonIconAndCaption
      .OnAction = "TechnischNIO"
   End With

   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Abschl|fffd|ge berechnen"
      .TooltipText = ""
      .FaceId = 435
      .Style = msoButtonIconAndCaption
      .OnAction = "Abschlaege"
   End With



   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .BeginGroup = True
      .Caption = "Export D86 (GAEB90)"
      .TooltipText = ""
      .FaceId = 271
      .Style = msoButtonIconAndCaption
      .OnAction = "ExportD86"
      If Left(Cells(5, 1).Value, 4) = "GAEB" Then
          .Enabled = True
      Else
          .Enabled = False
      End If
   End With




   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .BeginGroup = True
      .Caption = "Abrechnungsdatei erzeugen"
      .TooltipText = ""
      .FaceId = 277
      .Style = msoButtonIconAndCaption
      .OnAction = "Abrechnung"
   End With

   
   
   Set oPopUp = oBar.Controls.Add(Type:=msoControlPopup, Temporary:=True)
   oPopUp.Caption = "Abschlagsrechnung"
   oPopUp.Enabled = rechnung
   
   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .BeginGroup = True
      .Caption = "neue Abschlagsrechnung erstellen"
      .TooltipText = ""
      .FaceId = 278
      .Style = msoButtonIconAndCaption
      .OnAction = "AbschlagsRechnung"
   End With

   Set oBtn = oPopUp.Controls.Add
   With oBtn
      .Caption = "Abschl|fffd|ge berechnen"
      .TooltipText = ""
      .FaceId = 435
      .Style = msoButtonIconAndCaption
      .OnAction = "Abschlaege"
   End With



   'Set oPopUp = oBar.Controls("&?")
   'Set oBtn = oPopUp.Controls.Add(Temporary:=True)
   'With oBtn
   '   .Caption = "Impressum"
   '   .TooltipText = "Impressum"
   '   .FaceId = 1003
   '   .Style = msoButtonIconAndCaption
   '   .OnAction = "Einstellungen"
   'End With
   
   
    ' *** LV formatieren
    If Len(Worksheets(1).Cells(2, 1).Value) > 0 Then
        Call delFreieMenge
        Call LV_Format
        Call LV_Beschaffung
        Call specValueInitLogo
        Worksheets(1).Cells(2, 1).Value = ""
        
    End If
    
   

End Sub


Attribute VB_Name = "HB_ModulPS"

'***************************************************************************
'*** PS-Service:        allgemeine Funktionen    (c) 2008                ***
'*** Erstellt am:       11.01.2010   Dipl.-Ing. Horst Becker (K-SIPB-4/3)***
'*** letzte |fffd|nderung:   07.10.2015   Abrechnung Vorbelegung              ***
'***************************************************************************
Dim FileNr, SatzNr As Long


Sub logo()
                ActiveSheet.Shapes(3).Visible = False
End Sub

'**************************************************************************
'*** LV formatieren und BerechnungsFormeln generien                     ***
'**************************************************************************
Sub LV_Format()
    Application.ScreenUpdating = False
    Application.DisplayCommentIndicator = xlCommentIndicatorOnly
    DisplayAlerts = False                               ' Meldung Speichern ? unterdr|fffd|cken
    Range("B1").Value = "."                             ' keine |fffd|nderungsverfolgung
    
    zeit = Now()
    max_z = maxZ
    max_s = maxS
    
    'Sheets(1).Activate
    'Range("H6").Select
    'Range("H6").Activate
    
    
    ' *** ggf. Menue "Export D86" deaktivieren *** '
    If Left(Cells(5, 1).Value, 4) <> "GAEB" Then
        Set myCmd = CommandBars("Worksheet menu bar").Controls("Angebotsvergleich")
        myCmd.Controls("Export D86 (GAEB90)").Enabled = False
    End If
       
        
    ' *** RestLogos ausblenden *** '
    grafikName = "Grafik" & Range("G1").Value

    For i = 1 To ActiveSheet.Shapes.Count
        ' MsgBox ActiveSheet.Shapes(i).Name
        If Left(ActiveSheet.Shapes(i).Name, 6) = "Grafik" Then
            If Left(ActiveSheet.Shapes(i).Name, 10) = grafikName Then
                ActiveSheet.Shapes(i).Visible = True
            Else
                ActiveSheet.Shapes(i).Visible = False
            End If
        End If
    Next i
    
    
    ' *** Entfernen von Leerzeilen
    For Z = 6 To max_z
        If Len(Range("A" & Z).Value) = 0 Then
            Rows(Z & ":" & Z).Delete Shift:=xlDown
            max_z = max_z - 1
        End If
    Next Z

    
    
    ' *** ggf. Einf|fffd|gen einer Zeile Zwischensumme und OZ generieren *** '
    freieMenge = Range("I5").Value
    altLevel = 0
    posLastDot = 0
    textNo = 1
    preOZ = ""
    altPreOZ = ""
    lastHOZ = ""
    
    For Z = 6 To max_z
        Cells(Z, max_s + 1).Value = " "     ' Damit der Kommentartext nicht weiterl|fffd|uft
        
        oz = Range("G" & Z).Value
        ozLen = Len(oz)
        level = 0   ' OZLevel ermitteln
        For i = 1 To ozLen
            If Mid(oz, i, 1) = "." Then
                level = level + 1
                preOZ = Left(oz, i)
            End If
        Next i
        
        
        If InStr("L0123456789#", Left(Range("A" & Z).Value, 1)) = 0 Then     ' wenn keine Hierarchie
            If level < altLevel Then
                ' *** ggf. Zwischensummen generieren
                If Left(Range("A5").Value, 4) <> "GAEB" Then    ' wenn kein GAEB
                    If InStr("VHN", Left(Range("A" & Z).Value, 1)) = 0 Then     ' wenn keine Texte
                        Rows(Z & ":" & Z).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
                        Range("A" & Z).Value = level + 1
                        Range("G" & Z).Value = preOZ & "99"
                        Range("H" & Z).Value = "Zwischensumme zum Knoten"
                        
                        altPreOZ = preOZ
                        lastHOZ = preOZ & "99"
                        max_z = max_z + 1
                    End If
                End If
            Else
                preOZLen = Len(altPreOZ)
                If preOZLen > 0 Then
                    If preOZ = Left(oz, preOZLen) Then
                        Range("G" & Z).Value = preOZ & "99." & Right(oz, ozLen - preOZLen)
                    End If
                End If
            End If
            
            ' *** ggf. OZ bei Hinweistexten generieren *** '
            If InStr("VHN", Left(Range("A" & Z).Value, 1)) > 0 Then     ' wenn Texte ohne OZ
                Range("G" & Z).Value = lastHOZ & "." & Left(Range("A" & Z).Value, 1) & Right("0000" & textNo, 4)
                textNo = textNo + 1
            End If
            
            ' *** ggf. OZ von leeren Unterbeschreibungen generieren *** '
            If Len(Range("G" & Z).Value) = 0 Then     ' wenn keine OZ, dann VorOZ
                Range("G" & Z).Value = lastHOZ & ".U" & Right("0000" & textNo, 4)
                textNo = textNo + 1
            End If
        
        Else
            altPreOZ = ""
            lastHOZ = oz
            'textNo = 1
        End If
        
        altLevel = level
    Next Z
   
   
    max_z = maxZ
   
    Dim arrTyp As Variant
    arrTyp = Range("A1:A" & max_z).Value
    
   
   
    ' *** L|fffd|schen aller Formatierungen *** '
    Cells.FormatConditions.Delete               ' Formatierungen
     
     
     
    ' *** Zellen ein- bzw. ausblenden *** '
    Cells.EntireRow.Hidden = False              ' alle Zeilen einblenden
    
    
    
    ' *** Spalten ein- bzw. ausblenden *** '
    For s = 1 To max_s
        If Cells(4, s).Font.Bold Then
            Columns(s).EntireColumn.Hidden = False          ' Spalten einblenden
        Else
            Columns(s).EntireColumn.Hidden = True           ' Spalten ausblenden
        End If
    Next s
    
    
    
   '*** Farben und horizontale Linien f|fffd|r die Zeilen *** '
    no = 2
    
    For Z = 6 To max_z
        Typ = Left(arrTyp(Z, 1), 1)
        
        ' Farben setzen
        With Range(Cells(Z, 1), Cells(Z, max_s))        ' Zeile selectieren
            Select Case Typ
            Case Is = "0", "L"
                .Font.Bold = True
                .Font.ColorIndex = 2
                .Interior.Color = 6697728
                no = 2
            Case Is = "1"
                .Font.Bold = True
                .Font.ColorIndex = 2
                .Interior.Color = 6697728
                no = 2
            Case Is = "2"
                .Font.ColorIndex = 2
                .Font.Bold = False
                .Interior.Color = 8210719
                no = 2
            Case Is = "3"
                .Font.ColorIndex = 2
                .Interior.Color = 10716518
                no = 2
            Case Is = "4"
                .Font.ColorIndex = -4105
                .Interior.Color = 12758425
                no = 2
            Case Is = "5"
                .Font.ColorIndex = -4105
                .Interior.Color = 12632256
                no = 2
            Case Is = "6"
                .Font.ColorIndex = -4105
                .Interior.Color = 14671319
                no = 2
            Case Is = "7"
                .Font.ColorIndex = -4105
                .Interior.Color = 15461355
                no = 2
            Case Is = "8"
                .Font.ColorIndex = -4105
                .Interior.Color = 15791870
                no = 2
            Case Is = "9"
                .Font.ColorIndex = -4105
                .Interior.Color = 16777215      ' Wei|fffd|
                no = 2
            Case Is = "P", "S", "Z"
                .Font.ColorIndex = -4105        ' Schwarz
                .Interior.Color = 15461355
                no = no + 1
            Case Is = "O", "M", "G", "W"        ' Anthrazit
                .Font.ColorIndex = 32
                .Interior.Color = 15461355
                no = no + 1
            Case Is = "B", "A"
                .Font.ColorIndex = 16           ' Grau
                .Interior.Color = 15461355      ' Grau
                no = no + 1
            Case Is = "V", "H", "N"
                .Font.ColorIndex = 16
                .Interior.Color = 15461355      ' Grau
                '.Interior.Color = 13434879      ' Gelb
                no = no + 1
            Case Is = "#"
                no = 2
            End Select
       
            If no Mod 2 > 0 Then
                 .Interior.Color = 16777215     ' Wei|fffd|
            End If
        End With
    Next Z
    
    
    ' *** Linien vertikal zeichnen und Formeln leeren *** '
    For s = 1 To max_s
        sName = Left(Cells(4, s).Value, 4)
        If sName = "Kost" Or sName = "Best" Or sName = "Mitt" Or sName = "Komm" Then
        'If Range(Cells(1, s), Cells(1, s)).Borders(xlEdgeRight).LineStyle = xlContinuous Then
            With Range(Cells(1, s), Cells(max_z, s)).Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                If Application.Version = "14.0" Or Application.Version = "12.0" Then
                    .ThemeColor = 1
                    .TintAndShade = -0.14996795556505
                Else
                    .ColorIndex = 15
                End If
                .Weight = xlThin
            End With
        End If
    Next s
   

    
    
    
    
    ' *** Ordner, Level, ParentRow, OZ; Kalk.-, Best- und Mittelpreise *** '
    Dim arrOZ As Variant
    Dim arrLevel() As Integer
    ReDim arrLevel(1 To max_z)
    
    arrOZ = Range("G1:G" & max_z).Value
    For Z = 6 To max_z
        Typ = Left(arrTyp(Z, 1), 1)
        
        Cells(Z, 6).Value = ""
        If Z > 6 Then
            arrOZ(Z, 1) = arrOZ(Z, 1) + "."   ' f|fffd|r Vergleich nur mit Punkt
        End If
        oz = arrOZ(Z, 1)
        ozLen = Len(oz)
        
        
        ' OZLevel ermitteln und im Array speichern
        level = 0
        For i = 1 To ozLen
            If Mid(oz, i, 1) = "." Then
                level = level + 1
            End If
        Next i
        arrLevel(Z) = level
        
        
        ' ParentRow ermitteln und setzen
        If Z = 6 Then
            Cells(Z, 2).Value = 6
        Else
            For i = Z - 1 To 6 Step -1
                If arrLevel(i) < level Then                                     ' wenn kleines Level
                    If InStr("L0123456789", Left(arrTyp(i, 1), 1)) > 0 Then     ' wenn Oberordner
                        Cells(Z, 2).Value = i
                        Exit For
                    End If
                End If
            Next i
        End If
        
        
        ' Aktiv-Schalter (Haken) setzen
        Cells(Z, 5).Value = ""
        If InStr("BA", Typ) > 0 Then       ' Bedarf ohne GP
            Cells(Z, 5).Value = "s"  's,o
        End If
        If InStr("POGWSZ", Typ) > 0 Then      ' Bedarf mit GP
            Cells(Z, 5).Value = "|fffd|"  '|fffd|,x
        End If
        
        
        ' Auswertungs-Spalten
        If InStr("PGOMBAWSZ", Typ) > 0 Then      ' Bedarf mit GP
             ' *** GP f|fffd|r Kostensch|fffd|tzung berechnen *** '
             Cells(Z, 12).Value = "=I" & Z & "*K" & Z
             Cells(Z, 12).Font.Bold = True
                        
             ' *** Bestpreis berechnen (MinOhneNullWerte) *** '
             Cells(Z, 13).Value = "=Best($P" & Z & ":$" & lastChar & Z & ")"
             Cells(Z, 13).Font.ColorIndex = 55      ' blau
            
             ' *** Mittelpreis berechnen *** '
             Cells(Z, 14).Value = "=Mittel($P" & Z & ":$" & lastChar & Z & ")"
        End If
    Next Z
    
   
    ' *** Gruppierungen generieren *** '
    Rows.ClearOutline       ' Gruppierungen l|fffd|schen
    With ActiveSheet.Outline
        .AutomaticStyles = False
        .SummaryRow = xlAbove
        .SummaryColumn = xlLeft
    End With
    
    
    For Z = 5 To max_z      ' vertikale Gruppierungen
        oz = Cells(Z, 7).Value
        level = 0
    
        For i = 1 To Len(oz)
            If Mid(oz, i, 1) = "." Then
                level = level + 1
            End If
        Next i
        
        If level > 0 Then
            Rows(Z).OutlineLevel = level + 1
        End If
    Next
    
    
    
    Columns(6).OutlineLevel = 2      ' horizontale Gruppierungen
    Columns(7).OutlineLevel = 2
    Columns(11).OutlineLevel = 2
    Columns(12).OutlineLevel = 2
    Columns(14).OutlineLevel = 2
    Columns(16).OutlineLevel = 1
    For s = 16 To max_s
        cellVal = Left(Cells(5, s).Value, 4)
        'MsgBox s & "-" & cellval
        'If cellval = "freie Menge" Or cellval = "EP [EUR]" Or cellval = "GP [EUR]" Or cellval = "i.O." Then 'Or cellVal = "Textparameter" Then
        'If cellVal = "freie Menge" Or cellVal = "Textparameter" Then
            'Columns(s).OutlineLevel = 3
        'Else
            If cellVal = "GP [" Or cellVal = "i.O." Then        'Or Len(cellVal) = 0 Then
                Columns(s).OutlineLevel = 1
            Else
                Columns(s).OutlineLevel = 2
            End If
        'End If
    Next s
   
   
   
     
    ' *** Generieren der Formeln von unten *** '
    For s = 11 To max_s
        bst = BstK(s)
        
        ' Formeln l|fffd|schen
        For Z = 6 To max_z
            Typ = Left(arrTyp(Z, 1), 1)
            If Left(Cells(5, s).Value, 4) = "GP [" Then
                If InStr("L0123456789", Typ) > 0 Then           ' Hierarchieen
                    Cells(Z, s).Value = ""
                End If
            End If
        Next Z
       
       
        ' Berechnungen / Formeln :
        For Z = max_z To 6 Step -1
            Typ = Left(arrTyp(Z, 1), 1)
            Cells(Z, s).Select
            
            
            ' freie Menge
            If Left(Cells(5, s).Value, 5) = "freie" Then
                If freieMenge = 1 Then
                    If InStr("PGOMWBASZ", Typ) > 0 And Cells(Z, 9).Font.Bold Then
                        Cells(Z, s).Value = "=I" & Z
                    End If
                End If
                If Typ = "Z" Then
                    Selection.NumberFormat = "0.00%"
                Else
                    Selection.NumberFormat = "#,##0.000_ ;[Red]-#,##0.000 "
                End If
            End If
           
             
            ' EP
            If Left(Cells(5, s).Value, 4) = "EP [" Then
                If InStr("PGOMWBASZ", Typ) > 0 And splitt > 0 Then
                    If s > 16 Then
                        If splitt = 2 Then
                            Cells(Z, s).Value = "=" & BstK(s - 2) & Z & "+" & BstK(s - 1) & Z
                        End If
                        If splitt = 3 Then
                            Cells(Z, s).Value = "=" & BstK(s - 3) & Z & "+" & BstK(s - 2) & Z & "+" & BstK(s - 1) & Z
                        End If
                        If splitt = 4 Then
                            Cells(Z, s).Value = "=" & BstK(s - 4) & Z & "+" & BstK(s - 3) & Z & "+" & BstK(s - 2) & Z & "+" & BstK(s - 1) & Z
                        End If
                    End If
                End If
                Selection.NumberFormat = "#,##0.00_ ;[Red]-#,##0.00_ "
            End If
          
          
            ' GP berechnen und formatieren
            If Left(Cells(5, s).Value, 4) = "GP [" Then
                If InStr("PGOMWBASZ", Typ) > 0 And s > 15 Then         ' Position f|fffd|r Angebote
                    
                    If freieMenge = 1 Then
                        Cells(Z, s).Value = "=$" & BstK(s - 2 - splitt) & Z & "*" & BstK(s - 1) & Z
                    Else
                        Cells(Z, s).Value = "=$I" & Z & "*" & BstK(s - 1) & Z
                    End If
                    ' Formate
                    If Cells(Z, 5).Value = "|fffd|" Then               ' wenn Haken
                        Selection.NumberFormat = "#,##0.00_ ;[Red]-#,##0.00_ "
                        Selection.Font.Bold = True
                    Else
                        Selection.NumberFormat = "(#,##0.00);[Red](-#,##0.00)"
                        Selection.Font.Bold = True
                    End If
                End If
                
                
                ' Oberste Hierachie formatieren
                If InStr("0L", Typ) > 0 Then       ' LV 7 Vorgang
                    Selection.NumberFormat = "#,##0.00_ ;[Red]-#,##0.00_ "
                End If
                
                ' Hierarchieformeln generieren
                If InStr("123456789", Typ) > 0 Or Cells(Z, 5).Value = "|fffd|" Then      ' wenn Hierarchie oder Haken gesetzt
                    pRow = Cells(Z, 2).Value
                    If Len(Cells(pRow, s).Value) > 0 Then
                        Cells(pRow, s).Value = Cells(pRow, s).Formula & "+" & bst & Z
                    Else
                        Cells(pRow, s).Value = "=+" & bst & Z
                    End If
                    Selection.NumberFormat = "#,##0.00_ ;[Red]-#,##0.00_ "
                End If
            End If
            
            
            ' TP generieren
            If Left(Cells(4, s).Value, 2) = "TP" Then
                If InStr("PGOMBASZ", Typ) > 0 Then        ' Position
                    'Cells(Z, s).Value = "?"
                    
                    Cells(Z, s).Select
                    Selection.Font.Bold = True
                    Selection.Font.ColorIndex = 3        ' Rot
                    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlBetween, Formula1:="=""i.O.""", Formula2:="=""i. O."""
                    Selection.FormatConditions(1).Font.ColorIndex = 14          'Gr|fffd|n
                End If
            End If
        Next Z
    Next s
    
    
' MsgBox "Start:" & zeit & "  Ende:" & Now()
    
    Application.EnableEvents = True
    ActiveSheet.EnableSelection = xlSelection
    ActiveWindow.ScrollRow = 1
    
    Range("B1").Value = ""                             ' |fffd|nderungsverfolgung aktivieren
    'Range("H6").Select
    'sperrenBlatt
End Sub

Sub LV_Beschaffung()
    max_z = maxZ
    max_s = maxS
        
    ' Formatierungen und Farben setzen
    With Range(Cells(max_z + 2, 1), Cells(max_z + 8, max_s))        ' Zeile selectieren
        .Font.Bold = True
        .Font.ColorIndex = Cells(4, 9).Font.ColorIndex
        .Interior.Color = Cells(4, 9).Interior.Color
        .NumberFormat = "#,##0.00_ ;[Red]-#,##0.00_ "
    End With
    With Range(Cells(max_z + 2, 9), Cells(max_z + 8, 10))           ' Beschreibungs-Spalte selectieren
        .HorizontalAlignment = xlRight
    End With
    With Range(Cells(max_z + 6, 16), Cells(max_z + 7, max_s))       ' Prozentzeilen selectieren
        .NumberFormat = "0.00%"
    End With


    Range("A" & max_z + 1).Value = "#"
    Range("A" & max_z + 2).Value = "#"
    Range("A" & max_z + 3).Value = "#"
    Range("A" & max_z + 4).Value = "#"
    Range("A" & max_z + 5).Value = "#"
    Range("A" & max_z + 6).Value = "#"
    Range("A" & max_z + 7).Value = "#"
    Range("A" & max_z + 8).Value = "#"
    
    Range("J" & max_z + 2).Value = "Summe vor technischer Pr|fffd|fung / total before tecnical Approval:"
    Range("J" & max_z + 3).Value = "Differenz TP / difference ta:"
    Range("J" & max_z + 4).Value = "Summe vor Verhandlung / total before negotiation:"
    Range("J" & max_z + 5).Value = "Summe mit inaktiven Positionen:"
    Range("J" & max_z + 6).Value = "Nachlass in % / savings in %:"
    Range("J" & max_z + 7).Value = "Skonto in % / discount in %:"
    Range("J" & max_z + 8).Value = "Endpreis / final price:"

    
    For s = 15 To max_s
        If Left(Cells(5, s).Value, 4) = "GP [" Then
            bst = BstK(s)
           
            Cells(max_z + 2, s).Value = Cells(6, s).Value
            Cells(max_z + 3, s).Value = "=" & bst & 6 & "-" & bst & max_z + 2
            Cells(max_z + 4, s).Value = "=" & bst & max_z + 2 & "+" & bst & max_z + 3
            Cells(max_z + 5, s).Value = "=" & bst & max_z + 4 & "+ SumIf($E6:$E" & max_z & "," & Chr(34) & "=s" & Chr(34) & "," & bst & 6 & ":" & bst & max_z & ")"
            Cells(max_z + 6, s).Value = 0
            Cells(max_z + 7, s).Value = 0
            Cells(max_z + 8, s).Value = "=(" & bst & max_z + 4 & "-" & bst & max_z + 4 & "*" & bst & max_z + 6 & ") - (" & bst & max_z + 4 & "-" & bst & max_z + 4 & "*" & bst & max_z + 6 & ") * " & bst & max_z + 7
        End If
    Next
End Sub



Sub delFreieMenge()
    'max_z = maxZ
    max_s = maxS
    
    'noFreieMenge = False
    'For Z = 6 To max_z
    '    If InStr("PBOMGAWSZ", Left(Cells(Z, 1).Value, 1)) > 0 Then
    '        If Cells(Z, 9).Font.Bold = True Then
    '            noFreieMenge = True
    '            Exit For
    '        End If
    '    End If
    'Next Z
    
    If Range("P4").Value = "keine" Then
        For s = 11 To max_s
            If Cells(5, s).Value = "freie Menge" Then
                Columns(s).Delete
            End If
        Next

        Range("I5").Value = 0
    End If
End Sub





'**************************************************************************
'*** BieterSort         Sortiert die Bieter nach dem Gesamtpreis        ***
'**************************************************************************
Private Sub BieterSort()
    Application.EnableEvents = False
    ' F|fffd|llen des Angebotspreises aller Bieter
    max_z = maxZ
    max_s = maxS
    max_b = maxB

    
    ReDim gPreis(max_b) As Double
    ReDim sortNr(max_b) As Long
    b = 0
    For s = 15 To max_s
        If Left(Cells(5, s).Value, 4) = "GP [" Then
           b = b + 1
           sortNr(b) = b
           gPreis(b) = Cells(6, s).Value
        End If
    Next s


    ' Sotieren der Bieter nach Preis
    For i = 1 To max_b
        For j = 1 To max_b
            If gPreis(i) < gPreis(j) Then
                tmp = gPreis(i)
                gPreis(i) = gPreis(j)
                gPreis(j) = tmp
                
                itmp = sortNr(i)
                sortNr(i) = sortNr(j)
                sortNr(j) = itmp
            End If
        Next
    Next
    
 
    ' Schreiben der Sortierreihenfolge
    Z = max_z + 12
    
    For s = 1 To 15
        Cells(Z, s).Value = s
    Next s
    
    s = 15
    spalten = splitt + 4 + Range("I5").Value
    
    For b = 1 To max_b
        s = sortNr(b) * spalten + 15
        sNr = b * spalten + 15
    
        Cells(Z - 1, s - 2).Value = gPreis(b)
        
        If Range("I5").Value = 1 Then
            Cells(Z, s - 4 - splitt).Value = sNr - 4 - splitt
        End If
        If splitt > 3 Then
            Cells(Z, s - 7).Value = sNr - 7
        End If
        If splitt > 2 Then
            Cells(Z, s - 6).Value = sNr - 6
        End If
        If splitt > 1 Then
            Cells(Z, s - 5).Value = sNr - 5
            Cells(Z, s - 4).Value = sNr - 4
        End If
        Cells(Z, s - 3).Value = sNr - 3
        Cells(Z, s - 2).Value = sNr - 2
        Cells(Z, s - 1).Value = sNr - 1
        Cells(Z, s).Value = sNr
    Next b
    
     
 
     
    ' Sortieren des ganzen Preisspiegels
    Cells.ClearOutline       ' Gruppierungen m|fffd|ssen gel|fffd|scht werden!
    Cells.Sort Key1:=Range("A" & Z), Order1:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlLeftToRight, DataOption1:=xlSortNormal
    
    Rows(Z).Delete Shift:=xlUp
    Rows(Z - 1).Delete Shift:=xlUp
    
    
    LV_Format
    Application.EnableEvents = True
End Sub




'**************************************************************************
'*** PreisAktiv()       Aktiviert alle Bedarfs- und Alternativpos.      ***
'**************************************************************************
Private Sub PreisAktiv()
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    max_z = maxZ
    max_s = maxS
    
    Dim arrAktiv As Variant
    arrAktiv = Range("E1:E" & max_z).Value
    
    For Z = 6 To max_z
        If arrAktiv(Z, 1) = "s" Then
            Range("E" & Z).Value = "|fffd|"
            Unterstrich Range("E" & Z)
            
            pRow = Range("B" & Z).Value
            If Not IsEmpty(pRow) Then
                For s = 10 To max_s
                    If Left(Cells(5, s).Value, 4) = "GP [" Then
                        Cells(Z, s).NumberFormat = "#,##0.00_ ;[Red]-#,##0.00_ "
                        Cells(pRow, s).Select
                        bst = BstK(s)
                    
                        If Len(Selection.Formula) > 0 Then
                            Selection.Formula = Selection.Formula & "+" & bst & Z
                        Else
                            Selection.Formula = "=+" & bst & Z
                        End If
                        
                    End If
                Next s
            End If
            
        End If
    Next Z
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub





'**************************************************************************
'*** PreisDeaktiv()       Deaktiviert alle Bedarfs- und Alternativpos.  ***
'**************************************************************************
Private Sub PreisDeaktiv()
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    max_z = maxZ
    max_s = maxS
    
    For Z = 6 To max_z
        Typ = Left(Range("A" & Z).Value, 1)
        If InStr("BA", Typ) > 0 Then      ' Bedarf w|fffd|hlbar
            Range("E" & Z).Value = "s"
            Unterstrich Range("E" & Z)
            
            pRow = Range("B" & Z).Value
            If Not IsEmpty(pRow) Then
                For s = 10 To max_s
                    If Left(Cells(5, s).Value, 4) = "GP [" Then
                        Cells(Z, s).NumberFormat = "(#,##0.00);[Red](-#,##0.00)"    'Chr(34) & "(#.##0,00)|fffd|" & Chr(34)
                        Cells(pRow, s).Select
                        partFormel = "+" & BstK(s) & Z & "+"
                        formel = Selection.Formula & "+"
                        formel = WorksheetFunction.Substitute(formel, partFormel, "+")
                        If Right(formel, 1) = "+" Then
                            formel = Left(formel, Len(formel) - 1)
                        End If
                        If Right(formel, 1) = "=" Then
                            formel = ""
                        End If
                        Selection.Formula = formel
                     End If
                 Next s
            End If
                
        End If
    Next Z
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub








'**************************************************************************
'*** Auswertungsspalte  |fffd|ndert die Inhalte der Spalte                   ***
'**************************************************************************
Private Sub AuswertungsSpalte()
    Darstellungsspalte.Show
End Sub

Public Sub AuswertungsSpalteSetzen(Wahl)
    Application.ScreenUpdating = False
    max_z = maxZ
    max_s = maxS
    
    Dim Bereich As Variant
    aktSName = Cells(2, 1).Value        ' Holen des aktuellen Spaltennamens
    Darstellung = ""
     
    
    ' f|fffd|r alle Spalten
    For s = 11 To max_s
        If Left(aktSName, 2) = Left(Cells(4, s).Value, 2) Then
            Bereich = Range(Cells(1, s), Cells(max_z, s))
            
            If Wahl = 1 Then
                Darstellung = "TP "
                Bereich(5, 1) = "i.O. "
                Columns(s).ColumnWidth = 2.5
                Columns(s).NumberFormat = "@"
            End If
            If Wahl = 2 Then
                Darstellung = "proz. Abw."
                Bereich(5, 1) = "[ % ]"
                Columns(s).ColumnWidth = 9
                Columns(s).NumberFormat = "0.00%"
            End If
            If Wahl = 3 Then
                Darstellung = "Differenz"
                Bereich(5, 1) = "[EUR]"
                Columns(s).ColumnWidth = 14
                Columns(s).NumberFormat = "#,##0.00_);[Red](#,##0.00)"
            End If
            If Wahl = 4 Then
                Darstellung = "Nachl|fffd|sse"
                Bereich(5, 1) = "[ % ]"
                Columns(s).ColumnWidth = 9
                Columns(s).NumberFormat = "0.00%"
            End If
            If Wahl = 5 Then
                Darstellung = "|fffd|nderung"
                Bereich(5, 1) = "Diff."
                Columns(s).ColumnWidth = 14
                Columns(s).NumberFormat = "General"
            End If
            Bereich(4, 1) = Darstellung
            
            
            
            
            
            For Z = 6 To max_z
                Typ = UCase(Left(Cells(Z, 1).Value, 1) & "")
                'Cells(z, s).Select
                                
                If aktSName = "TP" Then
                    ' ggf. alten Inhalt im Kommentar speichern
                    If Not IsEmpty(Bereich(Z, 1)) Then
                        If InStr("NPBOMSGAW", Typ) > 0 And Bereich(Z, 1) <> "?" Then
                            updateComment Z, s, Bereich(Z, 1), "[" & aktSName & "]"
                        End If
                    End If
                End If
                    
                
                
                If Wahl = 1 Then                            ' TP
                    ' ggf. Inhalt aus Kommentar holen
                    If InStr("NPBOMGAWS", Typ) > 0 Then
                        Bereich(Z, 1) = getComment(Z, s, "[TP]")
                        If Len(Trim(Bereich(Z, 1))) = 0 Then
                            Bereich(Z, 1) = "?"              ' ggf. Zelle vorbelegen
                        End If
                    Else
                       Bereich(Z, 1) = ""                    ' ggf. Zelle l|fffd|schen
                    End If
                End If
                
                If Wahl = 2 Then
                    If InStr("NPBOMSGAWL123456789", Typ) > 0 Then
                        If Cells(Z, s - 1).Value <> 0 Then
                            Bereich(Z, 1) = "=" & BstK(s - 1) & Z & " / I" & Z
                        End If
                    End If
                End If
                
                If Wahl = 3 Then
                    If InStr("NPBOMSGAWL123456789", Typ) > 0 Then
                        If Cells(Z, s - 1).Value <> 0 Then
                            Bereich(Z, 1) = "=" & BstK(s - 1) & Z & " - I" & Z
                        End If
                    End If
                End If
            Next Z
            
            Range(Cells(1, s), Cells(max_z, s)) = Bereich
        End If
    Next s
    
    
    Cells(2, 1).Value = Darstellung
    Application.ScreenUpdating = True
    ' MsgBox ZFilter & " - " & SFilter
    Cells(1, 1).Select          'HomepositionEnd Sub
End Sub








'**************************************************************************
'*** AusblendungssFilter    Blendet Zeilen bzw. Spalten aus             ***
'**************************************************************************
Public Sub AnsichtsFilter()
    AusblendungssFilter.Show
End Sub

Public Sub AnsichtsFilterSetzen(ZFilter, SFilter)
    Application.ScreenUpdating = False
    max_z = maxZ
    
    ' f|fffd|r alle Zeilen
    Cells.EntireRow.Hidden = False      ' alle einblenden
    For Z = 6 To max_z
        If InStr(ZFilter, Left(Cells(Z, 1).Value, 1)) > 0 Then Rows(Z).EntireRow.Hidden = True
    Next Z
    
    ' f|fffd|r alle Spalten
    For Each col In Worksheets(1).Columns
        s = col.Column
        ausblenden = False
        
        If InStr(SFilter, "T") > 0 And s = 1 Then ausblenden = True
        If InStr(SFilter, "K") > 0 And s = 11 Then ausblenden = True
        If InStr(SFilter, "K") > 0 And s = 12 Then ausblenden = True
        If InStr(SFilter, "M") > 0 And s = 13 Then ausblenden = True
        If InStr(SFilter, "B") > 0 And s = 14 Then ausblenden = True
        If InStr(SFilter, "F") > 0 And s > 15 And Left(Cells(5, s).Value, 1) = "f" Then ausblenden = True
        If InStr(SFilter, "S") > 0 And s > 15 And InStr("fEGiT", Left(Cells(5, s).Value, 1)) = 0 Then ausblenden = True
        If InStr(SFilter, "E") > 0 And s > 15 And Left(Cells(5, s).Value, 1) = "E" Then ausblenden = True
        If InStr(SFilter, "G") > 0 And s > 15 And Left(Cells(5, s).Value, 1) = "G" Then ausblenden = True
        If InStr(SFilter, "P") > 0 And s > 15 And Left(Cells(5, s).Value, 1) = "i" Then ausblenden = True
        If InStr(SFilter, "C") > 0 And s > 15 And Left(Cells(5, s).Value, 1) = "T" Then ausblenden = True
        
        ' Immer ausblenden
        If s = 2 Then ausblenden = True
        If s = 3 Then ausblenden = True
        If s = 4 Then ausblenden = True
        If Left(Cells(4, s).Value, 5) = "Abwei" Then ausblenden = True
        
        col.EntireColumn.Hidden = ausblenden
    Next col
    
    ' MsgBox ZFilter & " - " & SFilter
    Cells(6, ActiveCell.Column).Select          'Homeposition
    Application.ScreenUpdating = True
End Sub




'**************************************************************************
'*** Abweichungen    Kennzeichnet Preise farblich  Ausreiser etc.       ***
'**************************************************************************
Private Sub PreiseFarblich()
    Abweichungen.Show
End Sub


Public Sub AbweichungenKennzeichnen()
    Application.ScreenUpdating = False
    max_z = maxZ
    max_s = maxS
    
    Dim dMin, dMittel, Abweichung1, Abweichung2, Abweichung3, Abweichung4 As Double
    Dim FCNr As Integer
    Abweichung2 = Abweichungen.Abweichung2.Text
    Abweichung3 = Abweichungen.Abweichung3.Text
    Abweichung4 = Abweichungen.Abweichung4.Text


    For Z = 6 To max_z
        ' Alle Excelzeilen durchlaufen und Abweichung setzen
        dMin = Cells(Z, 13).Value
        dMittel = Cells(Z, 14).Value
        If dMin <> 0 Then
            For s = 16 To max_s
                If Left(Cells(5, s).Value, 4) = "EP [" Then
                    Cells(Z, s).Select
                    Selection.FormatConditions.Delete
                
                    If Abweichungen.Auswahl.Value Then
                        ' Bedingte Formatierungen Best ist gleich
                        If Abweichungen.CheckBox1.Value Then
                            formel = "=$M" & Z
                            Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:=formel
                            Selection.FormatConditions(1).Font.ColorIndex = 55           ' Blau
                            FCNr = 2
                        Else
                             FCNr = 1
                        End If
                        ' Bedingte Formatierungen EP + Prozent gr|fffd||fffd|er Best
                        If Abweichungen.CheckBox2.Value Then
                            formel = "=$M" & Z & " * 1," & Abweichung2
                            Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlGreater, Formula1:=formel
                            Selection.FormatConditions(FCNr).Interior.ColorIndex = 36   ' Hellgelb
                        End If
                    End If
               End If
               
               If Left(Cells(5, s).Value, 4) = "GP [" Then
                    Cells(Z, s).Select
                    Selection.FormatConditions.Delete
                    
                    If Abweichungen.Auswahl.Value Then
                        ' Bedingte Formatierungen GP - Prozente kleiner Mittel
                        If Abweichungen.CheckBox3.Value Then
                            formel = "=$N" & Z & " * $I" & Z & " * (1-0," & Abweichung3 & ")"
                            Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlLess, Formula1:=formel
                            Selection.FormatConditions(1).Interior.ColorIndex = 35         'Gr|fffd|n
                            FCNr = 2
                        Else
                            FCNr = 1
                        End If
                        ' Bedingte Formatierungen GP + Prozente gr|fffd||fffd|er Mittel
                        If Abweichungen.CheckBox4.Value Then
                            formel = "=$N" & Z & " * $I" & Z & " * 1," & Abweichung4
                            Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlGreater, Formula1:=formel
                            Selection.FormatConditions(FCNr).Interior.ColorIndex = 40       'Orange
                        End If
                    End If
               End If
            Next s
        End If
    Next Z
    
        
    Cells(6, ActiveCell.Column).Select          'Homeposition
    Application.ScreenUpdating = True
End Sub






'**************************************************************************
'*** Schwerpunktfilter    Zeigt nur Positionen mit hohen Preisen        ***
'**************************************************************************
Private Sub Schwerpunkt()
    Schwerpunktfilter.Show
End Sub
    
    
    
Public Sub SchwerpunkteSetzen(SchwPkt, Bieter1, Abweichung)
    Application.ScreenUpdating = False
    max_z = maxZ
    max_s = maxS
    
    Dim SumSchwPkt As Double
    SumSchwPkt = SchwPkt
    Abweichung = 1 + Abweichung / 100
    
    If Bieter1 Then
        max_sp = 20 + splitt
    Else
        max_sp = max_s
    End If
    
    
    If SumSchwPkt = 0 Then
        Rows.Hidden = False                                 ' alle Zeilen einblenden
    Else
        Rows("6:" & max_z).EntireRow.Hidden = True          ' alle Zeilen ausblenden

        For Z = 6 To max_z
            If InStr("PBOMGAWSZ", Left(Cells(Z, 1).Value, 1)) > 0 Then
                For s = 16 To max_sp
                    If Left(Cells(5, s).Value, 4) = "EP [" Then
                        If IsNumeric(Cells(Z, s).Value) And IsNumeric(Cells(Z, 13).Value) Then
                            If Bieter1 Then
                                If Cells(Z, s).Value > SumSchwPkt And Cells(Z, s).Value > (Cells(Z, 13).Value * Abweichung) Then
                                    Rows(Z & ":" & Z).EntireRow.Hidden = False    ' Zeile einblenden
                                End If
                            Else
                                If Cells(Z, s).Value > SumSchwPkt Then
                                    Rows(Z & ":" & Z).EntireRow.Hidden = False    ' Zeile einblenden
                                End If
                            End If
                        End If
                    End If
                Next s
            End If
        Next Z
    End If
    
    Cells(6, ActiveCell.Column).Select          'Homeposition
    Application.ScreenUpdating = True
End Sub




'**************************************************************************
'*** TechnischIO()          Setzt "i.O." in die TP-Spalte               ***
'**************************************************************************
Private Sub TechnischIO()
    Dim rng As Range

    For Each rng In Selection.Cells
        If IsEmpty(rng) = False Then
            If Not IsEmpty(Cells(rng.Cells.Row, 1).Value) Then
                If Left(rng.Value, 1) = "?" Or rng.Value = "n.i.O." Then
                    rng.Value = "i.O."
                End If
             End If
         End If
    Next rng
End Sub



'**************************************************************************
'*** TechnischNIO()          Setzt "n. i.O." in die TP-Spalte           ***
'**************************************************************************
Private Sub TechnischNIO()
    Dim rng As Range

    For Each rng In Selection.Cells
        If IsEmpty(rng) = False Then
            If Not IsEmpty(Cells(rng.Cells.Row, 1).Value) Then
                If Left(rng.Value, 1) = "?" Or rng.Value = "i.O." Then
                    If rng.Row > 5 Then
                        rng.Value = "n.i.O."
                    End If
                End If
             End If
         End If
    Next rng
End Sub







'**************************************************************************
'*** Abschlaege()         Berechnet Abschl|fffd|ge auf Werte (nicht Formeln) ***
'**************************************************************************
Private Sub Abschlaege()    ' fertig ggf. auf Position und EP bzw EP-Splittung beschr|fffd|nken
    Application.EnableEvents = False
    Dim Abschlag As Double
    Dim rng As Range
    Dim cmt As Comment

    Eingabe = InputBox("Bitte geben Sie die prozentualen Abschlag ein: " + Chr(10) + "Die Zahl 3 zieht z.B.: 3% Skonto ab.", "Abschl|fffd|ge berechnen", 3, 300, 300)
    If IsNumeric(Eingabe) Then
        Abschlag = Eingabe

        For Each rng In Selection.Cells
            If IsEmpty(rng) = False Then
                If IsNumeric(rng) Then
                    If rng.HasFormula = False Then
                        If Not IsEmpty(Cells(rng.Cells.Row, 1).Value) Then
                            Set cmt = rng.Comment
                            
                            If Len(Trim(rng.Value)) > 0 Then
                                Text = "alter Wert: " & rng.Value
                                If cmt Is Nothing Then
                                    rng.AddComment (Text)
                                    rng.Comment.Shape.TextFrame.AutoSize = True
                                Else
                                    cmt.Text (cmt.Text & Chr(10) & Text)
                                    cmt.Shape.TextFrame.AutoSize = True
                                End If
                                    
                                Unterstrich rng
                            End If
                            
                            rng.Value = WorksheetFunction.Round(rng.Value - rng.Value * Abschlag / 100, 4)
                        End If
                    End If
                End If
            End If
        Next rng
    End If
    Application.EnableEvents = True
End Sub




'***************************************************************************
'*** ExportD86()   Generiert eine D86 nach GAEB90                        ***
'***************************************************************************
Private Sub ExportD86()
    Dim BieterNr As Integer
    
    Eingabe = InputBox("Bitte geben Sie die lfd. Bieter-Nr. ein. " + Chr(10) + "F|fffd|r den ersten Bieter ist dies die Zahl 1", "Bieter ausw|fffd|hlen", 1, 300, 300)
    If IsNumeric(Eingabe) Then
        Antwort = MsgBox("Inaktive Positionen mit generieren?", vbYesNo, "Frage")   ' Meldung anzeigen.
        
        BieterNr = Eingabe
        OZMaske = Cells(5, 7).Value
        freieMenge = Range("I5").Value
        spalten = splitt + 4 + freieMenge
        
        Z = 6
        s = 13 + BieterNr * spalten
        max_z = maxZ
        max_s = maxS
        max_b = maxB
        
        Projekt = Cells(2, 8).Value
        Auftraggeber = "Volkswagen AG"    ' Cells(2, 9).Value
        RequestID = WorksheetFunction.Substitute(Cells(3, 8).Value, " ", "")
        Bieter = onlyBST(Cells(4, s).Value)
        RFQPID = BieterNr
        LV = Cells(6, 8).Value
   
        SatzNr = 0
        AnzahlPos = 0
        level = 0
        altLevel = 0
        oz = ""
        altOZ = ""
        Kopf = True
        
        
        GOZ = " "
        TOZ = " "
        BOZ = " "
        AOZ = " "
        POZ = " "
    
        ' OZMaske auswerten
        OZG = 0
        OZT = 0
        OZB = 0
        OZA = 0
        OZP = 0
        OZI = 0

        For i = 1 To 9                      'Zuordnen des OZ-Schl|fffd|ssels
            If Mid(OZMaske, i, 1) = "1" Then    'Gewerk
                OZG = OZG + 1
            End If
            If Mid(OZMaske, i, 1) = "2" Then    'Titel
                OZT = OZT + 1
            End If
            If Mid(OZMaske, i, 1) = "3" Then    'Bereich
                OZB = OZB + 1
            End If
            If Mid(OZMaske, i, 1) = "4" Then    'Abschnitt
                OZA = OZA + 1
            End If
            If Mid(OZMaske, i, 1) = "P" Then    'Position
                OZP = OZP + 1
            End If
            If Mid(OZMaske, i, 1) = "I" Or Mid(OZMaske, i, 1) = "0" Then    'Index
                OZI = OZI + 1
            End If
        Next

        'If OZT = 0 Then                          'keine 22 , dann 11 = Titel
        '    OZT = OZG
        '    OZG = 0
        '    GOZ = ""
        'End If

    
    
        ' D86 Datei anlegen
        datei = ActiveWorkbook.Path & "\" & RequestID & "_" & Bieter & ".D86"
        FileNr = FreeFile
        Open datei For Output As FileNr
    
        Application.ScreenUpdating = False

    
        ' Alle Excelzeilen durchlaufen
        For Z = 7 To max_z
            Txt = ""
            PosTyptext = Cells(Z, 1).Value
            PosTyp = Left(PosTyptext, 1)
            oz = WorksheetFunction.Substitute(Cells(Z, 7).Value, ".", "")
            oz = Left(oz & "         ", 9)
        
        
            If Kopf And PosTyp <> "V" Then
                Kopf = False
                
                'Er|fffd|ffnungssatz                                             Verg.- Nr.                                             DV.Nr.
                GAEB_Zeile "00        86L" & Left(RequestID & "               ", 15) & Left(RFQPID & "        ", 8) & Space(26) & OZMaske
                'Information Leistungsverzeichnis (40)
                GAEB_Zeile "01" + Left(LV + Space(40), 40) & Format(Date, "dd.mm.yy")
                '+(Convert(char(6),@heute,104)+Substring(Convert(char(10),@heute,104),9,2) +  Convert(char(6),@RFQSubmission,104) + Substring(Convert(varchar(10),  @RFQSubmission,104),9,2)  + Convert(char(5),@RFQSubmission,114)
                'Information Projekt (60)
                GAEB_Zeile "02" + Projekt
                'Information Auftraggeber (60)
                GAEB_Zeile "03" + Auftraggeber
                'Information Auftragnehmer (60)
                GAEB_Zeile "04" + Bieter
                'Trennung Lieferung   /  Montage
                If splitt = 2 Then
                    GAEB_Zeile "062" & "              " & Left(Cells(5, s - 3).Value + "              ", 14) & Left(Cells(5, s - 2).Value & "              ", 14)
                End If
                If splitt = 3 Then
                    GAEB_Zeile "063" & "              " & Left(Cells(5, s - 4).Value + "              ", 14) & Left(Cells(5, s - 3).Value & "              ", 14) & Left(Cells(5, s - 2).Value & "              ", 14)
                End If
                If splitt = 4 Then
                    GAEB_Zeile "064" & "              " & Left(Cells(5, s - 5).Value + "              ", 14) & Left(Cells(5, s - 4).Value & "              ", 14) & Left(Cells(5, s - 3).Value & "              ", 14) & Left(Cells(5, s - 2).Value & "              ", 14)
                End If
                'W|fffd|hrung (evtl. PlacingPartnerW|fffd|hrung vorgeben)
                GAEB_Zeile "08" & Left("EUR   ", 6) & "Euro"
            End If
        
        
            Select Case PosTyp
            Case Is = "V"       ' ZTV Technische Vorbemerkungen
                If Not Cells(Z, 8).Comment Is Nothing Then                      ' kein Kommentar vorhanden
                    GAEB_Zeile "T0"
                    ' Langtext generieren (72 Zeichen lang)
                    GAEB_Langtext "T1", 73, Cells(Z, 8).Comment.Text, ""
                    GAEB_Zeile "T9"
                End If
        
      
            Case Is = "1", "2", "3", "4"       ' Hierarchie
                level = PosTyp
                If altLevel >= level Then
                    'MsgBox ("altLevel=" & altLevel & "-Level=" & Level)
                    If altLevel > 3 Then
                       GAEB_Zeile "31" & Left(altOZ, OZG + OZT + OZB + OZA)
                    End If
                    If altLevel > 2 And level < 4 Then
                       GAEB_Zeile "31" & Left(altOZ, OZG + OZT + OZB)
                    End If
                    If altLevel > 1 And level < 3 Then
                       GAEB_Zeile "31" & Left(altOZ, OZG + OZT)
                    End If
                    If altLevel > 0 And level < 2 Then
                       GAEB_Zeile "31" & Left(altOZ, OZG)
                    End If
                End If
                
              
               
                
                GAEB_Zeile "11" & oz & "N    " & Mid(Cells(Z, 1).Value, 4)
                ' ggf. mehrere Zeilen (max. 2)  Kurztext (40 Zeichen lang)
                GAEB_Langtext "12", 40, Cells(Z, 8).Value & Chr(10), ""
                
                altLevel = level
                altOZ = oz
      
       
       
            Case Is = "H"       ' Hinweistexte
                If Not Cells(Z, 8).Comment Is Nothing Then                      ' kein Kommentar vorhanden
                    GAEB_Zeile "20"
                    ' Langtext generieren (55 Zeichen lang)
                    GAEB_Langtext "26   ", 55, Cells(Z, 8).Comment.Text, ""
                End If
       
       
            Case Is = "P", "S", "B", "M", "A", "G", "O"    ' Positionen
                If Cells(Z, 5).Value = "|fffd|" Or Antwort = vbYes Then   'nur wenn Aktiv oder Antwort = Ja
                    AnzahlPos = AnzahlPos + 1
                    
                    GaebType = "NNN"
                    If Cells(Z, 5).Value = "|fffd|" Then     ' Haken
                        GaebType = IIf(PosTyp = "P", "NNN", GaebType)
                        GaebType = IIf(PosTyp = "S", "SNN", GaebType)
                        GaebType = IIf(PosTyp = "B", "NMN", GaebType)
                        GaebType = IIf(PosTyp = "M", "NMN", GaebType)
                        GaebType = IIf(PosTyp = "A", "GNN", GaebType)
                        GaebType = IIf(PosTyp = "G", "GNN", GaebType)
                        GaebType = IIf(PosTyp = "O", "NMN", GaebType)
                    Else                                ' Raute
                        GaebType = IIf(PosTyp = "P", "NEN", GaebType)
                        GaebType = IIf(PosTyp = "S", "SEN", GaebType)
                        GaebType = IIf(PosTyp = "B", "NEN", GaebType)
                        GaebType = IIf(PosTyp = "M", "NEN", GaebType)
                        GaebType = IIf(PosTyp = "A", "ANN", GaebType)
                        GaebType = IIf(PosTyp = "G", "ANN", GaebType)
                        GaebType = IIf(PosTyp = "O", "NEN", GaebType)
                   End If
                    
                    If freieMenge = 1 Then
                        menge = Cells(Z, s - splitt - 2).Value
                    Else
                        menge = Cells(Z, 9).Value
                    End If
                    Einheit = Cells(Z, 10).Value
                    If splitt > 1 Then
                        If UCase(Einheit) = "PSCH" Or UCase(Einheit) = "STD" Or UCase(Einheit) = "H" Or UCase(Einheit) = "MIN" Or UCase(Einheit) = "TAGE" Or UCase(Einheit) = "%" Then
                            UPSplit = " "
                        Else
                            UPSplit = "X"
                        End If
                        EP1 = Cells(Z, s - splitt - 1).Value
                        EP2 = Cells(Z, s - splitt - 0).Value
                        EP3 = Cells(Z, s - splitt + 1).Value
                        EP4 = Cells(Z, s - splitt + 2).Value
                        EP = Cells(Z, s - 1).Value
                        GP = Cells(Z, s - 0).Value
                    Else
                        UPSplit = " "
                        EP1 = 0
                        EP2 = 0
                        EP3 = 0
                        EP4 = 0
                        EP = Cells(Z, s - 1).Value
                        GP = Cells(Z, s - 0).Value
                    End If
                    menge = IIf(IsNumeric(menge), menge, 0) * 1000
                    EP1 = IIf(IsNumeric(EP1), Abs(EP1), 0) * 100
                    EP2 = IIf(IsNumeric(EP2), Abs(EP2), 0) * 100
                    EP3 = IIf(IsNumeric(EP3), Abs(EP3), 0) * 100
                    EP4 = IIf(IsNumeric(EP4), Abs(EP4), 0) * 100
                    EP = IIf(IsNumeric(EP), EP, 0) * 1000
                    GP = IIf(IsNumeric(GP), GP, 0) * 100
                               
                    ' F|fffd|hrungszeile
                    GAEB_Zeile "21" & oz & GaebType & "    " & UPSplit & "   " & IIf(menge < 0, "-", " ") & Right("00000000000" & Abs(menge), 11) & Einheit
                    ' Einzel und Gesamtpreise
                    GAEB_Zeile "23" & oz & IIf(EP < 0, "-", " ") & Right("00000000000" & Abs(EP), 11) & IIf(GP < 0, "-", " ") & Right("0000000000000" & Abs(GP), 12)
                    ' Splittpreise
                    If UPSplit = "X" Then
                        If splitt = 2 Then
                            GAEB_Zeile "30          " & Right("0000000000" & EP1, 10) & Right("0000000000" & EP2, 10)
                        End If
                        If splitt = 3 Then
                            GAEB_Zeile "30          " & Right("0000000000" & EP1, 10) & Right("0000000000" & EP2, 10) & Right("0000000000" & EP3, 10)
                        End If
                        If splitt = 4 Then
                            GAEB_Zeile "30          " & Right("0000000000" & EP1, 10) & Right("0000000000" & EP2, 10) & Right("0000000000" & EP3, 10) & Right("0000000000" & EP4, 10)
                        End If
                    End If
                    ' ggf. zwei  Zeilen Kurztext  (max. 2)  Kurztext (72 Zeichen lang)
                    If Len(Cells(Z, 8).Value) > 1 Then
                        GAEB_Langtext "25", 72, Cells(Z, 8).Value & Chr(10), ""
                    Else
                        GAEB_Langtext "25", 72, "leere Position" & Chr(10), ""
                    End If
                    ' Positionslangtext (55 Zeichen lang)  -- sp|fffd|ter Texterg|fffd|nzungen ersetzen
                
                    'Set cmt = Cells(Z, s + 1).Comment                           ' keine Texterg|fffd|nzungen
                    If Not Cells(Z, 8).Comment Is Nothing Then
                        GAEB_Langtext "26   ", 55, Cells(Z, 8).Comment.Text, ""
                    End If
                End If
 
        
            Case Is = "S"           ' Stundenlohn
            
            Case Is = "Z"           ' Zuschl|fffd|ge
        
            End Select
        Next Z
    
    
        ' Ende Titel, Gewerk und Abschlu|fffd|satz setzen
        If altLevel > 3 Then
             GAEB_Zeile "31" & Left(altOZ, OZG + OZT + OZB + OZA)
        End If
        If altLevel > 2 Then
             GAEB_Zeile "31" & Left(altOZ, OZG + OZT + OZB)
        End If
        If altLevel > 1 Then
             GAEB_Zeile "31" & Left(altOZ, OZG + OZT)
        End If
        If altLevel > 0 Then
             GAEB_Zeile "31" & Left(altOZ, OZG)
        End If

        
        
        GAEB_Zeile "99" + Space(67) + Right("0000" & AnzahlPos, 5)
    
    
        Close
        
        Application.ScreenUpdating = True
    End If
End Sub


Private Sub GAEB_Zeile(Text)
    SatzNr = SatzNr + 1
    StrNr = LTrim(RTrim(SatzNr & " "))
    
    ' Umwandeln in DOS-Codepage
    textLen = Len(Text)
    ZeilText = ""
    
    For i = 1 To textLen
        bst = Mid(Text, i, 1)
        
        Select Case bst
        Case Is = "|fffd|"
            bst = Chr(142)
        Case Is = "|fffd|"
            bst = Chr(132)
        Case Is = "|fffd|"
            bst = Chr(153)
        Case Is = "|fffd|"
            bst = Chr(148)
        Case Is = "|fffd|"
            bst = Chr(154)
        Case Is = "|fffd|"
            bst = Chr(129)
        Case Is = "|fffd|"
            bst = Chr(225)
        Case Is = "|fffd|"
            bst = Chr(253)
        Case Is = "|fffd|"
            bst = Chr(252)
        End Select
            
        ZeilText = ZeilText + bst
    Next i
    
    
    ZeilText = Left(ZeilText + Space(74), 74) & Left("00000", 6 - Len(StrNr)) + StrNr
    
    Print #FileNr, Left(ZeilText, 80)
End Sub
Private Sub GAEB_Langtext(ZA, SatzLen, Text, AddText)
    Dim zeile As String
    Dim pos As Integer
    
    textLen = Len(Text)
    zeilLen = 0
    zeile = ""
    
'    On Error GoTo ErrorHandler    ' Fehlerbehandlung aktivieren.
    
    For pos = 1 To textLen
        zeilLen = zeilLen + 1
        bst = Mid(Text, pos, 1)
        
        If bst = Chr(10) Then      ' Zeilenumbruch char(10)
            GAEB_Zeile ZA & zeile
            zeile = ""
            zeilLen = 0
        Else
            zeile = zeile + bst
        End If
    
        
        If zeilLen = SatzLen Then     ' Zeilenl|fffd|nge erreicht
            GAEB_Zeile ZA & zeile
            zeile = ""
            zeilLen = 0
        End If
    Next pos
    
'Exit Sub        ' Vor Fehlerbehandlung beenden.
'ErrorHandler:    ' Fehlerbehandlungsroutine.
'        GAEB_Zeile ZA & zeile
End Sub


Private Sub GAEB_Langtext_alt(ZA, SatzLen, Text, AddText)
            textLen = Len(Text)
            Suche = ""
            pos = 0
            
            For i = 1 To textLen
                pos = pos + 1
                bst = Mid(Text, pos, 1)
                
                If bst = " " Then      ' letztes Leerzeichen ermitteln
                     PosLZ = pos
                End If

                
                If bst = "." And pos < textLen - 2 Then     ' "..." -> Textparameter vorhanden?
                   If Mid(Text, pos, 3) = "..." Then        'Textparameter
                        posLF = InStr(Text, Chr(10))
                        If posLF = 0 Then
                            posLF = Len(Text)
                        End If
                        
                        SuchText = Mid(Text, 1, pos - 1)
                        PosAddText = InStr(AddText, SuchText)
                        
                        If PosAddText > 0 Then              'Textparameter vorhanden
                            PosLFAddText = InStr(Mid(AddText, PosAddText), Chr(10)) - 1
                            If PosLFAddText = -1 Then
                                PosLFAddText = SatzLen
                            End If
                            'AddText = Mid(AddText, PosAddText, PosLFAddText - PosAddText)
                            GAEB_Zeile ZA & Left(Mid(AddText, PosAddText, PosLFAddText), SatzLen)
                        Else                                'vorhandenen Text ersetzen
'GAEB_Zeile "BST."
                            GAEB_Zeile ZA & Left(Mid(Text, 1, posLF - 2), 78)
                        End If
                            
                        Text = Mid(Text, posLF + 1)
                        pos = 0
                        PosLZ = SatzLen
                    End If
                End If


                If bst = Chr(10) Then      ' Zeilenumbruch char(10)
'GAEB_Zeile "Chr(10)"
                    GAEB_Zeile ZA & Mid(Text, 1, pos - 1)
                    Text = Mid(Text, pos + 1)
                    pos = 0
                    PosLZ = SatzLen
                End If
            
                
                If pos = SatzLen Then     ' Zeilenl|fffd|nge erreicht
'GAEB_Zeile "SatzLen"
                    GAEB_Zeile ZA & Mid(Text, 1, PosLZ)
                    Text = Mid(Text, PosLZ + 1)
                    If Left(Text, 1) = Chr(10) Then
                        Text = Mid(Text, 2)
                    End If
                    pos = 0
                    PosLZ = SatzLen
                End If
            Next i
            
            If pos > 0 Then                 ' ggf. Restzeile schreiben
                GAEB_Zeile ZA & Mid(Text, 1, pos)
            End If
End Sub






'***************************************************************************
'*** Abrechnung() Generiert eine neue Exceldatei mit Ausgew|fffd|hltem Bieter ***
'***************************************************************************
Private Sub Abrechnung()
    Dim BieterNr As Integer
    Dim rng As Variant
    
    Eingabe = InputBox("W|fffd|hlen Sie bitte die Nr. des Vergabebieters. " + Chr(10) + "F|fffd|r den ersten Bieter ist dies die Zahl 1", "Bieter ausw|fffd|hlen", 1, 300, 300)
    If IsNumeric(Eingabe) Then
        'Antwort = MsgBox("Inaktive Positionen mit generieren?", vbYesNo, "Frage")   ' Meldung anzeigen.
        BieterNr = Eingabe
        OZMaske = Cells(5, 7).Value
        freieMenge = Range("I5").Value
        spalten = splitt + 4 + freieMenge
        
        Z = 6
        s = 13 + BieterNr * spalten
        max_z = maxZ
        max_s = maxS
        max_b = maxB
        
        Projekt = Cells(2, 8).Value
        Auftraggeber = "Volkswagen AG"    ' Cells(2, 9).Value
        RequestID = WorksheetFunction.Substitute(Cells(3, 8).Value, " ", "")
        Bieter = onlyBST(Cells(4, s).Value)
        RFQPID = BieterNr
        LV = Cells(6, 8).Value
   
    
    
        ' Datei im gleichen Verzeichnis speichern
        datei = ActiveWorkbook.Path & "\Abrechnung_" & Range("H3").Value & "_" & Year(Now()) & Month(Now()) & Day(Now()) & "-" & Bieter & ".xlsm"  '& ThisWorkbook.Name
        ActiveWorkbook.Save
        
        
        Dim oBar As CommandBar
        Set oBar = Application.CommandBars("Worksheet Menu Bar")
        For i = 1 To oBar.Controls.Count
             If oBar.Controls.Item(i).Caption = "Angebotsvergleich" Then
                oBar.Controls.Item(i).Enabled = False
             End If
             If oBar.Controls.Item(i).Caption = "Abschlagsrechnung" Then
                oBar.Controls.Item(i).Enabled = True
             End If
        Next i

        
        ' Einstellungen vornehmen
        Range("B1").Value = "."                             ' keine |fffd|nderungsverfolgung
        Cells(5, 1).Value = "Rechnung"
        Cells(1, 8).Value = "Abschlagsrechnung"
    
        ' l|fffd|schen der Kommentare
        Cells(3, s + 2).ClearComments       ' Hinweise zur D84
        Cells(6, s).ClearComments           ' GEABsumme
         
        ' l|fffd|schen der restlichen Bieterspalten
        Columns(BstK(s + 3) & ":" & BstK(max_s + 3)).Delete 'Shift:=xlToLeft
        Columns(BstK(11) & ":" & BstK(s - splitt - freieMenge - 2)).Delete
    
        ' LV - Bereich erg|fffd|nzen
        s = 12 + freieMenge + splitt
        Cells(1, s - 1).Value = "Wert AZ:"
        Cells(2, s - 1).Value = "Nachlass:"
        Cells(3, s - 1).Value = "Paketnachlass:"
        With Range(Cells(1, s - 1), Cells(3, s - 1))
            .Font.ColorIndex = 16           ' Antrazit
            .Font.Bold = True
            .Font.Size = 8
            .HorizontalAlignment = xlRight
            '.VerticalAlignment = xlDown
        End With
        
        With Range(Cells(1, s), Cells(3, s))
            .Font.ColorIndex = 11           ' Blau
            .Font.Bold = True
            .Font.Size = 9
            .NumberFormat = "0.0%"
        End With
        Cells(1, s).NumberFormat = "#,##0.00"
        
        bst = BstK(s)
        Cells(1, s).Formula = "=" & bst & "6 * (1-" & bst & "2) * (1-" & bst & "3)"
        Cells(2, s).Value = 0
        Cells(3, s).Value = 0
        
        
        ' Leerspalte als Umbruch-Killer
        s = s + 3
        For Z = 6 To max_z
            Cells(Z, s).Value = " "
        Next Z
        
        ThisWorkbook.SaveAs datei
        'ThisWorkbook.SaveCopyAs datei
        'ThisWorkbook.Close
        'Workbooks.Open datei
        'Windows("Angebotsvergleich_VW2012001826_2012-09-20.xlsm").Activate
        'Workbooks.Open Filename:="D:\PSService\def\psg\Abrechnung_VW2012001826_2012920.xlsm"
        
        Call AbschlagsRechnung
    End If
End Sub



'***************************************************************************
'*** AbschlagsRechnung()  Erstellt eine neue Abschlagrechnung                     ***
'***************************************************************************
Private Sub AbschlagsRechnung()
    Dim rng As Variant
    max_z = maxZ
    max_s = maxS
    max_b = maxB

    Z = 6
    For s = 8 To max_s
        If Left(Cells(5, s).Value, 4) = "GP [" Then
            Exit For
        End If
    Next s
    
    
    rechNr = Left(Cells(4, max_s - 2).Value & "  ", 1)
    If IsNumeric(rechNr) And max_s > 16 Then
        RNr = CInt(rechNr) + 1
    Else
        RNr = 1
    End If
    
    ' LV - Bereich
    
    ' 1. Spalte
    Columns(BstK(s - 1) & ":" & BstK(s - 1)).Select
    Selection.Copy
    Cells(1, max_s + 2).Select
    ActiveSheet.Paste
    
    
    ' 2. Spalte
    Cells(1, max_s + 3).Select
    ActiveSheet.Paste
    
    Cells(1, max_s + 3).Value = "Restwert AZ:"
    Cells(5, max_s + 3).Value = "Menge"
    
    ' 3. Spalte
    Columns(BstK(s) & ":" & BstK(s)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Cells(1, max_s + 4).Select
    ActiveSheet.Paste
    
    
    
    
    ' Kopfdaten bef|fffd|llen
    bstGP = BstK(max_s + 4)
    bstEP = BstK(s - 1) '11 + splitt + Range("J5").Value)
    bstMenge = BstK(max_s + 3)
    
    Columns(BstK(max_s + 2)).Select
    Selection.ColumnWidth = 27
    Selection.HorizontalAlignment = xlLeft

    
    Cells(1, max_s + 2).Value = ""
    Cells(2, max_s + 2).Value = ""
    Cells(3, max_s + 2).Value = ""
    Cells(4, max_s + 2).Value = RNr & ". Abschlagsrechnung"
    Cells(5, max_s + 2).Value = "Einzelmassen"
    
    
    Cells(1, max_s + 4).NumberFormat = "#,##0.00"
    If RNr = 1 Then
        Cells(1, max_s + 4).Formula = "=" & BstK(s) & "1 - " & bstGP & "4"
    Else
        Cells(1, max_s + 4).Formula = "=" & BstK(max_s) & "1 - " & bstGP & "4"
    End If
    Cells(2, max_s + 4).NumberFormat = "#,##0.00"
    Cells(2, max_s + 4).Formula = "=" & bstGP & "6 * " & BstK(s) & "2"
    Cells(3, max_s + 4).NumberFormat = "#,##0.00"
    Cells(3, max_s + 4).Formula = "=(" & bstGP & "6  - " & bstGP & "2) * " & BstK(s) & "3"
    Cells(4, max_s + 4).NumberFormat = "#,##0.00"
    Cells(4, max_s + 4).Formula = "=" & bstGP & "6 - " & bstGP & "3 - " & bstGP & "2"
    
    
    'Cells(5, max_s + 5).Value = "Betrag [EUR]:"
    
    
    ' neue Formeln f|fffd|r den GP bei Positionen
    For Z = 6 To max_z
        If Not IsNumeric(Left(Cells(Z, 1).Value, 1)) Then
            Cells(Z, max_s + 2).Value = ""
            Cells(Z, max_s + 3).Value = ""
            Typ = Left(Cells(Z, 1).Value, 1)
            If InStr("PGOMBAWSZ", Typ) > 0 Then      ' Wenn bepreiste Position
                Cells(Z, max_s + 4).Formula = "=" & bstEP & Z & "*" & bstMenge & Z
            Else
                Cells(Z, max_s + 4).Value = ""
            End If
        End If
        ' Leerspalte als Umbruch-Killer
        Cells(Z, max_s + 5).Value = " "

    Next Z
    
    Cells(1, max_s + 4).Select
End Sub





'**************************************************************************
'**************************************************************************
'*** Allgemeine Funktionen                                              ***
'**************************************************************************
'**************************************************************************

' Ermitteln der letzten Zeile
Function maxZ()
    maxZ = Cells.Find("*", [A1], , , xlByRows, xlPrevious).Row
End Function

' Ermitteln der letzten Spalte
Function maxS()
    maxS = Cells.Find("*", , , , xlByColumns, xlPrevious).Column
End Function

' Ermitteln Anzahl Bieter
Function maxB()
    maxB = Int((maxS - 15) / (4 + Range("I5").Value + splitt))
End Function

' splitt ( max 4 EP-Anteile aus GAEB90 )
Function splitt()
    splitt = Range("J5").Value
End Function


' Buchstabe einer beliebigen Spalte ermitteln
Function BstK(Spalte)
    Dim Wert() As String
    Wert = Split(Cells(1, Spalte).Address, "$")
    BstK = Wert(1)
End Function

' Buchstabe der letzten Spalte
Function lastChar()
    Dim Wert() As String
    Wert = Split(Cells(maxZ, maxS).Address, "$")
    lastChar = Wert(1)
End Function

' Buchstabe und Zeile der letzten Zelle
Function lastCell()
    Dim Wert() As String
    Wert = Split(Cells(maxZ, maxS).Address, "$")
    lastCell = Wert(1) & Wert(2)
End Function



' Unterstrich f|fffd|r |fffd|nderungen
Public Sub Unterstrich(rng As Range)
    With rng.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Color = -13138581
        If Application.Version = "14.0" Or Application.Version = "12.0" Then
            '.TintAndShade = 0
        End If
        .Weight = xlMedium  'xlThin
    End With
End Sub


Sub ExcelVersion()
    Select Case Application.Version
        Case "14.0"
            MsgBox "Excel 2010"
        Case "12.0"
            MsgBox "Excel 2007"
        Case "11.0"
            MsgBox "Excel 2003"
        Case "10.0"
            MsgBox "Excel 2002"
        Case "9.0"
            MsgBox "Excel 2000"
        Case "8.0"
            MsgBox "Excel 97"
        Case Else
            MsgBox "Excel-Version konnte nicht ermittelt werden!"
    End Select
End Sub



Private Sub setComment(zeile, Spalte, Text)
    Dim cmt As Comment
    Set cmt = Cells(zeile, Spalte).Comment
    
    If Len(Trim(Text)) > 0 Then
        If cmt Is Nothing Then
            Cells(zeile, Spalte).AddComment (Text)
        Else
            cmt.Text (cmt.Text + Chr(10) + Text)
        End If
        cmt.Shape.TextFrame.AutoSize = True
    End If
End Sub


Private Function IsInComment(zeile, Spalte, Suche)
    Dim cmt As Comment
    Set cmt = Cells(zeile, Spalte).Comment
    
    If Not cmt Is Nothing Then
        pos = InStr(cmt.Text, Suche)
        If pos > 0 Then
            IsInComment = True
        Else
            IsInComment = False
        End If
    Else
        IsInComment = False
    End If
End Function


Private Sub updateComment(zeile, Spalte, Text, Label)
    Dim cmt As Comment
    Set cmt = Cells(zeile, Spalte).Comment
    vorText = ""
    nachText = ""
    
    If Len(Trim(Text)) > 0 Then
        If cmt Is Nothing Then                  ' kein Kommentar vorhanden
            Text = Label & Chr(10) & Text
            Cells(zeile, Spalte).AddComment (Text)
            Cells(zeile, Spalte).Comment.Shape.TextFrame.AutoSize = True
        Else                                    ' Kommentar vorhanden
            pos = InStr(cmt.Text, Label)
            If pos > 0 Then
                vorText = Left(cmt.Text, pos - 1)
                restText = Mid(cmt.Text, pos + 1)
                pos = InStr(restText, "[")
                If pos > 0 Then
                    nachText = Mid(restText, pos - 1)
                End If
            End If
        
            cmt.Text (vorText & Chr(10) & Label & Chr(10) & Text & Chr(10) & nachText)
            cmt.Shape.TextFrame.AutoSize = True
        End If
    End If
End Sub


Private Function getComment(zeile, Spalte, Label)
    Dim cmt As Comment
    Set cmt = Cells(zeile, Spalte).Comment
    Text = ""
    
    If cmt Is Nothing Then                      ' kein Kommentar vorhanden
        Text = ""
    Else                                        ' Kommentar vorhanden
        pos = InStr(cmt.Text, Label)
        If pos > 0 Then
            restText = Mid(cmt.Text, pos + 1)
            pos = InStr(restText, "[")
            If pos > 0 Then
                restText = Mid(restText, pos - 1)
            End If
            
            pos = InStr(restText, "]")          ' Label entfernen
            If pos > 0 And Len(restText) > pos + 1 Then
                Text = Mid(restText, pos + 2)
            End If
        End If
    End If
     getComment = Text
End Function






Function Best(Bereich As Range) As Variant
   Dim rng As Range
   Dim pos As Integer
   Dim Wert As Double
   Dim dMin As Double

   
   dMin = 999999999
   For Each rng In Bereich.Cells
        If Left(Cells(5, rng.Column).Value, 4) = "EP [" Then
            'If IsNumeric(rng.Value) And rng.Font.Bold = True Then
            Wert = 0
            'If IsNumeric(rng.Value) Then
                If rng.Value <> 0 Then
                    Wert = rng.Value
                End If
            'End If
            'Pos = InStr(rng.Value, "(")
            'If Pos = 0 Then
            '    wert = rng.Value
            'Else
            '    wert = WorksheetFunction.Substitute(WorksheetFunction.Substitute(rng.Value, "(", ""), ")", "")
            'End If
            
            If Wert < dMin And Wert <> 0 Then
                dMin = Wert
            End If
        End If
    Next rng
    
    
    If dMin = 999999999 Then
        Best = 0
    Else
        Best = dMin
    End If
End Function
   

Function Mittel(Bereich As Range) As Double
   Dim rng As Range
   Dim dMittel As Double
   Dim iCounter As Integer
   
   For Each rng In Bereich.Cells
     If Left(Cells(5, rng.Column).Value, 4) = "EP [" Then
         If IsNumeric(rng.Value) Then
             If rng.Value <> 0 Then
                dMittel = dMittel + rng.Value
                iCounter = iCounter + 1
            End If
        End If
      End If
    Next rng
    
    If iCounter = 0 Then
        Mittel = 0
    Else
        Mittel = dMittel / iCounter
    End If
End Function


Public Function onlyBST(Text)
    ' Umwandeln der Sonderzeichen
    textLen = Len(Text)
    NeuText = ""
    Lastpoint = 0
    
    For i = 1 To textLen
        bst = UCase(Mid(Text, i, 1))
        
        If InStr("1234567890_ABCDEFGHIJKLMNOPQRSTUVWXYZ", bst) = 0 Then
            Select Case bst
            Case Is = "|fffd|"
                bst = "AE"
            Case Is = "|fffd|"
                bst = "OE"
            Case Is = "|fffd|"
                bst = "UE"
            Case Is = "|fffd|"
                bst = "SS"
            Case Is = " "
                bst = "_"
            Case Is = "/"
                bst = "_"
            Case Is = "\"
                bst = "_"
            Case Is = "-"
                bst = "_"
            Case Is = "+"
                bst = "und"
            Case Is = "&"
                bst = "und"
            Case Is = "."
                bst = "_"
                Lastpoint = Len(NeuText)
            Case Else
                bst = ""
            End Select
        End If
            
        NeuText = NeuText + bst
    Next i
    
    If Lastpoint = 0 Then
        onlyBST = Right(NeuText, 254)
    Else
        onlyBST = Right(Left(NeuText, Lastpoint) & "." & Mid(NeuText, Lastpoint + 1), 254)
    End If
End Function


Private Function Dos2Win(Text)
    textLen = Len(Text)
    ZeilText = ""
    
    For i = 1 To textLen
        bst = Mid(Text, i, 1)
        
        Select Case bst
        Case Is = Chr(142)
            bst = "|fffd|"
        Case Is = Chr(132)
            bst = "|fffd|"
        Case Is = Chr(153)
            bst = "|fffd|"
        Case Is = Chr(148)
            bst = "|fffd|"
        Case Is = Chr(154)
            bst = "|fffd|"
        Case Is = Chr(129)
            bst = "|fffd|"
        Case Is = Chr(225)
            bst = "|fffd|"
        Case Is = Chr(253)
            bst = "|fffd|"
        Case Is = Chr(252)
            bst = "|fffd|"
        End Select
            
        ZeilText = ZeilText + bst
    Next i
    
   Dos2Win = ZeilText
End Function




Sub Farben()
    Dim lngRed As Long, lngGreen As Long, lngBlue As Long, lngColor As Long
        Range("A1").Select
        Range("A2").Value = Selection.Font.ColorIndex
        Range("A3").Value = Selection.Interior.Color
        
        'MsgBox "FontColor: " & Selection.Font.ColorIndex
        'MsgBox "BGColor: " & Selection.Interior.Color
        
        lngColor = Selection.Interior.Color
        lngRed = lngColor And vbRed
        lngGreen = (lngColor And vbGreen) \ &H100
        lngBlue = (lngColor And vbBlue) \ &H10000
        'Range("H" & i).Value = "R:" & lngRed & " G:" & lngGreen & " B:" & lngBlue
    End Sub


Function TypName(Typ As String)
    Select Case Typ
    Case "0"
        TypName = "Vorgang" ' / Leistungsverzeichnis
    Case "1"
        TypName = "Gewerk"
    Case "2"
        TypName = "Titel"
    Case "3"
        TypName = "Abschnitt"
    Case "4"
        TypName = "Teil"
    Case "V"
        TypName = "Vorbemekung"
    Case "H"
        TypName = "Hinweistext"
    Case "N"
        TypName = "Nachspann"
    Case "P"
        TypName = "Position"
    Case "B"
        TypName = "Bedarfsposition ohne GP"
    Case "O"
        TypName = "Optionalposition mit GP"
    Case "G"
        TypName = "Grundposition"
    Case "A"
        TypName = "Alternativposition" ' Wahlposition
    Case "b"
        TypName = "Bedarfsposition ohne GP"
    Case Else
        TypName = "unbekannt"
    End Select
End Function







Attribute VB_Name = "Impressum"
Attribute VB_Base = "0{6308990F-3AD3-49BC-8D10-25AB960357C9}{903D7EDA-208B-4490-A29E-5F86C7313B8E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub OK_Click()
    Unload Me
End Sub
Attribute VB_Name = "Schwerpunktfilter"
Attribute VB_Base = "0{F6349C2F-A223-42C8-9065-6B005E7F68E2}{3D278146-DEC0-4BF5-AE47-862A8732DBA8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub Alle_Click()
    Me.Label2.Enabled = False
    Me.SumSchwPkt.Enabled = False
    Me.Label30.Enabled = False
    Me.Bieter1.Enabled = False
    
    Bieter1_Click
End Sub


Private Sub Auswahl_Click()
    Me.Label2.Enabled = True
    Me.SumSchwPkt.Enabled = True
    Me.Label30.Enabled = True
    Me.Bieter1.Enabled = True
    
    Bieter1_Click
End Sub



Private Sub Bieter1_Click()
    If Me.Bieter1 Then
        Me.Label32.Enabled = True
        Me.Abweichung.Enabled = True
        Me.Label33.Enabled = True
    Else
        Me.Label32.Enabled = False
        Me.Abweichung.Enabled = False
        Me.Label33.Enabled = False
    End If
End Sub


Private Sub Filtersetzen_Click()
    If Not IsNumeric(Me.SumSchwPkt.Value) Then
        MsgBox "F|fffd|r den Gesamtpreis sind nur Zahlen von 1 bis 10000000 m|fffd|glich!"
        Exit Sub
    End If
    If Not IsNumeric(Me.Abweichung.Value) Then
        MsgBox "F|fffd|r die Abweichung sind nur Zahlen von 1 bis 100 m|fffd|glich!"
        Exit Sub
    End If
    
    If Me.Alle.Value Then
        Me.SumSchwPkt.Value = 0
    End If
    
    SchwerpunkteSetzen Me.SumSchwPkt.Value, Me.Bieter1.Value, Me.Abweichung.Value
    
    Unload Me
End Sub


Private Sub Abbrechen_Click()
    Unload Me
End Sub

Attribute VB_Name = "SpecValueModule"
Sub specValueInitLogo()
  Dim companyCode As String
  companyCode = Tabelle2.Cells(1, 1).Value
  
  grafikName = "Grafik" & companyCode

    For i = 1 To Tabelle2.Shapes.Count
        ' MsgBox ActiveSheet.Shapes(i).Name
            If StrComp(Tabelle2.Shapes(i).Name, grafikName) = 0 Then
                Tabelle2.Shapes(i).Visible = True
            Else
                Tabelle2.Shapes(i).Visible = False
            End If
    Next i
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

'******************************************************************'
' PS-Service (c) 2010                                              '
' Erstellt am:     24.02.2010  Dipl.-Ing. Horst Becker (K-SIE 3/3) '
' Letzte |fffd|nderung: 18.06.2012                                      '
'******************************************************************'

Dim activCell As String
Dim activValue As Variant


Private Sub Worksheet_Activate()
    ' *** Speichern der aktiven zelle *** '
    activCell = ActiveCell.Address
    activValue = ActiveCell.Value
    
    CommandBars("Worksheet menu bar").Controls("Angebotsvergleich").Enabled = True
    CommandBars("Worksheet menu bar").Controls("Abschlagsrechnung").Enabled = True
 
    ' *** ggf. Menue "Export D86" deaktivieren *** '
    If Left(Cells(5, 1).Value, 4) = "GAEB" Then
        Set myCmd = CommandBars("Worksheet menu bar").Controls("Angebotsvergleich")
        myCmd.Controls("Export D86 (GAEB90)").Enabled = True
    End If
    
    
    ' Standardeinstellungen
    Application.ReferenceStyle = xlA1       ' xlR1C1
End Sub


Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Z = Target.Row
    
    ' *** Haken f|fffd|r Aktivsetzung *** '
    If Target.Column = 5 Then
        Application.ScreenUpdating = False
        Application.EnableEvents = False
        max_z = Cells.Find("*", [A1], , , xlByRows, xlPrevious).Row
        max_s = Cells.Find("*", , , , xlByColumns, xlPrevious).Column
        pRow = Range("B" & Z).Value

        If Not IsEmpty(pRow) Then
            Typ = Left(Range("A" & Z).Value, 1)
            If InStr("NPZGOMBAW", Typ) > 0 Then      ' Bedarf w|fffd|hlbar
                Range("E" & Z).Select
                If Selection.Value = "|fffd|" Then
                    Selection.Value = "s"
                    'pRow = Range("B" & Z).Value
                    Unterstrich Target
                   
                    For s = 10 To max_s
                        If Left(Cells(5, s).Value, 4) = "GP [" Then
                            Cells(Z, s).NumberFormat = "(#,##0.00);[Red](-#,##0.00)"    'Chr(34) & "(#.##0,00)|fffd|" & Chr(34)
                            Cells(pRow, s).Select
                            partFormel = "+" & BstK(s) & Z & "+"
                            formel = Selection.Formula & "+"
                            formel = WorksheetFunction.Substitute(formel, partFormel, "+")
                            If Right(formel, 1) = "+" Then
                                formel = Left(formel, Len(formel) - 1)
                            End If
                            If Right(formel, 1) = "=" Then
                                formel = ""
                            End If
                            Selection.Formula = formel

                        End If
                    Next s
                    
                Else
                    Selection.Value = "|fffd|"
                    'pRow = Range("B" & Z).Value
                    Unterstrich Target
                    
                    For s = 10 To max_s
                        If Left(Cells(5, s).Value, 4) = "GP [" Then
                            Cells(Z, s).NumberFormat = "#,##0.00_);[Red]-#,##0.00_)"
                            Cells(pRow, s).Select
                            bst = BstK(s)
                        
                            If Len(Selection.Formula) > 0 Then
                                Selection.Formula = Selection.Formula & "+" & bst & Z
                            Else
                                Selection.Formula = "=+" & bst & Z
                            End If
                            
                        End If
                    Next s
                
                End If
            End If
            
            Range("H" & Z).Select
        End If
        Application.EnableEvents = True
        Application.ScreenUpdating = True
    End If
    
        
    
    ' *** letzten Wert merken *** '
    activCell = Target.Address
    If InStr(activCell, ":") > 0 Then
        activValue = "Excel-Fehler: " & Err.Number
    Else
        activValue = Target.Value
    End If
End Sub



Private Sub Worksheet_Change(ByVal Target As Range)
    If Range("B1").Value <> "." Then
        If Target.Column > 8 And Cells(4, Target.Column).Value <> "TP" Then
            'If Len(activCell) = 0 Then
            '    activCell = Activ_Cell()
            '    activValue = Activ_Value()
            'End If
            
            If InStr(activCell, ":") > 0 Then
                MsgBox "Change: " & activCell
                
            Else
                Dim cmt As Comment
                Set cmt = Range(activCell).Comment
                
                If Len(Trim(activValue)) > 0 Then
                    Text = "alter Wert: " & activValue
                    If cmt Is Nothing Then
                        Range(activCell).AddComment (Text)
                        Range(activCell).Comment.Shape.TextFrame.AutoSize = True
                    Else
                        cmt.Text (cmt.Text & Chr(10) & Text)
                        cmt.Shape.TextFrame.AutoSize = True
                    End If
                        
                    'Unterstrich Target
                End If
            End If
        End If
    End If
End Sub



Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim activCell As String
Dim activValue As Variant

Private Sub Worksheet_Activate()
    ' *** Speichern der aktiven zelle *** '
    activCell = ActiveCell.Address
    activValue = ActiveCell.Value
    
   CommandBars("Worksheet menu bar").Controls("Angebotsvergleich").Enabled = False
   CommandBars("Worksheet menu bar").Controls("Abschlagsrechnung").Enabled = False
    ' Standardeinstellungen
    Application.ReferenceStyle = xlA1
End Sub



INQUEST-PP=macro
