Attribute VB_Name = "Module1"
Option Explicit
Public Const ProtectPW As String = "miamicsa148course"
Public Const Term As String = "CSE_F_2013"
Public Const Map As String = "78FED102B6A5394C"


Public gFirstName As String
Public gLastName As String
Public gUserName As String
Public gFileCode As String

'Const RPC_S_OK = &H0
'Const RPC_S_UUID_LOCAL_ONLY = &H720
'Const RPC_S_UUID_NO_ADDRESS = &H6CB
'Private Type UUID
'    Data1 As Long
'    Data2 As Integer
'    Data3 As Integer
'    Data4(7) As Byte
'End Type
'
'Private Declare Function UuidCreate Lib "rpcrt4" (lpUUID As UUID) As Long
'Private Declare Function UuidCreateSequential Lib "rpcrt4" (lpUUID As UUID) As Long
'Private Declare Function UuidToString Lib "rpcrt4" Alias "UuidToStringA" (lpUUID As UUID, lpUUIDString As Long) As Long
'Private Declare Function RpcStringFree Lib "rpcrt4" Alias "RpcStringFreeA" (lpUUIDString As Long) As Long
'Private Declare Function lstrlen Lib "kernel32" Alias "lstrlenA" (ByVal lpString As Long) As Long
'Private Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (lpDest As Any, lpSource As Any, ByVal cBytes As Long)



Public Function CreateUUID() As String

    Dim i As Integer
    Randomize Timer
    
    ' 8
    For i = 1 To 8
        CreateUUID = CreateUUID & Mid(Map, Int(Rnd * Len(Map)) + 1, 1)
    Next i
    CreateUUID = CreateUUID & "-"
    
    ' 4
    For i = 1 To 4
        CreateUUID = CreateUUID & Mid(Map, Int(Rnd * Len(Map)) + 1, 1)
    Next i
    CreateUUID = CreateUUID & "-"
    
    ' 4
    For i = 1 To 4
        CreateUUID = CreateUUID & Mid(Map, Int(Rnd * Len(Map)) + 1, 1)
    Next i
    CreateUUID = CreateUUID & "-"
    
    ' 4
    For i = 1 To 4
        CreateUUID = CreateUUID & Mid(Map, Int(Rnd * Len(Map)) + 1, 1)
    Next i
    CreateUUID = CreateUUID & "-"
    
    ' 12
    For i = 1 To 12
        CreateUUID = CreateUUID & Mid(Map, Int(Rnd * Len(Map)) + 1, 1)
    Next i
    
    
    
    
    
    
'  Dim NewID As UUID, NewIDPointer As Long
'
'  'Create a new UUID
'  If UuidCreate(NewID) = RPC_S_OK Then
'    'Convert it to a string
'    If UuidToString(NewID, NewIDPointer) = RPC_S_OK Then
'      'Get the length of the string and create a buffer
'      CreateUUID = Space(lstrlen(NewIDPointer))
'      'Copy the string to the buffer
'      CopyMemory ByVal CreateUUID, ByVal NewIDPointer, Len(CreateUUID)
'      'Remove the string from the memory
'      RpcStringFree NewIDPointer
'      'Convert the buffer to upper case
'      CreateUUID = UCase$(CreateUUID)
'    End If
'  End If
End Function

Public Function UnlockSheet()
    On Error Resume Next
    ActiveSheet.Unprotect Password:=ProtectPW
End Function

Public Function LockSheet()
    On Error Resume Next
    ActiveSheet.Protect Password:=ProtectPW
End Function

Public Function ResetWorkbook()
    On Error Resume Next
    
    Dim sh As Object

    ' All is good so unprotect cells so they can begin working
    For Each sh In ThisWorkbook.Sheets
        sh.Unprotect ProtectPW
    Next sh

    ' Document Sheet
    Registration.Cells(3, 2) = ""
    Registration.Cells(4, 2) = ""
    Registration.Cells(5, 2) = ""
    Registration.Cells(6, 2) = ""
    Registration.Cells(7, 2) = ""
    
    ' Document Sheet (hidden)
    Registration.Cells(100, 2) = ""
    Registration.Cells(101, 2) = ""
    Registration.Cells(102, 2) = ""
    Registration.Cells(103, 2) = ""   'Term:
    Registration.Cells(100, 3) = ""
    Registration.Cells(101, 3) = ""
    Registration.Cells(102, 3) = ""
    Registration.Cells(103, 3) = ""   'Term value
    
    ' Document Sheet Red Highlight
    Registration.Cells(1, 1).Interior.ColorIndex = 0
    Registration.Cells(1, 2).Interior.ColorIndex = 0
    
    ' Document Sheet Comment
    Registration.Range("B5").ClearComments
    
    ' Security Sheet
    Security.Cells(3, 2) = ""
    Security.Cells(4, 2) = ""
    Security.Cells(5, 2) = ""
    Security.Cells(6, 2) = ""

    ' Document properties
    ActiveWorkbook.BuiltinDocumentProperties("Author") = ""
    ActiveWorkbook.BuiltinDocumentProperties("Comments") = ""
    ActiveWorkbook.CustomDocumentProperties("Owner") = "System"
    ActiveWorkbook.CustomDocumentProperties("Client") = "System"

End Function


'Function DocProps(prop As String)
'    Application.Volatile
'    On Error GoTo err_value
'    DocProps = ActiveWorkbook.BuiltinDocumentProperties(prop)
'    Exit Function
'err_value:
'    DocProps = CVErr(xlErrValue)
'End Function












Attribute VB_Name = "Registration"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Security"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private sh As Excel.Worksheet

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    On Error Resume Next
    
    Security.Visible = xlSheetVeryHidden
    
    For Each sh In ThisWorkbook.Sheets
        sh.Unprotect ProtectPW
        sh.Cells.Select
        Selection.Locked = True
        sh.Protect ProtectPW
    Next
    Registration.Cells(1, 1).Select
End Sub

Private Sub Workbook_Open()
    
    Security.Visible = xlSheetVeryHidden
'    Dim A As String
'    Dim B As String
'    Dim C As String
'    Dim comm As String
'    Dim parts() As String
    
    On Error Resume Next
'    comm = Registration.Cells(5, 2).Comment
'    parts = Split(comm, Chr(10))
'    A = Replace(parts(0), "File created by: ", "")
'    C = Replace(parts(2), "Code: ", "")
    
    ' If the cells on the security tab are clear then show the loging window
    If Security.Cells(3, 2) = "" Then
        frmInitWindow.Show vbModal
        
    ' The cells on security tab are not empty but are not the same as the document tab (something was changed)
    ElseIf (Registration.Cells(3, 2) <> Security.Cells(3, 2)) Or _
           (Registration.Cells(5, 2) <> Security.Cells(5, 2)) Or _
           (Registration.Cells(6, 2) <> Security.Cells(6, 2)) Or _
           (Registration.Cells(3, 2) <> Registration.Cells(100, 2)) Or _
           (Registration.Cells(5, 2) <> Registration.Cells(102, 2)) Or _
           (Registration.Cells(6, 2) <> Registration.Cells(103, 2)) Then
           
            Registration.Unprotect ProtectPW
            Registration.Cells(1, 1).Interior.ColorIndex = 3
            Registration.Cells(1, 2).Interior.ColorIndex = 3
        
        ' What do we want to do here
        'MsgBox "If this message is showing that means the user changed something on the Document page"
    End If

    
    For Each sh In ThisWorkbook.Sheets
        sh.Unprotect ProtectPW
    Next
    
    Security.Protect ProtectPW

End Sub








Attribute VB_Name = "frmInitWindow"
Attribute VB_Base = "0{F1D6422D-1F04-4189-8EA6-3C1032C6E60B}{5B342B47-F702-4189-89FC-C239EDC9E7BD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdCancel_Click()
    ThisWorkbook.Close False
End Sub

Private Function VerifyForm() As Boolean
    VerifyForm = Not ((chkAgree.Value = 0) Or _
                        (Trim(txtFirstName.Text) = "") Or _
                        (Trim(txtLastName.Text) = "") Or _
                        (Trim(txtUserName.Text) = "") _
                     )
End Function

Private Sub cmdDone_Click()
    
    Dim n As Date
    Dim sh As Object
    n = Now
    
'    ' unlock all the cells
'    Cells.Select
'    On Error Resume Next
'    Selection.Locked = False

    ' All is good so unprotect cells so they can begin working
    For Each sh In ThisWorkbook.Sheets
        sh.Unprotect ProtectPW
    Next sh
    
    gFirstName = txtFirstName.Text
    gLastName = txtLastName.Text
    gUserName = txtUserName.Text
    gFileCode = txtFileCode.Text

    ' Document Sheet
    Registration.Cells(3, 2) = gFirstName & " " & gLastName & " (" & gUserName & ")"
    Registration.Cells(4, 2) = n
    Registration.Cells(5, 2) = gFileCode
    Registration.Cells(6, 2) = Term
    
    ' Document Sheet (hidden)
    Registration.Cells(100, 2) = gFirstName & " " & gLastName & " (" & gUserName & ")"
    Registration.Cells(101, 2) = n
    Registration.Cells(102, 2) = gFileCode
    Registration.Cells(103, 2) = Term
    
    Registration.Cells(100, 3) = " "
    Registration.Cells(101, 3) = " "
    Registration.Cells(102, 3) = " "
    Registration.Cells(103, 3) = " "
    
    
    ' Security Sheet
    Security.Cells(3, 2) = gFirstName & " " & gLastName & " (" & gUserName & ")"
    Security.Cells(4, 2) = n
    Security.Cells(5, 2) = gFileCode
    Security.Cells(6, 2) = Term


    ' Document properties
    ActiveWorkbook.BuiltinDocumentProperties("Author") = gFirstName & " " & gLastName & " (" & gUserName & ")"
    ActiveWorkbook.BuiltinDocumentProperties("Comments") = gFirstName & " " & gLastName & ", you have agreed to the following: " & Chr(10) & _
                                                           "I certify that this document represent my own original work, wholly created by me, and that I will not permit another person to copy or use my work in any form for their assignment."
    ActiveWorkbook.CustomDocumentProperties("Owner") = gFirstName & " " & gLastName & " (" & gUserName & ")"
    ActiveWorkbook.CustomDocumentProperties("Client") = gFileCode
    
    
    Dim r As Range
    Dim c As Comment
    Set r = Registration.Range("B5")
    Set c = r.AddComment("File created by: " & gFirstName & " " & gLastName & " (" & gUserName & ")" & Chr(10) & _
              "Date: " & n & Chr(10) & _
              "Code: " & gFileCode & Chr(10) & _
              "Term: " & Term)
    
    With c
        .Visible = False
        .Shape.Left = .Parent.Left
        .Shape.Top = .Parent.Top
        '.Shape.Width = 200
        CellLocker "B5"
    End With
    
    
    '==========================================
    ' Make text white for sheet 1 hidden cells
    '==========================================
'    Registration.Cells(100, 2).Select
'    ActiveCell.Characters.Font.Color = RGB(255, 255, 255)
'    Registration.Cells(101, 2).Select
'    ActiveCell.Characters.Font.Color = RGB(255, 255, 255)
'    Registration.Cells(102, 2).Select
'    ActiveCell.Characters.Font.Color = RGB(255, 255, 255)
'    Registration.Cells(103, 2).Select
'    ActiveCell.Characters.Font.Color = RGB(255, 255, 255)
    
    Sheet1.Activate
    Sheet1.Cells(1, 1).Select
    
    Unload Me
End Sub

Private Sub cmdGenerateCode_Click()
    
    If VerifyForm Then
        txtFileCode.Locked = False
        txtFileCode.Text = CreateUUID
        txtFileCode.Locked = True
        cmdGenerateCode.Enabled = False
        cmdDone.Enabled = True
    Else
        MsgBox "You must fill out the form before you can move on.", vbOKOnly, "Missing Data"
    End If
End Sub

Sub CellLocker(SelectedRange As String)
    Cells.Select
    ' unlock all the cells
    On Error Resume Next
    Selection.Locked = False
    ' next, select the cells (or range) that you want to make read only,
    ' here I used simply A1
    Range(SelectedRange).Select
    ' lock those cells
    Selection.Locked = True
    ' now we need to protect the sheet to restrict access to the cells.
    ' I protected only the contents you can add whatever you want
    ActiveSheet.Protect DrawingObjects:=False, Contents:=False, Scenarios:=False
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then Cancel = True
End Sub







INQUEST-PP=macro
